{"func_name": 12, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import argparse\nfrom ipaddress import ip_address\nimport json\nimport requests\nimport sys\n\nREGIONS = [{'ORD135': {\n            \"glance_default_store\": \"swift\",\n            \"neutron_l2_population\": True,\n            \"tempest_public_subnet_cidr\": \"192.168.1.0/22\",\n            \"nova_console_type\": \"novnc\"}},\n           {'DFW': {\n            \"glance_default_store\": \"swift\",\n            \"neutron_l2_population\": True,\n            \"tempest_public_subnet_cidr\": \"192.168.4.0/22\",\n            \"nova_console_type\": \"novnc\"}}]\n\nCELLS = [{'C0001': {\"cell_capabilities\": \"flavor_classes=performance2\",\n                    \"console_host\": \"10.10.1.100\"}},\n         {'C0002': {\"cell_capabilities\": \"flavor_classes=performance1\",\n                    \"console_host\": \"10.20.1.100\"}}]\n\n\ndef make_hosts(region, cell):\n    # no of hosts need to match ip_address available\n    no_of_hosts = 2\n    cab1 = region + \".\" + cell + \".\" + \"C-1\"\n    cab2 = region + \".\" + cell + \".\" + \"C-2\"\n\n    hosts = []\n    for host in range(no_of_hosts):\n        hostname = \"host%s.%s.example1.com\" % (host, cab1)\n        hosts.append(hostname)\n\n    for host in range(no_of_hosts):\n        hostname = \"host%s.%s.example2.com\" % (host, cab2)\n        hosts.append(hostname)\n\n    return hosts\n\n\nclass Inventory(object):\n    def __init__(self, url, project_id, auth_user, auth_key):\n        self.url = url\n        self.auth_user = auth_user\n        self.auth_key = auth_key\n        self.project_id = project_id\n        self.region = None\n        self.cell = None\n        self.ip_addresses = self.generate_ip_addresses(16)", "func_src_after": "import argparse\nfrom ipaddress import ip_address\nimport json\nimport requests\nimport sys\n\nREGIONS = [{'ORD135': {\n            \"glance_default_store\": \"swift\",\n            \"neutron_l2_population\": True,\n            \"tempest_public_subnet_cidr\": \"<IP-Address>/22\",\n            \"nova_console_type\": \"novnc\"}},\n           {'DFW': {\n            \"glance_default_store\": \"swift\",\n            \"neutron_l2_population\": True,\n            \"tempest_public_subnet_cidr\": \"<IP-Address>/22\",\n            \"nova_console_type\": \"novnc\"}}]\n\nCELLS = [{'C0001': {\"cell_capabilities\": \"flavor_classes=performance2\",\n                    \"console_host\": \"<IP-Address>\"}},\n         {'C0002': {\"cell_capabilities\": \"flavor_classes=performance1\",\n                    \"console_host\": \"<IP-Address>\"}}]\n\n\ndef make_hosts(region, cell):\n    # no of hosts need to match ip_address available\n    no_of_hosts = 2\n    cab1 = region + \".\" + cell + \".\" + \"C-1\"\n    cab2 = region + \".\" + cell + \".\" + \"C-2\"\n\n    hosts = []\n    for host in range(no_of_hosts):\n        hostname = \"host%s.%s.example1.com\" % (host, cab1)\n        hosts.append(hostname)\n\n    for host in range(no_of_hosts):\n        hostname = \"host%s.%s.example2.com\" % (host, cab2)\n        hosts.append(hostname)\n\n    return hosts\n\n\nclass Inventory(object):\n    def __init__(self, url, project_id, auth_user, auth_key):\n        self.url = url\n        self.auth_user = auth_user\n        self.auth_key = auth_key\n        self.project_id = project_id\n        self.region = None\n        self.cell = None\n        self.ip_addresses = self.generate_ip_addresses(16)", "line_changes": {"deleted": [{"line_no": 10, "char_start": 201, "char_end": 261, "line": "            \"tempest_public_subnet_cidr\": \"192.168.1.0/22\",\n"}, {"line_no": 16, "char_start": 415, "char_end": 475, "line": "            \"tempest_public_subnet_cidr\": \"192.168.4.0/22\",\n"}, {"line_no": 21, "char_start": 593, "char_end": 646, "line": "                    \"console_host\": \"10.10.1.100\"}},\n"}, {"line_no": 24, "char_start": 719, "char_end": 772, "line": "                    \"console_host\": \"10.20.1.100\"}}]\n"}], "added": [{"line_no": 11, "char_start": 201, "char_end": 262, "line": "            \"tempest_public_subnet_cidr\": \"<IP-Address>/22\",\n"}, {"line_no": 17, "char_start": 415, "char_end": 476, "line": "            \"tempest_public_subnet_cidr\": \"<IP-Address>/22\",\n"}, {"line_no": 22, "char_start": 593, "char_end": 647, "line": "                    \"console_host\": \"<IP-Address>\"}},\n"}, {"line_no": 25, "char_start": 719, "char_end": 773, "line": "                    \"console_host\": \"<IP-Address>\"}}]\n"}]}, "char_changes": {"deleted": [{"char_start": 201, "char_end": 261, "chars": "            \"tempest_public_subnet_cidr\": \"192.168.1.0/22\",\n"}, {"char_start": 415, "char_end": 475, "chars": "            \"tempest_public_subnet_cidr\": \"192.168.4.0/22\",\n"}, {"char_start": 593, "char_end": 646, "chars": "                    \"console_host\": \"10.10.1.100\"}},\n"}, {"char_start": 719, "char_end": 772, "chars": "                    \"console_host\": \"10.20.1.100\"}}]\n"}], "added": [{"char_start": 201, "char_end": 262, "chars": "            \"tempest_public_subnet_cidr\": \"<IP-Address>/22\",\n"}, {"char_start": 415, "char_end": 476, "chars": "            \"tempest_public_subnet_cidr\": \"<IP-Address>/22\",\n"}, {"char_start": 593, "char_end": 647, "chars": "                    \"console_host\": \"<IP-Address>\"}},\n"}, {"char_start": 719, "char_end": 773, "chars": "                    \"console_host\": \"<IP-Address>\"}}]\n"}]}}
{"func_name": 22, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# encoding: utf-8\r\n\r\nimport uuid\r\nfrom gevent import pywsgi\r\nfrom kubernetes import client, config\r\nfrom kubernetes.leaderelection import leaderelection\r\nfrom kubernetes.leaderelection.resourcelock.configmaplock import ConfigMapLock\r\nfrom kubernetes.leaderelection import electionconfig\r\nfrom conf import *\r\nfrom app import app\r\n\r\n\r\nconfig.load_kube_config(config_file=K8S_CONFIG)\r\n\r\ncandidate_id = uuid.uuid4()\r\n\r\nlock_name = \"python-demo\"\r\n\r\nlock_namespace = \"default\"\r\n\r\n\r\ndef on_start():\r\n    print(\"I am leader now\")\r\n    server = pywsgi.WSGIServer(('0.0.0.0', SERVICE_PORT), app)\r\n    server.serve_forever()\r\n\r\n\r\nif __name__ == '__main__':\r\n    config = electionconfig.Config(ConfigMapLock(lock_name, lock_namespace, candidate_id), lease_duration=17,\r\n                               renew_deadline=15, retry_period=5, onstarted_leading=on_start,\r\n                               onstopped_leading=None)\r\n\r\n    leaderelection.LeaderElection(config).run()\r\n    print(\"Exited leader election\")\r\n", "func_src_after": "# encoding: utf-8\r\n\r\nimport uuid\r\nfrom gevent import pywsgi\r\nfrom kubernetes import client, config\r\nfrom kubernetes.leaderelection import leaderelection\r\nfrom kubernetes.leaderelection.resourcelock.configmaplock import ConfigMapLock\r\nfrom kubernetes.leaderelection import electionconfig\r\nfrom conf import *\r\nfrom app import app\r\n\r\n\r\nconfig.load_kube_config(config_file=K8S_CONFIG)\r\n\r\ncandidate_id = uuid.uuid4()\r\n\r\nlock_name = \"python-demo\"\r\n\r\nlock_namespace = \"default\"\r\n\r\n\r\ndef on_start():\r\n    print(\"I am leader now\")\r\n    server = pywsgi.WSGIServer(('<IP-Address>', SERVICE_PORT), app)\r\n    server.serve_forever()\r\n\r\n\r\nif __name__ == '__main__':\r\n    config = electionconfig.Config(ConfigMapLock(lock_name, lock_namespace, candidate_id), lease_duration=17,\r\n                               renew_deadline=15, retry_period=5, onstarted_leading=on_start,\r\n                               onstopped_leading=None)\r\n\r\n    leaderelection.LeaderElection(config).run()\r\n    print(\"Exited leader election\")\r\n", "line_changes": {"deleted": [{"line_no": 24, "char_start": 523, "char_end": 587, "line": "    server = pywsgi.WSGIServer(('0.0.0.0', SERVICE_PORT), app)\r\n"}], "added": [{"line_no": 25, "char_start": 523, "char_end": 592, "line": "    server = pywsgi.WSGIServer(('<IP-Address>', SERVICE_PORT), app)\r\n"}]}, "char_changes": {"deleted": [{"char_start": 523, "char_end": 587, "chars": "    server = pywsgi.WSGIServer(('0.0.0.0', SERVICE_PORT), app)\r\n"}], "added": [{"char_start": 523, "char_end": 592, "chars": "    server = pywsgi.WSGIServer(('<IP-Address>', SERVICE_PORT), app)\r\n"}]}}
{"func_name": 83, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import datetime\nfrom django.test import TestCase\nfrom django.urls import reverse\nfrom django.contrib.auth import get_user_model\n\nfrom core.models import CarbureLot, CarbureStock, MatierePremiere, Biocarburant, Pays, Entity, ProductionSite, Depot, UserRights\nfrom api.v3.common.urls import urlpatterns\nfrom django_otp.plugins.otp_email.models import EmailDevice\nfrom api.v4.tests_utils import get_lot\n\n\nclass LotsCertifMayhemTest(TestCase):\n    fixtures = [\n        'json/biofuels.json',\n        'json/feedstock.json',\n        'json/countries.json',\n        'json/depots.json',\n        'json/entities.json',\n        'json/productionsites.json',\n    ]\n\n\n    def setUp(self):\n        user_model = get_user_model()\n        # let's create a user\n        self.password = 'totopouet'\n        self.user1 = user_model.objects.create_user(email='testuser1@toto.com', name='Le Super Testeur 1', password=self.password)\n        loggedin = self.client.login(username=self.user1.email, password=self.password)\n        self.assertTrue(loggedin)\n\n        self.producer = Entity.objects.filter(entity_type=Entity.PRODUCER)[0]\n        self.producer.default_certificate = \"PRODUCER_CERTIFICATE\"\n        self.producer.save()\n\n        self.trader = Entity.objects.filter(entity_type=Entity.TRADER)[0]\n        self.trader.default_certificate = \"TRADER_CERTIFICATE\"\n        self.trader.save()\n        self.operator = Entity.objects.filter(entity_type=Entity.OPERATOR)[0]\n        UserRights.objects.update_or_create(entity=self.producer, user=self.user1, role=UserRights.RW)\n        UserRights.objects.update_or_create(entity=self.trader, user=self.user1, role=UserRights.RW)\n        UserRights.objects.update_or_create(entity=self.operator, user=self.user1, role=UserRights.RW)\n\n        # pass otp verification\n        response = self.client.post(reverse('api-v4-request-otp'))\n        self.assertEqual(response.status_code, 200)\n        device, created = EmailDevice.objects.get_or_create(user=self.user1)\n        response = self.client.post(reverse('api-v4-verify-otp'), {'otp_token': device.token})\n        self.assertEqual(response.status_code, 200)\n\n    def create_draft(self, lot=None, **kwargs):", "func_src_after": "import datetime\nfrom django.test import TestCase\nfrom django.urls import reverse\nfrom django.contrib.auth import get_user_model\n\nfrom core.models import CarbureLot, CarbureStock, MatierePremiere, Biocarburant, Pays, Entity, ProductionSite, Depot, UserRights\nfrom api.v3.common.urls import urlpatterns\nfrom django_otp.plugins.otp_email.models import EmailDevice\nfrom api.v4.tests_utils import get_lot\n\n\nclass LotsCertifMayhemTest(TestCase):\n    fixtures = [\n        'json/biofuels.json',\n        'json/feedstock.json',\n        'json/countries.json',\n        'json/depots.json',\n        'json/entities.json',\n        'json/productionsites.json',\n    ]\n\n\n    def setUp(self):\n        user_model = get_user_model()\n        # let's create a user\n        self.password = 'totopouet'\n        self.user1 = user_model.objects.create_user(email='<EMAIL>', name='Le Super Testeur 1', password=self.password)\n        loggedin = self.client.login(username=self.user1.email, password=self.password)\n        self.assertTrue(loggedin)\n\n        self.producer = Entity.objects.filter(entity_type=Entity.PRODUCER)[0]\n        self.producer.default_certificate = \"PRODUCER_CERTIFICATE\"\n        self.producer.save()\n\n        self.trader = Entity.objects.filter(entity_type=Entity.TRADER)[0]\n        self.trader.default_certificate = \"TRADER_CERTIFICATE\"\n        self.trader.save()\n        self.operator = Entity.objects.filter(entity_type=Entity.OPERATOR)[0]\n        UserRights.objects.update_or_create(entity=self.producer, user=self.user1, role=UserRights.RW)\n        UserRights.objects.update_or_create(entity=self.trader, user=self.user1, role=UserRights.RW)\n        UserRights.objects.update_or_create(entity=self.operator, user=self.user1, role=UserRights.RW)\n\n        # pass otp verification\n        response = self.client.post(reverse('api-v4-request-otp'))\n        self.assertEqual(response.status_code, 200)\n        device, created = EmailDevice.objects.get_or_create(user=self.user1)\n        response = self.client.post(reverse('api-v4-verify-otp'), {'otp_token': device.token})\n        self.assertEqual(response.status_code, 200)\n\n    def create_draft(self, lot=None, **kwargs):", "line_changes": {"deleted": [{"line_no": 27, "char_start": 777, "char_end": 908, "line": "        self.user1 = user_model.objects.create_user(email='testuser1@toto.com', name='Le Super Testeur 1', password=self.password)\n"}], "added": [{"line_no": 28, "char_start": 777, "char_end": 897, "line": "        self.user1 = user_model.objects.create_user(email='<EMAIL>', name='Le Super Testeur 1', password=self.password)\n"}]}, "char_changes": {"deleted": [{"char_start": 777, "char_end": 908, "chars": "        self.user1 = user_model.objects.create_user(email='testuser1@toto.com', name='Le Super Testeur 1', password=self.password)\n"}], "added": [{"char_start": 777, "char_end": 897, "chars": "        self.user1 = user_model.objects.create_user(email='<EMAIL>', name='Le Super Testeur 1', password=self.password)\n"}]}}
{"func_name": 86, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            self.requester.getCollections()\n\n    def test_getCollectionSuccess(self):\n        # Arrange\n        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n        self.requester.requests = MockRequests(200)\n\n        # Act\n        result = self.requester.getCollection(\"fakeCollectionId\")\n\n        # Assert\n        self.assertEqual(self.requester.requests.auth, self.auth)\n        self.assertEqual(self.requester.requests.url, 'https://favro.com/api/v1/collections/fakeCollectionId')\n        self.assertEqual(self.requester.requests.headers, {'organizationId': 'organizationId'})\n\n    def test_getCollectionError(self):\n        # Arrange\n        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n        self.requester.requests = MockRequests(400)\n\n        # Act/Assert\n        with self.assertRaisesRegex(Exception, 'Get collection request returned 400 code'):\n            self.requester.getCollection(\"collectionId\")\n\n    def test_getWidgetsSuccess(self):\n        # Arrange\n        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n        self.requester.requests = MockRequests(200)\n\n        # Act\n        result = self.requester.getWidgets(\"fakeCollectionId\")\n\n        # Assert\n        self.assertEqual(self.requester.requests.auth, self.auth)\n        self.assertEqual(self.requester.requests.url, 'https://favro.com/api/v1/widgets')\n        self.assertEqual(self.requester.requests.headers, {'organizationId': 'organizationId'})\n        self.assertEqual(self.requester.requests.data, {'collectionId': 'fakeCollectionId'})\n\n    def test_getWidgetsError(self):\n        # Arrange\n        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n        self.requester.requests = MockRequests(404)\n\n        # Act/Assert\n        with self.assertRaisesRegex(Exception, 'Get widgets request returned 404 code'):\n            self.requester.getWidgets(\"collectionId\")\n\n    def test_createBoardSuccess(self):\n        # Arrange\n        self.requester = Requester('fake@email.com', 'password', 'organizationId')", "func_src_after": "            self.requester.getCollections()\n\n    def test_getCollectionSuccess(self):\n        # Arrange\n        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n        self.requester.requests = MockRequests(200)\n\n        # Act\n        result = self.requester.getCollection(\"fakeCollectionId\")\n\n        # Assert\n        self.assertEqual(self.requester.requests.auth, self.auth)\n        self.assertEqual(self.requester.requests.url, 'https://favro.com/api/v1/collections/fakeCollectionId')\n        self.assertEqual(self.requester.requests.headers, {'organizationId': 'organizationId'})\n\n    def test_getCollectionError(self):\n        # Arrange\n        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n        self.requester.requests = MockRequests(400)\n\n        # Act/Assert\n        with self.assertRaisesRegex(Exception, 'Get collection request returned 400 code'):\n            self.requester.getCollection(\"collectionId\")\n\n    def test_getWidgetsSuccess(self):\n        # Arrange\n        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n        self.requester.requests = MockRequests(200)\n\n        # Act\n        result = self.requester.getWidgets(\"fakeCollectionId\")\n\n        # Assert\n        self.assertEqual(self.requester.requests.auth, self.auth)\n        self.assertEqual(self.requester.requests.url, 'https://favro.com/api/v1/widgets')\n        self.assertEqual(self.requester.requests.headers, {'organizationId': 'organizationId'})\n        self.assertEqual(self.requester.requests.data, {'collectionId': 'fakeCollectionId'})\n\n    def test_getWidgetsError(self):\n        # Arrange\n        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n        self.requester.requests = MockRequests(404)\n\n        # Act/Assert\n        with self.assertRaisesRegex(Exception, 'Get widgets request returned 404 code'):\n            self.requester.getWidgets(\"collectionId\")\n\n    def test_createBoardSuccess(self):\n        # Arrange\n        self.requester = Requester('<EMAIL>', 'password', 'organizationId')", "line_changes": {"deleted": [{"line_no": 5, "char_start": 104, "char_end": 187, "line": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"line_no": 19, "char_start": 662, "char_end": 745, "line": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"line_no": 29, "char_start": 1018, "char_end": 1101, "line": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"line_no": 44, "char_start": 1642, "char_end": 1725, "line": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"line_no": 54, "char_start": 1993, "char_end": 2075, "line": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')"}], "added": [{"line_no": 6, "char_start": 104, "char_end": 180, "line": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"line_no": 20, "char_start": 662, "char_end": 738, "line": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"line_no": 30, "char_start": 1018, "char_end": 1094, "line": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"line_no": 45, "char_start": 1642, "char_end": 1718, "line": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"line_no": 55, "char_start": 1993, "char_end": 2068, "line": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')"}]}, "char_changes": {"deleted": [{"char_start": 104, "char_end": 187, "chars": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"char_start": 662, "char_end": 745, "chars": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"char_start": 1018, "char_end": 1101, "chars": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"char_start": 1642, "char_end": 1725, "chars": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')\n"}, {"char_start": 1993, "char_end": 2075, "chars": "        self.requester = Requester('fake@email.com', 'password', 'organizationId')"}], "added": [{"char_start": 104, "char_end": 180, "chars": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"char_start": 662, "char_end": 738, "chars": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"char_start": 1018, "char_end": 1094, "chars": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"char_start": 1642, "char_end": 1718, "chars": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')\n"}, {"char_start": 1993, "char_end": 2068, "chars": "        self.requester = Requester('<EMAIL>', 'password', 'organizationId')"}]}}
{"func_name": 93, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    LIBS.append('z')\n\nif compile_test('bzlib.h', 'bz2'):\n    ARGS.append('-DHAVE_BZLIB')\n    LIBS.append('bz2')\n\nif compile_test('lzma.h', 'lzma'):\n    ARGS.append('-DHAVE_XZLIB')\n    LIBS.append('lzma')\n\nos.system('swig -python -c++ ./decoders.i')\n\ndecoders_module = [\n    Extension(\n        name='_swig_decoders',\n        sources=FILES + glob.glob('*.cxx') + glob.glob('*.cpp'),\n        language='c++',\n        include_dirs=[\n            '.',\n            'kenlm',\n            'openfst-1.6.3/src/include',\n            'ThreadPool',\n        ],\n        libraries=LIBS,\n        extra_compile_args=ARGS)\n]\n\nsetup(\n    name='paddlespeech_ctcdecoders',\n    version='0.1.0',\n    description=\"CTC decoders in paddlespeech\",\n    author=\"PaddlePaddle Speech and Language Team\",\n    author_email=\"paddlesl@baidu.com\",\n    url=\"https://github.com/PaddlePaddle/PaddleSpeech\",\n    license='Apache 2.0',\n    ext_modules=decoders_module,\n    py_modules=['swig_decoders'])\n", "func_src_after": "    LIBS.append('z')\n\nif compile_test('bzlib.h', 'bz2'):\n    ARGS.append('-DHAVE_BZLIB')\n    LIBS.append('bz2')\n\nif compile_test('lzma.h', 'lzma'):\n    ARGS.append('-DHAVE_XZLIB')\n    LIBS.append('lzma')\n\nos.system('swig -python -c++ ./decoders.i')\n\ndecoders_module = [\n    Extension(\n        name='_swig_decoders',\n        sources=FILES + glob.glob('*.cxx') + glob.glob('*.cpp'),\n        language='c++',\n        include_dirs=[\n            '.',\n            'kenlm',\n            'openfst-1.6.3/src/include',\n            'ThreadPool',\n        ],\n        libraries=LIBS,\n        extra_compile_args=ARGS)\n]\n\nsetup(\n    name='paddlespeech_ctcdecoders',\n    version='0.1.0',\n    description=\"CTC decoders in paddlespeech\",\n    author=\"PaddlePaddle Speech and Language Team\",\n    author_email=\"<EMAIL>\",\n    url=\"https://github.com/PaddlePaddle/PaddleSpeech\",\n    license='Apache 2.0',\n    ext_modules=decoders_module,\n    py_modules=['swig_decoders'])\n", "line_changes": {"deleted": [{"line_no": 33, "char_start": 769, "char_end": 808, "line": "    author_email=\"paddlesl@baidu.com\",\n"}], "added": [{"line_no": 34, "char_start": 769, "char_end": 797, "line": "    author_email=\"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 769, "char_end": 808, "chars": "    author_email=\"paddlesl@baidu.com\",\n"}], "added": [{"char_start": 769, "char_end": 797, "chars": "    author_email=\"<EMAIL>\",\n"}]}}
{"func_name": 95, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "BELTCOLORS = ((color, color) for color in DEFAULTCOLORS)\n\nstaffs = Staff.objects.all()\nSTAFFS = ((staff.initialies, staff.initialies) for staff in staffs)\n\nIRIDIUMMODES = (\n    ('3kbyte', '3 kbyte'),\n    ('unlimited', 'unlimited')\n)\n\nSTAFF_EMAIL_ADR = {\n    'TT': 'felixeisenmenger@gmx.net',\n}\n\nif settings.DEVELOPMENT:\n    STAFF_EMAIL_ADR['UT'] = 'test@test.com'\n\nERROR_CONTEXT = {\n            'error': 'Please check your delivery address',\n            'invoice_address': InvoiceAddresseForm,\n            'delivery_form': DeliveryAddresseForm,\n        }\n\nwidgets_for_survey_vertex = {\n            'animal_species': forms.TextInput(attrs={'title': 'The species of the animal'}),\n            'vhf_beacon_frequency': forms.Textarea(attrs={'rows': 2, 'cols': 30}),\n            'belt_labeling_instructions': forms.Textarea(attrs={'rows': 4, 'cols': 20, 'style': 'resize:none;',\n                                                                'maxlength': 76}),\n            'belt_plates_instructions': forms.Textarea(attrs={'rows': 2, 'cols': 20, 'maxlength': 76}),\n            'utc_correction': forms.NumberInput(attrs={\n                'min': '-13.00', 'max': '13:00', 'step': '0.05', 'autocomplete': 'on',\n            }),\n            'mortality_sensor': forms.NumberInput(attrs={\n                'min': '0', 'max': '140', 'step': '1',\n            }),\n            'battery_size': forms.HiddenInput(attrs={\n                'visibility': 'hidden',\n            }),\n            'number_of_collars': forms.HiddenInput(attrs={\n                'visibility': 'hidden',\n            }),\n            'nom_collar_circumference': forms.HiddenInput(attrs={\n                'visibility': 'hidden',\n            }),\n            'iridium_num_of_fixes_gps': forms.NumberInput(attrs={\n                'min': '0', 'max': '18', 'step': '1',\n            }),\n            'belt_labeling': forms.CheckboxInput(attrs={\n                'class': 'lable_plates', 'onclick': 'lable_function()',\n            }),", "func_src_after": "BELTCOLORS = ((color, color) for color in DEFAULTCOLORS)\n\nstaffs = Staff.objects.all()\nSTAFFS = ((staff.initialies, staff.initialies) for staff in staffs)\n\nIRIDIUMMODES = (\n    ('3kbyte', '3 kbyte'),\n    ('unlimited', 'unlimited')\n)\n\nSTAFF_EMAIL_ADR = {\n    'TT': '<EMAIL>',\n}\n\nif settings.DEVELOPMENT:\n    STAFF_EMAIL_ADR['UT'] = '<EMAIL>\n\nERROR_CONTEXT = {\n            'error': 'Please check your delivery address',\n            'invoice_address': InvoiceAddresseForm,\n            'delivery_form': DeliveryAddresseForm,\n        }\n\nwidgets_for_survey_vertex = {\n            'animal_species': forms.TextInput(attrs={'title': 'The species of the animal'}),\n            'vhf_beacon_frequency': forms.Textarea(attrs={'rows': 2, 'cols': 30}),\n            'belt_labeling_instructions': forms.Textarea(attrs={'rows': 4, 'cols': 20, 'style': 'resize:none;',\n                                                                'maxlength': 76}),\n            'belt_plates_instructions': forms.Textarea(attrs={'rows': 2, 'cols': 20, 'maxlength': 76}),\n            'utc_correction': forms.NumberInput(attrs={\n                'min': '-13.00', 'max': '13:00', 'step': '0.05', 'autocomplete': 'on',\n            }),\n            'mortality_sensor': forms.NumberInput(attrs={\n                'min': '0', 'max': '140', 'step': '1',\n            }),\n            'battery_size': forms.HiddenInput(attrs={\n                'visibility': 'hidden',\n            }),\n            'number_of_collars': forms.HiddenInput(attrs={\n                'visibility': 'hidden',\n            }),\n            'nom_collar_circumference': forms.HiddenInput(attrs={\n                'visibility': 'hidden',\n            }),\n            'iridium_num_of_fixes_gps': forms.NumberInput(attrs={\n                'min': '0', 'max': '18', 'step': '1',\n            }),\n            'belt_labeling': forms.CheckboxInput(attrs={\n                'class': 'lable_plates', 'onclick': 'lable_function()',\n            }),", "line_changes": {"deleted": [{"line_no": 12, "char_start": 254, "char_end": 292, "line": "    'TT': 'felixeisenmenger@gmx.net',\n"}, {"line_no": 17, "char_start": 303, "char_end": 347, "line": "    STAFF_EMAIL_ADR['UT'] = 'test@test.com'\n"}], "added": [{"line_no": 13, "char_start": 254, "char_end": 275, "line": "    'TT': '<EMAIL>',\n"}, {"line_no": 18, "char_start": 303, "char_end": 340, "line": "    STAFF_EMAIL_ADR['UT'] = '<EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 254, "char_end": 292, "chars": "    'TT': 'felixeisenmenger@gmx.net',\n"}, {"char_start": 303, "char_end": 347, "chars": "    STAFF_EMAIL_ADR['UT'] = 'test@test.com'\n"}], "added": [{"char_start": 254, "char_end": 275, "chars": "    'TT': '<EMAIL>',\n"}, {"char_start": 303, "char_end": 340, "chars": "    STAFF_EMAIL_ADR['UT'] = '<EMAIL>\n"}]}}
{"func_name": 99, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            - Destination network.  Required if I(state=present).\n        type: str\n    nexthop_type:\n        description:\n            - Type of next hop.\n        type: str\n        choices:\n            - ip-address\n            - discard\n            - none\n            - next-vr\n        default: 'ip-address'\n    nexthop:\n        description:\n            - Next hop IP address.  Required if I(state=present).\n        type: str\n    admin_dist:\n        description:\n            - Administrative distance for static route.\n        type: str\n    metric:\n        description:\n            - Metric for route.\n        type: int\n        default: '10'\n    virtual_router:\n        description:\n            - Virtual router to use.\n        type: str\n        default: 'default'\n    interface:\n        description:\n            - The Interface to use.\n        type: str\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: Create route 'Test-One'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-One'\n    destination: '1.1.1.0/24'\n    nexthop: '10.0.0.1'\n\n- name: Create route 'Test-Two'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Two'\n    destination: '2.2.2.0/24'\n    nexthop: '10.0.0.1'", "func_src_after": "            - Destination network.  Required if I(state=present).\n        type: str\n    nexthop_type:\n        description:\n            - Type of next hop.\n        type: str\n        choices:\n            - ip-address\n            - discard\n            - none\n            - next-vr\n        default: 'ip-address'\n    nexthop:\n        description:\n            - Next hop IP address.  Required if I(state=present).\n        type: str\n    admin_dist:\n        description:\n            - Administrative distance for static route.\n        type: str\n    metric:\n        description:\n            - Metric for route.\n        type: int\n        default: '10'\n    virtual_router:\n        description:\n            - Virtual router to use.\n        type: str\n        default: 'default'\n    interface:\n        description:\n            - The Interface to use.\n        type: str\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: Create route 'Test-One'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-One'\n    destination: '<IP-Address>/24'\n    nexthop: '<IP-Address>'\n\n- name: Create route 'Test-Two'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Two'\n    destination: '<IP-Address>/24'\n    nexthop: '<IP-Address>'", "line_changes": {"deleted": [{"line_no": 42, "char_start": 981, "char_end": 1011, "line": "    destination: '1.1.1.0/24'\n"}, {"line_no": 43, "char_start": 981, "char_end": 1005, "line": "    nexthop: '10.0.0.1'\n"}, {"line_no": 51, "char_start": 1151, "char_end": 1181, "line": "    destination: '2.2.2.0/24'\n"}, {"line_no": 52, "char_start": 1151, "char_end": 1174, "line": "    nexthop: '10.0.0.1'"}], "added": [{"line_no": 44, "char_start": 981, "char_end": 1016, "line": "    destination: '<IP-Address>/24'\n"}, {"line_no": 45, "char_start": 1016, "char_end": 1044, "line": "    nexthop: '<IP-Address>'\n"}, {"line_no": 53, "char_start": 1151, "char_end": 1186, "line": "    destination: '<IP-Address>/24'\n"}, {"line_no": 54, "char_start": 1186, "char_end": 1213, "line": "    nexthop: '<IP-Address>'"}]}, "char_changes": {"deleted": [{"char_start": 981, "char_end": 1011, "chars": "    destination: '1.1.1.0/24'\n"}, {"char_start": 981, "char_end": 1005, "chars": "    nexthop: '10.0.0.1'\n"}, {"char_start": 1151, "char_end": 1181, "chars": "    destination: '2.2.2.0/24'\n"}, {"char_start": 1151, "char_end": 1174, "chars": "    nexthop: '10.0.0.1'"}], "added": [{"char_start": 981, "char_end": 1016, "chars": "    destination: '<IP-Address>/24'\n"}, {"char_start": 1016, "char_end": 1044, "chars": "    nexthop: '<IP-Address>'\n"}, {"char_start": 1151, "char_end": 1186, "chars": "    destination: '<IP-Address>/24'\n"}, {"char_start": 1186, "char_end": 1213, "chars": "    nexthop: '<IP-Address>'"}]}}
{"func_name": 100, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n- name: Create route 'Test-Three'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Three'\n    destination: '3.3.3.0/24'\n    nexthop: '10.0.0.1'\n\n- name: Delete route 'Test-Two'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Two'\n    state: 'absent'\n\n- name: Create route 'Test-Four'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Four'\n    destination: '4.4.4.0/24'\n    nexthop: '10.0.0.1'\n    virtual_router: 'VR-Two'\n\n- name: Create route 'Test-Five'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Five'\n    destination: '5.5.5.0/24'\n    nexthop_type: 'none'\n\"\"\"\n\nRETURN = \"\"\"\n# Default return values\n\"\"\"\n\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible_collections.paloaltonetworks.panos.plugins.module_utils.panos import (\n    get_connection,\n)\n\ntry:\n    from panos.errors import PanDeviceError\n    from panos.network import StaticRoute, VirtualRouter\nexcept ImportError:\n    try:\n        from pandevice.errors import PanDeviceError\n        from pandevice.network import StaticRoute, VirtualRouter\n    except ImportError:\n        pass\n", "func_src_after": "\n- name: Create route 'Test-Three'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Three'\n    destination: '<IP-Address>/24'\n    nexthop: '<IP-Address>'\n\n- name: Delete route 'Test-Two'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Two'\n    state: 'absent'\n\n- name: Create route 'Test-Four'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Four'\n    destination: '<IP-Address>/24'\n    nexthop: '<IP-Address>'\n    virtual_router: 'VR-Two'\n\n- name: Create route 'Test-Five'\n  panos_static_route:\n    provider: '{{ provider }}'\n    name: 'Test-Five'\n    destination: '<IP-Address>/24'\n    nexthop_type: 'none'\n\"\"\"\n\nRETURN = \"\"\"\n# Default return values\n\"\"\"\n\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible_collections.paloaltonetworks.panos.plugins.module_utils.panos import (\n    get_connection,\n)\n\ntry:\n    from panos.errors import PanDeviceError\n    from panos.network import StaticRoute, VirtualRouter\nexcept ImportError:\n    try:\n        from pandevice.errors import PanDeviceError\n        from pandevice.network import StaticRoute, VirtualRouter\n    except ImportError:\n        pass\n", "line_changes": {"deleted": [{"line_no": 6, "char_start": 111, "char_end": 141, "line": "    destination: '3.3.3.0/24'\n"}, {"line_no": 7, "char_start": 111, "char_end": 135, "line": "    nexthop: '10.0.0.1'\n"}, {"line_no": 21, "char_start": 410, "char_end": 440, "line": "    destination: '4.4.4.0/24'\n"}, {"line_no": 22, "char_start": 410, "char_end": 434, "line": "    nexthop: '10.0.0.1'\n"}, {"line_no": 31, "char_start": 611, "char_end": 641, "line": "    destination: '5.5.5.0/24'\n"}], "added": [{"line_no": 8, "char_start": 111, "char_end": 146, "line": "    destination: '<IP-Address>/24'\n"}, {"line_no": 9, "char_start": 146, "char_end": 174, "line": "    nexthop: '<IP-Address>'\n"}, {"line_no": 23, "char_start": 410, "char_end": 445, "line": "    destination: '<IP-Address>/24'\n"}, {"line_no": 24, "char_start": 445, "char_end": 473, "line": "    nexthop: '<IP-Address>'\n"}, {"line_no": 32, "char_start": 611, "char_end": 646, "line": "    destination: '<IP-Address>/24'\n"}]}, "char_changes": {"deleted": [{"char_start": 111, "char_end": 141, "chars": "    destination: '3.3.3.0/24'\n"}, {"char_start": 111, "char_end": 135, "chars": "    nexthop: '10.0.0.1'\n"}, {"char_start": 410, "char_end": 440, "chars": "    destination: '4.4.4.0/24'\n"}, {"char_start": 410, "char_end": 434, "chars": "    nexthop: '10.0.0.1'\n"}, {"char_start": 611, "char_end": 641, "chars": "    destination: '5.5.5.0/24'\n"}], "added": [{"char_start": 111, "char_end": 146, "chars": "    destination: '<IP-Address>/24'\n"}, {"char_start": 146, "char_end": 174, "chars": "    nexthop: '<IP-Address>'\n"}, {"char_start": 410, "char_end": 445, "chars": "    destination: '<IP-Address>/24'\n"}, {"char_start": 445, "char_end": 473, "chars": "    nexthop: '<IP-Address>'\n"}, {"char_start": 611, "char_end": 646, "chars": "    destination: '<IP-Address>/24'\n"}]}}
{"func_name": 104, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    def __str__(self):\n        return self.name\n\n\nclass Permission(models.Model):\n    code = models.CharField(max_length=32, unique=True)\n    description = models.TextField(validators=[MaxLengthValidator(1024)])\n\n    def __str__(self):\n        return self.code\n\n\nclass User(models.Model):\n    name = models.CharField('name', max_length=255, validators=[\n        MinLengthValidator(4), MaxLengthValidator(255)\n    ], null=True, default=None, blank=True)\n    username = models.CharField('username', max_length=64, validators=[\n        validate_slug, MinLengthValidator(4), MaxLengthValidator(64)\n    ], null=True, default=None, blank=True)\n    email = models.EmailField('email', max_length=255, validators=[\n        validate_email, MinLengthValidator(5), MaxLengthValidator(255)\n    ])\n    permissions = models.ManyToManyField(Permission)\n    contest = models.ForeignKey(\n        Contest, related_name='members', on_delete=models.CASCADE)\n\n    password = models.CharField(\n        max_length=255, null=True, default=None, blank=True)\n    signup_otc = models.CharField(\n        max_length=32, null=True, default=None, blank=True)\n    reset_password_otc = models.CharField(\n        max_length=32, null=True, default=None, blank=True)\n\n    class Meta:\n        unique_together = [('username', 'contest'), ('email', 'contest')]\n\n    @property\n    def permission_codes(self) -> List[str]:\n        return list(map(lambda perm: perm.code, self.permissions.all()))\n\n    def has_permission(self, perm: str) -> bool:\n        return perm in self.permission_codes\n\n    def __str__(self):\n        return str(self.name)\n\n\ndef checker_upload_path(instance, filename):\n    alphanum = '1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'\n    random_str = ''.join(random.choice(alphanum) for _ in range(64))", "func_src_after": "    def __str__(self):\n        return self.name\n\n\nclass Permission(models.Model):\n    code = models.CharField(max_length=32, unique=True)\n    description = models.TextField(validators=[MaxLengthValidator(1024)])\n\n    def __str__(self):\n        return self.code\n\n\nclass User(models.Model):\n    name = models.CharField('name', max_length=255, validators=[\n        MinLengthValidator(4), MaxLengthValidator(255)\n    ], null=True, default=None, blank=True)\n    username = models.CharField('username', max_length=64, validators=[\n        validate_slug, MinLengthValidator(4), MaxLengthValidator(64)\n    ], null=True, default=None, blank=True)\n    email = models.EmailField('email', max_length=255, validators=[\n        validate_email, MinLengthValidator(5), MaxLengthValidator(255)\n    ])\n    permissions = models.ManyToManyField(Permission)\n    contest = models.ForeignKey(\n        Contest, related_name='members', on_delete=models.CASCADE)\n\n    password = models.CharField(\n        max_length=255, null=True, default=None, blank=True)\n    signup_otc = models.CharField(\n        max_length=32, null=True, default=None, blank=True)\n    reset_password_otc = models.CharField(\n        max_length=32, null=True, default=None, blank=True)\n\n    class Meta:\n        unique_together = [('username', 'contest'), ('email', 'contest')]\n\n    @property\n    def permission_codes(self) -> List[str]:\n        return list(map(lambda perm: perm.code, self.permissions.all()))\n\n    def has_permission(self, perm: str) -> bool:\n        return perm in self.permission_codes\n\n    def __str__(self):\n        return str(self.name)\n\n\ndef checker_upload_path(instance, filename):\n    alphanum = '1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'\n    random_str = ''.join(random.choice(alphanum) for _ in range(64))", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 119, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n\ndef main():\n    ip_list = [\"127.0.0.1\", \"255.0.0.255\", \"hanif\", \"250.0.0.0/32\", \"192.0.0.0/16\", \"256.256.256.256\",\n               \"127.0.0.a\", \"10.10.1.241\", \"10,10,10,10\", \"2001:db8::\", \"2001:db8::/64\"]\n    for ip in ip_list:\n        try:\n            _ip = IPAddress(ip)\n            print(_ip.ip)\n            print(_ip.ip_subnet)\n            print(_ip.ip_reverse_pointer)\n            print(_ip.version)\n        except ValueError as err:\n            print(f\"Exception: {err=}, {type(err)=}\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "func_src_after": "\n\ndef main():\n    ip_list = [\"<IP-Address>\", \"<IP-Address>\", \"hanif\", \"<IP-Address>/32\", \"<IP-Address>/16\", \"<IP-Address>\",\n               \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>/64\"]\n    for ip in ip_list:\n        try:\n            _ip = IPAddress(ip)\n            print(_ip.ip)\n            print(_ip.ip_subnet)\n            print(_ip.ip_reverse_pointer)\n            print(_ip.version)\n        except ValueError as err:\n            print(f\"Exception: {err=}, {type(err)=}\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 14, "char_end": 117, "line": "    ip_list = [\"127.0.0.1\", \"255.0.0.255\", \"hanif\", \"250.0.0.0/32\", \"192.0.0.0/16\", \"256.256.256.256\",\n"}, {"line_no": 5, "char_start": 14, "char_end": 103, "line": "               \"127.0.0.a\", \"10.10.1.241\", \"10,10,10,10\", \"2001:db8::\", \"2001:db8::/64\"]\n"}], "added": [{"line_no": 6, "char_start": 14, "char_end": 124, "line": "    ip_list = [\"<IP-Address>\", \"<IP-Address>\", \"hanif\", \"<IP-Address>/32\", \"<IP-Address>/16\", \"<IP-Address>\",\n"}, {"line_no": 7, "char_start": 124, "char_end": 222, "line": "               \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>/64\"]\n"}]}, "char_changes": {"deleted": [{"char_start": 14, "char_end": 117, "chars": "    ip_list = [\"127.0.0.1\", \"255.0.0.255\", \"hanif\", \"250.0.0.0/32\", \"192.0.0.0/16\", \"256.256.256.256\",\n"}, {"char_start": 14, "char_end": 103, "chars": "               \"127.0.0.a\", \"10.10.1.241\", \"10,10,10,10\", \"2001:db8::\", \"2001:db8::/64\"]\n"}], "added": [{"char_start": 14, "char_end": 124, "chars": "    ip_list = [\"<IP-Address>\", \"<IP-Address>\", \"hanif\", \"<IP-Address>/32\", \"<IP-Address>/16\", \"<IP-Address>\",\n"}, {"char_start": 124, "char_end": 222, "chars": "               \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>/64\"]\n"}]}}
{"func_name": 121, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "__author__ = 'saeedamen'  # Saeed Amen / saeed@cuemacro.com\n\n#\n# Copyright 2017 Cuemacro Ltd. - http//www.cuemacro.com / @cuemacro\n#\n# See the License for the specific language governing permissions and limitations under the License.\n#\n\n\"\"\"Has the configuration settings for celery. The main thing that needs to be changed is the broker URL settings (in\nthe ConstantsGen file\"\n\"\"\"\n\nfrom tcapy.conf.constants import Constants\n\nconstants = Constants()\n\nbroker_url = constants.celery_broker_url\nresult_backend = constants.celery_result_backend\n\n# from kombu import serialization\n# serialization.registry._decoders.(\"application/x-python-serialize\")\n\n# the below should not need to be changed by nearly all users\n# result_backend = \"amqp\"\n# result_backend  = \"redis://localhost:6379/2\"\nevent_serializer = 'pickle'\naccept_content = ['pickle'] #\ntask_serializer = 'pickle'\nresult_serializer = 'pickle'\nworker_hijack_root_logger = False\ntask_store_errors_even_if_ignored = True\nworker_max_tasks_per_child = 50 # Stop memory leaks, so restart workers after a 100 tasks\ntasks_acks_late = True\nresult_expires = 900 # Clear memory after a while of results, if not picked up\n# task_always_eager = True # For debugging, to run Celery in the same process\nbroker_transport_options = {'socket_timeout': 900}\n# broker_pool_limit = 0\n", "func_src_after": "__author__ = 'saeedamen'  # Saeed Amen / <EMAIL>\n\n#\n# Copyright 2017 Cuemacro Ltd. - http//www.cuemacro.com / @cuemacro\n#\n# See the License for the specific language governing permissions and limitations under the License.\n#\n\n\"\"\"Has the configuration settings for celery. The main thing that needs to be changed is the broker URL settings (in\nthe ConstantsGen file\"\n\"\"\"\n\nfrom tcapy.conf.constants import Constants\n\nconstants = Constants()\n\nbroker_url = constants.celery_broker_url\nresult_backend = constants.celery_result_backend\n\n# from kombu import serialization\n# serialization.registry._decoders.(\"application/x-python-serialize\")\n\n# the below should not need to be changed by nearly all users\n# result_backend = \"amqp\"\n# result_backend  = \"redis://localhost:6379/2\"\nevent_serializer = 'pickle'\naccept_content = ['pickle'] #\ntask_serializer = 'pickle'\nresult_serializer = 'pickle'\nworker_hijack_root_logger = False\ntask_store_errors_even_if_ignored = True\nworker_max_tasks_per_child = 50 # Stop memory leaks, so restart workers after a 100 tasks\ntasks_acks_late = True\nresult_expires = 900 # Clear memory after a while of results, if not picked up\n# task_always_eager = True # For debugging, to run Celery in the same process\nbroker_transport_options = {'socket_timeout': 900}\n# broker_pool_limit = 0\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 60, "line": "__author__ = 'saeedamen'  # Saeed Amen / saeed@cuemacro.com\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 49, "line": "__author__ = 'saeedamen'  # Saeed Amen / <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 60, "chars": "__author__ = 'saeedamen'  # Saeed Amen / saeed@cuemacro.com\n"}], "added": [{"char_start": 0, "char_end": 49, "chars": "__author__ = 'saeedamen'  # Saeed Amen / <EMAIL>\n"}]}}
{"func_name": 124, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# Note: for simplicity, we don't try to check uniqueness constraints when\n# randomly generating stuff. If we get unlucky and generate something\n# non-unique, just try again.\nfrom django.core.management.base import BaseCommand\nfrom django.contrib.auth.models import User\nfrom datetime import datetime\nfrom puzzles.models import Team, Puzzle, AnswerSubmission, Survey\nimport random\n\n# for flavor, and to test unicode // http://racepics.weihwa.com/\nemoji = \"💥💫🐒🦍🐕🐺🦊🐈🦁🐅🐆🐎🦄🦌🐂🐃🐄🐖🐗🐏🐑🐐🐪🐘🦏🐁🐀🐹🐇🐿🦇🐻🐨🐼🐾🦃🐔🐓🐤🐦🐧🕊🦅🦆🦉🐸🐊🐢🦎🐍🐉🐳🐋🐬🐟🐠🐡🦈🐙🐚🐌🦋🐛🐜🐝🐞🕷🕸🦂💐🌸💮🌹🌺🌻🌼🌷🌱🌲🌳🌴🌵🌾🌿☘🍀🍁🍃🍄🌰🦀🦐🦑🌐🌙⭐🌈⚡🔥🌊✨🎮🎲🧩♟🎭🎨🧵🎤🎧🎷🎸🎹🎺🎻🥁🎬🏹🌋🏖🏜🏝🏠🏤🏥🏦🏫🌃🏙🌅🌇🚆🚌🚕🚗🚲⚓✈🚁🚀🛸🎆\"\nadjectives = \"Alien Alpha Aquatic Avian Bio-Hazard Blaster Comet Contact Deep-Space Deficit Deserted Destroyed Distant Empath Epsilon Expanding Expedition Galactic Gambling Gem Genetics Interstellar Lost Malevolent Military Mining Mining New Old Outlaw Pan-Galactic Pilgrimage Pirate Plague Pre-Sentient Prosperous Public Radioactive Rebel Replicant Reptilian Research Scout Terraformed Terraforming Uplift\".split()\nnouns = \"Alliance Bankers Base Battle Bazaar Cache Center Code Colony Consortium Developers Earth Economy Engineers Exchange Factory Federation Fleet Fortress Guild Imperium Institute Lab Lair League Lifeforms Mercenaries Monolith Order Outpost Pact Port Program Project Prospectors Renaissance Repository Resort Robots Shop Sparta Stronghold Studios Survey Symbionts Sympathizers Technology Trendsetters Troops Warlord Warship World\".split()\nwrong_answers = [x + y for x in [\"RED\", \"WRONG\", \"INCORRECT\"] for y in [\"\", \"ANSWER\", \"SOLUTION\", \"HERRING\"]]\n\ndef random_team_name():\n    return \"{}{}{} {} {} {}{}{}\".format(\n        random.choice(emoji),\n        random.choice(emoji),\n        random.choice(emoji),\n        random.choice(adjectives),\n        random.choice(nouns),\n        random.choice(emoji),\n        random.choice(emoji),\n        random.choice(emoji),\n    )\n\nclass Command(BaseCommand):\n    help = 'Randomly generate n teams for testing, complete with solves and surveys'\n\n    def add_arguments(self, parser):\n        parser.add_argument('num_teams', nargs=1, type=int)\n\n    def handle(self, *args, **options):\n        # Annotate every puzzle and every team with a rating to get a more\n        # interesting and realistic scoreboard, where there are trends across\n        # teams and puzzles.\n        puzzles = [(p, random.random()) for p in Puzzle.objects.all()]\n        n = options['num_teams'][0]\n        teams = []\n        for i in range(n):\n            username = 'team{}'.format(random.randint(0,10**10))\n\n            user = User.objects.create_user(\n                username=username, email=username + \"@example.com\", password=\"password\"\n            )\n            team = Team(\n                user=user,\n                team_name=random_team_name(),\n                creation_time=datetime.now(),", "func_src_after": "# Note: for simplicity, we don't try to check uniqueness constraints when\n# randomly generating stuff. If we get unlucky and generate something\n# non-unique, just try again.\nfrom django.core.management.base import BaseCommand\nfrom django.contrib.auth.models import User\nfrom datetime import datetime\nfrom puzzles.models import Team, Puzzle, AnswerSubmission, Survey\nimport random\n\n# for flavor, and to test unicode // http://racepics.weihwa.com/\nemoji = \"💥💫🐒🦍🐕🐺🦊🐈🦁🐅🐆🐎🦄🦌🐂🐃🐄🐖🐗🐏🐑🐐🐪🐘🦏🐁🐀🐹🐇🐿🦇🐻🐨🐼🐾🦃🐔🐓🐤🐦🐧🕊🦅🦆🦉🐸🐊🐢🦎🐍🐉🐳🐋🐬🐟🐠🐡🦈🐙🐚🐌🦋🐛🐜🐝🐞🕷🕸🦂💐🌸💮🌹🌺🌻🌼🌷🌱🌲🌳🌴🌵🌾🌿☘🍀🍁🍃🍄🌰🦀🦐🦑🌐🌙⭐🌈⚡🔥🌊✨🎮🎲🧩♟🎭🎨🧵🎤🎧🎷🎸🎹🎺🎻🥁🎬🏹🌋🏖🏜🏝🏠🏤🏥🏦🏫🌃🏙🌅🌇🚆🚌🚕🚗🚲⚓✈🚁🚀🛸🎆\"\nadjectives = \"Alien Alpha Aquatic Avian Bio-Hazard Blaster Comet Contact Deep-Space Deficit Deserted Destroyed Distant Empath Epsilon Expanding Expedition Galactic Gambling Gem Genetics Interstellar Lost Malevolent Military Mining Mining New Old Outlaw Pan-Galactic Pilgrimage Pirate Plague Pre-Sentient Prosperous Public Radioactive Rebel Replicant Reptilian Research Scout Terraformed Terraforming Uplift\".split()\nnouns = \"Alliance Bankers Base Battle Bazaar Cache Center Code Colony Consortium Developers Earth Economy Engineers Exchange Factory Federation Fleet Fortress Guild Imperium Institute Lab Lair League Lifeforms Mercenaries Monolith Order Outpost Pact Port Program Project Prospectors Renaissance Repository Resort Robots Shop Sparta Stronghold Studios Survey Symbionts Sympathizers Technology Trendsetters Troops Warlord Warship World\".split()\nwrong_answers = [x + y for x in [\"RED\", \"WRONG\", \"INCORRECT\"] for y in [\"\", \"ANSWER\", \"SOLUTION\", \"HERRING\"]]\n\ndef random_team_name():\n    return \"{}{}{} {} {} {}{}{}\".format(\n        random.choice(emoji),\n        random.choice(emoji),\n        random.choice(emoji),\n        random.choice(adjectives),\n        random.choice(nouns),\n        random.choice(emoji),\n        random.choice(emoji),\n        random.choice(emoji),\n    )\n\nclass Command(BaseCommand):\n    help = 'Randomly generate n teams for testing, complete with solves and surveys'\n\n    def add_arguments(self, parser):\n        parser.add_argument('num_teams', nargs=1, type=int)\n\n    def handle(self, *args, **options):\n        # Annotate every puzzle and every team with a rating to get a more\n        # interesting and realistic scoreboard, where there are trends across\n        # teams and puzzles.\n        puzzles = [(p, random.random()) for p in Puzzle.objects.all()]\n        n = options['num_teams'][0]\n        teams = []\n        for i in range(n):\n            username = 'team{}'.format(random.randint(0,10**10))\n\n            user = User.objects.create_user(\n                username=username, email=username + \"@example.com\", password=\"password\"\n            )\n            team = Team(\n                user=user,\n                team_name=random_team_name(),\n                creation_time=datetime.now(),", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 126, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# -*- coding: utf-8 -*-\n\n\"\"\"\n@author: krakowiakpawel9@gmail.com\n@site: e-smartdata.org\n\"\"\"\n\nimport pandas as pd\n\n\n# %% import data\ndf = pd.read_csv('./data/reviews_clean.csv', index_col=0)\n\n# %%\ndf['category'].value_counts().plot(kind='pie')\n\n# %%\ndf['rating'].value_counts().plot('bar', legend=True, title='Frequency')\n\n# %%\nrat_count = df['rating'].value_counts().sort_index().plot('bar')\n\n# %%\ndf['rating'].value_counts().sort_values()\n\n# %% extract top 3 most rating products\n\ntop_3_no = df.groupby('name').count()['rating'].rename('count'). \\\n          sort_values(ascending=False).nlargest(3).plot(kind='pie')\n\n# %% extract top 3 high rating product\ntop_3_rat = df.groupby('name').aggregate('mean').\\\n                               sort_values('rating', ascending=False).\\\n                               nlargest(3, columns='rating')\n\n# %% extract bottom 3 product\nbottom_3_rat = df.groupby('name').aggregate('mean')['rating'].\\\n                                  sort_values().nsmallest(3)\n", "func_src_after": "# -*- coding: utf-8 -*-\n\n\"\"\"\n@author: <EMAIL>\n@site: <EMAIL>\n\"\"\"\n\nimport pandas as pd\n\n\n# %% import data\ndf = pd.read_csv('./data/reviews_clean.csv', index_col=0)\n\n# %%\ndf['category'].value_counts().plot(kind='pie')\n\n# %%\ndf['rating'].value_counts().plot('bar', legend=True, title='Frequency')\n\n# %%\nrat_count = df['rating'].value_counts().sort_index().plot('bar')\n\n# %%\ndf['rating'].value_counts().sort_values()\n\n# %% extract top 3 most rating products\n\ntop_3_no = df.groupby('name').count()['rating'].rename('count'). \\\n          sort_values(ascending=False).nlargest(3).plot(kind='pie')\n\n# %% extract top 3 high rating product\ntop_3_rat = df.groupby('name').aggregate('mean').\\\n                               sort_values('rating', ascending=False).\\\n                               nlargest(3, columns='rating')\n\n# %% extract bottom 3 product\nbottom_3_rat = df.groupby('name').aggregate('mean')['rating'].\\\n                                  sort_values().nsmallest(3)\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 29, "char_end": 64, "line": "@author: krakowiakpawel9@gmail.com\n"}, {"line_no": 5, "char_start": 29, "char_end": 52, "line": "@site: e-smartdata.org\n"}], "added": [{"line_no": 6, "char_start": 29, "char_end": 46, "line": "@author: <EMAIL>\n"}, {"line_no": 7, "char_start": 46, "char_end": 61, "line": "@site: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 29, "char_end": 64, "chars": "@author: krakowiakpawel9@gmail.com\n"}, {"char_start": 29, "char_end": 52, "chars": "@site: e-smartdata.org\n"}], "added": [{"char_start": 29, "char_end": 46, "chars": "@author: <EMAIL>\n"}, {"char_start": 46, "char_end": 61, "chars": "@site: <EMAIL>\n"}]}}
{"func_name": 132, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nThis module provides command line interface for submission of new applications to the framework, removing the applications\nfrom the framework, checking app status, and registering hardware configurations.\n\"\"\"\n\nimport base64\nimport logging\nimport sys\nfrom typing import Optional, Dict\n\nimport grpc\nimport yaml\n\nimport cloud_controller.architecture_pb2 as arch_pb\nimport cloud_controller.assessment.deploy_controller_pb2 as deploy_pb\nimport cloud_controller.assessment.deploy_controller_pb2_grpc as deploy_grpc\nfrom cloud_controller import PREDICTOR_HOST, PREDICTOR_PORT\nfrom cloud_controller.aggregator.predictor_pb2_grpc import PredictorStub\nfrom cloud_controller.assessment import CTL_HOST, CTL_PORT\nfrom cloud_controller.assessment.deploy_controller_pb2_grpc import DeployControllerStub\nfrom cloud_controller.middleware.helpers import setup_logging, connect_to_grpc_server\n\ntime_periods: Dict[str, int] = {\n    \"second\": 1000,\n    \"minute\": 60 * 1000,\n    \"hour\": 60 * 60 * 1000,\n    \"day\": 24 * 60 * 60 * 1000\n}\n\n\ndef check_field_present(yaml_dict, parent, child):\n    if child not in yaml_dict[parent]:\n        logging.error(f\"Incorrect application descriptor format:\"\n                      f\"    the field '{child}' must be present under '{parent}'.\")\n        exit(1)\n\n\ndef check_value(field: str, value: str, list_):\n    if value not in list_:\n        logging.error(f\"Incorrect application descriptor format:\"\n                      f\"    the field '{field}' can have only the following values: '{list_}'.\")\n        exit(1)\n\n\nDOCKER_SECRET = 'dockersecret'\nUSERNAME = 'username'\nPASSWORD = 'password'", "func_src_after": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nThis module provides command line interface for submission of new applications to the framework, removing the applications\nfrom the framework, checking app status, and registering hardware configurations.\n\"\"\"\n\nimport base64\nimport logging\nimport sys\nfrom typing import Optional, Dict\n\nimport grpc\nimport yaml\n\nimport cloud_controller.architecture_pb2 as arch_pb\nimport cloud_controller.assessment.deploy_controller_pb2 as deploy_pb\nimport cloud_controller.assessment.deploy_controller_pb2_grpc as deploy_grpc\nfrom cloud_controller import PREDICTOR_HOST, PREDICTOR_PORT\nfrom cloud_controller.aggregator.predictor_pb2_grpc import PredictorStub\nfrom cloud_controller.assessment import CTL_HOST, CTL_PORT\nfrom cloud_controller.assessment.deploy_controller_pb2_grpc import DeployControllerStub\nfrom cloud_controller.middleware.helpers import setup_logging, connect_to_grpc_server\n\ntime_periods: Dict[str, int] = {\n    \"second\": 1000,\n    \"minute\": 60 * 1000,\n    \"hour\": 60 * 60 * 1000,\n    \"day\": 24 * 60 * 60 * 1000\n}\n\n\ndef check_field_present(yaml_dict, parent, child):\n    if child not in yaml_dict[parent]:\n        logging.error(f\"Incorrect application descriptor format:\"\n                      f\"    the field '{child}' must be present under '{parent}'.\")\n        exit(1)\n\n\ndef check_value(field: str, value: str, list_):\n    if value not in list_:\n        logging.error(f\"Incorrect application descriptor format:\"\n                      f\"    the field '{field}' can have only the following values: '{list_}'.\")\n        exit(1)\n\n\nDOCKER_SECRET = 'dockersecret'\nUSERNAME = 'username'\nPASSWORD = 'password'", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 134, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "'''\nThe blacklist resolution module is a module which implements a blacklist of ip addresses which will not recive answer\n'''\n\n\nfrom swandns.modules import BaseResolvingModule\nfrom swandns.swan_errors.exceptions import SWAN_ConfigurationError,SWAN_StopProcessingRequest,SWAN_DropAnswer\nimport ipcalc \n\nclass BlackListResolverModule(BaseResolvingModule):\n    '''\n    The BlackListResolverModule is a module which will hold 2 black lists of ips (one for ipv4 & one for ipv6).\n    The module implements black list from a lists of networks provided in configurations.\n\n    * iplist4 - List of ipv4 network ranges (Ex: 192.168.0.0/24).\n    * iplist6 - List of ipv4 network ranges (Ex: fe80::7c05:543:55de:f483/64).\n     \n    Every time a request comes trough the ip of the client is validated aginst the appropriate list\n    according to the client ip address type.\n    if it matches one of the network ranges than according to the on_detect attribute an action is taken.\n\n    the on_detect attribute can take 2 values.\n    * drop - in this case when a client ip addresses matches one of the networks in one of the blacklist.\n             Than te DNS response is dropped and no response is returned to the client.\n    * stop - in this case when a client ip addresses matches one of the networks in one of the blacklist.\n             Than te DNS response processing stopped and whatever the value of the DNS response is returned to the client    \n    '''\n    def __init__(self,conf):\n        self._iplist4=[] # list of blocked ipv4 addreses \n        self._iplist6=[] # list of blocked ipv6 addreses\n        self.on_detect=SWAN_DropAnswer\n        \n        super(BlackListResolverModule,self).__init__(conf=conf,zone_resolver=True,lock_reslution=True)\n\n    def inital_validate(self):\n        if (not 'iplist4' in  self.conf)  and (not 'iplist6' in self.conf):\n            raise SWAN_ConfigurationError('iplist4 or iplist6 must be defined')\n        if 'on_detect' in self.conf:\n            if self.conf['on_detect'] not in ['drop','stop']:\n                raise SWAN_ConfigurationError('The value of on_detect must be \"drop\" or \"stop\"')\n            if self.conf['on_detect']=='drop':\n                self.on_detect=SWAN_DropAnswer\n            else:\n                self.on_detect=SWAN_StopProcessingRequest\n            \n        if 'iplist4' in self.conf:\n            #populate v4 addreses \n            for v4 in self.conf['iplist4'].split(','):\n                net=ipcalc.Network(v4)\n                if net.version() != 4:", "func_src_after": "'''\nThe blacklist resolution module is a module which implements a blacklist of ip addresses which will not recive answer\n'''\n\n\nfrom swandns.modules import BaseResolvingModule\nfrom swandns.swan_errors.exceptions import SWAN_ConfigurationError,SWAN_StopProcessingRequest,SWAN_DropAnswer\nimport ipcalc \n\nclass BlackListResolverModule(BaseResolvingModule):\n    '''\n    The BlackListResolverModule is a module which will hold 2 black lists of ips (one for ipv4 & one for ipv6).\n    The module implements black list from a lists of networks provided in configurations.\n\n    * iplist4 - List of ipv4 network ranges (Ex: <IP-Address>/24).\n    * iplist6 - List of ipv4 network ranges (Ex: <IP-Address>/64).\n     \n    Every time a request comes trough the ip of the client is validated aginst the appropriate list\n    according to the client ip address type.\n    if it matches one of the network ranges than according to the on_detect attribute an action is taken.\n\n    the on_detect attribute can take 2 values.\n    * drop - in this case when a client ip addresses matches one of the networks in one of the blacklist.\n             Than te DNS response is dropped and no response is returned to the client.\n    * stop - in this case when a client ip addresses matches one of the networks in one of the blacklist.\n             Than te DNS response processing stopped and whatever the value of the DNS response is returned to the client    \n    '''\n    def __init__(self,conf):\n        self._iplist4=[] # list of blocked ipv4 addreses \n        self._iplist6=[] # list of blocked ipv6 addreses\n        self.on_detect=SWAN_DropAnswer\n        \n        super(BlackListResolverModule,self).__init__(conf=conf,zone_resolver=True,lock_reslution=True)\n\n    def inital_validate(self):\n        if (not 'iplist4' in  self.conf)  and (not 'iplist6' in self.conf):\n            raise SWAN_ConfigurationError('iplist4 or iplist6 must be defined')\n        if 'on_detect' in self.conf:\n            if self.conf['on_detect'] not in ['drop','stop']:\n                raise SWAN_ConfigurationError('The value of on_detect must be \"drop\" or \"stop\"')\n            if self.conf['on_detect']=='drop':\n                self.on_detect=SWAN_DropAnswer\n            else:\n                self.on_detect=SWAN_StopProcessingRequest\n            \n        if 'iplist4' in self.conf:\n            #populate v4 addreses \n            for v4 in self.conf['iplist4'].split(','):\n                net=ipcalc.Network(v4)\n                if net.version() != 4:", "line_changes": {"deleted": [{"line_no": 15, "char_start": 565, "char_end": 631, "line": "    * iplist4 - List of ipv4 network ranges (Ex: 192.168.0.0/24).\n"}, {"line_no": 17, "char_start": 632, "char_end": 711, "line": "    * iplist6 - List of ipv4 network ranges (Ex: fe80::7c05:543:55de:f483/64).\n"}], "added": [{"line_no": 16, "char_start": 565, "char_end": 632, "line": "    * iplist4 - List of ipv4 network ranges (Ex: <IP-Address>/24).\n"}, {"line_no": 18, "char_start": 632, "char_end": 699, "line": "    * iplist6 - List of ipv4 network ranges (Ex: <IP-Address>/64).\n"}]}, "char_changes": {"deleted": [{"char_start": 565, "char_end": 631, "chars": "    * iplist4 - List of ipv4 network ranges (Ex: 192.168.0.0/24).\n"}, {"char_start": 632, "char_end": 711, "chars": "    * iplist6 - List of ipv4 network ranges (Ex: fe80::7c05:543:55de:f483/64).\n"}], "added": [{"char_start": 565, "char_end": 632, "chars": "    * iplist4 - List of ipv4 network ranges (Ex: <IP-Address>/24).\n"}, {"char_start": 632, "char_end": 699, "chars": "    * iplist6 - List of ipv4 network ranges (Ex: <IP-Address>/64).\n"}]}}
{"func_name": 140, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import codecs\nimport os\nimport re\n\nimport setuptools\nfrom setuptools import setup\n\n\ndef read(fname):\n    file_path = os.path.join(os.path.dirname(__file__), fname)\n    return codecs.open(file_path, encoding='utf-8').read()\n\n\ndef get_version():\n    regex = re.compile(r'version = \"(.+)\"')\n    return regex.findall(read(os.path.join('..', 'pyproject.toml')))[0]\n\n\nAUTHOR = 'Fu Hanxi'\nEMAIL = 'fuhanxi@espressif.com'\nNAME = 'pytest-embedded'\nSHORT_DESCRIPTION = 'pytest embedded plugin'\nLICENSE = 'MIT'\nURL = 'https://docs.espressif.com/projects/pytest-embedded/en/latest/'\nREQUIRES = [\n    'pytest>=6.2.0',\n    'pexpect>=4.4',\n]\nENTRY_POINTS = {\n    'pytest11': [\n        'pytest_embedded = pytest_embedded.plugin',\n    ],\n}\n\nsetup(\n    name=NAME,\n    version=get_version(),\n    author=AUTHOR,\n    author_email=EMAIL,\n    license=LICENSE,\n    url=URL,\n    description=SHORT_DESCRIPTION,\n    long_description=read('README.md'),\n    packages=setuptools.find_packages(exclude='tests'),\n    python_requires='>=3.6',\n    install_requires=REQUIRES,\n    classifiers=[\n        'Framework :: Pytest',\n        'Intended Audience :: Developers',\n        'Topic :: Software Development :: Testing',", "func_src_after": "import codecs\nimport os\nimport re\n\nimport setuptools\nfrom setuptools import setup\n\n\ndef read(fname):\n    file_path = os.path.join(os.path.dirname(__file__), fname)\n    return codecs.open(file_path, encoding='utf-8').read()\n\n\ndef get_version():\n    regex = re.compile(r'version = \"(.+)\"')\n    return regex.findall(read(os.path.join('..', 'pyproject.toml')))[0]\n\n\nAUTHOR = 'Fu Hanxi'\nEMAIL = '<EMAIL>'\nNAME = 'pytest-embedded'\nSHORT_DESCRIPTION = 'pytest embedded plugin'\nLICENSE = 'MIT'\nURL = 'https://docs.espressif.com/projects/pytest-embedded/en/latest/'\nREQUIRES = [\n    'pytest>=6.2.0',\n    'pexpect>=4.4',\n]\nENTRY_POINTS = {\n    'pytest11': [\n        'pytest_embedded = pytest_embedded.plugin',\n    ],\n}\n\nsetup(\n    name=NAME,\n    version=get_version(),\n    author=AUTHOR,\n    author_email=EMAIL,\n    license=LICENSE,\n    url=URL,\n    description=SHORT_DESCRIPTION,\n    long_description=read('README.md'),\n    packages=setuptools.find_packages(exclude='tests'),\n    python_requires='>=3.6',\n    install_requires=REQUIRES,\n    classifiers=[\n        'Framework :: Pytest',\n        'Intended Audience :: Developers',\n        'Topic :: Software Development :: Testing',", "line_changes": {"deleted": [{"line_no": 20, "char_start": 382, "char_end": 414, "line": "EMAIL = 'fuhanxi@espressif.com'\n"}], "added": [{"line_no": 21, "char_start": 382, "char_end": 400, "line": "EMAIL = '<EMAIL>'\n"}]}, "char_changes": {"deleted": [{"char_start": 382, "char_end": 414, "chars": "EMAIL = 'fuhanxi@espressif.com'\n"}], "added": [{"char_start": 382, "char_end": 400, "chars": "EMAIL = '<EMAIL>'\n"}]}}
{"func_name": 176, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                \"password should have at least 2 digits\"\n            ), True\n        )\n\n    def test_special_character_in_password(self):\n        \"\"\"\n        Tests for a password that has no special character\n        \"\"\"\n        self.password_data[\"password\"] = \"HenkDTestPAss23\"\n        self.password_data[\"password_confirm\"] = \"HenkDTestPAss23\"\n        self.password_reset()\n        response = self.password_reset_confirm()\n        self.assertEqual(\n            response.status_code,\n            status.HTTP_400_BAD_REQUEST\n        )\n        self.assertEqual(\n            self.contains_error(\n                response.data.get(\"errors\").get(\"password\"),\n                \"password should have at least 1 special character\"\n            ), True\n        )\n\n    def test_less_than_3_lowercase_in_password(self):\n        \"\"\"\n        Tests for password with less than three lowercase letters\n        \"\"\"\n        self.password_data[\"password\"] = \"HENKKDTAKPAab23!#\"\n        self.password_data[\"password_confirm\"] = \"HENKKDTAKPAab23!#\"\n        self.password_reset()\n        response = self.password_reset_confirm()\n        self.assertEqual(\n            response.status_code,\n            status.HTTP_400_BAD_REQUEST\n        )\n        self.assertEqual(\n            self.contains_error(\n                response.data.get(\"errors\").get(\"password\"),\n                \"password should have at least 3 lowercase letters\"\n            ), True\n        )\n\n    def test_blank_password_confirm(self):\n        \"\"\"\n        Tests blank password confirm\n        \"\"\"\n        self.password_data[\"password_confirm\"] = \"\"\n        self.password_reset()\n        response = self.password_reset_confirm()\n        self.assertEqual(", "func_src_after": "                \"password should have at least 2 digits\"\n            ), True\n        )\n\n    def test_special_character_in_password(self):\n        \"\"\"\n        Tests for a password that has no special character\n        \"\"\"\n        self.password_data[\"password\"] = \"HenkDTestPAss23\"\n        self.password_data[\"password_confirm\"] = \"HenkDTestPAss23\"\n        self.password_reset()\n        response = self.password_reset_confirm()\n        self.assertEqual(\n            response.status_code,\n            status.HTTP_400_BAD_REQUEST\n        )\n        self.assertEqual(\n            self.contains_error(\n                response.data.get(\"errors\").get(\"password\"),\n                \"password should have at least 1 special character\"\n            ), True\n        )\n\n    def test_less_than_3_lowercase_in_password(self):\n        \"\"\"\n        Tests for password with less than three lowercase letters\n        \"\"\"\n        self.password_data[\"password\"] = \"HENKKDTAKPAab23!#\"\n        self.password_data[\"password_confirm\"] = \"HENKKDTAKPAab23!#\"\n        self.password_reset()\n        response = self.password_reset_confirm()\n        self.assertEqual(\n            response.status_code,\n            status.HTTP_400_BAD_REQUEST\n        )\n        self.assertEqual(\n            self.contains_error(\n                response.data.get(\"errors\").get(\"password\"),\n                \"password should have at least 3 lowercase letters\"\n            ), True\n        )\n\n    def test_blank_password_confirm(self):\n        \"\"\"\n        Tests blank password confirm\n        \"\"\"\n        self.password_data[\"password_confirm\"] = \"\"\n        self.password_reset()\n        response = self.password_reset_confirm()\n        self.assertEqual(", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 191, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        \"req_reference_number\": order_number,\n        \"req_ship_to_address_city\": \"Manhattan\",\n        \"req_ship_to_address_country\": \"US\",\n        \"req_ship_to_address_line1\": \"627 W 27th st\",\n        \"req_ship_to_address_postal_code\": \"10001\",\n        \"req_ship_to_address_state\": \"NY\",\n        \"req_ship_to_forename\": \"Bob\",\n        \"req_ship_to_phone\": \"18006927753\",\n        \"req_ship_to_surname\": \"Smith\",\n        \"req_transaction_type\": \"authorization\",\n        \"req_transaction_uuid\": str(randrange(100000000000, 999999999999)),\n        \"request_token\": \"Ahj/7wSR8sYxolZgxwyeIkG7lw3ZNnDmLNjMqcSPOS4lfDoTAFLiV8OhM0glqN4vpQyaSZbpAd0+3AnI+WMY0SswY4ZPAAAALRaM\",\n        \"req_merchant_secure_data4\": encrypt_session_id(session_id),\n        \"score_bin_country\": \"US\",\n        \"score_card_issuer\": \"JPMORGAN CHASE BANK, N.A.\",\n        \"score_card_scheme\": \"VISA CREDIT\",\n        \"score_host_severity\": \"1\",\n        \"score_internet_info\": \"FREE-EM^MM-IPBC\",\n        \"score_ip_city\": \"new york\",\n        \"score_ip_country\": \"us\",\n        \"score_ip_routing_method\": \"fixed\",\n        \"score_ip_state\": \"ny\",\n        \"score_model_used\": \"default\",\n        \"score_rcode\": \"1\",\n        \"score_reason_code\": \"480\",\n        \"score_return_code\": \"1070000\",\n        \"score_rflag\": \"SOK\",\n        \"score_rmsg\": \"score service was successful\",\n        \"score_score_result\": \"0\",\n        \"score_time_local\": \"10:06:36\",\n        \"transaction_id\": str(randrange(0, 99999999999999999999)),\n        \"utf8\": \"✓\",\n    }\n    return data\n\n\ndef sign_reply_data(data):\n    profile = get_sa_profile()\n    fields = list(data.keys())\n    data[\"signature\"] = (\n        SecureAcceptanceSigner(profile.secret_key).sign(data, fields).decode(\"utf8\")\n    )\n    data[\"signed_date_time\"] = datetime.utcnow().strftime(\"%Y-%m-%dT%H:%M:%SZ\")\n    data[\"signed_field_names\"] = \",\".join(fields)\n    return data\n", "func_src_after": "        \"req_reference_number\": order_number,\n        \"req_ship_to_address_city\": \"Manhattan\",\n        \"req_ship_to_address_country\": \"US\",\n        \"req_ship_to_address_line1\": \"627 W 27th st\",\n        \"req_ship_to_address_postal_code\": \"10001\",\n        \"req_ship_to_address_state\": \"NY\",\n        \"req_ship_to_forename\": \"Bob\",\n        \"req_ship_to_phone\": \"18006927753\",\n        \"req_ship_to_surname\": \"Smith\",\n        \"req_transaction_type\": \"authorization\",\n        \"req_transaction_uuid\": str(randrange(100000000000, 999999999999)),\n        \"request_token\": \"Ahj/7wSR8sYxolZgxwyeIkG7lw3ZNnDmLNjMqcSPOS4lfDoTAFLiV8OhM0glqN4vpQyaSZbpAd0+3AnI+WMY0SswY4ZPAAAALRaM\",\n        \"req_merchant_secure_data4\": encrypt_session_id(session_id),\n        \"score_bin_country\": \"US\",\n        \"score_card_issuer\": \"JPMORGAN CHASE BANK, N.A.\",\n        \"score_card_scheme\": \"VISA CREDIT\",\n        \"score_host_severity\": \"1\",\n        \"score_internet_info\": \"FREE-EM^MM-IPBC\",\n        \"score_ip_city\": \"new york\",\n        \"score_ip_country\": \"us\",\n        \"score_ip_routing_method\": \"fixed\",\n        \"score_ip_state\": \"ny\",\n        \"score_model_used\": \"default\",\n        \"score_rcode\": \"1\",\n        \"score_reason_code\": \"480\",\n        \"score_return_code\": \"1070000\",\n        \"score_rflag\": \"SOK\",\n        \"score_rmsg\": \"score service was successful\",\n        \"score_score_result\": \"0\",\n        \"score_time_local\": \"10:06:36\",\n        \"transaction_id\": str(randrange(0, 99999999999999999999)),\n        \"utf8\": \"✓\",\n    }\n    return data\n\n\ndef sign_reply_data(data):\n    profile = get_sa_profile()\n    fields = list(data.keys())\n    data[\"signature\"] = (\n        SecureAcceptanceSigner(profile.secret_key).sign(data, fields).decode(\"utf8\")\n    )\n    data[\"signed_date_time\"] = datetime.utcnow().strftime(\"%Y-%m-%dT%H:%M:%SZ\")\n    data[\"signed_field_names\"] = \",\".join(fields)\n    return data\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 192, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/local/bin/python\n\nimport os\nimport sys\nimport inspect\nfrom nose import with_setup\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(currentdir)\nincludedir = os.path.join(parentdir, \"githubdl\")\nsys.path.insert(0, includedir)\nimport url_helpers as uh\n\nclass TestUrlHelpers:\n\n    def test_check_url_is_http_http(self):\n        result = uh.check_url_is_http(\"http://test.com\")\n        assert result == True\n\n    def test_check_url_is_http_https(self):\n        result = uh.check_url_is_http(\"https://test.com\")\n        assert result == True\n\n    def test_check_url_is_not_http_1(self):\n        result = uh.check_url_is_http(\"httpxx://test.com\")\n        assert result == False\n\n    def test_check_url_is_not_http_2(self):\n        result = uh.check_url_is_http(\"htp://test.com\")\n        assert result == False\n\n    def test_check_url_is_ssh(self):\n        result = uh.check_url_is_ssh(\"git@github.com:pypa/sampleproject.git\")\n        assert result == True\n\n    def test_check_url_is_not_ssh_invalid_user(self):\n        result = uh.check_url_is_ssh(\"giti_@github.com:pypa/sampleproject.git\")\n        assert result == False\n\n    def test_check_url_is_not_ssh_slash(self):\n        result = uh.check_url_is_ssh(\"git@test.com/test.git\")\n        assert result == True\n\n    def test_check_url_is_not_ssh_http(self):\n        result = uh.check_url_is_ssh(\"htp://test.com\")\n        assert result == False\n\n    def test_get_domain_name_from_http(self):\n        result = uh.get_domain_name_from_http_url(\"https://github.com/pypa/sampleproject.git\")\n        assert result == \"github.com\"\n", "func_src_after": "#!/usr/local/bin/python\n\nimport os\nimport sys\nimport inspect\nfrom nose import with_setup\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(currentdir)\nincludedir = os.path.join(parentdir, \"githubdl\")\nsys.path.insert(0, includedir)\nimport url_helpers as uh\n\nclass TestUrlHelpers:\n\n    def test_check_url_is_http_http(self):\n        result = uh.check_url_is_http(\"http://test.com\")\n        assert result == True\n\n    def test_check_url_is_http_https(self):\n        result = uh.check_url_is_http(\"https://test.com\")\n        assert result == True\n\n    def test_check_url_is_not_http_1(self):\n        result = uh.check_url_is_http(\"httpxx://test.com\")\n        assert result == False\n\n    def test_check_url_is_not_http_2(self):\n        result = uh.check_url_is_http(\"htp://test.com\")\n        assert result == False\n\n    def test_check_url_is_ssh(self):\n        result = uh.check_url_is_ssh(\"git@github.com:pypa/sampleproject.git\")\n        assert result == True\n\n    def test_check_url_is_not_ssh_invalid_user(self):\n        result = uh.check_url_is_ssh(\"giti_@github.com:pypa/sampleproject.git\")\n        assert result == False\n\n    def test_check_url_is_not_ssh_slash(self):\n        result = uh.check_url_is_ssh(\"git@test.com/test.git\")\n        assert result == True\n\n    def test_check_url_is_not_ssh_http(self):\n        result = uh.check_url_is_ssh(\"htp://test.com\")\n        assert result == False\n\n    def test_get_domain_name_from_http(self):\n        result = uh.get_domain_name_from_http_url(\"https://github.com/pypa/sampleproject.git\")\n        assert result == \"github.com\"\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 220, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            line_buf = ''\n\n\n# initiate the parser\nparser = argparse.ArgumentParser()\n\n# add long and short argument\nparser.add_argument(\"--ip\", \"-ip\", help=\"set ip if using external caris instance\")\nparser.add_argument(\"--command\", \"-c\", help=\"the command to run in caris windows machine\")\n\n# read arguments from the command line\nargs = parser.parse_args()\n\nhostname = None\nif args.ip:\n    logging.info(\"Using external caris instance %s\" % args.ip)\n    hostname = args.ip\nelse:\n    res = find_caris_ip()\n    hostname = res['Reservations'][0]['Instances'][0]['PublicIpAddress']\n\ncommand = args.command\nlogging.info(\"Running command:\\n %s\" % command)\n# this is the key used to encrypt the private key. \n# The encrypted private key is stored in AWS Secrets and assisible through IAM roles. \n# So, storing the password in plain text isn't making it less secure.\npassword = 'arnab' \nkey_env_var_name = 'caris_rsa_pkey_string'\nusername = \"Administrator\"\nport = 22\n\nkey_string = \"\"\"-----BEGIN RSA PRIVATE KEY-----\n-----END RSA PRIVATE KEY-----\"\"\" # I saved my key in this string\nkey_string = os.environ[key_env_var_name]\n\nnot_really_a_file = io.StringIO(key_string)\n\nprivate_key = paramiko.RSAKey.from_private_key(not_really_a_file,password=password)\n\nnot_really_a_file.close()\n\n\n\ntry:\n    client = paramiko.SSHClient()\n    client.load_system_host_keys()\n    client.set_missing_host_key_policy(paramiko.WarningPolicy)\n    \n    client.connect(hostname, port=port, username=username,  pkey=private_key)\n", "func_src_after": "            line_buf = ''\n\n\n# initiate the parser\nparser = argparse.ArgumentParser()\n\n# add long and short argument\nparser.add_argument(\"--ip\", \"-ip\", help=\"set ip if using external caris instance\")\nparser.add_argument(\"--command\", \"-c\", help=\"the command to run in caris windows machine\")\n\n# read arguments from the command line\nargs = parser.parse_args()\n\nhostname = None\nif args.ip:\n    logging.info(\"Using external caris instance %s\" % args.ip)\n    hostname = args.ip\nelse:\n    res = find_caris_ip()\n    hostname = res['Reservations'][0]['Instances'][0]['PublicIpAddress']\n\ncommand = args.command\nlogging.info(\"Running command:\\n %s\" % command)\n# this is the key used to encrypt the private key. \n# The encrypted private key is stored in AWS Secrets and assisible through IAM roles. \n# So, storing the password in plain text isn't making it less secure.\npassword = 'arnab' \nkey_env_var_name = 'caris_rsa_pkey_string'\nusername = \"Administrator\"\nport = 22\n\nkey_string = \"\"\"-----BEGIN RSA PRIVATE KEY-----\n-----END RSA PRIVATE KEY-----\"\"\" # I saved my key in this string\nkey_string = os.environ[key_env_var_name]\n\nnot_really_a_file = io.StringIO(key_string)\n\nprivate_key = paramiko.RSAKey.from_private_key(not_really_a_file,password=password)\n\nnot_really_a_file.close()\n\n\n\ntry:\n    client = paramiko.SSHClient()\n    client.load_system_host_keys()\n    client.set_missing_host_key_policy(paramiko.WarningPolicy)\n    \n    client.connect(hostname, port=port, username=username,  pkey=private_key)\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 234, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    def test_admin_person_title_change_view_get(self):\n        \"\"\"\n        The admin change view should include the editable and readonly fields as expected.\n        \"\"\"\n        user = UserFactory(is_staff=True, is_superuser=True)\n        self.client.login(username=user.username, password=\"password\")\n\n        # Create a person title\n        person_title = PersonTitleFactory()\n\n        # Get the admin change view\n        url = reverse(\"admin:persons_persontitle_change\", args=[person_title.id])\n        response = self.client.get(url)\n\n        # Check that the page includes all our fields\n        self.assertContains(response, person_title.title)\n        self.assertContains(response, person_title.abbreviation)\n\n    def test_admin_person_title_change_view_post(self):\n        \"\"\"\n        Validate that the person title can be updated via the admin.\n        \"\"\"\n        user = UserFactory(is_staff=True, is_superuser=True)\n        self.client.login(username=user.username, password=\"password\")\n\n        # Create a person, title will automaticaly be created\n        person_title = PersonTitleFactory(title=\"Mister\", abbreviation=\"Mr.\")\n\n        # Get the admin change view\n        url = reverse(\"admin:persons_persontitle_change\", args=[person_title.id])\n        data = {\"title\": \"Madam\", \"abbreviation\": \"Mm.\"}\n        response = self.client.post(url, data)\n        self.assertEqual(response.status_code, 302)\n        # Check that the person title was updated as expected\n        person_title = PersonTitle.objects.get(id=person_title.id)\n        self.assertEqual(person_title.title, \"Madam\")\n        self.assertEqual(person_title.abbreviation, \"Mm.\")\n", "func_src_after": "    def test_admin_person_title_change_view_get(self):\n        \"\"\"\n        The admin change view should include the editable and readonly fields as expected.\n        \"\"\"\n        user = UserFactory(is_staff=True, is_superuser=True)\n        self.client.login(username=user.username, password=\"password\")\n\n        # Create a person title\n        person_title = PersonTitleFactory()\n\n        # Get the admin change view\n        url = reverse(\"admin:persons_persontitle_change\", args=[person_title.id])\n        response = self.client.get(url)\n\n        # Check that the page includes all our fields\n        self.assertContains(response, person_title.title)\n        self.assertContains(response, person_title.abbreviation)\n\n    def test_admin_person_title_change_view_post(self):\n        \"\"\"\n        Validate that the person title can be updated via the admin.\n        \"\"\"\n        user = UserFactory(is_staff=True, is_superuser=True)\n        self.client.login(username=user.username, password=\"password\")\n\n        # Create a person, title will automaticaly be created\n        person_title = PersonTitleFactory(title=\"Mister\", abbreviation=\"Mr.\")\n\n        # Get the admin change view\n        url = reverse(\"admin:persons_persontitle_change\", args=[person_title.id])\n        data = {\"title\": \"Madam\", \"abbreviation\": \"Mm.\"}\n        response = self.client.post(url, data)\n        self.assertEqual(response.status_code, 302)\n        # Check that the person title was updated as expected\n        person_title = PersonTitle.objects.get(id=person_title.id)\n        self.assertEqual(person_title.title, \"Madam\")\n        self.assertEqual(person_title.abbreviation, \"Mm.\")\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 258, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    redirect,\n    request,\n    send_from_directory,\n    url_for,\n)\nfrom flask_cors import CORS, cross_origin\nfrom multiprocessing import Process\n\napp = Flask(__name__)\ncors = CORS(app)\napp.config['CORS_HEADERS'] = 'Content-Type'\napp.secret_key = \"secret\"\napp.config['MAX_CONTENT_LENGTH'] = 50_000_000\napp.config.from_envvar(\"OCRMYPDF_WEBSERVICE_SETTINGS\", silent=True)\n\nALLOWED_EXTENSIONS = set([\"pdf\"])\n\ndef allowed_file(filename):\n    return \".\" in filename and filename.rsplit(\".\", 1)[1].lower() in ALLOWED_EXTENSIONS\n\ndef do_ocrmypdf(filename, filepath):\n    downloaddir = TemporaryDirectory(prefix=\"ocrmypdf-download\")\n    down_file = os.path.join(downloaddir.name, filename)\n\t\n    params = \"\"\n    if (\"params\" in request.form):\n        params = request.form[\"params\"]\n    cmd_args = [arg for arg in shlex.split(params)]\n\t\n    if \"--sidecar\" in cmd_args:\n        return Response(\"--sidecar not supported\", 501, mimetype='text/plain')\n    \n    p = Process(target=do_myocr, args=(filename, filepath, down_file, ))\n    p.start()\n    p.join()\n\t\n    message = json.dumps({ 'filename': filename, 'page': -1 })\n    rediscli.publish(os.environ['REDIS_CHANNEL'], message)\n    return send_from_directory(downloaddir.name, filename, as_attachment=True)\n\nfrom urllib.parse import unquote\n\n@app.route(\"/\", methods=[\"GET\", \"POST\"])\n@cross_origin()\ndef upload_file():\n    if request.method == \"POST\":\n        if \"file\" not in request.files:\n            return Response(\"Missing file\", 400, mimetype='text/plain')\n        file = request.files[\"file\"]\n        uploaddir = TemporaryDirectory(prefix=\"ocrmypdf-upload\")", "func_src_after": "    redirect,\n    request,\n    send_from_directory,\n    url_for,\n)\nfrom flask_cors import CORS, cross_origin\nfrom multiprocessing import Process\n\napp = Flask(__name__)\ncors = CORS(app)\napp.config['CORS_HEADERS'] = 'Content-Type'\napp.secret_key = \"secret\"\napp.config['MAX_CONTENT_LENGTH'] = 50_000_000\napp.config.from_envvar(\"OCRMYPDF_WEBSERVICE_SETTINGS\", silent=True)\n\nALLOWED_EXTENSIONS = set([\"pdf\"])\n\ndef allowed_file(filename):\n    return \".\" in filename and filename.rsplit(\".\", 1)[1].lower() in ALLOWED_EXTENSIONS\n\ndef do_ocrmypdf(filename, filepath):\n    downloaddir = TemporaryDirectory(prefix=\"ocrmypdf-download\")\n    down_file = os.path.join(downloaddir.name, filename)\n\t\n    params = \"\"\n    if (\"params\" in request.form):\n        params = request.form[\"params\"]\n    cmd_args = [arg for arg in shlex.split(params)]\n\t\n    if \"--sidecar\" in cmd_args:\n        return Response(\"--sidecar not supported\", 501, mimetype='text/plain')\n    \n    p = Process(target=do_myocr, args=(filename, filepath, down_file, ))\n    p.start()\n    p.join()\n\t\n    message = json.dumps({ 'filename': filename, 'page': -1 })\n    rediscli.publish(os.environ['REDIS_CHANNEL'], message)\n    return send_from_directory(downloaddir.name, filename, as_attachment=True)\n\nfrom urllib.parse import unquote\n\n@app.route(\"/\", methods=[\"GET\", \"POST\"])\n@cross_origin()\ndef upload_file():\n    if request.method == \"POST\":\n        if \"file\" not in request.files:\n            return Response(\"Missing file\", 400, mimetype='text/plain')\n        file = request.files[\"file\"]\n        uploaddir = TemporaryDirectory(prefix=\"ocrmypdf-upload\")", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 265, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                    'source': 'https://user:password@test.local',\n                    'action': 'allowed',\n                },\n            },\n            'options': {},\n        })\n\n    def test_read_options(self):\n        content = u\"\"\"options:\n    someoption: somevalue\n    someoption2: somevalue2\nsafe_regions:\n    \"local,file:///c:/somedir/somefile.txt\":\n        method: local\n        source: \"file:///c:/somedir/somefile.txt\"\n        action: forbidden\n\"\"\"\n\n        self.config.read_configuration(StringIO.StringIO(\"\"))\n\n        self.assertEqual(self.config.configuration, {\n            'safe_regions': {},\n            'options': {},\n        })\n\n        self.config.read_configuration(StringIO.StringIO(content))\n\n        self.assertEqual(self.config.configuration, {\n            'options': {\n                'someoption': 'somevalue',\n                'someoption2': 'somevalue2',\n            },\n            'safe_regions': {\n                'local,file:///c:/somedir/somefile.txt': {\n                    'method': 'local',\n                    'source': 'file:///c:/somedir/somefile.txt',\n                    'action': 'forbidden',\n                },\n            },\n        })\n\n    def test_get_region(self):\n        self.assertEqual(self.config.get_region('url', u\"http://a:b@c.com:128/what?ever&there=is\", test=True), \"http://c.com:128\")\n        self.assertEqual(self.config.get_region('url', u\"https://a:b@c.com:128/what?ever&there=is\", test=True), \"https://c.com:128\")\n        if platform.system() == 'Windows':\n            self.assertEqual(self.config.get_region('local', u\"file:///c:/somedir/somefile.txt\", test=True), \"file:///c:/somedir/\")\n            self.assertEqual(self.config.get_region('local', u\"file:///c:/somedir/\", test=True), \"file:///c:/somedir/\")\n        if platform.system() == 'Darwin':\n            self.assertEqual(self.config.get_region('local', u\"file:///home/username/somefile.txt\", test=True), \"file:///home/username/\")\n            self.assertEqual(self.config.get_region('local', u\"file:///home/username/\", test=True), \"file:///home/username/\")", "func_src_after": "                    'source': 'https://user:password@test.local',\n                    'action': 'allowed',\n                },\n            },\n            'options': {},\n        })\n\n    def test_read_options(self):\n        content = u\"\"\"options:\n    someoption: somevalue\n    someoption2: somevalue2\nsafe_regions:\n    \"local,file:///c:/somedir/somefile.txt\":\n        method: local\n        source: \"file:///c:/somedir/somefile.txt\"\n        action: forbidden\n\"\"\"\n\n        self.config.read_configuration(StringIO.StringIO(\"\"))\n\n        self.assertEqual(self.config.configuration, {\n            'safe_regions': {},\n            'options': {},\n        })\n\n        self.config.read_configuration(StringIO.StringIO(content))\n\n        self.assertEqual(self.config.configuration, {\n            'options': {\n                'someoption': 'somevalue',\n                'someoption2': 'somevalue2',\n            },\n            'safe_regions': {\n                'local,file:///c:/somedir/somefile.txt': {\n                    'method': 'local',\n                    'source': 'file:///c:/somedir/somefile.txt',\n                    'action': 'forbidden',\n                },\n            },\n        })\n\n    def test_get_region(self):\n        self.assertEqual(self.config.get_region('url', u\"http://a:b@c.com:128/what?ever&there=is\", test=True), \"http://c.com:128\")\n        self.assertEqual(self.config.get_region('url', u\"https://a:b@c.com:128/what?ever&there=is\", test=True), \"https://c.com:128\")\n        if platform.system() == 'Windows':\n            self.assertEqual(self.config.get_region('local', u\"file:///c:/somedir/somefile.txt\", test=True), \"file:///c:/somedir/\")\n            self.assertEqual(self.config.get_region('local', u\"file:///c:/somedir/\", test=True), \"file:///c:/somedir/\")\n        if platform.system() == 'Darwin':\n            self.assertEqual(self.config.get_region('local', u\"file:///home/username/somefile.txt\", test=True), \"file:///home/username/\")\n            self.assertEqual(self.config.get_region('local', u\"file:///home/username/\", test=True), \"file:///home/username/\")", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 267, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        self.assertEqual(c2.get_safety('url', 'http://a:b@xx.com:128/what?ever&there=is', test=True), 'forbidden')\n\n    def test_get_safety(self):\n        self.config.read_configuration(StringIO.StringIO(\"\"\"\nsafe_regions:\n    \"local,file:///home/username/\":\n        method: local\n        source: \"file:///home/username/\"\n        action: allowed\n    \"local,file:///file:///home/username/\":\n        method: local\n        source: \"file:///file:///home/username/\"\n        action: allowed\n    \"local,file:///etc/\":\n        method: local\n        source: \"file:///etc/\"\n        action: forbidden\n    \"local,file:///etc/a/\":\n        method: local\n        source: \"file:///etc/a/\"\n        action: allowed\n    \"local,file:///etc/b/\":\n        method: local\n        source: \"file:///etc/b/\"\n        action: allowed\n    \"local,file:///c:/a/\":\n        method: local\n        source: \"file:///c:/a/\"\n        action: allowed\n    \"local,file:///c:/b/\":\n        method: local\n        source: \"file:///c:/b/\"\n        action: allowed\n    \"local,file:///c:/c/\":\n        method: local\n        source: \"file:///c:/c/\"\n        action: forbidden\n    \"url,https://test.local\":\n        method: url\n        source: 'https://test.local'\n        action: allowed\n    \"url,https://test.forbidden.local\":\n        method: url\n        source: 'https://test.forbidden.local'\n        action: forbidden\n\"\"\"))\n\n        print repr(self.config.read_configuration)\n        if platform.system() == 'Windows':\n            self.assertEqual(self.config.get_safety('local', 'file:///c:/a/file.txt', test=True), 'allowed')", "func_src_after": "        self.assertEqual(c2.get_safety('url', 'http://a:b@xx.com:128/what?ever&there=is', test=True), 'forbidden')\n\n    def test_get_safety(self):\n        self.config.read_configuration(StringIO.StringIO(\"\"\"\nsafe_regions:\n    \"local,file:///home/username/\":\n        method: local\n        source: \"file:///home/username/\"\n        action: allowed\n    \"local,file:///file:///home/username/\":\n        method: local\n        source: \"file:///file:///home/username/\"\n        action: allowed\n    \"local,file:///etc/\":\n        method: local\n        source: \"file:///etc/\"\n        action: forbidden\n    \"local,file:///etc/a/\":\n        method: local\n        source: \"file:///etc/a/\"\n        action: allowed\n    \"local,file:///etc/b/\":\n        method: local\n        source: \"file:///etc/b/\"\n        action: allowed\n    \"local,file:///c:/a/\":\n        method: local\n        source: \"file:///c:/a/\"\n        action: allowed\n    \"local,file:///c:/b/\":\n        method: local\n        source: \"file:///c:/b/\"\n        action: allowed\n    \"local,file:///c:/c/\":\n        method: local\n        source: \"file:///c:/c/\"\n        action: forbidden\n    \"url,https://test.local\":\n        method: url\n        source: 'https://test.local'\n        action: allowed\n    \"url,https://test.forbidden.local\":\n        method: url\n        source: 'https://test.forbidden.local'\n        action: forbidden\n\"\"\"))\n\n        print repr(self.config.read_configuration)\n        if platform.system() == 'Windows':\n            self.assertEqual(self.config.get_safety('local', 'file:///c:/a/file.txt', test=True), 'allowed')", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 271, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "from flask import current_app as app\nfrom werkzeug.security import generate_password_hash\n\nfrom . import db                # from app import db\nfrom .models import User, Post  # from app.models import User, Post\n\n\nfrom random import randint, choice, sample\nfrom datetime import datetime, timedelta\nfrom lorem import sentence, paragraph\n\n\n@app.cli.command('init-db')\ndef init_db():\n    db.drop_all()\n    db.create_all()\n\n\n@app.cli.command('add-data')\ndef add_data():\n    User.query.delete()\n\n    db.session.commit()\n\n    users = []\n\n    users.append(User(username='haris', email='haris@sae.edu', lastname='Argyropoulos', firstname='Zacharias-Christos', password=generate_password_hash('12121212')))\n    users.append(User(username='ioanna', email='ioanna@sae.edu', lastname='Mitsani', firstname='Ioanna', password=generate_password_hash('12121212')))\n    users.append(User(username='stavros', email='stavros@sae.edu', lastname='Tsiogkas', firstname='Stavros', password=generate_password_hash('12121212')))\n    users.append(User(username='marios', email='marios@sae.edu', lastname='Tsioutsis', firstname='Marios', password=generate_password_hash('12121212')))\n\n    users.append(User(username='george', email='george@sae.edu', lastname='Sisko', firstname='George', password=generate_password_hash('12121212')))\n    users.append(User(username='lena', email='lena@sae.edu', lastname='Lekkou', firstname='Lena', password=generate_password_hash('12121212')))\n    users.append(User(username='nikos.a', email='nikos.a@sae.edu', lastname='Apostolakis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n    users.append(User(username='nikos.b', email='nikos.b@sae.edu', lastname='Bilalis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n\n    for u in users:\n        u.followers = [f for f in sample(users, randint(1, len(users))) if f != u]\n        db.session.add(u)\n\n    ts = datetime.now() - timedelta(weeks=6*4)    # .utcnow()\n\n    while datetime.now() >= ts:\n        p = Post(body=paragraph(), created_at=ts)\n        u = choice(users)\n        u.posts.append(p)\n        ts += timedelta(microseconds=randint(1, 10**11))\n\n    db.session.commit()\n", "func_src_after": "from flask import current_app as app\nfrom werkzeug.security import generate_password_hash\n\nfrom . import db                # from app import db\nfrom .models import User, Post  # from app.models import User, Post\n\n\nfrom random import randint, choice, sample\nfrom datetime import datetime, timedelta\nfrom lorem import sentence, paragraph\n\n\n@app.cli.command('init-db')\ndef init_db():\n    db.drop_all()\n    db.create_all()\n\n\n@app.cli.command('add-data')\ndef add_data():\n    User.query.delete()\n\n    db.session.commit()\n\n    users = []\n\n    users.append(User(username='haris', email='<EMAIL>', lastname='Argyropoulos', firstname='Zacharias-Christos', password=generate_password_hash('12121212')))\n    users.append(User(username='ioanna', email='<EMAIL>u', lastname='Mitsani', firstname='Ioanna', password=generate_password_hash('12121212')))\n    users.append(User(username='stavros', email='<EMAIL>', lastname='Tsiogkas', firstname='Stavros', password=generate_password_hash('12121212')))\n    users.append(User(username='marios', email='<EMAIL>', lastname='Tsioutsis', firstname='Marios', password=generate_password_hash('12121212')))\n\n    users.append(User(username='george', email='<EMAIL>', lastname='Sisko', firstname='George', password=generate_password_hash('12121212')))\n    users.append(User(username='lena', email='<EMAIL>', lastname='Lekkou', firstname='Lena', password=generate_password_hash('12121212')))\n    users.append(User(username='nikos.a', email='<EMAIL>', lastname='Apostolakis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n    users.append(User(username='nikos.b', email='<EMAIL>', lastname='Bilalis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n\n    for u in users:\n        u.followers = [f for f in sample(users, randint(1, len(users))) if f != u]\n        db.session.add(u)\n\n    ts = datetime.now() - timedelta(weeks=6*4)    # .utcnow()\n\n    while datetime.now() >= ts:\n        p = Post(body=paragraph(), created_at=ts)\n        u = choice(users)\n        u.posts.append(p)\n        ts += timedelta(microseconds=randint(1, 10**11))\n\n    db.session.commit()\n", "line_changes": {"deleted": [{"line_no": 27, "char_start": 532, "char_end": 698, "line": "    users.append(User(username='haris', email='haris@sae.edu', lastname='Argyropoulos', firstname='Zacharias-Christos', password=generate_password_hash('12121212')))\n"}, {"line_no": 29, "char_start": 692, "char_end": 843, "line": "    users.append(User(username='ioanna', email='ioanna@sae.edu', lastname='Mitsani', firstname='Ioanna', password=generate_password_hash('12121212')))\n"}, {"line_no": 31, "char_start": 837, "char_end": 992, "line": "    users.append(User(username='stavros', email='stavros@sae.edu', lastname='Tsiogkas', firstname='Stavros', password=generate_password_hash('12121212')))\n"}, {"line_no": 33, "char_start": 984, "char_end": 1137, "line": "    users.append(User(username='marios', email='marios@sae.edu', lastname='Tsioutsis', firstname='Marios', password=generate_password_hash('12121212')))\n"}, {"line_no": 36, "char_start": 1131, "char_end": 1280, "line": "    users.append(User(username='george', email='george@sae.edu', lastname='Sisko', firstname='George', password=generate_password_hash('12121212')))\n"}, {"line_no": 38, "char_start": 1273, "char_end": 1417, "line": "    users.append(User(username='lena', email='lena@sae.edu', lastname='Lekkou', firstname='Lena', password=generate_password_hash('12121212')))\n"}, {"line_no": 40, "char_start": 1412, "char_end": 1571, "line": "    users.append(User(username='nikos.a', email='nikos.a@sae.edu', lastname='Apostolakis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}, {"line_no": 42, "char_start": 1563, "char_end": 1718, "line": "    users.append(User(username='nikos.b', email='nikos.b@sae.edu', lastname='Bilalis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}], "added": [{"line_no": 28, "char_start": 532, "char_end": 692, "line": "    users.append(User(username='haris', email='<EMAIL>', lastname='Argyropoulos', firstname='Zacharias-Christos', password=generate_password_hash('12121212')))\n"}, {"line_no": 30, "char_start": 692, "char_end": 837, "line": "    users.append(User(username='ioanna', email='<EMAIL>u', lastname='Mitsani', firstname='Ioanna', password=generate_password_hash('12121212')))\n"}, {"line_no": 32, "char_start": 837, "char_end": 984, "line": "    users.append(User(username='stavros', email='<EMAIL>', lastname='Tsiogkas', firstname='Stavros', password=generate_password_hash('12121212')))\n"}, {"line_no": 34, "char_start": 984, "char_end": 1130, "line": "    users.append(User(username='marios', email='<EMAIL>', lastname='Tsioutsis', firstname='Marios', password=generate_password_hash('12121212')))\n"}, {"line_no": 37, "char_start": 1131, "char_end": 1273, "line": "    users.append(User(username='george', email='<EMAIL>', lastname='Sisko', firstname='George', password=generate_password_hash('12121212')))\n"}, {"line_no": 39, "char_start": 1273, "char_end": 1412, "line": "    users.append(User(username='lena', email='<EMAIL>', lastname='Lekkou', firstname='Lena', password=generate_password_hash('12121212')))\n"}, {"line_no": 41, "char_start": 1412, "char_end": 1563, "line": "    users.append(User(username='nikos.a', email='<EMAIL>', lastname='Apostolakis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}, {"line_no": 43, "char_start": 1563, "char_end": 1710, "line": "    users.append(User(username='nikos.b', email='<EMAIL>', lastname='Bilalis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}]}, "char_changes": {"deleted": [{"char_start": 532, "char_end": 698, "chars": "    users.append(User(username='haris', email='haris@sae.edu', lastname='Argyropoulos', firstname='Zacharias-Christos', password=generate_password_hash('12121212')))\n"}, {"char_start": 692, "char_end": 843, "chars": "    users.append(User(username='ioanna', email='ioanna@sae.edu', lastname='Mitsani', firstname='Ioanna', password=generate_password_hash('12121212')))\n"}, {"char_start": 837, "char_end": 992, "chars": "    users.append(User(username='stavros', email='stavros@sae.edu', lastname='Tsiogkas', firstname='Stavros', password=generate_password_hash('12121212')))\n"}, {"char_start": 984, "char_end": 1137, "chars": "    users.append(User(username='marios', email='marios@sae.edu', lastname='Tsioutsis', firstname='Marios', password=generate_password_hash('12121212')))\n"}, {"char_start": 1131, "char_end": 1280, "chars": "    users.append(User(username='george', email='george@sae.edu', lastname='Sisko', firstname='George', password=generate_password_hash('12121212')))\n"}, {"char_start": 1273, "char_end": 1417, "chars": "    users.append(User(username='lena', email='lena@sae.edu', lastname='Lekkou', firstname='Lena', password=generate_password_hash('12121212')))\n"}, {"char_start": 1412, "char_end": 1571, "chars": "    users.append(User(username='nikos.a', email='nikos.a@sae.edu', lastname='Apostolakis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}, {"char_start": 1563, "char_end": 1718, "chars": "    users.append(User(username='nikos.b', email='nikos.b@sae.edu', lastname='Bilalis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}], "added": [{"char_start": 532, "char_end": 692, "chars": "    users.append(User(username='haris', email='<EMAIL>', lastname='Argyropoulos', firstname='Zacharias-Christos', password=generate_password_hash('12121212')))\n"}, {"char_start": 692, "char_end": 837, "chars": "    users.append(User(username='ioanna', email='<EMAIL>u', lastname='Mitsani', firstname='Ioanna', password=generate_password_hash('12121212')))\n"}, {"char_start": 837, "char_end": 984, "chars": "    users.append(User(username='stavros', email='<EMAIL>', lastname='Tsiogkas', firstname='Stavros', password=generate_password_hash('12121212')))\n"}, {"char_start": 984, "char_end": 1130, "chars": "    users.append(User(username='marios', email='<EMAIL>', lastname='Tsioutsis', firstname='Marios', password=generate_password_hash('12121212')))\n"}, {"char_start": 1131, "char_end": 1273, "chars": "    users.append(User(username='george', email='<EMAIL>', lastname='Sisko', firstname='George', password=generate_password_hash('12121212')))\n"}, {"char_start": 1273, "char_end": 1412, "chars": "    users.append(User(username='lena', email='<EMAIL>', lastname='Lekkou', firstname='Lena', password=generate_password_hash('12121212')))\n"}, {"char_start": 1412, "char_end": 1563, "chars": "    users.append(User(username='nikos.a', email='<EMAIL>', lastname='Apostolakis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}, {"char_start": 1563, "char_end": 1710, "chars": "    users.append(User(username='nikos.b', email='<EMAIL>', lastname='Bilalis', firstname='Nikolaos', password=generate_password_hash('12121212')))\n"}]}}
{"func_name": 278, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "from django.contrib.auth import get_user_model\nfrom django.urls import reverse\nfrom django.test import TestCase\n\nfrom rest_framework import status\nfrom rest_framework.test import APIClient\n\nfrom core.models import Filiere, Secteur\n\nfrom formulaire.serializers import FiliereSerializer\n\n\nFILIERES_URL = reverse('formulaire:filiere-list')\n\ndef sample_secteur(secteur='Offshoring'):\n    \"\"\"Create and return a sample secteur\"\"\"\n    return Secteur.objects.create(secteur=secteur)\n\nclass PublicFilieresApiTests(TestCase):\n    \"\"\"Test the publicly available Filiere API\"\"\"\n\n    def setUp(self):\n        self.client = APIClient()\n\n    def test_login_required(self):\n        \"\"\"Test that login required for retrieving Filiere\"\"\"\n        res = self.client.get(FILIERES_URL)\n\n        self.assertEqual(res.status_code, status.HTTP_401_UNAUTHORIZED)\n\n\nclass PrivateFilieresApiTests(TestCase):\n    \"\"\"Test the authorized user operateurs API\"\"\"\n\n    def setUp(self):\n        self.user = get_user_model().objects.create_user(\n            'test@anapec.org',\n            'password'\n        )\n        self.client = APIClient()\n        self.client.force_authenticate(self.user)\n\n    def test_retrieve_filieres(self):\n        \"\"\"Test retrieving Filiere\"\"\"\n        Filiere.objects.create(\n            secteur=sample_secteur(secteur='Offshoring'),\n            filiere='Management')\n\n        Filiere.objects.create(\n            secteur=sample_secteur(secteur='Offshoring'),", "func_src_after": "from django.contrib.auth import get_user_model\nfrom django.urls import reverse\nfrom django.test import TestCase\n\nfrom rest_framework import status\nfrom rest_framework.test import APIClient\n\nfrom core.models import Filiere, Secteur\n\nfrom formulaire.serializers import FiliereSerializer\n\n\nFILIERES_URL = reverse('formulaire:filiere-list')\n\ndef sample_secteur(secteur='Offshoring'):\n    \"\"\"Create and return a sample secteur\"\"\"\n    return Secteur.objects.create(secteur=secteur)\n\nclass PublicFilieresApiTests(TestCase):\n    \"\"\"Test the publicly available Filiere API\"\"\"\n\n    def setUp(self):\n        self.client = APIClient()\n\n    def test_login_required(self):\n        \"\"\"Test that login required for retrieving Filiere\"\"\"\n        res = self.client.get(FILIERES_URL)\n\n        self.assertEqual(res.status_code, status.HTTP_401_UNAUTHORIZED)\n\n\nclass PrivateFilieresApiTests(TestCase):\n    \"\"\"Test the authorized user operateurs API\"\"\"\n\n    def setUp(self):\n        self.user = get_user_model().objects.create_user(\n            '<EMAIL>',\n            'password'\n        )\n        self.client = APIClient()\n        self.client.force_authenticate(self.user)\n\n    def test_retrieve_filieres(self):\n        \"\"\"Test retrieving Filiere\"\"\"\n        Filiere.objects.create(\n            secteur=sample_secteur(secteur='Offshoring'),\n            filiere='Management')\n\n        Filiere.objects.create(\n            secteur=sample_secteur(secteur='Offshoring'),", "line_changes": {"deleted": [{"line_no": 37, "char_start": 1011, "char_end": 1042, "line": "            'test@anapec.org',\n"}], "added": [{"line_no": 38, "char_start": 1011, "char_end": 1034, "line": "            '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 1011, "char_end": 1042, "chars": "            'test@anapec.org',\n"}], "added": [{"char_start": 1011, "char_end": 1034, "chars": "            '<EMAIL>',\n"}]}}
{"func_name": 283, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\"\"\"Test suite for LDAP idm.\"\"\"\nimport pytest\nfrom unittest.mock import MagicMock\n\nfrom etsin_finder.utils.flags import set_flags\nfrom etsin_finder.services.ldap_service import LDAPIdmService\nfrom .basetest import BaseTest\nfrom ldap3 import MOCK_SYNC\n\n\nclass ExceptionTest(Exception):\n    \"\"\"Exception for testing.\"\"\"\n\n    pass\n\n\ndef createMockLDAPIdmService(users=None, projects=None):\n    \"\"\"Create a mock LDAP service that will return specific users and projects.\"\"\"\n    if users is None:\n        users = []\n    if projects is None:\n        projects = []\n\n    class MockLDAPIdmService(LDAPIdmService):\n        \"\"\"LDAP Service with mocked users and projects\"\"\"\n\n        def __init__(self, *args, **kwargs):\n            super().__init__(*args, **kwargs)\n            self.connection.strategy.add_entry(\n                \"cn=fake_bind\",\n                {\"userPassword\": \"fake_password\", \"sn\": \"user0_sn\", \"revision\": 0},\n            )\n            for user in users:\n                self._add_user(*user)\n            for project in projects:\n                self._add_project(*project)\n\n        def _add_user(self, uid, given_name, surname, mail, nsAccountLock=\"false\", csc_user_name=None):\n            self.connection.strategy.add_entry(\n                f\"cn={uid},ou=Academic,ou=External,ou=Users,ou=idm,dc=csc,dc=fi\",\n                {\n                    \"cn\": uid,\n                    \"uid\": uid,\n                    \"CSCUserName\": csc_user_name or uid,\n                    \"mail\": mail,\n                    \"givenName\": given_name,\n                    \"sn\": surname,\n                    \"objectClass\": \"person\",\n                    \"nsAccountLock\": nsAccountLock,\n                    \"CSCUserType\": \"user_test\",", "func_src_after": "\"\"\"Test suite for LDAP idm.\"\"\"\nimport pytest\nfrom unittest.mock import MagicMock\n\nfrom etsin_finder.utils.flags import set_flags\nfrom etsin_finder.services.ldap_service import LDAPIdmService\nfrom .basetest import BaseTest\nfrom ldap3 import MOCK_SYNC\n\n\nclass ExceptionTest(Exception):\n    \"\"\"Exception for testing.\"\"\"\n\n    pass\n\n\ndef createMockLDAPIdmService(users=None, projects=None):\n    \"\"\"Create a mock LDAP service that will return specific users and projects.\"\"\"\n    if users is None:\n        users = []\n    if projects is None:\n        projects = []\n\n    class MockLDAPIdmService(LDAPIdmService):\n        \"\"\"LDAP Service with mocked users and projects\"\"\"\n\n        def __init__(self, *args, **kwargs):\n            super().__init__(*args, **kwargs)\n            self.connection.strategy.add_entry(\n                \"cn=fake_bind\",\n                {\"userPassword\": \"fake_password\", \"sn\": \"user0_sn\", \"revision\": 0},\n            )\n            for user in users:\n                self._add_user(*user)\n            for project in projects:\n                self._add_project(*project)\n\n        def _add_user(self, uid, given_name, surname, mail, nsAccountLock=\"false\", csc_user_name=None):\n            self.connection.strategy.add_entry(\n                f\"cn={uid},ou=Academic,ou=External,ou=Users,ou=idm,dc=csc,dc=fi\",\n                {\n                    \"cn\": uid,\n                    \"uid\": uid,\n                    \"CSCUserName\": csc_user_name or uid,\n                    \"mail\": mail,\n                    \"givenName\": given_name,\n                    \"sn\": surname,\n                    \"objectClass\": \"person\",\n                    \"nsAccountLock\": nsAccountLock,\n                    \"CSCUserType\": \"user_test\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 308, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env python3\n\n\"\"\"\n@author:    M. Garbellini\n@email:     matteo.garbellini@studenti.unimi.it\n\n* FORCE MODULE *\nContains force calculations (and potential energies) using known potentials:\n- Gravitational\n- Lennard-Jones\n\nLatest update: May 7th 2021\n\"\"\"\n\nimport numpy as np\nimport system\nfrom numba import jit, njit, vectorize\n\nepsilon = None\nsigma = None\ncutoff = None\npotential_shift = None\nbinwidth = None\n\n\n# Routine implementing the minimum image convention\n# for computing the shortest distance between particles\n@njit\ndef mic(xi, xj, L):\n\n\trij = xi - xj\n\tif abs(rij) > 0.5*L:\n\t\trij = rij - np.sign(rij) * L\n\n\treturn rij\n\n@njit\ndef lennard_jones(force, pos, L, N, dim):\n\tpotential = 0\n\trijz = 0\n\n\tfor i in range(N-1):\n\t\tfor j in range(i+1, N):\n\t\t\trijx = mic(pos[i, 0],pos[j,0], L)\n\t\t\trijy = mic(pos[i, 1],pos[j,1], L)\n\t\t\tif(dim==3):\n\t\t\t\trijz = mic(pos[i, 2],pos[j,2], L)\n\t\t\t\tr = rijx*rijx + rijy*rijy + rijz*rijz\n\t\t\telse:\n\t\t\t\tr = rijx*rijx + rijy*rijy", "func_src_after": "#!/usr/bin/env python3\n\n\"\"\"\n@author:    M. Garbellini\n@email:     <EMAIL>\n\n* FORCE MODULE *\nContains force calculations (and potential energies) using known potentials:\n- Gravitational\n- Lennard-Jones\n\nLatest update: May 7th 2021\n\"\"\"\n\nimport numpy as np\nimport system\nfrom numba import jit, njit, vectorize\n\nepsilon = None\nsigma = None\ncutoff = None\npotential_shift = None\nbinwidth = None\n\n\n# Routine implementing the minimum image convention\n# for computing the shortest distance between particles\n@njit\ndef mic(xi, xj, L):\n\n\trij = xi - xj\n\tif abs(rij) > 0.5*L:\n\t\trij = rij - np.sign(rij) * L\n\n\treturn rij\n\n@njit\ndef lennard_jones(force, pos, L, N, dim):\n\tpotential = 0\n\trijz = 0\n\n\tfor i in range(N-1):\n\t\tfor j in range(i+1, N):\n\t\t\trijx = mic(pos[i, 0],pos[j,0], L)\n\t\t\trijy = mic(pos[i, 1],pos[j,1], L)\n\t\t\tif(dim==3):\n\t\t\t\trijz = mic(pos[i, 2],pos[j,2], L)\n\t\t\t\tr = rijx*rijx + rijy*rijy + rijz*rijz\n\t\t\telse:\n\t\t\t\tr = rijx*rijx + rijy*rijy", "line_changes": {"deleted": [{"line_no": 5, "char_start": 54, "char_end": 102, "line": "@email:     matteo.garbellini@studenti.unimi.it\n"}], "added": [{"line_no": 6, "char_start": 54, "char_end": 74, "line": "@email:     <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 54, "char_end": 102, "chars": "@email:     matteo.garbellini@studenti.unimi.it\n"}], "added": [{"char_start": 54, "char_end": 74, "chars": "@email:     <EMAIL>\n"}]}}
{"func_name": 341, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Received: from mail2.odoo.com (mail2.odoo.com. [149.202.180.44])\n        by mx.google.com with ESMTPS id y4si4279200wmy.148.2018.03.05.01.19.22\n        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);\n        Mon, 05 Mar 2018 01:19:23 -0800 (PST)\nReceived-SPF: pass (google.com: domain of soup@odoo.com designates 149.202.180.44 as permitted sender) client-ip=149.202.180.44;\nAuthentication-Results: mx.google.com;\n       dkim=pass header.i=@odoo.com header.s=mail header.b=MCzhjB9b;\n       spf=pass (google.com: domain of soup@odoo.com designates 149.202.180.44 as permitted sender) smtp.mailfrom=soup@odoo.com;\n       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=odoo.com\nReceived: from [10.10.31.24] (unknown [91.183.114.50])\n\t(Authenticated sender: soup)\n\tby mail2.odoo.com (Postfix) with ESMTPSA id 7B571A4085\n\tfor <what@odoo.com>; Mon,  5 Mar 2018 10:19:21 +0100 (CET)\nDKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=odoo.com; s=mail;\n\tt=1520241562; bh=L2r7Sp/vjogIdM1k8H9zDGDjnhKolsTTLLjndnFC4Jc=;\n\th=To:From:Subject:Date:From;\n\tb=MCzhjB9bnsrJ3uKjq+GjujFxmtrq3fc7Vv7Vg2C72EPKnkxgqy6yPjWKtXbBlaiT3\n\t YjKI24aiSQlOeOPQiqFgiDzeqqemNDp+CRuhoYz1Vbz+ESRaHtkWRLb7ZjvohS2k7e\n\t RTq7tUxY2nUL2YrNHV7DFYtJVBwiTuyLP6eAiJdE=\nTo: what@odoo.com\nFrom: Soup <soup@odoo.com>\nSubject: =?UTF-8?Q?Soupe_du_jour_:_Pois_cass=c3=a9s?=\nMessage-ID: <a05d8334-7b7c-df68-c96a-4a88ed19f31b@odoo.com>\nDate: Mon, 5 Mar 2018 10:19:21 +0100\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101\n Thunderbird/52.6.0\nMIME-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"------------1F2D18B1129FC2F0B9EECF50\"\nContent-Language: en-US\nX-Spam-Status: No, score=-1.2 required=5.0 tests=ALL_TRUSTED,BAYES_00,\n\tHTML_IMAGE_ONLY_08,HTML_MESSAGE,T_REMOTE_IMAGE autolearn=no\n\tautolearn_force=no version=3.4.0\nX-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on mail2.odoo.com\n\nThis is a multi-part message in MIME format.\n--------------1F2D18B1129FC2F0B9EECF50\nContent-Type: text/plain; charset=utf-8; format=flowed\nContent-Transfer-Encoding: 8bit\n\nRésultat de recherche d'images pour \"dessin la princesse au petit pois\"\n\n--\nSoup\n\nOdoo S.A.\nChaussée de Namur, 40\nB-1367 Grand Rosière\nWeb: http://www.odoo.com\n", "func_src_after": "Received: from mail2.odoo.com (mail2.odoo.com. [<IP-Address>])\n        by mx.google.com with ESMTPS id y4si4279200wmy.148.2018.03.05.01.19.22\n        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);\n        Mon, 05 Mar 2018 01:19:23 -0800 (PST)\nReceived-SPF: pass (google.com: domain of <EMAIL> designates <IP-Address> as permitted sender) client-ip=<IP-Address>;\nAuthentication-Results: mx.google.com;\n       dkim=pass header.i=@odoo.com header.s=mail header.b=MCzhjB9b;\n       spf=pass (google.com: domain of <EMAIL> designates <IP-Address> as permitted sender) smtp.mailfrom=soup@odoo.com;\n       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=odoo.com\nReceived: from [<IP-Address>] (unknown [<IP-Address>])\n\t(Authenticated sender: soup)\n\tby mail2.odoo.com (Postfix) with ESMTPSA id 7B571A4085\n\tfor <<EMAIL>>; Mon,  5 Mar 2018 10:19:21 +0100 (CET)\nDKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=odoo.com; s=mail;\n\tt=1520241562; bh=L2r7Sp/vjogIdM1k8H9zDGDjnhKolsTTLLjndnFC4Jc=;\n\th=To:From:Subject:Date:From;\n\tb=MCzhjB9bnsrJ3uKjq+GjujFxmtrq3fc7Vv7Vg2C72EPKnkxgqy6yPjWKtXbBlaiT3\n\t YjKI24aiSQlOeOPQiqFgiDzeqqemNDp+CRuhoYz1Vbz+ESRaHtkWRLb7ZjvohS2k7e\n\t RTq7tUxY2nUL2YrNHV7DFYtJVBwiTuyLP6eAiJdE=\nTo: <EMAIL>\nFrom: Soup <<EMAIL>>\nSubject: =?UTF-8?Q?Soupe_du_jour_:_Pois_cass=c3=a9s?=\nMessage-ID: <a05d8334-7b7c-df68-c96a-4a88ed19f31b@odoo.com>\nDate: Mon, 5 Mar 2018 10:19:21 +0100\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101\n Thunderbird/52.6.0\nMIME-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"------------1F2D18B1129FC2F0B9EECF50\"\nContent-Language: en-US\nX-Spam-Status: No, score=-1.2 required=5.0 tests=ALL_TRUSTED,BAYES_00,\n\tHTML_IMAGE_ONLY_08,HTML_MESSAGE,T_REMOTE_IMAGE autolearn=no\n\tautolearn_force=no version=3.4.0\nX-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on mail2.odoo.com\n\nThis is a multi-part message in MIME format.\n--------------1F2D18B1129FC2F0B9EECF50\nContent-Type: text/plain; charset=utf-8; format=flowed\nContent-Transfer-Encoding: 8bit\n\nRésultat de recherche d'images pour \"dessin la princesse au petit pois\"\n\n--\nSoup\n\nOdoo S.A.\nChaussée de Namur, 40\nB-1367 Grand Rosière\nWeb: http://www.odoo.com\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 65, "line": "Received: from mail2.odoo.com (mail2.odoo.com. [149.202.180.44])\n"}, {"line_no": 6, "char_start": 262, "char_end": 391, "line": "Received-SPF: pass (google.com: domain of soup@odoo.com designates 149.202.180.44 as permitted sender) client-ip=149.202.180.44;\n"}, {"line_no": 10, "char_start": 489, "char_end": 618, "line": "       spf=pass (google.com: domain of soup@odoo.com designates 149.202.180.44 as permitted sender) smtp.mailfrom=soup@odoo.com;\n"}, {"line_no": 13, "char_start": 675, "char_end": 730, "line": "Received: from [10.10.31.24] (unknown [91.183.114.50])\n"}, {"line_no": 17, "char_start": 816, "char_end": 876, "line": "\tfor <what@odoo.com>; Mon,  5 Mar 2018 10:19:21 +0100 (CET)\n"}, {"line_no": 25, "char_start": 1218, "char_end": 1236, "line": "To: what@odoo.com\n"}, {"line_no": 26, "char_start": 1218, "char_end": 1245, "line": "From: Soup <soup@odoo.com>\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 63, "line": "Received: from mail2.odoo.com (mail2.odoo.com. [<IP-Address>])\n"}, {"line_no": 7, "char_start": 262, "char_end": 381, "line": "Received-SPF: pass (google.com: domain of <EMAIL> designates <IP-Address> as permitted sender) client-ip=<IP-Address>;\n"}, {"line_no": 11, "char_start": 489, "char_end": 610, "line": "       spf=pass (google.com: domain of <EMAIL> designates <IP-Address> as permitted sender) smtp.mailfrom=soup@odoo.com;\n"}, {"line_no": 14, "char_start": 675, "char_end": 730, "line": "Received: from [<IP-Address>] (unknown [<IP-Address>])\n"}, {"line_no": 18, "char_start": 816, "char_end": 870, "line": "\tfor <<EMAIL>>; Mon,  5 Mar 2018 10:19:21 +0100 (CET)\n"}, {"line_no": 27, "char_start": 1218, "char_end": 1230, "line": "To: <EMAIL>\n"}, {"line_no": 28, "char_start": 1230, "char_end": 1251, "line": "From: Soup <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 65, "chars": "Received: from mail2.odoo.com (mail2.odoo.com. [149.202.180.44])\n"}, {"char_start": 262, "char_end": 391, "chars": "Received-SPF: pass (google.com: domain of soup@odoo.com designates 149.202.180.44 as permitted sender) client-ip=149.202.180.44;\n"}, {"char_start": 489, "char_end": 618, "chars": "       spf=pass (google.com: domain of soup@odoo.com designates 149.202.180.44 as permitted sender) smtp.mailfrom=soup@odoo.com;\n"}, {"char_start": 675, "char_end": 730, "chars": "Received: from [10.10.31.24] (unknown [91.183.114.50])\n"}, {"char_start": 816, "char_end": 876, "chars": "\tfor <what@odoo.com>; Mon,  5 Mar 2018 10:19:21 +0100 (CET)\n"}, {"char_start": 1218, "char_end": 1236, "chars": "To: what@odoo.com\n"}, {"char_start": 1218, "char_end": 1245, "chars": "From: Soup <soup@odoo.com>\n"}], "added": [{"char_start": 0, "char_end": 63, "chars": "Received: from mail2.odoo.com (mail2.odoo.com. [<IP-Address>])\n"}, {"char_start": 262, "char_end": 381, "chars": "Received-SPF: pass (google.com: domain of <EMAIL> designates <IP-Address> as permitted sender) client-ip=<IP-Address>;\n"}, {"char_start": 489, "char_end": 610, "chars": "       spf=pass (google.com: domain of <EMAIL> designates <IP-Address> as permitted sender) smtp.mailfrom=soup@odoo.com;\n"}, {"char_start": 675, "char_end": 730, "chars": "Received: from [<IP-Address>] (unknown [<IP-Address>])\n"}, {"char_start": 816, "char_end": 870, "chars": "\tfor <<EMAIL>>; Mon,  5 Mar 2018 10:19:21 +0100 (CET)\n"}, {"char_start": 1218, "char_end": 1230, "chars": "To: <EMAIL>\n"}, {"char_start": 1230, "char_end": 1251, "chars": "From: Soup <<EMAIL>>\n"}]}}
{"func_name": 352, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env python3.6\r\n\r\n\"\"\" the monitor api restful for prometheus  \"\"\"\r\n\"\"\"this tool is designed for k8s pod restart monitor\"\"\"\r\n__author__ = \"gjpei\"\r\n\r\nfrom kubernetes import client, config\r\nimport logging\r\nLOG_FORMAT = \"%(asctime)s - %(levelname)s - %(message)s\"\r\nDATE_FORMAT = \"%m/%d/%Y %H:%M:%S %p\"\r\nlogging.basicConfig(filename='rc_api.log', level=logging.DEBUG, format=LOG_FORMAT, datefmt=DATE_FORMAT)\r\n\r\nconfiguration = client.Configuration()\r\nToken = 'eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtb25pdG9yaW5nIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Inpwcm9tZXRoZXVzLXRva2VuLXd2N3Y3Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6Inpwcm9tZXRoZXVzIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYzZjNmQzN2ItYTE2MS0xMWU5LTljNTAtYjA4M2ZlM2U3MTI4Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Om1vbml0b3Jpbmc6enByb21ldGhldXMifQ.CPoiVID3uKrckCnsxYf2XeV91x-_l18-P5RZz4XpZXWjX5l67UGYPV0cHfrIh_yc0HLDuctrQj8nyaDcFiw1EihKLug2__iYKvERLJjoZRzt8qaIRiJ0Ja1Y7qPT3RKEIqknVck4VaTsRyvoKE560gccR8xQFdyuuJAwbubqn1I08MckCK3VhEvACx8cBEksBB6BDgHz1vBc7IvCOt0uNDyib--xeMh2OnR6_P_nfV2BKQRMqF4oF5lhpZThOgJjVj6kXZi6vX4vnxQZ2gdJ1PHpnA2GkegmiQSlefvP4phpLpAOLnt7WXRc_Qt5lkb-9q767Dtsq3AUxtQ4HRDWxQ' \r\nAPISERVER = 'https://192.168.60.205:6443'\r\nconfiguration.host = APISERVER\r\nconfiguration.verify_ssl = False\r\nconfiguration.api_key = {\"authorization\": \"Bearer \" + Token}\r\nclient.Configuration.set_default(configuration)\r\n#config.kube_config.load_kube_config(config_file=\"config\")\r\nconfiguration.debug = True\r\nwatch = True\r\n#api_instance = client.CoreV1Api(client.ApiClient(configuration))\r\nv1 = client.CoreV1Api()\r\ntry:\r\n    api_response = v1.delete_namespace('test')\r\n    pprint(api_response)\r\nexcept Exception as e:\r\n    print(\"Exception when calling CoreV1Api->list_namespaced_pod: %s\\n\" % e)\r\n\r\n\r\n", "func_src_after": "#!/usr/bin/env python3.6\r\n\r\n\"\"\" the monitor api restful for prometheus  \"\"\"\r\n\"\"\"this tool is designed for k8s pod restart monitor\"\"\"\r\n__author__ = \"gjpei\"\r\n\r\nfrom kubernetes import client, config\r\nimport logging\r\nLOG_FORMAT = \"%(asctime)s - %(levelname)s - %(message)s\"\r\nDATE_FORMAT = \"%m/%d/%Y %H:%M:%S %p\"\r\nlogging.basicConfig(filename='rc_api.log', level=logging.DEBUG, format=LOG_FORMAT, datefmt=DATE_FORMAT)\r\n\r\nconfiguration = client.Configuration()\r\nToken = 'eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtb25pdG9yaW5nIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Inpwcm9tZXRoZXVzLXRva2VuLXd2N3Y3Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6Inpwcm9tZXRoZXVzIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYzZjNmQzN2ItYTE2MS0xMWU5LTljNTAtYjA4M2ZlM2U3MTI4Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Om1vbml0b3Jpbmc6enByb21ldGhldXMifQ.CPoiVID3uKrckCnsxYf2XeV91x-_l18-P5RZz4XpZXWjX5l67UGYPV0cHfrIh_yc0HLDuctrQj8nyaDcFiw1EihKLug2__iYKvERLJjoZRzt8qaIRiJ0Ja1Y7qPT3RKEIqknVck4VaTsRyvoKE560gccR8xQFdyuuJAwbubqn1I08MckCK3VhEvACx8cBEksBB6BDgHz1vBc7IvCOt0uNDyib--xeMh2OnR6_P_nfV2BKQRMqF4oF5lhpZThOgJjVj6kXZi6vX4vnxQZ2gdJ1PHpnA2GkegmiQSlefvP4phpLpAOLnt7WXRc_Qt5lkb-9q767Dtsq3AUxtQ4HRDWxQ' \r\nAPISERVER = 'https://<IP-Address>:6443'\r\nconfiguration.host = APISERVER\r\nconfiguration.verify_ssl = False\r\nconfiguration.api_key = {\"authorization\": \"Bearer \" + Token}\r\nclient.Configuration.set_default(configuration)\r\n#config.kube_config.load_kube_config(config_file=\"config\")\r\nconfiguration.debug = True\r\nwatch = True\r\n#api_instance = client.CoreV1Api(client.ApiClient(configuration))\r\nv1 = client.CoreV1Api()\r\ntry:\r\n    api_response = v1.delete_namespace('test')\r\n    pprint(api_response)\r\nexcept Exception as e:\r\n    print(\"Exception when calling CoreV1Api->list_namespaced_pod: %s\\n\" % e)\r\n\r\n\r\n", "line_changes": {"deleted": [{"line_no": 15, "char_start": 1335, "char_end": 1378, "line": "APISERVER = 'https://192.168.60.205:6443'\r\n"}], "added": [{"line_no": 16, "char_start": 1335, "char_end": 1376, "line": "APISERVER = 'https://<IP-Address>:6443'\r\n"}]}, "char_changes": {"deleted": [{"char_start": 1335, "char_end": 1378, "chars": "APISERVER = 'https://192.168.60.205:6443'\r\n"}], "added": [{"char_start": 1335, "char_end": 1376, "chars": "APISERVER = 'https://<IP-Address>:6443'\r\n"}]}}
{"func_name": 353, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import json\nimport traceback\nfrom datetime import datetime, timedelta, date\n\nfrom django.test import TestCase\nfrom django.core import management\nfrom django.contrib.auth.models import User\nfrom django.conf import settings\nfrom django.db import IntegrityError\nfrom django.utils.timezone import localtime, now\n\nfrom . import arp\nfrom arpwatch.models import *\n\n\nclass ArpWatchTest(TestCase):\n\n    def test_duplicate_device(self):\n        MAC = \"AA:AA:AA:AA:AA:AA\"\n        device1 = UserDevice.objects.create(mac_address=MAC)\n        with self.assertRaises(IntegrityError):\n            device2 = UserDevice.objects.create(mac_address=MAC)\n\n    def test_dir_lock(self):\n        arp.unlock_import_dir()\n        self.assertFalse(arp.import_dir_locked())\n        arp.lock_import_dir()\n        self.assertTrue(arp.import_dir_locked())\n        arp.unlock_import_dir()\n        self.assertFalse(arp.import_dir_locked())\n\n    def test_log_message(self):\n        arp.unlock_import_dir()\n        arp.log_message(\"testing\")\n        self.assertFalse(arp.import_dir_locked())\n\n    def test_arpwatch_for_user(self):\n        # Register user1 with device1\n        user1 = User.objects.create(username='member_one', first_name='Member', last_name='One')\n        device1 = UserDevice.objects.create(user=user1, device_name=\"Device One\", mac_address=\"90:A2:DA:00:EE:5D\", ignore=False)\n        ip1 = \"127.0.0.1\"\n\n        # Create 5 hours of logs with device1\n        s = start = localtime(now()) - timedelta(hours=6)\n        end = localtime(now()) - timedelta(hours=1)\n        while (s < end):\n            ArpLog.objects.create(runtime=s, device=device1, ip_address=ip1)\n            s = s + timedelta(minutes=5)\n\n        # Pull the logs for user1 and make sure we have 5 hours worth", "func_src_after": "import json\nimport traceback\nfrom datetime import datetime, timedelta, date\n\nfrom django.test import TestCase\nfrom django.core import management\nfrom django.contrib.auth.models import User\nfrom django.conf import settings\nfrom django.db import IntegrityError\nfrom django.utils.timezone import localtime, now\n\nfrom . import arp\nfrom arpwatch.models import *\n\n\nclass ArpWatchTest(TestCase):\n\n    def test_duplicate_device(self):\n        MAC = \"AA:AA:AA:AA:AA:AA\"\n        device1 = UserDevice.objects.create(mac_address=MAC)\n        with self.assertRaises(IntegrityError):\n            device2 = UserDevice.objects.create(mac_address=MAC)\n\n    def test_dir_lock(self):\n        arp.unlock_import_dir()\n        self.assertFalse(arp.import_dir_locked())\n        arp.lock_import_dir()\n        self.assertTrue(arp.import_dir_locked())\n        arp.unlock_import_dir()\n        self.assertFalse(arp.import_dir_locked())\n\n    def test_log_message(self):\n        arp.unlock_import_dir()\n        arp.log_message(\"testing\")\n        self.assertFalse(arp.import_dir_locked())\n\n    def test_arpwatch_for_user(self):\n        # Register user1 with device1\n        user1 = User.objects.create(username='member_one', first_name='Member', last_name='One')\n        device1 = UserDevice.objects.create(user=user1, device_name=\"Device One\", mac_address=\"<IP-Address>\", ignore=False)\n        ip1 = \"<IP-Address>\"\n\n        # Create 5 hours of logs with device1\n        s = start = localtime(now()) - timedelta(hours=6)\n        end = localtime(now()) - timedelta(hours=1)\n        while (s < end):\n            ArpLog.objects.create(runtime=s, device=device1, ip_address=ip1)\n            s = s + timedelta(minutes=5)\n\n        # Pull the logs for user1 and make sure we have 5 hours worth", "line_changes": {"deleted": [{"line_no": 40, "char_start": 1232, "char_end": 1361, "line": "        device1 = UserDevice.objects.create(user=user1, device_name=\"Device One\", mac_address=\"90:A2:DA:00:EE:5D\", ignore=False)\n"}, {"line_no": 42, "char_start": 1356, "char_end": 1382, "line": "        ip1 = \"127.0.0.1\"\n"}], "added": [{"line_no": 41, "char_start": 1232, "char_end": 1356, "line": "        device1 = UserDevice.objects.create(user=user1, device_name=\"Device One\", mac_address=\"<IP-Address>\", ignore=False)\n"}, {"line_no": 43, "char_start": 1356, "char_end": 1385, "line": "        ip1 = \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 1232, "char_end": 1361, "chars": "        device1 = UserDevice.objects.create(user=user1, device_name=\"Device One\", mac_address=\"90:A2:DA:00:EE:5D\", ignore=False)\n"}, {"char_start": 1356, "char_end": 1382, "chars": "        ip1 = \"127.0.0.1\"\n"}], "added": [{"char_start": 1232, "char_end": 1356, "chars": "        device1 = UserDevice.objects.create(user=user1, device_name=\"Device One\", mac_address=\"<IP-Address>\", ignore=False)\n"}, {"char_start": 1356, "char_end": 1385, "chars": "        ip1 = \"<IP-Address>\"\n"}]}}
{"func_name": 375, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        send_password=\"test\",\n        active=True\n        )\n\n    user = User.objects.create_user(\n        host=node,\n        username=username,\n        password=\"aNewPw019\",\n        local=False,\n        is_active=True\n        )\n\n    return user\n\n\ndef create_friend(username, usr):\n    friend = User.objects.create_user(\n            username=username,\n            email=\"friend@test.com\",\n            bio=\"Chicken\",\n            password=\"aNewPw019\",\n            is_active=True\n        )\n\n    friend.friends.add(usr)\n\n    return friend\n\n\ndef create_comment(post, author, comment='Test Comment'):\n    return Comment.objects.create(\n        author=author,\n        post=post,\n        comment=comment\n    )\n\n\ndef create_test_post(author, title=\"test post\", content=\"test\", visibility=Visibility.PUBLIC, visbleTo=[]):\n    post = Post.objects.create(\n            title=title,\n            content=content,\n            author=author,\n            visibility=visibility\n        )\n    post.origin = urljoin(settings.HOSTNAME, f\"/api/posts/{post.id}\")\n    post.source = urljoin(settings.HOSTNAME, f\"/api/posts/{post.id}\")\n    post.save()\n\n    post.visible_to.add(*visbleTo)\n", "func_src_after": "        send_password=\"test\",\n        active=True\n        )\n\n    user = User.objects.create_user(\n        host=node,\n        username=username,\n        password=\"aNewPw019\",\n        local=False,\n        is_active=True\n        )\n\n    return user\n\n\ndef create_friend(username, usr):\n    friend = User.objects.create_user(\n            username=username,\n            email=\"<EMAIL>\",\n            bio=\"Chicken\",\n            password=\"aNewPw019\",\n            is_active=True\n        )\n\n    friend.friends.add(usr)\n\n    return friend\n\n\ndef create_comment(post, author, comment='Test Comment'):\n    return Comment.objects.create(\n        author=author,\n        post=post,\n        comment=comment\n    )\n\n\ndef create_test_post(author, title=\"test post\", content=\"test\", visibility=Visibility.PUBLIC, visbleTo=[]):\n    post = Post.objects.create(\n            title=title,\n            content=content,\n            author=author,\n            visibility=visibility\n        )\n    post.origin = urljoin(settings.HOSTNAME, f\"/api/posts/{post.id}\")\n    post.source = urljoin(settings.HOSTNAME, f\"/api/posts/{post.id}\")\n    post.save()\n\n    post.visible_to.add(*visbleTo)\n", "line_changes": {"deleted": [{"line_no": 19, "char_start": 351, "char_end": 388, "line": "            email=\"friend@test.com\",\n"}], "added": [{"line_no": 20, "char_start": 351, "char_end": 380, "line": "            email=\"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 351, "char_end": 388, "chars": "            email=\"friend@test.com\",\n"}], "added": [{"char_start": 351, "char_end": 380, "chars": "            email=\"<EMAIL>\",\n"}]}}
{"func_name": 381, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        :param to: Format \"Recipient Name <email@address.tdl>\"\n        :type to: str\n        :return: Message Send Status\n         :rtype: bool\n        \"\"\"\n        try:\n            msgRoot = MIMEMultipart('related')\n            msgRoot['Subject'] = self.subject\n            msgRoot['From'] = \"%s <%s>\" % (Config.email_from_name, Config.email_from_address)\n            msgRoot['To'] = \", \".join(to)\n            msgRoot['Date'] = formatdate(localtime=True)\n\n            msgAlternative = MIMEMultipart('alternative')\n            msgRoot.attach(msgAlternative)\n\n            msgText = MIMEText(self.html_message, 'html', _charset='utf-8')\n            msgAlternative.attach(msgText)\n\n            self.smtpserver.ehlo()\n            self.smtpserver.starttls()\n            self.smtpserver.ehlo()\n            self.smtpserver.login(Config.smtp_user, Config.smtp_password)\n            self.smtpserver.sendmail(Config.smtp_user, to, msgRoot.as_string())\n            self.smtpserver.quit()\n            return True\n\n        except smtplib.SMTPException as e:\n            logging.exception(\"Problem Sending Message\\n\" + e.message)\n            return False\n\n\ndef process_args(argv):\n    update = False\n\n    try:\n        opts, args = getopt.getopt(argv, \"u\", [\"update\"])\n    except getopt.GetoptError:\n        print('blocked_users.py')\n        sys.exit(2)\n\n    for opt, arg in opts:\n        if opt in ('-h', \"--help\"):\n            print('blocked_users.py\\n'\n                  'Append -u or --update to update the configuration file')\n            sys.exit()\n        elif opt in (\"-u\", \"--update\"):\n            update = True\n            logging.info('User requested to update config info')\n\n    return update", "func_src_after": "        :param to: Format \"Recipient Name <<EMAIL>>\"\n        :type to: str\n        :return: Message Send Status\n         :rtype: bool\n        \"\"\"\n        try:\n            msgRoot = MIMEMultipart('related')\n            msgRoot['Subject'] = self.subject\n            msgRoot['From'] = \"%s <%s>\" % (Config.email_from_name, Config.email_from_address)\n            msgRoot['To'] = \", \".join(to)\n            msgRoot['Date'] = formatdate(localtime=True)\n\n            msgAlternative = MIMEMultipart('alternative')\n            msgRoot.attach(msgAlternative)\n\n            msgText = MIMEText(self.html_message, 'html', _charset='utf-8')\n            msgAlternative.attach(msgText)\n\n            self.smtpserver.ehlo()\n            self.smtpserver.starttls()\n            self.smtpserver.ehlo()\n            self.smtpserver.login(Config.smtp_user, Config.smtp_password)\n            self.smtpserver.sendmail(Config.smtp_user, to, msgRoot.as_string())\n            self.smtpserver.quit()\n            return True\n\n        except smtplib.SMTPException as e:\n            logging.exception(\"Problem Sending Message\\n\" + e.message)\n            return False\n\n\ndef process_args(argv):\n    update = False\n\n    try:\n        opts, args = getopt.getopt(argv, \"u\", [\"update\"])\n    except getopt.GetoptError:\n        print('blocked_users.py')\n        sys.exit(2)\n\n    for opt, arg in opts:\n        if opt in ('-h', \"--help\"):\n            print('blocked_users.py\\n'\n                  'Append -u or --update to update the configuration file')\n            sys.exit()\n        elif opt in (\"-u\", \"--update\"):\n            update = True\n            logging.info('User requested to update config info')\n\n    return update", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 63, "line": "        :param to: Format \"Recipient Name <email@address.tdl>\"\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 53, "line": "        :param to: Format \"Recipient Name <<EMAIL>>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 63, "chars": "        :param to: Format \"Recipient Name <email@address.tdl>\"\n"}], "added": [{"char_start": 0, "char_end": 53, "chars": "        :param to: Format \"Recipient Name <<EMAIL>>\"\n"}]}}
{"func_name": 383, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    none = \"None\"\n    always = \"Always\"\n    failure = \"Failure\"\n\nclass HiveAuthenticationType(str, Enum):\n    \"\"\"The authentication method used to access the Hive server.\n    \"\"\"\n\n    anonymous = \"Anonymous\"\n    username = \"Username\"\n    username_and_password = \"UsernameAndPassword\"\n    windows_azure_hd_insight_service = \"WindowsAzureHDInsightService\"\n\nclass HiveServerType(str, Enum):\n    \"\"\"The type of Hive server.\n    \"\"\"\n\n    hive_server1 = \"HiveServer1\"\n    hive_server2 = \"HiveServer2\"\n    hive_thrift_server = \"HiveThriftServer\"\n\nclass HiveThriftTransportProtocol(str, Enum):\n    \"\"\"The transport protocol to use in the Thrift layer.\n    \"\"\"\n\n    binary = \"Binary\"\n    sasl = \"SASL\"\n    http = \"HTTP \"\n\nclass HttpAuthenticationType(str, Enum):\n    \"\"\"The authentication type to be used to connect to the HTTP server.\n    \"\"\"\n\n    basic = \"Basic\"\n    anonymous = \"Anonymous\"\n    digest = \"Digest\"\n    windows = \"Windows\"\n    client_certificate = \"ClientCertificate\"\n\nclass ImpalaAuthenticationType(str, Enum):\n    \"\"\"The authentication type to use.\n    \"\"\"\n\n    anonymous = \"Anonymous\"\n    sasl_username = \"SASLUsername\"\n    username_and_password = \"UsernameAndPassword\"\n\nclass MongoDbAuthenticationType(str, Enum):\n    \"\"\"The authentication type to be used to connect to the MongoDB database.\n    \"\"\"", "func_src_after": "    none = \"None\"\n    always = \"Always\"\n    failure = \"Failure\"\n\nclass HiveAuthenticationType(str, Enum):\n    \"\"\"The authentication method used to access the Hive server.\n    \"\"\"\n\n    anonymous = \"Anonymous\"\n    username = \"Username\"\n    username_and_password = \"UsernameAndPassword\"\n    windows_azure_hd_insight_service = \"WindowsAzureHDInsightService\"\n\nclass HiveServerType(str, Enum):\n    \"\"\"The type of Hive server.\n    \"\"\"\n\n    hive_server1 = \"HiveServer1\"\n    hive_server2 = \"HiveServer2\"\n    hive_thrift_server = \"HiveThriftServer\"\n\nclass HiveThriftTransportProtocol(str, Enum):\n    \"\"\"The transport protocol to use in the Thrift layer.\n    \"\"\"\n\n    binary = \"Binary\"\n    sasl = \"SASL\"\n    http = \"HTTP \"\n\nclass HttpAuthenticationType(str, Enum):\n    \"\"\"The authentication type to be used to connect to the HTTP server.\n    \"\"\"\n\n    basic = \"Basic\"\n    anonymous = \"Anonymous\"\n    digest = \"Digest\"\n    windows = \"Windows\"\n    client_certificate = \"ClientCertificate\"\n\nclass ImpalaAuthenticationType(str, Enum):\n    \"\"\"The authentication type to use.\n    \"\"\"\n\n    anonymous = \"Anonymous\"\n    sasl_username = \"SASLUsername\"\n    username_and_password = \"UsernameAndPassword\"\n\nclass MongoDbAuthenticationType(str, Enum):\n    \"\"\"The authentication type to be used to connect to the MongoDB database.\n    \"\"\"", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 386, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\"\"\"RegistryLogin\n\nPerforms a docker login against the private docker registry\nused by aspen\"\"\"\n\n__author__ = 'tinglev@kth.se'\n\nimport subprocess\nfrom modules.steps.base_pipeline_step import BasePipelineStep\nfrom modules.util import environment, process, exceptions\n\nclass RegistryLogin(BasePipelineStep):\n\n    def __init__(self):\n        BasePipelineStep.__init__(self)\n\n    def get_required_env_variables(self):\n        return [environment.DOCKER_REGISTRY_PWD,\n                environment.DOCKER_REGISTRY_URL,\n                environment.DOCKER_REGISTRY_USER]\n\n    def get_required_data_keys(self):\n        return []\n\n    def run_step(self, pipeline_data):\n        user = environment.get_env(environment.DOCKER_REGISTRY_USER)\n        registry_url = environment.get_env(environment.DOCKER_REGISTRY_URL)\n        password = environment.get_env(environment.DOCKER_REGISTRY_PWD)\n        self.run_docker_login(registry_url, user, password)\n        return pipeline_data\n\n    def run_docker_login(self, url, user, password):\n        try:\n            cmd = f'docker login {url} --password {password} --username {user}'\n            process.run_with_output(cmd)\n        except subprocess.CalledProcessError as cpe:\n            raise exceptions.AspenError(f'Could not login to docker registry. '\n                                        f'Error was: \"{cpe.output}\"')\n", "func_src_after": "\"\"\"RegistryLogin\n\nPerforms a docker login against the private docker registry\nused by aspen\"\"\"\n\n__author__ = '<EMAIL>'\n\nimport subprocess\nfrom modules.steps.base_pipeline_step import BasePipelineStep\nfrom modules.util import environment, process, exceptions\n\nclass RegistryLogin(BasePipelineStep):\n\n    def __init__(self):\n        BasePipelineStep.__init__(self)\n\n    def get_required_env_variables(self):\n        return [environment.DOCKER_REGISTRY_PWD,\n                environment.DOCKER_REGISTRY_URL,\n                environment.DOCKER_REGISTRY_USER]\n\n    def get_required_data_keys(self):\n        return []\n\n    def run_step(self, pipeline_data):\n        user = environment.get_env(environment.DOCKER_REGISTRY_USER)\n        registry_url = environment.get_env(environment.DOCKER_REGISTRY_URL)\n        password = environment.get_env(environment.DOCKER_REGISTRY_PWD)\n        self.run_docker_login(registry_url, user, password)\n        return pipeline_data\n\n    def run_docker_login(self, url, user, password):\n        try:\n            cmd = f'docker login {url} --password {password} --username {user}'\n            process.run_with_output(cmd)\n        except subprocess.CalledProcessError as cpe:\n            raise exceptions.AspenError(f'Could not login to docker registry. '\n                                        f'Error was: \"{cpe.output}\"')\n", "line_changes": {"deleted": [{"line_no": 6, "char_start": 96, "char_end": 126, "line": "__author__ = 'tinglev@kth.se'\n"}], "added": [{"line_no": 7, "char_start": 96, "char_end": 119, "line": "__author__ = '<EMAIL>'\n"}]}, "char_changes": {"deleted": [{"char_start": 96, "char_end": 126, "chars": "__author__ = 'tinglev@kth.se'\n"}], "added": [{"char_start": 96, "char_end": 119, "chars": "__author__ = '<EMAIL>'\n"}]}}
{"func_name": 394, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\"\"\"\n# MIT LICENSE\n#\n# Copyright 1997 - 2020 by IXIA Keysight\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"),\n# to deal in the Software without restriction, including without limitation\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n# and/or sell copies of the Software, and to permit persons to whom the\n# Software is furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE. \n*Created with Breaking Point build : EB 9.10v9.10.110.25 -- ENGINEERING BUILD\"\"\"\nimport requests\nimport json\nimport pprint\nimport base64\nfrom requests.adapters import HTTPAdapter\nfrom requests.packages.urllib3.poolmanager import PoolManager\nimport ssl\nimport logging\nbps_api_log = logging.getLogger(__name__)\n\nrequests.packages.urllib3.disable_warnings()\npp = pprint.PrettyPrinter(indent=1).pprint\n\n\nclass TlsAdapter(HTTPAdapter):\n\n    def init_poolmanager(self, connections, maxsize, block):\n        self.poolmanager = PoolManager(num_pools=connections, maxsize=maxsize, block=block)\n\n### this BPS REST API wrapper is generated for version: 9.10.110.25\nclass BPS(object):\n\n    def __init__(self, host, user, password):\n        self.host = host\n        self.user = user\n        self.password = password\n        self.sessionId = None", "func_src_after": "\"\"\"\n# MIT LICENSE\n#\n# Copyright 1997 - 2020 by IXIA Keysight\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"),\n# to deal in the Software without restriction, including without limitation\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n# and/or sell copies of the Software, and to permit persons to whom the\n# Software is furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE. \n*Created with Breaking Point build : EB 9.10v9.10.110.25 -- ENGINEERING BUILD\"\"\"\nimport requests\nimport json\nimport pprint\nimport base64\nfrom requests.adapters import HTTPAdapter\nfrom requests.packages.urllib3.poolmanager import PoolManager\nimport ssl\nimport logging\nbps_api_log = logging.getLogger(__name__)\n\nrequests.packages.urllib3.disable_warnings()\npp = pprint.PrettyPrinter(indent=1).pprint\n\n\nclass TlsAdapter(HTTPAdapter):\n\n    def init_poolmanager(self, connections, maxsize, block):\n        self.poolmanager = PoolManager(num_pools=connections, maxsize=maxsize, block=block)\n\n### this BPS REST API wrapper is generated for version: 9.10.110.25\nclass BPS(object):\n\n    def __init__(self, host, user, password):\n        self.host = host\n        self.user = user\n        self.password = password\n        self.sessionId = None", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 408, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env python\n\n\"\"\"Setup script for the pyparsing module distribution.\"\"\"\n\ntry:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\nimport io\nfrom pyparsing import __version__ as pyparsing_version\n\n# The text of the README file\nREADME_name = __file__.replace(\"setup.py\", \"README.rst\")\nwith io.open(README_name, encoding=\"utf8\") as README:\n    pyparsing_main_doc = README.read()\n\npackages = [\n    \"pyparsing\",\n]\n\nsetup(  # Distribution meta-data\n    name=\"pyparsing\",\n    version=pyparsing_version,\n    description=\"Python parsing module\",\n    long_description=pyparsing_main_doc,\n    long_description_content_type=\"text/x-rst\",\n    author=\"Paul McGuire\",\n    author_email=\"ptmcg@users.sourceforge.net\",\n    url=\"https://github.com/pyparsing/pyparsing/\",\n    download_url=\"https://pypi.org/project/pyparsing/\",\n    license=\"MIT License\",\n    packages=packages,\n    python_requires=\">=3.5\",\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: Information Technology\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3 :: Only\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Python :: Implementation :: PyPy\",\n    ],\n)", "func_src_after": "#!/usr/bin/env python\n\n\"\"\"Setup script for the pyparsing module distribution.\"\"\"\n\ntry:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\nimport io\nfrom pyparsing import __version__ as pyparsing_version\n\n# The text of the README file\nREADME_name = __file__.replace(\"setup.py\", \"README.rst\")\nwith io.open(README_name, encoding=\"utf8\") as README:\n    pyparsing_main_doc = README.read()\n\npackages = [\n    \"pyparsing\",\n]\n\nsetup(  # Distribution meta-data\n    name=\"pyparsing\",\n    version=pyparsing_version,\n    description=\"Python parsing module\",\n    long_description=pyparsing_main_doc,\n    long_description_content_type=\"text/x-rst\",\n    author=\"Paul McGuire\",\n    author_email=\"<EMAIL>\",\n    url=\"https://github.com/pyparsing/pyparsing/\",\n    download_url=\"https://pypi.org/project/pyparsing/\",\n    license=\"MIT License\",\n    packages=packages,\n    python_requires=\">=3.5\",\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: Information Technology\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3 :: Only\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Python :: Implementation :: PyPy\",\n    ],\n)", "line_changes": {"deleted": [{"line_no": 28, "char_start": 700, "char_end": 748, "line": "    author_email=\"ptmcg@users.sourceforge.net\",\n"}], "added": [{"line_no": 29, "char_start": 700, "char_end": 728, "line": "    author_email=\"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 700, "char_end": 748, "chars": "    author_email=\"ptmcg@users.sourceforge.net\",\n"}], "added": [{"char_start": 700, "char_end": 728, "chars": "    author_email=\"<EMAIL>\",\n"}]}}
{"func_name": 414, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import json\nimport glob\nimport numbers\nfrom itertools import cycle\n\nfrom soundata import download_utils, jams_utils, core, annotations, io\n\nBIBTEX = \"\"\"\n@inproceedings{lee2019open,\n  title={An open-access database of 3D microphone array recordings},\n  author={Lee, Hyunkook and Johnson, Dale},\n  booktitle={Audio Engineering Society Convention 147},\n  year={2019},\n  organization={Audio Engineering Society}\n}\n\"\"\"\n\nREMOTES = {\n    \"ImpulseResponses\": download_utils.RemoteFileMetadata(\n        filename=\"03 3D-MARCo Impulse Responses.zip\",\n        url=\"https://zenodo.org/record/3477602/files/03%203D-MARCo%20Impulse%20Responses.zip?download=1\",\n        checksum=\"d328425ee2d1e847e225d78b676cd81e\",\n    ),\n    \"Quartet\": download_utils.RemoteFileMetadata(\n        filename=\"04 3D-MARCo Samples_Quartet.zip\",\n        url=\"https://zenodo.org/record/3477602/files/04%203D-MARCo%20Samples_Quartet.zip?download=1\",\n        checksum=\"cce3442ae5a11ea869412c2e6a4cadcd\",\n    ),\n    \"Trio\": download_utils.RemoteFileMetadata(\n        filename=\"05 3D-MARCo Samples_Trio.zip\",\n        url=\"https://zenodo.org/record/3477602/files/05%203D-MARCo%20Samples_Trio.zip?download=1\",\n        checksum=\"48262496ecb6a32843e4b69393eeeec1\",\n    ),\n    \"Organ\": download_utils.RemoteFileMetadata(\n        filename=\"06 3D-MARCo Samples_Organ.zip\",\n        url=\"https://zenodo.org/record/3477602/files/06%203D-MARCo%20Samples_Organ.zip?download=1\",\n        checksum=\"cd015829e0a2bfc0aac239adc2b86321\",\n    ),\n    \"PianoSolo1\": download_utils.RemoteFileMetadata(\n        filename=\"07 3D-MARCo Samples_Piano solo 1.zip\",\n        url=\"https://zenodo.org/record/3477602/files/07%203D-MARCo%20Samples_Piano%20solo%201.zip?download=1\",\n        checksum=\"4a27da19a0bc857967e47b0044abf128\",\n    ),\n    \"PianoSolo2\": download_utils.RemoteFileMetadata(\n        filename=\"08 3D-MARCo Samples_Piano solo 2.zip\",\n        url=\"https://zenodo.org/record/3477602/files/08%203D-MARCo%20Samples_Piano%20solo%202.zip?download=1\",\n        checksum=\"7372b3a1273bcf10ade09472c3a92eed\",\n    ),\n    \"Acappella\": download_utils.RemoteFileMetadata(\n        filename=\"09 3D-MARCo Samples_Acappella.zip\",", "func_src_after": "import json\nimport glob\nimport numbers\nfrom itertools import cycle\n\nfrom soundata import download_utils, jams_utils, core, annotations, io\n\nBIBTEX = \"\"\"\n@inproceedings{lee2019open,\n  title={An open-access database of 3D microphone array recordings},\n  author={Lee, Hyunkook and Johnson, Dale},\n  booktitle={Audio Engineering Society Convention 147},\n  year={2019},\n  organization={Audio Engineering Society}\n}\n\"\"\"\n\nREMOTES = {\n    \"ImpulseResponses\": download_utils.RemoteFileMetadata(\n        filename=\"03 3D-MARCo Impulse Responses.zip\",\n        url=\"https://zenodo.org/record/3477602/files/03%203D-MARCo%20Impulse%20Responses.zip?download=1\",\n        checksum=\"d328425ee2d1e847e225d78b676cd81e\",\n    ),\n    \"Quartet\": download_utils.RemoteFileMetadata(\n        filename=\"04 3D-MARCo Samples_Quartet.zip\",\n        url=\"https://zenodo.org/record/3477602/files/04%203D-MARCo%20Samples_Quartet.zip?download=1\",\n        checksum=\"cce3442ae5a11ea869412c2e6a4cadcd\",\n    ),\n    \"Trio\": download_utils.RemoteFileMetadata(\n        filename=\"05 3D-MARCo Samples_Trio.zip\",\n        url=\"https://zenodo.org/record/3477602/files/05%203D-MARCo%20Samples_Trio.zip?download=1\",\n        checksum=\"48262496ecb6a32843e4b69393eeeec1\",\n    ),\n    \"Organ\": download_utils.RemoteFileMetadata(\n        filename=\"06 3D-MARCo Samples_Organ.zip\",\n        url=\"https://zenodo.org/record/3477602/files/06%203D-MARCo%20Samples_Organ.zip?download=1\",\n        checksum=\"cd015829e0a2bfc0aac239adc2b86321\",\n    ),\n    \"PianoSolo1\": download_utils.RemoteFileMetadata(\n        filename=\"07 3D-MARCo Samples_Piano solo 1.zip\",\n        url=\"https://zenodo.org/record/3477602/files/07%203D-MARCo%20Samples_Piano%20solo%201.zip?download=1\",\n        checksum=\"4a27da19a0bc857967e47b0044abf128\",\n    ),\n    \"PianoSolo2\": download_utils.RemoteFileMetadata(\n        filename=\"08 3D-MARCo Samples_Piano solo 2.zip\",\n        url=\"https://zenodo.org/record/3477602/files/08%203D-MARCo%20Samples_Piano%20solo%202.zip?download=1\",\n        checksum=\"7372b3a1273bcf10ade09472c3a92eed\",\n    ),\n    \"Acappella\": download_utils.RemoteFileMetadata(\n        filename=\"09 3D-MARCo Samples_Acappella.zip\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 432, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\"\"\"\nThis module implements rules to parse ARFF and TXT files\n\nCopyright (c) 2016-2017 Laura Rodriguez Navas <laura.rodriguez.navas@upc.edu>\n\nDistributed under MIT license\n[https://opensource.org/licenses/MIT]\n\"\"\"\nimport glob\nimport os\n\nimport six\n\n__author__ = 'Laura Rodriguez Navas'\n__license__ = 'MIT'\n\n\ndef replaceCharacter(fi, fo, old, new):\n    for line in fi:\n        if old in line:\n            line = line.replace(old, new)\n        fo.write(line)\n\n\nif __name__ == '__main__':\n    path = \"*.txt\"\n    for filename in glob.glob(path):\n        fi = open(filename, 'r')\n        fo = open(filename + \".out\", 'w')\n        replaceCharacter(fi, fo, \":\", \"_\")\n        fi.close()\n        fo.close()\n", "func_src_after": "\"\"\"\nThis module implements rules to parse ARFF and TXT files\n\nCopyright (c) 2016-2017 Laura Rodriguez Navas <l<EMAIL>>\n\nDistributed under MIT license\n[https://opensource.org/licenses/MIT]\n\"\"\"\nimport glob\nimport os\n\nimport six\n\n__author__ = 'Laura Rodriguez Navas'\n__license__ = 'MIT'\n\n\ndef replaceCharacter(fi, fo, old, new):\n    for line in fi:\n        if old in line:\n            line = line.replace(old, new)\n        fo.write(line)\n\n\nif __name__ == '__main__':\n    path = \"*.txt\"\n    for filename in glob.glob(path):\n        fi = open(filename, 'r')\n        fo = open(filename + \".out\", 'w')\n        replaceCharacter(fi, fo, \":\", \"_\")\n        fi.close()\n        fo.close()\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 62, "char_end": 140, "line": "Copyright (c) 2016-2017 Laura Rodriguez Navas <laura.rodriguez.navas@upc.edu>\n"}], "added": [{"line_no": 5, "char_start": 62, "char_end": 119, "line": "Copyright (c) 2016-2017 Laura Rodriguez Navas <l<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 62, "char_end": 140, "chars": "Copyright (c) 2016-2017 Laura Rodriguez Navas <laura.rodriguez.navas@upc.edu>\n"}], "added": [{"char_start": 62, "char_end": 119, "chars": "Copyright (c) 2016-2017 Laura Rodriguez Navas <l<EMAIL>>\n"}]}}
{"func_name": 447, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "from __future__ import print_function\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: kapi auth\nconfiguration = swagger_client.Configuration()\nconfiguration.access_token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ims2bFhwRUdsVkxOVTRNUG9KU09CbiJ9.eyJpc3MiOiJodHRwczovL2tub3dsZWRnZXRyZWVzZWN1cmUuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTEzODE3ODcxMjM0MTM2Nzk4MzY0IiwiYXVkIjpbImh0dHA6Ly9hcGkuaXllbmdhcmxhYnMub3JnIiwiaHR0cHM6Ly9rbm93bGVkZ2V0cmVlc2VjdXJlLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE1ODY3MTMxNTYsImV4cCI6MTU4NjcyMDM1NiwiYXpwIjoiNzIwUFEzczZ6SzFGcU5HTVZaUE1RSzJYVmhPOW04ZXMiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIHJlYWQ6bWVzc2FnZXMiLCJwZXJtaXNzaW9ucyI6WyJyZWFkOm1lc3NhZ2VzIiwid3JpdGU6bWVzc2FnZXMiXX0.VLFwf05WBbVtMHniHA4h0s-pYu3sQZQGbyzoS0p23ArVoMFHupVwbndASMQYRKG4RRznf2FYFz0Tw7Ac8I-N7bgyZZF7Ru8wOHD-JXEVbmig6LYrHNA9rVMrv8Np7KhkiQ84NylMaYru-VaOQy28Y7TfLycB1AezCSERazhdxqeJOIdHvHeq4o3lHULUyWgF0FBp2jbWaafG_dFqV1ijar0rFP3g60YyUgVneRlYb1ssaVzqRY0rk5avzABbzylTNRgbkwhNtl2gXp22Ggo_02FwPgo4jSYDeE5AtvJhhugSAkRS6bqvhk4x2sFySOnj24mQiBzVvWtR5DPp3iyBGA'\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))\n\ntry:\n    # get root person\n    api_response = api_instance.get_person_root()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BaseControllerApi->get_person_root: %s\\n\" % e)\n\n# Configure OAuth2 access token for authorization: kapi auth\nconfiguration = swagger_client.Configuration()\nconfiguration.access_token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ims2bFhwRUdsVkxOVTRNUG9KU09CbiJ9.eyJpc3MiOiJodHRwczovL2tub3dsZWRnZXRyZWVzZWN1cmUuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTEzODE3ODcxMjM0MTM2Nzk4MzY0IiwiYXVkIjpbImh0dHA6Ly9hcGkuaXllbmdhcmxhYnMub3JnIiwiaHR0cHM6Ly9rbm93bGVkZ2V0cmVlc2VjdXJlLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE1ODY3MTMxNTYsImV4cCI6MTU4NjcyMDM1NiwiYXpwIjoiNzIwUFEzczZ6SzFGcU5HTVZaUE1RSzJYVmhPOW04ZXMiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIHJlYWQ6bWVzc2FnZXMiLCJwZXJtaXNzaW9ucyI6WyJyZWFkOm1lc3NhZ2VzIiwid3JpdGU6bWVzc2FnZXMiXX0.VLFwf05WBbVtMHniHA4h0s-pYu3sQZQGbyzoS0p23ArVoMFHupVwbndASMQYRKG4RRznf2FYFz0Tw7Ac8I-N7bgyZZF7Ru8wOHD-JXEVbmig6LYrHNA9rVMrv8Np7KhkiQ84NylMaYru-VaOQy28Y7TfLycB1AezCSERazhdxqeJOIdHvHeq4o3lHULUyWgF0FBp2jbWaafG_dFqV1ijar0rFP3g60YyUgVneRlYb1ssaVzqRY0rk5avzABbzylTNRgbkwhNtl2gXp22Ggo_02FwPgo4jSYDeE5AtvJhhugSAkRS6bqvhk4x2sFySOnj24mQiBzVvWtR5DPp3iyBGA'\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))\n\ntry:\n    # get root subject\n    api_response = api_instance.get_subject_root()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BaseControllerApi->get_subject_root: %s\\n\" % e)\n\n# Configure OAuth2 access token for authorization: kapi auth\nconfiguration = swagger_client.Configuration()\nconfiguration.access_token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ims2bFhwRUdsVkxOVTRNUG9KU09CbiJ9.eyJpc3MiOiJodHRwczovL2tub3dsZWRnZXRyZWVzZWN1cmUuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTEzODE3ODcxMjM0MTM2Nzk4MzY0IiwiYXVkIjpbImh0dHA6Ly9hcGkuaXllbmdhcmxhYnMub3JnIiwiaHR0cHM6Ly9rbm93bGVkZ2V0cmVlc2VjdXJlLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE1ODY3MTMxNTYsImV4cCI6MTU4NjcyMDM1NiwiYXpwIjoiNzIwUFEzczZ6SzFGcU5HTVZaUE1RSzJYVmhPOW04ZXMiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIHJlYWQ6bWVzc2FnZXMiLCJwZXJtaXNzaW9ucyI6WyJyZWFkOm1lc3NhZ2VzIiwid3JpdGU6bWVzc2FnZXMiXX0.VLFwf05WBbVtMHniHA4h0s-pYu3sQZQGbyzoS0p23ArVoMFHupVwbndASMQYRKG4RRznf2FYFz0Tw7Ac8I-N7bgyZZF7Ru8wOHD-JXEVbmig6LYrHNA9rVMrv8Np7KhkiQ84NylMaYru-VaOQy28Y7TfLycB1AezCSERazhdxqeJOIdHvHeq4o3lHULUyWgF0FBp2jbWaafG_dFqV1ijar0rFP3g60YyUgVneRlYb1ssaVzqRY0rk5avzABbzylTNRgbkwhNtl2gXp22Ggo_02FwPgo4jSYDeE5AtvJhhugSAkRS6bqvhk4x2sFySOnj24mQiBzVvWtR5DPp3iyBGA'\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))\n\ntry:\n    # get root work\n    api_response = api_instance.get_work_root()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BaseControllerApi->get_work_root: %s\\n\" % e)\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))", "func_src_after": "from __future__ import print_function\nimport time\nimport swagger_client\nfrom swagger_client.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: kapi auth\nconfiguration = swagger_client.Configuration()\nconfiguration.access_token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ims2bFhwRUdsVkxOVTRNUG9KU09CbiJ9.eyJpc3MiOiJodHRwczovL2tub3dsZWRnZXRyZWVzZWN1cmUuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTEzODE3ODcxMjM0MTM2Nzk4MzY0IiwiYXVkIjpbImh0dHA6Ly9hcGkuaXllbmdhcmxhYnMub3JnIiwiaHR0cHM6Ly9rbm93bGVkZ2V0cmVlc2VjdXJlLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE1ODY3MTMxNTYsImV4cCI6MTU4NjcyMDM1NiwiYXpwIjoiNzIwUFEzczZ6SzFGcU5HTVZaUE1RSzJYVmhPOW04ZXMiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIHJlYWQ6bWVzc2FnZXMiLCJwZXJtaXNzaW9ucyI6WyJyZWFkOm1lc3NhZ2VzIiwid3JpdGU6bWVzc2FnZXMiXX0.VLFwf05WBbVtMHniHA4h0s-pYu3sQZQGbyzoS0p23ArVoMFHupVwbndASMQYRKG4RRznf2FYFz0Tw7Ac8I-N7bgyZZF7Ru8wOHD-JXEVbmig6LYrHNA9rVMrv8Np7KhkiQ84NylMaYru-VaOQy28Y7TfLycB1AezCSERazhdxqeJOIdHvHeq4o3lHULUyWgF0FBp2jbWaafG_dFqV1ijar0rFP3g60YyUgVneRlYb1ssaVzqRY0rk5avzABbzylTNRgbkwhNtl2gXp22Ggo_02FwPgo4jSYDeE5AtvJhhugSAkRS6bqvhk4x2sFySOnj24mQiBzVvWtR5DPp3iyBGA'\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))\n\ntry:\n    # get root person\n    api_response = api_instance.get_person_root()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BaseControllerApi->get_person_root: %s\\n\" % e)\n\n# Configure OAuth2 access token for authorization: kapi auth\nconfiguration = swagger_client.Configuration()\nconfiguration.access_token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ims2bFhwRUdsVkxOVTRNUG9KU09CbiJ9.eyJpc3MiOiJodHRwczovL2tub3dsZWRnZXRyZWVzZWN1cmUuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTEzODE3ODcxMjM0MTM2Nzk4MzY0IiwiYXVkIjpbImh0dHA6Ly9hcGkuaXllbmdhcmxhYnMub3JnIiwiaHR0cHM6Ly9rbm93bGVkZ2V0cmVlc2VjdXJlLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE1ODY3MTMxNTYsImV4cCI6MTU4NjcyMDM1NiwiYXpwIjoiNzIwUFEzczZ6SzFGcU5HTVZaUE1RSzJYVmhPOW04ZXMiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIHJlYWQ6bWVzc2FnZXMiLCJwZXJtaXNzaW9ucyI6WyJyZWFkOm1lc3NhZ2VzIiwid3JpdGU6bWVzc2FnZXMiXX0.VLFwf05WBbVtMHniHA4h0s-pYu3sQZQGbyzoS0p23ArVoMFHupVwbndASMQYRKG4RRznf2FYFz0Tw7Ac8I-N7bgyZZF7Ru8wOHD-JXEVbmig6LYrHNA9rVMrv8Np7KhkiQ84NylMaYru-VaOQy28Y7TfLycB1AezCSERazhdxqeJOIdHvHeq4o3lHULUyWgF0FBp2jbWaafG_dFqV1ijar0rFP3g60YyUgVneRlYb1ssaVzqRY0rk5avzABbzylTNRgbkwhNtl2gXp22Ggo_02FwPgo4jSYDeE5AtvJhhugSAkRS6bqvhk4x2sFySOnj24mQiBzVvWtR5DPp3iyBGA'\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))\n\ntry:\n    # get root subject\n    api_response = api_instance.get_subject_root()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BaseControllerApi->get_subject_root: %s\\n\" % e)\n\n# Configure OAuth2 access token for authorization: kapi auth\nconfiguration = swagger_client.Configuration()\nconfiguration.access_token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ims2bFhwRUdsVkxOVTRNUG9KU09CbiJ9.eyJpc3MiOiJodHRwczovL2tub3dsZWRnZXRyZWVzZWN1cmUuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTEzODE3ODcxMjM0MTM2Nzk4MzY0IiwiYXVkIjpbImh0dHA6Ly9hcGkuaXllbmdhcmxhYnMub3JnIiwiaHR0cHM6Ly9rbm93bGVkZ2V0cmVlc2VjdXJlLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE1ODY3MTMxNTYsImV4cCI6MTU4NjcyMDM1NiwiYXpwIjoiNzIwUFEzczZ6SzFGcU5HTVZaUE1RSzJYVmhPOW04ZXMiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIHJlYWQ6bWVzc2FnZXMiLCJwZXJtaXNzaW9ucyI6WyJyZWFkOm1lc3NhZ2VzIiwid3JpdGU6bWVzc2FnZXMiXX0.VLFwf05WBbVtMHniHA4h0s-pYu3sQZQGbyzoS0p23ArVoMFHupVwbndASMQYRKG4RRznf2FYFz0Tw7Ac8I-N7bgyZZF7Ru8wOHD-JXEVbmig6LYrHNA9rVMrv8Np7KhkiQ84NylMaYru-VaOQy28Y7TfLycB1AezCSERazhdxqeJOIdHvHeq4o3lHULUyWgF0FBp2jbWaafG_dFqV1ijar0rFP3g60YyUgVneRlYb1ssaVzqRY0rk5avzABbzylTNRgbkwhNtl2gXp22Ggo_02FwPgo4jSYDeE5AtvJhhugSAkRS6bqvhk4x2sFySOnj24mQiBzVvWtR5DPp3iyBGA'\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))\n\ntry:\n    # get root work\n    api_response = api_instance.get_work_root()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BaseControllerApi->get_work_root: %s\\n\" % e)\n\n# create an instance of the API class\napi_instance = swagger_client.BaseControllerApi(swagger_client.ApiClient(configuration))", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 451, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env python\nimport os\nimport sys\nfrom setuptools import setup\n\n# Prepare and send a new release to PyPI\nif \"release\" in sys.argv[-1]:\n    os.system(\"python setup.py sdist\")\n    os.system(\"twine upload dist/planetpixel*\")\n    os.system(\"rm -rf dist/planetpixel*\")\n    sys.exit()\n\n# Load the __version__ variable without importing the package already\nexec(open('planetpixel/version.py').read())\n\nsetup(name='planetpixel',\n      version=__version__,\n      description=\"Solving the planet's problems, one pixel at a time.\",\n      long_description=open('README.rst').read(),\n      url='https://barentsen.github.io/planetpixel/',\n      author='Geert Barentsen',\n      author_email='hello@geert.io',\n      license='BSD',\n      packages=['planetpixel'],\n      include_package_data=True,\n      classifiers=[\n          \"Development Status :: 5 - Production/Stable\",\n          \"Intended Audience :: Developers\",\n          \"License :: OSI Approved :: BSD License\",\n          \"Operating System :: OS Independent\",\n          \"Programming Language :: Python\",\n          \"Topic :: Documentation\",\n          \"Topic :: Software Development :: Documentation\",\n          ],\n      )\n", "func_src_after": "#!/usr/bin/env python\nimport os\nimport sys\nfrom setuptools import setup\n\n# Prepare and send a new release to PyPI\nif \"release\" in sys.argv[-1]:\n    os.system(\"python setup.py sdist\")\n    os.system(\"twine upload dist/planetpixel*\")\n    os.system(\"rm -rf dist/planetpixel*\")\n    sys.exit()\n\n# Load the __version__ variable without importing the package already\nexec(open('planetpixel/version.py').read())\n\nsetup(name='planetpixel',\n      version=__version__,\n      description=\"Solving the planet's problems, one pixel at a time.\",\n      long_description=open('README.rst').read(),\n      url='https://barentsen.github.io/planetpixel/',\n      author='Geert Barentsen',\n      author_email='<EMAIL>',\n      license='BSD',\n      packages=['planetpixel'],\n      include_package_data=True,\n      classifiers=[\n          \"Development Status :: 5 - Production/Stable\",\n          \"Intended Audience :: Developers\",\n          \"License :: OSI Approved :: BSD License\",\n          \"Operating System :: OS Independent\",\n          \"Programming Language :: Python\",\n          \"Topic :: Documentation\",\n          \"Topic :: Software Development :: Documentation\",\n          ],\n      )\n", "line_changes": {"deleted": [{"line_no": 22, "char_start": 666, "char_end": 703, "line": "      author_email='hello@geert.io',\n"}], "added": [{"line_no": 23, "char_start": 666, "char_end": 696, "line": "      author_email='<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 666, "char_end": 703, "chars": "      author_email='hello@geert.io',\n"}], "added": [{"char_start": 666, "char_end": 696, "chars": "      author_email='<EMAIL>',\n"}]}}
{"func_name": 477, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        return self._directory\n\n    def run(self, command, printOutput=True):\n        return _run(command=command, cwd=self._directory, printOutput=printOutput)\n\n    def hash(self, branch='HEAD'):\n        return self.run(\"git rev-parse \" + branch).strip()\n\n    def manifestFilename(self):\n        return os.path.join(self._directory, \"upseto.manifest\")\n\n\nclass GitHub(GitWrapper):\n    def __init__(self, name):\n        assert _tempDir is not None\n        directory = os.path.join(_tempDir, \"github\", name)\n        os.makedirs(directory)\n        GitWrapper.__init__(self, directory)\n        self.run(\"git init\")\n        self.run(\"git config user.email 'you@example.com'\")\n        self.run(\"git config user.name 'Your Name'\")\n        randomContent = ''.join(\n            random.choice(string.ascii_letters) for i in xrange(10))\n        self._write(\"firstCommitFile\", randomContent)\n        self.run(\"git add firstCommitFile\")\n        self.run(\"git commit -m 'Initial commit'\")\n        self.run(\"git checkout -b dont_hold_master\")\n\n    def _write(self, filename, content):\n        with open(os.path.join(self.directory(), filename), \"w\") as f:\n            f.write(content)\n\n\nclass LocalClone(GitWrapper):\n    def __init__(self, gitHub):\n        assert _tempDir is not None\n        directory = os.path.join(\n            localClonesDir(), os.path.basename(gitHub.directory()))\n        if not os.path.isdir(localClonesDir()):\n            os.makedirs(localClonesDir())\n        _run(\"git clone file://%s\" % gitHub.directory(), cwd=localClonesDir())\n        GitWrapper.__init__(self, directory)\n        self.run(\"git checkout master\")\n        self.run(\"git config user.email 'you@example.com'\")\n        self.run(\"git config user.name 'Your Name'\")\n\n    def createAddCommitPush(self, filename):\n        randomContent = ''.join(\n            random.choice(string.ascii_letters) for i in xrange(10))\n        with open(os.path.join(self.directory(), filename), \"w\") as f:", "func_src_after": "        return self._directory\n\n    def run(self, command, printOutput=True):\n        return _run(command=command, cwd=self._directory, printOutput=printOutput)\n\n    def hash(self, branch='HEAD'):\n        return self.run(\"git rev-parse \" + branch).strip()\n\n    def manifestFilename(self):\n        return os.path.join(self._directory, \"upseto.manifest\")\n\n\nclass GitHub(GitWrapper):\n    def __init__(self, name):\n        assert _tempDir is not None\n        directory = os.path.join(_tempDir, \"github\", name)\n        os.makedirs(directory)\n        GitWrapper.__init__(self, directory)\n        self.run(\"git init\")\n        self.run(\"git config user.email '<EMAIL>'\")\n        self.run(\"git config user.name 'Your Name'\")\n        randomContent = ''.join(\n            random.choice(string.ascii_letters) for i in xrange(10))\n        self._write(\"firstCommitFile\", randomContent)\n        self.run(\"git add firstCommitFile\")\n        self.run(\"git commit -m 'Initial commit'\")\n        self.run(\"git checkout -b dont_hold_master\")\n\n    def _write(self, filename, content):\n        with open(os.path.join(self.directory(), filename), \"w\") as f:\n            f.write(content)\n\n\nclass LocalClone(GitWrapper):\n    def __init__(self, gitHub):\n        assert _tempDir is not None\n        directory = os.path.join(\n            localClonesDir(), os.path.basename(gitHub.directory()))\n        if not os.path.isdir(localClonesDir()):\n            os.makedirs(localClonesDir())\n        _run(\"git clone file://%s\" % gitHub.directory(), cwd=localClonesDir())\n        GitWrapper.__init__(self, directory)\n        self.run(\"git checkout master\")\n        self.run(\"git config user.email '<EMAIL>'\")\n        self.run(\"git config user.name 'Your Name'\")\n\n    def createAddCommitPush(self, filename):\n        randomContent = ''.join(\n            random.choice(string.ascii_letters) for i in xrange(10))\n        with open(os.path.join(self.directory(), filename), \"w\") as f:", "line_changes": {"deleted": [{"line_no": 20, "char_start": 611, "char_end": 671, "line": "        self.run(\"git config user.email 'you@example.com'\")\n"}, {"line_no": 45, "char_start": 1618, "char_end": 1678, "line": "        self.run(\"git config user.email 'you@example.com'\")\n"}], "added": [{"line_no": 21, "char_start": 611, "char_end": 663, "line": "        self.run(\"git config user.email '<EMAIL>'\")\n"}, {"line_no": 46, "char_start": 1618, "char_end": 1670, "line": "        self.run(\"git config user.email '<EMAIL>'\")\n"}]}, "char_changes": {"deleted": [{"char_start": 611, "char_end": 671, "chars": "        self.run(\"git config user.email 'you@example.com'\")\n"}, {"char_start": 1618, "char_end": 1678, "chars": "        self.run(\"git config user.email 'you@example.com'\")\n"}], "added": [{"char_start": 611, "char_end": 663, "chars": "        self.run(\"git config user.email '<EMAIL>'\")\n"}, {"char_start": 1618, "char_end": 1670, "chars": "        self.run(\"git config user.email '<EMAIL>'\")\n"}]}}
{"func_name": 479, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "from fabric.api import *\nfrom fabric.contrib.files import *\nimport os\nimport sys\nimport random\nimport string\nimport ConfigParser\n# Custom Code Enigma modules\nimport common.ConfigFile\nimport common.Services\nimport common.Utils\nimport AdjustConfiguration\nimport Drupal\nimport DrupalTests\nimport DrupalUtils\nimport FeatureBranches\nimport InitialBuild\nimport Revert\nimport StandardHooks\n# Needed to get variables set in modules back into the main script\nfrom DrupalTests import *\nfrom FeatureBranches import *\n\n# Override the shell env variable in Fabric, so that we don't see\n# pesky 'stdin is not a tty' messages when using sudo\nenv.shell = '/bin/bash -c'\n\nglobal config\n\n\n@task\ndef main(repo, repourl, build, branch, buildtype, url=None, profile=\"minimal\", keepbuilds=10, runcron=\"False\", doupdates=\"Yes\", freshdatabase=\"Yes\", syncbranch=None, sanitise=\"no\", statuscakeuser=None, statuscakekey=None, statuscakeid=None, importconfig=\"yes\", restartvarnish=\"yes\", cluster=False, sanitised_email=None, sanitised_password=None, webserverport='8080', rds=False, composer=True, config_filename='config.ini'):\n\n  # Read the config.ini file from repo, if it exists\n  config = common.ConfigFile.buildtype_config_file(buildtype, config_filename)\n\n  # Define variables\n  drupal_version = None\n  user = \"jenkins\"\n\n  # Set SSH key if needed\n  ssh_key = None\n  if \"git@github.com\" in repourl:\n    ssh_key = \"/var/lib/jenkins/.ssh/id_rsa_github\"\n\n  global varnish_restart\n  varnish_restart = restartvarnish\n  readonlymode = \"maintenance\"\n  fra = False\n  config_export = False", "func_src_after": "from fabric.api import *\nfrom fabric.contrib.files import *\nimport os\nimport sys\nimport random\nimport string\nimport ConfigParser\n# Custom Code Enigma modules\nimport common.ConfigFile\nimport common.Services\nimport common.Utils\nimport AdjustConfiguration\nimport Drupal\nimport DrupalTests\nimport DrupalUtils\nimport FeatureBranches\nimport InitialBuild\nimport Revert\nimport StandardHooks\n# Needed to get variables set in modules back into the main script\nfrom DrupalTests import *\nfrom FeatureBranches import *\n\n# Override the shell env variable in Fabric, so that we don't see\n# pesky 'stdin is not a tty' messages when using sudo\nenv.shell = '/bin/bash -c'\n\nglobal config\n\n\n@task\ndef main(repo, repourl, build, branch, buildtype, url=None, profile=\"minimal\", keepbuilds=10, runcron=\"False\", doupdates=\"Yes\", freshdatabase=\"Yes\", syncbranch=None, sanitise=\"no\", statuscakeuser=None, statuscakekey=None, statuscakeid=None, importconfig=\"yes\", restartvarnish=\"yes\", cluster=False, sanitised_email=None, sanitised_password=None, webserverport='8080', rds=False, composer=True, config_filename='config.ini'):\n\n  # Read the config.ini file from repo, if it exists\n  config = common.ConfigFile.buildtype_config_file(buildtype, config_filename)\n\n  # Define variables\n  drupal_version = None\n  user = \"jenkins\"\n\n  # Set SSH key if needed\n  ssh_key = None\n  if \"git@github.com\" in repourl:\n    ssh_key = \"/var/lib/jenkins/.ssh/id_rsa_github\"\n\n  global varnish_restart\n  varnish_restart = restartvarnish\n  readonlymode = \"maintenance\"\n  fra = False\n  config_export = False", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 480, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# coding:utf8\n# !/usr/bin/python\n\n#####################################################################################################\n# MySQL Info ########################################################################################\n#####################################################################################################\nimport os\n\n# SQL_IP_ADDR, SQL_PORT = '127.0.0.1', 3306\nSQL_IP_ADDR, SQL_PORT = '192.168.10.174', 3306\nSQL_USRNAME = 'root'\n# SQL_PASSWD = os.environ.get('SQL_PWD')\nSQL_PASSWD = 'eWFuZ3FpbmdxaW5n'\nDBNAME = 'wallet'\n\n#####################################################################################################\n# Http Connection Info###############################################################################\n#####################################################################################################\n\nWALLET_API_PORT = 9000\n\n#####################################################################################################\n# RPC Info###########################################################################################\n#####################################################################################################\n# Bitcoin Family\n### BTC\nBTC_IP_ADDR = '192.168.10.199'\nBTC_RPC_USERNAME = 'btc'\nBTC_RPC_PASSWD = 'btc2018'\nBTC_RPC_PORT = 18332\nBTC_RPC_URL = \"http://%s:%s@%s:%d\" % (BTC_RPC_USERNAME, BTC_RPC_PASSWD, BTC_IP_ADDR, BTC_RPC_PORT)\n\n### USDT(OMNI)\nOMNI_IP_ADDR = '192.168.10.200'\nOMNI_RPC_USERNAME = 'btc'\nOMNI_RPC_PASSWD = 'btc2018'\nOMNI_RPC_PORT = 18332\nOMNI_RPC_URL = \"http://%s:%s@%s:%d\" % (OMNI_RPC_USERNAME, OMNI_RPC_PASSWD, OMNI_IP_ADDR, OMNI_RPC_PORT)\n\n# Ethereum Family\n### ETH\nETH_IP_ADDR = '192.168.10.199'\nETH_RPC_PORT = 18545\n\n\n### ETC  测试环境也使用Rinkeby\nETC_IP_ADDR = '192.168.10.199'\nETC_RPC_PORT = 18545\n\n", "func_src_after": "# coding:utf8\n# !/usr/bin/python\n\n#####################################################################################################\n# MySQL Info ########################################################################################\n#####################################################################################################\nimport os\n\n# SQL_IP_ADDR, SQL_PORT = '<IP-Address>', 3306\nSQL_IP_ADDR, SQL_PORT = '<IP-Address>', 3306\nSQL_USRNAME = 'root'\n# SQL_PASSWD = os.environ.get('SQL_PWD')\nSQL_PASSWD = 'eWFuZ3FpbmdxaW5n'\nDBNAME = 'wallet'\n\n#####################################################################################################\n# Http Connection Info###############################################################################\n#####################################################################################################\n\nWALLET_API_PORT = 9000\n\n#####################################################################################################\n# RPC Info###########################################################################################\n#####################################################################################################\n# Bitcoin Family\n### BTC\nBTC_IP_ADDR = '<IP-Address>'\nBTC_RPC_USERNAME = 'btc'\nBTC_RPC_PASSWD = 'btc2018'\nBTC_RPC_PORT = 18332\nBTC_RPC_URL = \"http://%s:%s@%s:%d\" % (BTC_RPC_USERNAME, BTC_RPC_PASSWD, BTC_IP_ADDR, BTC_RPC_PORT)\n\n### USDT(OMNI)\nOMNI_IP_ADDR = '<IP-Address>'\nOMNI_RPC_USERNAME = 'btc'\nOMNI_RPC_PASSWD = 'btc2018'\nOMNI_RPC_PORT = 18332\nOMNI_RPC_URL = \"http://%s:%s@%s:%d\" % (OMNI_RPC_USERNAME, OMNI_RPC_PASSWD, OMNI_IP_ADDR, OMNI_RPC_PORT)\n\n# Ethereum Family\n### ETH\nETH_IP_ADDR = '<IP-Address>'\nETH_RPC_PORT = 18545\n\n\n### ETC  测试环境也使用Rinkeby\nETC_IP_ADDR = '<IP-Address>'\nETC_RPC_PORT = 18545\n\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 351, "char_end": 395, "line": "# SQL_IP_ADDR, SQL_PORT = '127.0.0.1', 3306\n"}, {"line_no": 11, "char_start": 398, "char_end": 445, "line": "SQL_IP_ADDR, SQL_PORT = '192.168.10.174', 3306\n"}, {"line_no": 29, "char_start": 1218, "char_end": 1249, "line": "BTC_IP_ADDR = '192.168.10.199'\n"}, {"line_no": 37, "char_start": 1435, "char_end": 1467, "line": "OMNI_IP_ADDR = '192.168.10.200'\n"}, {"line_no": 46, "char_start": 1672, "char_end": 1703, "line": "ETH_IP_ADDR = '192.168.10.199'\n"}, {"line_no": 52, "char_start": 1748, "char_end": 1779, "line": "ETC_IP_ADDR = '192.168.10.199'\n"}], "added": [{"line_no": 10, "char_start": 351, "char_end": 398, "line": "# SQL_IP_ADDR, SQL_PORT = '<IP-Address>', 3306\n"}, {"line_no": 12, "char_start": 398, "char_end": 443, "line": "SQL_IP_ADDR, SQL_PORT = '<IP-Address>', 3306\n"}, {"line_no": 30, "char_start": 1218, "char_end": 1247, "line": "BTC_IP_ADDR = '<IP-Address>'\n"}, {"line_no": 38, "char_start": 1435, "char_end": 1465, "line": "OMNI_IP_ADDR = '<IP-Address>'\n"}, {"line_no": 47, "char_start": 1672, "char_end": 1701, "line": "ETH_IP_ADDR = '<IP-Address>'\n"}, {"line_no": 53, "char_start": 1748, "char_end": 1777, "line": "ETC_IP_ADDR = '<IP-Address>'\n"}]}, "char_changes": {"deleted": [{"char_start": 351, "char_end": 395, "chars": "# SQL_IP_ADDR, SQL_PORT = '127.0.0.1', 3306\n"}, {"char_start": 398, "char_end": 445, "chars": "SQL_IP_ADDR, SQL_PORT = '192.168.10.174', 3306\n"}, {"char_start": 1218, "char_end": 1249, "chars": "BTC_IP_ADDR = '192.168.10.199'\n"}, {"char_start": 1435, "char_end": 1467, "chars": "OMNI_IP_ADDR = '192.168.10.200'\n"}, {"char_start": 1672, "char_end": 1703, "chars": "ETH_IP_ADDR = '192.168.10.199'\n"}, {"char_start": 1748, "char_end": 1779, "chars": "ETC_IP_ADDR = '192.168.10.199'\n"}], "added": [{"char_start": 351, "char_end": 398, "chars": "# SQL_IP_ADDR, SQL_PORT = '<IP-Address>', 3306\n"}, {"char_start": 398, "char_end": 443, "chars": "SQL_IP_ADDR, SQL_PORT = '<IP-Address>', 3306\n"}, {"char_start": 1218, "char_end": 1247, "chars": "BTC_IP_ADDR = '<IP-Address>'\n"}, {"char_start": 1435, "char_end": 1465, "chars": "OMNI_IP_ADDR = '<IP-Address>'\n"}, {"char_start": 1672, "char_end": 1701, "chars": "ETH_IP_ADDR = '<IP-Address>'\n"}, {"char_start": 1748, "char_end": 1777, "chars": "ETC_IP_ADDR = '<IP-Address>'\n"}]}}
{"func_name": 487, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/python\n#\n# Copyright (c) 2018 Zim Kalinowski, <zikalino@microsoft.com>\n#\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: azure_rm_resource_info\nshort_description: Generic facts of Azure resources\ndescription:\n    - Obtain facts of any resource using Azure REST API.\n    - This module gives access to resources that are not supported via Ansible modules.\n    - Refer to U(https://docs.microsoft.com/en-us/rest/api/) regarding details related to specific resource REST API.\n\noptions:\n    url:\n        description:\n            - Azure RM Resource URL.\n    api_version:\n        description:\n            - Specific API version to be used.\n    provider:\n        description:\n            - Provider type, should be specified in no URL is given.\n    resource_group:\n        description:\n            - Resource group to be used.\n            - Required if URL is not specified.\n    resource_type:\n        description:\n            - Resource type.\n    resource_name:\n        description:\n            - Resource name.\n    subresource:\n        description:\n            - List of subresources.\n        suboptions:\n            namespace:\n                description:", "func_src_after": "#!/usr/bin/python\n#\n# Copyright (c) 2018 Zim Kalinowski, <<EMAIL>>\n#\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: azure_rm_resource_info\nshort_description: Generic facts of Azure resources\ndescription:\n    - Obtain facts of any resource using Azure REST API.\n    - This module gives access to resources that are not supported via Ansible modules.\n    - Refer to U(https://docs.microsoft.com/en-us/rest/api/) regarding details related to specific resource REST API.\n\noptions:\n    url:\n        description:\n            - Azure RM Resource URL.\n    api_version:\n        description:\n            - Specific API version to be used.\n    provider:\n        description:\n            - Provider type, should be specified in no URL is given.\n    resource_group:\n        description:\n            - Resource group to be used.\n            - Required if URL is not specified.\n    resource_type:\n        description:\n            - Resource type.\n    resource_name:\n        description:\n            - Resource name.\n    subresource:\n        description:\n            - List of subresources.\n        suboptions:\n            namespace:\n                description:", "line_changes": {"deleted": [{"line_no": 3, "char_start": 20, "char_end": 82, "line": "# Copyright (c) 2018 Zim Kalinowski, <zikalino@microsoft.com>\n"}], "added": [{"line_no": 4, "char_start": 20, "char_end": 67, "line": "# Copyright (c) 2018 Zim Kalinowski, <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 20, "char_end": 82, "chars": "# Copyright (c) 2018 Zim Kalinowski, <zikalino@microsoft.com>\n"}], "added": [{"char_start": 20, "char_end": 67, "chars": "# Copyright (c) 2018 Zim Kalinowski, <<EMAIL>>\n"}]}}
{"func_name": 490, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env python\n\"\"\"Provides models for tickets app.\n\n\"\"\"\n\nfrom django.db import models\nfrom django.contrib.auth.models import User\nfrom django.core.validators import MaxValueValidator, MinValueValidator\n\nimport django.utils.timezone\n\n__author__ = \"Winston Cadwell\"\n__copyright__ = \"Copyright 2017, Winston Cadwell\"\n__licence__ = \"BSD 2-Clause Licence\"\n__version__ = \"1.0\"\n__email__ = \"wcadwell@gmail.com\"\n\n\nclass Location(models.Model):\n    \"\"\"Provides a model to store locations in.\n\n    This model is used in Ticket to provide the user a list of\n    location to select from.\n\n    *name*\n        Name of the location\n    *description*\n        A description of the location\n    *longitude*\n        Longitude of the location\n    *latitude*\n        Latitude of the location\n    \"\"\"\n    name = models.CharField(max_length=50)\n    description = models.TextField(null=True, blank=True)\n    longitude = models.DecimalField(max_digits=8, decimal_places=3, null=True, blank=True)\n    latitude = models.DecimalField(max_digits=8, decimal_places=3, null=True, blank=True)\n\n    def __str__(self):\n        return self.name\n\n\nclass Category(models.Model):\n    \"\"\"Provides a model to store categories in.\n\n    This model is used in Ticket to provide the user a list or\n    categories to select from.\n\n    *name*\n        Name of the category", "func_src_after": "#!/usr/bin/env python\n\"\"\"Provides models for tickets app.\n\n\"\"\"\n\nfrom django.db import models\nfrom django.contrib.auth.models import User\nfrom django.core.validators import MaxValueValidator, MinValueValidator\n\nimport django.utils.timezone\n\n__author__ = \"Winston Cadwell\"\n__copyright__ = \"Copyright 2017, Winston Cadwell\"\n__licence__ = \"BSD 2-Clause Licence\"\n__version__ = \"1.0\"\n__email__ = <EMAIL>\"\n\n\nclass Location(models.Model):\n    \"\"\"Provides a model to store locations in.\n\n    This model is used in Ticket to provide the user a list of\n    location to select from.\n\n    *name*\n        Name of the location\n    *description*\n        A description of the location\n    *longitude*\n        Longitude of the location\n    *latitude*\n        Latitude of the location\n    \"\"\"\n    name = models.CharField(max_length=50)\n    description = models.TextField(null=True, blank=True)\n    longitude = models.DecimalField(max_digits=8, decimal_places=3, null=True, blank=True)\n    latitude = models.DecimalField(max_digits=8, decimal_places=3, null=True, blank=True)\n\n    def __str__(self):\n        return self.name\n\n\nclass Category(models.Model):\n    \"\"\"Provides a model to store categories in.\n\n    This model is used in Ticket to provide the user a list or\n    categories to select from.\n\n    *name*\n        Name of the category", "line_changes": {"deleted": [{"line_no": 16, "char_start": 378, "char_end": 411, "line": "__email__ = \"wcadwell@gmail.com\"\n"}], "added": [{"line_no": 17, "char_start": 378, "char_end": 399, "line": "__email__ = <EMAIL>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 378, "char_end": 411, "chars": "__email__ = \"wcadwell@gmail.com\"\n"}], "added": [{"char_start": 378, "char_end": 399, "chars": "__email__ = <EMAIL>\"\n"}]}}
{"func_name": 516, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\ndef write(win, addr, val):\n    if 0x400 <= addr <= 0x800:\n        write_screen(win, addr, val)\n\n\ndef run(win):\n    global kbd\n\n    listener = socket.socket()\n    listener.bind((\"127.0.0.1\", 0))\n    listener.listen(0)\n\n    args = [\n        sys.executable,\n        \"cpu6502.py\",\n        \"--bus\", str(listener.getsockname()[1]),\n        \"--rom\", options.rom,\n    ]\n\n    subprocess.Popen(args)\n    cpu, _ = listener.accept()\n\n    win.clear()\n    curses.noecho()\n    win.nodelay(True)\n    while True:\n        op = cpu.recv(8)\n        cycle, rw, addr, val = struct.unpack(\"<IBHB\", op)\n        if rw == 0:\n            cpu.send(chr(read(addr, val)))\n        elif rw == 1:\n            write (win, addr, val)\n        else:\n            break\n        try:\n            key = ord(win.getkey())\n            if key == 0xA:\n                key = 0xD\n            elif key == 0x7F:\n                key = 0x8\n            # win.addstr(15, 50, hex(key))\n            kbd = 0x80 | key\n        except curses.error:\n            pass\n        except TypeError:\n            pass\n\n\ndef usage():", "func_src_after": "\ndef write(win, addr, val):\n    if 0x400 <= addr <= 0x800:\n        write_screen(win, addr, val)\n\n\ndef run(win):\n    global kbd\n\n    listener = socket.socket()\n    listener.bind((\"127.0.0.1\", 0))\n    listener.listen(0)\n\n    args = [\n        sys.executable,\n        \"cpu6502.py\",\n        \"--bus\", str(listener.getsockname()[1]),\n        \"--rom\", options.rom,\n    ]\n\n    subprocess.Popen(args)\n    cpu, _ = listener.accept()\n\n    win.clear()\n    curses.noecho()\n    win.nodelay(True)\n    while True:\n        op = cpu.recv(8)\n        cycle, rw, addr, val = struct.unpack(\"<IBHB\", op)\n        if rw == 0:\n            cpu.send(chr(read(addr, val)))\n        elif rw == 1:\n            write (win, addr, val)\n        else:\n            break\n        try:\n            key = ord(win.getkey())\n            if key == 0xA:\n                key = 0xD\n            elif key == 0x7F:\n                key = 0x8\n            # win.addstr(15, 50, hex(key))\n            kbd = 0x80 | key\n        except curses.error:\n            pass\n        except TypeError:\n            pass\n\n\ndef usage():", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 532, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    #---------------------------------------------------------------------------------\n    \n    #@r9General.Timer\n    def lsSearchNamePattern(self, searchPattern, nodes=None, incRoots=True):\n        '''\n        Search for nodes who's name match the given search patterns\n        \n        :param searchPattern: string/list patterns to match node names against (includes a 'NOT:' operator)\n        :param nodes: optional - allows you to pass in a list to process if required\n        :param incRoots: Include the given root nodes in the search, default=True\n            Valid only if the Class is in 'Selected' processMode only.\n            \n        .. note:: \n            If the searchPattern has an entry in the form NOT:searchtext then this will be forcibly\n            excluded from the filter. ie, My_L_Foot_Ctrl will be excluded with the following pattern\n            ['Ctrl','NOT:My'] where Ctrl finds it, but the 'NOT:My' tells the filter to skip it if found\n        '''\n        self.foundPattern = []\n        include=[]\n        exclude=[]\n        if not isinstance(searchPattern, list):\n            searchPattern=[searchPattern]\n        \n        #Build the Regex funcs\n        for pattern in searchPattern:\n            pattern = pattern.replace(\" \", \"\")  # strip whiteSpaces\n            if 'NOT:' in pattern:\n                exclude.append(pattern.split(':')[-1])\n            else:\n                include.append(pattern)\n        \n        includePattern='|'.join(n for n in include)\n        incRegex=re.compile('('+includePattern+')')  # convert into a regularExpression\n        if exclude:\n            excludePattern='|'.join(n for n in exclude)\n            excRegex=re.compile('('+excludePattern+')')  # convert into a regularExpression\n\n        #Node block\n        log.debug('lsSearchNamePattern : params : searchPattern=%s, nodes=%s, incRoots=%i'\\\n               % (searchPattern, nodes, incRoots))\n        if not nodes:\n            if self.processMode=='Scene':\n                nodes = cmds.ls(dep=True, l=True)\n            else:\n                nodes = self.lsHierarchy(incRoots=incRoots)\n            if not nodes:\n                raise StandardError('No nodes found to process')\n            \n        #Actual Search calls\n        if exclude:", "func_src_after": "    #---------------------------------------------------------------------------------\n    \n    #@r9General.Timer\n    def lsSearchNamePattern(self, searchPattern, nodes=None, incRoots=True):\n        '''\n        Search for nodes who's name match the given search patterns\n        \n        :param searchPattern: string/list patterns to match node names against (includes a 'NOT:' operator)\n        :param nodes: optional - allows you to pass in a list to process if required\n        :param incRoots: Include the given root nodes in the search, default=True\n            Valid only if the Class is in 'Selected' processMode only.\n            \n        .. note:: \n            If the searchPattern has an entry in the form NOT:searchtext then this will be forcibly\n            excluded from the filter. ie, My_L_Foot_Ctrl will be excluded with the following pattern\n            ['Ctrl','NOT:My'] where Ctrl finds it, but the 'NOT:My' tells the filter to skip it if found\n        '''\n        self.foundPattern = []\n        include=[]\n        exclude=[]\n        if not isinstance(searchPattern, list):\n            searchPattern=[searchPattern]\n        \n        #Build the Regex funcs\n        for pattern in searchPattern:\n            pattern = pattern.replace(\" \", \"\")  # strip whiteSpaces\n            if 'NOT:' in pattern:\n                exclude.append(pattern.split(':')[-1])\n            else:\n                include.append(pattern)\n        \n        includePattern='|'.join(n for n in include)\n        incRegex=re.compile('('+includePattern+')')  # convert into a regularExpression\n        if exclude:\n            excludePattern='|'.join(n for n in exclude)\n            excRegex=re.compile('('+excludePattern+')')  # convert into a regularExpression\n\n        #Node block\n        log.debug('lsSearchNamePattern : params : searchPattern=%s, nodes=%s, incRoots=%i'\\\n               % (searchPattern, nodes, incRoots))\n        if not nodes:\n            if self.processMode=='Scene':\n                nodes = cmds.ls(dep=True, l=True)\n            else:\n                nodes = self.lsHierarchy(incRoots=incRoots)\n            if not nodes:\n                raise StandardError('No nodes found to process')\n            \n        #Actual Search calls\n        if exclude:", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 536, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import setuptools\n\nimport os\nfrom os import listdir\nfrom os.path import isfile, join\n\nmypath = os.path.dirname(os.path.abspath(__file__))\nprint([f for f in listdir(mypath) if isfile(join(mypath, f))])\n\n\nwith open(\"requirements.txt\", \"r\") as f:\n    requirements = f.read().splitlines()\n\nwith open(\"test_requirements.txt\", \"r\") as f:\n    test_requirements = f.read().splitlines()\n\nwith open(\"README.md\", \"r\", encoding=\"utf-8\") as fh:\n    LONG_DESCRIPTION = fh.read()\n\nsetuptools.setup(\n    name=\"sanic_cookies\",\n    version=\"0.4.3\",\n    author=\"Omar Ryhan\",\n    author_email=\"omarryhan@gmail.com\",\n    license=\"GNU\",\n    description=\"Cookies and Session Management for Sanic\",\n    long_description=LONG_DESCRIPTION,\n    long_description_content_type=\"text/markdown\",\n    install_requires=requirements,\n    tests_require=test_requirements,\n    url=\"https://github.com/omarryhan/sanic-cookies\",\n    packages=setuptools.find_packages(),\n    classifiers=[\n        \"Programming Language :: Python :: 3.7\",\n        \"Operating System :: OS Independent\",\n    ],\n    extras_require={},\n)\n", "func_src_after": "import setuptools\n\nimport os\nfrom os import listdir\nfrom os.path import isfile, join\n\nmypath = os.path.dirname(os.path.abspath(__file__))\nprint([f for f in listdir(mypath) if isfile(join(mypath, f))])\n\n\nwith open(\"requirements.txt\", \"r\") as f:\n    requirements = f.read().splitlines()\n\nwith open(\"test_requirements.txt\", \"r\") as f:\n    test_requirements = f.read().splitlines()\n\nwith open(\"README.md\", \"r\", encoding=\"utf-8\") as fh:\n    LONG_DESCRIPTION = fh.read()\n\nsetuptools.setup(\n    name=\"sanic_cookies\",\n    version=\"0.4.3\",\n    author=\"Omar Ryhan\",\n    author_email=\"<EMAIL>\",\n    license=\"GNU\",\n    description=\"Cookies and Session Management for Sanic\",\n    long_description=LONG_DESCRIPTION,\n    long_description_content_type=\"text/markdown\",\n    install_requires=requirements,\n    tests_require=test_requirements,\n    url=\"https://github.com/omarryhan/sanic-cookies\",\n    packages=setuptools.find_packages(),\n    classifiers=[\n        \"Programming Language :: Python :: 3.7\",\n        \"Operating System :: OS Independent\",\n    ],\n    extras_require={},\n)\n", "line_changes": {"deleted": [{"line_no": 24, "char_start": 556, "char_end": 596, "line": "    author_email=\"omarryhan@gmail.com\",\n"}], "added": [{"line_no": 25, "char_start": 556, "char_end": 584, "line": "    author_email=\"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 556, "char_end": 596, "chars": "    author_email=\"omarryhan@gmail.com\",\n"}], "added": [{"char_start": 556, "char_end": 584, "chars": "    author_email=\"<EMAIL>\",\n"}]}}
{"func_name": 539, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "from django.test import TestCase, Client, RequestFactory\nfrom django.urls import reverse\n\nfrom book_club.account.admin import UserModel\nfrom book_club.book.models import Book\n\n\nclass BookDetailsTest(TestCase):\n\n    def setUp(self):\n        self.factory = RequestFactory()\n        self.client = Client()\n        self.user = UserModel.objects.create_user(email='alex_b@gmail.com', password='asd123!@#')\n        self.book = Book.objects.create(\n            title='Test',\n            author='Test_Auth',\n            genre='fiction',\n            length=888,\n            audiobook=False,\n            emotional_value='neutral',\n            review='test',\n            mark='neutral',\n            favorite=False,\n            user=self.user,\n        )\n\n    def test_get_book_details_if_UserLoggedIn_shouldReturnBook(self):\n        self.client.force_login(self.user)\n        response = self.client.get(reverse('view book', kwargs={\n            'pk': self.book.id,\n        }))\n        book_test = list(Book.objects.filter(user=self.user))[0]\n\n        self.assertEqual(book_test, self.book)\n        self.assertTemplateUsed(response, 'book_templates/book-details.html')\n\n\n", "func_src_after": "from django.test import TestCase, Client, RequestFactory\nfrom django.urls import reverse\n\nfrom book_club.account.admin import UserModel\nfrom book_club.book.models import Book\n\n\nclass BookDetailsTest(TestCase):\n\n    def setUp(self):\n        self.factory = RequestFactory()\n        self.client = Client()\n        self.user = UserModel.objects.create_user(email='<EMAIL>', password='asd123!@#')\n        self.book = Book.objects.create(\n            title='Test',\n            author='Test_Auth',\n            genre='fiction',\n            length=888,\n            audiobook=False,\n            emotional_value='neutral',\n            review='test',\n            mark='neutral',\n            favorite=False,\n            user=self.user,\n        )\n\n    def test_get_book_details_if_UserLoggedIn_shouldReturnBook(self):\n        self.client.force_login(self.user)\n        response = self.client.get(reverse('view book', kwargs={\n            'pk': self.book.id,\n        }))\n        book_test = list(Book.objects.filter(user=self.user))[0]\n\n        self.assertEqual(book_test, self.book)\n        self.assertTemplateUsed(response, 'book_templates/book-details.html')\n\n\n", "line_changes": {"deleted": [{"line_no": 13, "char_start": 303, "char_end": 401, "line": "        self.user = UserModel.objects.create_user(email='alex_b@gmail.com', password='asd123!@#')\n"}], "added": [{"line_no": 14, "char_start": 303, "char_end": 392, "line": "        self.user = UserModel.objects.create_user(email='<EMAIL>', password='asd123!@#')\n"}]}, "char_changes": {"deleted": [{"char_start": 303, "char_end": 401, "chars": "        self.user = UserModel.objects.create_user(email='alex_b@gmail.com', password='asd123!@#')\n"}], "added": [{"char_start": 303, "char_end": 392, "chars": "        self.user = UserModel.objects.create_user(email='<EMAIL>', password='asd123!@#')\n"}]}}
{"func_name": 568, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# copyright 2003-2014 LOGILAB S.A. (Paris, FRANCE), all rights reserved.\n# contact http://www.logilab.fr/ -- mailto:contact@logilab.fr\n#\n# This file is part of astroid.\n#\n# astroid is free software: you can redistribute it and/or modify it\n# under the terms of the GNU Lesser General Public License as published by the\n# Free Software Foundation, either version 2.1 of the License, or (at your\n# option) any later version.\n#\n# astroid is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n# for more details.\n#\n# You should have received a copy of the GNU Lesser General Public License along\n# with astroid. If not, see <http://www.gnu.org/licenses/>.\nimport os\nimport sys\nimport unittest\n\nfrom astroid.manager import AstroidManager, _silent_no_wrap\nfrom astroid.bases import  BUILTINS\nfrom astroid.exceptions import AstroidBuildingException\nfrom astroid.tests import resources\n\n\nclass AstroidManagerTest(resources.SysPathSetup,\n                         resources.AstroidCacheSetupMixin,\n                         unittest.TestCase):\n\n    @property\n    def project(self):\n        return self.manager.project_from_files(\n            [resources.find('data')],\n            _silent_no_wrap, 'data',\n            black_list=['joined_strings.py'])\n\n    def setUp(self):\n        super(AstroidManagerTest, self).setUp()\n        self.manager = AstroidManager()\n        self.manager.clear_cache(self._builtins) # take care of borg\n\n    def test_ast_from_file(self):\n        \"\"\"check if the method return a good astroid object\"\"\"\n        import unittest\n        filepath = unittest.__file__\n        astroid = self.manager.ast_from_file(filepath)\n        self.assertEqual(astroid.name, 'unittest')\n        self.assertIn('unittest', self.manager.astroid_cache)", "func_src_after": "# copyright 2003-2014 LOGILAB S.A. (Paris, FRANCE), all rights reserved.\n# contact http://www.logilab.fr/ -- <EMAIL>\n#\n# This file is part of astroid.\n#\n# astroid is free software: you can redistribute it and/or modify it\n# under the terms of the GNU Lesser General Public License as published by the\n# Free Software Foundation, either version 2.1 of the License, or (at your\n# option) any later version.\n#\n# astroid is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n# for more details.\n#\n# You should have received a copy of the GNU Lesser General Public License along\n# with astroid. If not, see <http://www.gnu.org/licenses/>.\nimport os\nimport sys\nimport unittest\n\nfrom astroid.manager import AstroidManager, _silent_no_wrap\nfrom astroid.bases import  BUILTINS\nfrom astroid.exceptions import AstroidBuildingException\nfrom astroid.tests import resources\n\n\nclass AstroidManagerTest(resources.SysPathSetup,\n                         resources.AstroidCacheSetupMixin,\n                         unittest.TestCase):\n\n    @property\n    def project(self):\n        return self.manager.project_from_files(\n            [resources.find('data')],\n            _silent_no_wrap, 'data',\n            black_list=['joined_strings.py'])\n\n    def setUp(self):\n        super(AstroidManagerTest, self).setUp()\n        self.manager = AstroidManager()\n        self.manager.clear_cache(self._builtins) # take care of borg\n\n    def test_ast_from_file(self):\n        \"\"\"check if the method return a good astroid object\"\"\"\n        import unittest\n        filepath = unittest.__file__\n        astroid = self.manager.ast_from_file(filepath)\n        self.assertEqual(astroid.name, 'unittest')\n        self.assertIn('unittest', self.manager.astroid_cache)", "line_changes": {"deleted": [{"line_no": 2, "char_start": 73, "char_end": 135, "line": "# contact http://www.logilab.fr/ -- mailto:contact@logilab.fr\n"}], "added": [{"line_no": 3, "char_start": 73, "char_end": 117, "line": "# contact http://www.logilab.fr/ -- <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 73, "char_end": 135, "chars": "# contact http://www.logilab.fr/ -- mailto:contact@logilab.fr\n"}], "added": [{"char_start": 73, "char_end": 117, "chars": "# contact http://www.logilab.fr/ -- <EMAIL>\n"}]}}
{"func_name": 647, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright (c) 2020 Gscienty <gaoxiaochuan@hotmail.com>\n *\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or https://www.opensource.org/licenses/mit-license.php .\n *\n */\n\n#ifndef __OPENQUIC_HEADER_H__\n#define __OPENQUIC_HEADER_H__\n\n#include \"utils/buf.h\"\n#include \"utils/varint.h\"\n#include <stdint.h>\n#include <stddef.h>\n#include <byteswap.h>\n\ntypedef uint32_t quic_version_t;\ntypedef uint32_t quic_packet_number_t;\n\n#define QUIC_HEADER_FIELDS       \\\n    uint8_t first_byte;\n\n#define QUIC_LONG_HEADER_FIELDS  \\\n    quic_version_t version;      \\\n    uint8_t conn_area[512];      \\\n\n#define QUIC_SHORT_HEADER_FIELDS \\\n    uint8_t conn_area[255];\n\ntypedef struct quic_header_s quic_header_t;\nstruct quic_header_s {\n    QUIC_HEADER_FIELDS\n} __attribute__((__packed__));\n\n#define quic_header_is_long(header) \\\n    ((header)->first_byte & 0x80)\n\n#define quic_packet_type(header)    \\\n    (((header)->first_byte & 0xf0))\n\n#define quic_packet_initial_type    0xc0\n#define quic_packet_0rtt_type       0xd0\n#define quic_packet_handshake_type  0xe0\n#define quic_packet_retry_type      0xf0\n#define quic_packet_short_type      0x40\n\ntypedef struct quic_long_header_s quic_long_header_t;\nstruct quic_long_header_s {\n    QUIC_HEADER_FIELDS", "func_src_after": "/*\n * Copyright (c) 2020 Gscienty <<EMAIL>>\n *\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or https://www.opensource.org/licenses/mit-license.php .\n *\n */\n\n#ifndef __OPENQUIC_HEADER_H__\n#define __OPENQUIC_HEADER_H__\n\n#include \"utils/buf.h\"\n#include \"utils/varint.h\"\n#include <stdint.h>\n#include <stddef.h>\n#include <byteswap.h>\n\ntypedef uint32_t quic_version_t;\ntypedef uint32_t quic_packet_number_t;\n\n#define QUIC_HEADER_FIELDS       \\\n    uint8_t first_byte;\n\n#define QUIC_LONG_HEADER_FIELDS  \\\n    quic_version_t version;      \\\n    uint8_t conn_area[512];      \\\n\n#define QUIC_SHORT_HEADER_FIELDS \\\n    uint8_t conn_area[255];\n\ntypedef struct quic_header_s quic_header_t;\nstruct quic_header_s {\n    QUIC_HEADER_FIELDS\n} __attribute__((__packed__));\n\n#define quic_header_is_long(header) \\\n    ((header)->first_byte & 0x80)\n\n#define quic_packet_type(header)    \\\n    (((header)->first_byte & 0xf0))\n\n#define quic_packet_initial_type    0xc0\n#define quic_packet_0rtt_type       0xd0\n#define quic_packet_handshake_type  0xe0\n#define quic_packet_retry_type      0xf0\n#define quic_packet_short_type      0x40\n\ntypedef struct quic_long_header_s quic_long_header_t;\nstruct quic_long_header_s {\n    QUIC_HEADER_FIELDS", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 61, "line": " * Copyright (c) 2020 Gscienty <gaoxiaochuan@hotmail.com>\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 44, "line": " * Copyright (c) 2020 Gscienty <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 61, "chars": " * Copyright (c) 2020 Gscienty <gaoxiaochuan@hotmail.com>\n"}], "added": [{"char_start": 3, "char_end": 44, "chars": " * Copyright (c) 2020 Gscienty <<EMAIL>>\n"}]}}
{"func_name": 704, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* \n * Mach Operating System\n * Copyright (c) 1991,1990 Carnegie Mellon University\n * All Rights Reserved.\n * \n * Permission to use, copy, modify and distribute this software and its\n * documentation is hereby granted, provided that both the copyright\n * notice and this permission notice appear in all copies of the\n * software, derivative works or modified versions, and any portions\n * thereof, and that both notices appear in supporting documentation.\n * \n * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS \"AS IS\"\n * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR\n * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.\n * \n * Carnegie Mellon requests users of this software to return to\n * \n *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU\n *  School of Computer Science\n *  Carnegie Mellon University\n *  Pittsburgh PA 15213-3890\n * \n * any improvements or extensions that they make and grant Carnegie Mellon\n * the rights to redistribute these changes.\n */\n/*\n * HISTORY\n * $Log:\tscsi_disk.c,v $\n * Revision 2.15  93/05/10  21:23:10  rvb\n * \tRemove depends on DEV_BSIZE.\n * \t[93/05/06  10:06:25  af]\n * \n * Revision 2.14  92/08/03  17:55:04  jfriedl\n * \tremoved silly prototypes\n * \t[92/08/02            jfriedl]\n * \n * Revision 2.13  92/05/21  17:24:34  jfriedl\n * \tCleanup to quiet gcc warnings. Remove unused local variables.\n * \t[92/05/20            jfriedl]\n * \n * Revision 2.12  92/02/23  22:44:59  elf\n * \tChanged the interface of a number of functions not to\n * \trequire the scsi_softc pointer any longer.  It was\n * \tmostly unused, now it can be found via tgt->masterno.\n * \t[92/02/22  19:29:26  af]\n * \n * Revision 2.11  91/08/24  12:29:08  af\n * \tBcopy casts.\n * \n * Revision 2.10  91/06/19  11:57:47  rvb", "func_src_after": "/* \n * Mach Operating System\n * Copyright (c) 1991,1990 Carnegie Mellon University\n * All Rights Reserved.\n * \n * Permission to use, copy, modify and distribute this software and its\n * documentation is hereby granted, provided that both the copyright\n * notice and this permission notice appear in all copies of the\n * software, derivative works or modified versions, and any portions\n * thereof, and that both notices appear in supporting documentation.\n * \n * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS \"AS IS\"\n * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR\n * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.\n * \n * Carnegie Mellon requests users of this software to return to\n * \n *  Software Distribution Coordinator  or  <EMAIL>\n *  School of Computer Science\n *  Carnegie Mellon University\n *  Pittsburgh PA 15213-3890\n * \n * any improvements or extensions that they make and grant Carnegie Mellon\n * the rights to redistribute these changes.\n */\n/*\n * HISTORY\n * $Log:\tscsi_disk.c,v $\n * Revision 2.15  93/05/10  21:23:10  rvb\n * \tRemove depends on DEV_BSIZE.\n * \t[93/05/06  10:06:25  af]\n * \n * Revision 2.14  92/08/03  17:55:04  jfriedl\n * \tremoved silly prototypes\n * \t[92/08/02            jfriedl]\n * \n * Revision 2.13  92/05/21  17:24:34  jfriedl\n * \tCleanup to quiet gcc warnings. Remove unused local variables.\n * \t[92/05/20            jfriedl]\n * \n * Revision 2.12  92/02/23  22:44:59  elf\n * \tChanged the interface of a number of functions not to\n * \trequire the scsi_softc pointer any longer.  It was\n * \tmostly unused, now it can be found via tgt->masterno.\n * \t[92/02/22  19:29:26  af]\n * \n * Revision 2.11  91/08/24  12:29:08  af\n * \tBcopy casts.\n * \n * Revision 2.10  91/06/19  11:57:47  rvb", "line_changes": {"deleted": [{"line_no": 18, "char_start": 737, "char_end": 813, "line": " *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU\n"}], "added": [{"line_no": 19, "char_start": 737, "char_end": 788, "line": " *  Software Distribution Coordinator  or  <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 737, "char_end": 813, "chars": " *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU\n"}], "added": [{"char_start": 737, "char_end": 788, "chars": " *  Software Distribution Coordinator  or  <EMAIL>\n"}]}}
{"func_name": 732, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//LIC// ====================================================================\n//LIC// This file forms part of oomph-lib, the object-oriented, \n//LIC// multi-physics finite-element library, available \n//LIC// at http://www.oomph-lib.org.\n//LIC// \n//LIC// Copyright (C) 2006-2021 Matthias Heil and Andrew Hazel\n//LIC// \n//LIC// This library is free software; you can redistribute it and/or\n//LIC// modify it under the terms of the GNU Lesser General Public\n//LIC// License as published by the Free Software Foundation; either\n//LIC// version 2.1 of the License, or (at your option) any later version.\n//LIC// \n//LIC// This library is distributed in the hope that it will be useful,\n//LIC// but WITHOUT ANY WARRANTY; without even the implied warranty of\n//LIC// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n//LIC// Lesser General Public License for more details.\n//LIC// \n//LIC// You should have received a copy of the GNU Lesser General Public\n//LIC// License along with this library; if not, write to the Free Software\n//LIC// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n//LIC// 02110-1301  USA.\n//LIC// \n//LIC// The authors may be contacted at oomph-lib@maths.man.ac.uk.\n//LIC// \n//LIC//====================================================================\n\n#ifndef OOMPH_MY_GENERIC_PROBLEM_H\n#define OOMPH_MY_GENERIC_PROBLEM_H\n\n#include \"generic.h\"\n\n#include <ctime>\n#include <ostream>\n#include <string>\n\nnamespace oomph\n{\n\n /// Given a preconditioner:\n /// 1) if it's a the right type of preconditioner return it\n /// 2) otherwise if its a SoM preconditioner containing the right type\n ///    of preconditioner then return a pointer to the underlying\n ///    preconditioner.\n /// 3) otherwise return null\n//??ds compatability wrapper, remove?\n template<class T>\n  T smart_cast_preconditioner(Preconditioner* prec_pt)\n {\n  T bp_pt = dynamic_cast<T> (prec_pt);\n  if(bp_pt != 0)", "func_src_after": "//LIC// ====================================================================\n//LIC// This file forms part of oomph-lib, the object-oriented, \n//LIC// multi-physics finite-element library, available \n//LIC// at http://www.oomph-lib.org.\n//LIC// \n//LIC// Copyright (C) 2006-2021 Matthias Heil and Andrew Hazel\n//LIC// \n//LIC// This library is free software; you can redistribute it and/or\n//LIC// modify it under the terms of the GNU Lesser General Public\n//LIC// License as published by the Free Software Foundation; either\n//LIC// version 2.1 of the License, or (at your option) any later version.\n//LIC// \n//LIC// This library is distributed in the hope that it will be useful,\n//LIC// but WITHOUT ANY WARRANTY; without even the implied warranty of\n//LIC// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n//LIC// Lesser General Public License for more details.\n//LIC// \n//LIC// You should have received a copy of the GNU Lesser General Public\n//LIC// License along with this library; if not, write to the Free Software\n//LIC// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n//LIC// 02110-1301  USA.\n//LIC// \n//LIC// The authors may be contacted at <EMAIL>.\n//LIC// \n//LIC//====================================================================\n\n#ifndef OOMPH_MY_GENERIC_PROBLEM_H\n#define OOMPH_MY_GENERIC_PROBLEM_H\n\n#include \"generic.h\"\n\n#include <ctime>\n#include <ostream>\n#include <string>\n\nnamespace oomph\n{\n\n /// Given a preconditioner:\n /// 1) if it's a the right type of preconditioner return it\n /// 2) otherwise if its a SoM preconditioner containing the right type\n ///    of preconditioner then return a pointer to the underlying\n ///    preconditioner.\n /// 3) otherwise return null\n//??ds compatability wrapper, remove?\n template<class T>\n  T smart_cast_preconditioner(Preconditioner* prec_pt)\n {\n  T bp_pt = dynamic_cast<T> (prec_pt);\n  if(bp_pt != 0)", "line_changes": {"deleted": [{"line_no": 23, "char_start": 1142, "char_end": 1209, "line": "//LIC// The authors may be contacted at oomph-lib@maths.man.ac.uk.\n"}], "added": [{"line_no": 24, "char_start": 1142, "char_end": 1191, "line": "//LIC// The authors may be contacted at <EMAIL>.\n"}]}, "char_changes": {"deleted": [{"char_start": 1142, "char_end": 1209, "chars": "//LIC// The authors may be contacted at oomph-lib@maths.man.ac.uk.\n"}], "added": [{"char_start": 1142, "char_end": 1191, "chars": "//LIC// The authors may be contacted at <EMAIL>.\n"}]}}
{"func_name": 839, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Author: Mihai Oltean, https://mihaioltean.github.io, mihai.oltean@gmail.com\n// More details: https://jenny5.org, https://jenny5-robot.github.io/\n// Source code: github.com/jenny5-robot\n// License: MIT\n// ---------------------------------------------------------------------------\n#ifndef left_arm_controller_H\n#define left_arm_controller_H\n\n#include <opencv2\\objdetect\\objdetect.hpp>\n#include <opencv2\\highgui\\highgui.hpp>\n#include <opencv2\\imgproc\\imgproc.hpp>\n\n#include \"scufy_lib.h\"\n\n#define LEFT_ARM_BODY_MOTOR 0\n#define LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 1\n#define LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 2\n#define LEFT_ARM_ELBOW_MOTOR 3\n#define LEFT_ARM_FOREARM_MOTOR 4\n#define LEFT_ARM_WRIST_MOTOR 5\n\n#define LEFT_ARM_BODY_AS5147_INDEX 0\n#define LEFT_ARM_SHOULDER_UP_DOWN_AS5147_INDEX 1\n#define LEFT_ARM_SHOULDER_LEFT_RIGHT_AS5147_INDEX 2\n#define LEFT_ARM_ELBOW_AS5147_INDEX 3\n#define LEFT_ARM_FOREARM_AS5147_INDEX 4\n#define LEFT_ARM_WRIST_AS5147_INDEX 5\n\n#define LEFT_ARM_GRIPPER_BUTTON_INDEX 0\n#define LEFT_ARM_GRIPPER_INFRARED_INDEX 0\n\n#define LEFT_ARM_GRIPPER_BUTTON_PIN 15\n\n// left arm\n#define _AS5147_min_LEFT_ARM_BODY_MOTOR 180\n#define _AS5147_max_LEFT_ARM_BODY_MOTOR 320\n#define _AS5147_home_LEFT_ARM_BODY_MOTOR 250\n\n#define _AS5147_min_LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 40// up\n#define _AS5147_max_LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 220// down\n#define _AS5147_home_LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 210// \n\n#define _AS5147_min_LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 230\n#define _AS5147_max_LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 100\n#define _AS5147_home_LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 300\n\n#define _AS5147_min_LEFT_ARM_ELBOW_MOTOR 100\n#define _AS5147_max_LEFT_ARM_ELBOW_MOTOR 200\n#define _AS5147_home_LEFT_ARM_ELBOW_MOTOR 150\n", "func_src_after": "// Author: Mihai Oltean, https://mihaioltean.github.io, <EMAIL>\n// More details: https://jenny5.org, https://jenny5-robot.github.io/\n// Source code: github.com/jenny5-robot\n// License: MIT\n// ---------------------------------------------------------------------------\n#ifndef left_arm_controller_H\n#define left_arm_controller_H\n\n#include <opencv2\\objdetect\\objdetect.hpp>\n#include <opencv2\\highgui\\highgui.hpp>\n#include <opencv2\\imgproc\\imgproc.hpp>\n\n#include \"scufy_lib.h\"\n\n#define LEFT_ARM_BODY_MOTOR 0\n#define LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 1\n#define LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 2\n#define LEFT_ARM_ELBOW_MOTOR 3\n#define LEFT_ARM_FOREARM_MOTOR 4\n#define LEFT_ARM_WRIST_MOTOR 5\n\n#define LEFT_ARM_BODY_AS5147_INDEX 0\n#define LEFT_ARM_SHOULDER_UP_DOWN_AS5147_INDEX 1\n#define LEFT_ARM_SHOULDER_LEFT_RIGHT_AS5147_INDEX 2\n#define LEFT_ARM_ELBOW_AS5147_INDEX 3\n#define LEFT_ARM_FOREARM_AS5147_INDEX 4\n#define LEFT_ARM_WRIST_AS5147_INDEX 5\n\n#define LEFT_ARM_GRIPPER_BUTTON_INDEX 0\n#define LEFT_ARM_GRIPPER_INFRARED_INDEX 0\n\n#define LEFT_ARM_GRIPPER_BUTTON_PIN 15\n\n// left arm\n#define _AS5147_min_LEFT_ARM_BODY_MOTOR 180\n#define _AS5147_max_LEFT_ARM_BODY_MOTOR 320\n#define _AS5147_home_LEFT_ARM_BODY_MOTOR 250\n\n#define _AS5147_min_LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 40// up\n#define _AS5147_max_LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 220// down\n#define _AS5147_home_LEFT_ARM_SHOULDER_UP_DOWN_MOTOR 210// \n\n#define _AS5147_min_LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 230\n#define _AS5147_max_LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 100\n#define _AS5147_home_LEFT_ARM_SHOULDER_LEFT_RIGHT_MOTOR 300\n\n#define _AS5147_min_LEFT_ARM_ELBOW_MOTOR 100\n#define _AS5147_max_LEFT_ARM_ELBOW_MOTOR 200\n#define _AS5147_home_LEFT_ARM_ELBOW_MOTOR 150\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 79, "line": "// Author: Mihai Oltean, https://mihaioltean.github.io, mihai.oltean@gmail.com\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 64, "line": "// Author: Mihai Oltean, https://mihaioltean.github.io, <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 79, "chars": "// Author: Mihai Oltean, https://mihaioltean.github.io, mihai.oltean@gmail.com\n"}], "added": [{"char_start": 0, "char_end": 64, "chars": "// Author: Mihai Oltean, https://mihaioltean.github.io, <EMAIL>\n"}]}}
{"func_name": 895, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * This file is part of the osnmpd project (https://github.com/verrio/osnmpd).\n * Copyright (C) 2016 Olivier Verriest\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n#include <stddef.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <time.h>\n\n#include \"snmp-agent/agent-cache.h\"\n#include \"snmp-agent/agent-config.h\"\n#include \"snmp-agent/agent-notification-log.h\"\n#include \"snmp-agent/mib-tree.h\"\n#include \"snmp-core/utils.h\"\n#include \"snmp-core/snmp-types.h\"\n#include \"snmp-core/snmp-date-time.h\"\n#include \"snmp-mib/single-level-module.h\"\n#include \"snmp-mib/agent/notification-module.h\"\n\n#define NOTIFICATION_LOG_OID                 NOTIFICATION_LOG_MIB_OID,1,3\n#define NOTIFICATION_LOG_CONFORMANCE_OID     NOTIFICATION_LOG_MIB_OID,3,1,1\n#define NOTIFICATION_TADDRESS   \"::1\"\n\nconst char *const notification_log_name = \"trap-log\";\n\nstatic SysOREntry notification_log_or_entry = {\n    .or_id = {\n        .subid = { NOTIFICATION_LOG_CONFORMANCE_OID },\n        .len = OID_SEQ_LENGTH(NOTIFICATION_LOG_CONFORMANCE_OID)\n    },\n    .or_descr = \"NOTIFICATION-LOG-MIB - MIB containing log of dispatched traps\",", "func_src_after": "/*\n * This file is part of the osnmpd project (https://github.com/verrio/osnmpd).\n * Copyright (C) 2016 Olivier Verriest\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n#include <stddef.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <time.h>\n\n#include \"snmp-agent/agent-cache.h\"\n#include \"snmp-agent/agent-config.h\"\n#include \"snmp-agent/agent-notification-log.h\"\n#include \"snmp-agent/mib-tree.h\"\n#include \"snmp-core/utils.h\"\n#include \"snmp-core/snmp-types.h\"\n#include \"snmp-core/snmp-date-time.h\"\n#include \"snmp-mib/single-level-module.h\"\n#include \"snmp-mib/agent/notification-module.h\"\n\n#define NOTIFICATION_LOG_OID                 NOTIFICATION_LOG_MIB_OID,1,3\n#define NOTIFICATION_LOG_CONFORMANCE_OID     NOTIFICATION_LOG_MIB_OID,3,1,1\n#define NOTIFICATION_TADDRESS   \"<IP-Address>\"\n\nconst char *const notification_log_name = \"trap-log\";\n\nstatic SysOREntry notification_log_or_entry = {\n    .or_id = {\n        .subid = { NOTIFICATION_LOG_CONFORMANCE_OID },\n        .len = OID_SEQ_LENGTH(NOTIFICATION_LOG_CONFORMANCE_OID)\n    },\n    .or_descr = \"NOTIFICATION-LOG-MIB - MIB containing log of dispatched traps\",", "line_changes": {"deleted": [{"line_no": 41, "char_start": 1774, "char_end": 1812, "line": "#define NOTIFICATION_TADDRESS   \"::1\"\n"}], "added": [{"line_no": 42, "char_start": 1774, "char_end": 1821, "line": "#define NOTIFICATION_TADDRESS   \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 1774, "char_end": 1812, "chars": "#define NOTIFICATION_TADDRESS   \"::1\"\n"}], "added": [{"char_start": 1774, "char_end": 1821, "chars": "#define NOTIFICATION_TADDRESS   \"<IP-Address>\"\n"}]}}
{"func_name": 903, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/***************************************************************************\r\n * This file is part of NUSspli.                                           *\r\n * Copyright (c) 2020-2021 V10lator <v10lator@myway.de>                    *\r\n *                                                                         *\r\n * This program is free software; you can redistribute it and/or modify    *\r\n * it under the terms of the GNU General Public License as published by    *\r\n * the Free Software Foundation; either version 2 of the License, or       *\r\n * (at your option) any later version.                                     *\r\n *                                                                         *\r\n * This program is distributed in the hope that it will be useful,         *\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of          *\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *\r\n * GNU General Public License for more details.                            *\r\n *                                                                         *\r\n * You should have received a copy of the GNU General Public License along *\r\n * with this program; if not, write to the Free Software Foundation, Inc., *\r\n * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.             *\r\n ***************************************************************************/\r\n\r\n#pragma once\r\n\r\n#include <wut-fixups.h>\r\n\r\n#include <stdint.h>\r\n#include <uchar.h>\r\n\r\n#include <nn/swkbd.h>\r\n\r\n#include <input.h>\r\n\r\n#ifdef __cplusplus\r\n\textern \"C\" {\r\n#endif\r\n\r\n// Enums copied from https://github.com/devkitPro/wut/blob/master/include/nn/swkbd/swkbd_cpp.h\r\ntypedef enum\r\n{\r\n   Swkbd_LanguageType__Japanese  = 0,\r\n   Swkbd_LanguageType__English   = 1,\r\n   Swkbd_LanguageType__French    = 2,\r\n   Swkbd_LanguageType__German    = 3,\r\n   Swkbd_LanguageType__Italian   = 4,\r\n   Swkbd_LanguageType__Spanish   = 5,\r\n   Swkbd_LanguageType__Chinese1  = 6,\r\n   Swkbd_LanguageType__Korean    = 7,\r\n   Swkbd_LanguageType__Dutch     = 8,\r\n   Swkbd_LanguageType__Potuguese = 9,\r\n   Swkbd_LanguageType__Russian   = 10,\r\n   Swkbd_LanguageType__Chinese2  = 11,\r\n   Swkbd_LanguageType__Invalid   = 12\r", "func_src_after": "/***************************************************************************\r\n * This file is part of NUSspli.                                           *\r\n * Copyright (c) 2020-2021 V10lator <<EMAIL>>                    *\r\n *                                                                         *\r\n * This program is free software; you can redistribute it and/or modify    *\r\n * it under the terms of the GNU General Public License as published by    *\r\n * the Free Software Foundation; either version 2 of the License, or       *\r\n * (at your option) any later version.                                     *\r\n *                                                                         *\r\n * This program is distributed in the hope that it will be useful,         *\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of          *\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *\r\n * GNU General Public License for more details.                            *\r\n *                                                                         *\r\n * You should have received a copy of the GNU General Public License along *\r\n * with this program; if not, write to the Free Software Foundation, Inc., *\r\n * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.             *\r\n ***************************************************************************/\r\n\r\n#pragma once\r\n\r\n#include <wut-fixups.h>\r\n\r\n#include <stdint.h>\r\n#include <uchar.h>\r\n\r\n#include <nn/swkbd.h>\r\n\r\n#include <input.h>\r\n\r\n#ifdef __cplusplus\r\n\textern \"C\" {\r\n#endif\r\n\r\n// Enums copied from https://github.com/devkitPro/wut/blob/master/include/nn/swkbd/swkbd_cpp.h\r\ntypedef enum\r\n{\r\n   Swkbd_LanguageType__Japanese  = 0,\r\n   Swkbd_LanguageType__English   = 1,\r\n   Swkbd_LanguageType__French    = 2,\r\n   Swkbd_LanguageType__German    = 3,\r\n   Swkbd_LanguageType__Italian   = 4,\r\n   Swkbd_LanguageType__Spanish   = 5,\r\n   Swkbd_LanguageType__Chinese1  = 6,\r\n   Swkbd_LanguageType__Korean    = 7,\r\n   Swkbd_LanguageType__Dutch     = 8,\r\n   Swkbd_LanguageType__Potuguese = 9,\r\n   Swkbd_LanguageType__Russian   = 10,\r\n   Swkbd_LanguageType__Chinese2  = 11,\r\n   Swkbd_LanguageType__Invalid   = 12\r", "line_changes": {"deleted": [{"line_no": 3, "char_start": 156, "char_end": 234, "line": " * Copyright (c) 2020-2021 V10lator <v10lator@myway.de>                    *\r\n"}], "added": [{"line_no": 4, "char_start": 156, "char_end": 224, "line": " * Copyright (c) 2020-2021 V10lator <<EMAIL>>                    *\r\n"}]}, "char_changes": {"deleted": [{"char_start": 156, "char_end": 234, "chars": " * Copyright (c) 2020-2021 V10lator <v10lator@myway.de>                    *\r\n"}], "added": [{"char_start": 156, "char_end": 224, "chars": " * Copyright (c) 2020-2021 V10lator <<EMAIL>>                    *\r\n"}]}}
{"func_name": 910, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": " * words (the TTS people may want to use this, and I need it)\n * \n * Revision 1.8  2006/02/24 18:30:20  arthchan2003\n * Changed back s3senid to int32.  Don't know the reason why using s3senid_t will cause failure in test. Need to talk with Dave.\n *\n * Revision 1.7  2006/02/24 16:42:48  arthchan2003\n * Fixed function prototype for align_sen_active\n *\n * Revision 1.6  2006/02/24 04:42:32  arthchan2003\n * Merged from branch SPHINX3_5_2_RCI_IRII_BRANCH: Fixed dox-doc.\n *\n * Revision 1.5.4.2  2005/08/02 21:42:34  arthchan2003\n * 1, Moved static variables from function level to the application level. 2, united all initialization of HMM using s3_am_init, 3 united all GMM computation using ms_cont_mgau_frame_eval.\n *\n * Revision 1.5.4.1  2005/07/22 03:46:56  arthchan2003\n * 1, cleaned up the code, 2, fixed dox-doc. 3, use srch.c version of log_hypstr and log_hyp_detailed.\n *\n * Revision 1.5  2005/06/22 05:39:56  arthchan2003\n * Synchronize argument with decode. Removed silwid, startwid and finishwid.  Wrapped up logs3_init, Wrapped up lmset. Refactor with functions in dag.\n *\n * Revision 1.1.1.1  2005/03/24 15:24:01  archan\n * I found Evandro's suggestion is quite right after yelling at him 2 days later. So I decide to check this in again without any binaries. (I have done make distcheck. ) . Again, this is a candidate for s3.6 and I believe I need to work out 4-5 intermediate steps before I can complete the first prototype.  That's why I keep local copies. \n *\n * Revision 1.4  2004/12/06 11:31:48  arthchan2003\n * Fix brief comments for programs.\n *\n * Revision 1.3  2004/12/05 12:01:32  arthchan2003\n * 1, move libutil/libutil.h to s3types.h, seems to me not very nice to have it in every files. 2, Remove warning messages of main_align.c 3, Remove warning messages in chgCase.c\n *\n * Revision 1.2  2004/09/13 08:13:28  arthchan2003\n * update copyright notice from 200x to 2004\n *\n * Revision 1.1  2004/08/30 22:29:19  arthchan2003\n * Refactor the s3.0 tools, currently it is still quite messy, we need to make it modularize later on.\n *\n * Revision 1.1  2004/08/09 00:17:12  arthchan2003\n * Incorporating s3.0 align, at this point, there are still some small problems in align but they don't hurt. For example, the score doesn't match with s3.0 and the output will have problem if files are piped to /dev/null/. I think we can go for it.\n *\n * Revision 1.1  2003/02/14 14:40:34  cbq\n * Compiles.  Analysis is probably hosed.\n *\n * Revision 1.1  2000/04/24 09:39:41  lenzo\n * s3 import.\n *\n * \n * 13-Sep-96\tM K Ravishankar (rkm@cs.cmu.edu) at Carnegie Mellon University\n * \t\tChanged align_sen_active to flag active senones instead of building a list\n * \t\tof them.\n * \n * 15-Jul-96\tM K Ravishankar (rkm@cs.cmu.edu) at Carnegie Mellon University", "func_src_after": " * words (the TTS people may want to use this, and I need it)\n * \n * Revision 1.8  2006/02/24 18:30:20  arthchan2003\n * Changed back s3senid to int32.  Don't know the reason why using s3senid_t will cause failure in test. Need to talk with Dave.\n *\n * Revision 1.7  2006/02/24 16:42:48  arthchan2003\n * Fixed function prototype for align_sen_active\n *\n * Revision 1.6  2006/02/24 04:42:32  arthchan2003\n * Merged from branch SPHINX3_5_2_RCI_IRII_BRANCH: Fixed dox-doc.\n *\n * Revision 1.5.4.2  2005/08/02 21:42:34  arthchan2003\n * 1, Moved static variables from function level to the application level. 2, united all initialization of HMM using s3_am_init, 3 united all GMM computation using ms_cont_mgau_frame_eval.\n *\n * Revision 1.5.4.1  2005/07/22 03:46:56  arthchan2003\n * 1, cleaned up the code, 2, fixed dox-doc. 3, use srch.c version of log_hypstr and log_hyp_detailed.\n *\n * Revision 1.5  2005/06/22 05:39:56  arthchan2003\n * Synchronize argument with decode. Removed silwid, startwid and finishwid.  Wrapped up logs3_init, Wrapped up lmset. Refactor with functions in dag.\n *\n * Revision 1.1.1.1  2005/03/24 15:24:01  archan\n * I found Evandro's suggestion is quite right after yelling at him 2 days later. So I decide to check this in again without any binaries. (I have done make distcheck. ) . Again, this is a candidate for s3.6 and I believe I need to work out 4-5 intermediate steps before I can complete the first prototype.  That's why I keep local copies. \n *\n * Revision 1.4  2004/12/06 11:31:48  arthchan2003\n * Fix brief comments for programs.\n *\n * Revision 1.3  2004/12/05 12:01:32  arthchan2003\n * 1, move libutil/libutil.h to s3types.h, seems to me not very nice to have it in every files. 2, Remove warning messages of main_align.c 3, Remove warning messages in chgCase.c\n *\n * Revision 1.2  2004/09/13 08:13:28  arthchan2003\n * update copyright notice from 200x to 2004\n *\n * Revision 1.1  2004/08/30 22:29:19  arthchan2003\n * Refactor the s3.0 tools, currently it is still quite messy, we need to make it modularize later on.\n *\n * Revision 1.1  2004/08/09 00:17:12  arthchan2003\n * Incorporating s3.0 align, at this point, there are still some small problems in align but they don't hurt. For example, the score doesn't match with s3.0 and the output will have problem if files are piped to /dev/null/. I think we can go for it.\n *\n * Revision 1.1  2003/02/14 14:40:34  cbq\n * Compiles.  Analysis is probably hosed.\n *\n * Revision 1.1  2000/04/24 09:39:41  lenzo\n * s3 import.\n *\n * \n * 13-Sep-96\tM K Ravishankar (<EMAIL>) at Carnegie Mellon University\n * \t\tChanged align_sen_active to flag active senones instead of building a list\n * \t\tof them.\n * \n * 15-Jul-96\tM K Ravishankar (<EMAIL>) at Carnegie Mellon University", "line_changes": {"deleted": [{"line_no": 46, "char_start": 2513, "char_end": 2589, "line": " * 13-Sep-96\tM K Ravishankar (rkm@cs.cmu.edu) at Carnegie Mellon University\n"}, {"line_no": 51, "char_start": 2680, "char_end": 2755, "line": " * 15-Jul-96\tM K Ravishankar (rkm@cs.cmu.edu) at Carnegie Mellon University"}], "added": [{"line_no": 47, "char_start": 2513, "char_end": 2582, "line": " * 13-Sep-96\tM K Ravishankar (<EMAIL>) at Carnegie Mellon University\n"}, {"line_no": 52, "char_start": 2680, "char_end": 2748, "line": " * 15-Jul-96\tM K Ravishankar (<EMAIL>) at Carnegie Mellon University"}]}, "char_changes": {"deleted": [{"char_start": 2513, "char_end": 2589, "chars": " * 13-Sep-96\tM K Ravishankar (rkm@cs.cmu.edu) at Carnegie Mellon University\n"}, {"char_start": 2680, "char_end": 2755, "chars": " * 15-Jul-96\tM K Ravishankar (rkm@cs.cmu.edu) at Carnegie Mellon University"}], "added": [{"char_start": 2513, "char_end": 2582, "chars": " * 13-Sep-96\tM K Ravishankar (<EMAIL>) at Carnegie Mellon University\n"}, {"char_start": 2680, "char_end": 2748, "chars": " * 15-Jul-96\tM K Ravishankar (<EMAIL>) at Carnegie Mellon University"}]}}
{"func_name": 922, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// ---------------------------------------------------------------------------\n//\n//      The ab-initio based multiscale library\n//\n//                  S / P H I / n X\n//\n//      Copyright:  Max-Planck-Institute for Iron Research\n//                  40237 Duesseldorf, Germany\n//\n//      Contact:    https://sxlib.mpie.de\n//      Authors:    see sphinx/AUTHORS\n//      License:    see sphinx/LICENSE\n//\n// ---------------------------------------------------------------------------\n\n#ifndef _SX_OVERLAP_H_\n#define _SX_OVERLAP_H_\n\n#include <SxDirac.h>\n#include <SxPtr.h>\n\n/** Determines what method in orthogonalization/orthonormalization \n    will be applied.\n */\nenum SxOrthoMethod { GramSchmidt, Loewdin};\n\n/** \\brief Generic overlap operator interface\n\n    \\author C. Freysoldt, freysoldt@mpie.de */\nclass SX_EXPORT_DIRAC SxOverlapBase\n{\n   public:\n      /// Virtual destructor\n      virtual ~SxOverlapBase () {}\n\n      /// Norm square\n      virtual double normSqr (const SxDiracVec<Complex16> &psi) const = 0;\n\n      /// Scalar product\n      virtual SxComplex16 dot (const SxDiracVec<Complex16> &x,\n                               const SxDiracVec<Complex16> &y) const = 0;\n\n      /// Apply overlap operator\n      virtual SxDiracVec<Complex16> \n      apply (const SxDiracVec<Complex16> &psi) const = 0;\n      \n      /// Set states x orthogonal to states y\n      virtual void setOrthogonal (SxDiracVec<Complex16> *xPtr,\n                                  const SxDiracVec<Complex16> &y) const = 0;\n", "func_src_after": "// ---------------------------------------------------------------------------\n//\n//      The ab-initio based multiscale library\n//\n//                  S / P H I / n X\n//\n//      Copyright:  Max-Planck-Institute for Iron Research\n//                  40237 Duesseldorf, Germany\n//\n//      Contact:    https://sxlib.mpie.de\n//      Authors:    see sphinx/AUTHORS\n//      License:    see sphinx/LICENSE\n//\n// ---------------------------------------------------------------------------\n\n#ifndef _SX_OVERLAP_H_\n#define _SX_OVERLAP_H_\n\n#include <SxDirac.h>\n#include <SxPtr.h>\n\n/** Determines what method in orthogonalization/orthonormalization \n    will be applied.\n */\nenum SxOrthoMethod { GramSchmidt, Loewdin};\n\n/** \\brief Generic overlap operator interface\n\n    \\author C. Freysoldt, <EMAIL> */\nclass SX_EXPORT_DIRAC SxOverlapBase\n{\n   public:\n      /// Virtual destructor\n      virtual ~SxOverlapBase () {}\n\n      /// Norm square\n      virtual double normSqr (const SxDiracVec<Complex16> &psi) const = 0;\n\n      /// Scalar product\n      virtual SxComplex16 dot (const SxDiracVec<Complex16> &x,\n                               const SxDiracVec<Complex16> &y) const = 0;\n\n      /// Apply overlap operator\n      virtual SxDiracVec<Complex16> \n      apply (const SxDiracVec<Complex16> &psi) const = 0;\n      \n      /// Set states x orthogonal to states y\n      virtual void setOrthogonal (SxDiracVec<Complex16> *xPtr,\n                                  const SxDiracVec<Complex16> &y) const = 0;\n", "line_changes": {"deleted": [{"line_no": 29, "char_start": 756, "char_end": 803, "line": "    \\author C. Freysoldt, freysoldt@mpie.de */\n"}], "added": [{"line_no": 30, "char_start": 756, "char_end": 793, "line": "    \\author C. Freysoldt, <EMAIL> */\n"}]}, "char_changes": {"deleted": [{"char_start": 756, "char_end": 803, "chars": "    \\author C. Freysoldt, freysoldt@mpie.de */\n"}], "added": [{"char_start": 756, "char_end": 793, "chars": "    \\author C. Freysoldt, <EMAIL> */\n"}]}}
{"func_name": 976, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// TheBoredomProject: Battleship (c) Andrew Woo, 2019\n// Email: seungminleader@gmail.com\n// Website: https://wooandrew.github.io\n\n#pragma once\n\n#ifndef GRAPHICS_SPRITE\n#define GRAPHICS_SPRITE\n\n#include \"../lib.h\"\n#include \"texture.h\"\n\nclass Sprite {\n\npublic:\n\n\tSprite();\n\tSprite(std::string path);\n\tSprite(std::string path, glm::vec3 _position);\n\tSprite(std::string path, glm::vec3 _position, float _scale);\n\tSprite(std::string path, glm::vec3 _position, glm::vec3 _scale);\n\t\n\tvoid Flip(bool _flip = false);\n\n\tvoid Update() const;\n\tvoid Render() const;\n\n\tvoid SetPosition(glm::vec3 _position);\n\n\tvoid RotateTo(float _rotation);\n\n\tvoid SetScale(float _scale);\n\tvoid SetScale(glm::vec3 _scale);\n\n\tfloat* GetRotation();\n\tglm::vec3* GetPosition();\n\tglm::vec3* GetScale();\n\tglm::vec3* GetSize();\n\nprivate:\n\n\tTexture texture;\n\n\tfloat rotation;\n\n\tglm::vec3 position;\n\tglm::vec3 scale;\n\tglm::vec3 size;\n\n\tbool flip;", "func_src_after": "// TheBoredomProject: Battleship (c) Andrew Woo, 2019\n// Email: <EMAIL>\n// Website: https://wooandrew.github.io\n\n#pragma once\n\n#ifndef GRAPHICS_SPRITE\n#define GRAPHICS_SPRITE\n\n#include \"../lib.h\"\n#include \"texture.h\"\n\nclass Sprite {\n\npublic:\n\n\tSprite();\n\tSprite(std::string path);\n\tSprite(std::string path, glm::vec3 _position);\n\tSprite(std::string path, glm::vec3 _position, float _scale);\n\tSprite(std::string path, glm::vec3 _position, glm::vec3 _scale);\n\t\n\tvoid Flip(bool _flip = false);\n\n\tvoid Update() const;\n\tvoid Render() const;\n\n\tvoid SetPosition(glm::vec3 _position);\n\n\tvoid RotateTo(float _rotation);\n\n\tvoid SetScale(float _scale);\n\tvoid SetScale(glm::vec3 _scale);\n\n\tfloat* GetRotation();\n\tglm::vec3* GetPosition();\n\tglm::vec3* GetScale();\n\tglm::vec3* GetSize();\n\nprivate:\n\n\tTexture texture;\n\n\tfloat rotation;\n\n\tglm::vec3 position;\n\tglm::vec3 scale;\n\tglm::vec3 size;\n\n\tbool flip;", "line_changes": {"deleted": [{"line_no": 2, "char_start": 54, "char_end": 89, "line": "// Email: seungminleader@gmail.com\n"}], "added": [{"line_no": 3, "char_start": 54, "char_end": 72, "line": "// Email: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 54, "char_end": 89, "chars": "// Email: seungminleader@gmail.com\n"}], "added": [{"char_start": 54, "char_end": 72, "chars": "// Email: <EMAIL>\n"}]}}
{"func_name": 998, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n *  Unix SMB/CIFS implementation.\n *  passdb - password and authentication handling\n *\n *  Copyright (C) Andrew Tridgell\t\t1992-1998\n *  Copyright (C) Jeremy Allison \t\t1995-2009\n *  Copyright (C) Luke Kenneth Casson Leighton\t1996-1998\n *  Copyright (C) Jean François Micouleau\t1998-2001\n *  Copyright (C) Gerald (Jerry) Carter\t\t2000-2006\n *  Copyright (C) Simo Sorce\t\t\t2000-2003,2006\n *  Copyright (C) Andrew Bartlett\t\t2001-2002\n *  Copyright (C) Shahms King\t\t\t2001\n *  Copyright (C) Jelmer Vernooij\t\t2002\n *  Copyright (C) Rafal Szczesniak\t\t2002\n *  Copyright (C) Stefan (metze) Metzmacher\t2002-2003\n *  Copyright (C) Guenther Deschner\t\t2004-2005\n *  Copyright (C) Jim McDonough (jmcd@us.ibm.com) 2004-2005\n *  Copyright (C) Vince Brimhall\t\t2004-2005\n *  Copyright (C) Volker Lendecke \t\t2006\n *  Copyright (C) Michael Adam\t\t\t2007\n *  Copyright (C) Dan Sledz\t\t\t2009\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef _PASSDB_PROTO_H_\n#define _PASSDB_PROTO_H_\n\n/* The following definitions come from passdb/account_pol.c  */\n\nvoid account_policy_names_list(const char ***names, int *num_names);\nconst char *decode_account_policy_name(enum pdb_policy_type type);\nconst char *get_account_policy_attr(enum pdb_policy_type type);\nconst char *account_policy_get_desc(enum pdb_policy_type type);\nenum pdb_policy_type account_policy_name_to_typenum(const char *name);\nbool account_policy_get_default(enum pdb_policy_type type, uint32_t *val);\nbool init_account_policy(void);\nbool account_policy_get(enum pdb_policy_type type, uint32_t *value);\nbool account_policy_set(enum pdb_policy_type type, uint32_t value);", "func_src_after": "/*\n *  Unix SMB/CIFS implementation.\n *  passdb - password and authentication handling\n *\n *  Copyright (C) Andrew Tridgell\t\t1992-1998\n *  Copyright (C) Jeremy Allison \t\t1995-2009\n *  Copyright (C) Luke Kenneth Casson Leighton\t1996-1998\n *  Copyright (C) Jean François Micouleau\t1998-2001\n *  Copyright (C) Gerald (Jerry) Carter\t\t2000-2006\n *  Copyright (C) Simo Sorce\t\t\t2000-2003,2006\n *  Copyright (C) Andrew Bartlett\t\t2001-2002\n *  Copyright (C) Shahms King\t\t\t2001\n *  Copyright (C) Jelmer Vernooij\t\t2002\n *  Copyright (C) Rafal Szczesniak\t\t2002\n *  Copyright (C) Stefan (metze) Metzmacher\t2002-2003\n *  Copyright (C) Guenther Deschner\t\t2004-2005\n *  Copyright (C) Jim McDonough (<EMAIL>) 2004-2005\n *  Copyright (C) Vince Brimhall\t\t2004-2005\n *  Copyright (C) Volker Lendecke \t\t2006\n *  Copyright (C) Michael Adam\t\t\t2007\n *  Copyright (C) Dan Sledz\t\t\t2009\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef _PASSDB_PROTO_H_\n#define _PASSDB_PROTO_H_\n\n/* The following definitions come from passdb/account_pol.c  */\n\nvoid account_policy_names_list(const char ***names, int *num_names);\nconst char *decode_account_policy_name(enum pdb_policy_type type);\nconst char *get_account_policy_attr(enum pdb_policy_type type);\nconst char *account_policy_get_desc(enum pdb_policy_type type);\nenum pdb_policy_type account_policy_name_to_typenum(const char *name);\nbool account_policy_get_default(enum pdb_policy_type type, uint32_t *val);\nbool init_account_policy(void);\nbool account_policy_get(enum pdb_policy_type type, uint32_t *value);\nbool account_policy_set(enum pdb_policy_type type, uint32_t value);", "line_changes": {"deleted": [{"line_no": 17, "char_start": 650, "char_end": 710, "line": " *  Copyright (C) Jim McDonough (jmcd@us.ibm.com) 2004-2005\n"}], "added": [{"line_no": 18, "char_start": 650, "char_end": 702, "line": " *  Copyright (C) Jim McDonough (<EMAIL>) 2004-2005\n"}]}, "char_changes": {"deleted": [{"char_start": 650, "char_end": 710, "chars": " *  Copyright (C) Jim McDonough (jmcd@us.ibm.com) 2004-2005\n"}], "added": [{"char_start": 650, "char_end": 702, "chars": " *  Copyright (C) Jim McDonough (<EMAIL>) 2004-2005\n"}]}}
{"func_name": 1034, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * @file genQGenerators.h\n * @author Bryce Deary (github@bd2357.org)\n * @brief \n * @version 0.1\n * @date 2020-08-22\n * \n * Copyright 2020, bdPrime\n * \n */\n\n#ifndef _GENQGENERATORS_H_\n#define _GENQGENERATORS_H_\n\n\n/**\n * @brief macro for compile time definition of GenQ structure\n *  given an existing storage pointer of known type and length\n */\n#define DefineGenQFromStore(name, store, len) \\\nenum {store##_len=len}; \\\nGenQ_t name##_instance = (GenQ_t){ \\\n    .base_add=store, \\\n    .next=(uint8_t*)store, \\\n    .last=(uint8_t*)store, \\\n    .end=(uint8_t*)&store[store##_len - 1], \\\n    .objectSize=sizeof store[0] }; \\\nGenQ_t * const name = &name##_instance    \n\n\n/**\n * @brief macro for defining a static queue of given type and length\n * \n */\n#define DefineGenQ(name, type, len) \\\nenum {name##_len = len }; \\\ntype name##_space[name##_len+1] = {0}; \\\nGenQ_t name##_instance = (GenQ_t){ \\\n    .base_add=name##_space, \\\n    .next=(uint8_t*)name##_space, \\\n    .last=(uint8_t*)name##_space, \\\n    .end=(uint8_t*)&name##_space[name##_len], \\\n    .objectSize=sizeof(type) }; \\\nSTATIC GenQ_t * const name = &name##_instance\n\n/**\n * @brief macro for defining a static queue of given type and length\n * \n */\n#define DefineStaticGenQ(name, type, len) \\", "func_src_after": "/**\n * @file genQGenerators.h\n * @author Bryce Deary (<EMAIL>)\n * @brief \n * @version 0.1\n * @date 2020-08-22\n * \n * Copyright 2020, bdPrime\n * \n */\n\n#ifndef _GENQGENERATORS_H_\n#define _GENQGENERATORS_H_\n\n\n/**\n * @brief macro for compile time definition of GenQ structure\n *  given an existing storage pointer of known type and length\n */\n#define DefineGenQFromStore(name, store, len) \\\nenum {store##_len=len}; \\\nGenQ_t name##_instance = (GenQ_t){ \\\n    .base_add=store, \\\n    .next=(uint8_t*)store, \\\n    .last=(uint8_t*)store, \\\n    .end=(uint8_t*)&store[store##_len - 1], \\\n    .objectSize=sizeof store[0] }; \\\nGenQ_t * const name = &name##_instance    \n\n\n/**\n * @brief macro for defining a static queue of given type and length\n * \n */\n#define DefineGenQ(name, type, len) \\\nenum {name##_len = len }; \\\ntype name##_space[name##_len+1] = {0}; \\\nGenQ_t name##_instance = (GenQ_t){ \\\n    .base_add=name##_space, \\\n    .next=(uint8_t*)name##_space, \\\n    .last=(uint8_t*)name##_space, \\\n    .end=(uint8_t*)&name##_space[name##_len], \\\n    .objectSize=sizeof(type) }; \\\nSTATIC GenQ_t * const name = &name##_instance\n\n/**\n * @brief macro for defining a static queue of given type and length\n * \n */\n#define DefineStaticGenQ(name, type, len) \\", "line_changes": {"deleted": [{"line_no": 3, "char_start": 30, "char_end": 73, "line": " * @author Bryce Deary (github@bd2357.org)\n"}], "added": [{"line_no": 4, "char_start": 30, "char_end": 63, "line": " * @author Bryce Deary (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 30, "char_end": 73, "chars": " * @author Bryce Deary (github@bd2357.org)\n"}], "added": [{"char_start": 30, "char_end": 63, "chars": " * @author Bryce Deary (<EMAIL>)\n"}]}}
{"func_name": 1039, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\tu8         localP256Key[64];\n} hci_le_readLocalP256KeyCompleteEvt_t;\n\n\n\n/**\n *  @brief  Event Parameters for \"7.7.65.9 LE Generate DHKey Complete event\"\n */\ntypedef struct {\n\tu8         subEventCode;\n\tu8         status;\n\tu8         DHKey[32];\n} hci_le_generateDHKeyCompleteEvt_t;\n\n\n\n/**\n *  @brief  Event Parameters for \"7.7.65.10 LE Enhanced Connection Complete event\"\n */\ntypedef struct {\n\tu8         subEventCode;\n\tu8         status;\n\tu16\t\t   connHandle;\n\tu8\t\t   role;\n\tu8\t\t   PeerAddrType;\n\tu8         PeerAddr[6];\n\tu8         localRslvPrivAddr[6];\n\tu8         Peer_RslvPrivAddr[6];\n\tu16        connInterval;\n\tu16        connLatency;\n\tu16        superTimeout;\n\tu8         masterClkAccuracy;\n} hci_le_enhancedConnCompleteEvt_t;\n\n\n\n/**\n *  @brief  Event Parameters for \"7.7.65.12 LE PHY Update Complete event\"\n */\ntypedef struct {\n\tu8         subEventCode;\n\tu8         status;\n\tu16        connHandle;\n\tu8 \t\t   tx_phy;\n\tu8\t\t   rx_phy;\n} hci_le_phyUpdateCompleteEvt_t;\n\n\n\n/**", "func_src_after": "\tu8         localP256Key[64];\n} hci_le_readLocalP256KeyCompleteEvt_t;\n\n\n\n/**\n *  @brief  Event Parameters for \"<IP-Address> LE Generate DHKey Complete event\"\n */\ntypedef struct {\n\tu8         subEventCode;\n\tu8         status;\n\tu8         DHKey[32];\n} hci_le_generateDHKeyCompleteEvt_t;\n\n\n\n/**\n *  @brief  Event Parameters for \"<IP-Address> LE Enhanced Connection Complete event\"\n */\ntypedef struct {\n\tu8         subEventCode;\n\tu8         status;\n\tu16\t\t   connHandle;\n\tu8\t\t   role;\n\tu8\t\t   PeerAddrType;\n\tu8         PeerAddr[6];\n\tu8         localRslvPrivAddr[6];\n\tu8         Peer_RslvPrivAddr[6];\n\tu16        connInterval;\n\tu16        connLatency;\n\tu16        superTimeout;\n\tu8         masterClkAccuracy;\n} hci_le_enhancedConnCompleteEvt_t;\n\n\n\n/**\n *  @brief  Event Parameters for \"<IP-Address> LE PHY Update Complete event\"\n */\ntypedef struct {\n\tu8         subEventCode;\n\tu8         status;\n\tu16        connHandle;\n\tu8 \t\t   tx_phy;\n\tu8\t\t   rx_phy;\n} hci_le_phyUpdateCompleteEvt_t;\n\n\n\n/**", "line_changes": {"deleted": [{"line_no": 7, "char_start": 77, "char_end": 154, "line": " *  @brief  Event Parameters for \"7.7.65.9 LE Generate DHKey Complete event\"\n"}, {"line_no": 19, "char_start": 292, "char_end": 375, "line": " *  @brief  Event Parameters for \"7.7.65.10 LE Enhanced Connection Complete event\"\n"}, {"line_no": 40, "char_start": 746, "char_end": 820, "line": " *  @brief  Event Parameters for \"7.7.65.12 LE PHY Update Complete event\"\n"}], "added": [{"line_no": 8, "char_start": 77, "char_end": 158, "line": " *  @brief  Event Parameters for \"<IP-Address> LE Generate DHKey Complete event\"\n"}, {"line_no": 20, "char_start": 292, "char_end": 378, "line": " *  @brief  Event Parameters for \"<IP-Address> LE Enhanced Connection Complete event\"\n"}, {"line_no": 41, "char_start": 746, "char_end": 823, "line": " *  @brief  Event Parameters for \"<IP-Address> LE PHY Update Complete event\"\n"}]}, "char_changes": {"deleted": [{"char_start": 77, "char_end": 154, "chars": " *  @brief  Event Parameters for \"7.7.65.9 LE Generate DHKey Complete event\"\n"}, {"char_start": 292, "char_end": 375, "chars": " *  @brief  Event Parameters for \"7.7.65.10 LE Enhanced Connection Complete event\"\n"}, {"char_start": 746, "char_end": 820, "chars": " *  @brief  Event Parameters for \"7.7.65.12 LE PHY Update Complete event\"\n"}], "added": [{"char_start": 77, "char_end": 158, "chars": " *  @brief  Event Parameters for \"<IP-Address> LE Generate DHKey Complete event\"\n"}, {"char_start": 292, "char_end": 378, "chars": " *  @brief  Event Parameters for \"<IP-Address> LE Enhanced Connection Complete event\"\n"}, {"char_start": 746, "char_end": 823, "chars": " *  @brief  Event Parameters for \"<IP-Address> LE PHY Update Complete event\"\n"}]}}
{"func_name": 1053, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n            \"{\\\"alg\\\":\\\"A128KW\\\",\\\"kid\\\":\\\"7\\\"},\"\n            \"\\\"encrypted_key\\\":\"\n            \"\\\"6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ\\\"}],\"\n            \"\\\"iv\\\":\"\n            \"\\\"AxY8DCtDaGlsbGljb3RoZQ\\\",\"\n            \"\\\"ciphertext\\\":\"\n            \"\\\"KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY\\\",\"\n            \"\\\"tag\\\":\"\n            \"\\\"Mz-VPPyU4RlcuYv1IwIvzw\\\"\"\n            \"}\\\";\";\n\n    apr_jose_cb_t cb;\n\n    cb.encrypt = encrypt_cb;\n    cb.ctx = tc;\n\n    apr_json_decode(&recipient1.header, (const char *) r1h, strlen(r1h), &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n    apr_json_decode(&recipient2.header, (const char *) r2h, strlen(r2h), &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n\n    recipient = apr_array_push(recipients);\n    *recipient = &recipient1;\n    recipient = apr_array_push(recipients);\n    *recipient = &recipient2;\n\n    apr_json_decode(&header, h, APR_JSON_VALUE_STRING, &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n    apr_json_decode(&protected_header, ph, APR_JSON_VALUE_STRING, &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n\n    ba = apr_bucket_alloc_create(p);\n    bb = apr_brigade_create(p, ba);\n\n    jdata = apr_jose_data_make(NULL, \"plain\", pl, sizeof(pl), p);\n    encryption = apr_jose_encryption_make(NULL, header, protected_header, p);\n    jose = apr_jose_jwe_json_make(NULL, NULL, recipients, encryption, jdata, p);\n\n    status = apr_jose_encode(bb, NULL, NULL, jose, &cb, p);\n\n    ABTS_INT_EQUAL(tc, APR_SUCCESS, status);\n\n    apr_brigade_flatten(bb, buf, &len);\n    ABTS_STR_NEQUAL(tc, expect, buf, len);\n}", "func_src_after": "            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n            \"{\\\"alg\\\":\\\"A128KW\\\",\\\"kid\\\":\\\"7\\\"},\"\n            \"\\\"encrypted_key\\\":\"\n            \"\\\"6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ\\\"}],\"\n            \"\\\"iv\\\":\"\n            \"\\\"AxY8DCtDaGlsbGljb3RoZQ\\\",\"\n            \"\\\"ciphertext\\\":\"\n            \"\\\"KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY\\\",\"\n            \"\\\"tag\\\":\"\n            \"\\\"Mz-VPPyU4RlcuYv1IwIvzw\\\"\"\n            \"}\\\";\";\n\n    apr_jose_cb_t cb;\n\n    cb.encrypt = encrypt_cb;\n    cb.ctx = tc;\n\n    apr_json_decode(&recipient1.header, (const char *) r1h, strlen(r1h), &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n    apr_json_decode(&recipient2.header, (const char *) r2h, strlen(r2h), &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n\n    recipient = apr_array_push(recipients);\n    *recipient = &recipient1;\n    recipient = apr_array_push(recipients);\n    *recipient = &recipient2;\n\n    apr_json_decode(&header, h, APR_JSON_VALUE_STRING, &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n    apr_json_decode(&protected_header, ph, APR_JSON_VALUE_STRING, &offset,\n            APR_JSON_FLAGS_WHITESPACE, 10, p);\n\n    ba = apr_bucket_alloc_create(p);\n    bb = apr_brigade_create(p, ba);\n\n    jdata = apr_jose_data_make(NULL, \"plain\", pl, sizeof(pl), p);\n    encryption = apr_jose_encryption_make(NULL, header, protected_header, p);\n    jose = apr_jose_jwe_json_make(NULL, NULL, recipients, encryption, jdata, p);\n\n    status = apr_jose_encode(bb, NULL, NULL, jose, &cb, p);\n\n    ABTS_INT_EQUAL(tc, APR_SUCCESS, status);\n\n    apr_brigade_flatten(bb, buf, &len);\n    ABTS_STR_NEQUAL(tc, expect, buf, len);\n}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1059, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * This file is part of libphidget21\n *\n * Copyright 2006-2015 Phidgets Inc <patrick@phidgets.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, see \n * <http://www.gnu.org/licenses/>\n */\n\n#ifndef __CPHIDGETTEXTLED\n#define __CPHIDGETTEXTLED\n#include \"cphidget.h\"\n\n/** \\defgroup phidtextled Phidget TextLED \n * \\ingroup phidgets\n * These calls are specific to the Phidget Text LED object. See your device's User Guide for more specific API details, technical information, and revision details. The User Guide, along with other resources, can be found on the product page for your device.\n * @{\n */\n\nDPHANDLE(TextLED)\nCHDRSTANDARD(TextLED)\n\n/**\n * Gets the number of rows supported by this display.\n * @param phid An attached phidget text led handle.\n * @param count The row count.\n */\nCHDRGET(TextLED,RowCount,int *count)\n/**\n * Gets the number of columns per supported by this display.\n * @param phid An attached phidget text led handle.\n * @param count The Column count.\n */\nCHDRGET(TextLED,ColumnCount,int *count)\n\n/**\n * Gets the last set brightness value.\n * @param phid An attached phidget text led handle.\n * @param brightness The brightness (0-100).", "func_src_after": "/*\n * This file is part of libphidget21\n *\n * Copyright 2006-2015 Phidgets Inc <<EMAIL>>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, see \n * <http://www.gnu.org/licenses/>\n */\n\n#ifndef __CPHIDGETTEXTLED\n#define __CPHIDGETTEXTLED\n#include \"cphidget.h\"\n\n/** \\defgroup phidtextled Phidget TextLED \n * \\ingroup phidgets\n * These calls are specific to the Phidget Text LED object. See your device's User Guide for more specific API details, technical information, and revision details. The User Guide, along with other resources, can be found on the product page for your device.\n * @{\n */\n\nDPHANDLE(TextLED)\nCHDRSTANDARD(TextLED)\n\n/**\n * Gets the number of rows supported by this display.\n * @param phid An attached phidget text led handle.\n * @param count The row count.\n */\nCHDRGET(TextLED,RowCount,int *count)\n/**\n * Gets the number of columns per supported by this display.\n * @param phid An attached phidget text led handle.\n * @param count The Column count.\n */\nCHDRGET(TextLED,ColumnCount,int *count)\n\n/**\n * Gets the last set brightness value.\n * @param phid An attached phidget text led handle.\n * @param brightness The brightness (0-100).", "line_changes": {"deleted": [{"line_no": 4, "char_start": 43, "char_end": 102, "line": " * Copyright 2006-2015 Phidgets Inc <patrick@phidgets.com>\n"}], "added": [{"line_no": 5, "char_start": 43, "char_end": 89, "line": " * Copyright 2006-2015 Phidgets Inc <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 43, "char_end": 102, "chars": " * Copyright 2006-2015 Phidgets Inc <patrick@phidgets.com>\n"}], "added": [{"char_start": 43, "char_end": 89, "chars": " * Copyright 2006-2015 Phidgets Inc <<EMAIL>>\n"}]}}
{"func_name": 1095, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n{\n  int *memptr;\n\n  memptr = malloc(size);\n  if (memptr == (int *) ((void *)0)) {\n    fprintf(stderr, \"Error:  Out of memory.\\n\");\n    exit(1);\n  }\n  return(memptr);\n}\n\n\n\n\nvoid trifree(memptr)\nint *memptr;\n\n\n{\n  free(memptr);\n}\n# 3135 \"triangle.c\"\nvoid internalerror()\n{\n  fflush(stdout);\n  fprintf(stderr, \"  Please report this bug to jrs@cs.berkeley.edu\\n\");\n  fprintf(stderr, \"  Include the message above, your input data set, and the exact\\n\");\n  fprintf(stderr, \"    command line you used to run Triangle.\\n\");\n  exit(1);\n}\n# 3154 \"triangle.c\"\nvoid parsecommandline(argc, argv, b)\nint argc;\nchar **argv;\nstruct behavior *b;\n\n\n{\n\n\n\n\n\n\n\n  int i, j, k;\n  char workstring[512];\n\n  b->poly = b->refine = b->quality = 0;", "func_src_after": "\n{\n  int *memptr;\n\n  memptr = malloc(size);\n  if (memptr == (int *) ((void *)0)) {\n    fprintf(stderr, \"Error:  Out of memory.\\n\");\n    exit(1);\n  }\n  return(memptr);\n}\n\n\n\n\nvoid trifree(memptr)\nint *memptr;\n\n\n{\n  free(memptr);\n}\n# 3135 \"triangle.c\"\nvoid internalerror()\n{\n  fflush(stdout);\n  fprintf(stderr, \"  Please report this bug to <EMAIL>\\n\");\n  fprintf(stderr, \"  Include the message above, your input data set, and the exact\\n\");\n  fprintf(stderr, \"    command line you used to run Triangle.\\n\");\n  exit(1);\n}\n# 3154 \"triangle.c\"\nvoid parsecommandline(argc, argv, b)\nint argc;\nchar **argv;\nstruct behavior *b;\n\n\n{\n\n\n\n\n\n\n\n  int i, j, k;\n  char workstring[512];\n\n  b->poly = b->refine = b->quality = 0;", "line_changes": {"deleted": [{"line_no": 27, "char_start": 290, "char_end": 362, "line": "  fprintf(stderr, \"  Please report this bug to jrs@cs.berkeley.edu\\n\");\n"}], "added": [{"line_no": 28, "char_start": 290, "char_end": 350, "line": "  fprintf(stderr, \"  Please report this bug to <EMAIL>\\n\");\n"}]}, "char_changes": {"deleted": [{"char_start": 290, "char_end": 362, "chars": "  fprintf(stderr, \"  Please report this bug to jrs@cs.berkeley.edu\\n\");\n"}], "added": [{"char_start": 290, "char_end": 350, "chars": "  fprintf(stderr, \"  Please report this bug to <EMAIL>\\n\");\n"}]}}
{"func_name": 1130, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* MikMod sound library (c) 1998-2014 Miodrag Vallat and others -\n * see AUTHORS file for a complete list.\n *\n * This library is free software; you can redistribute it and/or modify\n * it under the terms of the GNU Library General Public License as\n * published by the Free Software Foundation; either version 2 of\n * the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n * 02111-1307, USA.\n */\n\n/* Driver for output to native Amiga AHI device:\n * Written by Szilárd Biró <col.lawrence@gmail.com>, loosely based\n * on an old AOS4 version by Fredrik Wikstrom <fredrik@a500.org>\n */\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"mikmod_internals.h\"\n\n#ifdef DRV_AHI\n\n#ifdef __amigaos4__\n#define __USE_INLINE__\n#endif\n\n#include <devices/ahi.h>\n#include <proto/exec.h>\n\n#define BUFFERSIZE (4 << 10)\n\nstatic struct MsgPort *AHImp = NULL;\nstatic struct AHIRequest *AHIReq[2] = { NULL, NULL };\nstatic int active = 0;\nstatic SBYTE *AHIBuf[2] = { NULL, NULL };\nstatic BOOL signed8 = 0;\n\nstatic void closeLibs(void) { /* close ahi */\n\tif (AHIReq[1]) {\n\t\tif (!CheckIO((struct IORequest *) AHIReq[1])) {", "func_src_after": "/* MikMod sound library (c) 1998-2014 Miodrag Vallat and others -\n * see AUTHORS file for a complete list.\n *\n * This library is free software; you can redistribute it and/or modify\n * it under the terms of the GNU Library General Public License as\n * published by the Free Software Foundation; either version 2 of\n * the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n * 02111-1307, USA.\n */\n\n/* Driver for output to native Amiga AHI device:\n * Written by Szilárd Biró <<EMAIL>>, loosely based\n * on an old AOS4 version by Fredrik Wikstrom <<EMAIL>>\n */\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"mikmod_internals.h\"\n\n#ifdef DRV_AHI\n\n#ifdef __amigaos4__\n#define __USE_INLINE__\n#endif\n\n#include <devices/ahi.h>\n#include <proto/exec.h>\n\n#define BUFFERSIZE (4 << 10)\n\nstatic struct MsgPort *AHImp = NULL;\nstatic struct AHIRequest *AHIReq[2] = { NULL, NULL };\nstatic int active = 0;\nstatic SBYTE *AHIBuf[2] = { NULL, NULL };\nstatic BOOL signed8 = 0;\n\nstatic void closeLibs(void) { /* close ahi */\n\tif (AHIReq[1]) {\n\t\tif (!CheckIO((struct IORequest *) AHIReq[1])) {", "line_changes": {"deleted": [{"line_no": 21, "char_start": 905, "char_end": 972, "line": " * Written by Szilárd Biró <col.lawrence@gmail.com>, loosely based\n"}, {"line_no": 23, "char_start": 957, "char_end": 1022, "line": " * on an old AOS4 version by Fredrik Wikstrom <fredrik@a500.org>\n"}], "added": [{"line_no": 22, "char_start": 905, "char_end": 957, "line": " * Written by Szilárd Biró <<EMAIL>>, loosely based\n"}, {"line_no": 24, "char_start": 957, "char_end": 1013, "line": " * on an old AOS4 version by Fredrik Wikstrom <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 905, "char_end": 972, "chars": " * Written by Szilárd Biró <col.lawrence@gmail.com>, loosely based\n"}, {"char_start": 957, "char_end": 1022, "chars": " * on an old AOS4 version by Fredrik Wikstrom <fredrik@a500.org>\n"}], "added": [{"char_start": 905, "char_end": 957, "chars": " * Written by Szilárd Biró <<EMAIL>>, loosely based\n"}, {"char_start": 957, "char_end": 1013, "chars": " * on an old AOS4 version by Fredrik Wikstrom <<EMAIL>>\n"}]}}
{"func_name": 1132, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * UGENE - Integrated Bioinformatics Tools.\n * Copyright (C) 2008-2012 UniPro <ugene@unipro.ru>\n * http://ugene.unipro.ru\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n * MA 02110-1301, USA.\n */\n\n#ifndef _U2_REMOTE_QUERY_TASK_H_\n#define _U2_REMOTE_QUERY_TASK_H_\n\n#include <U2Core/Task.h>\n#include <U2Core/AnnotationData.h>\n#include <U2Core/DNATranslation.h>\n\n#include <U2Algorithm/CDSearchTaskFactory.h>\n\n#include \"HttpRequest.h\"\n\nnamespace U2 {\n\nclass DNATranslation;\nclass AnnotationTableObject;\n\nenum SendSelectionAlphabet\n{\n    SendSelectionAlphabet_Any,\n    SendSelectionAlphabet_Nucleo,\n    SendSelectionAlphabet_Amino\n};\n\nenum FilterResult {\n    FilterResultByAccession = 1,\n    FilterResultByDef = 2,\n    FilterResultById = 4\n};\n", "func_src_after": "/**\n * UGENE - Integrated Bioinformatics Tools.\n * Copyright (C) 2008-2012 UniPro <<EMAIL>>\n * http://ugene.unipro.ru\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n * MA 02110-1301, USA.\n */\n\n#ifndef _U2_REMOTE_QUERY_TASK_H_\n#define _U2_REMOTE_QUERY_TASK_H_\n\n#include <U2Core/Task.h>\n#include <U2Core/AnnotationData.h>\n#include <U2Core/DNATranslation.h>\n\n#include <U2Algorithm/CDSearchTaskFactory.h>\n\n#include \"HttpRequest.h\"\n\nnamespace U2 {\n\nclass DNATranslation;\nclass AnnotationTableObject;\n\nenum SendSelectionAlphabet\n{\n    SendSelectionAlphabet_Any,\n    SendSelectionAlphabet_Nucleo,\n    SendSelectionAlphabet_Amino\n};\n\nenum FilterResult {\n    FilterResultByAccession = 1,\n    FilterResultByDef = 2,\n    FilterResultById = 4\n};\n", "line_changes": {"deleted": [{"line_no": 3, "char_start": 48, "char_end": 100, "line": " * Copyright (C) 2008-2012 UniPro <ugene@unipro.ru>\n"}], "added": [{"line_no": 4, "char_start": 48, "char_end": 92, "line": " * Copyright (C) 2008-2012 UniPro <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 48, "char_end": 100, "chars": " * Copyright (C) 2008-2012 UniPro <ugene@unipro.ru>\n"}], "added": [{"char_start": 48, "char_end": 92, "chars": " * Copyright (C) 2008-2012 UniPro <<EMAIL>>\n"}]}}
{"func_name": 1154, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n** my_loop.c for colle2 in /home/pereni_j/Piscine-C-colles-Semaine_02/subject5/\n**\n** Made by joseph pereniguez\n** Login   <pereni_j@epitech.net>\n**\n** Started on  Tue Jun 16 10:37:49 2015 joseph pereniguez\n** Last update Tue Jun 16 16:27:48 2015 joseph pereniguez\n*/\n\n#include    <unistd.h>\n#include    \"my.h\"\n\nint     my_loopstar(char *str, int position_max, int position_word, int size)\n{\n  int   position_star;\n\n    position_star = 0;\n    while (position_star < position_max)\n    {\n        my_putstr(my_newstr(str, position_star, position_word, size));\n        usleep(50000);\n        my_putchar('\\r');\n        position_star = position_star + 1;\n    }\n    return (position_star);\n}\n\nint\t    my_mid_display(char *str, int *pos_max, int *pos_word, int size)\n{\n    int\tposition_star;\n\n    position_star = my_loopstar(str, *pos_max, *pos_word, size);\n    *pos_max = *pos_max + 1;\n    my_putstr(my_newstr(str, position_star, *pos_word, size));\n    usleep(50000);\n    my_putchar('\\r');\n    *pos_word = *pos_word + 1;\n    my_putstr(my_newstr(str, position_star - 1, *pos_word, size));\n    usleep(50000);\n    position_star = *pos_max - 3;\n    my_putchar('\\r');\n    return (position_star);\n}\n\nint\t    my_back_display(char *str, int pos_star, int position_word, int size)\n{\n    int\tposition_star;\n\n    position_star = pos_star;", "func_src_after": "/*\n** my_loop.c for colle2 in /home/pereni_j/Piscine-C-colles-Semaine_02/subject5/\n**\n** Made by joseph pereniguez\n** Login   <<EMAIL>>\n**\n** Started on  Tue Jun 16 10:37:49 2015 joseph pereniguez\n** Last update Tue Jun 16 16:27:48 2015 joseph pereniguez\n*/\n\n#include    <unistd.h>\n#include    \"my.h\"\n\nint     my_loopstar(char *str, int position_max, int position_word, int size)\n{\n  int   position_star;\n\n    position_star = 0;\n    while (position_star < position_max)\n    {\n        my_putstr(my_newstr(str, position_star, position_word, size));\n        usleep(50000);\n        my_putchar('\\r');\n        position_star = position_star + 1;\n    }\n    return (position_star);\n}\n\nint\t    my_mid_display(char *str, int *pos_max, int *pos_word, int size)\n{\n    int\tposition_star;\n\n    position_star = my_loopstar(str, *pos_max, *pos_word, size);\n    *pos_max = *pos_max + 1;\n    my_putstr(my_newstr(str, position_star, *pos_word, size));\n    usleep(50000);\n    my_putchar('\\r');\n    *pos_word = *pos_word + 1;\n    my_putstr(my_newstr(str, position_star - 1, *pos_word, size));\n    usleep(50000);\n    position_star = *pos_max - 3;\n    my_putchar('\\r');\n    return (position_star);\n}\n\nint\t    my_back_display(char *str, int pos_star, int position_word, int size)\n{\n    int\tposition_star;\n\n    position_star = pos_star;", "line_changes": {"deleted": [{"line_no": 5, "char_start": 115, "char_end": 149, "line": "** Login   <pereni_j@epitech.net>\n"}], "added": [{"line_no": 6, "char_start": 115, "char_end": 136, "line": "** Login   <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 115, "char_end": 149, "chars": "** Login   <pereni_j@epitech.net>\n"}], "added": [{"char_start": 115, "char_end": 136, "chars": "** Login   <<EMAIL>>\n"}]}}
{"func_name": 1157, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Author: Tero Kivinen <kivinen@iki.fi>\n *\n * Copyright (c) 2004 SFNT Finland Oy.\n */\n/*\n *        Program: sshdns\n *\n *        Creation          : 15:54 Apr  6 2004 kivinen\n *        Last Modification : 14:11 Feb 11 2005 kivinen\n *        Version           : 1.20\n *        \n *\n *        Description       : DNS top level. \n *\n */\n\n#ifndef SSHDNS_H\n#define SSHDNS_H\n\n/* Flags to be used by the DNS library. Each layer have separate bitmask for\n   flags, which they can use to allocate their own flags. Each layer can be\n   given the full flags bitmask, and they will ignore bits for the other\n   layers. */\n#define SSH_DNS_FLAGS_TRANSPORT_IMPL_MASK\t0x000000ff\n#define SSH_DNS_FLAGS_TRANSPORT_MASK\t\t0x0000ff00\n#define SSH_DNS_FLAGS_QUERY_MASK\t\t0x00ff0000\n/* Use TCP instead of UDP. */\n#define SSH_DNS_FLAGS_QUERY_USE_TCP\t\t0x00010000\n#define SSH_DNS_FLAGS_REQUEST_MASK\t\t0xff000000\n\n#include \"sshdnspacket.h\"\n#include \"sshdnstransport.h\"\n#include \"sshdnsnameserver.h\"\n#include \"sshdnsquery.h\"\n#include \"sshdnsrrsetcache.h\"\n#include \"sshdnsresolver.h\"\n\n/* Maximum size of the udp packet we can receive. */\n#define SSH_DNS_MAX_UDP_PACKET_SIZE 1600\n\n/* Maximum size of the udp packet allowed. */\n#define SSH_DNS_MAX_PACKET_SIZE 512\n\n/* Maximum length of the name. */\n#define SSH_DNS_MAX_NAME_LEN 255\n\n/* Convert error code to string. */\nconst char *ssh_dns_response_code_string(SshDNSResponseCode code);\n", "func_src_after": "/*\n * Author: Tero Kivinen <<EMAIL>>\n *\n * Copyright (c) 2004 SFNT Finland Oy.\n */\n/*\n *        Program: sshdns\n *\n *        Creation          : 15:54 Apr  6 2004 kivinen\n *        Last Modification : 14:11 Feb 11 2005 kivinen\n *        Version           : 1.20\n *        \n *\n *        Description       : DNS top level. \n *\n */\n\n#ifndef SSHDNS_H\n#define SSHDNS_H\n\n/* Flags to be used by the DNS library. Each layer have separate bitmask for\n   flags, which they can use to allocate their own flags. Each layer can be\n   given the full flags bitmask, and they will ignore bits for the other\n   layers. */\n#define SSH_DNS_FLAGS_TRANSPORT_IMPL_MASK\t0x000000ff\n#define SSH_DNS_FLAGS_TRANSPORT_MASK\t\t0x0000ff00\n#define SSH_DNS_FLAGS_QUERY_MASK\t\t0x00ff0000\n/* Use TCP instead of UDP. */\n#define SSH_DNS_FLAGS_QUERY_USE_TCP\t\t0x00010000\n#define SSH_DNS_FLAGS_REQUEST_MASK\t\t0xff000000\n\n#include \"sshdnspacket.h\"\n#include \"sshdnstransport.h\"\n#include \"sshdnsnameserver.h\"\n#include \"sshdnsquery.h\"\n#include \"sshdnsrrsetcache.h\"\n#include \"sshdnsresolver.h\"\n\n/* Maximum size of the udp packet we can receive. */\n#define SSH_DNS_MAX_UDP_PACKET_SIZE 1600\n\n/* Maximum size of the udp packet allowed. */\n#define SSH_DNS_MAX_PACKET_SIZE 512\n\n/* Maximum length of the name. */\n#define SSH_DNS_MAX_NAME_LEN 255\n\n/* Convert error code to string. */\nconst char *ssh_dns_response_code_string(SshDNSResponseCode code);\n", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 44, "line": " * Author: Tero Kivinen <kivinen@iki.fi>\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 37, "line": " * Author: Tero Kivinen <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 44, "chars": " * Author: Tero Kivinen <kivinen@iki.fi>\n"}], "added": [{"char_start": 3, "char_end": 37, "chars": " * Author: Tero Kivinen <<EMAIL>>\n"}]}}
{"func_name": 1175, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": " * ====================================================================\n *\n * This product includes cryptographic software written by Eric Young\n * (eay@cryptsoft.com).  This product includes software written by Tim\n * Hudson (tjh@cryptsoft.com).\n *\n */\n\n#ifdef OPENSSL_NO_CT\n# error \"CT disabled\"\n#endif\n\n#include <openssl/ct.h>\n#include <openssl/err.h>\n#include <openssl/evp.h>\n#include <openssl/tls1.h>\n#include <openssl/x509.h>\n\n#include \"ct_locl.h\"\n\nSCT *SCT_new(void)\n{\n    SCT *sct = OPENSSL_zalloc(sizeof(*sct));\n\n    if (sct == NULL) {\n        CTerr(CT_F_SCT_NEW, ERR_R_MALLOC_FAILURE);\n        return NULL;\n    }\n\n    sct->entry_type = CT_LOG_ENTRY_TYPE_NOT_SET;\n    sct->version = SCT_VERSION_NOT_SET;\n    return sct;\n}\n\nvoid SCT_free(SCT *sct)\n{\n    if (sct == NULL)\n        return;\n\n    OPENSSL_free(sct->log_id);\n    OPENSSL_free(sct->ext);\n    OPENSSL_free(sct->sig);\n    OPENSSL_free(sct->sct);\n    OPENSSL_free(sct);\n}\n\nint SCT_set_version(SCT *sct, sct_version_t version)\n{\n    if (version != SCT_VERSION_V1) {\n        CTerr(CT_F_SCT_SET_VERSION, CT_R_UNSUPPORTED_VERSION);", "func_src_after": " * ====================================================================\n *\n * This product includes cryptographic software written by Eric Young\n * (<EMAIL>).  This product includes software written by Tim\n * Hudson (<EMAIL>).\n *\n */\n\n#ifdef OPENSSL_NO_CT\n# error \"CT disabled\"\n#endif\n\n#include <openssl/ct.h>\n#include <openssl/err.h>\n#include <openssl/evp.h>\n#include <openssl/tls1.h>\n#include <openssl/x509.h>\n\n#include \"ct_locl.h\"\n\nSCT *SCT_new(void)\n{\n    SCT *sct = OPENSSL_zalloc(sizeof(*sct));\n\n    if (sct == NULL) {\n        CTerr(CT_F_SCT_NEW, ERR_R_MALLOC_FAILURE);\n        return NULL;\n    }\n\n    sct->entry_type = CT_LOG_ENTRY_TYPE_NOT_SET;\n    sct->version = SCT_VERSION_NOT_SET;\n    return sct;\n}\n\nvoid SCT_free(SCT *sct)\n{\n    if (sct == NULL)\n        return;\n\n    OPENSSL_free(sct->log_id);\n    OPENSSL_free(sct->ext);\n    OPENSSL_free(sct->sig);\n    OPENSSL_free(sct->sct);\n    OPENSSL_free(sct);\n}\n\nint SCT_set_version(SCT *sct, sct_version_t version)\n{\n    if (version != SCT_VERSION_V1) {\n        CTerr(CT_F_SCT_SET_VERSION, CT_R_UNSUPPORTED_VERSION);", "line_changes": {"deleted": [{"line_no": 4, "char_start": 145, "char_end": 216, "line": " * (eay@cryptsoft.com).  This product includes software written by Tim\n"}, {"line_no": 6, "char_start": 206, "char_end": 237, "line": " * Hudson (tjh@cryptsoft.com).\n"}], "added": [{"line_no": 5, "char_start": 145, "char_end": 206, "line": " * (<EMAIL>).  This product includes software written by Tim\n"}, {"line_no": 7, "char_start": 206, "char_end": 227, "line": " * Hudson (<EMAIL>).\n"}]}, "char_changes": {"deleted": [{"char_start": 145, "char_end": 216, "chars": " * (eay@cryptsoft.com).  This product includes software written by Tim\n"}, {"char_start": 206, "char_end": 237, "chars": " * Hudson (tjh@cryptsoft.com).\n"}], "added": [{"char_start": 145, "char_end": 206, "chars": " * (<EMAIL>).  This product includes software written by Tim\n"}, {"char_start": 206, "char_end": 227, "chars": " * Hudson (<EMAIL>).\n"}]}}
{"func_name": 1207, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*****************************************************************************\n * Copyright (C) 2013-2017 MulticoreWare, Inc\n *\n * Authors: Steve Borho <steve@borho.org>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02111, USA.\n *\n * This program is also available under a commercial proprietary license.\n * For more information, contact us at license @ x265.com.\n *****************************************************************************/\n#define _FILE_OFFSET_BITS 64\n#define _LARGEFILE_SOURCE\n#include \"yuv.h\"\n#include \"common.h\"\n\n#include <iostream>\n\n#define ENABLE_THREADING 1\n\n#if _WIN32\n#include <io.h>\n#include <fcntl.h>\n#if defined(_MSC_VER)\n#pragma warning(disable: 4996) // POSIX setmode and fileno deprecated\n#endif\n#endif\n\nusing namespace X265_NS;\nusing namespace std;\n\nYUVInput::YUVInput(InputFileInfo& info)\n{\n    for (int i = 0; i < QUEUE_SIZE; i++)\n        buf[i] = NULL;\n\n    depth = info.depth;\n    width = info.width;\n    height = info.height;", "func_src_after": "/*****************************************************************************\n * Copyright (C) 2013-2017 MulticoreWare, Inc\n *\n * Authors: Steve Borho <<EMAIL>>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02111, USA.\n *\n * This program is also available under a commercial proprietary license.\n * For more information, contact us at <EMAIL>.\n *****************************************************************************/\n#define _FILE_OFFSET_BITS 64\n#define _LARGEFILE_SOURCE\n#include \"yuv.h\"\n#include \"common.h\"\n\n#include <iostream>\n\n#define ENABLE_THREADING 1\n\n#if _WIN32\n#include <io.h>\n#include <fcntl.h>\n#if defined(_MSC_VER)\n#pragma warning(disable: 4996) // POSIX setmode and fileno deprecated\n#endif\n#endif\n\nusing namespace X265_NS;\nusing namespace std;\n\nYUVInput::YUVInput(InputFileInfo& info)\n{\n    for (int i = 0; i < QUEUE_SIZE; i++)\n        buf[i] = NULL;\n\n    depth = info.depth;\n    width = info.width;\n    height = info.height;", "line_changes": {"deleted": [{"line_no": 4, "char_start": 128, "char_end": 170, "line": " * Authors: Steve Borho <steve@borho.org>\n"}, {"line_no": 22, "char_start": 956, "char_end": 1015, "line": " * For more information, contact us at license @ x265.com.\n"}], "added": [{"line_no": 5, "char_start": 128, "char_end": 162, "line": " * Authors: Steve Borho <<EMAIL>>\n"}, {"line_no": 23, "char_start": 956, "char_end": 1004, "line": " * For more information, contact us at <EMAIL>.\n"}]}, "char_changes": {"deleted": [{"char_start": 128, "char_end": 170, "chars": " * Authors: Steve Borho <steve@borho.org>\n"}, {"char_start": 956, "char_end": 1015, "chars": " * For more information, contact us at license @ x265.com.\n"}], "added": [{"char_start": 128, "char_end": 162, "chars": " * Authors: Steve Borho <<EMAIL>>\n"}, {"char_start": 956, "char_end": 1004, "chars": " * For more information, contact us at <EMAIL>.\n"}]}}
{"func_name": 1239, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// C++ General Utility Library (mailto:cgul@zethes.com)\n// Copyright (C) 2012-2014, Joshua Brookover and Amber Thrall\n// All rights reserved.\n\n/** @file Thread.cpp\n */\n\n// Header\n#include \"Thread.hpp\"\n\n#if defined(CPP_HAS_WINTHREAD) || defined(CPP_HAS_STD_THREAD) || defined(CPP_HAS_PTHREAD)\n\n#if defined(CPP_HAS_WINTHREAD)\nstatic DWORD WINAPI __WinThread(LPVOID ptr)\n{\n    ((CGUL::Thread*)ptr)->Main();\n    return 0;\n}\n#elif defined(CPP_HAS_STD_THREAD)\nstatic void __StdThread(void* ptr)\n{\n    ((CGUL::Thread*)ptr)->Main();\n}\n#elif defined(CPP_HAS_PTHREAD)\nstatic void* __PThread(void* ptr)\n{\n    ((CGUL::Thread*)ptr)->Main();\n}\n#endif\n\n#if defined(CPP_HAS_PTHREAD)\n_CGUL_EXPORT CGUL::Thread::Thread() :\n    created(false)\n#else\n_CGUL_EXPORT CGUL::Thread::Thread()\n#endif\n{\n}\n\n_CGUL_EXPORT CGUL::Thread::~Thread()\n{\n#   if defined(CPP_HAS_WINTHREAD)\n    TerminateThread(thread, 0);\n#   elif defined(CPP_HAS_STD_THREAD)\n    delete thread;\n#   elif defined(CPP_HAS_PTHREAD)\n    if (created)\n    {\n        pthread_cancel(thread);\n    }", "func_src_after": "// C++ General Utility Library (mailto:<EMAIL>)\n// Copyright (C) 2012-2014, Joshua Brookover and Amber Thrall\n// All rights reserved.\n\n/** @file Thread.cpp\n */\n\n// Header\n#include \"Thread.hpp\"\n\n#if defined(CPP_HAS_WINTHREAD) || defined(CPP_HAS_STD_THREAD) || defined(CPP_HAS_PTHREAD)\n\n#if defined(CPP_HAS_WINTHREAD)\nstatic DWORD WINAPI __WinThread(LPVOID ptr)\n{\n    ((CGUL::Thread*)ptr)->Main();\n    return 0;\n}\n#elif defined(CPP_HAS_STD_THREAD)\nstatic void __StdThread(void* ptr)\n{\n    ((CGUL::Thread*)ptr)->Main();\n}\n#elif defined(CPP_HAS_PTHREAD)\nstatic void* __PThread(void* ptr)\n{\n    ((CGUL::Thread*)ptr)->Main();\n}\n#endif\n\n#if defined(CPP_HAS_PTHREAD)\n_CGUL_EXPORT CGUL::Thread::Thread() :\n    created(false)\n#else\n_CGUL_EXPORT CGUL::Thread::Thread()\n#endif\n{\n}\n\n_CGUL_EXPORT CGUL::Thread::~Thread()\n{\n#   if defined(CPP_HAS_WINTHREAD)\n    TerminateThread(thread, 0);\n#   elif defined(CPP_HAS_STD_THREAD)\n    delete thread;\n#   elif defined(CPP_HAS_PTHREAD)\n    if (created)\n    {\n        pthread_cancel(thread);\n    }", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 56, "line": "// C++ General Utility Library (mailto:cgul@zethes.com)\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 48, "line": "// C++ General Utility Library (mailto:<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 56, "chars": "// C++ General Utility Library (mailto:cgul@zethes.com)\n"}], "added": [{"char_start": 0, "char_end": 48, "chars": "// C++ General Utility Library (mailto:<EMAIL>)\n"}]}}
{"func_name": 1276, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n================================================================================\n    PROJECT:\n\n        John Eddy's Genetic Algorithms (JEGA)\n\n    CONTENTS:\n\n        Definition of class MaximizeObjectiveFunctionType.\n\n    NOTES:\n\n        See notes under Class Definition section of this file.\n\n    PROGRAMMERS:\n\n        John Eddy (jpeddy@sandia.gov) (JE)\n\n    ORGANIZATION:\n\n        Sandia National Laboratories\n\n    COPYRIGHT:\n\n        See the LICENSE file in the top level JEGA directory.\n\n    VERSION:\n\n        1.0.0\n\n    CHANGES:\n\n        Mon Sep 08 12:25:24 2003 - Original Version (JE)\n\n================================================================================\n*/\n\n\n\n\n/*\n================================================================================\nDocument This File\n================================================================================\n*/\n/** \\file\n * \\brief Contains the definition of the MaximizeObjectiveFunctionType class.\n */\n\n", "func_src_after": "/*\n================================================================================\n    PROJECT:\n\n        John Eddy's Genetic Algorithms (JEGA)\n\n    CONTENTS:\n\n        Definition of class MaximizeObjectiveFunctionType.\n\n    NOTES:\n\n        See notes under Class Definition section of this file.\n\n    PROGRAMMERS:\n\n        John Eddy (<EMAIL>) (JE)\n\n    ORGANIZATION:\n\n        Sandia National Laboratories\n\n    COPYRIGHT:\n\n        See the LICENSE file in the top level JEGA directory.\n\n    VERSION:\n\n        1.0.0\n\n    CHANGES:\n\n        Mon Sep 08 12:25:24 2003 - Original Version (JE)\n\n================================================================================\n*/\n\n\n\n\n/*\n================================================================================\nDocument This File\n================================================================================\n*/\n/** \\file\n * \\brief Contains the definition of the MaximizeObjectiveFunctionType class.\n */\n\n", "line_changes": {"deleted": [{"line_no": 17, "char_start": 314, "char_end": 357, "line": "        John Eddy (jpeddy@sandia.gov) (JE)\n"}], "added": [{"line_no": 18, "char_start": 314, "char_end": 347, "line": "        John Eddy (<EMAIL>) (JE)\n"}]}, "char_changes": {"deleted": [{"char_start": 314, "char_end": 357, "chars": "        John Eddy (jpeddy@sandia.gov) (JE)\n"}], "added": [{"char_start": 314, "char_end": 347, "chars": "        John Eddy (<EMAIL>) (JE)\n"}]}}
{"func_name": 1302, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\r\nAuthor: Gudakov Ramil Sergeevich a.k.a. Gauss\r\nГудаков Рамиль Сергеевич\r\nContacts: [ramil2085@mail.ru, ramil2085@gmail.com]\r\nSee for more information LICENSE.md.\r\n*/\r\n\r\n#include \"ResolverSelf_IP_v4.h\"\r\n#include \"SingletonManager.h\"\r\n#include <stdio.h>\r\n#include <boost/asio.hpp>\r\n#include <string.h>\r\n\r\n#ifndef WIN32\r\n#include <sys/types.h>\r\n#include <ifaddrs.h>\r\n#endif\r\n\r\n\r\nTResolverSelf_IP_v4::TVectorDesc* TResolverSelf_IP_v4::mVecDesc = nullptr;\r\n\r\nTResolverSelf_IP_v4::TResolverSelf_IP_v4()\r\n{\r\n  if ( mVecDesc == nullptr )\r\n    mVecDesc = SingletonManager()->Get<TVectorDesc>();\r\n  if ( mVecDesc->size() == 0 )\r\n    GetSelfIp4( mVecDesc );\r\n}\r\n//----------------------------------------------------------------------------------\r\nint TResolverSelf_IP_v4::GetCount()\r\n{\r\n  return mVecDesc->size();\r\n}\r\n//----------------------------------------------------------------------------------\r\nbool TResolverSelf_IP_v4::Get( std::string& sIP, int numNetWork )\r\n{\r\n  if ( numNetWork >= GetCount() )\r\n    return false;\r\n  sIP = mVecDesc->operator[]( numNetWork ).s;\r\n  return true;\r\n}\r\n//----------------------------------------------------------------------------------\r\nbool TResolverSelf_IP_v4::Get( unsigned int& numIP, int numNetWork )\r\n{\r\n  if ( numNetWork >= GetCount() )\r\n    return false;\r\n  numIP = mVecDesc->operator[]( numNetWork ).ip;\r\n  return true;\r\n}\r\n//----------------------------------------------------------------------------------\r", "func_src_after": "/*\r\nAuthor: Gudakov Ramil Sergeevich a.k.a. Gauss\r\nГудаков Рамиль Сергеевич\r\nContacts: [<EMAIL>, <EMAIL>]\r\nSee for more information LICENSE.md.\r\n*/\r\n\r\n#include \"ResolverSelf_IP_v4.h\"\r\n#include \"SingletonManager.h\"\r\n#include <stdio.h>\r\n#include <boost/asio.hpp>\r\n#include <string.h>\r\n\r\n#ifndef WIN32\r\n#include <sys/types.h>\r\n#include <ifaddrs.h>\r\n#endif\r\n\r\n\r\nTResolverSelf_IP_v4::TVectorDesc* TResolverSelf_IP_v4::mVecDesc = nullptr;\r\n\r\nTResolverSelf_IP_v4::TResolverSelf_IP_v4()\r\n{\r\n  if ( mVecDesc == nullptr )\r\n    mVecDesc = SingletonManager()->Get<TVectorDesc>();\r\n  if ( mVecDesc->size() == 0 )\r\n    GetSelfIp4( mVecDesc );\r\n}\r\n//----------------------------------------------------------------------------------\r\nint TResolverSelf_IP_v4::GetCount()\r\n{\r\n  return mVecDesc->size();\r\n}\r\n//----------------------------------------------------------------------------------\r\nbool TResolverSelf_IP_v4::Get( std::string& sIP, int numNetWork )\r\n{\r\n  if ( numNetWork >= GetCount() )\r\n    return false;\r\n  sIP = mVecDesc->operator[]( numNetWork ).s;\r\n  return true;\r\n}\r\n//----------------------------------------------------------------------------------\r\nbool TResolverSelf_IP_v4::Get( unsigned int& numIP, int numNetWork )\r\n{\r\n  if ( numNetWork >= GetCount() )\r\n    return false;\r\n  numIP = mVecDesc->operator[]( numNetWork ).ip;\r\n  return true;\r\n}\r\n//----------------------------------------------------------------------------------\r", "line_changes": {"deleted": [{"line_no": 4, "char_start": 77, "char_end": 129, "line": "Contacts: [ramil2085@mail.ru, ramil2085@gmail.com]\r\n"}], "added": [{"line_no": 5, "char_start": 77, "char_end": 107, "line": "Contacts: [<EMAIL>, <EMAIL>]\r\n"}]}, "char_changes": {"deleted": [{"char_start": 77, "char_end": 129, "chars": "Contacts: [ramil2085@mail.ru, ramil2085@gmail.com]\r\n"}], "added": [{"char_start": 77, "char_end": 107, "chars": "Contacts: [<EMAIL>, <EMAIL>]\r\n"}]}}
{"func_name": 1314, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright (c) 2013, Willow Garage, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the Willow Garage, Inc. nor the names of its\n *       contributors may be used to endorse or promote products derived from\n *       this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *      Author: Julius Kammerl (jkammerl@willowgarage.com)\n */\n\n#include \"openni2_camera/openni2_timer_filter.h\"\n#include <algorithm>\n\nnamespace openni2_wrapper\n   {\nOpenNI2TimerFilter::OpenNI2TimerFilter(std::size_t filter_len) : filter_len_(filter_len)\n   {\n   return;\n   }\n\nvoid OpenNI2TimerFilter::addSample(double sample)\n   {\n   buffer_.push_back(sample);\n   if (buffer_.size() > filter_len_)\n      buffer_.pop_front();\n\n   return;\n   }\n", "func_src_after": "/*\n * Copyright (c) 2013, Willow Garage, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the Willow Garage, Inc. nor the names of its\n *       contributors may be used to endorse or promote products derived from\n *       this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *      Author: Julius Kammerl (<EMAIL>)\n */\n\n#include \"openni2_camera/openni2_timer_filter.h\"\n#include <algorithm>\n\nnamespace openni2_wrapper\n   {\nOpenNI2TimerFilter::OpenNI2TimerFilter(std::size_t filter_len) : filter_len_(filter_len)\n   {\n   return;\n   }\n\nvoid OpenNI2TimerFilter::addSample(double sample)\n   {\n   buffer_.push_back(sample);\n   if (buffer_.size() > filter_len_)\n      buffer_.pop_front();\n\n   return;\n   }\n", "line_changes": {"deleted": [{"line_no": 29, "char_start": 1610, "char_end": 1669, "line": " *      Author: Julius Kammerl (jkammerl@willowgarage.com)\n"}], "added": [{"line_no": 30, "char_start": 1610, "char_end": 1651, "line": " *      Author: Julius Kammerl (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 1610, "char_end": 1669, "chars": " *      Author: Julius Kammerl (jkammerl@willowgarage.com)\n"}], "added": [{"char_start": 1610, "char_end": 1651, "chars": " *      Author: Julius Kammerl (<EMAIL>)\n"}]}}
{"func_name": 1321, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright (c) Peter Hillerström (skipifzero.com, peter@hstroem.se)\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//    claim that you wrote the original software. If you use this software\n//    in a product, an acknowledgment in the product documentation would be\n//    appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//    misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n#pragma once\n\n#include \"ZeroG.h\"\n#include \"d3d12/D3D12Common.hpp\"\n#include \"d3d12/D3D12ResourceTrackingState.hpp\"\n\n// Tracking functions\n// ------------------------------------------------------------------------------------------------\n\ninline void requireResourceStateBuffer(\n\tID3D12GraphicsCommandList& cmdList,\n\tZgTrackerCommandListState& cmdListState,\n\tZgBuffer* buffer,\n\tD3D12_RESOURCE_STATES requiredState)\n{\n\t// Try to get pending buffer state, create it if it does not exist\n\tPendingBufferState* pendingState = cmdListState.pendingBuffers.get(buffer);\n\tif (pendingState == nullptr) {\n\t\tpendingState = &cmdListState.pendingBuffers.put(buffer, PendingBufferState());\n\t\tpendingState->buffer = buffer;\n\t\tpendingState->neededInitialState = requiredState;\n\t\tpendingState->currentState = requiredState;\n\t}\n\n\t// Change state of buffer if necessary\n\tif (pendingState->currentState != requiredState) {\n\t\tCD3DX12_RESOURCE_BARRIER barrier = CD3DX12_RESOURCE_BARRIER::Transition(\n\t\t\tbuffer->resource.resource,\n\t\t\tpendingState->currentState,\n\t\t\trequiredState);\n\t\tcmdList.ResourceBarrier(1, &barrier);\n\t\tpendingState->currentState = requiredState;", "func_src_after": "// Copyright (c) Peter Hillerström (<EMAIL>)\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//    claim that you wrote the original software. If you use this software\n//    in a product, an acknowledgment in the product documentation would be\n//    appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//    misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n#pragma once\n\n#include \"ZeroG.h\"\n#include \"d3d12/D3D12Common.hpp\"\n#include \"d3d12/D3D12ResourceTrackingState.hpp\"\n\n// Tracking functions\n// ------------------------------------------------------------------------------------------------\n\ninline void requireResourceStateBuffer(\n\tID3D12GraphicsCommandList& cmdList,\n\tZgTrackerCommandListState& cmdListState,\n\tZgBuffer* buffer,\n\tD3D12_RESOURCE_STATES requiredState)\n{\n\t// Try to get pending buffer state, create it if it does not exist\n\tPendingBufferState* pendingState = cmdListState.pendingBuffers.get(buffer);\n\tif (pendingState == nullptr) {\n\t\tpendingState = &cmdListState.pendingBuffers.put(buffer, PendingBufferState());\n\t\tpendingState->buffer = buffer;\n\t\tpendingState->neededInitialState = requiredState;\n\t\tpendingState->currentState = requiredState;\n\t}\n\n\t// Change state of buffer if necessary\n\tif (pendingState->currentState != requiredState) {\n\t\tCD3DX12_RESOURCE_BARRIER barrier = CD3DX12_RESOURCE_BARRIER::Transition(\n\t\t\tbuffer->resource.resource,\n\t\t\tpendingState->currentState,\n\t\t\trequiredState);\n\t\tcmdList.ResourceBarrier(1, &barrier);\n\t\tpendingState->currentState = requiredState;", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 70, "line": "// Copyright (c) Peter Hillerström (skipifzero.com, peter@hstroem.se)\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 45, "line": "// Copyright (c) Peter Hillerström (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 70, "chars": "// Copyright (c) Peter Hillerström (skipifzero.com, peter@hstroem.se)\n"}], "added": [{"char_start": 0, "char_end": 45, "chars": "// Copyright (c) Peter Hillerström (<EMAIL>)\n"}]}}
{"func_name": 1329, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n  is::Engine (Infinity Solutions Engine)\n  Copyright (C) 2018-2022 Is Daouda <isdaouda.n@gmail.com>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/\n\n#include \"GameDisplay.h\"\n\nnamespace is\n{\nsf::Vector2f getMapPixelToCoords(GameDisplay const *scene, sf::Vector2i pixelPos)\n{\n    return scene->getRenderWindow().mapPixelToCoords(pixelPos, scene->getView());\n}\n\nGameDisplay::GameDisplay(GameSystemExtended &gameSysExt, sf::Color bgColor):\n    m_isClosed(false),\n    m_window(gameSysExt.m_window),\n    m_view(sf::Vector2f(is::GameConfig::VIEW_WIDTH / 2.f, is::GameConfig::VIEW_HEIGHT / 2.f), sf::Vector2f(is::GameConfig::VIEW_WIDTH, is::GameConfig::VIEW_HEIGHT)),\n    m_surface(gameSysExt.m_window),\n    m_gameSysExt(gameSysExt),\n    m_timeVibrateDuration(40),\n    m_optionIndex(0),\n    m_waitTime(0),\n    m_msgWaitTime(0),\n    m_sceneWidth(is::GameConfig::VIEW_WIDTH),\n    m_sceneHeight(is::GameConfig::VIEW_HEIGHT),\n    DELTA_TIME(0.f),\n    m_viewW(is::GameConfig::VIEW_WIDTH),\n    m_viewH(is::GameConfig::VIEW_HEIGHT),\n    m_viewX(m_viewW / 2.f),\n    m_viewY(m_viewH / 2.f),\n    m_sprButtonSelectScale(1.f),\n    m_isRunning(true),\n    m_windowIsActive(true),", "func_src_after": "/*\n  is::Engine (Infinity Solutions Engine)\n  Copyright (C) 2018-2022 Is Daouda <<EMAIL>>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/\n\n#include \"GameDisplay.h\"\n\nnamespace is\n{\nsf::Vector2f getMapPixelToCoords(GameDisplay const *scene, sf::Vector2i pixelPos)\n{\n    return scene->getRenderWindow().mapPixelToCoords(pixelPos, scene->getView());\n}\n\nGameDisplay::GameDisplay(GameSystemExtended &gameSysExt, sf::Color bgColor):\n    m_isClosed(false),\n    m_window(gameSysExt.m_window),\n    m_view(sf::Vector2f(is::GameConfig::VIEW_WIDTH / 2.f, is::GameConfig::VIEW_HEIGHT / 2.f), sf::Vector2f(is::GameConfig::VIEW_WIDTH, is::GameConfig::VIEW_HEIGHT)),\n    m_surface(gameSysExt.m_window),\n    m_gameSysExt(gameSysExt),\n    m_timeVibrateDuration(40),\n    m_optionIndex(0),\n    m_waitTime(0),\n    m_msgWaitTime(0),\n    m_sceneWidth(is::GameConfig::VIEW_WIDTH),\n    m_sceneHeight(is::GameConfig::VIEW_HEIGHT),\n    DELTA_TIME(0.f),\n    m_viewW(is::GameConfig::VIEW_WIDTH),\n    m_viewH(is::GameConfig::VIEW_HEIGHT),\n    m_viewX(m_viewW / 2.f),\n    m_viewY(m_viewH / 2.f),\n    m_sprButtonSelectScale(1.f),\n    m_isRunning(true),\n    m_windowIsActive(true),", "line_changes": {"deleted": [{"line_no": 3, "char_start": 44, "char_end": 103, "line": "  Copyright (C) 2018-2022 Is Daouda <isdaouda.n@gmail.com>\n"}], "added": [{"line_no": 4, "char_start": 44, "char_end": 90, "line": "  Copyright (C) 2018-2022 Is Daouda <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 44, "char_end": 103, "chars": "  Copyright (C) 2018-2022 Is Daouda <isdaouda.n@gmail.com>\n"}], "added": [{"char_start": 44, "char_end": 90, "chars": "  Copyright (C) 2018-2022 Is Daouda <<EMAIL>>\n"}]}}
{"func_name": 1336, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright (C) 1999 Lars Knoll (knoll@kde.org)\n *           (C) 1999 Antti Koivisto (koivisto@kde.org)\n *           (C) 2001 Dirk Mueller (mueller@kde.org)\n * Copyright (C) 2004, 2005, 2006, 2010 Apple Inc. All rights reserved.\n *           (C) 2006 Alexey Proskuryakov (ap@nypop.com)\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Library General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public License\n * along with this library; see the file COPYING.LIB.  If not, write to\n * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n *\n */\n\n#include \"config.h\"\n#include \"HTMLFieldSetElement.h\"\n\n#include \"ElementIterator.h\"\n#include \"GenericCachedHTMLCollection.h\"\n#include \"HTMLFormControlsCollection.h\"\n#include \"HTMLLegendElement.h\"\n#include \"HTMLNames.h\"\n#include \"HTMLObjectElement.h\"\n#include \"NodeRareData.h\"\n#include \"RenderElement.h\"\n#include \"ScriptDisallowedScope.h\"\n#include <wtf/IsoMallocInlines.h>\n#include <wtf/StdLibExtras.h>\n\nnamespace WebCore {\n\nWTF_MAKE_ISO_ALLOCATED_IMPL(HTMLFieldSetElement);\n\nusing namespace HTMLNames;\n\ninline HTMLFieldSetElement::HTMLFieldSetElement(const QualifiedName& tagName, Document& document, HTMLFormElement* form)\n    : HTMLFormControlElement(tagName, document, form)\n{\n    ASSERT(hasTagName(fieldsetTag));\n}", "func_src_after": "/*\n * Copyright (C) 1999 Lars Knoll (<EMAIL>)\n *           (C) 1999 Antti Koivisto (<EMAIL>)\n *           (C) 2001 Dirk Mueller <EMAIL>)\n * Copyright (C) 2004, 2005, 2006, 2010 Apple Inc. All rights reserved.\n *           (C) 2006 Alexey Proskuryakov (<EMAIL>)\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Library General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public License\n * along with this library; see the file COPYING.LIB.  If not, write to\n * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n *\n */\n\n#include \"config.h\"\n#include \"HTMLFieldSetElement.h\"\n\n#include \"ElementIterator.h\"\n#include \"GenericCachedHTMLCollection.h\"\n#include \"HTMLFormControlsCollection.h\"\n#include \"HTMLLegendElement.h\"\n#include \"HTMLNames.h\"\n#include \"HTMLObjectElement.h\"\n#include \"NodeRareData.h\"\n#include \"RenderElement.h\"\n#include \"ScriptDisallowedScope.h\"\n#include <wtf/IsoMallocInlines.h>\n#include <wtf/StdLibExtras.h>\n\nnamespace WebCore {\n\nWTF_MAKE_ISO_ALLOCATED_IMPL(HTMLFieldSetElement);\n\nusing namespace HTMLNames;\n\ninline HTMLFieldSetElement::HTMLFieldSetElement(const QualifiedName& tagName, Document& document, HTMLFormElement* form)\n    : HTMLFormControlElement(tagName, document, form)\n{\n    ASSERT(hasTagName(fieldsetTag));\n}", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 52, "line": " * Copyright (C) 1999 Lars Knoll (knoll@kde.org)\n"}, {"line_no": 4, "char_start": 46, "char_end": 102, "line": " *           (C) 1999 Antti Koivisto (koivisto@kde.org)\n"}, {"line_no": 6, "char_start": 93, "char_end": 146, "line": " *           (C) 2001 Dirk Mueller (mueller@kde.org)\n"}, {"line_no": 9, "char_start": 209, "char_end": 266, "line": " *           (C) 2006 Alexey Proskuryakov (ap@nypop.com)\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 46, "line": " * Copyright (C) 1999 Lars Knoll (<EMAIL>)\n"}, {"line_no": 5, "char_start": 46, "char_end": 93, "line": " *           (C) 1999 Antti Koivisto (<EMAIL>)\n"}, {"line_no": 7, "char_start": 93, "char_end": 137, "line": " *           (C) 2001 Dirk Mueller <EMAIL>)\n"}, {"line_no": 10, "char_start": 209, "char_end": 261, "line": " *           (C) 2006 Alexey Proskuryakov (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 52, "chars": " * Copyright (C) 1999 Lars Knoll (knoll@kde.org)\n"}, {"char_start": 46, "char_end": 102, "chars": " *           (C) 1999 Antti Koivisto (koivisto@kde.org)\n"}, {"char_start": 93, "char_end": 146, "chars": " *           (C) 2001 Dirk Mueller (mueller@kde.org)\n"}, {"char_start": 209, "char_end": 266, "chars": " *           (C) 2006 Alexey Proskuryakov (ap@nypop.com)\n"}], "added": [{"char_start": 3, "char_end": 46, "chars": " * Copyright (C) 1999 Lars Knoll (<EMAIL>)\n"}, {"char_start": 46, "char_end": 93, "chars": " *           (C) 1999 Antti Koivisto (<EMAIL>)\n"}, {"char_start": 93, "char_end": 137, "chars": " *           (C) 2001 Dirk Mueller <EMAIL>)\n"}, {"char_start": 209, "char_end": 261, "chars": " *           (C) 2006 Alexey Proskuryakov (<EMAIL>)\n"}]}}
{"func_name": 1348, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//  cic\n//\n//  cic - Copyright (C) 2017-2018 Stanislav Demyanovich <mezozoysky@gmail.com>\n//\n//  This software is provided 'as-is', without any express or\n//  implied warranty. In no event will the authors be held\n//  liable for any damages arising from the use of this software.\n//\n//  Permission is granted to anyone to use this software for any purpose,\n//  including commercial applications, and to alter it and redistribute\n//  it freely, subject to the following restrictions:\n//\n//  1.  The origin of this software must not be misrepresented;\n//      you must not claim that you wrote the original software.\n//      If you use this software in a product, an acknowledgment\n//      in the product documentation would be appreciated but\n//      is not required.\n//\n//  2.  Altered source versions must be plainly marked as such,\n//      and must not be misrepresented as being the original software.\n//\n//  3.  This notice may not be removed or altered from any\n//      source distribution.\n\n\n/// \\file\n/// \\brief Target class provides perform configuration for Plan-based classes\n/// \\author Stanislav Demyanovich <mezozoysky@gmail.com>\n/// \\date 2018\n/// \\copyright cic is released under the terms of zlib/png license\n\n\n#ifndef CIC_PLAN__TARGET_HPP\n#define CIC_PLAN__TARGET_HPP\n\n#include \"PerformConfig.hpp\"\n#include <string>\n#include <vector>\n\n\nnamespace cic\n{\nnamespace plan\n{\n\nclass Target : public PerformConfig\n{\n    CLASSINFO( Target )\n\npublic:", "func_src_after": "//  cic\n//\n//  cic - Copyright (C) 2017-2018 Stanislav Demyanovich <<EMAIL>\n//\n//  This software is provided 'as-is', without any express or\n//  implied warranty. In no event will the authors be held\n//  liable for any damages arising from the use of this software.\n//\n//  Permission is granted to anyone to use this software for any purpose,\n//  including commercial applications, and to alter it and redistribute\n//  it freely, subject to the following restrictions:\n//\n//  1.  The origin of this software must not be misrepresented;\n//      you must not claim that you wrote the original software.\n//      If you use this software in a product, an acknowledgment\n//      in the product documentation would be appreciated but\n//      is not required.\n//\n//  2.  Altered source versions must be plainly marked as such,\n//      and must not be misrepresented as being the original software.\n//\n//  3.  This notice may not be removed or altered from any\n//      source distribution.\n\n\n/// \\file\n/// \\brief Target class provides perform configuration for Plan-based classes\n/// \\author Stanislav Demyanovich <<EMAIL>>\n/// \\date 2018\n/// \\copyright cic is released under the terms of zlib/png license\n\n\n#ifndef CIC_PLAN__TARGET_HPP\n#define CIC_PLAN__TARGET_HPP\n\n#include \"PerformConfig.hpp\"\n#include <string>\n#include <vector>\n\n\nnamespace cic\n{\nnamespace plan\n{\n\nclass Target : public PerformConfig\n{\n    CLASSINFO( Target )\n\npublic:", "line_changes": {"deleted": [{"line_no": 3, "char_start": 11, "char_end": 90, "line": "//  cic - Copyright (C) 2017-2018 Stanislav Demyanovich <mezozoysky@gmail.com>\n"}, {"line_no": 29, "char_start": 1072, "char_end": 1129, "line": "/// \\author Stanislav Demyanovich <mezozoysky@gmail.com>\n"}], "added": [{"line_no": 4, "char_start": 11, "char_end": 76, "line": "//  cic - Copyright (C) 2017-2018 Stanislav Demyanovich <<EMAIL>\n"}, {"line_no": 30, "char_start": 1072, "char_end": 1116, "line": "/// \\author Stanislav Demyanovich <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 11, "char_end": 90, "chars": "//  cic - Copyright (C) 2017-2018 Stanislav Demyanovich <mezozoysky@gmail.com>\n"}, {"char_start": 1072, "char_end": 1129, "chars": "/// \\author Stanislav Demyanovich <mezozoysky@gmail.com>\n"}], "added": [{"char_start": 11, "char_end": 76, "chars": "//  cic - Copyright (C) 2017-2018 Stanislav Demyanovich <<EMAIL>\n"}, {"char_start": 1072, "char_end": 1116, "chars": "/// \\author Stanislav Demyanovich <<EMAIL>>\n"}]}}
{"func_name": 1387, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#include <BridgeUdp.h>\n\nconstexpr const uint8_t MESSAGE_PAYLOAD_BUFFER = 255;\nusing UdpReceiverSerial_t = UdpReceiverSerial<MESSAGE_PAYLOAD_BUFFER>;\nusing BridgeUdp_t = BridgeUdp<MESSAGE_PAYLOAD_BUFFER>;\nusing SerialReaderUdp_t = SerialReaderUdp<MESSAGE_PAYLOAD_BUFFER>;\n\n// multicast bridge joined network 239.0.0.1 with port 8622\nBridgeUdp_t bridge{ { 239, 0, 0, 1 }, 8622, true };\n\n// receives from bridge, sends to serial\nUdpReceiverSerial_t datagram_receiver_serial;\n\n// reads from serial, sends to bridge\nSerialReaderUdp_t serial_reader;\n\nbool isServerMode(){ /* ... */ };\nbool isWifiConnected(){ /* ... */ };\n\nvoid setup()\n{\n    if(isServerMode())\n    {\n        WiFi.mode(WIFI_AP);\n        WiFi.softAP(\"udp-bridge\", \"\");\n    }\n    else\n    {\n        WiFi.mode(WIFI_STA);\n        WiFi.begin(\"udp-bridge\", \"\");\n    }\n\n    while(!isWifiConnected()) {}\n\n    datagram_receiver_serial.setup();\n\n    bridge.setup(); // call each time wifi is reconnected\n    bridge.setDatagramReceiver(&datagram_receiver_serial);\n\n    serial_reader.setup();\n    serial_reader.setDatagramReceiver(&bridge);\n}\n\nvoid loop()\n{\n    // read udp -> write to serial\n    bridge.process();\n\n    // read serial -> send UDP\n    serial_reader.process();", "func_src_after": "#include <BridgeUdp.h>\n\nconstexpr const uint8_t MESSAGE_PAYLOAD_BUFFER = 255;\nusing UdpReceiverSerial_t = UdpReceiverSerial<MESSAGE_PAYLOAD_BUFFER>;\nusing BridgeUdp_t = BridgeUdp<MESSAGE_PAYLOAD_BUFFER>;\nusing SerialReaderUdp_t = SerialReaderUdp<MESSAGE_PAYLOAD_BUFFER>;\n\n// multicast bridge joined network <IP-Address> with port 8622\nBridgeUdp_t bridge{ { <IP-Address> }, 8622, true };\n\n// receives from bridge, sends to serial\nUdpReceiverSerial_t datagram_receiver_serial;\n\n// reads from serial, sends to bridge\nSerialReaderUdp_t serial_reader;\n\nbool isServerMode(){ /* ... */ };\nbool isWifiConnected(){ /* ... */ };\n\nvoid setup()\n{\n    if(isServerMode())\n    {\n        WiFi.mode(WIFI_AP);\n        WiFi.softAP(\"udp-bridge\", \"\");\n    }\n    else\n    {\n        WiFi.mode(WIFI_STA);\n        WiFi.begin(\"udp-bridge\", \"\");\n    }\n\n    while(!isWifiConnected()) {}\n\n    datagram_receiver_serial.setup();\n\n    bridge.setup(); // call each time wifi is reconnected\n    bridge.setDatagramReceiver(&datagram_receiver_serial);\n\n    serial_reader.setup();\n    serial_reader.setDatagramReceiver(&bridge);\n}\n\nvoid loop()\n{\n    // read udp -> write to serial\n    bridge.process();\n\n    // read serial -> send UDP\n    serial_reader.process();", "line_changes": {"deleted": [{"line_no": 8, "char_start": 272, "char_end": 332, "line": "// multicast bridge joined network 239.0.0.1 with port 8622\n"}, {"line_no": 10, "char_start": 335, "char_end": 387, "line": "BridgeUdp_t bridge{ { 239, 0, 0, 1 }, 8622, true };\n"}], "added": [{"line_no": 9, "char_start": 272, "char_end": 335, "line": "// multicast bridge joined network <IP-Address> with port 8622\n"}, {"line_no": 11, "char_start": 335, "char_end": 387, "line": "BridgeUdp_t bridge{ { <IP-Address> }, 8622, true };\n"}]}, "char_changes": {"deleted": [{"char_start": 272, "char_end": 332, "chars": "// multicast bridge joined network 239.0.0.1 with port 8622\n"}, {"char_start": 335, "char_end": 387, "chars": "BridgeUdp_t bridge{ { 239, 0, 0, 1 }, 8622, true };\n"}], "added": [{"char_start": 272, "char_end": 335, "chars": "// multicast bridge joined network <IP-Address> with port 8622\n"}, {"char_start": 335, "char_end": 387, "chars": "BridgeUdp_t bridge{ { <IP-Address> }, 8622, true };\n"}]}}
{"func_name": 1409, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        consensus.nBudgetFeeConfirmations = 3;      \t\t\t// (only 8-blocks window for finalization on regtest)\n        consensus.nCoinbaseMaturity = 100;\n        consensus.nFutureTimeDriftPoW = 7200;\n        consensus.nFutureTimeDriftPoS = 180;\n        consensus.nMasternodeCountDrift = 4;        \t\t\t// num of MN we allow the see-saw payments to be off by\n        consensus.nMaxMoneyOut = 43199500 * COIN;\n        consensus.nPoolMaxTransactions = 2;\n        consensus.nProposalEstablishmentTime = 60 * 5;  \t\t// at least 5 min old to make it into a budget\n        consensus.nStakeMinAge = 0;\n        consensus.nStakeMinDepth = 2;\n        consensus.nTargetTimespan = 40 * 60;\t\t\t\t\t// 40 minutes\n        consensus.nTargetTimespanV2 = 30 * 60;\t\t\t\t\t// 30 minutes\n        consensus.nTargetSpacing = 1 * 60;\t\t\t\t\t\t// 1 minute\n        consensus.nTimeSlotLength = 15;\t\t\t\t\t\t\t// 15 seconds\n\n        /* Spork Key for RegTest:\n        WIF private key: 932HEevBSujW2ud7RfB1YF91AFygbBRQj3de3LyaCRqNzKKgWXi\n        private key hex: bd4960dcbd9e7f2223f24e7164ecb6f1fe96fc3a416f5d3a830ba5720c84b8ca\n        Address: yCvUVd72w7xpimf981m114FSFbmAmne7j9\n        */\n        consensus.strSporkPubKey = \"043969b1b0e6f327de37f297a015d37e2235eaaeeb3933deecd8162c075cee0207b13537618bde640879606001a8136091c62ec272dd0133424a178704e6e75bb7\";\n        consensus.strSporkPubKeyOld = \"\";\n        consensus.nTime_EnforceNewSporkKey = 0;\n        consensus.nTime_RejectOldSporkKey = 0;\n\n        // height based activations\n        consensus.height_last_ZC_AccumCheckpoint = 310;     // no checkpoints on regtest\n        consensus.height_last_ZC_WrappedSerials = -1;\n        consensus.height_start_InvalidUTXOsCheck = 999999999;\n        consensus.height_start_ZC_InvalidSerials = 999999999;\n        consensus.height_start_ZC_SerialRangeCheck = 300;\n        consensus.height_ZC_RecalcAccumulators = 999999999;\n\n        // Zerocoin-related params\n        consensus.ZC_Modulus = \"25195908475657893494027183240048398571429282126204032027777137836043662020707595556264018525880784\"\n                \"4069182906412495150821892985591491761845028084891200728449926873928072877767359714183472702618963750149718246911\"\n                \"6507761337985909570009733045974880842840179742910064245869181719511874612151517265463228221686998754918242243363\"\n                \"7259085141865462043576798423387184774447920739934236584823824281198163815010674810451660377306056201619676256133\"\n                \"8441436038339044149526344321901146575444541784240209246165157233507787077498171257724679629263863563732899121548\"\n                \"31438167899885040445364023527381951378636564391212010397122822120720357\";\n        consensus.ZC_MaxPublicSpendsPerTx = 637;    // Assume about 220 bytes each input\n        consensus.ZC_MaxSpendsPerTx = 7;            // Assume about 20kb each input\n        consensus.ZC_MinMintConfirmations = 10;\n        consensus.ZC_MinMintFee = 1 * CENT;\n        consensus.ZC_MinStakeDepth = 10;\n        consensus.ZC_TimeStart = 0;                 // not implemented on regtest\n        consensus.ZC_WrappedSerialsSupply = 0;\t\t// WrappedSerials only on main net\n\n        // Network upgrades\n        consensus.vUpgrades[Consensus::BASE_NETWORK].nActivationHeight =", "func_src_after": "        consensus.nBudgetFeeConfirmations = 3;      \t\t\t// (only 8-blocks window for finalization on regtest)\n        consensus.nCoinbaseMaturity = 100;\n        consensus.nFutureTimeDriftPoW = 7200;\n        consensus.nFutureTimeDriftPoS = 180;\n        consensus.nMasternodeCountDrift = 4;        \t\t\t// num of MN we allow the see-saw payments to be off by\n        consensus.nMaxMoneyOut = 43199500 * COIN;\n        consensus.nPoolMaxTransactions = 2;\n        consensus.nProposalEstablishmentTime = 60 * 5;  \t\t// at least 5 min old to make it into a budget\n        consensus.nStakeMinAge = 0;\n        consensus.nStakeMinDepth = 2;\n        consensus.nTargetTimespan = 40 * 60;\t\t\t\t\t// 40 minutes\n        consensus.nTargetTimespanV2 = 30 * 60;\t\t\t\t\t// 30 minutes\n        consensus.nTargetSpacing = 1 * 60;\t\t\t\t\t\t// 1 minute\n        consensus.nTimeSlotLength = 15;\t\t\t\t\t\t\t// 15 seconds\n\n        /* Spork Key for RegTest:\n        WIF private key: 932HEevBSujW2ud7RfB1YF91AFygbBRQj3de3LyaCRqNzKKgWXi\n        private key hex: bd4960dcbd9e7f2223f24e7164ecb6f1fe96fc3a416f5d3a830ba5720c84b8ca\n        Address: yCvUVd72w7xpimf981m114FSFbmAmne7j9\n        */\n        consensus.strSporkPubKey = \"043969b1b0e6f327de37f297a015d37e2235eaaeeb3933deecd8162c075cee0207b13537618bde640879606001a8136091c62ec272dd0133424a178704e6e75bb7\";\n        consensus.strSporkPubKeyOld = \"\";\n        consensus.nTime_EnforceNewSporkKey = 0;\n        consensus.nTime_RejectOldSporkKey = 0;\n\n        // height based activations\n        consensus.height_last_ZC_AccumCheckpoint = 310;     // no checkpoints on regtest\n        consensus.height_last_ZC_WrappedSerials = -1;\n        consensus.height_start_InvalidUTXOsCheck = 999999999;\n        consensus.height_start_ZC_InvalidSerials = 999999999;\n        consensus.height_start_ZC_SerialRangeCheck = 300;\n        consensus.height_ZC_RecalcAccumulators = 999999999;\n\n        // Zerocoin-related params\n        consensus.ZC_Modulus = \"25195908475657893494027183240048398571429282126204032027777137836043662020707595556264018525880784\"\n                \"4069182906412495150821892985591491761845028084891200728449926873928072877767359714183472702618963750149718246911\"\n                \"6507761337985909570009733045974880842840179742910064245869181719511874612151517265463228221686998754918242243363\"\n                \"7259085141865462043576798423387184774447920739934236584823824281198163815010674810451660377306056201619676256133\"\n                \"8441436038339044149526344321901146575444541784240209246165157233507787077498171257724679629263863563732899121548\"\n                \"31438167899885040445364023527381951378636564391212010397122822120720357\";\n        consensus.ZC_MaxPublicSpendsPerTx = 637;    // Assume about 220 bytes each input\n        consensus.ZC_MaxSpendsPerTx = 7;            // Assume about 20kb each input\n        consensus.ZC_MinMintConfirmations = 10;\n        consensus.ZC_MinMintFee = 1 * CENT;\n        consensus.ZC_MinStakeDepth = 10;\n        consensus.ZC_TimeStart = 0;                 // not implemented on regtest\n        consensus.ZC_WrappedSerialsSupply = 0;\t\t// WrappedSerials only on main net\n\n        // Network upgrades\n        consensus.vUpgrades[Consensus::BASE_NETWORK].nActivationHeight =", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1413, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//---------------------------------------------------------\n// Copyright 2015 Ontario Institute for Cancer Research\n// Written by Jared Simpson (jared.simpson@oicr.on.ca)\n//---------------------------------------------------------\n//\n// nanopolish_pore_model_set -- A class that maintains\n// a collection of pore models that SquiggleReads\n// can load during initialization.\n//\n#include \"nanopolish_pore_model_set.h\"\n#include \"nanopolish_builtin_models.h\"\n\n//\nPoreModelSet::PoreModelSet()\n{\n    // Copy the built-in models into the map\n    for(auto p : builtin_models) {\n        register_model(p);\n    }\n}\n\n//\nPoreModelSet::~PoreModelSet()\n{\n    for(auto& kv : model_map) {\n        delete kv.second;\n        kv.second = NULL;\n    }\n}\n\n//\nstd::vector<const PoreModel*> PoreModelSet::initialize(const std::string& fofn_filename)\n{\n    // grab singleton instance\n    PoreModelSet& model_set = getInstance();\n\n    std::vector<const PoreModel*> out;\n    \n    // open the fofn file reader\n    std::ifstream fofn_reader(fofn_filename);\n    if(!fofn_reader.is_open()) {\n        fprintf(stderr, \"Error: could not read %s\\n\", fofn_filename.c_str());\n        exit(EXIT_FAILURE);\n    }\n\n    std::string model_filename;\n    while(getline(fofn_reader, model_filename)) {\n\n        // read the model\n        PoreModel p(model_filename);", "func_src_after": "//---------------------------------------------------------\n// Copyright 2015 Ontario Institute for Cancer Research\n// Written by Jared Simpson (<EMAIL>)\n//---------------------------------------------------------\n//\n// nanopolish_pore_model_set -- A class that maintains\n// a collection of pore models that SquiggleReads\n// can load during initialization.\n//\n#include \"nanopolish_pore_model_set.h\"\n#include \"nanopolish_builtin_models.h\"\n\n//\nPoreModelSet::PoreModelSet()\n{\n    // Copy the built-in models into the map\n    for(auto p : builtin_models) {\n        register_model(p);\n    }\n}\n\n//\nPoreModelSet::~PoreModelSet()\n{\n    for(auto& kv : model_map) {\n        delete kv.second;\n        kv.second = NULL;\n    }\n}\n\n//\nstd::vector<const PoreModel*> PoreModelSet::initialize(const std::string& fofn_filename)\n{\n    // grab singleton instance\n    PoreModelSet& model_set = getInstance();\n\n    std::vector<const PoreModel*> out;\n    \n    // open the fofn file reader\n    std::ifstream fofn_reader(fofn_filename);\n    if(!fofn_reader.is_open()) {\n        fprintf(stderr, \"Error: could not read %s\\n\", fofn_filename.c_str());\n        exit(EXIT_FAILURE);\n    }\n\n    std::string model_filename;\n    while(getline(fofn_reader, model_filename)) {\n\n        // read the model\n        PoreModel p(model_filename);", "line_changes": {"deleted": [{"line_no": 3, "char_start": 116, "char_end": 171, "line": "// Written by Jared Simpson (jared.simpson@oicr.on.ca)\n"}], "added": [{"line_no": 4, "char_start": 116, "char_end": 154, "line": "// Written by Jared Simpson (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 116, "char_end": 171, "chars": "// Written by Jared Simpson (jared.simpson@oicr.on.ca)\n"}], "added": [{"char_start": 116, "char_end": 154, "chars": "// Written by Jared Simpson (<EMAIL>)\n"}]}}
{"func_name": 1427, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * STRUMPACK -- STRUctured Matrices PACKage, Copyright (c) 2014, The\n * Regents of the University of California, through Lawrence Berkeley\n * National Laboratory (subject to receipt of any required approvals\n * from the U.S. Dept. of Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE. This software is owned by the U.S. Department of Energy. As\n * such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government igs granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * Developers: Pieter Ghysels, Francois-Henry Rouet, Xiaoye S. Li.\n *             (Lawrence Berkeley National Lab, Computational Research\n *             Division).\n *\n */\n#ifndef FRONTAL_MATRIX_HODLR_MPI_HPP\n#define FRONTAL_MATRIX_HODLR_MPI_HPP\n\n#include \"FrontalMatrixMPI.hpp\"\n#include \"HODLR/HODLRMatrix.hpp\"\n#include \"HODLR/ButterflyMatrix.hpp\"\n\n#define STRUMPACK_PERMUTE_CB\n\nnamespace strumpack {\n\n  template<typename scalar_t,typename integer_t>\n  class FrontalMatrixHODLRMPI : public FrontalMatrixMPI<scalar_t,integer_t> {\n    using SpMat_t = CompressedSparseMatrix<scalar_t,integer_t>;\n    using F_t = FrontalMatrix<scalar_t,integer_t>;\n    using FMPI_t = FrontalMatrixMPI<scalar_t,integer_t>;\n    using DenseM_t = DenseMatrix<scalar_t>;\n    using DistM_t = DistributedMatrix<scalar_t>;\n    using DistMW_t = DistributedMatrixWrapper<scalar_t>;\n    using Opts_t = SPOptions<scalar_t>;\n    using VecVec_t = std::vector<std::vector<std::size_t>>;\n", "func_src_after": "/*\n * STRUMPACK -- STRUctured Matrices PACKage, Copyright (c) 2014, The\n * Regents of the University of California, through Lawrence Berkeley\n * National Laboratory (subject to receipt of any required approvals\n * from the U.S. Dept. of Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at <EMAIL>.\n *\n * NOTICE. This software is owned by the U.S. Department of Energy. As\n * such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government igs granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * Developers: Pieter Ghysels, Francois-Henry Rouet, Xiaoye S. Li.\n *             (Lawrence Berkeley National Lab, Computational Research\n *             Division).\n *\n */\n#ifndef FRONTAL_MATRIX_HODLR_MPI_HPP\n#define FRONTAL_MATRIX_HODLR_MPI_HPP\n\n#include \"FrontalMatrixMPI.hpp\"\n#include \"HODLR/HODLRMatrix.hpp\"\n#include \"HODLR/ButterflyMatrix.hpp\"\n\n#define STRUMPACK_PERMUTE_CB\n\nnamespace strumpack {\n\n  template<typename scalar_t,typename integer_t>\n  class FrontalMatrixHODLRMPI : public FrontalMatrixMPI<scalar_t,integer_t> {\n    using SpMat_t = CompressedSparseMatrix<scalar_t,integer_t>;\n    using F_t = FrontalMatrix<scalar_t,integer_t>;\n    using FMPI_t = FrontalMatrixMPI<scalar_t,integer_t>;\n    using DenseM_t = DenseMatrix<scalar_t>;\n    using DistM_t = DistributedMatrix<scalar_t>;\n    using DistMW_t = DistributedMatrixWrapper<scalar_t>;\n    using Opts_t = SPOptions<scalar_t>;\n    using VecVec_t = std::vector<std::vector<std::size_t>>;\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 403, "char_end": 433, "line": " * Department at TTD@lbl.gov.\n"}], "added": [{"line_no": 10, "char_start": 403, "char_end": 429, "line": " * Department at <EMAIL>.\n"}]}, "char_changes": {"deleted": [{"char_start": 403, "char_end": 433, "chars": " * Department at TTD@lbl.gov.\n"}], "added": [{"char_start": 403, "char_end": 429, "chars": " * Department at <EMAIL>.\n"}]}}
{"func_name": 1448, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n/*\n * Copyright (c) 2003-2015 Rony Shapiro <ronys@users.sourceforge.net>.\n * All rights reserved. Use of the code is allowed under the\n * Artistic License 2.0 terms, as specified in the LICENSE file\n * distributed with this code, or available from\n * http://www.opensource.org/licenses/artistic-license-2.0.php\n */\n\n/** \\file guiinfo.cpp\n* \n*/\n\n#include <wx/wxprec.h>\n\n#ifndef WX_PRECOMP\n#include \"wx/wx.h\"\n#endif\n\n#include \"./guiinfo.h\"\n#include \"./passwordsafeframe.h\"\n#include \"./PWStree.h\"\n#include \"./PWSgrid.h\"\n#include <functional>\n\n#ifdef __WXMSW__\n#include <wx/msw/msvcrt.h>\n#endif\n\nvoid GUIInfo::Save(PasswordSafeFrame* frame)\n{\n  SaveTreeViewInfo(frame->m_tree);\n  SaveGridViewInfo(frame->m_grid);\n}\n\nvoid GUIInfo::Restore(PasswordSafeFrame* frame)\n{\n  RestoreTreeViewInfo(frame->m_tree);\n  RestoreGridViewInfo(frame->m_grid);\n}\n\nvoid CollectExpandedNodes(PWSTreeCtrl* tree, wxTreeItemId root, wxArrayString& expanded)\n{\n  if ( !tree || tree->GetCount() == 0 )\n    return;\n  \n  wxTreeItemIdValue cookie;\n  for( wxTreeItemId id = tree->GetFirstChild(root, cookie); id.IsOk(); id = tree->GetNextChild(root, cookie))\n  {\n    if (tree->ItemHasChildren(id) && tree->IsExpanded(id)) {", "func_src_after": "\n/*\n * Copyright (c) 2003-2015 Rony Shapiro <<EMAIL>t>.\n * All rights reserved. Use of the code is allowed under the\n * Artistic License 2.0 terms, as specified in the LICENSE file\n * distributed with this code, or available from\n * http://www.opensource.org/licenses/artistic-license-2.0.php\n */\n\n/** \\file guiinfo.cpp\n* \n*/\n\n#include <wx/wxprec.h>\n\n#ifndef WX_PRECOMP\n#include \"wx/wx.h\"\n#endif\n\n#include \"./guiinfo.h\"\n#include \"./passwordsafeframe.h\"\n#include \"./PWStree.h\"\n#include \"./PWSgrid.h\"\n#include <functional>\n\n#ifdef __WXMSW__\n#include <wx/msw/msvcrt.h>\n#endif\n\nvoid GUIInfo::Save(PasswordSafeFrame* frame)\n{\n  SaveTreeViewInfo(frame->m_tree);\n  SaveGridViewInfo(frame->m_grid);\n}\n\nvoid GUIInfo::Restore(PasswordSafeFrame* frame)\n{\n  RestoreTreeViewInfo(frame->m_tree);\n  RestoreGridViewInfo(frame->m_grid);\n}\n\nvoid CollectExpandedNodes(PWSTreeCtrl* tree, wxTreeItemId root, wxArrayString& expanded)\n{\n  if ( !tree || tree->GetCount() == 0 )\n    return;\n  \n  wxTreeItemIdValue cookie;\n  for( wxTreeItemId id = tree->GetFirstChild(root, cookie); id.IsOk(); id = tree->GetNextChild(root, cookie))\n  {\n    if (tree->ItemHasChildren(id) && tree->IsExpanded(id)) {", "line_changes": {"deleted": [{"line_no": 3, "char_start": 4, "char_end": 75, "line": " * Copyright (c) 2003-2015 Rony Shapiro <ronys@users.sourceforge.net>.\n"}], "added": [{"line_no": 4, "char_start": 4, "char_end": 56, "line": " * Copyright (c) 2003-2015 Rony Shapiro <<EMAIL>t>.\n"}]}, "char_changes": {"deleted": [{"char_start": 4, "char_end": 75, "chars": " * Copyright (c) 2003-2015 Rony Shapiro <ronys@users.sourceforge.net>.\n"}], "added": [{"char_start": 4, "char_end": 56, "chars": " * Copyright (c) 2003-2015 Rony Shapiro <<EMAIL>t>.\n"}]}}
{"func_name": 1486, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "   //\n   // Service policy pm1\n   //   Configured on: Management0\n   //   Applied on:\n   //   1: Class-map: cm1 (match-any)\n   //     Match: 1 IP Access List acl1\n   //         1 permit ip any 20.20.0.0/16 dscp 32\n   //     Configured actions: drop\n   //     Active routing action: No PBR action\n   //   2: Class-map: cm2 (match-any)\n   //     Match: 1 IPV6 Access List acl2\n   //         1 permit ipv6 any 2001:db8:1234::/48 dscp 32\n   //     Configured actions: drop\n   //     Active routing action: No PBR action\n   //   3: Single match statement\n   //     Match:\n   //         0 permit ip any 30.30.0.0/16 dscp 32\n   //     Configured actions: set nexthop-group nexthopgroup2\n   //     Active routing action: No PBR action\n   //   4: Single match statement\n   //     Match:\n   //         0 permit ipv6 any 2001:db8:5678::/48 dscp 32\n   //     Configured actions: set nexthop-group nexthopgroup2\n   //     Active routing action: No PBR action\n\n   void setup_policy() {\n      eos::ip_addr_t dip;\n\n      // Configure V4 ACL \n      auto acl1 = eos::acl_key_t(\"acl1\", eos::ACL_TYPE_IPV4);\n      auto rule1 = eos::acl_rule_ip_t();\n      rule1.action_is(eos::ACL_PERMIT);\n      eos::parse_ip_addr(\"20.20.0.0\", &dip);\n      rule1.destination_addr_is(eos::ip_addr_mask_t(dip, 16));\n      rule1.priority_value_is(32);\n      rule1.priority_mask_is(63);\n      rule1.match_ip_priority_is(true);\n      get_acl_mgr()->acl_rule_set(acl1, 1, rule1);\n      get_acl_mgr()->acl_commit();\n\n      // Now build the class map for that ACL and commit it\n      auto cmkey = eos::class_map_key_t(\"cm1\", eos::POLICY_FEATURE_PBR);\n      auto cm = eos::class_map_t(cmkey);\n      cm.rule_set(1, eos::class_map_rule_t(acl1));\n      class_mgr->class_map_is(cm);\n      t.trace0(\"class map cm input: %s\", cm.to_string().c_str());\n      auto cm_res = class_mgr->class_map(cmkey);\n      t.trace0(\"class map cm outpt: %s\", cm_res.to_string().c_str());\n\n      // Build a policy map", "func_src_after": "   //\n   // Service policy pm1\n   //   Configured on: Management0\n   //   Applied on:\n   //   1: Class-map: cm1 (match-any)\n   //     Match: 1 IP Access List acl1\n   //         1 permit ip any <IP-Address>/16 dscp 32\n   //     Configured actions: drop\n   //     Active routing action: No PBR action\n   //   2: Class-map: cm2 (match-any)\n   //     Match: 1 IPV6 Access List acl2\n   //         1 permit ipv6 any <IP-Address>/48 dscp 32\n   //     Configured actions: drop\n   //     Active routing action: No PBR action\n   //   3: Single match statement\n   //     Match:\n   //         0 permit ip any <IP-Address>/16 dscp 32\n   //     Configured actions: set nexthop-group nexthopgroup2\n   //     Active routing action: No PBR action\n   //   4: Single match statement\n   //     Match:\n   //         0 permit ipv6 any <IP-Address>/48 dscp 32\n   //     Configured actions: set nexthop-group nexthopgroup2\n   //     Active routing action: No PBR action\n\n   void setup_policy() {\n      eos::ip_addr_t dip;\n\n      // Configure V4 ACL \n      auto acl1 = eos::acl_key_t(\"acl1\", eos::ACL_TYPE_IPV4);\n      auto rule1 = eos::acl_rule_ip_t();\n      rule1.action_is(eos::ACL_PERMIT);\n      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n      rule1.destination_addr_is(eos::ip_addr_mask_t(dip, 16));\n      rule1.priority_value_is(32);\n      rule1.priority_mask_is(63);\n      rule1.match_ip_priority_is(true);\n      get_acl_mgr()->acl_rule_set(acl1, 1, rule1);\n      get_acl_mgr()->acl_commit();\n\n      // Now build the class map for that ACL and commit it\n      auto cmkey = eos::class_map_key_t(\"cm1\", eos::POLICY_FEATURE_PBR);\n      auto cm = eos::class_map_t(cmkey);\n      cm.rule_set(1, eos::class_map_rule_t(acl1));\n      class_mgr->class_map_is(cm);\n      t.trace0(\"class map cm input: %s\", cm.to_string().c_str());\n      auto cm_res = class_mgr->class_map(cmkey);\n      t.trace0(\"class map cm outpt: %s\", cm_res.to_string().c_str());\n\n      // Build a policy map", "line_changes": {"deleted": [{"line_no": 7, "char_start": 163, "char_end": 214, "line": "   //         1 permit ip any 20.20.0.0/16 dscp 32\n"}, {"line_no": 13, "char_start": 378, "char_end": 437, "line": "   //         1 permit ipv6 any 2001:db8:1234::/48 dscp 32\n"}, {"line_no": 19, "char_start": 567, "char_end": 618, "line": "   //         0 permit ip any 30.30.0.0/16 dscp 32\n"}, {"line_no": 25, "char_start": 781, "char_end": 840, "line": "   //         0 permit ipv6 any 2001:db8:5678::/48 dscp 32\n"}, {"line_no": 37, "char_start": 1169, "char_end": 1214, "line": "      eos::parse_ip_addr(\"20.20.0.0\", &dip);\n"}], "added": [{"line_no": 8, "char_start": 163, "char_end": 217, "line": "   //         1 permit ip any <IP-Address>/16 dscp 32\n"}, {"line_no": 14, "char_start": 378, "char_end": 434, "line": "   //         1 permit ipv6 any <IP-Address>/48 dscp 32\n"}, {"line_no": 20, "char_start": 567, "char_end": 621, "line": "   //         0 permit ip any <IP-Address>/16 dscp 32\n"}, {"line_no": 26, "char_start": 781, "char_end": 837, "line": "   //         0 permit ipv6 any <IP-Address>/48 dscp 32\n"}, {"line_no": 38, "char_start": 1169, "char_end": 1217, "line": "      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n"}]}, "char_changes": {"deleted": [{"char_start": 163, "char_end": 214, "chars": "   //         1 permit ip any 20.20.0.0/16 dscp 32\n"}, {"char_start": 378, "char_end": 437, "chars": "   //         1 permit ipv6 any 2001:db8:1234::/48 dscp 32\n"}, {"char_start": 567, "char_end": 618, "chars": "   //         0 permit ip any 30.30.0.0/16 dscp 32\n"}, {"char_start": 781, "char_end": 840, "chars": "   //         0 permit ipv6 any 2001:db8:5678::/48 dscp 32\n"}, {"char_start": 1169, "char_end": 1214, "chars": "      eos::parse_ip_addr(\"20.20.0.0\", &dip);\n"}], "added": [{"char_start": 163, "char_end": 217, "chars": "   //         1 permit ip any <IP-Address>/16 dscp 32\n"}, {"char_start": 378, "char_end": 434, "chars": "   //         1 permit ipv6 any <IP-Address>/48 dscp 32\n"}, {"char_start": 567, "char_end": 621, "chars": "   //         0 permit ip any <IP-Address>/16 dscp 32\n"}, {"char_start": 781, "char_end": 837, "chars": "   //         0 permit ipv6 any <IP-Address>/48 dscp 32\n"}, {"char_start": 1169, "char_end": 1217, "chars": "      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n"}]}}
{"func_name": 1487, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      auto pmkey = eos::policy_map_key_t(\"pm1\", eos::POLICY_FEATURE_PBR);\n      auto pm = eos::policy_map_t(pmkey);\n\n      // Add the policy map rule matching our class map and dropping the traffic\n      auto pmrule4 = eos::policy_map_rule_t(cmkey);\n      auto action = eos::policy_map_action_t(eos::POLICY_ACTION_DROP);\n      pmrule4.action_set(action);\n      pm.rule_set(1, pmrule4);\n\n      // Configure V6 ACL \n      auto acl2 = eos::acl_key_t(\"acl2\", eos::ACL_TYPE_IPV6);\n      auto rule2 = eos::acl_rule_ip_t();\n      rule2.action_is(eos::ACL_PERMIT);\n      eos::parse_ip_addr(\"2001:db8:1234::\", &dip);\n      rule2.destination_addr_is(eos::ip_addr_mask_t(dip, 48));\n      rule2.priority_value_is(129);\n      rule2.priority_mask_is(255);\n      get_acl_mgr()->acl_rule_set(acl2, 1, rule2);\n      get_acl_mgr()->acl_commit();\n\n      // Now build the class map for that ACL and commit it\n      auto cmkey2 = eos::class_map_key_t(\"cm2\", eos::POLICY_FEATURE_PBR);\n      auto cm2 = eos::class_map_t(cmkey2);\n      cm2.rule_set(1, eos::class_map_rule_t(acl2));\n      class_mgr->class_map_is(cm2);\n      t.trace0(\"class map cm2 input: %s\", cm2.to_string().c_str());\n      auto cm2_res = class_mgr->class_map(cmkey2);\n      t.trace0(\"class map cm2 outpt: %s\", cm2_res.to_string().c_str());\n\n      // Add the policy map rule matching our class map and dropping the traffic\n      auto pmrule6 = eos::policy_map_rule_t(cmkey2);\n      pmrule6.action_set(action);\n      pm.rule_set(2, pmrule6);\n\n      // Add a V4 single line raw match rule.\n      eos::acl_rule_ip_t raw_v4;\n      eos::parse_ip_addr(\"30.30.0.0\", &dip);\n      raw_v4.destination_addr_is(eos::ip_addr_mask_t(dip, 16));\n      raw_v4.priority_value_is(32);\n      raw_v4.priority_mask_is(63);\n      raw_v4.match_ip_priority_is(true);\n      auto pmrule_raw_v4 = eos::policy_map_rule_t();\n      pmrule_raw_v4.raw_rule_is(raw_v4, eos::POLICY_RULE_TYPE_IPV4);\n      action = eos::policy_map_action_t(eos::POLICY_ACTION_NEXTHOP_GROUP);\n      action.nexthop_group_name_is(\"nexthopgroup2\");\n      pmrule_raw_v4.action_set(action);\n      pm.rule_set(3, pmrule_raw_v4);\n\n      // Add a V6 single line raw match rule.\n      eos::acl_rule_ip_t raw_v6;", "func_src_after": "      auto pmkey = eos::policy_map_key_t(\"pm1\", eos::POLICY_FEATURE_PBR);\n      auto pm = eos::policy_map_t(pmkey);\n\n      // Add the policy map rule matching our class map and dropping the traffic\n      auto pmrule4 = eos::policy_map_rule_t(cmkey);\n      auto action = eos::policy_map_action_t(eos::POLICY_ACTION_DROP);\n      pmrule4.action_set(action);\n      pm.rule_set(1, pmrule4);\n\n      // Configure V6 ACL \n      auto acl2 = eos::acl_key_t(\"acl2\", eos::ACL_TYPE_IPV6);\n      auto rule2 = eos::acl_rule_ip_t();\n      rule2.action_is(eos::ACL_PERMIT);\n      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n      rule2.destination_addr_is(eos::ip_addr_mask_t(dip, 48));\n      rule2.priority_value_is(129);\n      rule2.priority_mask_is(255);\n      get_acl_mgr()->acl_rule_set(acl2, 1, rule2);\n      get_acl_mgr()->acl_commit();\n\n      // Now build the class map for that ACL and commit it\n      auto cmkey2 = eos::class_map_key_t(\"cm2\", eos::POLICY_FEATURE_PBR);\n      auto cm2 = eos::class_map_t(cmkey2);\n      cm2.rule_set(1, eos::class_map_rule_t(acl2));\n      class_mgr->class_map_is(cm2);\n      t.trace0(\"class map cm2 input: %s\", cm2.to_string().c_str());\n      auto cm2_res = class_mgr->class_map(cmkey2);\n      t.trace0(\"class map cm2 outpt: %s\", cm2_res.to_string().c_str());\n\n      // Add the policy map rule matching our class map and dropping the traffic\n      auto pmrule6 = eos::policy_map_rule_t(cmkey2);\n      pmrule6.action_set(action);\n      pm.rule_set(2, pmrule6);\n\n      // Add a V4 single line raw match rule.\n      eos::acl_rule_ip_t raw_v4;\n      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n      raw_v4.destination_addr_is(eos::ip_addr_mask_t(dip, 16));\n      raw_v4.priority_value_is(32);\n      raw_v4.priority_mask_is(63);\n      raw_v4.match_ip_priority_is(true);\n      auto pmrule_raw_v4 = eos::policy_map_rule_t();\n      pmrule_raw_v4.raw_rule_is(raw_v4, eos::POLICY_RULE_TYPE_IPV4);\n      action = eos::policy_map_action_t(eos::POLICY_ACTION_NEXTHOP_GROUP);\n      action.nexthop_group_name_is(\"nexthopgroup2\");\n      pmrule_raw_v4.action_set(action);\n      pm.rule_set(3, pmrule_raw_v4);\n\n      // Add a V6 single line raw match rule.\n      eos::acl_rule_ip_t raw_v6;", "line_changes": {"deleted": [{"line_no": 14, "char_start": 557, "char_end": 608, "line": "      eos::parse_ip_addr(\"2001:db8:1234::\", &dip);\n"}, {"line_no": 38, "char_start": 1562, "char_end": 1607, "line": "      eos::parse_ip_addr(\"30.30.0.0\", &dip);\n"}], "added": [{"line_no": 15, "char_start": 557, "char_end": 605, "line": "      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n"}, {"line_no": 39, "char_start": 1562, "char_end": 1610, "line": "      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n"}]}, "char_changes": {"deleted": [{"char_start": 557, "char_end": 608, "chars": "      eos::parse_ip_addr(\"2001:db8:1234::\", &dip);\n"}, {"char_start": 1562, "char_end": 1607, "chars": "      eos::parse_ip_addr(\"30.30.0.0\", &dip);\n"}], "added": [{"char_start": 557, "char_end": 605, "chars": "      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n"}, {"char_start": 1562, "char_end": 1610, "chars": "      eos::parse_ip_addr(\"<IP-Address>\", &dip);\n"}]}}
{"func_name": 1491, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    return 1;\n  }\n  return 0;\n}\n\n// Resolve FDQN \"host\", store IP address in the \"ip\".\n// Return > 0 (IP address length) on success.\nint ns_resolve(const char *host, char *buf, size_t n) {\n  struct in_addr ad;\n  return ns_resolve2(host, &ad) ? snprintf(buf, n, \"%s\", inet_ntoa(ad)) : 0;\n}\n\n// Address format: [PROTO://][IP_ADDRESS:]PORT[:CERT][:CA_CERT]\nstatic int ns_parse_address(const char *str, union socket_address *sa,\n                            int *proto, int *use_ssl, char *cert, char *ca) {\n  unsigned int a, b, c, d, port;\n  int n = 0, len = 0;\n  char host[200];\n#ifdef NS_ENABLE_IPV6\n  char buf[100];\n#endif\n\n  // MacOS needs that. If we do not zero it, subsequent bind() will fail.\n  // Also, all-zeroes in the socket address means binding to all addresses\n  // for both IPv4 and IPv6 (INADDR_ANY and IN6ADDR_ANY_INIT).\n  memset(sa, 0, sizeof(*sa));\n  sa->sin.sin_family = AF_INET;\n\n  *proto = SOCK_STREAM;\n  *use_ssl = 0;\n  cert[0] = ca[0] = '\\0';\n\n  if (memcmp(str, \"ssl://\", 6) == 0) {\n    str += 6;\n    *use_ssl = 1;\n  } else if (memcmp(str, \"udp://\", 6) == 0) {\n    str += 6;\n    *proto = SOCK_DGRAM;\n  } else if (memcmp(str, \"tcp://\", 6) == 0) {\n    str += 6;\n  }\n\n  if (sscanf(str, \"%u.%u.%u.%u:%u%n\", &a, &b, &c, &d, &port, &len) == 5) {\n    // Bind to a specific IPv4 address, e.g. 192.168.1.5:8080\n    sa->sin.sin_addr.s_addr = htonl((a << 24) | (b << 16) | (c << 8) | d);\n    sa->sin.sin_port = htons((uint16_t) port);\n#ifdef NS_ENABLE_IPV6\n  } else if (sscanf(str, \"[%99[^]]]:%u%n\", buf, &port, &len) == 2 &&\n             inet_pton(AF_INET6, buf, &sa->sin6.sin6_addr)) {\n    // IPv6 address, e.g. [3ffe:2a00:100:7031::1]:8080", "func_src_after": "    return 1;\n  }\n  return 0;\n}\n\n// Resolve FDQN \"host\", store IP address in the \"ip\".\n// Return > 0 (IP address length) on success.\nint ns_resolve(const char *host, char *buf, size_t n) {\n  struct in_addr ad;\n  return ns_resolve2(host, &ad) ? snprintf(buf, n, \"%s\", inet_ntoa(ad)) : 0;\n}\n\n// Address format: [PROTO://][IP_ADDRESS:]PORT[:CERT][:CA_CERT]\nstatic int ns_parse_address(const char *str, union socket_address *sa,\n                            int *proto, int *use_ssl, char *cert, char *ca) {\n  unsigned int a, b, c, d, port;\n  int n = 0, len = 0;\n  char host[200];\n#ifdef NS_ENABLE_IPV6\n  char buf[100];\n#endif\n\n  // MacOS needs that. If we do not zero it, subsequent bind() will fail.\n  // Also, all-zeroes in the socket address means binding to all addresses\n  // for both IPv4 and IPv6 (INADDR_ANY and IN6ADDR_ANY_INIT).\n  memset(sa, 0, sizeof(*sa));\n  sa->sin.sin_family = AF_INET;\n\n  *proto = SOCK_STREAM;\n  *use_ssl = 0;\n  cert[0] = ca[0] = '\\0';\n\n  if (memcmp(str, \"ssl://\", 6) == 0) {\n    str += 6;\n    *use_ssl = 1;\n  } else if (memcmp(str, \"udp://\", 6) == 0) {\n    str += 6;\n    *proto = SOCK_DGRAM;\n  } else if (memcmp(str, \"tcp://\", 6) == 0) {\n    str += 6;\n  }\n\n  if (sscanf(str, \"%u.%u.%u.%u:%u%n\", &a, &b, &c, &d, &port, &len) == 5) {\n    // Bind to a specific IPv4 address, e.g. <IP-Address>:8080\n    sa->sin.sin_addr.s_addr = htonl((a << 24) | (b << 16) | (c << 8) | d);\n    sa->sin.sin_port = htons((uint16_t) port);\n#ifdef NS_ENABLE_IPV6\n  } else if (sscanf(str, \"[%99[^]]]:%u%n\", buf, &port, &len) == 2 &&\n             inet_pton(AF_INET6, buf, &sa->sin6.sin6_addr)) {\n    // IPv6 address, e.g. [<IP-Address>]:8080", "line_changes": {"deleted": [{"line_no": 44, "char_start": 1261, "char_end": 1323, "line": "    // Bind to a specific IPv4 address, e.g. 192.168.1.5:8080\n"}, {"line_no": 51, "char_start": 1599, "char_end": 1653, "line": "    // IPv6 address, e.g. [3ffe:2a00:100:7031::1]:8080"}], "added": [{"line_no": 45, "char_start": 1261, "char_end": 1324, "line": "    // Bind to a specific IPv4 address, e.g. <IP-Address>:8080\n"}, {"line_no": 52, "char_start": 1599, "char_end": 1644, "line": "    // IPv6 address, e.g. [<IP-Address>]:8080"}]}, "char_changes": {"deleted": [{"char_start": 1261, "char_end": 1323, "chars": "    // Bind to a specific IPv4 address, e.g. 192.168.1.5:8080\n"}, {"char_start": 1599, "char_end": 1653, "chars": "    // IPv6 address, e.g. [3ffe:2a00:100:7031::1]:8080"}], "added": [{"char_start": 1261, "char_end": 1324, "chars": "    // Bind to a specific IPv4 address, e.g. <IP-Address>:8080\n"}, {"char_start": 1599, "char_end": 1644, "chars": "    // IPv6 address, e.g. [<IP-Address>]:8080"}]}}
{"func_name": 1495, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * PROJECT:     EmergencyFood Project\n * PURPOSE:     Basic function and tools for calling Genshin API\n * COPYRIGHT:   Copyright 2020 kernel.bin (1160386205@qq.com)\n */\n\n\n#include <Windows.h>\n#include <WinINet.h>\n#include <atlstr.h>\n#include \"md5.h\"\n#include \"GenshinAPIBase.h\"\n\n#pragma comment(lib, \"wininet.lib\")\n\n\nWCHAR miHoYoServer[] = L\"api-takumi.mihoyo.com\";\n\nHINTERNET hInternet = NULL, hConnect = NULL;\n\nLPCWSTR ServerNameList[10] = { NULL, L\"cn_gf01\", NULL, NULL, NULL, L\"cn_qd01\", NULL, NULL, NULL, NULL };\n\nBOOL InitializeGenshinAPI(BOOL bInitialize)\n{\n    if (bInitialize)\n    {\n        // Initiate WinINet\n        hInternet = InternetOpenW(L\"Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) miHoYoBBS/2.4.0\",\n            INTERNET_OPEN_TYPE_PRECONFIG, NULL, NULL, NULL);\n\n        if (!hInternet)\n        {\n            return FALSE;\n        }\n\n        hConnect = InternetConnectW(hInternet,\n            miHoYoServer, INTERNET_DEFAULT_HTTPS_PORT, NULL, NULL, INTERNET_SERVICE_HTTP, 0, 0);\n\n        if (!hConnect)\n        {\n            InternetCloseHandle(hInternet);\n            hInternet = NULL;\n            return FALSE;\n        }\n\n        return TRUE;\n    }\n    else\n    {\n        InternetCloseHandle(hConnect);", "func_src_after": "/*\n * PROJECT:     EmergencyFood Project\n * PURPOSE:     Basic function and tools for calling Genshin API\n * COPYRIGHT:   Copyright 2020 kernel.bin (<EMAIL>)\n */\n\n\n#include <Windows.h>\n#include <WinINet.h>\n#include <atlstr.h>\n#include \"md5.h\"\n#include \"GenshinAPIBase.h\"\n\n#pragma comment(lib, \"wininet.lib\")\n\n\nWCHAR miHoYoServer[] = L\"api-takumi.mihoyo.com\";\n\nHINTERNET hInternet = NULL, hConnect = NULL;\n\nLPCWSTR ServerNameList[10] = { NULL, L\"cn_gf01\", NULL, NULL, NULL, L\"cn_qd01\", NULL, NULL, NULL, NULL };\n\nBOOL InitializeGenshinAPI(BOOL bInitialize)\n{\n    if (bInitialize)\n    {\n        // Initiate WinINet\n        hInternet = InternetOpenW(L\"Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) miHoYoBBS/2.4.0\",\n            INTERNET_OPEN_TYPE_PRECONFIG, NULL, NULL, NULL);\n\n        if (!hInternet)\n        {\n            return FALSE;\n        }\n\n        hConnect = InternetConnectW(hInternet,\n            miHoYoServer, INTERNET_DEFAULT_HTTPS_PORT, NULL, NULL, INTERNET_SERVICE_HTTP, 0, 0);\n\n        if (!hConnect)\n        {\n            InternetCloseHandle(hInternet);\n            hInternet = NULL;\n            return FALSE;\n        }\n\n        return TRUE;\n    }\n    else\n    {\n        InternetCloseHandle(hConnect);", "line_changes": {"deleted": [{"line_no": 4, "char_start": 106, "char_end": 168, "line": " * COPYRIGHT:   Copyright 2020 kernel.bin (1160386205@qq.com)\n"}], "added": [{"line_no": 5, "char_start": 106, "char_end": 158, "line": " * COPYRIGHT:   Copyright 2020 kernel.bin (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 106, "char_end": 168, "chars": " * COPYRIGHT:   Copyright 2020 kernel.bin (1160386205@qq.com)\n"}], "added": [{"char_start": 106, "char_end": 158, "chars": " * COPYRIGHT:   Copyright 2020 kernel.bin (<EMAIL>)\n"}]}}
{"func_name": 1528, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//----------------------------------------------------------------------------\nvoid albaUserTest::TestSetCredentials()\n//----------------------------------------------------------------------------\n{\n  albaString usr, pwd, proxyHost, proxyPort;\n  int r_me, proxyFlag;\n  usr = \"name\";\n  pwd = \"pwd\";\n  proxyHost = \"cineca\";\n  proxyPort = 1111;\n  r_me = 0;\n  proxyFlag = 0;\n\n  albaUser *user = new albaUser();\n  CPPUNIT_ASSERT(user->SetCredentials(usr, pwd, proxyFlag, proxyHost, proxyPort, r_me));\n  \n  bool name_ok = user->GetName().Equals(\"name\");\n  CPPUNIT_ASSERT(name_ok);\n\n  bool pwd_ok = user->GetPwd().Equals(\"pwd\");\n  CPPUNIT_ASSERT(pwd_ok);\n\n  bool proxyHost_ok = user->GetProxyHost().Equals(\"cineca\");\n  CPPUNIT_ASSERT(proxyHost_ok);\n\n  bool proxyPort_ok = user->GetProxyPort() == 1111;\n  CPPUNIT_ASSERT(proxyPort_ok);\n\n  bool proxyFlag_ok = user->GetProxyFlag() == 0;\n  CPPUNIT_ASSERT(proxyFlag_ok);\n\n  bool remember = user->GetRememberUserCredentials() == 0;\n  CPPUNIT_ASSERT(remember);\n\n  // test storing user information.\n  r_me = 1;\n  CPPUNIT_ASSERT(user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me));\n  cppDEL(user);\n\n  user = new albaUser();\n  // test again save username and password\n  name_ok = user->GetName().Equals(\"name\");\n  CPPUNIT_ASSERT(name_ok);\n  pwd_ok = user->GetPwd().Equals(\"pwd\");\n  CPPUNIT_ASSERT(pwd_ok);\n   proxyHost_ok = user->GetProxyHost().Equals(\"cineca\");\n  CPPUNIT_ASSERT(proxyHost_ok);\n  proxyPort_ok = user->GetProxyPort() == 1111;\n  CPPUNIT_ASSERT(proxyPort_ok);\n  proxyFlag_ok = user->GetProxyFlag() == 0;", "func_src_after": "//----------------------------------------------------------------------------\nvoid albaUserTest::TestSetCredentials()\n//----------------------------------------------------------------------------\n{\n  albaString usr, pwd, proxyHost, proxyPort;\n  int r_me, proxyFlag;\n  usr = \"name\";\n  pwd = \"pwd\";\n  proxyHost = \"cineca\";\n  proxyPort = 1111;\n  r_me = 0;\n  proxyFlag = 0;\n\n  albaUser *user = new albaUser();\n  CPPUNIT_ASSERT(user->SetCredentials(usr, pwd, proxyFlag, proxyHost, proxyPort, r_me));\n  \n  bool name_ok = user->GetName().Equals(\"name\");\n  CPPUNIT_ASSERT(name_ok);\n\n  bool pwd_ok = user->GetPwd().Equals(\"pwd\");\n  CPPUNIT_ASSERT(pwd_ok);\n\n  bool proxyHost_ok = user->GetProxyHost().Equals(\"cineca\");\n  CPPUNIT_ASSERT(proxyHost_ok);\n\n  bool proxyPort_ok = user->GetProxyPort() == 1111;\n  CPPUNIT_ASSERT(proxyPort_ok);\n\n  bool proxyFlag_ok = user->GetProxyFlag() == 0;\n  CPPUNIT_ASSERT(proxyFlag_ok);\n\n  bool remember = user->GetRememberUserCredentials() == 0;\n  CPPUNIT_ASSERT(remember);\n\n  // test storing user information.\n  r_me = 1;\n  CPPUNIT_ASSERT(user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me));\n  cppDEL(user);\n\n  user = new albaUser();\n  // test again save username and password\n  name_ok = user->GetName().Equals(\"name\");\n  CPPUNIT_ASSERT(name_ok);\n  pwd_ok = user->GetPwd().Equals(\"pwd\");\n  CPPUNIT_ASSERT(pwd_ok);\n   proxyHost_ok = user->GetProxyHost().Equals(\"cineca\");\n  CPPUNIT_ASSERT(proxyHost_ok);\n  proxyPort_ok = user->GetProxyPort() == 1111;\n  CPPUNIT_ASSERT(proxyPort_ok);\n  proxyFlag_ok = user->GetProxyFlag() == 0;", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1529, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  CPPUNIT_ASSERT(proxyFlag_ok);\n\n  // remove user info file.\n  r_me = 0;\n  bool cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(cred_ok);\n  cppDEL(user);\n}\n//----------------------------------------------------------------------------\nvoid albaUserTest::TestCheckUserCredentials()\n//----------------------------------------------------------------------------\n{\n  albaString usr, pwd, proxyHost, proxyPort;\n  int r_me, proxyFlag;\n  usr = \"name\";\n  pwd = \"pwd\";\n  proxyHost = \"cineca\";\n  proxyPort = 1111;\n  r_me = 0;\n  proxyFlag = 0;\n  bool cred_ok;\n\n\n  albaUser *user = new albaUser();\n  cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(cred_ok);\n\n  // both username and password are given: basic credential check is ok.\n  cred_ok = user->CheckUserCredentials();\n  CPPUNIT_ASSERT(cred_ok);\n\n  pwd = \"\";\n  cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(cred_ok);\n\n  // empty password is admitted (anonymous authentication): basic credential check is ok.\n  cred_ok = user->CheckUserCredentials();\n  CPPUNIT_ASSERT(cred_ok);\n\n  usr = \"\";\n  pwd = \"pwd\";\n\n  // empty username is NOT admitted (anonymous authentication): basic credential check is ok.\n  cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(!cred_ok);\n  cppDEL(user);\n}\n", "func_src_after": "  CPPUNIT_ASSERT(proxyFlag_ok);\n\n  // remove user info file.\n  r_me = 0;\n  bool cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(cred_ok);\n  cppDEL(user);\n}\n//----------------------------------------------------------------------------\nvoid albaUserTest::TestCheckUserCredentials()\n//----------------------------------------------------------------------------\n{\n  albaString usr, pwd, proxyHost, proxyPort;\n  int r_me, proxyFlag;\n  usr = \"name\";\n  pwd = \"pwd\";\n  proxyHost = \"cineca\";\n  proxyPort = 1111;\n  r_me = 0;\n  proxyFlag = 0;\n  bool cred_ok;\n\n\n  albaUser *user = new albaUser();\n  cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(cred_ok);\n\n  // both username and password are given: basic credential check is ok.\n  cred_ok = user->CheckUserCredentials();\n  CPPUNIT_ASSERT(cred_ok);\n\n  pwd = \"\";\n  cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(cred_ok);\n\n  // empty password is admitted (anonymous authentication): basic credential check is ok.\n  cred_ok = user->CheckUserCredentials();\n  CPPUNIT_ASSERT(cred_ok);\n\n  usr = \"\";\n  pwd = \"pwd\";\n\n  // empty username is NOT admitted (anonymous authentication): basic credential check is ok.\n  cred_ok = user->SetCredentials(usr, pwd, proxyFlag, proxyHost,proxyPort, r_me);\n  CPPUNIT_ASSERT(!cred_ok);\n  cppDEL(user);\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1532, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#include \"gpsoauthclient.hpp\"\n\n//#define CRYPTOPP\n#ifdef CRYPTOPP\n#include \"cryptopp\\base64.h\"\n#endif\n\n#include \"cryptopp\\rsa.h\"\n#include \"cryptopp\\osrng.h\"\n#undef byte\n\n#include \"tomcrypt.h\"\n\n#include <memory>\n#include <algorithm>\n#include <sstream>\n#include <functional>\n\n#define CURL_STATICLIB\n#include \"curl\\curl.h\"\n\nusing namespace CryptoPP;\n#pragma comment (lib, \"cryptlib.lib\")\n\ngpsoauthclient::gpsoauthclient(const std::string & email, const std::string & password)\n{\n\tthis->email = email;\n\tthis->password = password;\n\n\tthis->base64_key =\n\t\t\"AAAAgMom/1a/v0lblO2Ubrt60J2gcuXSljGFQXgcyZWveWLEwo6prwgi3\"\n\t\t\"iJIZdodyhKZQrNWp5nKJ3srRXcUW+F1BD3baEVGcmEgqaLZUNBjm057pK\"\n\t\t\"RI16kB0YppeGx5qIQ5QjKzsR8ETQbKLNWgRY0QRNVz34kMJR3P/LgHax/\"\n\t\t\"6rmf5AAAAAwEAAQ==\";\n\n\tthis->android_key = this->google__key_from_b64(this->base64_key);\n\tthis->version = \"1.0.0\";\n\tthis->authurl = \"https://android.clients.google.com/auth\";\n\tthis->useragent = \"gspoauthclient/\" + this->version;\n}\n\ngpsoauthclient::~gpsoauthclient() noexcept\n{\n}\n\nstd::unordered_map<std::string, std::string> gpsoauthclient::perform_master_login(const std::string &service, const std::string &device_country, const std::string &operator_country, const std::string &lang, int32_t sdk_version)\n{\n\treturn perform_auth_request(std::unordered_map<std::string, std::string>({\n\t\t{ \"accountType\", \"HOSTED_OR_GOOGLE\" },\n\t\t{ \"Email\", this->email },", "func_src_after": "#include \"gpsoauthclient.hpp\"\n\n//#define CRYPTOPP\n#ifdef CRYPTOPP\n#include \"cryptopp\\base64.h\"\n#endif\n\n#include \"cryptopp\\rsa.h\"\n#include \"cryptopp\\osrng.h\"\n#undef byte\n\n#include \"tomcrypt.h\"\n\n#include <memory>\n#include <algorithm>\n#include <sstream>\n#include <functional>\n\n#define CURL_STATICLIB\n#include \"curl\\curl.h\"\n\nusing namespace CryptoPP;\n#pragma comment (lib, \"cryptlib.lib\")\n\ngpsoauthclient::gpsoauthclient(const std::string & email, const std::string & password)\n{\n\tthis->email = email;\n\tthis->password = password;\n\n\tthis->base64_key =\n\t\t\"AAAAgMom/1a/v0lblO2Ubrt60J2gcuXSljGFQXgcyZWveWLEwo6prwgi3\"\n\t\t\"iJIZdodyhKZQrNWp5nKJ3srRXcUW+F1BD3baEVGcmEgqaLZUNBjm057pK\"\n\t\t\"RI16kB0YppeGx5qIQ5QjKzsR8ETQbKLNWgRY0QRNVz34kMJR3P/LgHax/\"\n\t\t\"6rmf5AAAAAwEAAQ==\";\n\n\tthis->android_key = this->google__key_from_b64(this->base64_key);\n\tthis->version = \"1.0.0\";\n\tthis->authurl = \"https://android.clients.google.com/auth\";\n\tthis->useragent = \"gspoauthclient/\" + this->version;\n}\n\ngpsoauthclient::~gpsoauthclient() noexcept\n{\n}\n\nstd::unordered_map<std::string, std::string> gpsoauthclient::perform_master_login(const std::string &service, const std::string &device_country, const std::string &operator_country, const std::string &lang, int32_t sdk_version)\n{\n\treturn perform_auth_request(std::unordered_map<std::string, std::string>({\n\t\t{ \"accountType\", \"HOSTED_OR_GOOGLE\" },\n\t\t{ \"Email\", this->email },", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1539, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n#include <quic/server/handshake/StatelessResetGenerator.h>\n#include <folly/Random.h>\n#include <folly/SocketAddress.h>\n#include <folly/portability/GTest.h>\n\nusing namespace testing;\n\nnamespace quic {\nnamespace test {\n\nclass StatelessResetGeneratorTest : public Test {};\n\nTEST_F(StatelessResetGeneratorTest, SameSecretSameAddress) {\n  StatelessResetSecret secret;\n  folly::Random::secureRandom(secret.data(), secret.size());\n  folly::SocketAddress address(\"1.2.3.4\", 8080);\n  StatelessResetGenerator generator1(secret, address.getFullyQualified()),\n      generator2(secret, address.getFullyQualified());\n  EXPECT_EQ(\n      generator1.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})),\n      generator2.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})));\n}\n\nTEST_F(StatelessResetGeneratorTest, SameSecretDifferentAddress) {\n  StatelessResetSecret secret;\n  folly::Random::secureRandom(secret.data(), secret.size());\n  folly::SocketAddress address1(\"1.2.3.4\", 8080), address2(\"2.3.4.5\", 8888);\n  StatelessResetGenerator generator1(secret, address1.getFullyQualified()),\n      generator2(secret, address2.getFullyQualified());\n  // I was told by security expert that by the time they collide, I'm already\n  // fired.\n  EXPECT_NE(\n      generator1.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})),\n      generator2.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})));\n}\n\nTEST_F(StatelessResetGeneratorTest, DifferentSecretSameAddress) {\n  // Same here, it will collide some day, but i'd be gone.\n  StatelessResetSecret secret1, secret2;\n  folly::Random::secureRandom(secret1.data(), secret1.size());\n  folly::Random::secureRandom(secret2.data(), secret2.size());\n  folly::SocketAddress address(\"2.3.4.255\", 8088);", "func_src_after": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n#include <quic/server/handshake/StatelessResetGenerator.h>\n#include <folly/Random.h>\n#include <folly/SocketAddress.h>\n#include <folly/portability/GTest.h>\n\nusing namespace testing;\n\nnamespace quic {\nnamespace test {\n\nclass StatelessResetGeneratorTest : public Test {};\n\nTEST_F(StatelessResetGeneratorTest, SameSecretSameAddress) {\n  StatelessResetSecret secret;\n  folly::Random::secureRandom(secret.data(), secret.size());\n  folly::SocketAddress address(\"<IP-Address>\", 8080);\n  StatelessResetGenerator generator1(secret, address.getFullyQualified()),\n      generator2(secret, address.getFullyQualified());\n  EXPECT_EQ(\n      generator1.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})),\n      generator2.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})));\n}\n\nTEST_F(StatelessResetGeneratorTest, SameSecretDifferentAddress) {\n  StatelessResetSecret secret;\n  folly::Random::secureRandom(secret.data(), secret.size());\n  folly::SocketAddress address1(\"<IP-Address>\", 8080), address2(\"<IP-Address>\", 8888);\n  StatelessResetGenerator generator1(secret, address1.getFullyQualified()),\n      generator2(secret, address2.getFullyQualified());\n  // I was told by security expert that by the time they collide, I'm already\n  // fired.\n  EXPECT_NE(\n      generator1.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})),\n      generator2.generateToken(ConnectionId({0x14, 0x35, 0x22, 0x11})));\n}\n\nTEST_F(StatelessResetGeneratorTest, DifferentSecretSameAddress) {\n  // Same here, it will collide some day, but i'd be gone.\n  StatelessResetSecret secret1, secret2;\n  folly::Random::secureRandom(secret1.data(), secret1.size());\n  folly::Random::secureRandom(secret2.data(), secret2.size());\n  folly::SocketAddress address(\"<IP-Address>\", 8088);", "line_changes": {"deleted": [{"line_no": 24, "char_start": 615, "char_end": 664, "line": "  folly::SocketAddress address(\"1.2.3.4\", 8080);\n"}, {"line_no": 36, "char_start": 1118, "char_end": 1195, "line": "  folly::SocketAddress address1(\"1.2.3.4\", 8080), address2(\"2.3.4.5\", 8888);\n"}, {"line_no": 52, "char_start": 1880, "char_end": 1930, "line": "  folly::SocketAddress address(\"2.3.4.255\", 8088);"}], "added": [{"line_no": 25, "char_start": 615, "char_end": 669, "line": "  folly::SocketAddress address(\"<IP-Address>\", 8080);\n"}, {"line_no": 37, "char_start": 1118, "char_end": 1205, "line": "  folly::SocketAddress address1(\"<IP-Address>\", 8080), address2(\"<IP-Address>\", 8888);\n"}, {"line_no": 53, "char_start": 1880, "char_end": 1933, "line": "  folly::SocketAddress address(\"<IP-Address>\", 8088);"}]}, "char_changes": {"deleted": [{"char_start": 615, "char_end": 664, "chars": "  folly::SocketAddress address(\"1.2.3.4\", 8080);\n"}, {"char_start": 1118, "char_end": 1195, "chars": "  folly::SocketAddress address1(\"1.2.3.4\", 8080), address2(\"2.3.4.5\", 8888);\n"}, {"char_start": 1880, "char_end": 1930, "chars": "  folly::SocketAddress address(\"2.3.4.255\", 8088);"}], "added": [{"char_start": 615, "char_end": 669, "chars": "  folly::SocketAddress address(\"<IP-Address>\", 8080);\n"}, {"char_start": 1118, "char_end": 1205, "chars": "  folly::SocketAddress address1(\"<IP-Address>\", 8080), address2(\"<IP-Address>\", 8888);\n"}, {"char_start": 1880, "char_end": 1933, "chars": "  folly::SocketAddress address(\"<IP-Address>\", 8088);"}]}}
{"func_name": 1606, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n\nCopyright (c) 2018, Johnathan Corkery. (jcorkery@umich.edu)\nAll rights reserved.\n\nThis file is part of the Dynacoe project (https://github.com/jcorks/Dynacoe)\nDynacoe was released under the MIT License, as detailed below.\n\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy \nof this software and associated documentation files (the \"Software\"), to deal \nin the Software without restriction, including without limitation the rights \nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell \ncopies of the Software, and to permit persons to whom the Software is furnished \nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall\nbe included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \nDEALINGS IN THE SOFTWARE.\n\n\n\n*/\n\n\n#include <Dynacoe/Util/Filesys.h>\n\nusing namespace std;\nusing namespace Dynacoe;\n\nFilesys::Filesys() {\n\t_init();\n\tChangeDir(GetCWD());\n}\n\nFilesys::Filesys(const std::string & initDir) {\n\t_init();\n\tChangeDir(initDir);\n}\n\nvoid Filesys::_init() {\n\thome = GetCWD();", "func_src_after": "/*\n\nCopyright (c) 2018, Johnathan Corkery. (<EMAIL>)\nAll rights reserved.\n\nThis file is part of the Dynacoe project (https://github.com/jcorks/Dynacoe)\nDynacoe was released under the MIT License, as detailed below.\n\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy \nof this software and associated documentation files (the \"Software\"), to deal \nin the Software without restriction, including without limitation the rights \nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell \ncopies of the Software, and to permit persons to whom the Software is furnished \nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall\nbe included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \nDEALINGS IN THE SOFTWARE.\n\n\n\n*/\n\n\n#include <Dynacoe/Util/Filesys.h>\n\nusing namespace std;\nusing namespace Dynacoe;\n\nFilesys::Filesys() {\n\t_init();\n\tChangeDir(GetCWD());\n}\n\nFilesys::Filesys(const std::string & initDir) {\n\t_init();\n\tChangeDir(initDir);\n}\n\nvoid Filesys::_init() {\n\thome = GetCWD();", "line_changes": {"deleted": [{"line_no": 3, "char_start": 4, "char_end": 64, "line": "Copyright (c) 2018, Johnathan Corkery. (jcorkery@umich.edu)\n"}], "added": [{"line_no": 4, "char_start": 4, "char_end": 53, "line": "Copyright (c) 2018, Johnathan Corkery. (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 4, "char_end": 64, "chars": "Copyright (c) 2018, Johnathan Corkery. (jcorkery@umich.edu)\n"}], "added": [{"char_start": 4, "char_end": 53, "chars": "Copyright (c) 2018, Johnathan Corkery. (<EMAIL>)\n"}]}}
{"func_name": 1635, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "int main()\n{\n\n\tstd::string env_p = GetPwd();\n\tDbContext::ConnectionInformation.url = \"127.0.0.1\";\n\tDbContext::ConnectionInformation.username = \"IVP\";\n\tDbContext::ConnectionInformation.password = env_p;\n\tDbContext::ConnectionInformation.db = \"IVP\";\n\n\toldsig_int = signal(SIGINT, sig);\n\toldsig_kill = signal(SIGKILL, sig);\n\toldsig_quit = signal(SIGQUIT, sig);\n\toldsig_term = signal(SIGTERM, sig);\n\toldsig_segv = signal(SIGSEGV, sig);\n\n\tSystemConfigurationParameterEntry logFileName = SystemConfigurationParameterEntry(CONFIGKEY_LOG_FILE_NAME, \"ivpcore.log\");\n\n\ttry {\n\t\tConfigContext ccontext;\n\t\tccontext.initializeSystemConfigParameter(&logFileName);\n\t} catch (DbException &e) {\n\t\tdhlogging::Logger::getInstance(logFileName.value);\n\t\tLOG_ERROR(\"Unable to initialize core configuration values [\" << e.what() << \"]\");\n\t}\n\n\tdhlogging::Logger::getInstance(logFileName.value);\n\n\t/*\n\t * !!!!!!!!!!!!!!!!!!!!!!!! Any initialization code goes below this line !!!!!!!!!!!!!!!!!!!!!!!!\n\t */\n\n\tdhlogging::Logger::addEventLogEntry(\"--------\", \"------------------------\", LogLevel_Debug);\n\tdhlogging::Logger::addEventLogEntry(LOG_SOURCE_CORE, \"IVP Core Starting\", LogLevel_Info);\n\tsleep(1);\n\n\ttry {\n\t\tPluginContext pcontext;\n\t\tpcontext.setStatusForAllPlugins(IVP_STATUS_STOPPED_DISCONENCTED);\n\t} catch (DbException &e) {\n\t\tLOG_WARN(\"Unable to initialize all plugin statuses to \" << IVP_STATUS_STOPPED_DISCONENCTED << \" [\" << e.what() << \"]\");\n\t}\n\n\taddSystemDefinedMessageTypes();\n\n\tMessageRouterBasic messageRouter;\n\tPluginServer pluginServer(&messageRouter);\n\tPluginMonitor pluginMonitor(&messageRouter);\n\tMessageProfiler messageProfiler(&messageRouter);\n\tHistoryManager historyManager(&messageRouter);\n", "func_src_after": "int main()\n{\n\n\tstd::string env_p = GetPwd();\n\tDbContext::ConnectionInformation.url = \"<IP-Address>\";\n\tDbContext::ConnectionInformation.username = \"IVP\";\n\tDbContext::ConnectionInformation.password = env_p;\n\tDbContext::ConnectionInformation.db = \"IVP\";\n\n\toldsig_int = signal(SIGINT, sig);\n\toldsig_kill = signal(SIGKILL, sig);\n\toldsig_quit = signal(SIGQUIT, sig);\n\toldsig_term = signal(SIGTERM, sig);\n\toldsig_segv = signal(SIGSEGV, sig);\n\n\tSystemConfigurationParameterEntry logFileName = SystemConfigurationParameterEntry(CONFIGKEY_LOG_FILE_NAME, \"ivpcore.log\");\n\n\ttry {\n\t\tConfigContext ccontext;\n\t\tccontext.initializeSystemConfigParameter(&logFileName);\n\t} catch (DbException &e) {\n\t\tdhlogging::Logger::getInstance(logFileName.value);\n\t\tLOG_ERROR(\"Unable to initialize core configuration values [\" << e.what() << \"]\");\n\t}\n\n\tdhlogging::Logger::getInstance(logFileName.value);\n\n\t/*\n\t * !!!!!!!!!!!!!!!!!!!!!!!! Any initialization code goes below this line !!!!!!!!!!!!!!!!!!!!!!!!\n\t */\n\n\tdhlogging::Logger::addEventLogEntry(\"--------\", \"------------------------\", LogLevel_Debug);\n\tdhlogging::Logger::addEventLogEntry(LOG_SOURCE_CORE, \"IVP Core Starting\", LogLevel_Info);\n\tsleep(1);\n\n\ttry {\n\t\tPluginContext pcontext;\n\t\tpcontext.setStatusForAllPlugins(IVP_STATUS_STOPPED_DISCONENCTED);\n\t} catch (DbException &e) {\n\t\tLOG_WARN(\"Unable to initialize all plugin statuses to \" << IVP_STATUS_STOPPED_DISCONENCTED << \" [\" << e.what() << \"]\");\n\t}\n\n\taddSystemDefinedMessageTypes();\n\n\tMessageRouterBasic messageRouter;\n\tPluginServer pluginServer(&messageRouter);\n\tPluginMonitor pluginMonitor(&messageRouter);\n\tMessageProfiler messageProfiler(&messageRouter);\n\tHistoryManager historyManager(&messageRouter);\n", "line_changes": {"deleted": [{"line_no": 5, "char_start": 45, "char_end": 98, "line": "\tDbContext::ConnectionInformation.url = \"127.0.0.1\";\n"}], "added": [{"line_no": 6, "char_start": 45, "char_end": 101, "line": "\tDbContext::ConnectionInformation.url = \"<IP-Address>\";\n"}]}, "char_changes": {"deleted": [{"char_start": 45, "char_end": 98, "chars": "\tDbContext::ConnectionInformation.url = \"127.0.0.1\";\n"}], "added": [{"char_start": 45, "char_end": 101, "chars": "\tDbContext::ConnectionInformation.url = \"<IP-Address>\";\n"}]}}
{"func_name": 1653, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright (C) 1999 Lars Knoll (knoll@kde.org)\n *           (C) 1999 Antti Koivisto (koivisto@kde.org)\n *           (C) 2001 Dirk Mueller (mueller@kde.org)\n *           (C) 2006 Alexey Proskuryakov (ap@webkit.org)\n * Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012 Apple Inc. All rights reserved.\n * Copyright (C) 2008, 2009 Torch Mobile Inc. All rights reserved. (http://www.torchmobile.com/)\n * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies)\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Library General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public License\n * along with this library; see the file COPYING.LIB.  If not, write to\n * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n */\n\n#include \"core/dom/DocumentStyleSheetCollector.h\"\n\n#include \"core/css/CSSStyleSheet.h\"\n#include \"core/css/StyleSheet.h\"\n#include \"core/dom/DocumentStyleSheetCollection.h\"\n\nnamespace blink {\n\nDocumentStyleSheetCollector::DocumentStyleSheetCollector(WillBeHeapVector<RefPtrWillBeMember<StyleSheet>>& sheetsForList, WillBeHeapVector<RefPtrWillBeMember<CSSStyleSheet>>& activeList, WillBeHeapHashSet<RawPtrWillBeMember<Document>>& visitedDocuments)\n    : m_styleSheetsForStyleSheetList(sheetsForList)\n    , m_activeAuthorStyleSheets(activeList)\n    , m_visitedDocuments(visitedDocuments)\n{\n}\n\nDocumentStyleSheetCollector::~DocumentStyleSheetCollector()\n{\n}\n\nvoid DocumentStyleSheetCollector::appendActiveStyleSheets(const WillBeHeapVector<RefPtrWillBeMember<CSSStyleSheet>>& sheets)\n{\n    m_activeAuthorStyleSheets.appendVector(sheets);\n}\n", "func_src_after": "/*\n * Copyright (C) 1999 Lars Knoll (<EMAIL>)\n *           (C) 1999 Antti Koivisto (<EMAIL>)\n *           (C) 2001 Dirk Mueller (<EMAIL>)\n *           (C) 2006 Alexey Proskuryakov (<EMAIL>)\n * Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012 Apple Inc. All rights reserved.\n * Copyright (C) 2008, 2009 Torch Mobile Inc. All rights reserved. (http://www.torchmobile.com/)\n * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies)\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Library General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public License\n * along with this library; see the file COPYING.LIB.  If not, write to\n * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n */\n\n#include \"core/dom/DocumentStyleSheetCollector.h\"\n\n#include \"core/css/CSSStyleSheet.h\"\n#include \"core/css/StyleSheet.h\"\n#include \"core/dom/DocumentStyleSheetCollection.h\"\n\nnamespace blink {\n\nDocumentStyleSheetCollector::DocumentStyleSheetCollector(WillBeHeapVector<RefPtrWillBeMember<StyleSheet>>& sheetsForList, WillBeHeapVector<RefPtrWillBeMember<CSSStyleSheet>>& activeList, WillBeHeapHashSet<RawPtrWillBeMember<Document>>& visitedDocuments)\n    : m_styleSheetsForStyleSheetList(sheetsForList)\n    , m_activeAuthorStyleSheets(activeList)\n    , m_visitedDocuments(visitedDocuments)\n{\n}\n\nDocumentStyleSheetCollector::~DocumentStyleSheetCollector()\n{\n}\n\nvoid DocumentStyleSheetCollector::appendActiveStyleSheets(const WillBeHeapVector<RefPtrWillBeMember<CSSStyleSheet>>& sheets)\n{\n    m_activeAuthorStyleSheets.appendVector(sheets);\n}\n", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 52, "line": " * Copyright (C) 1999 Lars Knoll (knoll@kde.org)\n"}, {"line_no": 4, "char_start": 46, "char_end": 102, "line": " *           (C) 1999 Antti Koivisto (koivisto@kde.org)\n"}, {"line_no": 6, "char_start": 93, "char_end": 146, "line": " *           (C) 2001 Dirk Mueller (mueller@kde.org)\n"}, {"line_no": 8, "char_start": 138, "char_end": 196, "line": " *           (C) 2006 Alexey Proskuryakov (ap@webkit.org)\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 46, "line": " * Copyright (C) 1999 Lars Knoll (<EMAIL>)\n"}, {"line_no": 5, "char_start": 46, "char_end": 93, "line": " *           (C) 1999 Antti Koivisto (<EMAIL>)\n"}, {"line_no": 7, "char_start": 93, "char_end": 138, "line": " *           (C) 2001 Dirk Mueller (<EMAIL>)\n"}, {"line_no": 9, "char_start": 138, "char_end": 190, "line": " *           (C) 2006 Alexey Proskuryakov (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 52, "chars": " * Copyright (C) 1999 Lars Knoll (knoll@kde.org)\n"}, {"char_start": 46, "char_end": 102, "chars": " *           (C) 1999 Antti Koivisto (koivisto@kde.org)\n"}, {"char_start": 93, "char_end": 146, "chars": " *           (C) 2001 Dirk Mueller (mueller@kde.org)\n"}, {"char_start": 138, "char_end": 196, "chars": " *           (C) 2006 Alexey Proskuryakov (ap@webkit.org)\n"}], "added": [{"char_start": 3, "char_end": 46, "chars": " * Copyright (C) 1999 Lars Knoll (<EMAIL>)\n"}, {"char_start": 46, "char_end": 93, "chars": " *           (C) 1999 Antti Koivisto (<EMAIL>)\n"}, {"char_start": 93, "char_end": 138, "chars": " *           (C) 2001 Dirk Mueller (<EMAIL>)\n"}, {"char_start": 138, "char_end": 190, "chars": " *           (C) 2006 Alexey Proskuryakov (<EMAIL>)\n"}]}}
{"func_name": 1665, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\tmongocxx::collection mentors = db[\"mentors\"];\n\tmentors.drop();\n\n\tcreateMentor(\"yanyan\", \"ylegoc@gmail.com\", 5.7131486, 45.1798167, 5.6913905, 45.2066135, mentors);\n\tcreateMentor(\"esrf\", \"mail@esrf.org\", 5.7300543, 45.1906798, 5.7031652, 45.2045723, mentors);\n\tcreateMentor(\"campus\", \"mail@campus.org\", 5.716966, 45.1806586, 5.7650806, 45.1900485, mentors);\n\n\treturn 0;\n}\n", "func_src_after": "\tmongocxx::collection mentors = db[\"mentors\"];\n\tmentors.drop();\n\n\tcreateMentor(\"yanyan\", \"<EMAIL>\", 5.7131486, 45.1798167, 5.6913905, 45.2066135, mentors);\n\tcreateMentor(\"esrf\", \"<EMAIL>\", 5.7300543, 45.1906798, 5.7031652, 45.2045723, mentors);\n\tcreateMentor(\"campus\", \"<EMAIL>\", 5.716966, 45.1806586, 5.7650806, 45.1900485, mentors);\n\n\treturn 0;\n}\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 65, "char_end": 165, "line": "\tcreateMentor(\"yanyan\", \"ylegoc@gmail.com\", 5.7131486, 45.1798167, 5.6913905, 45.2066135, mentors);\n"}, {"line_no": 6, "char_start": 156, "char_end": 251, "line": "\tcreateMentor(\"esrf\", \"mail@esrf.org\", 5.7300543, 45.1906798, 5.7031652, 45.2045723, mentors);\n"}, {"line_no": 8, "char_start": 245, "char_end": 343, "line": "\tcreateMentor(\"campus\", \"mail@campus.org\", 5.716966, 45.1806586, 5.7650806, 45.1900485, mentors);\n"}], "added": [{"line_no": 5, "char_start": 65, "char_end": 156, "line": "\tcreateMentor(\"yanyan\", \"<EMAIL>\", 5.7131486, 45.1798167, 5.6913905, 45.2066135, mentors);\n"}, {"line_no": 7, "char_start": 156, "char_end": 245, "line": "\tcreateMentor(\"esrf\", \"<EMAIL>\", 5.7300543, 45.1906798, 5.7031652, 45.2045723, mentors);\n"}, {"line_no": 9, "char_start": 245, "char_end": 335, "line": "\tcreateMentor(\"campus\", \"<EMAIL>\", 5.716966, 45.1806586, 5.7650806, 45.1900485, mentors);\n"}]}, "char_changes": {"deleted": [{"char_start": 65, "char_end": 165, "chars": "\tcreateMentor(\"yanyan\", \"ylegoc@gmail.com\", 5.7131486, 45.1798167, 5.6913905, 45.2066135, mentors);\n"}, {"char_start": 156, "char_end": 251, "chars": "\tcreateMentor(\"esrf\", \"mail@esrf.org\", 5.7300543, 45.1906798, 5.7031652, 45.2045723, mentors);\n"}, {"char_start": 245, "char_end": 343, "chars": "\tcreateMentor(\"campus\", \"mail@campus.org\", 5.716966, 45.1806586, 5.7650806, 45.1900485, mentors);\n"}], "added": [{"char_start": 65, "char_end": 156, "chars": "\tcreateMentor(\"yanyan\", \"<EMAIL>\", 5.7131486, 45.1798167, 5.6913905, 45.2066135, mentors);\n"}, {"char_start": 156, "char_end": 245, "chars": "\tcreateMentor(\"esrf\", \"<EMAIL>\", 5.7300543, 45.1906798, 5.7031652, 45.2045723, mentors);\n"}, {"char_start": 245, "char_end": 335, "chars": "\tcreateMentor(\"campus\", \"<EMAIL>\", 5.716966, 45.1806586, 5.7650806, 45.1900485, mentors);\n"}]}}
{"func_name": 1736, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Front end application for brute-forcing CRC's of known good\n * test vectors.\n *\n * Original Author: Martin Schobert <schobert@sitsec.net>\n * Modified by MarytnP <git@disputedip.com>\n *\n *    Copyright Martin Schobert and MartynP 2012 - 2016.\n * Distributed under the Boost Software License, Version 1.0.\n *    (See accompanying file LICENSE_1_0.txt or copy at\n *          http://www.boost.org/LICENSE_1_0.txt)\n *\n */\n\n#include <sys/time.h>\n#include <iostream>\n#include <fstream>\n#include <list>\n#include <string>\n#include <stdexcept>\n#include <tr1/memory>\n#include <boost/dynamic_bitset.hpp>\n#include <boost/program_options.hpp>\n#include <boost/foreach.hpp>\n#include <boost/regex.hpp>\n#include <boost/integer.hpp>\n#include <boost/thread.hpp>\n#include <boost/format.hpp>\n#include <boost/filesystem.hpp>\n\n#include \"bruteforce-crc.hpp\"\n\n#include \"bf_crc.hpp\"\n\nnamespace po = boost::program_options;\n\n\nstd::istream& operator>>(std::istream& in, my_crc_basic::FEED_TYPE & feed_type) {\n  std::string token;\n  in >> token;\n  if (token == \"auto\")\n    feed_type = my_crc_basic::AUTO;\n  else if (token == \"linear-forward\")\n    feed_type = my_crc_basic::LINEAR_FORWARD;\n  else if (token == \"linear-reversed\")\n    feed_type = my_crc_basic::LINEAR_REVERSED;\n  else if (token == \"bytewise-reversed\")\n    feed_type = my_crc_basic::BYTEWISE_REVERSED;\n\n  else throw boost::program_options::validation_error(boost::program_options::validation_error::invalid_option_value, \"Invalid feed type\");", "func_src_after": "/*\n * Front end application for brute-forcing CRC's of known good\n * test vectors.\n *\n * Original Author: Martin Schobert <<EMAIL>>\n * Modified by MarytnP <<EMAIL>>\n *\n *    Copyright Martin Schobert and MartynP 2012 - 2016.\n * Distributed under the Boost Software License, Version 1.0.\n *    (See accompanying file LICENSE_1_0.txt or copy at\n *          http://www.boost.org/LICENSE_1_0.txt)\n *\n */\n\n#include <sys/time.h>\n#include <iostream>\n#include <fstream>\n#include <list>\n#include <string>\n#include <stdexcept>\n#include <tr1/memory>\n#include <boost/dynamic_bitset.hpp>\n#include <boost/program_options.hpp>\n#include <boost/foreach.hpp>\n#include <boost/regex.hpp>\n#include <boost/integer.hpp>\n#include <boost/thread.hpp>\n#include <boost/format.hpp>\n#include <boost/filesystem.hpp>\n\n#include \"bruteforce-crc.hpp\"\n\n#include \"bf_crc.hpp\"\n\nnamespace po = boost::program_options;\n\n\nstd::istream& operator>>(std::istream& in, my_crc_basic::FEED_TYPE & feed_type) {\n  std::string token;\n  in >> token;\n  if (token == \"auto\")\n    feed_type = my_crc_basic::AUTO;\n  else if (token == \"linear-forward\")\n    feed_type = my_crc_basic::LINEAR_FORWARD;\n  else if (token == \"linear-reversed\")\n    feed_type = my_crc_basic::LINEAR_REVERSED;\n  else if (token == \"bytewise-reversed\")\n    feed_type = my_crc_basic::BYTEWISE_REVERSED;\n\n  else throw boost::program_options::validation_error(boost::program_options::validation_error::invalid_option_value, \"Invalid feed type\");", "line_changes": {"deleted": [{"line_no": 5, "char_start": 86, "char_end": 144, "line": " * Original Author: Martin Schobert <schobert@sitsec.net>\n"}, {"line_no": 7, "char_start": 132, "char_end": 176, "line": " * Modified by MarytnP <git@disputedip.com>\n"}], "added": [{"line_no": 6, "char_start": 86, "char_end": 132, "line": " * Original Author: Martin Schobert <<EMAIL>>\n"}, {"line_no": 8, "char_start": 132, "char_end": 165, "line": " * Modified by MarytnP <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 86, "char_end": 144, "chars": " * Original Author: Martin Schobert <schobert@sitsec.net>\n"}, {"char_start": 132, "char_end": 176, "chars": " * Modified by MarytnP <git@disputedip.com>\n"}], "added": [{"char_start": 86, "char_end": 132, "chars": " * Original Author: Martin Schobert <<EMAIL>>\n"}, {"char_start": 132, "char_end": 165, "chars": " * Modified by MarytnP <<EMAIL>>\n"}]}}
{"func_name": 1795, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿/*! ***********************************************************************************************\n *\n * \\file        jwt.cpp\n * \\brief       JWT 函数源文件。\n *\n * \\version     0.1\n * \\date        2020-07-30\n *\n * \\author      Roy QIU <karoyqiu@gmail.com>\n * \\copyright   © 2020 开心网络。\n *\n **************************************************************************************************/\n#include \"jwt.h\"\n\n#include <ctime>\n\n#include <openssl/bio.h>\n#include <openssl/evp.h>\n#include <openssl/pem.h>\n#include <cppcodec/base64_url_unpadded.hpp>\n\n#include \"rapidjsonhelpers.h\"\n#include \"utils.h\"\n\nnamespace jwt {\n\n/// JWK 公钥\nstatic const char JWK_PUBLIC[] =\nR\"(-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhCv3iNGsEa7pJ6yprVEN\ncMwgRJNjHmlNM5v/gzat5zqkt3Vt29/9Afy89cyQd3emKskKQoNoEHfl48NWjFsO\n45Bgwx5ysqNONGcn2+eBTQ2UbuEyu6lPX1cWSkFNMcHkWIYCHXXWcqJ24mAuwDLM\nWY4uSu/THYdB3zlCIvADdW8c8BPJP9O9qz92CThoOnd00e56KMnho6kY3IT+V7Uq\nGXEaNi58LhCbuxqezi64A50afEv8Qyw5HZNADZt/Z+wOv9cth+OdsT8cwA/BlWbM\nfjUjCDD70qsaPbT/uZrzcLDKdywzb/a+D75DDlLAmEby/CsUHch2PDZScylJavj0\nxQIDAQAB\n-----END PUBLIC KEY-----)\";\n\n\n// Base64Url 解码\ntemplate<typename Result = std::string>\ninline Result base64_decode(const std::string &encoded)\n{\n    return cppcodec::base64_url_unpadded::decode<Result>(encoded);\n}\n\n\n// 判断头是否有效\nstatic bool is_header_valid(std::string &header)\n{", "func_src_after": "﻿/*! ***********************************************************************************************\n *\n * \\file        jwt.cpp\n * \\brief       JWT 函数源文件。\n *\n * \\version     0.1\n * \\date        2020-07-30\n *\n * \\author      Roy QIU <<EMAIL>>\n * \\copyright   © 2020 开心网络。\n *\n **************************************************************************************************/\n#include \"jwt.h\"\n\n#include <ctime>\n\n#include <openssl/bio.h>\n#include <openssl/evp.h>\n#include <openssl/pem.h>\n#include <cppcodec/base64_url_unpadded.hpp>\n\n#include \"rapidjsonhelpers.h\"\n#include \"utils.h\"\n\nnamespace jwt {\n\n/// JWK 公钥\nstatic const char JWK_PUBLIC[] =\nR\"(-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhCv3iNGsEa7pJ6yprVEN\ncMwgRJNjHmlNM5v/gzat5zqkt3Vt29/9Afy89cyQd3emKskKQoNoEHfl48NWjFsO\n45Bgwx5ysqNONGcn2+eBTQ2UbuEyu6lPX1cWSkFNMcHkWIYCHXXWcqJ24mAuwDLM\nWY4uSu/THYdB3zlCIvADdW8c8BPJP9O9qz92CThoOnd00e56KMnho6kY3IT+V7Uq\nGXEaNi58LhCbuxqezi64A50afEv8Qyw5HZNADZt/Z+wOv9cth+OdsT8cwA/BlWbM\nfjUjCDD70qsaPbT/uZrzcLDKdywzb/a+D75DDlLAmEby/CsUHch2PDZScylJavj0\nxQIDAQAB\n-----END PUBLIC KEY-----)\";\n\n\n// Base64Url 解码\ntemplate<typename Result = std::string>\ninline Result base64_decode(const std::string &encoded)\n{\n    return cppcodec::base64_url_unpadded::decode<Result>(encoded);\n}\n\n\n// 判断头是否有效\nstatic bool is_header_valid(std::string &header)\n{", "line_changes": {"deleted": [{"line_no": 9, "char_start": 208, "char_end": 253, "line": " * \\author      Roy QIU <karoyqiu@gmail.com>\n"}], "added": [{"line_no": 10, "char_start": 208, "char_end": 242, "line": " * \\author      Roy QIU <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 208, "char_end": 253, "chars": " * \\author      Roy QIU <karoyqiu@gmail.com>\n"}], "added": [{"char_start": 208, "char_end": 242, "chars": " * \\author      Roy QIU <<EMAIL>>\n"}]}}
{"func_name": 1836, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                new() {Date = new DateTime(2020, 1, 1), Description = \"Appointment 1\"},\n                new() {Date = new DateTime(2020, 1, 2), Description = \"Appointment 2\"},\n            });\n\n            var template = new TemplateEz(new TemplateDef[]\n            {\n                new() { Name = \"Template1\", ModelType = \"IEnumerable<TemplateEzTest.TestDataTypes.Appointment>\", TemplateText = templateText1.ToList() },\n                new() { Name = \"Template2\", ModelType = \"TemplateEzTest.TestDataTypes.Person\", TemplateText = templateText2.ToList() },\n            });\n\n            var result = template.Execute(model, \"Template2\").ToList();\n\n            Assert.True(CompareStrList(result, \n                \"Dear Mary Jones\",\n                \"Your date of birth is 02/22/2002\",\n                \"<p>You have a few up and comping appointments</p>\",\n                \"<ul>\",\n                \"<li>01/01/2020: Appointment 1</li>\",\n                \"<li>01/02/2020: Appointment 2</li>\",\n                \"</ul>\"\n                ));\n        }\n\n\n        [Fact]\n        public void DeeplyNestedTemplateCall()\n        {\n            var templateText1 = new[] {\n                \"#using System.Linq\",\n                \"#using System.Linq\",\n                \"#if(Model == null || !Model.Any())  \",\n                \"\",\n                \"#else\",\n                \"#{\",\n                \"<p>Employees</p>\",\n                \"<ul>\",\n                \"#foreach(var empl in Model)\",\n                \"#{\",\n                \"<li>\",\n                \"<div>@(empl.ToString())</div>\",\n                \"#template(Template2, empl.Appointments)\",\n                \"</li>\",\n                \"#}\",\n                \"</ul>\",\n                \"#}\"\n            };\n\n\n            var templateText2 = new[] {\n                \"#using System.Linq\",", "func_src_after": "                new() {Date = new DateTime(2020, 1, 1), Description = \"Appointment 1\"},\n                new() {Date = new DateTime(2020, 1, 2), Description = \"Appointment 2\"},\n            });\n\n            var template = new TemplateEz(new TemplateDef[]\n            {\n                new() { Name = \"Template1\", ModelType = \"IEnumerable<TemplateEzTest.TestDataTypes.Appointment>\", TemplateText = templateText1.ToList() },\n                new() { Name = \"Template2\", ModelType = \"TemplateEzTest.TestDataTypes.Person\", TemplateText = templateText2.ToList() },\n            });\n\n            var result = template.Execute(model, \"Template2\").ToList();\n\n            Assert.True(CompareStrList(result, \n                \"Dear Mary Jones\",\n                \"Your date of birth is 02/22/2002\",\n                \"<p>You have a few up and comping appointments</p>\",\n                \"<ul>\",\n                \"<li>01/01/2020: Appointment 1</li>\",\n                \"<li>01/02/2020: Appointment 2</li>\",\n                \"</ul>\"\n                ));\n        }\n\n\n        [Fact]\n        public void DeeplyNestedTemplateCall()\n        {\n            var templateText1 = new[] {\n                \"#using System.Linq\",\n                \"#using System.Linq\",\n                \"#if(Model == null || !Model.Any())  \",\n                \"\",\n                \"#else\",\n                \"#{\",\n                \"<p>Employees</p>\",\n                \"<ul>\",\n                \"#foreach(var empl in Model)\",\n                \"#{\",\n                \"<li>\",\n                \"<div>@(empl.ToString())</div>\",\n                \"#template(Template2, empl.Appointments)\",\n                \"</li>\",\n                \"#}\",\n                \"</ul>\",\n                \"#}\"\n            };\n\n\n            var templateText2 = new[] {\n                \"#using System.Linq\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1845, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                    @\"14968aa3cf2a27335f71d26386de0a5c4073835d\"),\n            Tuple.Create(\n                    @\"https://github.com/wycats/handlebars.js.git\",\n                    @\"085e5e1937b442a4d4add5525db2627e825538aa\"),\n            Tuple.Create(\n                    @\"https://github.com/NUKnightLab/TimelineJS.git\",\n                    @\"cede826f6212af83361ecd571481b5bb95f7a610\"),\n            Tuple.Create(\n                    @\"https://github.com/DmitryBaranovskiy/raphael.git\",\n                    @\"5234aa33d04be07b0fea7627504ab4b53d872e19\"),\n            Tuple.Create(\n                    @\"https://github.com/fgnass/spin.js.git\",\n                    @\"cdf391a8e41b6ad8f902dc9a10cae80486d472ef\"),\n            Tuple.Create(\n                    @\"https://github.com/balderdashy/sails.git\",\n                    @\"6adfdf85eebdc6e001bacdc5098a58a1cd93aa38\"),\n            Tuple.Create(\n                    @\"https://github.com/xing/wysihtml5.git\",\n                    @\"56960b31adc37e07797382d8e8b10109f206b19c\"),\n            Tuple.Create(\n                    @\"https://github.com/jrburke/requirejs.git\",\n                    @\"f1c533d181da5b759adc7f6297e87d556ef02ce2\"),\n            Tuple.Create(\n                    @\"https://github.com/enyo/dropzone.git\",\n                    @\"ac87ee44d7219afb091e22db0748e58ca989b466\"),\n            Tuple.Create(\n                    @\"https://github.com/videojs/video.js.git\",\n                    @\"3bafdeef51d9f135de13fe4c51158942031ce6c2\"),\n            Tuple.Create(\n                    @\"https://github.com/Widen/fine-uploader.git\",\n                    @\"55166f33438e4915045f17d8c4e1adea008af19b\"),\n            Tuple.Create(\n                    @\"https://github.com/guillaumepotier/Parsley.js.git\",\n                    @\"2f5ebd0422a2c1207738c212563b5da16b2bb032\"),\n            Tuple.Create(\n                    @\"https://github.com/mishoo/UglifyJS.git\",\n                    @\"2bc1d02363db3798d5df41fb5059a19edca9b7eb\"),\n            Tuple.Create(\n                    @\"https://github.com/ccampbell/mousetrap.git\",\n                    @\"afaaf95f984f2e2a80670b980d421683ac42eed6\"),\n            Tuple.Create(\n                    @\"https://github.com/marionettejs/backbone.marionette.git\",\n                    @\"84e735d7d7cf85957fe08caebcd086cf7ee11e42\"),\n            Tuple.Create(\n                    @\"https://github.com/LearnBoost/mongoose.git\",\n                    @\"f243bc9453a3c43cd00f89d0df0f7feb097f3668\"),\n            Tuple.Create(\n                    @\"https://github.com/Kicksend/mailcheck.git\",\n                    @\"5ff8678cc4b7ec36c4442ccc6213910aa734f4d7\"),\n            Tuple.Create(", "func_src_after": "                    @\"14968aa3cf2a27335f71d26386de0a5c4073835d\"),\n            Tuple.Create(\n                    @\"https://github.com/wycats/handlebars.js.git\",\n                    @\"085e5e1937b442a4d4add5525db2627e825538aa\"),\n            Tuple.Create(\n                    @\"https://github.com/NUKnightLab/TimelineJS.git\",\n                    @\"cede826f6212af83361ecd571481b5bb95f7a610\"),\n            Tuple.Create(\n                    @\"https://github.com/DmitryBaranovskiy/raphael.git\",\n                    @\"5234aa33d04be07b0fea7627504ab4b53d872e19\"),\n            Tuple.Create(\n                    @\"https://github.com/fgnass/spin.js.git\",\n                    @\"cdf391a8e41b6ad8f902dc9a10cae80486d472ef\"),\n            Tuple.Create(\n                    @\"https://github.com/balderdashy/sails.git\",\n                    @\"6adfdf85eebdc6e001bacdc5098a58a1cd93aa38\"),\n            Tuple.Create(\n                    @\"https://github.com/xing/wysihtml5.git\",\n                    @\"56960b31adc37e07797382d8e8b10109f206b19c\"),\n            Tuple.Create(\n                    @\"https://github.com/jrburke/requirejs.git\",\n                    @\"f1c533d181da5b759adc7f6297e87d556ef02ce2\"),\n            Tuple.Create(\n                    @\"https://github.com/enyo/dropzone.git\",\n                    @\"ac87ee44d7219afb091e22db0748e58ca989b466\"),\n            Tuple.Create(\n                    @\"https://github.com/videojs/video.js.git\",\n                    @\"3bafdeef51d9f135de13fe4c51158942031ce6c2\"),\n            Tuple.Create(\n                    @\"https://github.com/Widen/fine-uploader.git\",\n                    @\"55166f33438e4915045f17d8c4e1adea008af19b\"),\n            Tuple.Create(\n                    @\"https://github.com/guillaumepotier/Parsley.js.git\",\n                    @\"2f5ebd0422a2c1207738c212563b5da16b2bb032\"),\n            Tuple.Create(\n                    @\"https://github.com/mishoo/UglifyJS.git\",\n                    @\"2bc1d02363db3798d5df41fb5059a19edca9b7eb\"),\n            Tuple.Create(\n                    @\"https://github.com/ccampbell/mousetrap.git\",\n                    @\"afaaf95f984f2e2a80670b980d421683ac42eed6\"),\n            Tuple.Create(\n                    @\"https://github.com/marionettejs/backbone.marionette.git\",\n                    @\"84e735d7d7cf85957fe08caebcd086cf7ee11e42\"),\n            Tuple.Create(\n                    @\"https://github.com/LearnBoost/mongoose.git\",\n                    @\"f243bc9453a3c43cd00f89d0df0f7feb097f3668\"),\n            Tuple.Create(\n                    @\"https://github.com/Kicksend/mailcheck.git\",\n                    @\"5ff8678cc4b7ec36c4442ccc6213910aa734f4d7\"),\n            Tuple.Create(", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1846, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            Tuple.Create(\n                    @\"https://github.com/alvarotrigo/fullPage.js.git\",\n                    @\"9c149a3b43fd5450f2cc6d0dc7cd7bc5b6edd01e\"),\n            Tuple.Create(\n                    @\"https://github.com/flot/flot.git\",\n                    @\"3aec7ce0bd975e452ff49107905a06146fe9e560\")\n        };\n\n        #endregion\n\n        private const string LangName = \"JavaScript\";\n\n        private static IEnumerable<TestCaseData> TestCases {\n            get {\n                foreach (var exp in Experiments) {\n                    foreach (var learningSet in LearningSets.Skip(SkipCount).Take(TakeCount)) {\n                        var url = learningSet.Item1;\n                        var path = Fixture.GetGitRepositoryPath(url);\n                        File.AppendAllText(@\"C:\\Users\\exKAZUu\\Desktop\\Debug.txt\", url + \"Clone\\r\\n\");\n                        Git.Clone(path, url);\n                        Git.Checkout(path, learningSet.Item2);\n                        File.AppendAllText(@\"C:\\Users\\exKAZUu\\Desktop\\Debug.txt\", \"Done\\r\\n\");\n                        yield return new TestCaseData(exp, path);\n                    }\n                }\n            }\n        }\n\n        protected override string SearchPattern {\n            get { return \"*.js\"; }\n        }\n\n        [Test]\n        public void TestApply() {\n            var seedPaths = new List<string> { Fixture.GetInputCodePath(LangName, \"seed.js\") };\n            LearnAndApply(seedPaths, LearningSets, Experiments);\n        }\n\n        //[Test, TestCaseSource(\"TestCases\")]\n        public void Test(LearningExperiment exp, string projectPath) {\n            var seedPaths = new List<string> { Fixture.GetInputCodePath(LangName, \"seed.js\") };\n            Learn(seedPaths, exp, projectPath);\n        }\n    }\n\n    public class JavaScriptSuperComplexBranchExperiment : LearningExperiment {\n        public JavaScriptSuperComplexBranchExperiment() : base(\"expression\", \"assignmentExpression\") {}\n\n        protected override CstGenerator Generator {\n            get { return JavaScriptExperiment.Generator; }", "func_src_after": "            Tuple.Create(\n                    @\"https://github.com/alvarotrigo/fullPage.js.git\",\n                    @\"9c149a3b43fd5450f2cc6d0dc7cd7bc5b6edd01e\"),\n            Tuple.Create(\n                    @\"https://github.com/flot/flot.git\",\n                    @\"3aec7ce0bd975e452ff49107905a06146fe9e560\")\n        };\n\n        #endregion\n\n        private const string LangName = \"JavaScript\";\n\n        private static IEnumerable<TestCaseData> TestCases {\n            get {\n                foreach (var exp in Experiments) {\n                    foreach (var learningSet in LearningSets.Skip(SkipCount).Take(TakeCount)) {\n                        var url = learningSet.Item1;\n                        var path = Fixture.GetGitRepositoryPath(url);\n                        File.AppendAllText(@\"C:\\Users\\exKAZUu\\Desktop\\Debug.txt\", url + \"Clone\\r\\n\");\n                        Git.Clone(path, url);\n                        Git.Checkout(path, learningSet.Item2);\n                        File.AppendAllText(@\"C:\\Users\\exKAZUu\\Desktop\\Debug.txt\", \"Done\\r\\n\");\n                        yield return new TestCaseData(exp, path);\n                    }\n                }\n            }\n        }\n\n        protected override string SearchPattern {\n            get { return \"*.js\"; }\n        }\n\n        [Test]\n        public void TestApply() {\n            var seedPaths = new List<string> { Fixture.GetInputCodePath(LangName, \"seed.js\") };\n            LearnAndApply(seedPaths, LearningSets, Experiments);\n        }\n\n        //[Test, TestCaseSource(\"TestCases\")]\n        public void Test(LearningExperiment exp, string projectPath) {\n            var seedPaths = new List<string> { Fixture.GetInputCodePath(LangName, \"seed.js\") };\n            Learn(seedPaths, exp, projectPath);\n        }\n    }\n\n    public class JavaScriptSuperComplexBranchExperiment : LearningExperiment {\n        public JavaScriptSuperComplexBranchExperiment() : base(\"expression\", \"assignmentExpression\") {}\n\n        protected override CstGenerator Generator {\n            get { return JavaScriptExperiment.Generator; }", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 1905, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿using System;\nusing System.Text;\nusing System.Collections.Generic;\nusing System.Linq;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\nusing System.IO;\nusing Newtonsoft.Json;\nusing System.Net;\n\nnamespace Ipfs\n{\n\n    [TestClass]\n    public class MultiAddressTest\n    {\n        const string somewhere = \"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n        const string nowhere = \"/ip4/10.1.10.11/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n\n        [TestMethod]\n        public void Parsing()\n        {\n            var a = new MultiAddress(somewhere);\n            Assert.AreEqual(3, a.Protocols.Count);\n            Assert.AreEqual(\"ip4\", a.Protocols[0].Name);\n            Assert.AreEqual(\"10.1.10.10\", a.Protocols[0].Value);\n            Assert.AreEqual(\"tcp\", a.Protocols[1].Name);\n            Assert.AreEqual(\"29087\", a.Protocols[1].Value);\n            Assert.AreEqual(\"ipfs\", a.Protocols[2].Name);\n            Assert.AreEqual(\"QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\", a.Protocols[2].Value);\n\n            Assert.AreEqual(0, new MultiAddress((string)null).Protocols.Count);\n            Assert.AreEqual(0, new MultiAddress(\"\").Protocols.Count);\n            Assert.AreEqual(0, new MultiAddress(\"  \").Protocols.Count);\n        }\n\n        [TestMethod]\n        public void Unknown_Protocol_Name()\n        {\n            ExceptionAssert.Throws<FormatException>(() => new MultiAddress(\"/foobar/123\"));\n        }\n\n        [TestMethod]\n        public void Missing_Protocol_Name()\n        {\n            ExceptionAssert.Throws<FormatException>(() => new MultiAddress(\"/\"));\n        }\n\n        [TestMethod]\n        public new void ToString()\n        {", "func_src_after": "﻿using System;\nusing System.Text;\nusing System.Collections.Generic;\nusing System.Linq;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\nusing System.IO;\nusing Newtonsoft.Json;\nusing System.Net;\n\nnamespace Ipfs\n{\n\n    [TestClass]\n    public class MultiAddressTest\n    {\n        const string somewhere = \"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n        const string nowhere = \"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n\n        [TestMethod]\n        public void Parsing()\n        {\n            var a = new MultiAddress(somewhere);\n            Assert.AreEqual(3, a.Protocols.Count);\n            Assert.AreEqual(\"ip4\", a.Protocols[0].Name);\n            Assert.AreEqual(\"<IP-Address>\", a.Protocols[0].Value);\n            Assert.AreEqual(\"tcp\", a.Protocols[1].Name);\n            Assert.AreEqual(\"29087\", a.Protocols[1].Value);\n            Assert.AreEqual(\"ipfs\", a.Protocols[2].Name);\n            Assert.AreEqual(\"QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\", a.Protocols[2].Value);\n\n            Assert.AreEqual(0, new MultiAddress((string)null).Protocols.Count);\n            Assert.AreEqual(0, new MultiAddress(\"\").Protocols.Count);\n            Assert.AreEqual(0, new MultiAddress(\"  \").Protocols.Count);\n        }\n\n        [TestMethod]\n        public void Unknown_Protocol_Name()\n        {\n            ExceptionAssert.Throws<FormatException>(() => new MultiAddress(\"/foobar/123\"));\n        }\n\n        [TestMethod]\n        public void Missing_Protocol_Name()\n        {\n            ExceptionAssert.Throws<FormatException>(() => new MultiAddress(\"/\"));\n        }\n\n        [TestMethod]\n        public new void ToString()\n        {", "line_changes": {"deleted": [{"line_no": 16, "char_start": 272, "char_end": 386, "line": "        const string somewhere = \"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"line_no": 18, "char_start": 388, "char_end": 500, "line": "        const string nowhere = \"/ip4/10.1.10.11/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"line_no": 27, "char_start": 721, "char_end": 786, "line": "            Assert.AreEqual(\"10.1.10.10\", a.Protocols[0].Value);\n"}], "added": [{"line_no": 17, "char_start": 272, "char_end": 388, "line": "        const string somewhere = \"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"line_no": 19, "char_start": 388, "char_end": 502, "line": "        const string nowhere = \"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"line_no": 28, "char_start": 721, "char_end": 788, "line": "            Assert.AreEqual(\"<IP-Address>\", a.Protocols[0].Value);\n"}]}, "char_changes": {"deleted": [{"char_start": 272, "char_end": 386, "chars": "        const string somewhere = \"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"char_start": 388, "char_end": 500, "chars": "        const string nowhere = \"/ip4/10.1.10.11/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"char_start": 721, "char_end": 786, "chars": "            Assert.AreEqual(\"10.1.10.10\", a.Protocols[0].Value);\n"}], "added": [{"char_start": 272, "char_end": 388, "chars": "        const string somewhere = \"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"char_start": 388, "char_end": 502, "chars": "        const string nowhere = \"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\";\n"}, {"char_start": 721, "char_end": 788, "chars": "            Assert.AreEqual(\"<IP-Address>\", a.Protocols[0].Value);\n"}]}}
{"func_name": 1906, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                \"/ip6/3ffe:1900:4545:3:200:f8ff:fe21:67cf/sctp/8001\",\n                \"/ip6/3ffe:1900:4545:3:200:f8ff:fe21:67cf/dccp/8001\",\n                \"/ip4/1.2.3.4/tcp/80/ws\",\n                \"/libp2p-webrtc-star/ip4/127.0.0.1/tcp/9090/ws/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n                \"/ip4/127.0.0.1/tcp/1234/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n                \"/ip4/1.2.3.4/tcp/80/udt\",\n                \"/ip4/1.2.3.4/tcp/80/utp\",\n                \"/onion/aaimaq4ygg2iegci:80\",\n                \"/onion/timaq4ygg2iegci7:80/http\",\n                \"/p2p-circuit/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n                \"/dns/ipfs.io\",\n                \"/dns4/ipfs.io\",\n                \"/dns6/ipfs.io\",\n                \"/dns4/wss0.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic\",\n                \"/ip4/127.0.0.0/ipcidr/16\",\n                \"/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN\",\n                \"/ip4/127.0.0.1/udp/4023/quic\",\n            };\n            foreach (var a in addresses)\n            {\n                var ma0 = new MultiAddress(a);\n\n                var ms = new MemoryStream();\n                ma0.Write(ms);\n                ms.Position = 0;\n                var ma1 = new MultiAddress(ms);\n                Assert.AreEqual<MultiAddress>(ma0, ma1);\n\n                var ma2 = new MultiAddress(ma0.ToString());\n                Assert.AreEqual<MultiAddress>(ma0, ma2);\n\n                var ma3 = new MultiAddress(ma0.ToArray());\n                Assert.AreEqual<MultiAddress>(ma0, ma3);\n            }\n        }\n\n        [TestMethod]\n        public void Reading_Invalid_Code()\n        {\n            ExceptionAssert.Throws<InvalidDataException>(() => new MultiAddress(new byte[] { 0x7F }));\n        }\n\n\n        [TestMethod]\n        public void Reading_Invalid_Text()\n        {\n            ExceptionAssert.Throws<FormatException>(() => new MultiAddress(\"tcp/80\"));\n        }\n\n        [TestMethod]", "func_src_after": "                \"/ip6/<IP-Address>/sctp/8001\",\n                \"/ip6/<IP-Address>/dccp/8001\",\n                \"/ip4/<IP-Address>/tcp/80/ws\",\n                \"/libp2p-webrtc-star/ip4/127.0.0.1/tcp/9090/ws/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n                \"/ip4/<IP-Address>/tcp/1234/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n                \"/ip4/<IP-Address>/tcp/80/udt\",\n                \"/ip4/<IP-Address>/tcp/80/utp\",\n                \"/onion/aaimaq4ygg2iegci:80\",\n                \"/onion/timaq4ygg2iegci7:80/http\",\n                \"/p2p-circuit/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n                \"/dns/ipfs.io\",\n                \"/dns4/ipfs.io\",\n                \"/dns6/ipfs.io\",\n                \"/dns4/wss0.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic\",\n                \"/ip4/<IP-Address>/ipcidr/16\",\n                \"/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN\",\n                \"/ip4/<IP-Address>/udp/4023/quic\",\n            };\n            foreach (var a in addresses)\n            {\n                var ma0 = new MultiAddress(a);\n\n                var ms = new MemoryStream();\n                ma0.Write(ms);\n                ms.Position = 0;\n                var ma1 = new MultiAddress(ms);\n                Assert.AreEqual<MultiAddress>(ma0, ma1);\n\n                var ma2 = new MultiAddress(ma0.ToString());\n                Assert.AreEqual<MultiAddress>(ma0, ma2);\n\n                var ma3 = new MultiAddress(ma0.ToArray());\n                Assert.AreEqual<MultiAddress>(ma0, ma3);\n            }\n        }\n\n        [TestMethod]\n        public void Reading_Invalid_Code()\n        {\n            ExceptionAssert.Throws<InvalidDataException>(() => new MultiAddress(new byte[] { 0x7F }));\n        }\n\n\n        [TestMethod]\n        public void Reading_Invalid_Text()\n        {\n            ExceptionAssert.Throws<FormatException>(() => new MultiAddress(\"tcp/80\"));\n        }\n\n        [TestMethod]", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 70, "line": "                \"/ip6/3ffe:1900:4545:3:200:f8ff:fe21:67cf/sctp/8001\",\n"}, {"line_no": 2, "char_start": 0, "char_end": 70, "line": "                \"/ip6/3ffe:1900:4545:3:200:f8ff:fe21:67cf/dccp/8001\",\n"}, {"line_no": 5, "char_start": 94, "char_end": 136, "line": "                \"/ip4/1.2.3.4/tcp/80/ws\",\n"}, {"line_no": 8, "char_start": 258, "char_end": 353, "line": "                \"/ip4/127.0.0.1/tcp/1234/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n"}, {"line_no": 10, "char_start": 356, "char_end": 399, "line": "                \"/ip4/1.2.3.4/tcp/80/udt\",\n"}, {"line_no": 12, "char_start": 404, "char_end": 447, "line": "                \"/ip4/1.2.3.4/tcp/80/utp\",\n"}, {"line_no": 21, "char_start": 845, "char_end": 889, "line": "                \"/ip4/127.0.0.0/ipcidr/16\",\n"}, {"line_no": 24, "char_start": 963, "char_end": 1011, "line": "                \"/ip4/127.0.0.1/udp/4023/quic\",\n"}], "added": [{"line_no": 3, "char_start": 0, "char_end": 47, "line": "                \"/ip6/<IP-Address>/sctp/8001\",\n"}, {"line_no": 4, "char_start": 47, "char_end": 94, "line": "                \"/ip6/<IP-Address>/dccp/8001\",\n"}, {"line_no": 6, "char_start": 94, "char_end": 141, "line": "                \"/ip4/<IP-Address>/tcp/80/ws\",\n"}, {"line_no": 9, "char_start": 258, "char_end": 356, "line": "                \"/ip4/<IP-Address>/tcp/1234/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n"}, {"line_no": 11, "char_start": 356, "char_end": 404, "line": "                \"/ip4/<IP-Address>/tcp/80/udt\",\n"}, {"line_no": 13, "char_start": 404, "char_end": 452, "line": "                \"/ip4/<IP-Address>/tcp/80/utp\",\n"}, {"line_no": 22, "char_start": 845, "char_end": 892, "line": "                \"/ip4/<IP-Address>/ipcidr/16\",\n"}, {"line_no": 25, "char_start": 963, "char_end": 1014, "line": "                \"/ip4/<IP-Address>/udp/4023/quic\",\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 70, "chars": "                \"/ip6/3ffe:1900:4545:3:200:f8ff:fe21:67cf/sctp/8001\",\n"}, {"char_start": 0, "char_end": 70, "chars": "                \"/ip6/3ffe:1900:4545:3:200:f8ff:fe21:67cf/dccp/8001\",\n"}, {"char_start": 94, "char_end": 136, "chars": "                \"/ip4/1.2.3.4/tcp/80/ws\",\n"}, {"char_start": 258, "char_end": 353, "chars": "                \"/ip4/127.0.0.1/tcp/1234/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n"}, {"char_start": 356, "char_end": 399, "chars": "                \"/ip4/1.2.3.4/tcp/80/udt\",\n"}, {"char_start": 404, "char_end": 447, "chars": "                \"/ip4/1.2.3.4/tcp/80/utp\",\n"}, {"char_start": 845, "char_end": 889, "chars": "                \"/ip4/127.0.0.0/ipcidr/16\",\n"}, {"char_start": 963, "char_end": 1011, "chars": "                \"/ip4/127.0.0.1/udp/4023/quic\",\n"}], "added": [{"char_start": 0, "char_end": 47, "chars": "                \"/ip6/<IP-Address>/sctp/8001\",\n"}, {"char_start": 47, "char_end": 94, "chars": "                \"/ip6/<IP-Address>/dccp/8001\",\n"}, {"char_start": 94, "char_end": 141, "chars": "                \"/ip4/<IP-Address>/tcp/80/ws\",\n"}, {"char_start": 258, "char_end": 356, "chars": "                \"/ip4/<IP-Address>/tcp/1234/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n"}, {"char_start": 356, "char_end": 404, "chars": "                \"/ip4/<IP-Address>/tcp/80/udt\",\n"}, {"char_start": 404, "char_end": 452, "chars": "                \"/ip4/<IP-Address>/tcp/80/utp\",\n"}, {"char_start": 845, "char_end": 892, "chars": "                \"/ip4/<IP-Address>/ipcidr/16\",\n"}, {"char_start": 963, "char_end": 1014, "chars": "                \"/ip4/<IP-Address>/udp/4023/quic\",\n"}]}}
{"func_name": 1907, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        public void Implicit_Conversion_From_String()\n        {\n            MultiAddress a = somewhere;\n            Assert.IsInstanceOfType(a, typeof(MultiAddress));\n        }\n\n        [TestMethod]\n        public void Wire_Formats()\n        {\n            Assert.AreEqual(\n                new MultiAddress(\"/ip4/127.0.0.1/udp/1234\").ToArray().ToHexString(),\n                \"047f000001910204d2\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ip4/127.0.0.1/udp/1234/ip4/127.0.0.1/tcp/4321\").ToArray().ToHexString(),\n                \"047f000001910204d2047f0000010610e1\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095\").ToArray().ToHexString(),\n                \"29200108a07ac542013ac986fffe317095\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\").ToArray().ToHexString(),\n                \"a503221220d52ebb89d85b02a284948203a62ff28389c57c9f42beec4ec20db76a68911c0b\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ip4/127.0.0.1/udp/1234/utp\").ToArray().ToHexString(),\n                \"047f000001910204d2ae02\");\n            Assert.AreEqual(\n               new MultiAddress(\"/onion/aaimaq4ygg2iegci:80\").ToArray().ToHexString(),\n               \"bc030010c0439831b48218480050\");\n        }\n\n        [TestMethod]\n        public void PeerID_With_ipfs()\n        {\n            var ma = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            Assert.AreEqual(\"QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\", ma.PeerId.ToBase58());\n        }\n\n        [TestMethod]\n        public void PeerID_With_p2p()\n        {\n            var ma = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            Assert.AreEqual(\"QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\", ma.PeerId.ToBase58());\n        }\n\n        [TestMethod]\n        public void PeerID_ipfs_p2p_are_equal()\n        {\n            var ipfs = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            var p2p = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            Assert.AreEqual(ipfs, p2p);\n", "func_src_after": "        public void Implicit_Conversion_From_String()\n        {\n            MultiAddress a = somewhere;\n            Assert.IsInstanceOfType(a, typeof(MultiAddress));\n        }\n\n        [TestMethod]\n        public void Wire_Formats()\n        {\n            Assert.AreEqual(\n                new MultiAddress(\"/ip4/<IP-Address>/udp/1234\").ToArray().ToHexString(),\n                \"047f000001910204d2\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ip4/<IP-Address>/udp/1234/ip4/<IP-Address>/tcp/4321\").ToArray().ToHexString(),\n                \"047f000001910204d2047f0000010610e1\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ip6/<IP-Address>\").ToArray().ToHexString(),\n                \"29200108a07ac542013ac986fffe317095\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\").ToArray().ToHexString(),\n                \"a503221220d52ebb89d85b02a284948203a62ff28389c57c9f42beec4ec20db76a68911c0b\");\n            Assert.AreEqual(\n                new MultiAddress(\"/ip4/<IP-Address>/udp/1234/utp\").ToArray().ToHexString(),\n                \"047f000001910204d2ae02\");\n            Assert.AreEqual(\n               new MultiAddress(\"/onion/aaimaq4ygg2iegci:80\").ToArray().ToHexString(),\n               \"bc030010c0439831b48218480050\");\n        }\n\n        [TestMethod]\n        public void PeerID_With_ipfs()\n        {\n            var ma = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            Assert.AreEqual(\"QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\", ma.PeerId.ToBase58());\n        }\n\n        [TestMethod]\n        public void PeerID_With_p2p()\n        {\n            var ma = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            Assert.AreEqual(\"QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\", ma.PeerId.ToBase58());\n        }\n\n        [TestMethod]\n        public void PeerID_ipfs_p2p_are_equal()\n        {\n            var ipfs = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            var p2p = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n            Assert.AreEqual(ipfs, p2p);\n", "line_changes": {"deleted": [{"line_no": 11, "char_start": 272, "char_end": 357, "line": "                new MultiAddress(\"/ip4/127.0.0.1/udp/1234\").ToArray().ToHexString(),\n"}, {"line_no": 15, "char_start": 428, "char_end": 536, "line": "                new MultiAddress(\"/ip4/127.0.0.1/udp/1234/ip4/127.0.0.1/tcp/4321\").ToArray().ToHexString(),\n"}, {"line_no": 19, "char_start": 626, "char_end": 731, "line": "                new MultiAddress(\"/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095\").ToArray().ToHexString(),\n"}, {"line_no": 26, "char_start": 1027, "char_end": 1116, "line": "                new MultiAddress(\"/ip4/127.0.0.1/udp/1234/utp\").ToArray().ToHexString(),\n"}, {"line_no": 37, "char_start": 1407, "char_end": 1527, "line": "            var ma = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"line_no": 45, "char_start": 1710, "char_end": 1829, "line": "            var ma = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"line_no": 53, "char_start": 2022, "char_end": 2144, "line": "            var ipfs = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"line_no": 55, "char_start": 2146, "char_end": 2266, "line": "            var p2p = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}], "added": [{"line_no": 12, "char_start": 272, "char_end": 360, "line": "                new MultiAddress(\"/ip4/<IP-Address>/udp/1234\").ToArray().ToHexString(),\n"}, {"line_no": 16, "char_start": 428, "char_end": 542, "line": "                new MultiAddress(\"/ip4/<IP-Address>/udp/1234/ip4/<IP-Address>/tcp/4321\").ToArray().ToHexString(),\n"}, {"line_no": 20, "char_start": 626, "char_end": 705, "line": "                new MultiAddress(\"/ip6/<IP-Address>\").ToArray().ToHexString(),\n"}, {"line_no": 27, "char_start": 1027, "char_end": 1119, "line": "                new MultiAddress(\"/ip4/<IP-Address>/udp/1234/utp\").ToArray().ToHexString(),\n"}, {"line_no": 38, "char_start": 1407, "char_end": 1529, "line": "            var ma = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"line_no": 46, "char_start": 1710, "char_end": 1831, "line": "            var ma = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"line_no": 54, "char_start": 2022, "char_end": 2146, "line": "            var ipfs = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"line_no": 56, "char_start": 2146, "char_end": 2268, "line": "            var p2p = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}]}, "char_changes": {"deleted": [{"char_start": 272, "char_end": 357, "chars": "                new MultiAddress(\"/ip4/127.0.0.1/udp/1234\").ToArray().ToHexString(),\n"}, {"char_start": 428, "char_end": 536, "chars": "                new MultiAddress(\"/ip4/127.0.0.1/udp/1234/ip4/127.0.0.1/tcp/4321\").ToArray().ToHexString(),\n"}, {"char_start": 626, "char_end": 731, "chars": "                new MultiAddress(\"/ip6/2001:8a0:7ac5:4201:3ac9:86ff:fe31:7095\").ToArray().ToHexString(),\n"}, {"char_start": 1027, "char_end": 1116, "chars": "                new MultiAddress(\"/ip4/127.0.0.1/udp/1234/utp\").ToArray().ToHexString(),\n"}, {"char_start": 1407, "char_end": 1527, "chars": "            var ma = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"char_start": 1710, "char_end": 1829, "chars": "            var ma = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"char_start": 2022, "char_end": 2144, "chars": "            var ipfs = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"char_start": 2146, "char_end": 2266, "chars": "            var p2p = new MultiAddress(\"/ip4/10.1.10.10/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}], "added": [{"char_start": 272, "char_end": 360, "chars": "                new MultiAddress(\"/ip4/<IP-Address>/udp/1234\").ToArray().ToHexString(),\n"}, {"char_start": 428, "char_end": 542, "chars": "                new MultiAddress(\"/ip4/<IP-Address>/udp/1234/ip4/<IP-Address>/tcp/4321\").ToArray().ToHexString(),\n"}, {"char_start": 626, "char_end": 705, "chars": "                new MultiAddress(\"/ip6/<IP-Address>\").ToArray().ToHexString(),\n"}, {"char_start": 1027, "char_end": 1119, "chars": "                new MultiAddress(\"/ip4/<IP-Address>/udp/1234/utp\").ToArray().ToHexString(),\n"}, {"char_start": 1407, "char_end": 1529, "chars": "            var ma = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"char_start": 1710, "char_end": 1831, "chars": "            var ma = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"char_start": 2022, "char_end": 2146, "chars": "            var ipfs = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/ipfs/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}, {"char_start": 2146, "char_end": 2268, "chars": "            var p2p = new MultiAddress(\"/ip4/<IP-Address>/tcp/29087/p2p/QmVcSqVEsvm5RR9mBLjwpb2XjFVn5bPdPL69mL8PH45pPC\");\n"}]}}
{"func_name": 1914, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t[Test]\n\t\tpublic void Test_TuplePack_Serialize_IPAddress()\n\t\t{\n\t\t\t// IP Addresses are stored as a byte array (<01>..<00>), in network order (big-endian)\n\t\t\t// They will take from 6 to 10 bytes, depending on the number of '.0' in them.\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.EncodeKey(IPAddress.Loopback).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 7F 00 FF 00 FF 01 00\")\n\t\t\t);\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.EncodeKey(IPAddress.Any).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 00 FF 00 FF 00 FF 00 FF 00\")\n\t\t\t);\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.EncodeKey(IPAddress.Parse(\"1.2.3.4\")).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 01 02 03 04 00\")\n\t\t\t);\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.Pack(ValueTuple.Create(IPAddress.Loopback)).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 7F 00 FF 00 FF 01 00\")\n\t\t\t);\n\n\t\t}\n\n\n\t\t[Test]\n\t\tpublic void Test_TuplePack_Deserialize_IPAddress()\n\t\t{\n\t\t\tAssert.That(TuPack.Unpack(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")).Get<IPAddress>(0), Is.EqualTo(IPAddress.Parse(\"127.0.0.1\")));\n\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")), Is.EqualTo(IPAddress.Parse(\"127.0.0.1\")));\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><00><FF><00><FF><00><FF><00><FF><00>\")), Is.EqualTo(IPAddress.Parse(\"0.0.0.0\")));\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><01><02><03><04><00>\")), Is.EqualTo(IPAddress.Parse(\"1.2.3.4\")));\n\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(\"127.0.0.1\")), Is.EqualTo(IPAddress.Loopback));\n\n\t\t\tvar ip = IPAddress.Parse(\"192.168.0.1\");\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(ip.ToString())), Is.EqualTo(ip));\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(ip.GetAddressBytes())), Is.EqualTo(ip));\n#pragma warning disable 618\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(ip.Address)), Is.EqualTo(ip));\n#pragma warning restore 618\n\t\t}\n\n\t\t[Test]\n\t\tpublic void Test_TuplePack_NullableTypes()", "func_src_after": "\t\t[Test]\n\t\tpublic void Test_TuplePack_Serialize_IPAddress()\n\t\t{\n\t\t\t// IP Addresses are stored as a byte array (<01>..<00>), in network order (big-endian)\n\t\t\t// They will take from 6 to 10 bytes, depending on the number of '.0' in them.\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.EncodeKey(IPAddress.Loopback).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 7F 00 FF 00 FF 01 00\")\n\t\t\t);\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.EncodeKey(IPAddress.Any).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 00 FF 00 FF 00 FF 00 FF 00\")\n\t\t\t);\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.EncodeKey(IPAddress.Parse(\"1.2.3.4\")).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 01 02 03 04 00\")\n\t\t\t);\n\n\t\t\tAssert.That(\n\t\t\t\tTuPack.Pack(ValueTuple.Create(IPAddress.Loopback)).ToHexaString(' '),\n\t\t\t\tIs.EqualTo(\"01 7F 00 FF 00 FF 01 00\")\n\t\t\t);\n\n\t\t}\n\n\n\t\t[Test]\n\t\tpublic void Test_TuplePack_Deserialize_IPAddress()\n\t\t{\n\t\t\tAssert.That(TuPack.Unpack(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")).Get<IPAddress>(0), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><00><FF><00><FF><00><FF><00><FF><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><01><02><03><04><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(\"<IP-Address>\")), Is.EqualTo(IPAddress.Loopback));\n\n\t\t\tvar ip = IPAddress.Parse(\"<IP-Address>\");\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(ip.ToString())), Is.EqualTo(ip));\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(ip.GetAddressBytes())), Is.EqualTo(ip));\n#pragma warning disable 618\n\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(ip.Address)), Is.EqualTo(ip));\n#pragma warning restore 618\n\t\t}\n\n\t\t[Test]\n\t\tpublic void Test_TuplePack_NullableTypes()", "line_changes": {"deleted": [{"line_no": 33, "char_start": 826, "char_end": 969, "line": "\t\t\tAssert.That(TuPack.Unpack(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")).Get<IPAddress>(0), Is.EqualTo(IPAddress.Parse(\"127.0.0.1\")));\n"}, {"line_no": 36, "char_start": 973, "char_end": 1112, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")), Is.EqualTo(IPAddress.Parse(\"127.0.0.1\")));\n"}, {"line_no": 38, "char_start": 1115, "char_end": 1260, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><00><FF><00><FF><00><FF><00><FF><00>\")), Is.EqualTo(IPAddress.Parse(\"0.0.0.0\")));\n"}, {"line_no": 40, "char_start": 1265, "char_end": 1394, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><01><02><03><04><00>\")), Is.EqualTo(IPAddress.Parse(\"1.2.3.4\")));\n"}, {"line_no": 43, "char_start": 1400, "char_end": 1508, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(\"127.0.0.1\")), Is.EqualTo(IPAddress.Loopback));\n"}, {"line_no": 46, "char_start": 1512, "char_end": 1556, "line": "\t\t\tvar ip = IPAddress.Parse(\"192.168.0.1\");\n"}], "added": [{"line_no": 34, "char_start": 826, "char_end": 972, "line": "\t\t\tAssert.That(TuPack.Unpack(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")).Get<IPAddress>(0), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"line_no": 37, "char_start": 973, "char_end": 1115, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"line_no": 39, "char_start": 1115, "char_end": 1265, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><00><FF><00><FF><00><FF><00><FF><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"line_no": 41, "char_start": 1265, "char_end": 1399, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><01><02><03><04><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"line_no": 44, "char_start": 1400, "char_end": 1511, "line": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(\"<IP-Address>\")), Is.EqualTo(IPAddress.Loopback));\n"}, {"line_no": 47, "char_start": 1512, "char_end": 1557, "line": "\t\t\tvar ip = IPAddress.Parse(\"<IP-Address>\");\n"}]}, "char_changes": {"deleted": [{"char_start": 826, "char_end": 969, "chars": "\t\t\tAssert.That(TuPack.Unpack(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")).Get<IPAddress>(0), Is.EqualTo(IPAddress.Parse(\"127.0.0.1\")));\n"}, {"char_start": 973, "char_end": 1112, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")), Is.EqualTo(IPAddress.Parse(\"127.0.0.1\")));\n"}, {"char_start": 1115, "char_end": 1260, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><00><FF><00><FF><00><FF><00><FF><00>\")), Is.EqualTo(IPAddress.Parse(\"0.0.0.0\")));\n"}, {"char_start": 1265, "char_end": 1394, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><01><02><03><04><00>\")), Is.EqualTo(IPAddress.Parse(\"1.2.3.4\")));\n"}, {"char_start": 1400, "char_end": 1508, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(\"127.0.0.1\")), Is.EqualTo(IPAddress.Loopback));\n"}, {"char_start": 1512, "char_end": 1556, "chars": "\t\t\tvar ip = IPAddress.Parse(\"192.168.0.1\");\n"}], "added": [{"char_start": 826, "char_end": 972, "chars": "\t\t\tAssert.That(TuPack.Unpack(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")).Get<IPAddress>(0), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"char_start": 973, "char_end": 1115, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><7F><00><FF><00><FF><01><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"char_start": 1115, "char_end": 1265, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><00><FF><00><FF><00><FF><00><FF><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"char_start": 1265, "char_end": 1399, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape(\"<01><01><02><03><04><00>\")), Is.EqualTo(IPAddress.Parse(\"<IP-Address>\")));\n"}, {"char_start": 1400, "char_end": 1511, "chars": "\t\t\tAssert.That(TuPack.DecodeKey<IPAddress>(TuPack.EncodeKey(\"<IP-Address>\")), Is.EqualTo(IPAddress.Loopback));\n"}, {"char_start": 1512, "char_end": 1557, "chars": "\t\t\tvar ip = IPAddress.Parse(\"<IP-Address>\");\n"}]}}
{"func_name": 1926, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * MailSlurp API\n *\n * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository\n *\n * The version of the OpenAPI document: 6.5.2\n * Contact: contact@mailslurp.dev\n * Generated by: https://github.com/openapitools/openapi-generator.git\n */\n\n\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Net;\nusing System.Net.Mime;\nusing mailslurp_netstandard_2x.Client;\nusing mailslurp_netstandard_2x.Model;\n\nnamespace mailslurp_netstandard_2x.Api\n{\n\n    /// <summary>\n    /// Represents a collection of functions to interact with the API endpoints\n    /// </summary>\n    public interface IAttachmentControllerApiSync : IApiAccessor\n    {\n        #region Synchronous Operations\n        /// <summary>\n        /// Delete all attachments\n        /// </summary>\n        /// <exception cref=\"mailslurp_netstandard_2x.Client.ApiException\">Thrown when fails to make API call</exception>\n        /// <returns></returns>\n        void DeleteAllAttachments();\n\n        /// <summary>\n        /// Delete all attachments\n        /// </summary>\n        /// <remarks>\n        /// \n        /// </remarks>\n        /// <exception cref=\"mailslurp_netstandard_2x.Client.ApiException\">Thrown when fails to make API call</exception>\n        /// <returns>ApiResponse of Object(void)</returns>\n        ApiResponse<Object> DeleteAllAttachmentsWithHttpInfo();\n        /// <summary>\n        /// Delete an attachment\n        /// </summary>\n        /// <exception cref=\"mailslurp_netstandard_2x.Client.ApiException\">Thrown when fails to make API call</exception>\n        /// <param name=\"attachmentId\">ID of attachment</param>", "func_src_after": "/*\n * MailSlurp API\n *\n * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository\n *\n * The version of the OpenAPI document: 6.5.2\n * Contact: <EMAIL>\n * Generated by: https://github.com/openapitools/openapi-generator.git\n */\n\n\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Net;\nusing System.Net.Mime;\nusing mailslurp_netstandard_2x.Client;\nusing mailslurp_netstandard_2x.Model;\n\nnamespace mailslurp_netstandard_2x.Api\n{\n\n    /// <summary>\n    /// Represents a collection of functions to interact with the API endpoints\n    /// </summary>\n    public interface IAttachmentControllerApiSync : IApiAccessor\n    {\n        #region Synchronous Operations\n        /// <summary>\n        /// Delete all attachments\n        /// </summary>\n        /// <exception cref=\"mailslurp_netstandard_2x.Client.ApiException\">Thrown when fails to make API call</exception>\n        /// <returns></returns>\n        void DeleteAllAttachments();\n\n        /// <summary>\n        /// Delete all attachments\n        /// </summary>\n        /// <remarks>\n        /// \n        /// </remarks>\n        /// <exception cref=\"mailslurp_netstandard_2x.Client.ApiException\">Thrown when fails to make API call</exception>\n        /// <returns>ApiResponse of Object(void)</returns>\n        ApiResponse<Object> DeleteAllAttachmentsWithHttpInfo();\n        /// <summary>\n        /// Delete an attachment\n        /// </summary>\n        /// <exception cref=\"mailslurp_netstandard_2x.Client.ApiException\">Thrown when fails to make API call</exception>\n        /// <param name=\"attachmentId\">ID of attachment</param>", "line_changes": {"deleted": [{"line_no": 7, "char_start": 545, "char_end": 579, "line": " * Contact: contact@mailslurp.dev\n"}], "added": [{"line_no": 8, "char_start": 545, "char_end": 565, "line": " * Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 545, "char_end": 579, "chars": " * Contact: contact@mailslurp.dev\n"}], "added": [{"char_start": 545, "char_end": 565, "chars": " * Contact: <EMAIL>\n"}]}}
{"func_name": 1937, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***\n// *** Do not edit by hand unless you're certain you know what you are doing! ***\n\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.Immutable;\nusing System.Threading.Tasks;\nusing Pulumi.Serialization;\n\nnamespace Pulumi.Azure.Hsm\n{\n    /// <summary>\n    /// Manages a Dedicated Hardware Security Module.\n    /// \n    /// &gt; **Note**: Before using this resource, it's required to submit the request of registering the providers and features with Azure CLI `az provider register --namespace Microsoft.HardwareSecurityModules &amp;&amp; az feature register --namespace Microsoft.HardwareSecurityModules --name AzureDedicatedHSM &amp;&amp; az provider register --namespace Microsoft.Network &amp;&amp; az feature register --namespace Microsoft.Network --name AllowBaremetalServers` and ask service team (hsmrequest@microsoft.com) to approve. See more details from https://docs.microsoft.com/en-us/azure/dedicated-hsm/tutorial-deploy-hsm-cli#prerequisites.\n    /// \n    /// &gt; **Note**: If the quota is not enough in some region, please submit the quota request to service team.\n    /// \n    /// ## Example Usage\n    /// \n    /// ```csharp\n    /// using Pulumi;\n    /// using Azure = Pulumi.Azure;\n    /// \n    /// class MyStack : Stack\n    /// {\n    ///     public MyStack()\n    ///     {\n    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup(\"exampleResourceGroup\", new Azure.Core.ResourceGroupArgs\n    ///         {\n    ///             Location = \"West Europe\",\n    ///         });\n    ///         var exampleVirtualNetwork = new Azure.Network.VirtualNetwork(\"exampleVirtualNetwork\", new Azure.Network.VirtualNetworkArgs\n    ///         {\n    ///             AddressSpaces = \n    ///             {\n    ///                 \"10.2.0.0/16\",\n    ///             },\n    ///             Location = exampleResourceGroup.Location,\n    ///             ResourceGroupName = exampleResourceGroup.Name,\n    ///         });\n    ///         var exampleSubnet = new Azure.Network.Subnet(\"exampleSubnet\", new Azure.Network.SubnetArgs\n    ///         {\n    ///             ResourceGroupName = exampleResourceGroup.Name,\n    ///             VirtualNetworkName = exampleVirtualNetwork.Name,\n    ///             AddressPrefixes = \n    ///             {\n    ///                 \"10.2.0.0/24\",\n    ///             },\n    ///         });", "func_src_after": "// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***\n// *** Do not edit by hand unless you're certain you know what you are doing! ***\n\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.Immutable;\nusing System.Threading.Tasks;\nusing Pulumi.Serialization;\n\nnamespace Pulumi.Azure.Hsm\n{\n    /// <summary>\n    /// Manages a Dedicated Hardware Security Module.\n    /// \n    /// &gt; **Note**: Before using this resource, it's required to submit the request of registering the providers and features with Azure CLI `az provider register --namespace Microsoft.HardwareSecurityModules &amp;&amp; az feature register --namespace Microsoft.HardwareSecurityModules --name AzureDedicatedHSM &amp;&amp; az provider register --namespace Microsoft.Network &amp;&amp; az feature register --namespace Microsoft.Network --name AllowBaremetalServers` and ask service team (<EMAIL>) to approve. See more details from https://docs.microsoft.com/en-us/azure/dedicated-hsm/tutorial-deploy-hsm-cli#prerequisites.\n    /// \n    /// &gt; **Note**: If the quota is not enough in some region, please submit the quota request to service team.\n    /// \n    /// ## Example Usage\n    /// \n    /// ```csharp\n    /// using Pulumi;\n    /// using Azure = Pulumi.Azure;\n    /// \n    /// class MyStack : Stack\n    /// {\n    ///     public MyStack()\n    ///     {\n    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup(\"exampleResourceGroup\", new Azure.Core.ResourceGroupArgs\n    ///         {\n    ///             Location = \"West Europe\",\n    ///         });\n    ///         var exampleVirtualNetwork = new Azure.Network.VirtualNetwork(\"exampleVirtualNetwork\", new Azure.Network.VirtualNetworkArgs\n    ///         {\n    ///             AddressSpaces = \n    ///             {\n    ///                 \"<IP-Address>/16\",\n    ///             },\n    ///             Location = exampleResourceGroup.Location,\n    ///             ResourceGroupName = exampleResourceGroup.Name,\n    ///         });\n    ///         var exampleSubnet = new Azure.Network.Subnet(\"exampleSubnet\", new Azure.Network.SubnetArgs\n    ///         {\n    ///             ResourceGroupName = exampleResourceGroup.Name,\n    ///             VirtualNetworkName = exampleVirtualNetwork.Name,\n    ///             AddressPrefixes = \n    ///             {\n    ///                 \"<IP-Address>/24\",\n    ///             },\n    ///         });", "line_changes": {"deleted": [{"line_no": 15, "char_start": 425, "char_end": 1066, "line": "    /// &gt; **Note**: Before using this resource, it's required to submit the request of registering the providers and features with Azure CLI `az provider register --namespace Microsoft.HardwareSecurityModules &amp;&amp; az feature register --namespace Microsoft.HardwareSecurityModules --name AzureDedicatedHSM &amp;&amp; az provider register --namespace Microsoft.Network &amp;&amp; az feature register --namespace Microsoft.Network --name AllowBaremetalServers` and ask service team (hsmrequest@microsoft.com) to approve. See more details from https://docs.microsoft.com/en-us/azure/dedicated-hsm/tutorial-deploy-hsm-cli#prerequisites.\n"}, {"line_no": 38, "char_start": 1813, "char_end": 1852, "line": "    ///                 \"10.2.0.0/16\",\n"}, {"line_no": 50, "char_start": 2350, "char_end": 2389, "line": "    ///                 \"10.2.0.0/24\",\n"}], "added": [{"line_no": 16, "char_start": 425, "char_end": 1049, "line": "    /// &gt; **Note**: Before using this resource, it's required to submit the request of registering the providers and features with Azure CLI `az provider register --namespace Microsoft.HardwareSecurityModules &amp;&amp; az feature register --namespace Microsoft.HardwareSecurityModules --name AzureDedicatedHSM &amp;&amp; az provider register --namespace Microsoft.Network &amp;&amp; az feature register --namespace Microsoft.Network --name AllowBaremetalServers` and ask service team (<EMAIL>) to approve. See more details from https://docs.microsoft.com/en-us/azure/dedicated-hsm/tutorial-deploy-hsm-cli#prerequisites.\n"}, {"line_no": 39, "char_start": 1813, "char_end": 1856, "line": "    ///                 \"<IP-Address>/16\",\n"}, {"line_no": 51, "char_start": 2350, "char_end": 2393, "line": "    ///                 \"<IP-Address>/24\",\n"}]}, "char_changes": {"deleted": [{"char_start": 425, "char_end": 1066, "chars": "    /// &gt; **Note**: Before using this resource, it's required to submit the request of registering the providers and features with Azure CLI `az provider register --namespace Microsoft.HardwareSecurityModules &amp;&amp; az feature register --namespace Microsoft.HardwareSecurityModules --name AzureDedicatedHSM &amp;&amp; az provider register --namespace Microsoft.Network &amp;&amp; az feature register --namespace Microsoft.Network --name AllowBaremetalServers` and ask service team (hsmrequest@microsoft.com) to approve. See more details from https://docs.microsoft.com/en-us/azure/dedicated-hsm/tutorial-deploy-hsm-cli#prerequisites.\n"}, {"char_start": 1813, "char_end": 1852, "chars": "    ///                 \"10.2.0.0/16\",\n"}, {"char_start": 2350, "char_end": 2389, "chars": "    ///                 \"10.2.0.0/24\",\n"}], "added": [{"char_start": 425, "char_end": 1049, "chars": "    /// &gt; **Note**: Before using this resource, it's required to submit the request of registering the providers and features with Azure CLI `az provider register --namespace Microsoft.HardwareSecurityModules &amp;&amp; az feature register --namespace Microsoft.HardwareSecurityModules --name AzureDedicatedHSM &amp;&amp; az provider register --namespace Microsoft.Network &amp;&amp; az feature register --namespace Microsoft.Network --name AllowBaremetalServers` and ask service team (<EMAIL>) to approve. See more details from https://docs.microsoft.com/en-us/azure/dedicated-hsm/tutorial-deploy-hsm-cli#prerequisites.\n"}, {"char_start": 1813, "char_end": 1856, "chars": "    ///                 \"<IP-Address>/16\",\n"}, {"char_start": 2350, "char_end": 2393, "chars": "    ///                 \"<IP-Address>/24\",\n"}]}}
{"func_name": 1944, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* \n * Apteco API\n *\n * An API to allow access to Apteco Marketing Suite resources\n *\n * OpenAPI spec version: v2\n * Contact: support@apteco.com\n * Generated by: https://github.com/swagger-api/swagger-codegen.git\n */\n\nusing System;\nusing System.Linq;\nusing System.IO;\nusing System.Text;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Runtime.Serialization;\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Converters;\nusing SwaggerDateConverter = Apteco.OrbitDashboardRefresher.APIClient.Client.SwaggerDateConverter;\n\nnamespace Apteco.OrbitDashboardRefresher.APIClient.Model\n{\n    /// <summary>\n    /// Breakpoint\n    /// </summary>\n    [DataContract]\n    public partial class Breakpoint :  IEquatable<Breakpoint>\n    {\n        /// <summary>\n        /// The target breakpoint size\n        /// </summary>\n        /// <value>The target breakpoint size</value>\n        [JsonConverter(typeof(StringEnumConverter))]\n        public enum BreakpointEnum\n        {\n            \n            /// <summary>\n            /// Enum Xs for value: xs\n            /// </summary>\n            [EnumMember(Value = \"xs\")]\n            Xs = 1,\n            \n            /// <summary>\n            /// Enum Sm for value: sm\n            /// </summary>\n            [EnumMember(Value = \"sm\")]\n            Sm = 2,\n            ", "func_src_after": "/* \n * Apteco API\n *\n * An API to allow access to Apteco Marketing Suite resources\n *\n * OpenAPI spec version: v2\n * Contact: <EMAIL>\n * Generated by: https://github.com/swagger-api/swagger-codegen.git\n */\n\nusing System;\nusing System.Linq;\nusing System.IO;\nusing System.Text;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Runtime.Serialization;\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Converters;\nusing SwaggerDateConverter = Apteco.OrbitDashboardRefresher.APIClient.Client.SwaggerDateConverter;\n\nnamespace Apteco.OrbitDashboardRefresher.APIClient.Model\n{\n    /// <summary>\n    /// Breakpoint\n    /// </summary>\n    [DataContract]\n    public partial class Breakpoint :  IEquatable<Breakpoint>\n    {\n        /// <summary>\n        /// The target breakpoint size\n        /// </summary>\n        /// <value>The target breakpoint size</value>\n        [JsonConverter(typeof(StringEnumConverter))]\n        public enum BreakpointEnum\n        {\n            \n            /// <summary>\n            /// Enum Xs for value: xs\n            /// </summary>\n            [EnumMember(Value = \"xs\")]\n            Xs = 1,\n            \n            /// <summary>\n            /// Enum Sm for value: sm\n            /// </summary>\n            [EnumMember(Value = \"sm\")]\n            Sm = 2,\n            ", "line_changes": {"deleted": [{"line_no": 7, "char_start": 114, "char_end": 145, "line": " * Contact: support@apteco.com\n"}], "added": [{"line_no": 8, "char_start": 114, "char_end": 134, "line": " * Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 114, "char_end": 145, "chars": " * Contact: support@apteco.com\n"}], "added": [{"char_start": 114, "char_end": 134, "chars": " * Contact: <EMAIL>\n"}]}}
{"func_name": 1960, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿#region License\n/*\n * B3HistoricMarketDataInfo.cs\n *\n * The MIT License\n *\n * Copyright (c) 2018 Felipe Bahiana Almeida\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n * Contributors:\n * - Felipe Bahiana Almeida <felipe.almeida@gmail.com> https://www.linkedin.com/in/felipe-almeida-ba222577\n */\n#endregion\n\nnamespace B3Provider.Records\n{\n    using System;\n\n    public class B3HistoricMarketDataInfo\n    {\n        \n        public int Type { get; set; }                               //TIPO DE REGISTRO  -- N02\n        \n        public DateTime TradeDate { get; set; }                     //DATA DO PREGÃO --N08\n        \n        public int BDICode { get; set; }                            //CODBDI - CÓDIGO BDI --X02\n        \n        public string Ticker { get; set; }                          //CODNEG - CÓDIGO DE NEGOCIAÇÃO DO PAPEL --X12\n        \n        public int MarketTypeCode { get; set; }                     //TPMERC - TIPO DE MERCADO  --N03\n        \n        public string ShortName { get; set; }                       //NOMRES - NOME RESUMIDO DA EMPRESA EMISSORA DO PAPEL --X12\n        ", "func_src_after": "﻿#region License\n/*\n * B3HistoricMarketDataInfo.cs\n *\n * The MIT License\n *\n * Copyright (c) 2018 Felipe Bahiana Almeida\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n * Contributors:\n * - Felipe Bahiana Almeida <<EMAIL>> https://www.linkedin.com/in/felipe-almeida-ba222577\n */\n#endregion\n\nnamespace B3Provider.Records\n{\n    using System;\n\n    public class B3HistoricMarketDataInfo\n    {\n        \n        public int Type { get; set; }                               //TIPO DE REGISTRO  -- N02\n        \n        public DateTime TradeDate { get; set; }                     //DATA DO PREGÃO --N08\n        \n        public int BDICode { get; set; }                            //CODBDI - CÓDIGO BDI --X02\n        \n        public string Ticker { get; set; }                          //CODNEG - CÓDIGO DE NEGOCIAÇÃO DO PAPEL --X12\n        \n        public int MarketTypeCode { get; set; }                     //TPMERC - TIPO DE MERCADO  --N03\n        \n        public string ShortName { get; set; }                       //NOMRES - NOME RESUMIDO DA EMPRESA EMISSORA DO PAPEL --X12\n        ", "line_changes": {"deleted": [{"line_no": 28, "char_start": 1217, "char_end": 1324, "line": " * - Felipe Bahiana Almeida <felipe.almeida@gmail.com> https://www.linkedin.com/in/felipe-almeida-ba222577\n"}], "added": [{"line_no": 29, "char_start": 1217, "char_end": 1307, "line": " * - Felipe Bahiana Almeida <<EMAIL>> https://www.linkedin.com/in/felipe-almeida-ba222577\n"}]}, "char_changes": {"deleted": [{"char_start": 1217, "char_end": 1324, "chars": " * - Felipe Bahiana Almeida <felipe.almeida@gmail.com> https://www.linkedin.com/in/felipe-almeida-ba222577\n"}], "added": [{"char_start": 1217, "char_end": 1307, "chars": " * - Felipe Bahiana Almeida <<EMAIL>> https://www.linkedin.com/in/felipe-almeida-ba222577\n"}]}}
{"func_name": 2005, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Copyright (c) Ibuprogames <hello@ibuprogames.com>. All rights reserved.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\r\n// IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nusing UnityEngine;\r\nusing UnityEditor;\r\n\r\nnamespace Ibuprogames\r\n{\r\n  namespace CameraTransitionsAsset\r\n  {\r\n    [CustomPropertyDrawer(typeof(RangeFloatAttribute))]\r\n    public class RangeFloatDrawer : PropertyDrawer\r\n    {\r\n      public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)\r\n      {\r\n        RangeFloatAttribute rangeAttribute = (RangeFloatAttribute)base.attribute;\r\n        if (property.propertyType == SerializedPropertyType.Float)\r\n          EditorGUI.Slider(position, property, rangeAttribute.min, rangeAttribute.max, label);\r\n        else if (property.propertyType == SerializedPropertyType.Integer)\r\n          EditorGUI.IntSlider(position, property, (int)rangeAttribute.min, (int)rangeAttribute.max, label);\r\n        else\r\n          EditorGUI.LabelField(position, label.text, \"Use Range with float or int.\");\r\n      }\r\n    }    \r\n  }\r\n}\r\n", "func_src_after": "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Copyright (c) Ibuprogames <<EMAIL>>. All rights reserved.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\r\n// IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nusing UnityEngine;\r\nusing UnityEditor;\r\n\r\nnamespace Ibuprogames\r\n{\r\n  namespace CameraTransitionsAsset\r\n  {\r\n    [CustomPropertyDrawer(typeof(RangeFloatAttribute))]\r\n    public class RangeFloatDrawer : PropertyDrawer\r\n    {\r\n      public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)\r\n      {\r\n        RangeFloatAttribute rangeAttribute = (RangeFloatAttribute)base.attribute;\r\n        if (property.propertyType == SerializedPropertyType.Float)\r\n          EditorGUI.Slider(position, property, rangeAttribute.min, rangeAttribute.max, label);\r\n        else if (property.propertyType == SerializedPropertyType.Integer)\r\n          EditorGUI.IntSlider(position, property, (int)rangeAttribute.min, (int)rangeAttribute.max, label);\r\n        else\r\n          EditorGUI.LabelField(position, label.text, \"Use Range with float or int.\");\r\n      }\r\n    }    \r\n  }\r\n}\r\n", "line_changes": {"deleted": [{"line_no": 2, "char_start": 133, "char_end": 209, "line": "// Copyright (c) Ibuprogames <hello@ibuprogames.com>. All rights reserved.\r\n"}], "added": [{"line_no": 3, "char_start": 133, "char_end": 195, "line": "// Copyright (c) Ibuprogames <<EMAIL>>. All rights reserved.\r\n"}]}, "char_changes": {"deleted": [{"char_start": 133, "char_end": 209, "chars": "// Copyright (c) Ibuprogames <hello@ibuprogames.com>. All rights reserved.\r\n"}], "added": [{"char_start": 133, "char_end": 195, "chars": "// Copyright (c) Ibuprogames <<EMAIL>>. All rights reserved.\r\n"}]}}
{"func_name": 2025, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿@model letskanban.Models.RegisterViewModel\n\n\n<h2> Register</h2><br><br>\n<div class=\"row\">\n    <div class=\"col-md-8\">\n        @using (Html.BeginForm(\"Register\",\"Account\")) {\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.UserName) : <br>\n           @Html.TextBoxFor(m => m.UserName) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.UserName)</i>\n        </div>\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.Password) : <br>\n           @Html.TextBoxFor(m => m.Password) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.Password)</i>\n        </div>\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.ConfirmPassword) : <br>\n           @Html.TextBoxFor(m => m.ConfirmPassword) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.ConfirmPassword)</i>\n        </div>\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.EmailId) : <br>\n           @Html.TextBoxFor(m => m.EmailId) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.EmailId)</i>\n        </div>\n       \n        \n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        \n        \n        }\n        \n        \n    </div>\n</div>\n", "func_src_after": "﻿@model letskanban.Models.RegisterViewModel\n\n\n<h2> Register</h2><br><br>\n<div class=\"row\">\n    <div class=\"col-md-8\">\n        @using (Html.BeginForm(\"Register\",\"Account\")) {\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.UserName) : <br>\n           @Html.TextBoxFor(m => m.UserName) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.UserName)</i>\n        </div>\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.Password) : <br>\n           @Html.TextBoxFor(m => m.Password) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.Password)</i>\n        </div>\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.ConfirmPassword) : <br>\n           @Html.TextBoxFor(m => m.ConfirmPassword) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.ConfirmPassword)</i>\n        </div>\n        <div class=\"form-group\">\n           @Html.LabelFor(m => m.EmailId) : <br>\n           @Html.TextBoxFor(m => m.EmailId) <br>\n           <i style=\"color:red\">@Html.ValidationMessageFor(m => m.EmailId)</i>\n        </div>\n       \n        \n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        \n        \n        }\n        \n        \n    </div>\n</div>\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2130, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿/*\n Copyright (C) 2020 Jean-Camille Tournier (mail@tournierjc.fr)\n\n This file is part of QLCore Project https://github.com/OpenDerivatives/QLCore\n\n QLCore is free software: you can redistribute it and/or modify it\n under the terms of the QLCore and QLNet license. You should have received a\n copy of the license along with this program; if not, license is\n available at https://github.com/OpenDerivatives/QLCore/LICENSE.\n\n QLCore is a forked of QLNet which is a based on QuantLib, a free-software/open-source\n library for financial quantitative analysts and developers - http://quantlib.org/\n The QuantLib license is available online at http://quantlib.org/license.shtml and the\n QLNet license is available online at https://github.com/amaggiulli/QLNet/blob/develop/LICENSE.\n\n This program is distributed in the hope that it will be useful, but WITHOUT\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n FOR A PARTICAR PURPOSE. See the license for more details.\n*/\n\nnamespace QLCore\n{\n   //! %Forward rate agreement (FRA) class\n   /*! 1. Unlike the forward contract conventions on carryable\n          financial assets (stocks, bonds, commodities), the\n          valueDate for a FRA is taken to be the day when the forward\n          loan or deposit begins and when full settlement takes place\n          (based on the NPV of the contract on that date).\n          maturityDate is the date when the forward loan or deposit\n          ends. In fact, the FRA settles and expires on the\n          valueDate, not on the (later) maturityDate. It follows that\n          (maturityDate - valueDate) is the tenor/term of the\n          underlying loan or deposit\n\n       2. Choose position type = Long for an \"FRA purchase\" (future\n          long loan, short deposit [borrower])\n\n       3. Choose position type = Short for an \"FRA sale\" (future short\n          loan, long deposit [lender])\n\n       4. If strike is given in the constructor, can calculate the NPV\n          of the contract via NPV().\n\n       5. If forward rate is desired/unknown, it can be obtained via\n          forwardRate(). In this case, the strike variable in the\n          constructor is irrelevant and will be ignored.\n\n       <b>Example: </b>\n       \\link FRA.cs\n       valuation of a forward-rate agreement", "func_src_after": "﻿/*\n Copyright (C) 2020 Jean-Camille Tournier (<EMAIL>)\n\n This file is part of QLCore Project https://github.com/OpenDerivatives/QLCore\n\n QLCore is free software: you can redistribute it and/or modify it\n under the terms of the QLCore and QLNet license. You should have received a\n copy of the license along with this program; if not, license is\n available at https://github.com/OpenDerivatives/QLCore/LICENSE.\n\n QLCore is a forked of QLNet which is a based on QuantLib, a free-software/open-source\n library for financial quantitative analysts and developers - http://quantlib.org/\n The QuantLib license is available online at http://quantlib.org/license.shtml and the\n QLNet license is available online at https://github.com/amaggiulli/QLNet/blob/develop/LICENSE.\n\n This program is distributed in the hope that it will be useful, but WITHOUT\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n FOR A PARTICAR PURPOSE. See the license for more details.\n*/\n\nnamespace QLCore\n{\n   //! %Forward rate agreement (FRA) class\n   /*! 1. Unlike the forward contract conventions on carryable\n          financial assets (stocks, bonds, commodities), the\n          valueDate for a FRA is taken to be the day when the forward\n          loan or deposit begins and when full settlement takes place\n          (based on the NPV of the contract on that date).\n          maturityDate is the date when the forward loan or deposit\n          ends. In fact, the FRA settles and expires on the\n          valueDate, not on the (later) maturityDate. It follows that\n          (maturityDate - valueDate) is the tenor/term of the\n          underlying loan or deposit\n\n       2. Choose position type = Long for an \"FRA purchase\" (future\n          long loan, short deposit [borrower])\n\n       3. Choose position type = Short for an \"FRA sale\" (future short\n          loan, long deposit [lender])\n\n       4. If strike is given in the constructor, can calculate the NPV\n          of the contract via NPV().\n\n       5. If forward rate is desired/unknown, it can be obtained via\n          forwardRate(). In this case, the strike variable in the\n          constructor is irrelevant and will be ignored.\n\n       <b>Example: </b>\n       \\link FRA.cs\n       valuation of a forward-rate agreement", "line_changes": {"deleted": [{"line_no": 2, "char_start": 4, "char_end": 67, "line": " Copyright (C) 2020 Jean-Camille Tournier (mail@tournierjc.fr)\n"}], "added": [{"line_no": 3, "char_start": 4, "char_end": 56, "line": " Copyright (C) 2020 Jean-Camille Tournier (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 4, "char_end": 67, "chars": " Copyright (C) 2020 Jean-Camille Tournier (mail@tournierjc.fr)\n"}], "added": [{"char_start": 4, "char_end": 56, "chars": " Copyright (C) 2020 Jean-Camille Tournier (<EMAIL>)\n"}]}}
{"func_name": 2138, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Linq;\nusing System.Text;\n\nnamespace Sultanlar.DatabaseObject.Kenton\n{\n    public class TarifGoruntuleme\n    {\n        public static long DoInsert(int TarifID, int UyeID, string IP)\n        {\n            long donendeger = 0;\n            if (IP.IndexOf(\"::1\") > -1)\n                return 0;\n\n            using (SqlConnection conn = new SqlConnection(General.ConnectionString))\n            {\n                SqlCommand cmd = new SqlCommand(\"INSERT INTO [tblKENTON_TarifGoruntuleme] (intTarifID,intUyeID,dtTarih,strIP) VALUES (@intTarifID,@intUyeID,@dtTarih,@strIP) SELECT @pkID = SCOPE_IDENTITY()\", conn);\n                cmd.Parameters.Add(\"@intTarifID\", SqlDbType.Int).Value = TarifID;\n                cmd.Parameters.Add(\"@intUyeID\", SqlDbType.Int).Value = UyeID;\n                cmd.Parameters.Add(\"@dtTarih\", SqlDbType.SmallDateTime).Value = DateTime.Now;\n                cmd.Parameters.Add(\"@strIP\", SqlDbType.VarChar, 15).Value = IP;\n                cmd.Parameters.Add(\"@pkID\", SqlDbType.Int).Direction = ParameterDirection.Output;\n                try\n                {\n                    conn.Open();\n                    cmd.ExecuteNonQuery();\n                    donendeger = Convert.ToInt32(cmd.Parameters[\"@pkID\"].Value);\n                }\n                catch (SqlException ex)\n                {\n                    Hatalar.DoInsert(ex);\n                }\n                finally\n                {\n                    conn.Close();\n                }\n            }\n\n            return donendeger;\n        }\n    }\n\n    public class Yerler\n    {\n        public static long DoInsert(int UyeID, string Sayfa, string SayfaID, string Tarayici, string IP)\n        {\n            long donendeger = 0;", "func_src_after": "﻿using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Linq;\nusing System.Text;\n\nnamespace Sultanlar.DatabaseObject.Kenton\n{\n    public class TarifGoruntuleme\n    {\n        public static long DoInsert(int TarifID, int UyeID, string IP)\n        {\n            long donendeger = 0;\n            if (IP.IndexOf(\"<IP-Address>\") > -1)\n                return 0;\n\n            using (SqlConnection conn = new SqlConnection(General.ConnectionString))\n            {\n                SqlCommand cmd = new SqlCommand(\"INSERT INTO [tblKENTON_TarifGoruntuleme] (intTarifID,intUyeID,dtTarih,strIP) VALUES (@intTarifID,@intUyeID,@dtTarih,@strIP) SELECT @pkID = SCOPE_IDENTITY()\", conn);\n                cmd.Parameters.Add(\"@intTarifID\", SqlDbType.Int).Value = TarifID;\n                cmd.Parameters.Add(\"@intUyeID\", SqlDbType.Int).Value = UyeID;\n                cmd.Parameters.Add(\"@dtTarih\", SqlDbType.SmallDateTime).Value = DateTime.Now;\n                cmd.Parameters.Add(\"@strIP\", SqlDbType.VarChar, 15).Value = IP;\n                cmd.Parameters.Add(\"@pkID\", SqlDbType.Int).Direction = ParameterDirection.Output;\n                try\n                {\n                    conn.Open();\n                    cmd.ExecuteNonQuery();\n                    donendeger = Convert.ToInt32(cmd.Parameters[\"@pkID\"].Value);\n                }\n                catch (SqlException ex)\n                {\n                    Hatalar.DoInsert(ex);\n                }\n                finally\n                {\n                    conn.Close();\n                }\n            }\n\n            return donendeger;\n        }\n    }\n\n    public class Yerler\n    {\n        public static long DoInsert(int UyeID, string Sayfa, string SayfaID, string Tarayici, string IP)\n        {\n            long donendeger = 0;", "line_changes": {"deleted": [{"line_no": 15, "char_start": 334, "char_end": 374, "line": "            if (IP.IndexOf(\"::1\") > -1)\n"}], "added": [{"line_no": 16, "char_start": 334, "char_end": 383, "line": "            if (IP.IndexOf(\"<IP-Address>\") > -1)\n"}]}, "char_changes": {"deleted": [{"char_start": 334, "char_end": 374, "chars": "            if (IP.IndexOf(\"::1\") > -1)\n"}], "added": [{"char_start": 334, "char_end": 383, "chars": "            if (IP.IndexOf(\"<IP-Address>\") > -1)\n"}]}}
{"func_name": 2150, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// \n// Copyright (c) 2004-2021 Jaroslaw Kowalski <jaak@jkowalski.net>, Kim Christensen, Julian Verdurmen\n// \n// All rights reserved.\n// \n// Redistribution and use in source and binary forms, with or without \n// modification, are permitted provided that the following conditions \n// are met:\n// \n// * Redistributions of source code must retain the above copyright notice, \n//   this list of conditions and the following disclaimer. \n// \n// * Redistributions in binary form must reproduce the above copyright notice,\n//   this list of conditions and the following disclaimer in the documentation\n//   and/or other materials provided with the distribution. \n// \n// * Neither the name of Jaroslaw Kowalski nor the names of its \n//   contributors may be used to endorse or promote products derived from this\n//   software without specific prior written permission. \n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE \n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) \n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF \n// THE POSSIBILITY OF SUCH DAMAGE.\n// \n\nusing System;\nusing System.IO;\nusing System.Text;\nusing NLog.Config;\n\nnamespace NLog.UnitTests.Config\n{\n    using NLog.Common;\n    using Xunit;\n\n    public class InternalLoggingTests : NLogTestBase\n    {\n        [Fact]\n        public void InternalLoggingConfigTest1()\n        {\n            InternalLoggingConfigTest(LogLevel.Trace, true, true, LogLevel.Warn, true, true, @\"c:\\temp\\nlog\\file.txt\", true, true);\n        }", "func_src_after": "// \n// Copyright (c) 2004-2021 Jaroslaw Kowalski <<EMAIL>>, Kim Christensen, Julian Verdurmen\n// \n// All rights reserved.\n// \n// Redistribution and use in source and binary forms, with or without \n// modification, are permitted provided that the following conditions \n// are met:\n// \n// * Redistributions of source code must retain the above copyright notice, \n//   this list of conditions and the following disclaimer. \n// \n// * Redistributions in binary form must reproduce the above copyright notice,\n//   this list of conditions and the following disclaimer in the documentation\n//   and/or other materials provided with the distribution. \n// \n// * Neither the name of Jaroslaw Kowalski nor the names of its \n//   contributors may be used to endorse or promote products derived from this\n//   software without specific prior written permission. \n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE \n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) \n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF \n// THE POSSIBILITY OF SUCH DAMAGE.\n// \n\nusing System;\nusing System.IO;\nusing System.Text;\nusing NLog.Config;\n\nnamespace NLog.UnitTests.Config\n{\n    using NLog.Common;\n    using Xunit;\n\n    public class InternalLoggingTests : NLogTestBase\n    {\n        [Fact]\n        public void InternalLoggingConfigTest1()\n        {\n            InternalLoggingConfigTest(LogLevel.Trace, true, true, LogLevel.Warn, true, true, @\"c:\\temp\\nlog\\file.txt\", true, true);\n        }", "line_changes": {"deleted": [{"line_no": 2, "char_start": 4, "char_end": 105, "line": "// Copyright (c) 2004-2021 Jaroslaw Kowalski <jaak@jkowalski.net>, Kim Christensen, Julian Verdurmen\n"}], "added": [{"line_no": 3, "char_start": 4, "char_end": 94, "line": "// Copyright (c) 2004-2021 Jaroslaw Kowalski <<EMAIL>>, Kim Christensen, Julian Verdurmen\n"}]}, "char_changes": {"deleted": [{"char_start": 4, "char_end": 105, "chars": "// Copyright (c) 2004-2021 Jaroslaw Kowalski <jaak@jkowalski.net>, Kim Christensen, Julian Verdurmen\n"}], "added": [{"char_start": 4, "char_end": 94, "chars": "// Copyright (c) 2004-2021 Jaroslaw Kowalski <<EMAIL>>, Kim Christensen, Julian Verdurmen\n"}]}}
{"func_name": 2192, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                Name = \"Some hook\",\n                Url = \"https://www.cracked.com/\",\n                HttpBasicPassword = \"Tepes\",\n                HttpBasicUsername = \"Vlad\",\n                Topics = new List<string>()\n            {\n                \"Entry.create\",\n                \"Asset.publish\"\n            }\n            };\n            var contentSet = \"\";\n            var url = \"\";\n            var method = HttpMethod.Trace;\n            _handler.VerifyRequest = async (HttpRequestMessage request) =>\n            {\n                method = request.Method;\n                url = request.RequestUri.ToString();\n                contentSet = await (request.Content as StringContent).ReadAsStringAsync();\n            };\n\n            //Act\n            var res = await _client.CreateWebhook(webhook);\n\n            //Assert\n            Assert.Equal(HttpMethod.Post, method);\n            Assert.Equal(\"https://api.contentful.com/spaces/666/webhook_definitions\", url);\n            Assert.Contains(@\"\"\"name\"\":\"\"Some hook\"\"\", contentSet);\n            Assert.Contains(@\"\"\"url\"\":\"\"https://www.cracked.com/\"\"\", contentSet);\n            Assert.Contains(@\"\"\"httpBasicUsername\"\":\"\"Vlad\"\"\", contentSet);\n            Assert.Contains(@\"\"\"httpBasicPassword\"\":\"\"Tepes\"\"\", contentSet);\n            Assert.Contains(@\"\"\"Entry.create\"\"\", contentSet);\n            Assert.Contains(@\"\"\"Asset.publish\"\"\", contentSet);\n            Assert.DoesNotContain(@\"\"\"transformation\"\"\", contentSet);\n        }\n\n        [Theory]\n        [InlineData(\"\")]\n        [InlineData(null)]\n        public async Task CreateOrUpdateWebhookShouldThrowIfNoIdSet(string id)\n        {\n            //Arrange\n            var webHook = new Webhook()\n            {\n                SystemProperties = new SystemProperties()\n            };\n            webHook.SystemProperties.Id = id;\n\n            //Act\n            var ex = await Assert.ThrowsAsync<ArgumentException>(async () => await _client.CreateOrUpdateWebhook(webHook));\n", "func_src_after": "                Name = \"Some hook\",\n                Url = \"https://www.cracked.com/\",\n                HttpBasicPassword = \"Tepes\",\n                HttpBasicUsername = \"Vlad\",\n                Topics = new List<string>()\n            {\n                \"Entry.create\",\n                \"Asset.publish\"\n            }\n            };\n            var contentSet = \"\";\n            var url = \"\";\n            var method = HttpMethod.Trace;\n            _handler.VerifyRequest = async (HttpRequestMessage request) =>\n            {\n                method = request.Method;\n                url = request.RequestUri.ToString();\n                contentSet = await (request.Content as StringContent).ReadAsStringAsync();\n            };\n\n            //Act\n            var res = await _client.CreateWebhook(webhook);\n\n            //Assert\n            Assert.Equal(HttpMethod.Post, method);\n            Assert.Equal(\"https://api.contentful.com/spaces/666/webhook_definitions\", url);\n            Assert.Contains(@\"\"\"name\"\":\"\"Some hook\"\"\", contentSet);\n            Assert.Contains(@\"\"\"url\"\":\"\"https://www.cracked.com/\"\"\", contentSet);\n            Assert.Contains(@\"\"\"httpBasicUsername\"\":\"\"Vlad\"\"\", contentSet);\n            Assert.Contains(@\"\"\"httpBasicPassword\"\":\"\"Tepes\"\"\", contentSet);\n            Assert.Contains(@\"\"\"Entry.create\"\"\", contentSet);\n            Assert.Contains(@\"\"\"Asset.publish\"\"\", contentSet);\n            Assert.DoesNotContain(@\"\"\"transformation\"\"\", contentSet);\n        }\n\n        [Theory]\n        [InlineData(\"\")]\n        [InlineData(null)]\n        public async Task CreateOrUpdateWebhookShouldThrowIfNoIdSet(string id)\n        {\n            //Arrange\n            var webHook = new Webhook()\n            {\n                SystemProperties = new SystemProperties()\n            };\n            webHook.SystemProperties.Id = id;\n\n            //Act\n            var ex = await Assert.ThrowsAsync<ArgumentException>(async () => await _client.CreateOrUpdateWebhook(webHook));\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2205, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿// <Snippet2>\r\nusing System;\r\nusing System.Globalization;\r\n\r\npublic class Example\r\n{\r\n   public static void Main()\r\n   {\r\n      string[] names = { \"johann_doe@bücher.com\", \"vi@мойдомен.рф\", \"ia@παράδειγμα.δοκιμή\",\r\n                         \"webmaster@mycharity\\u3002org\",\r\n                         \"admin@prose\\u0000ware.com\", \"john_doe@proseware..com\",\r\n                         \"jane_doe@a.org\", \"me@my_company.com\" };\r\n      IdnMapping idn = new IdnMapping();\r\n\r\n      foreach (var thisName in names) {\r\n         string name = thisName;\r\n         try {\r\n            int position = name.LastIndexOf(\"@\");\r\n            if (position >= 0)\r\n               name = name.Substring(position + 1);\r\n\r\n            string punyCode = idn.GetAscii(name);\r\n            string name2 = idn.GetUnicode(punyCode);\r\n            Console.WriteLine(\"{0} --> {1} --> {2}\", name, punyCode, name2);\r\n            Console.WriteLine(\"Original: {0}\", ShowCodePoints(name));\r\n            Console.WriteLine(\"Restored: {0}\", ShowCodePoints(name2));\r\n         }\r\n         catch (ArgumentException) {\r\n            Console.WriteLine(\"{0} is not a valid domain name.\", name);\r\n         }\r\n         Console.WriteLine();\r\n      }\r\n   }\r\n\r\n   private static string ShowCodePoints(string str1)\r\n   {\r\n      string output = \"\";\r\n      foreach (var ch in str1)\r\n         output += String.Format(\"U+{0} \", Convert.ToUInt16(ch).ToString(\"X4\"));\r\n\r\n      return output;\r\n   }\r\n}\r\n// The example displays the following output:\r\n//    bücher.com --> xn--bcher-kva.com --> bücher.com\r\n//    Original: U+0062 U+00FC U+0063 U+0068 U+0065 U+0072 U+002E U+0063 U+006F U+006D\r\n//    Restored: U+0062 U+00FC U+0063 U+0068 U+0065 U+0072 U+002E U+0063 U+006F U+006D\r\n//\r\n//    мойдомен.рф --> xn--d1acklchcc.xn--p1ai --> мойдомен.рф\r\n//    Original: U+043C U+043E U+0439 U+0434 U+043E U+043C U+0435 U+043D U+002E U+0440 U+0444\r", "func_src_after": "﻿// <Snippet2>\r\nusing System;\r\nusing System.Globalization;\r\n\r\npublic class Example\r\n{\r\n   public static void Main()\r\n   {\r\n      string[] names = { \"<EMAIL>\", \"<EMAIL>\", \"i<EMAIL>\",\r\n                         \"<EMAIL>\",\r\n                         \"<EMAIL>\", \"<EMAIL>\",\r\n                         \"<EMAIL>\", \"<EMAIL>\" };\r\n      IdnMapping idn = new IdnMapping();\r\n\r\n      foreach (var thisName in names) {\r\n         string name = thisName;\r\n         try {\r\n            int position = name.LastIndexOf(\"@\");\r\n            if (position >= 0)\r\n               name = name.Substring(position + 1);\r\n\r\n            string punyCode = idn.GetAscii(name);\r\n            string name2 = idn.GetUnicode(punyCode);\r\n            Console.WriteLine(\"{0} --> {1} --> {2}\", name, punyCode, name2);\r\n            Console.WriteLine(\"Original: {0}\", ShowCodePoints(name));\r\n            Console.WriteLine(\"Restored: {0}\", ShowCodePoints(name2));\r\n         }\r\n         catch (ArgumentException) {\r\n            Console.WriteLine(\"{0} is not a valid domain name.\", name);\r\n         }\r\n         Console.WriteLine();\r\n      }\r\n   }\r\n\r\n   private static string ShowCodePoints(string str1)\r\n   {\r\n      string output = \"\";\r\n      foreach (var ch in str1)\r\n         output += String.Format(\"U+{0} \", Convert.ToUInt16(ch).ToString(\"X4\"));\r\n\r\n      return output;\r\n   }\r\n}\r\n// The example displays the following output:\r\n//    bücher.com --> xn--bcher-kva.com --> bücher.com\r\n//    Original: U+0062 U+00FC U+0063 U+0068 U+0065 U+0072 U+002E U+0063 U+006F U+006D\r\n//    Restored: U+0062 U+00FC U+0063 U+0068 U+0065 U+0072 U+002E U+0063 U+006F U+006D\r\n//\r\n//    мойдомен.рф --> xn--d1acklchcc.xn--p1ai --> мойдомен.рф\r\n//    Original: U+043C U+043E U+0439 U+0434 U+043E U+043C U+0435 U+043D U+002E U+0440 U+0444\r", "line_changes": {"deleted": [{"line_no": 9, "char_start": 123, "char_end": 216, "line": "      string[] names = { \"johann_doe@bücher.com\", \"vi@мойдомен.рф\", \"ia@παράδειγμα.δοκιμή\",\r\n"}, {"line_no": 10, "char_start": 123, "char_end": 181, "line": "                         \"webmaster@mycharity\\u3002org\",\r\n"}, {"line_no": 11, "char_start": 123, "char_end": 205, "line": "                         \"admin@prose\\u0000ware.com\", \"john_doe@proseware..com\",\r\n"}, {"line_no": 12, "char_start": 123, "char_end": 190, "line": "                         \"jane_doe@a.org\", \"me@my_company.com\" };\r\n"}], "added": [{"line_no": 13, "char_start": 123, "char_end": 183, "line": "      string[] names = { \"<EMAIL>\", \"<EMAIL>\", \"i<EMAIL>\",\r\n"}, {"line_no": 14, "char_start": 183, "char_end": 220, "line": "                         \"<EMAIL>\",\r\n"}, {"line_no": 15, "char_start": 220, "char_end": 268, "line": "                         \"<EMAIL>\", \"<EMAIL>\",\r\n"}, {"line_no": 16, "char_start": 268, "char_end": 318, "line": "                         \"<EMAIL>\", \"<EMAIL>\" };\r\n"}]}, "char_changes": {"deleted": [{"char_start": 123, "char_end": 216, "chars": "      string[] names = { \"johann_doe@bücher.com\", \"vi@мойдомен.рф\", \"ia@παράδειγμα.δοκιμή\",\r\n"}, {"char_start": 123, "char_end": 181, "chars": "                         \"webmaster@mycharity\\u3002org\",\r\n"}, {"char_start": 123, "char_end": 205, "chars": "                         \"admin@prose\\u0000ware.com\", \"john_doe@proseware..com\",\r\n"}, {"char_start": 123, "char_end": 190, "chars": "                         \"jane_doe@a.org\", \"me@my_company.com\" };\r\n"}], "added": [{"char_start": 123, "char_end": 183, "chars": "      string[] names = { \"<EMAIL>\", \"<EMAIL>\", \"i<EMAIL>\",\r\n"}, {"char_start": 183, "char_end": 220, "chars": "                         \"<EMAIL>\",\r\n"}, {"char_start": 220, "char_end": 268, "chars": "                         \"<EMAIL>\", \"<EMAIL>\",\r\n"}, {"char_start": 268, "char_end": 318, "chars": "                         \"<EMAIL>\", \"<EMAIL>\" };\r\n"}]}}
{"func_name": 2208, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿#pragma checksum \"S:\\Code\\VisualStudioWorkSpace\\FullPlatformPublisher\\FullPlatformPublisher\\MainPage.xaml\" \"{8829d00f-11b8-4213-878b-770e8597ac16}\" \"79EAA42C8D6D163844AE1A981FD7472319471AAB72A214CC9B5F9B5CDD902368\"\n//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\nnamespace FullPlatformPublisher\n{\n    partial class MainPage : global::Windows.UI.Xaml.Controls.Page\n    {\n\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Page page_mainPage; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Canvas canvas_main; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Canvas canvas_left; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.WebView webView_viewer; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.TextBox textBox_path; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Button button_flush; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Button button_return; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.ScrollViewer scrollViewer_files; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Button button_openPath; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Grid grid_files; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_toutiao; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_heybox; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_zhihu; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_bilibili; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_dayu; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Windows.UI.Xaml.Controls.Button button_generateHtml; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n        private global::Microsoft.UI.Xaml.Controls.SplitButton splitButton_new; ", "func_src_after": "﻿#pragma checksum \"S:\\Code\\VisualStudioWorkSpace\\FullPlatformPublisher\\FullPlatformPublisher\\MainPage.xaml\" \"{8829d00f-11b8-4213-878b-770e8597ac16}\" \"79EAA42C8D6D163844AE1A981FD7472319471AAB72A214CC9B5F9B5CDD902368\"\n//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\nnamespace FullPlatformPublisher\n{\n    partial class MainPage : global::Windows.UI.Xaml.Controls.Page\n    {\n\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Page page_mainPage; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Canvas canvas_main; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Canvas canvas_left; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.WebView webView_viewer; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.TextBox textBox_path; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Button button_flush; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Button button_return; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.ScrollViewer scrollViewer_files; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Button button_openPath; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Grid grid_files; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_toutiao; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_heybox; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_zhihu; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_bilibili; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.CheckBox checkBox_dayu; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Windows.UI.Xaml.Controls.Button button_generateHtml; \n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n        private global::Microsoft.UI.Xaml.Controls.SplitButton splitButton_new; ", "line_changes": {"deleted": [{"line_no": 17, "char_start": 683, "char_end": 805, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 20, "char_start": 875, "char_end": 997, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 23, "char_start": 1067, "char_end": 1189, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 26, "char_start": 1259, "char_end": 1381, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 29, "char_start": 1455, "char_end": 1577, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 32, "char_start": 1649, "char_end": 1771, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 35, "char_start": 1842, "char_end": 1964, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 38, "char_start": 2036, "char_end": 2158, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 41, "char_start": 2241, "char_end": 2363, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 44, "char_start": 2437, "char_end": 2559, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 47, "char_start": 2626, "char_end": 2748, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 50, "char_start": 2825, "char_end": 2947, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 53, "char_start": 3023, "char_end": 3145, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 56, "char_start": 3220, "char_end": 3342, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 59, "char_start": 3420, "char_end": 3542, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 62, "char_start": 3616, "char_end": 3738, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"line_no": 65, "char_start": 3816, "char_end": 3938, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}], "added": [{"line_no": 18, "char_start": 683, "char_end": 805, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 21, "char_start": 875, "char_end": 997, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 24, "char_start": 1067, "char_end": 1189, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 27, "char_start": 1259, "char_end": 1381, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 30, "char_start": 1455, "char_end": 1577, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 33, "char_start": 1649, "char_end": 1771, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 36, "char_start": 1842, "char_end": 1964, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 39, "char_start": 2036, "char_end": 2158, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 42, "char_start": 2241, "char_end": 2363, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 45, "char_start": 2437, "char_end": 2559, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 48, "char_start": 2626, "char_end": 2748, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 51, "char_start": 2825, "char_end": 2947, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 54, "char_start": 3023, "char_end": 3145, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 57, "char_start": 3220, "char_end": 3342, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 60, "char_start": 3420, "char_end": 3542, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 63, "char_start": 3616, "char_end": 3738, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"line_no": 66, "char_start": 3816, "char_end": 3938, "line": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}]}, "char_changes": {"deleted": [{"char_start": 683, "char_end": 805, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 875, "char_end": 997, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 1067, "char_end": 1189, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 1259, "char_end": 1381, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 1455, "char_end": 1577, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 1649, "char_end": 1771, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 1842, "char_end": 1964, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 2036, "char_end": 2158, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 2241, "char_end": 2363, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 2437, "char_end": 2559, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 2626, "char_end": 2748, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 2825, "char_end": 2947, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 3023, "char_end": 3145, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 3220, "char_end": 3342, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 3420, "char_end": 3542, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 3616, "char_end": 3738, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}, {"char_start": 3816, "char_end": 3938, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 10.0.19041.1\")]\n"}], "added": [{"char_start": 683, "char_end": 805, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 875, "char_end": 997, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 1067, "char_end": 1189, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 1259, "char_end": 1381, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 1455, "char_end": 1577, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 1649, "char_end": 1771, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 1842, "char_end": 1964, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 2036, "char_end": 2158, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 2241, "char_end": 2363, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 2437, "char_end": 2559, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 2626, "char_end": 2748, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 2825, "char_end": 2947, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 3023, "char_end": 3145, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 3220, "char_end": 3342, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 3420, "char_end": 3542, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 3616, "char_end": 3738, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}, {"char_start": 3816, "char_end": 3938, "chars": "        [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" <IP-Address>\")]\n"}]}}
{"func_name": 2234, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿using System;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nnamespace Jlw.Utilities.Data.Tests.UnitTests.DataUtilityStatic\n{\n    [TestClass]\n    public class CidrFixture\n    {\n        [TestMethod]\n        // Double checked values via http://www.ip-tools.net/ipcalc\n        [DataRow(\"10.23.2.101/16\", \"10.23.2.101\", 16, \"10.23.0.0\", \"10.23.0.1\", \"10.23.255.254\", \"10.23.255.255\", (UInt32)65534)]\n        [DataRow(\"192.168.2.100/24\", \"192.168.2.100\", 24, \"192.168.2.0\", \"192.168.2.1\", \"192.168.2.254\", \"192.168.2.255\", (UInt32)254)]\n        [DataRow(\"204.184.214.32/5\", \"204.184.214.32\", 5, \"200.0.0.0\", \"200.0.0.1\", \"207.255.255.254\", \"207.255.255.255\", (UInt32)134217726)]\n        [DataRow(\"8.8.8.8/30\", \"8.8.8.8\", 30, \"8.8.8.8\", \"8.8.8.9\", \"8.8.8.10\", \"8.8.8.11\", (UInt32)2)]\n        [DataRow(\"127.100.50.25/31\", \"127.100.50.25\", 31, \"127.100.50.24\", \"127.100.50.24\", \"127.100.50.25\", \"127.100.50.25\", (UInt32)2)]\n        [DataRow(\"204.184.214.31/32\", \"204.184.214.31\", 32, \"204.184.214.31\", \"204.184.214.31\", \"204.184.214.31\", \"204.184.214.31\", (UInt32)1)]\n        [DataRow(\"127.2.1.38/8\", \"127.2.1.38\", 8, \"127.0.0.0\", \"127.0.0.1\", \"127.255.255.254\", \"127.255.255.255\", (UInt32)16777214)]\n        [DataRow(\"182.184.214.32/2\", \"182.184.214.32\", 2, \"128.0.0.0\", \"128.0.0.1\", \"191.255.255.254\", \"191.255.255.255\", (UInt32)1073741822)]\n        [DataRow(\"182.184.214.33/1\", \"182.184.214.33\", 1, \"128.0.0.0\", \"128.0.0.1\", \"255.255.255.254\", \"255.255.255.255\", (UInt32)2147483646)]\n        [DataRow(\"127.184.214.33/1\", \"127.184.214.33\", 1, \"0.0.0.0\", \"0.0.0.1\", \"127.255.255.254\", \"127.255.255.255\", (UInt32)2147483646)]\n        [DataRow(\"254.184.214.32/0\", \"254.184.214.32\", 0, \"0.0.0.0\", \"0.0.0.1\", \"255.255.255.254\", \"255.255.255.255\", (UInt32)4294967295)]\n        public void Should_Match_ForValidMaskedIp(string cidr, string address, int mask, string net, string firstHost, string lastHost, string broadcast, UInt32 hosts)\n        {\n            TestCidrObject(new DataUtility.CIDR(cidr), address, mask, net, firstHost, lastHost, broadcast, hosts);\n        }\n\n        public void TestCidrObject(DataUtility.CIDR cidr, string address, int mask, string net, string firstHost, string lastHost, string broadcast, UInt32 hosts)\n        {\n            Assert.AreEqual(address, cidr.Address, $\"Address does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(DataUtility.UInt32ToIp(DataUtility.ParseCidrMask(mask)), cidr.NetMask, $\"Net Mask does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(~DataUtility.ParseCidrMask(mask), cidr.NetMaskInverse, $\"Inverse Net Mask does not match for {cidr.Address}/{cidr.Mask}\");\n            Assert.AreEqual(net, cidr.Net, $\"Net does not match for {cidr.Address}/{cidr.Mask}\");\n            Assert.AreEqual(hosts, cidr.Hosts, $\"Number of hosts does not match for {cidr.Address}/{cidr.Mask}.\");\n\n            Assert.AreEqual(firstHost, cidr.FirstHost, $\"First Host does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(lastHost, cidr.LastHost, $\"Last Host does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(broadcast, cidr.Broadcast, $\"Broadcast address does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(mask, cidr.Mask, $\"Bit Mask does not match for {cidr.Address}/{cidr.Mask}.\");\n        }\n\n        [TestMethod]\n        [DataRow(null)]\n        [DataRow(\"\")]\n        [DataRow(\"abcdefg\")]\n        [DataRow(\"255.255.255.255.255\")]\n        [DataRow(\"255.255.255.255\")]\n        [DataRow(\"This is a test!\")]\n        [DataRow(\"a.b.c.d\")]\n        public void Should_BeZero_ForInvalidIpMask(string ip)\n        {", "func_src_after": "﻿using System;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nnamespace Jlw.Utilities.Data.Tests.UnitTests.DataUtilityStatic\n{\n    [TestClass]\n    public class CidrFixture\n    {\n        [TestMethod]\n        // Double checked values via http://www.ip-tools.net/ipcalc\n        [DataRow(\"<IP-Address>/16\", \"<IP-Address>\", 16, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)65534)]\n        [DataRow(\"<IP-Address>/24\", \"<IP-Address>\", 24, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)254)]\n        [DataRow(\"<IP-Address>/5\", \"<IP-Address>\", 5, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)134217726)]\n        [DataRow(\"<IP-Address>/30\", \"<IP-Address>\", 30, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2)]\n        [DataRow(\"<IP-Address>/31\", \"<IP-Address>\", 31, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2)]\n        [DataRow(\"<IP-Address>/32\", \"<IP-Address>\", 32, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)1)]\n        [DataRow(\"<IP-Address>/8\", \"<IP-Address>\", 8, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)16777214)]\n        [DataRow(\"<IP-Address>/2\", \"<IP-Address>\", 2, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)1073741822)]\n        [DataRow(\"<IP-Address>/1\", \"<IP-Address>\", 1, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2147483646)]\n        [DataRow(\"<IP-Address>/1\", \"<IP-Address>\", 1, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2147483646)]\n        [DataRow(\"<IP-Address>/0\", \"<IP-Address>\", 0, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)4294967295)]\n        public void Should_Match_ForValidMaskedIp(string cidr, string address, int mask, string net, string firstHost, string lastHost, string broadcast, UInt32 hosts)\n        {\n            TestCidrObject(new DataUtility.CIDR(cidr), address, mask, net, firstHost, lastHost, broadcast, hosts);\n        }\n\n        public void TestCidrObject(DataUtility.CIDR cidr, string address, int mask, string net, string firstHost, string lastHost, string broadcast, UInt32 hosts)\n        {\n            Assert.AreEqual(address, cidr.Address, $\"Address does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(DataUtility.UInt32ToIp(DataUtility.ParseCidrMask(mask)), cidr.NetMask, $\"Net Mask does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(~DataUtility.ParseCidrMask(mask), cidr.NetMaskInverse, $\"Inverse Net Mask does not match for {cidr.Address}/{cidr.Mask}\");\n            Assert.AreEqual(net, cidr.Net, $\"Net does not match for {cidr.Address}/{cidr.Mask}\");\n            Assert.AreEqual(hosts, cidr.Hosts, $\"Number of hosts does not match for {cidr.Address}/{cidr.Mask}.\");\n\n            Assert.AreEqual(firstHost, cidr.FirstHost, $\"First Host does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(lastHost, cidr.LastHost, $\"Last Host does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(broadcast, cidr.Broadcast, $\"Broadcast address does not match for {cidr.Address}/{cidr.Mask}.\");\n            Assert.AreEqual(mask, cidr.Mask, $\"Bit Mask does not match for {cidr.Address}/{cidr.Mask}.\");\n        }\n\n        [TestMethod]\n        [DataRow(null)]\n        [DataRow(\"\")]\n        [DataRow(\"abcdefg\")]\n        [DataRow(\"255.255.255.255.255\")]\n        [DataRow(\"<IP-Address>\")]\n        [DataRow(\"This is a test!\")]\n        [DataRow(\"a.b.c.d\")]\n        public void Should_BeZero_ForInvalidIpMask(string ip)\n        {", "line_changes": {"deleted": [{"line_no": 11, "char_start": 273, "char_end": 403, "line": "        [DataRow(\"10.23.2.101/16\", \"10.23.2.101\", 16, \"10.23.0.0\", \"10.23.0.1\", \"10.23.255.254\", \"10.23.255.255\", (UInt32)65534)]\n"}, {"line_no": 12, "char_start": 273, "char_end": 409, "line": "        [DataRow(\"192.168.2.100/24\", \"192.168.2.100\", 24, \"192.168.2.0\", \"192.168.2.1\", \"192.168.2.254\", \"192.168.2.255\", (UInt32)254)]\n"}, {"line_no": 13, "char_start": 273, "char_end": 415, "line": "        [DataRow(\"204.184.214.32/5\", \"204.184.214.32\", 5, \"200.0.0.0\", \"200.0.0.1\", \"207.255.255.254\", \"207.255.255.255\", (UInt32)134217726)]\n"}, {"line_no": 14, "char_start": 273, "char_end": 377, "line": "        [DataRow(\"8.8.8.8/30\", \"8.8.8.8\", 30, \"8.8.8.8\", \"8.8.8.9\", \"8.8.8.10\", \"8.8.8.11\", (UInt32)2)]\n"}, {"line_no": 15, "char_start": 273, "char_end": 411, "line": "        [DataRow(\"127.100.50.25/31\", \"127.100.50.25\", 31, \"127.100.50.24\", \"127.100.50.24\", \"127.100.50.25\", \"127.100.50.25\", (UInt32)2)]\n"}, {"line_no": 16, "char_start": 273, "char_end": 417, "line": "        [DataRow(\"204.184.214.31/32\", \"204.184.214.31\", 32, \"204.184.214.31\", \"204.184.214.31\", \"204.184.214.31\", \"204.184.214.31\", (UInt32)1)]\n"}, {"line_no": 17, "char_start": 273, "char_end": 406, "line": "        [DataRow(\"127.2.1.38/8\", \"127.2.1.38\", 8, \"127.0.0.0\", \"127.0.0.1\", \"127.255.255.254\", \"127.255.255.255\", (UInt32)16777214)]\n"}, {"line_no": 18, "char_start": 273, "char_end": 416, "line": "        [DataRow(\"182.184.214.32/2\", \"182.184.214.32\", 2, \"128.0.0.0\", \"128.0.0.1\", \"191.255.255.254\", \"191.255.255.255\", (UInt32)1073741822)]\n"}, {"line_no": 19, "char_start": 273, "char_end": 416, "line": "        [DataRow(\"182.184.214.33/1\", \"182.184.214.33\", 1, \"128.0.0.0\", \"128.0.0.1\", \"255.255.255.254\", \"255.255.255.255\", (UInt32)2147483646)]\n"}, {"line_no": 20, "char_start": 273, "char_end": 412, "line": "        [DataRow(\"127.184.214.33/1\", \"127.184.214.33\", 1, \"0.0.0.0\", \"0.0.0.1\", \"127.255.255.254\", \"127.255.255.255\", (UInt32)2147483646)]\n"}, {"line_no": 21, "char_start": 273, "char_end": 412, "line": "        [DataRow(\"254.184.214.32/0\", \"254.184.214.32\", 0, \"0.0.0.0\", \"0.0.0.1\", \"255.255.255.254\", \"255.255.255.255\", (UInt32)4294967295)]\n"}, {"line_no": 57, "char_start": 3495, "char_end": 3532, "line": "        [DataRow(\"255.255.255.255\")]\n"}], "added": [{"line_no": 22, "char_start": 273, "char_end": 409, "line": "        [DataRow(\"<IP-Address>/16\", \"<IP-Address>\", 16, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)65534)]\n"}, {"line_no": 23, "char_start": 409, "char_end": 543, "line": "        [DataRow(\"<IP-Address>/24\", \"<IP-Address>\", 24, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)254)]\n"}, {"line_no": 24, "char_start": 543, "char_end": 681, "line": "        [DataRow(\"<IP-Address>/5\", \"<IP-Address>\", 5, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)134217726)]\n"}, {"line_no": 25, "char_start": 681, "char_end": 813, "line": "        [DataRow(\"<IP-Address>/30\", \"<IP-Address>\", 30, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2)]\n"}, {"line_no": 26, "char_start": 813, "char_end": 945, "line": "        [DataRow(\"<IP-Address>/31\", \"<IP-Address>\", 31, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2)]\n"}, {"line_no": 27, "char_start": 945, "char_end": 1077, "line": "        [DataRow(\"<IP-Address>/32\", \"<IP-Address>\", 32, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)1)]\n"}, {"line_no": 28, "char_start": 1077, "char_end": 1214, "line": "        [DataRow(\"<IP-Address>/8\", \"<IP-Address>\", 8, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)16777214)]\n"}, {"line_no": 29, "char_start": 1214, "char_end": 1353, "line": "        [DataRow(\"<IP-Address>/2\", \"<IP-Address>\", 2, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)1073741822)]\n"}, {"line_no": 30, "char_start": 1353, "char_end": 1492, "line": "        [DataRow(\"<IP-Address>/1\", \"<IP-Address>\", 1, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2147483646)]\n"}, {"line_no": 31, "char_start": 1492, "char_end": 1631, "line": "        [DataRow(\"<IP-Address>/1\", \"<IP-Address>\", 1, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2147483646)]\n"}, {"line_no": 32, "char_start": 1631, "char_end": 1770, "line": "        [DataRow(\"<IP-Address>/0\", \"<IP-Address>\", 0, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)4294967295)]\n"}, {"line_no": 58, "char_start": 3495, "char_end": 3529, "line": "        [DataRow(\"<IP-Address>\")]\n"}]}, "char_changes": {"deleted": [{"char_start": 273, "char_end": 403, "chars": "        [DataRow(\"10.23.2.101/16\", \"10.23.2.101\", 16, \"10.23.0.0\", \"10.23.0.1\", \"10.23.255.254\", \"10.23.255.255\", (UInt32)65534)]\n"}, {"char_start": 273, "char_end": 409, "chars": "        [DataRow(\"192.168.2.100/24\", \"192.168.2.100\", 24, \"192.168.2.0\", \"192.168.2.1\", \"192.168.2.254\", \"192.168.2.255\", (UInt32)254)]\n"}, {"char_start": 273, "char_end": 415, "chars": "        [DataRow(\"204.184.214.32/5\", \"204.184.214.32\", 5, \"200.0.0.0\", \"200.0.0.1\", \"207.255.255.254\", \"207.255.255.255\", (UInt32)134217726)]\n"}, {"char_start": 273, "char_end": 377, "chars": "        [DataRow(\"8.8.8.8/30\", \"8.8.8.8\", 30, \"8.8.8.8\", \"8.8.8.9\", \"8.8.8.10\", \"8.8.8.11\", (UInt32)2)]\n"}, {"char_start": 273, "char_end": 411, "chars": "        [DataRow(\"127.100.50.25/31\", \"127.100.50.25\", 31, \"127.100.50.24\", \"127.100.50.24\", \"127.100.50.25\", \"127.100.50.25\", (UInt32)2)]\n"}, {"char_start": 273, "char_end": 417, "chars": "        [DataRow(\"204.184.214.31/32\", \"204.184.214.31\", 32, \"204.184.214.31\", \"204.184.214.31\", \"204.184.214.31\", \"204.184.214.31\", (UInt32)1)]\n"}, {"char_start": 273, "char_end": 406, "chars": "        [DataRow(\"127.2.1.38/8\", \"127.2.1.38\", 8, \"127.0.0.0\", \"127.0.0.1\", \"127.255.255.254\", \"127.255.255.255\", (UInt32)16777214)]\n"}, {"char_start": 273, "char_end": 416, "chars": "        [DataRow(\"182.184.214.32/2\", \"182.184.214.32\", 2, \"128.0.0.0\", \"128.0.0.1\", \"191.255.255.254\", \"191.255.255.255\", (UInt32)1073741822)]\n"}, {"char_start": 273, "char_end": 416, "chars": "        [DataRow(\"182.184.214.33/1\", \"182.184.214.33\", 1, \"128.0.0.0\", \"128.0.0.1\", \"255.255.255.254\", \"255.255.255.255\", (UInt32)2147483646)]\n"}, {"char_start": 273, "char_end": 412, "chars": "        [DataRow(\"127.184.214.33/1\", \"127.184.214.33\", 1, \"0.0.0.0\", \"0.0.0.1\", \"127.255.255.254\", \"127.255.255.255\", (UInt32)2147483646)]\n"}, {"char_start": 273, "char_end": 412, "chars": "        [DataRow(\"254.184.214.32/0\", \"254.184.214.32\", 0, \"0.0.0.0\", \"0.0.0.1\", \"255.255.255.254\", \"255.255.255.255\", (UInt32)4294967295)]\n"}, {"char_start": 3495, "char_end": 3532, "chars": "        [DataRow(\"255.255.255.255\")]\n"}], "added": [{"char_start": 273, "char_end": 409, "chars": "        [DataRow(\"<IP-Address>/16\", \"<IP-Address>\", 16, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)65534)]\n"}, {"char_start": 409, "char_end": 543, "chars": "        [DataRow(\"<IP-Address>/24\", \"<IP-Address>\", 24, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)254)]\n"}, {"char_start": 543, "char_end": 681, "chars": "        [DataRow(\"<IP-Address>/5\", \"<IP-Address>\", 5, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)134217726)]\n"}, {"char_start": 681, "char_end": 813, "chars": "        [DataRow(\"<IP-Address>/30\", \"<IP-Address>\", 30, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2)]\n"}, {"char_start": 813, "char_end": 945, "chars": "        [DataRow(\"<IP-Address>/31\", \"<IP-Address>\", 31, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2)]\n"}, {"char_start": 945, "char_end": 1077, "chars": "        [DataRow(\"<IP-Address>/32\", \"<IP-Address>\", 32, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)1)]\n"}, {"char_start": 1077, "char_end": 1214, "chars": "        [DataRow(\"<IP-Address>/8\", \"<IP-Address>\", 8, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)16777214)]\n"}, {"char_start": 1214, "char_end": 1353, "chars": "        [DataRow(\"<IP-Address>/2\", \"<IP-Address>\", 2, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)1073741822)]\n"}, {"char_start": 1353, "char_end": 1492, "chars": "        [DataRow(\"<IP-Address>/1\", \"<IP-Address>\", 1, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2147483646)]\n"}, {"char_start": 1492, "char_end": 1631, "chars": "        [DataRow(\"<IP-Address>/1\", \"<IP-Address>\", 1, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)2147483646)]\n"}, {"char_start": 1631, "char_end": 1770, "chars": "        [DataRow(\"<IP-Address>/0\", \"<IP-Address>\", 0, \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", (UInt32)4294967295)]\n"}, {"char_start": 3495, "char_end": 3529, "chars": "        [DataRow(\"<IP-Address>\")]\n"}]}}
{"func_name": 2235, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "////////////////////////////////////////////////////////////////////////////////\n//                                                                            //\n// MIT X11 license, Copyright (c) 2005-2006 by:                               //\n//                                                                            //\n// Authors:                                                                   //\n//      Michael Dominic K. <michaldominik@gmail.com>                          //\n//                                                                            //\n// Permission is hereby granted, free of charge, to any person obtaining a    //\n// copy of this software and associated documentation files (the \"Software\"), //\n// to deal in the Software without restriction, including without limitation  //\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,   //\n// and/or sell copies of the Software, and to permit persons to whom the      //\n// Software is furnished to do so, subject to the following conditions:       //\n//                                                                            //\n// The above copyright notice and this permission notice shall be included    //\n// in all copies or substantial portions of the Software.                     //\n//                                                                            //\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS    //\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                 //\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN  //\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   //\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR      //\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE  //\n// USE OR OTHER DEALINGS IN THE SOFTWARE.                                     //\n//                                                                            //\n////////////////////////////////////////////////////////////////////////////////\n\nnamespace Diva.Basics {\n\n        using System;\n        using System.Xml;\n\n        public abstract class DataElement {\n                \n                // Fields //////////////////////////////////////////////////////\n\n                protected string name; // Name of the element\n                \n                // Properties //////////////////////////////////////////////////\n\n                public string Name {\n                        get { return name; }\n                }\n\n                public string Type {\n                        get {\n                                // Let's try getting the attribute\n                                if (! (this.GetType ().IsDefined (typeof (TypeAttribute),\n                                                                  false)))\n                                        throw new Exception (\"DataElement does not implement the TypeAttribute\");", "func_src_after": "////////////////////////////////////////////////////////////////////////////////\n//                                                                            //\n// MIT X11 license, Copyright (c) 2005-2006 by:                               //\n//                                                                            //\n// Authors:                                                                   //\n//      Michael Dominic K. <<EMAIL>>                          //\n//                                                                            //\n// Permission is hereby granted, free of charge, to any person obtaining a    //\n// copy of this software and associated documentation files (the \"Software\"), //\n// to deal in the Software without restriction, including without limitation  //\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,   //\n// and/or sell copies of the Software, and to permit persons to whom the      //\n// Software is furnished to do so, subject to the following conditions:       //\n//                                                                            //\n// The above copyright notice and this permission notice shall be included    //\n// in all copies or substantial portions of the Software.                     //\n//                                                                            //\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS    //\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                 //\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN  //\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   //\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR      //\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE  //\n// USE OR OTHER DEALINGS IN THE SOFTWARE.                                     //\n//                                                                            //\n////////////////////////////////////////////////////////////////////////////////\n\nnamespace Diva.Basics {\n\n        using System;\n        using System.Xml;\n\n        public abstract class DataElement {\n                \n                // Fields //////////////////////////////////////////////////////\n\n                protected string name; // Name of the element\n                \n                // Properties //////////////////////////////////////////////////\n\n                public string Name {\n                        get { return name; }\n                }\n\n                public string Type {\n                        get {\n                                // Let's try getting the attribute\n                                if (! (this.GetType ().IsDefined (typeof (TypeAttribute),\n                                                                  false)))\n                                        throw new Exception (\"DataElement does not implement the TypeAttribute\");", "line_changes": {"deleted": [{"line_no": 6, "char_start": 405, "char_end": 486, "line": "//      Michael Dominic K. <michaldominik@gmail.com>                          //\n"}], "added": [{"line_no": 7, "char_start": 405, "char_end": 470, "line": "//      Michael Dominic K. <<EMAIL>>                          //\n"}]}, "char_changes": {"deleted": [{"char_start": 405, "char_end": 486, "chars": "//      Michael Dominic K. <michaldominik@gmail.com>                          //\n"}], "added": [{"char_start": 405, "char_end": 470, "chars": "//      Michael Dominic K. <<EMAIL>>                          //\n"}]}}
{"func_name": 2297, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿// <file>\r\n//     <copyright see=\"prj:///doc/copyright.txt\"/>\r\n//     <license see=\"prj:///doc/license.txt\"/>\r\n//     <owner name=\"Daniel Grunwald\" email=\"daniel@danielgrunwald.de\"/>\r\n//     <version>$Revision: 3692 $</version>\r\n// </file>\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing ICSharpCode.NRefactory;\r\nusing ICSharpCode.NRefactory.Ast;\r\nusing ICSharpCode.NRefactory.AstBuilder;\r\nusing ICSharpCode.NRefactory.Visitors;\r\n\r\nnamespace ICSharpCode.SharpDevelop.Dom.NRefactoryResolver\r\n{\r\n\t/// <summary>\r\n\t/// This class converts C# constructs to their VB.NET equivalents.\r\n\t/// </summary>\r\n\tpublic class VBNetToCSharpConvertVisitor : VBNetConstructsConvertVisitor\r\n\t{\r\n\t\t// Fixes identifier casing\r\n\t\t// Adds using statements for the default usings\r\n\t\t// Convert \"ReDim\" statement\r\n\t\t// Convert \"WithEvents\" fields/\"Handles\" clauses\r\n\t\t// Insert InitializeComponents() call into default constructor\r\n\t\t\r\n\t\tpublic string NamespacePrefixToAdd { get; set; }\r\n\t\t\r\n\t\tprotected readonly IProjectContent projectContent;\r\n\t\tprotected readonly NRefactoryResolver resolver;\r\n\t\tprotected readonly ParseInformation parseInformation;\r\n\t\t\r\n\t\tpublic VBNetToCSharpConvertVisitor(IProjectContent pc, ParseInformation parseInfo)\r\n\t\t{\r\n\t\t\tthis.resolver = new NRefactoryResolver(LanguageProperties.VBNet);\r\n\t\t\tthis.projectContent = pc;\r\n\t\t\tthis.parseInformation = parseInfo;\r\n\t\t}\r\n\t\t\r\n\t\tpublic override object VisitCompilationUnit(CompilationUnit compilationUnit, object data)\r\n\t\t{\r\n\t\t\tbase.VisitCompilationUnit(compilationUnit, data);\r\n\t\t\tif (!string.IsNullOrEmpty(NamespacePrefixToAdd)) {\r\n\t\t\t\tfor (int i = 0; i < compilationUnit.Children.Count; i++) {\r\n\t\t\t\t\tNamespaceDeclaration ns = compilationUnit.Children[i] as NamespaceDeclaration;\r\n\t\t\t\t\tif (ns != null) {\r\n\t\t\t\t\t\tns.Name = NamespacePrefixToAdd + \".\" + ns.Name;\r\n\t\t\t\t\t}\r", "func_src_after": "﻿// <file>\r\n//     <copyright see=\"prj:///doc/copyright.txt\"/>\r\n//     <license see=\"prj:///doc/license.txt\"/>\r\n//     <owner name=\"Daniel Grunwald\" email=\"<EMAIL>\"/>\r\n//     <version>$Revision: 3692 $</version>\r\n// </file>\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing ICSharpCode.NRefactory;\r\nusing ICSharpCode.NRefactory.Ast;\r\nusing ICSharpCode.NRefactory.AstBuilder;\r\nusing ICSharpCode.NRefactory.Visitors;\r\n\r\nnamespace ICSharpCode.SharpDevelop.Dom.NRefactoryResolver\r\n{\r\n\t/// <summary>\r\n\t/// This class converts C# constructs to their VB.NET equivalents.\r\n\t/// </summary>\r\n\tpublic class VBNetToCSharpConvertVisitor : VBNetConstructsConvertVisitor\r\n\t{\r\n\t\t// Fixes identifier casing\r\n\t\t// Adds using statements for the default usings\r\n\t\t// Convert \"ReDim\" statement\r\n\t\t// Convert \"WithEvents\" fields/\"Handles\" clauses\r\n\t\t// Insert InitializeComponents() call into default constructor\r\n\t\t\r\n\t\tpublic string NamespacePrefixToAdd { get; set; }\r\n\t\t\r\n\t\tprotected readonly IProjectContent projectContent;\r\n\t\tprotected readonly NRefactoryResolver resolver;\r\n\t\tprotected readonly ParseInformation parseInformation;\r\n\t\t\r\n\t\tpublic VBNetToCSharpConvertVisitor(IProjectContent pc, ParseInformation parseInfo)\r\n\t\t{\r\n\t\t\tthis.resolver = new NRefactoryResolver(LanguageProperties.VBNet);\r\n\t\t\tthis.projectContent = pc;\r\n\t\t\tthis.parseInformation = parseInfo;\r\n\t\t}\r\n\t\t\r\n\t\tpublic override object VisitCompilationUnit(CompilationUnit compilationUnit, object data)\r\n\t\t{\r\n\t\t\tbase.VisitCompilationUnit(compilationUnit, data);\r\n\t\t\tif (!string.IsNullOrEmpty(NamespacePrefixToAdd)) {\r\n\t\t\t\tfor (int i = 0; i < compilationUnit.Children.Count; i++) {\r\n\t\t\t\t\tNamespaceDeclaration ns = compilationUnit.Children[i] as NamespaceDeclaration;\r\n\t\t\t\t\tif (ns != null) {\r\n\t\t\t\t\t\tns.Name = NamespacePrefixToAdd + \".\" + ns.Name;\r\n\t\t\t\t\t}\r", "line_changes": {"deleted": [{"line_no": 4, "char_start": 112, "char_end": 185, "line": "//     <owner name=\"Daniel Grunwald\" email=\"daniel@danielgrunwald.de\"/>\r\n"}], "added": [{"line_no": 5, "char_start": 112, "char_end": 168, "line": "//     <owner name=\"Daniel Grunwald\" email=\"<EMAIL>\"/>\r\n"}]}, "char_changes": {"deleted": [{"char_start": 112, "char_end": 185, "chars": "//     <owner name=\"Daniel Grunwald\" email=\"daniel@danielgrunwald.de\"/>\r\n"}], "added": [{"char_start": 112, "char_end": 168, "chars": "//     <owner name=\"Daniel Grunwald\" email=\"<EMAIL>\"/>\r\n"}]}}
{"func_name": 2305, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "using System;\nusing System.Collections.Generic;\nusing System.Drawing;\nusing System.IO;\n\n#region .NET Disclaimer/Info\n//===============================================================================\n//\n// gOODiDEA, uland.com\n//===============================================================================\n//\n// $Header :\t\t$  \n// $Author :\t\t$\n// $Date   :\t\t$\n// $Revision:\t\t$\n// $History:\t\t$  \n//  \n//===============================================================================\n#endregion \n\n#region Java\n/**\n * Class AnimatedGifEncoder - Encodes a GIF file consisting of one or\n * more frames.\n * <pre>\n * Example:\n *    AnimatedGifEncoder e = new AnimatedGifEncoder();\n *    e.start(outputFileName);\n *    e.setDelay(1000);   // 1 frame per sec\n *    e.addFrame(image1);\n *    e.addFrame(image2);\n *    e.finish();\n * </pre>\n * No copyright asserted on the source code of this class.  May be used\n * for any purpose, however, refer to the Unisys LZW patent for restrictions\n * on use of the associated LZWEncoder class.  Please forward any corrections\n * to kweiner@fmsware.com.\n *\n * @author Kevin Weiner, FM Software\n * @version 1.03 November 2003\n *\n */\n#endregion\n\nnamespace Gif.Components\n{\n\tpublic class AnimatedGifEncoder\n\t{\n\t\tprotected int width; // image size\n\t\tprotected int height;", "func_src_after": "using System;\nusing System.Collections.Generic;\nusing System.Drawing;\nusing System.IO;\n\n#region .NET Disclaimer/Info\n//===============================================================================\n//\n// gOODiDEA, uland.com\n//===============================================================================\n//\n// $Header :\t\t$  \n// $Author :\t\t$\n// $Date   :\t\t$\n// $Revision:\t\t$\n// $History:\t\t$  \n//  \n//===============================================================================\n#endregion \n\n#region Java\n/**\n * Class AnimatedGifEncoder - Encodes a GIF file consisting of one or\n * more frames.\n * <pre>\n * Example:\n *    AnimatedGifEncoder e = new AnimatedGifEncoder();\n *    e.start(outputFileName);\n *    e.setDelay(1000);   // 1 frame per sec\n *    e.addFrame(image1);\n *    e.addFrame(image2);\n *    e.finish();\n * </pre>\n * No copyright asserted on the source code of this class.  May be used\n * for any purpose, however, refer to the Unisys LZW patent for restrictions\n * on use of the associated LZWEncoder class.  Please forward any corrections\n * to kweiner@fmsware.com.\n *\n * @author Kevin Weiner, FM Software\n * @version 1.03 November 2003\n *\n */\n#endregion\n\nnamespace Gif.Components\n{\n\tpublic class AnimatedGifEncoder\n\t{\n\t\tprotected int width; // image size\n\t\tprotected int height;", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2307, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "using Microsoft.Azure.Functions.Worker;\nusing Microsoft.Azure.Functions.Worker.Http;\nusing Microsoft.Extensions.Logging;\nusing PnP.Core.Admin.Model.SharePoint;\nusing PnP.Core.Model.SharePoint;\nusing PnP.Core.Services;\nusing System;\nusing System.Collections.Specialized;\nusing System.IO;\nusing System.Net;\nusing System.Text.Json;\nusing System.Threading.Tasks;\nusing System.Web;\n\nnamespace ProvisioningDemo\n{\n    public class CreateSite\n    {\n        private readonly ILogger logger;\n        private readonly IPnPContextFactory contextFactory;\n        private readonly AzureFunctionSettings azureFunctionSettings;\n\n        public CreateSite(IPnPContextFactory pnpContextFactory, ILoggerFactory loggerFactory, AzureFunctionSettings settings)\n        {\n            logger = loggerFactory.CreateLogger<CreateSite>();\n            contextFactory = pnpContextFactory;\n            azureFunctionSettings = settings;\n        }\n\n        /// <summary>\n        /// Demo function that creates a site collection, uploads an image to site assets and creates a page with an image web part\n        /// GET/POST url: http://localhost:7071/api/CreateSite?owner=bert.jansen@bertonline.onmicrosoft.com&sitename=deleteme1844\n        /// </summary>\n        /// <param name=\"req\"></param>\n        /// <returns></returns>\n        [Function(\"CreateSite\")]\n        public async Task<HttpResponseData> Run([HttpTrigger(AuthorizationLevel.Function, \"get\", \"post\")] HttpRequestData req)\n        {\n            logger.LogInformation(\"CreateSite function starting...\");\n\n            // Parse the url parameters\n            NameValueCollection parameters = HttpUtility.ParseQueryString(req.Url.Query);\n            var siteName = parameters[\"siteName\"];\n            var owner = parameters[\"owner\"];\n\n            HttpResponseData response = null;\n\n            try\n            {\n                using (var pnpContext = await contextFactory.CreateAsync(\"Default\"))", "func_src_after": "using Microsoft.Azure.Functions.Worker;\nusing Microsoft.Azure.Functions.Worker.Http;\nusing Microsoft.Extensions.Logging;\nusing PnP.Core.Admin.Model.SharePoint;\nusing PnP.Core.Model.SharePoint;\nusing PnP.Core.Services;\nusing System;\nusing System.Collections.Specialized;\nusing System.IO;\nusing System.Net;\nusing System.Text.Json;\nusing System.Threading.Tasks;\nusing System.Web;\n\nnamespace ProvisioningDemo\n{\n    public class CreateSite\n    {\n        private readonly ILogger logger;\n        private readonly IPnPContextFactory contextFactory;\n        private readonly AzureFunctionSettings azureFunctionSettings;\n\n        public CreateSite(IPnPContextFactory pnpContextFactory, ILoggerFactory loggerFactory, AzureFunctionSettings settings)\n        {\n            logger = loggerFactory.CreateLogger<CreateSite>();\n            contextFactory = pnpContextFactory;\n            azureFunctionSettings = settings;\n        }\n\n        /// <summary>\n        /// Demo function that creates a site collection, uploads an image to site assets and creates a page with an image web part\n        /// GET/POST url: http://localhost:7071/api/CreateSite?owner=bert.<EMAIL>&sitename=deleteme1844\n        /// </summary>\n        /// <param name=\"req\"></param>\n        /// <returns></returns>\n        [Function(\"CreateSite\")]\n        public async Task<HttpResponseData> Run([HttpTrigger(AuthorizationLevel.Function, \"get\", \"post\")] HttpRequestData req)\n        {\n            logger.LogInformation(\"CreateSite function starting...\");\n\n            // Parse the url parameters\n            NameValueCollection parameters = HttpUtility.ParseQueryString(req.Url.Query);\n            var siteName = parameters[\"siteName\"];\n            var owner = parameters[\"owner\"];\n\n            HttpResponseData response = null;\n\n            try\n            {\n                using (var pnpContext = await contextFactory.CreateAsync(\"Default\"))", "line_changes": {"deleted": [{"line_no": 32, "char_start": 1071, "char_end": 1201, "line": "        /// GET/POST url: http://localhost:7071/api/CreateSite?owner=bert.jansen@bertonline.onmicrosoft.com&sitename=deleteme1844\n"}], "added": [{"line_no": 33, "char_start": 1071, "char_end": 1175, "line": "        /// GET/POST url: http://localhost:7071/api/CreateSite?owner=bert.<EMAIL>&sitename=deleteme1844\n"}]}, "char_changes": {"deleted": [{"char_start": 1071, "char_end": 1201, "chars": "        /// GET/POST url: http://localhost:7071/api/CreateSite?owner=bert.jansen@bertonline.onmicrosoft.com&sitename=deleteme1844\n"}], "added": [{"char_start": 1071, "char_end": 1175, "chars": "        /// GET/POST url: http://localhost:7071/api/CreateSite?owner=bert.<EMAIL>&sitename=deleteme1844\n"}]}}
{"func_name": 2334, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿namespace SIS.Second.Context\n{\n    using System;\n    using System.Linq;\n\n    using SIS.Domain.Model.Entity;\n\n    /// <summary>\n    /// Заполнение первоночальных данных.\n    /// </summary>\n    internal static class SeedData\n    {\n        /// <summary>\n        /// Добавление пользователя при необходимости.\n        /// </summary>\n        /// <param name=\"context\"></param>\n        internal static void AddUserIfNeed(this SisContext context)\n        {\n            var user1 = new User\n            {\n                Email = \"test@test.com\",\n                FirstName = \"Тест\",\n                LastName = \"Тестовый\",\n                Patronymic = \"Тестович\",\n                Phone = \"+79138784664\"\n            };\n            AddUserIfNeed(context, \"C0B4FAB8-0A46-4411-B021-46C7568C08AD\", user1);\n\n            var user2 = new User\n            {\n                Email = \"test2@test.com\",\n                FirstName = \"Тест2\",\n                LastName = \"Тестовый2\",\n                Patronymic = \"Тестович2\",\n                Phone = \"+79138784666\"\n            };\n            AddUserIfNeed(context, \"7FD92144-A0B7-4F8E-897D-9E200A8A8274\", user2);\n\n            var user3 = new User\n            {\n                Email = \"test3@test.com\",\n                FirstName = \"Тест3\",\n                LastName = \"Тестовый3\",\n                Patronymic = \"Тестович3\",\n                Phone = \"+79138784667\"\n            };\n            AddUserIfNeed(context, \"259CD58A-20BE-4511-BDF3-AAC543D7A6C8\", user3);\n\n            var user4 = new User\n            {", "func_src_after": "﻿namespace SIS.Second.Context\n{\n    using System;\n    using System.Linq;\n\n    using SIS.Domain.Model.Entity;\n\n    /// <summary>\n    /// Заполнение первоночальных данных.\n    /// </summary>\n    internal static class SeedData\n    {\n        /// <summary>\n        /// Добавление пользователя при необходимости.\n        /// </summary>\n        /// <param name=\"context\"></param>\n        internal static void AddUserIfNeed(this SisContext context)\n        {\n            var user1 = new User\n            {\n                Email = \"<EMAIL>\",\n                FirstName = \"Тест\",\n                LastName = \"Тестовый\",\n                Patronymic = \"Тестович\",\n                Phone = \"+79138784664\"\n            };\n            AddUserIfNeed(context, \"C0B4FAB8-0A46-4411-B021-46C7568C08AD\", user1);\n\n            var user2 = new User\n            {\n                Email = \"<EMAIL>\",\n                FirstName = \"Тест2\",\n                LastName = \"Тестовый2\",\n                Patronymic = \"Тестович2\",\n                Phone = \"+79138784666\"\n            };\n            AddUserIfNeed(context, \"7FD92144-A0B7-4F8E-897D-9E200A8A8274\", user2);\n\n            var user3 = new User\n            {\n                Email = \"<EMAIL>\",\n                FirstName = \"Тест3\",\n                LastName = \"Тестовый3\",\n                Patronymic = \"Тестович3\",\n                Phone = \"+79138784667\"\n            };\n            AddUserIfNeed(context, \"259CD58A-20BE-4511-BDF3-AAC543D7A6C8\", user3);\n\n            var user4 = new User\n            {", "line_changes": {"deleted": [{"line_no": 21, "char_start": 498, "char_end": 539, "line": "                Email = \"test@test.com\",\n"}, {"line_no": 32, "char_start": 834, "char_end": 876, "line": "                Email = \"test2@test.com\",\n"}, {"line_no": 43, "char_start": 1173, "char_end": 1215, "line": "                Email = \"test3@test.com\",\n"}], "added": [{"line_no": 22, "char_start": 498, "char_end": 533, "line": "                Email = \"<EMAIL>\",\n"}, {"line_no": 33, "char_start": 834, "char_end": 869, "line": "                Email = \"<EMAIL>\",\n"}, {"line_no": 44, "char_start": 1173, "char_end": 1208, "line": "                Email = \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 498, "char_end": 539, "chars": "                Email = \"test@test.com\",\n"}, {"char_start": 834, "char_end": 876, "chars": "                Email = \"test2@test.com\",\n"}, {"char_start": 1173, "char_end": 1215, "chars": "                Email = \"test3@test.com\",\n"}], "added": [{"char_start": 498, "char_end": 533, "chars": "                Email = \"<EMAIL>\",\n"}, {"char_start": 834, "char_end": 869, "chars": "                Email = \"<EMAIL>\",\n"}, {"char_start": 1173, "char_end": 1208, "chars": "                Email = \"<EMAIL>\",\n"}]}}
{"func_name": 2335, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                Email = \"test4@test.com\",\n                FirstName = \"Тест4\",\n                LastName = \"Тестовый4\",\n                Patronymic = \"Тестович4\",\n                Phone = \"+79138784668\"\n            };\n            AddUserIfNeed(context, \"B0E28779-7FDD-4FAC-86CB-C61DF95F6EFF\", user4);\n\n            var user5 = new User\n            {\n                Email = \"test5@test.com\",\n                FirstName = \"Тест5\",\n                LastName = \"Тестовый5\",\n                Patronymic = \"Тестович5\",\n                Phone = \"+79138784669\"\n            };\n            AddUserIfNeed(context, \"3F8570E5-860C-41BE-AA34-48ADAE85C16D\", user5);\n        }\n\n        private static void AddUserIfNeed(SisContext context, string guid, User userAdding)\n        {\n            var userId = Guid.Parse(guid);\n\n            var user = context.Users.SingleOrDefault(it => it.Id == userId);\n\n            if (user != null)\n                return;\n\n            userAdding.Id = userId;\n\n            context.Add(userAdding);\n        }\n\n        /// <summary>\n        /// Добавление организации при необходимости.\n        /// </summary>\n        /// <param name=\"context\"></param>\n        internal static void AddOrganizationIfNeed(this SisContext context)\n        {\n            AddOrganizationIfNeed(context, \"68D2D6BA-C738-4C7D-A605-CF722BB4ACD8\", \"Тестовая организация\");\n            AddOrganizationIfNeed(context, \"4AA77E75-C909-4AF9-8E6B-1AF5427CF800\", \"Тестовая организация2\");\n            AddOrganizationIfNeed(context, \"E417CCEA-AFE1-4A32-9876-30CC2B5208C5\", \"Тестовая организация3\");\n        }\n\n        private static void AddOrganizationIfNeed(SisContext context, string guid, string organizationName)\n        {\n            var organizationId = Guid.Parse(guid);\n\n            var organization = context.Organizations.SingleOrDefault(it => it.Id == organizationId);\n", "func_src_after": "                Email = \"<EMAIL>\",\n                FirstName = \"Тест4\",\n                LastName = \"Тестовый4\",\n                Patronymic = \"Тестович4\",\n                Phone = \"+79138784668\"\n            };\n            AddUserIfNeed(context, \"B0E28779-7FDD-4FAC-86CB-C61DF95F6EFF\", user4);\n\n            var user5 = new User\n            {\n                Email = \"<EMAIL>\",\n                FirstName = \"Тест5\",\n                LastName = \"Тестовый5\",\n                Patronymic = \"Тестович5\",\n                Phone = \"+79138784669\"\n            };\n            AddUserIfNeed(context, \"3F8570E5-860C-41BE-AA34-48ADAE85C16D\", user5);\n        }\n\n        private static void AddUserIfNeed(SisContext context, string guid, User userAdding)\n        {\n            var userId = Guid.Parse(guid);\n\n            var user = context.Users.SingleOrDefault(it => it.Id == userId);\n\n            if (user != null)\n                return;\n\n            userAdding.Id = userId;\n\n            context.Add(userAdding);\n        }\n\n        /// <summary>\n        /// Добавление организации при необходимости.\n        /// </summary>\n        /// <param name=\"context\"></param>\n        internal static void AddOrganizationIfNeed(this SisContext context)\n        {\n            AddOrganizationIfNeed(context, \"68D2D6BA-C738-4C7D-A605-CF722BB4ACD8\", \"Тестовая организация\");\n            AddOrganizationIfNeed(context, \"4AA77E75-C909-4AF9-8E6B-1AF5427CF800\", \"Тестовая организация2\");\n            AddOrganizationIfNeed(context, \"E417CCEA-AFE1-4A32-9876-30CC2B5208C5\", \"Тестовая организация3\");\n        }\n\n        private static void AddOrganizationIfNeed(SisContext context, string guid, string organizationName)\n        {\n            var organizationId = Guid.Parse(guid);\n\n            var organization = context.Organizations.SingleOrDefault(it => it.Id == organizationId);\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 42, "line": "                Email = \"test4@test.com\",\n"}, {"line_no": 12, "char_start": 339, "char_end": 381, "line": "                Email = \"test5@test.com\",\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 35, "line": "                Email = \"<EMAIL>\",\n"}, {"line_no": 13, "char_start": 339, "char_end": 374, "line": "                Email = \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 42, "chars": "                Email = \"test4@test.com\",\n"}, {"char_start": 339, "char_end": 381, "chars": "                Email = \"test5@test.com\",\n"}], "added": [{"char_start": 0, "char_end": 35, "chars": "                Email = \"<EMAIL>\",\n"}, {"char_start": 339, "char_end": 374, "chars": "                Email = \"<EMAIL>\",\n"}]}}
{"func_name": 2341, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* \n * Scubawhere API Documentation\n *\n * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API \n *\n * OpenAPI spec version: 1.0.0\n * Contact: bryan@scubawhere.com\n * Generated by: https://github.com/swagger-api/swagger-codegen.git\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nusing System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Reflection;\nusing RestSharp;\nusing NUnit.Framework;\n\nusing IO.Swagger.Client;\nusing IO.Swagger.Api;\nusing IO.Swagger.Model;\n\nnamespace IO.Swagger.Test\n{\n    /// <summary>\n    ///  Class for testing CustomerApi\n    /// </summary>\n    /// <remarks>\n    /// This file is automatically generated by Swagger Codegen.\n    /// Please update the test case below to test the API endpoint.\n    /// </remarks>\n    [TestFixture]\n    public class CustomerApiTests\n    {\n        private CustomerApi instance;\n\n        /// <summary>", "func_src_after": "/* \n * Scubawhere API Documentation\n *\n * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API \n *\n * OpenAPI spec version: 1.0.0\n * Contact: <EMAIL>\n * Generated by: https://github.com/swagger-api/swagger-codegen.git\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nusing System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Reflection;\nusing RestSharp;\nusing NUnit.Framework;\n\nusing IO.Swagger.Client;\nusing IO.Swagger.Api;\nusing IO.Swagger.Model;\n\nnamespace IO.Swagger.Test\n{\n    /// <summary>\n    ///  Class for testing CustomerApi\n    /// </summary>\n    /// <remarks>\n    /// This file is automatically generated by Swagger Codegen.\n    /// Please update the test case below to test the API endpoint.\n    /// </remarks>\n    [TestFixture]\n    public class CustomerApiTests\n    {\n        private CustomerApi instance;\n\n        /// <summary>", "line_changes": {"deleted": [{"line_no": 7, "char_start": 300, "char_end": 333, "line": " * Contact: bryan@scubawhere.com\n"}], "added": [{"line_no": 8, "char_start": 300, "char_end": 320, "line": " * Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 300, "char_end": 333, "chars": " * Contact: bryan@scubawhere.com\n"}], "added": [{"char_start": 300, "char_end": 320, "chars": " * Contact: <EMAIL>\n"}]}}
{"func_name": 2400, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright 2010-2022 Jan de Jongh <jfcmdejongh@gmail.com>.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n */\npackage org.javajdj.jinstrument.swing.instrument.hp3325b;\n\nimport java.awt.Color;\nimport java.awt.GridLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JButton;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JTextField;\nimport org.javajdj.jinstrument.FunctionGenerator;\nimport org.javajdj.jinstrument.Instrument;\nimport org.javajdj.jinstrument.InstrumentView;\nimport org.javajdj.jinstrument.InstrumentViewType;\nimport org.javajdj.jinstrument.gpib.fg.hp3325b.HP3325B_GPIB_Instrument;\nimport org.javajdj.jinstrument.swing.base.JFunctionGeneratorPanel;\nimport org.javajdj.jinstrument.swing.base.JInstrumentPanel;\nimport static org.javajdj.jinstrument.swing.base.JInstrumentPanel.getGuiPreferencesManagementColor;\nimport org.javajdj.jswing.jcenter.JCenter;\n\n/** A Swing panel for Display settings of a {@link HP3325B_GPIB_Instrument} Function Generator.\n *\n * @author Jan de Jongh {@literal <jfcmdejongh@gmail.com>}\n * \n */\npublic class JHP3325B_GPIB_Display\n  extends JFunctionGeneratorPanel\n  implements InstrumentView\n{\n  \n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////", "func_src_after": "/*\n * Copyright 2010-2022 Jan de Jongh <<EMAIL>>.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n */\npackage org.javajdj.jinstrument.swing.instrument.hp3325b;\n\nimport java.awt.Color;\nimport java.awt.GridLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JButton;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JTextField;\nimport org.javajdj.jinstrument.FunctionGenerator;\nimport org.javajdj.jinstrument.Instrument;\nimport org.javajdj.jinstrument.InstrumentView;\nimport org.javajdj.jinstrument.InstrumentViewType;\nimport org.javajdj.jinstrument.gpib.fg.hp3325b.HP3325B_GPIB_Instrument;\nimport org.javajdj.jinstrument.swing.base.JFunctionGeneratorPanel;\nimport org.javajdj.jinstrument.swing.base.JInstrumentPanel;\nimport static org.javajdj.jinstrument.swing.base.JInstrumentPanel.getGuiPreferencesManagementColor;\nimport org.javajdj.jswing.jcenter.JCenter;\n\n/** A Swing panel for Display settings of a {@link HP3325B_GPIB_Instrument} Function Generator.\n *\n * @author Jan de Jongh {@literal <<EMAIL>>}\n * \n */\npublic class JHP3325B_GPIB_Display\n  extends JFunctionGeneratorPanel\n  implements InstrumentView\n{\n  \n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 64, "line": " * Copyright 2010-2022 Jan de Jongh <jfcmdejongh@gmail.com>.\n"}, {"line_no": 43, "char_start": 1639, "char_end": 1698, "line": " * @author Jan de Jongh {@literal <jfcmdejongh@gmail.com>}\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 50, "line": " * Copyright 2010-2022 Jan de Jongh <<EMAIL>>.\n"}, {"line_no": 44, "char_start": 1639, "char_end": 1684, "line": " * @author Jan de Jongh {@literal <<EMAIL>>}\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 64, "chars": " * Copyright 2010-2022 Jan de Jongh <jfcmdejongh@gmail.com>.\n"}, {"char_start": 1639, "char_end": 1698, "chars": " * @author Jan de Jongh {@literal <jfcmdejongh@gmail.com>}\n"}], "added": [{"char_start": 3, "char_end": 50, "chars": " * Copyright 2010-2022 Jan de Jongh <<EMAIL>>.\n"}, {"char_start": 1639, "char_end": 1684, "chars": " * @author Jan de Jongh {@literal <<EMAIL>>}\n"}]}}
{"func_name": 2403, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    private static final Long VALID_STUDY_PLAN_ID = 1L;\n    private static final Long INVALID_STUDY_PLAN_ID = 1337L;\n    private Student student = new Student(\"s1234\", \"student\", \"s1234@uis.at\");\n    private Lecturer lecturer = new Lecturer(\"l1234\", \"student\", \"l1234@uis.at\");\n    private StudyPlan studyPlan = new StudyPlan(\"sp\", new EctsDistribution(new BigDecimal(60), new BigDecimal(60), new BigDecimal(60)));\n    private SubjectForStudyPlan subjectForStudyPlan = new SubjectForStudyPlan(new Subject(\"subject\", null),studyPlan, false);\n    private List<Subject> subjects = new ArrayList<>();\n    private List<SubjectForStudyPlan> subjectsForStudyPlan = new ArrayList<>();\n    private List<Grade> grades = new ArrayList<>();\n\n    @Before\n    public void setUp() {\n        subjects.addAll(asList(\n                new Subject(\"VU Programmkonstruktion\", new BigDecimal(8.8)),\n                new Subject(\"UE Studieneingangsgespräch\", new BigDecimal(0.2)),\n                new Subject(\"VU Technische Grundlagen der Informatik\", new BigDecimal(6.0)),\n                new Subject(\"VO Algebra und Diskrete Mathematik für Informatik und Wirtschaftsinformatik\", new BigDecimal(4.0)),\n                new Subject(\"UE Algebra und Diskrete Mathematik für Informatik und Wirtschaftsinformatik\", new BigDecimal(5.0)),\n                new Subject(\"VU Formale Modellierung\", new BigDecimal(3.0)),\n                new Subject(\"VU Datenmodellierung\", new BigDecimal(3.0))\n        ));\n        subjectsForStudyPlan.addAll(asList(\n                new SubjectForStudyPlan(subjects.get(0), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(2), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(4), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(5), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(6), studyPlan, true)\n        ));\n        grades.addAll(asList(\n                new Grade(new Course(subjects.get(0)), lecturer, student, Mark.EXCELLENT),\n                new Grade(new Course(subjects.get(2)), lecturer, student, Mark.GOOD),\n                new Grade(new Course(subjects.get(4)), lecturer, student, Mark.FAILED)\n        ));\n\n        MockitoAnnotations.initMocks(this);\n        when(studyPlanRepository.findOne(VALID_STUDY_PLAN_ID)).thenReturn(studyPlan);\n        when(studyPlanRepository.findOne(INVALID_STUDY_PLAN_ID)).thenReturn(null);\n        when(subjectForStudyPlanRepository.save(subjectForStudyPlan)).thenReturn(subjectForStudyPlan);\n        when(subjectService.searchForSubjects(any())).thenReturn(subjects);\n        when(subjectForStudyPlanRepository.findByStudyPlanIdOrderBySemesterRecommendation(VALID_STUDY_PLAN_ID)).thenReturn(subjectsForStudyPlan);\n        when(gradeService.getGradesForLoggedInStudent()).thenReturn(new ArrayList(grades));\n        studyPlanService = new StudyPlanServiceImpl(studyPlanRepository, subjectForStudyPlanRepository, subjectService, gradeService, messageSource);\n    }\n\n    @After\n    public void tearDown() {\n        subjects.clear();\n        subjectsForStudyPlan.clear();\n        grades.clear();", "func_src_after": "\n    private static final Long VALID_STUDY_PLAN_ID = 1L;\n    private static final Long INVALID_STUDY_PLAN_ID = 1337L;\n    private Student student = new Student(\"s1234\", \"student\", \"<EMAIL>\");\n    private Lecturer lecturer = new Lecturer(\"l1234\", \"student\", \"<EMAIL>);\n    private StudyPlan studyPlan = new StudyPlan(\"sp\", new EctsDistribution(new BigDecimal(60), new BigDecimal(60), new BigDecimal(60)));\n    private SubjectForStudyPlan subjectForStudyPlan = new SubjectForStudyPlan(new Subject(\"subject\", null),studyPlan, false);\n    private List<Subject> subjects = new ArrayList<>();\n    private List<SubjectForStudyPlan> subjectsForStudyPlan = new ArrayList<>();\n    private List<Grade> grades = new ArrayList<>();\n\n    @Before\n    public void setUp() {\n        subjects.addAll(asList(\n                new Subject(\"VU Programmkonstruktion\", new BigDecimal(8.8)),\n                new Subject(\"UE Studieneingangsgespräch\", new BigDecimal(0.2)),\n                new Subject(\"VU Technische Grundlagen der Informatik\", new BigDecimal(6.0)),\n                new Subject(\"VO Algebra und Diskrete Mathematik für Informatik und Wirtschaftsinformatik\", new BigDecimal(4.0)),\n                new Subject(\"UE Algebra und Diskrete Mathematik für Informatik und Wirtschaftsinformatik\", new BigDecimal(5.0)),\n                new Subject(\"VU Formale Modellierung\", new BigDecimal(3.0)),\n                new Subject(\"VU Datenmodellierung\", new BigDecimal(3.0))\n        ));\n        subjectsForStudyPlan.addAll(asList(\n                new SubjectForStudyPlan(subjects.get(0), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(2), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(4), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(5), studyPlan, true),\n                new SubjectForStudyPlan(subjects.get(6), studyPlan, true)\n        ));\n        grades.addAll(asList(\n                new Grade(new Course(subjects.get(0)), lecturer, student, Mark.EXCELLENT),\n                new Grade(new Course(subjects.get(2)), lecturer, student, Mark.GOOD),\n                new Grade(new Course(subjects.get(4)), lecturer, student, Mark.FAILED)\n        ));\n\n        MockitoAnnotations.initMocks(this);\n        when(studyPlanRepository.findOne(VALID_STUDY_PLAN_ID)).thenReturn(studyPlan);\n        when(studyPlanRepository.findOne(INVALID_STUDY_PLAN_ID)).thenReturn(null);\n        when(subjectForStudyPlanRepository.save(subjectForStudyPlan)).thenReturn(subjectForStudyPlan);\n        when(subjectService.searchForSubjects(any())).thenReturn(subjects);\n        when(subjectForStudyPlanRepository.findByStudyPlanIdOrderBySemesterRecommendation(VALID_STUDY_PLAN_ID)).thenReturn(subjectsForStudyPlan);\n        when(gradeService.getGradesForLoggedInStudent()).thenReturn(new ArrayList(grades));\n        studyPlanService = new StudyPlanServiceImpl(studyPlanRepository, subjectForStudyPlanRepository, subjectService, gradeService, messageSource);\n    }\n\n    @After\n    public void tearDown() {\n        subjects.clear();\n        subjectsForStudyPlan.clear();\n        grades.clear();", "line_changes": {"deleted": [{"line_no": 4, "char_start": 118, "char_end": 197, "line": "    private Student student = new Student(\"s1234\", \"student\", \"s1234@uis.at\");\n"}, {"line_no": 6, "char_start": 192, "char_end": 274, "line": "    private Lecturer lecturer = new Lecturer(\"l1234\", \"student\", \"l1234@uis.at\");\n"}], "added": [{"line_no": 5, "char_start": 118, "char_end": 192, "line": "    private Student student = new Student(\"s1234\", \"student\", \"<EMAIL>\");\n"}, {"line_no": 7, "char_start": 192, "char_end": 268, "line": "    private Lecturer lecturer = new Lecturer(\"l1234\", \"student\", \"<EMAIL>);\n"}]}, "char_changes": {"deleted": [{"char_start": 118, "char_end": 197, "chars": "    private Student student = new Student(\"s1234\", \"student\", \"s1234@uis.at\");\n"}, {"char_start": 192, "char_end": 274, "chars": "    private Lecturer lecturer = new Lecturer(\"l1234\", \"student\", \"l1234@uis.at\");\n"}], "added": [{"char_start": 118, "char_end": 192, "chars": "    private Student student = new Student(\"s1234\", \"student\", \"<EMAIL>\");\n"}, {"char_start": 192, "char_end": 268, "chars": "    private Lecturer lecturer = new Lecturer(\"l1234\", \"student\", \"<EMAIL>);\n"}]}}
{"func_name": 2418, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package de.datenkraken.datenkrake.repository;\n\nimport android.os.AsyncTask;\nimport android.util.Pair;\n\nimport androidx.lifecycle.LiveData;\n\nimport de.datenkraken.datenkrake.controller.feedupdater.FeedUpdateManager;\nimport de.datenkraken.datenkrake.controller.feedupdater.FeedUpdater;\nimport de.datenkraken.datenkrake.controller.feedupdater.rss.OkHttpFeed;\nimport de.datenkraken.datenkrake.db.AppDatabase;\nimport de.datenkraken.datenkrake.model.Article;\nimport de.datenkraken.datenkrake.model.Source;\nimport de.datenkraken.datenkrake.surveillance.DataCollectionEvent;\nimport de.datenkraken.datenkrake.surveillance.DataCollectionEventType;\nimport de.datenkraken.datenkrake.surveillance.EventCollector;\nimport de.datenkraken.datenkrake.surveillance.graphqladapter.SourceAction;\nimport de.datenkraken.datenkrake.util.Helper;\n\nimport java.util.List;\n\nimport timber.log.Timber;\n\n/**\n * A repository to retrieve insert and delete {@link Source}s from the database.\n *\n * @author Daniel Thoma - daniel.thoma@stud.tu-darmstadt.de\n */\npublic final class SourceRepository {\n\n    private static SourceRepository instance;\n    private final AppDatabase database;\n\n    /**\n     * Constructor of the class.<br>\n     * Sets database instance.\n     *\n     * @param database an instance of {@link AppDatabase}.\n     */\n    private SourceRepository(final AppDatabase database) {\n        Timber.tag(\"SourceRepository\");\n\n        this.database = database;\n    }\n\n    /**\n     * Returns the instance of this repository. <br>\n     * This is implemented as a singleton.\n     *\n     * @param database an instance of {@link AppDatabase}.", "func_src_after": "package de.datenkraken.datenkrake.repository;\n\nimport android.os.AsyncTask;\nimport android.util.Pair;\n\nimport androidx.lifecycle.LiveData;\n\nimport de.datenkraken.datenkrake.controller.feedupdater.FeedUpdateManager;\nimport de.datenkraken.datenkrake.controller.feedupdater.FeedUpdater;\nimport de.datenkraken.datenkrake.controller.feedupdater.rss.OkHttpFeed;\nimport de.datenkraken.datenkrake.db.AppDatabase;\nimport de.datenkraken.datenkrake.model.Article;\nimport de.datenkraken.datenkrake.model.Source;\nimport de.datenkraken.datenkrake.surveillance.DataCollectionEvent;\nimport de.datenkraken.datenkrake.surveillance.DataCollectionEventType;\nimport de.datenkraken.datenkrake.surveillance.EventCollector;\nimport de.datenkraken.datenkrake.surveillance.graphqladapter.SourceAction;\nimport de.datenkraken.datenkrake.util.Helper;\n\nimport java.util.List;\n\nimport timber.log.Timber;\n\n/**\n * A repository to retrieve insert and delete {@link Source}s from the database.\n *\n * @author Daniel Thoma - <EMAIL>-darmstadt.de\n */\npublic final class SourceRepository {\n\n    private static SourceRepository instance;\n    private final AppDatabase database;\n\n    /**\n     * Constructor of the class.<br>\n     * Sets database instance.\n     *\n     * @param database an instance of {@link AppDatabase}.\n     */\n    private SourceRepository(final AppDatabase database) {\n        Timber.tag(\"SourceRepository\");\n\n        this.database = database;\n    }\n\n    /**\n     * Returns the instance of this repository. <br>\n     * This is implemented as a singleton.\n     *\n     * @param database an instance of {@link AppDatabase}.", "line_changes": {"deleted": [{"line_no": 27, "char_start": 961, "char_end": 1021, "line": " * @author Daniel Thoma - daniel.thoma@stud.tu-darmstadt.de\n"}], "added": [{"line_no": 28, "char_start": 961, "char_end": 1008, "line": " * @author Daniel Thoma - <EMAIL>-darmstadt.de\n"}]}, "char_changes": {"deleted": [{"char_start": 961, "char_end": 1021, "chars": " * @author Daniel Thoma - daniel.thoma@stud.tu-darmstadt.de\n"}], "added": [{"char_start": 961, "char_end": 1008, "chars": " * @author Daniel Thoma - <EMAIL>-darmstadt.de\n"}]}}
{"func_name": 2429, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\tpublic static final String IX_MAILBOX = \"ixMailbox\"; // - if you set sCustomerEmail, you'll want to set this too... otherwise you won't be able to reply to this case\n\n\tpublic static final String IX_PERSON = \"ixPerson\";\n\n\tpublic static final String IX_PERSON_ASSIGNED_TO = \"ixPersonAssignedTo\";\n\n\tpublic static final String IX_PERSON_OWNER = \"ixPersonOwner\";\n\n\tpublic static final String IX_PRIORITY = \"ixPriority\";\n\n\tpublic static final String IX_PROJECT = \"ixProject\";\n\n\tpublic static final String LIST_AREAS = \"listAreas\";\n\n\tpublic static final String LIST_PEOPLE = \"listPeople\";\n\n\tpublic static final String LIST_PRIORITIES = \"listPriorities\";\n\n\tpublic static final String LIST_PROJECTS = \"listProjects\";\n\n\tpublic static final String LOGOFF = \"logoff\";\n\n\tpublic static final String LOGON = \"logon\";\n\n\tpublic static final String N_FILE_COUNT = \"nFileCount\"; // The number of files being uploaded\n\n\tpublic static final String NEW = \"new\";\n\n\tpublic static final String NEW_AREA = \"newArea\";\n\n\tpublic static final String NEW_PROJECT = \"newProject\";\n\n\tpublic static final String OPERATIONS = \"operations\";\n\n\tpublic static final String PASSWORD = \"password\";\n\n\tpublic static final String QUERY = \"q\";\n\n\tpublic static final String REACTIVATE = \"reactivate\";\n\n\tpublic static final String REOPEN = \"reopen\";\n\n\tpublic static final String RESOLVE = \"resolve\";\n\n\tpublic static final String S_AREA = \"sArea\";\n\n\tpublic static final String S_CATEGORY = \"sCategory\";\n\n\tpublic static final String S_COMPUTER = \"sComputer\";\n", "func_src_after": "\tpublic static final String IX_MAILBOX = \"ixMailbox\"; // - if you set sCustomerEmail, you'll want to set this too... otherwise you won't be able to reply to this case\n\n\tpublic static final String IX_PERSON = \"ixPerson\";\n\n\tpublic static final String IX_PERSON_ASSIGNED_TO = \"ixPersonAssignedTo\";\n\n\tpublic static final String IX_PERSON_OWNER = \"ixPersonOwner\";\n\n\tpublic static final String IX_PRIORITY = \"ixPriority\";\n\n\tpublic static final String IX_PROJECT = \"ixProject\";\n\n\tpublic static final String LIST_AREAS = \"listAreas\";\n\n\tpublic static final String LIST_PEOPLE = \"listPeople\";\n\n\tpublic static final String LIST_PRIORITIES = \"listPriorities\";\n\n\tpublic static final String LIST_PROJECTS = \"listProjects\";\n\n\tpublic static final String LOGOFF = \"logoff\";\n\n\tpublic static final String LOGON = \"logon\";\n\n\tpublic static final String N_FILE_COUNT = \"nFileCount\"; // The number of files being uploaded\n\n\tpublic static final String NEW = \"new\";\n\n\tpublic static final String NEW_AREA = \"newArea\";\n\n\tpublic static final String NEW_PROJECT = \"newProject\";\n\n\tpublic static final String OPERATIONS = \"operations\";\n\n\tpublic static final String PASSWORD = \"password\";\n\n\tpublic static final String QUERY = \"q\";\n\n\tpublic static final String REACTIVATE = \"reactivate\";\n\n\tpublic static final String REOPEN = \"reopen\";\n\n\tpublic static final String RESOLVE = \"resolve\";\n\n\tpublic static final String S_AREA = \"sArea\";\n\n\tpublic static final String S_CATEGORY = \"sCategory\";\n\n\tpublic static final String S_COMPUTER = \"sComputer\";\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2468, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param tips\n\t * @param bw\n\t * @throws IOException \n\t */\n\tprivate static void writePOT(Set<String> tips, BufferedWriter bw) throws IOException\n\t{\n\t\t// header stuff\n\t\tCalendar now = Calendar.getInstance();\n\t\tbw.write(\"msgid \\\"\\\"\\n\" + \"msgstr \\\"\\\"\\n\" + \"\\\"Project-Id-Version: PCGen-tips 6.x/SVN?\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"Report-Msgid-Bugs-To: \\\\n\\\"\\n\" + \"\\\"POT-Creation-Date: \"\n\t\t\t+ DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT.format(now) + \"\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\\\n\\\"\\n\" + \"\\\"Language-Team: LANGUAGE <LL@li.org>\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"MIME-Version: 1.0\\\\n\\\"\\n\" + \"\\\"Content-Type: text/plain; charset=UTF-8\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"Content-Transfer-Encoding: 8bit\\\\n\\\"\\n\\n\");\n\n\t\t// filecontent\n\t\tMessageFormat msgid = new MessageFormat(\"msgid \\\"{0}\\\"\"); //$NON-NLS-1$\n\t\tString msgstr = \"msgstr \\\"\\\"\"; //$NON-NLS-1$\n\t\tfor (String tip : tips)\n\t\t{\n\t\t\tbw.write(msgid.format(new Object[]{escape(tip)}));\n\t\t\tbw.write(\"\\n\");\n\t\t\tbw.write(msgstr);\n\t\t\tbw.write(\"\\n\\n\");\n\t\t}\n\t}\n\n\tprotected static void addTips(Set<String> tips, BufferedReader reader)\n\t{\n\t\tString line;\n\t\ttry\n\t\t{\n\t\t\tline = reader.readLine();\n\t\t\twhile (line != null)\n\t\t\t{\n\t\t\t\tif (isTip(line))\n\t\t\t\t\taddTip(tips, line);\n\t\t\t\tline = reader.readLine();\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e)\n\t\t{\n\t\t\tlogError(\"Warning: IO error reading a line, ignoring it\");\n\t\t\te.printStackTrace();", "func_src_after": "\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param tips\n\t * @param bw\n\t * @throws IOException \n\t */\n\tprivate static void writePOT(Set<String> tips, BufferedWriter bw) throws IOException\n\t{\n\t\t// header stuff\n\t\tCalendar now = Calendar.getInstance();\n\t\tbw.write(\"msgid \\\"\\\"\\n\" + \"msgstr \\\"\\\"\\n\" + \"\\\"Project-Id-Version: PCGen-tips 6.x/SVN?\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"Report-Msgid-Bugs-To: \\\\n\\\"\\n\" + \"\\\"POT-Creation-Date: \"\n\t\t\t+ DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT.format(now) + \"\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"Last-Translator: FULL NAME <<EMAIL>>\\\\n\\\"\\n\" + \"\\\"Language-Team: LANGUAGE <LL@li.org>\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"MIME-Version: 1.0\\\\n\\\"\\n\" + \"\\\"Content-Type: text/plain; charset=UTF-8\\\\n\\\"\\n\"\n\t\t\t+ \"\\\"Content-Transfer-Encoding: 8bit\\\\n\\\"\\n\\n\");\n\n\t\t// filecontent\n\t\tMessageFormat msgid = new MessageFormat(\"msgid \\\"{0}\\\"\"); //$NON-NLS-1$\n\t\tString msgstr = \"msgstr \\\"\\\"\"; //$NON-NLS-1$\n\t\tfor (String tip : tips)\n\t\t{\n\t\t\tbw.write(msgid.format(new Object[]{escape(tip)}));\n\t\t\tbw.write(\"\\n\");\n\t\t\tbw.write(msgstr);\n\t\t\tbw.write(\"\\n\\n\");\n\t\t}\n\t}\n\n\tprotected static void addTips(Set<String> tips, BufferedReader reader)\n\t{\n\t\tString line;\n\t\ttry\n\t\t{\n\t\t\tline = reader.readLine();\n\t\t\twhile (line != null)\n\t\t\t{\n\t\t\t\tif (isTip(line))\n\t\t\t\t\taddTip(tips, line);\n\t\t\t\tline = reader.readLine();\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e)\n\t\t{\n\t\t\tlogError(\"Warning: IO error reading a line, ignoring it\");\n\t\t\te.printStackTrace();", "line_changes": {"deleted": [{"line_no": 18, "char_start": 519, "char_end": 627, "line": "\t\t\t+ \"\\\"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\\\n\\\"\\n\" + \"\\\"Language-Team: LANGUAGE <LL@li.org>\\\\n\\\"\\n\"\n"}], "added": [{"line_no": 19, "char_start": 519, "char_end": 621, "line": "\t\t\t+ \"\\\"Last-Translator: FULL NAME <<EMAIL>>\\\\n\\\"\\n\" + \"\\\"Language-Team: LANGUAGE <LL@li.org>\\\\n\\\"\\n\"\n"}]}, "char_changes": {"deleted": [{"char_start": 519, "char_end": 627, "chars": "\t\t\t+ \"\\\"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\\\n\\\"\\n\" + \"\\\"Language-Team: LANGUAGE <LL@li.org>\\\\n\\\"\\n\"\n"}], "added": [{"char_start": 519, "char_end": 621, "chars": "\t\t\t+ \"\\\"Last-Translator: FULL NAME <<EMAIL>>\\\\n\\\"\\n\" + \"\\\"Language-Team: LANGUAGE <LL@li.org>\\\\n\\\"\\n\"\n"}]}}
{"func_name": 2484, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package iservice.sdk;\n\nimport com.alibaba.fastjson.JSON;\nimport iservice.sdk.entity.Res;\nimport iservice.sdk.exception.ServiceSDKException;\n\nimport java.util.Objects;\n\nimport static junit.framework.TestCase.assertNotNull;\n\npublic class ParseObjectTest {\n    public static void main(String[] args) {\n        String res = \"{\\n\" +\n                \"  \\\"jsonrpc\\\": \\\"2.0\\\",\\n\" +\n                \"  \\\"id\\\": \\\"service_client\\\",\\n\" +\n                \"  \\\"result\\\": {\\n\" +\n                \"    \\\"check_tx\\\": {\\n\" +\n                \"      \\\"code\\\": 0,\\n\" +\n                \"      \\\"data\\\": \\\"\\\",\\n\" +\n                \"      \\\"log\\\": \\\"[]\\\",\\n\" +\n                \"      \\\"info\\\": \\\"\\\",\\n\" +\n                \"      \\\"gas_wanted\\\": \\\"200000\\\",\\n\" +\n                \"      \\\"gas_used\\\": \\\"63931\\\",\\n\" +\n                \"      \\\"events\\\": [],\\n\" +\n                \"      \\\"codespace\\\": \\\"\\\"\\n\" +\n                \"    },\\n\" +\n                \"    \\\"deliver_tx\\\": {\\n\" +\n                \"      \\\"code\\\": 0,\\n\" +\n                \"      \\\"data\\\": \\\"CmIKDGNhbGxfc2VydmljZRJSClA0MDdBRkUxNTY0RUFBOTIxQ0ZBNzQ3Njk5NTcwNDAyM0ZFMUZFM0QzRERFQUM0MjY4RjdERkMzQzFENjNCMTA3MDAwMDAwMDAwMDAwMDAwMA==\\\",\\n\" +\n                \"      \\\"log\\\": \\\"[{\\\\\\\"events\\\\\\\":[{\\\\\\\"type\\\\\\\":\\\\\\\"create_context\\\\\\\",\\\\\\\"attributes\\\\\\\":[{\\\\\\\"key\\\\\\\":\\\\\\\"request_context_id\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"407AFE1564EAA921CFA7476995704023FE1FE3D3DDEAC4268F7DFC3C1D63B1070000000000000000\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"service_name\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"update\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"consumer\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"iaa1amrajvcq4j7m0vrr58f5rtaq6mupap98htr3hm\\\\\\\"}]},{\\\\\\\"type\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"attributes\\\\\\\":[{\\\\\\\"key\\\\\\\":\\\\\\\"action\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"call_service\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"module\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"service\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"sender\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"iaa1amrajvcq4j7m0vrr58f5rtaq6mupap98htr3hm\\\\\\\"}]}]}]\\\",\\n\" +\n                \"      \\\"info\\\": \\\"\\\",\\n\" +\n                \"      \\\"gas_wanted\\\": \\\"200000\\\",\\n\" +\n                \"      \\\"gas_used\\\": \\\"85090\\\",\\n\" +\n                \"      \\\"events\\\": [\\n\" +\n                \"        {\\n\" +\n                \"          \\\"type\\\": \\\"transfer\\\",\\n\" +\n                \"          \\\"attributes\\\": [\\n\" +\n                \"            {\\n\" +\n                \"              \\\"key\\\": \\\"cmVjaXBpZW50\\\",\\n\" +\n                \"              \\\"value\\\": \\\"aWFhMTd4cGZ2YWttMmFtZzk2MnlsczZmODR6M2tlbGw4YzVsOW1yM2Z2\\\",\\n\" +\n                \"              \\\"index\\\": true\\n\" +\n                \"            },\\n\" +\n                \"            {\\n\" +\n                \"              \\\"key\\\": \\\"c2VuZGVy\\\",\\n\" +\n                \"              \\\"value\\\": \\\"aWFhMWFtcmFqdmNxNGo3bTB2cnI1OGY1cnRhcTZtdXBhcDk4aHRyM2ht\\\",\\n\" +\n                \"              \\\"index\\\": true\\n\" +\n                \"            },\\n\" +\n                \"            {\\n\" +\n                \"              \\\"key\\\": \\\"YW1vdW50\\\",\\n\" +\n                \"              \\\"value\\\": \\\"NHN0YWtl\\\",\\n\" +", "func_src_after": "package iservice.sdk;\n\nimport com.alibaba.fastjson.JSON;\nimport iservice.sdk.entity.Res;\nimport iservice.sdk.exception.ServiceSDKException;\n\nimport java.util.Objects;\n\nimport static junit.framework.TestCase.assertNotNull;\n\npublic class ParseObjectTest {\n    public static void main(String[] args) {\n        String res = \"{\\n\" +\n                \"  \\\"jsonrpc\\\": \\\"2.0\\\",\\n\" +\n                \"  \\\"id\\\": \\\"service_client\\\",\\n\" +\n                \"  \\\"result\\\": {\\n\" +\n                \"    \\\"check_tx\\\": {\\n\" +\n                \"      \\\"code\\\": 0,\\n\" +\n                \"      \\\"data\\\": \\\"\\\",\\n\" +\n                \"      \\\"log\\\": \\\"[]\\\",\\n\" +\n                \"      \\\"info\\\": \\\"\\\",\\n\" +\n                \"      \\\"gas_wanted\\\": \\\"200000\\\",\\n\" +\n                \"      \\\"gas_used\\\": \\\"63931\\\",\\n\" +\n                \"      \\\"events\\\": [],\\n\" +\n                \"      \\\"codespace\\\": \\\"\\\"\\n\" +\n                \"    },\\n\" +\n                \"    \\\"deliver_tx\\\": {\\n\" +\n                \"      \\\"code\\\": 0,\\n\" +\n                \"      \\\"data\\\": \\\"CmIKDGNhbGxfc2VydmljZRJSClA0MDdBRkUxNTY0RUFBOTIxQ0ZBNzQ3Njk5NTcwNDAyM0ZFMUZFM0QzRERFQUM0MjY4RjdERkMzQzFENjNCMTA3MDAwMDAwMDAwMDAwMDAwMA==\\\",\\n\" +\n                \"      \\\"log\\\": \\\"[{\\\\\\\"events\\\\\\\":[{\\\\\\\"type\\\\\\\":\\\\\\\"create_context\\\\\\\",\\\\\\\"attributes\\\\\\\":[{\\\\\\\"key\\\\\\\":\\\\\\\"request_context_id\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"407AFE1564EAA921CFA7476995704023FE1FE3D3DDEAC4268F7DFC3C1D63B1070000000000000000\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"service_name\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"update\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"consumer\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"iaa1amrajvcq4j7m0vrr58f5rtaq6mupap98htr3hm\\\\\\\"}]},{\\\\\\\"type\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"attributes\\\\\\\":[{\\\\\\\"key\\\\\\\":\\\\\\\"action\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"call_service\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"module\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"service\\\\\\\"},{\\\\\\\"key\\\\\\\":\\\\\\\"sender\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"iaa1amrajvcq4j7m0vrr58f5rtaq6mupap98htr3hm\\\\\\\"}]}]}]\\\",\\n\" +\n                \"      \\\"info\\\": \\\"\\\",\\n\" +\n                \"      \\\"gas_wanted\\\": \\\"200000\\\",\\n\" +\n                \"      \\\"gas_used\\\": \\\"85090\\\",\\n\" +\n                \"      \\\"events\\\": [\\n\" +\n                \"        {\\n\" +\n                \"          \\\"type\\\": \\\"transfer\\\",\\n\" +\n                \"          \\\"attributes\\\": [\\n\" +\n                \"            {\\n\" +\n                \"              \\\"key\\\": \\\"cmVjaXBpZW50\\\",\\n\" +\n                \"              \\\"value\\\": \\\"aWFhMTd4cGZ2YWttMmFtZzk2MnlsczZmODR6M2tlbGw4YzVsOW1yM2Z2\\\",\\n\" +\n                \"              \\\"index\\\": true\\n\" +\n                \"            },\\n\" +\n                \"            {\\n\" +\n                \"              \\\"key\\\": \\\"c2VuZGVy\\\",\\n\" +\n                \"              \\\"value\\\": \\\"aWFhMWFtcmFqdmNxNGo3bTB2cnI1OGY1cnRhcTZtdXBhcDk4aHRyM2ht\\\",\\n\" +\n                \"              \\\"index\\\": true\\n\" +\n                \"            },\\n\" +\n                \"            {\\n\" +\n                \"              \\\"key\\\": \\\"YW1vdW50\\\",\\n\" +\n                \"              \\\"value\\\": \\\"NHN0YWtl\\\",\\n\" +", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2496, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * ---------------------------------------------------------------------------------------\n * Licença   : MIT - Copyright 2019 Viniciusalopes (Vovolinux) <suporte@vovolinux.com.br>\n * Criado em : 13/10/2019\n * Projeto   : ExerciciosN2\n * Finalidade: N2\n * Alunos    : Lucas Araujo da Silva e Vinicius Araujo Lopes\n * ---------------------------------------------------------------------------------------\n */\npackage exerciciosn2;\n\nimport java.util.Scanner;\nimport static exerciciosn2.ExercicioN2_20.repete;\n\n/**\n * 49. Faça um programa que leia um código numérico inteiros e um vetor de 10 posições de\n * números reais. Se o código for zero, termine o programa. Se for 1, mostre o vetor na\n * ordem direta. Se for 2, mostre o vetor na ordem inversa.\n */\npublic class ExercicioN2_49 {\n\n    public static void main(String[] args) {\n        // Declaração de variáveis\n        int opcao;\n        double reais[];\n        String ordem;\n\n        // Inicialização de variáveis\n        reais = new double[10];\n\n        System.out.println();\n        reais = ler_vetor(\"Valor para a posição %d do vetor: \", reais.length);\n\n        do {\n            // Entrada\n            opcao = menu();\n\n            // Define a ordem de impressão\n            ordem = (opcao == 1) ? \"direta\" : \"inversa\";\n\n            // Saída\n            if (opcao != 0) {\n                System.out.println();\n                imprime_vetor(\" Vetor (Ordem \" + ordem.toUpperCase() + \") :\\n\", reais, ordem);\n            }\n        } while (opcao != 0);\n\n        // Saída final\n        System.out.println(\"\\n\" + repete(\"-\", 38) + \"\\n Fim da execução do programa.\\n\");\n    }", "func_src_after": "/*\n * ---------------------------------------------------------------------------------------\n * Licença   : MIT - Copyright 2019 Viniciusalopes (Vovolinux) <<EMAIL>>\n * Criado em : 13/10/2019\n * Projeto   : ExerciciosN2\n * Finalidade: N2\n * Alunos    : Lucas Araujo da Silva e Vinicius Araujo Lopes\n * ---------------------------------------------------------------------------------------\n */\npackage exerciciosn2;\n\nimport java.util.Scanner;\nimport static exerciciosn2.ExercicioN2_20.repete;\n\n/**\n * 49. Faça um programa que leia um código numérico inteiros e um vetor de 10 posições de\n * números reais. Se o código for zero, termine o programa. Se for 1, mostre o vetor na\n * ordem direta. Se for 2, mostre o vetor na ordem inversa.\n */\npublic class ExercicioN2_49 {\n\n    public static void main(String[] args) {\n        // Declaração de variáveis\n        int opcao;\n        double reais[];\n        String ordem;\n\n        // Inicialização de variáveis\n        reais = new double[10];\n\n        System.out.println();\n        reais = ler_vetor(\"Valor para a posição %d do vetor: \", reais.length);\n\n        do {\n            // Entrada\n            opcao = menu();\n\n            // Define a ordem de impressão\n            ordem = (opcao == 1) ? \"direta\" : \"inversa\";\n\n            // Saída\n            if (opcao != 0) {\n                System.out.println();\n                imprime_vetor(\" Vetor (Ordem \" + ordem.toUpperCase() + \") :\\n\", reais, ordem);\n            }\n        } while (opcao != 0);\n\n        // Saída final\n        System.out.println(\"\\n\" + repete(\"-\", 38) + \"\\n Fim da execução do programa.\\n\");\n    }", "line_changes": {"deleted": [{"line_no": 3, "char_start": 94, "char_end": 184, "line": " * Licença   : MIT - Copyright 2019 Viniciusalopes (Vovolinux) <suporte@vovolinux.com.br>\n"}], "added": [{"line_no": 4, "char_start": 94, "char_end": 167, "line": " * Licença   : MIT - Copyright 2019 Viniciusalopes (Vovolinux) <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 94, "char_end": 184, "chars": " * Licença   : MIT - Copyright 2019 Viniciusalopes (Vovolinux) <suporte@vovolinux.com.br>\n"}], "added": [{"char_start": 94, "char_end": 167, "chars": " * Licença   : MIT - Copyright 2019 Viniciusalopes (Vovolinux) <<EMAIL>>\n"}]}}
{"func_name": 2524, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * Multiple Devices\n *\n *  Copyright 2016 by Tim Dünte <tim.duente@hci.uni-hannover.de>\n *  Copyright 2016 by Max Pfeiffer <max.pfeiffer@hci.uni-hannover.de>\n *\n *  Licensed under \"The MIT License (MIT) – military use of this product is forbidden – V 0.2\".\n *  Some rights reserved. See LICENSE.\n *\n * @license \"The MIT License (MIT) – military use of this product is forbidden – V 0.2\"\n * <https://bitbucket.org/MaxPfeiffer/letyourbodymove/wiki/Home/License>\n */\n\npackage com.example.emsdesigntool.searchandshow;\n\nimport android.content.Context;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.*;\nimport com.example.emsdesigntool.commands.IEMSBluetoothLEService;\n\nimport java.util.ArrayList;\nimport java.util.Observable;\nimport java.util.Observer;\n\n\n/**\n * Created by Tim Dünte on 18.03.2016.\n */\npublic class SearchAndShowEMSDevicesView extends LinearLayout implements Observer {\n    private ArrayList<String> checkedItems = new ArrayList<String>();\n\n    private ArrayAdapter<String> listData;\n    private ArrayList<String> testData = new ArrayList<String>();\n    private ListView listView;\n\n    private String selectedItem = null;\n\n    private IEMSBluetoothLEService ble;\n\n    public void setBLEService(IEMSBluetoothLEService emsBluetoothLEService) {\n        ble = emsBluetoothLEService;\n        Log.w(\"setBLEServiceStringValueOf\", ble.toString());\n        refreshList();\n    }\n\n    public SearchAndShowEMSDevicesView(Context context, AttributeSet attrs){\n        this(context, attrs, false);", "func_src_after": "/**\n * Multiple Devices\n *\n *  Copyright 2016 by Tim Dünte <<EMAIL>\n *  Copyright 2016 by Max Pfeiffer <<EMAIL>>\n *\n *  Licensed under \"The MIT License (MIT) – military use of this product is forbidden – V 0.2\".\n *  Some rights reserved. See LICENSE.\n *\n * @license \"The MIT License (MIT) – military use of this product is forbidden – V 0.2\"\n * <https://bitbucket.org/MaxPfeiffer/letyourbodymove/wiki/Home/License>\n */\n\npackage com.example.emsdesigntool.searchandshow;\n\nimport android.content.Context;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.*;\nimport com.example.emsdesigntool.commands.IEMSBluetoothLEService;\n\nimport java.util.ArrayList;\nimport java.util.Observable;\nimport java.util.Observer;\n\n\n/**\n * Created by Tim Dünte on 18.03.2016.\n */\npublic class SearchAndShowEMSDevicesView extends LinearLayout implements Observer {\n    private ArrayList<String> checkedItems = new ArrayList<String>();\n\n    private ArrayAdapter<String> listData;\n    private ArrayList<String> testData = new ArrayList<String>();\n    private ListView listView;\n\n    private String selectedItem = null;\n\n    private IEMSBluetoothLEService ble;\n\n    public void setBLEService(IEMSBluetoothLEService emsBluetoothLEService) {\n        ble = emsBluetoothLEService;\n        Log.w(\"setBLEServiceStringValueOf\", ble.toString());\n        refreshList();\n    }\n\n    public SearchAndShowEMSDevicesView(Context context, AttributeSet attrs){\n        this(context, attrs, false);", "line_changes": {"deleted": [{"line_no": 4, "char_start": 27, "char_end": 92, "line": " *  Copyright 2016 by Tim Dünte <tim.duente@hci.uni-hannover.de>\n"}, {"line_no": 5, "char_start": 27, "char_end": 97, "line": " *  Copyright 2016 by Max Pfeiffer <max.pfeiffer@hci.uni-hannover.de>\n"}], "added": [{"line_no": 6, "char_start": 27, "char_end": 68, "line": " *  Copyright 2016 by Tim Dünte <<EMAIL>\n"}, {"line_no": 7, "char_start": 68, "char_end": 113, "line": " *  Copyright 2016 by Max Pfeiffer <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 27, "char_end": 92, "chars": " *  Copyright 2016 by Tim Dünte <tim.duente@hci.uni-hannover.de>\n"}, {"char_start": 27, "char_end": 97, "chars": " *  Copyright 2016 by Max Pfeiffer <max.pfeiffer@hci.uni-hannover.de>\n"}], "added": [{"char_start": 27, "char_end": 68, "chars": " *  Copyright 2016 by Tim Dünte <<EMAIL>\n"}, {"char_start": 68, "char_end": 113, "chars": " *  Copyright 2016 by Max Pfeiffer <<EMAIL>>\n"}]}}
{"func_name": 2527, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package com.meslize.philipkroboelectric.ui.login.interactor;\n\nimport com.meslize.philipkroboelectric.model.UserInfo;\nimport com.meslize.philipkroboelectric.repository.user.UserRepository;\nimport com.meslize.philipkroboelectric.ui.login.listener.OnLoginListener;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.InOrder;\n\nimport static org.mockito.Matchers.eq;\nimport static org.mockito.Mockito.inOrder;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.verifyNoMoreInteractions;\nimport static org.mockito.Mockito.when;\n\npublic class LoginInteractorImplTest {\n\n    private LoginInteractorImpl mInteractor;\n\n    @Before\n    public void setUp() {\n        mInteractor = new LoginInteractorImpl();\n        mInteractor.mUserRepository = mock(UserRepository.class);\n    }\n\n    @Test\n    public void testLogin() {\n        String username = \"USERNAME\";\n        String password = \"PASSWORD\";\n        OnLoginListener listener = mock(OnLoginListener.class);\n\n        UserInfo userInfo = mock(UserInfo.class);\n        when(mInteractor.mUserRepository.remoteGetUser(eq(username), eq(password))).thenReturn(userInfo);\n\n        mInteractor.login(username, password, listener);\n\n        InOrder inOrder = inOrder(listener, mInteractor.mUserRepository);\n        inOrder.verify(mInteractor.mUserRepository).remoteGetUser(eq(username), eq(password));\n        inOrder.verify(listener).onLoginSuccess(eq(userInfo));\n        inOrder.verifyNoMoreInteractions();\n\n        verifyNoMoreInteractionsWithMockObjects();\n    }\n\n    private void verifyNoMoreInteractionsWithMockObjects() {\n        verifyNoMoreInteractions(mInteractor.mUserRepository);\n    }\n}", "func_src_after": "package com.meslize.philipkroboelectric.ui.login.interactor;\n\nimport com.meslize.philipkroboelectric.model.UserInfo;\nimport com.meslize.philipkroboelectric.repository.user.UserRepository;\nimport com.meslize.philipkroboelectric.ui.login.listener.OnLoginListener;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.InOrder;\n\nimport static org.mockito.Matchers.eq;\nimport static org.mockito.Mockito.inOrder;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.verifyNoMoreInteractions;\nimport static org.mockito.Mockito.when;\n\npublic class LoginInteractorImplTest {\n\n    private LoginInteractorImpl mInteractor;\n\n    @Before\n    public void setUp() {\n        mInteractor = new LoginInteractorImpl();\n        mInteractor.mUserRepository = mock(UserRepository.class);\n    }\n\n    @Test\n    public void testLogin() {\n        String username = \"USERNAME\";\n        String password = \"PASSWORD\";\n        OnLoginListener listener = mock(OnLoginListener.class);\n\n        UserInfo userInfo = mock(UserInfo.class);\n        when(mInteractor.mUserRepository.remoteGetUser(eq(username), eq(password))).thenReturn(userInfo);\n\n        mInteractor.login(username, password, listener);\n\n        InOrder inOrder = inOrder(listener, mInteractor.mUserRepository);\n        inOrder.verify(mInteractor.mUserRepository).remoteGetUser(eq(username), eq(password));\n        inOrder.verify(listener).onLoginSuccess(eq(userInfo));\n        inOrder.verifyNoMoreInteractions();\n\n        verifyNoMoreInteractionsWithMockObjects();\n    }\n\n    private void verifyNoMoreInteractionsWithMockObjects() {\n        verifyNoMoreInteractions(mInteractor.mUserRepository);\n    }\n}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2531, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import com.gargoylesoftware.htmlunit.WebWindow;\nimport com.sun.tools.javac.comp.Enter;\nimport lib.*;\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\n\nimport java.util.List;\n\n\npublic class MainTest extends CoreTestCase {\n\n    private MainPageObject MainPageObject;\n\n\n    protected void setUp() throws Exception {\n        super.setUp();\n\n        MainPageObject = new MainPageObject(androidDriver, webDriver);\n\n    }\n\n    @Test\n    public void testAcsessCourierWeb() {\n        SearchPageObject SearchPageObject = new SearchPageObject(androidDriver, webDriver);\n        SearchPageObject.loginCourier();\n    }\n\n\n    @Test\n    public void testLoginCourierWeb() {\n        WebElement emailKey = webDriver.findElement(By.id(\"UserLogin_username\"));\n        WebElement pswrdKey = webDriver.findElement(By.id(\"UserLogin_password\"));\n        WebElement loginBtKey = webDriver.findElement(By.xpath(\"//button[text()='Войти']\"));\n        emailKey.sendKeys(\"rsmirnovv+112233@yandex.ru\");\n        pswrdKey.sendKeys(\"203809\");\n        loginBtKey.click();\n    }\n\n\n    @Test\n    public void testCreateOrderWeb() {\n        testLoginCourierWeb();\n        WebElement addBtKey = webDriver.findElement(By.xpath(\"//a[contains(text(),'Добавить')]\"));", "func_src_after": "import com.gargoylesoftware.htmlunit.WebWindow;\nimport com.sun.tools.javac.comp.Enter;\nimport lib.*;\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\n\nimport java.util.List;\n\n\npublic class MainTest extends CoreTestCase {\n\n    private MainPageObject MainPageObject;\n\n\n    protected void setUp() throws Exception {\n        super.setUp();\n\n        MainPageObject = new MainPageObject(androidDriver, webDriver);\n\n    }\n\n    @Test\n    public void testAcsessCourierWeb() {\n        SearchPageObject SearchPageObject = new SearchPageObject(androidDriver, webDriver);\n        SearchPageObject.loginCourier();\n    }\n\n\n    @Test\n    public void testLoginCourierWeb() {\n        WebElement emailKey = webDriver.findElement(By.id(\"UserLogin_username\"));\n        WebElement pswrdKey = webDriver.findElement(By.id(\"UserLogin_password\"));\n        WebElement loginBtKey = webDriver.findElement(By.xpath(\"//button[text()='Войти']\"));\n        emailKey.sendKeys(\"<EMAIL>\");\n        pswrdKey.sendKeys(\"203809\");\n        loginBtKey.click();\n    }\n\n\n    @Test\n    public void testCreateOrderWeb() {\n        testLoginCourierWeb();\n        WebElement addBtKey = webDriver.findElement(By.xpath(\"//a[contains(text(),'Добавить')]\"));", "line_changes": {"deleted": [{"line_no": 41, "char_start": 1212, "char_end": 1269, "line": "        emailKey.sendKeys(\"rsmirnovv+112233@yandex.ru\");\n"}], "added": [{"line_no": 42, "char_start": 1212, "char_end": 1250, "line": "        emailKey.sendKeys(\"<EMAIL>\");\n"}]}, "char_changes": {"deleted": [{"char_start": 1212, "char_end": 1269, "chars": "        emailKey.sendKeys(\"rsmirnovv+112233@yandex.ru\");\n"}], "added": [{"char_start": 1212, "char_end": 1250, "chars": "        emailKey.sendKeys(\"<EMAIL>\");\n"}]}}
{"func_name": 2564, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright 2020 聂钊 nz@qdigo.com\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.qdigo.ebike.controlcenter.service.inner.command.sms;\n\nimport com.qdigo.ebike.api.domain.dto.bike.SimDto;\nimport com.qdigo.ebike.api.domain.dto.control.Location;\nimport com.qdigo.ebike.api.service.third.devicesms.HuahongService;\nimport com.qdigo.ebike.common.core.constants.Const;\nimport com.qdigo.ebike.controlcenter.domain.entity.mongo.SMSPackage;\nimport lombok.extern.slf4j.Slf4j;\nimport lombok.val;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.data.mongodb.core.MongoTemplate;\nimport org.springframework.data.mongodb.core.query.Criteria;\nimport org.springframework.data.mongodb.core.query.Query;\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.scheduling.annotation.AsyncResult;\nimport org.springframework.stereotype.Service;\n\nimport javax.annotation.Resource;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.List;\nimport java.util.Optional;\nimport java.util.concurrent.Future;\nimport java.util.concurrent.TimeUnit;\nimport java.util.function.Predicate;\n\nimport static com.qdigo.ebike.controlcenter.service.inner.command.sms.IDevSMSService.huahong;\n\n/**\n * 服务商:华虹\n */\n@Slf4j\n@Service(huahong)\npublic class HuahongInnerService implements IDevSMSService {", "func_src_after": "/*\n * Copyright 2020 聂钊 <EMAIL>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.qdigo.ebike.controlcenter.service.inner.command.sms;\n\nimport com.qdigo.ebike.api.domain.dto.bike.SimDto;\nimport com.qdigo.ebike.api.domain.dto.control.Location;\nimport com.qdigo.ebike.api.service.third.devicesms.HuahongService;\nimport com.qdigo.ebike.common.core.constants.Const;\nimport com.qdigo.ebike.controlcenter.domain.entity.mongo.SMSPackage;\nimport lombok.extern.slf4j.Slf4j;\nimport lombok.val;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.data.mongodb.core.MongoTemplate;\nimport org.springframework.data.mongodb.core.query.Criteria;\nimport org.springframework.data.mongodb.core.query.Query;\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.scheduling.annotation.AsyncResult;\nimport org.springframework.stereotype.Service;\n\nimport javax.annotation.Resource;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.List;\nimport java.util.Optional;\nimport java.util.concurrent.Future;\nimport java.util.concurrent.TimeUnit;\nimport java.util.function.Predicate;\n\nimport static com.qdigo.ebike.controlcenter.service.inner.command.sms.IDevSMSService.huahong;\n\n/**\n * 服务商:华虹\n */\n@Slf4j\n@Service(huahong)\npublic class HuahongInnerService implements IDevSMSService {", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 37, "line": " * Copyright 2020 聂钊 nz@qdigo.com\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 32, "line": " * Copyright 2020 聂钊 <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 37, "chars": " * Copyright 2020 聂钊 nz@qdigo.com\n"}], "added": [{"char_start": 3, "char_end": 32, "chars": " * Copyright 2020 聂钊 <EMAIL>\n"}]}}
{"func_name": 2565, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import mpicbg.trakem2.transform.MovingLeastSquaresTransform;\nimport mpicbg.trakem2.transform.RigidModel2D;\nimport mpicbg.trakem2.transform.SimilarityModel2D;\nimport mpicbg.trakem2.transform.TransformMesh;\nimport mpicbg.trakem2.transform.TransformMeshMapping;\nimport mpicbg.trakem2.transform.TranslationModel2D;\n\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.Future;\nimport java.util.concurrent.Callable;\n\nimport javax.swing.JFileChooser;\n\nimport bunwarpj.Transformation;\nimport bunwarpj.bUnwarpJ_;\nimport bunwarpj.trakem2.transform.CubicBSplineTransform;\n\n/** \n * Fiji plugin to register sequences of images in a concurrent (multi-thread) way.\n * <p>\n * <b>Requires</b>: a directory with images, of any size and type (8, 16, 32-bit gray-scale or RGB color)\n * <p>\n * <b>Performs</b>: registration of a sequence of images, by 6 different registration models:\n * <ul>\n * \t\t\t\t<li> Translation (no deformation)</li>\n * \t\t\t\t<li> Rigid (translation + rotation)</li>\n * \t\t\t\t<li> Similarity (translation + rotation + isotropic scaling)</li>\n * \t\t\t\t<li> Affine (free affine transformation)</li>\n * \t\t\t\t<li> Elastic (consistent elastic deformations by B-splines)</li>\n * \t\t\t\t<li> Moving least squares (maximal warping)</li>\n * </ul>\n * <p>\n * <b>Outputs</b>: the list of new images, one for slice, into a target directory as .tif files.\n * <p>\n * For a detailed documentation, please visit the plugin website at:\n * <p>\n * <A target=\"_blank\" href=\"http://fiji.sc/wiki/Register_Virtual_Stack_Slices\">http://fiji.sc/wiki/Register_Virtual_Stack_Slices</A>\n * \n * @author Ignacio Arganda-Carreras (ignacio.arganda@gmail.com), Stephan Saalfeld and Albert Cardona\n */\npublic class Register_Virtual_Stack_MT implements PlugIn \n{\n\n\t// Registration types\n\t/** translation registration model id */\n\tpublic static final int TRANSLATION \t\t\t= 0;\n\t/** rigid-body registration model id */\n\tpublic static final int RIGID \t\t\t\t\t= 1;", "func_src_after": "import mpicbg.trakem2.transform.MovingLeastSquaresTransform;\nimport mpicbg.trakem2.transform.RigidModel2D;\nimport mpicbg.trakem2.transform.SimilarityModel2D;\nimport mpicbg.trakem2.transform.TransformMesh;\nimport mpicbg.trakem2.transform.TransformMeshMapping;\nimport mpicbg.trakem2.transform.TranslationModel2D;\n\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.Future;\nimport java.util.concurrent.Callable;\n\nimport javax.swing.JFileChooser;\n\nimport bunwarpj.Transformation;\nimport bunwarpj.bUnwarpJ_;\nimport bunwarpj.trakem2.transform.CubicBSplineTransform;\n\n/** \n * Fiji plugin to register sequences of images in a concurrent (multi-thread) way.\n * <p>\n * <b>Requires</b>: a directory with images, of any size and type (8, 16, 32-bit gray-scale or RGB color)\n * <p>\n * <b>Performs</b>: registration of a sequence of images, by 6 different registration models:\n * <ul>\n * \t\t\t\t<li> Translation (no deformation)</li>\n * \t\t\t\t<li> Rigid (translation + rotation)</li>\n * \t\t\t\t<li> Similarity (translation + rotation + isotropic scaling)</li>\n * \t\t\t\t<li> Affine (free affine transformation)</li>\n * \t\t\t\t<li> Elastic (consistent elastic deformations by B-splines)</li>\n * \t\t\t\t<li> Moving least squares (maximal warping)</li>\n * </ul>\n * <p>\n * <b>Outputs</b>: the list of new images, one for slice, into a target directory as .tif files.\n * <p>\n * For a detailed documentation, please visit the plugin website at:\n * <p>\n * <A target=\"_blank\" href=\"http://fiji.sc/wiki/Register_Virtual_Stack_Slices\">http://fiji.sc/wiki/Register_Virtual_Stack_Slices</A>\n * \n * @author Ignacio Arganda-Carreras (<EMAIL>), Stephan Saalfeld and Albert Cardona\n */\npublic class Register_Virtual_Stack_MT implements PlugIn \n{\n\n\t// Registration types\n\t/** translation registration model id */\n\tpublic static final int TRANSLATION \t\t\t= 0;\n\t/** rigid-body registration model id */\n\tpublic static final int RIGID \t\t\t\t\t= 1;", "line_changes": {"deleted": [{"line_no": 41, "char_start": 1661, "char_end": 1762, "line": " * @author Ignacio Arganda-Carreras (ignacio.arganda@gmail.com), Stephan Saalfeld and Albert Cardona\n"}], "added": [{"line_no": 42, "char_start": 1661, "char_end": 1744, "line": " * @author Ignacio Arganda-Carreras (<EMAIL>), Stephan Saalfeld and Albert Cardona\n"}]}, "char_changes": {"deleted": [{"char_start": 1661, "char_end": 1762, "chars": " * @author Ignacio Arganda-Carreras (ignacio.arganda@gmail.com), Stephan Saalfeld and Albert Cardona\n"}], "added": [{"char_start": 1661, "char_end": 1744, "chars": " * @author Ignacio Arganda-Carreras (<EMAIL>), Stephan Saalfeld and Albert Cardona\n"}]}}
{"func_name": 2589, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package org.hobbit.awscontroller.SSH;\n\nimport com.jcraft.jsch.JSch;\nimport com.jcraft.jsch.JSchException;\nimport com.jcraft.jsch.Session;\nimport com.jcraft.jsch.UserInfo;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class HSession {\n    private HSession parentSession;\n    private Session session;\n    private Map<Integer, Integer> forwardings = new HashMap<>();\n    private int sshForwardPort = -1;\n    UserInfo userInfo = new UserInfoImpl();\n    String username;\n    String host;\n    int port;\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(HSession.class);\n\n    public HSession(String username, String host, int port, String keyfilePath, String[] portsToForward, HSession parentSession){\n        this.parentSession = parentSession;\n        this.username = username;\n        this.host = host;\n        this.port = port;\n\n        try {\n            if(!new File(keyfilePath).exists())\n                throw new Exception(keyfilePath+\" not exists!\");\n            JSch jsch = new JSch();\n            jsch.addIdentity(keyfilePath);\n\n\n            if (parentSession != null) {\n                sshForwardPort = parentSession.getSession().setPortForwardingL(0, host, 22);\n                session = jsch.getSession(username, \"127.0.0.1\", sshForwardPort);\n            } else {\n                session = jsch.getSession(username, host, port);\n            }\n            session.setUserInfo(userInfo);\n            //session.setHostKeyAlias(host);\n\n            if (portsToForward != null)", "func_src_after": "package org.hobbit.awscontroller.SSH;\n\nimport com.jcraft.jsch.JSch;\nimport com.jcraft.jsch.JSchException;\nimport com.jcraft.jsch.Session;\nimport com.jcraft.jsch.UserInfo;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class HSession {\n    private HSession parentSession;\n    private Session session;\n    private Map<Integer, Integer> forwardings = new HashMap<>();\n    private int sshForwardPort = -1;\n    UserInfo userInfo = new UserInfoImpl();\n    String username;\n    String host;\n    int port;\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(HSession.class);\n\n    public HSession(String username, String host, int port, String keyfilePath, String[] portsToForward, HSession parentSession){\n        this.parentSession = parentSession;\n        this.username = username;\n        this.host = host;\n        this.port = port;\n\n        try {\n            if(!new File(keyfilePath).exists())\n                throw new Exception(keyfilePath+\" not exists!\");\n            JSch jsch = new JSch();\n            jsch.addIdentity(keyfilePath);\n\n\n            if (parentSession != null) {\n                sshForwardPort = parentSession.getSession().setPortForwardingL(0, host, 22);\n                session = jsch.getSession(username, \"<IP-Address>\", sshForwardPort);\n            } else {\n                session = jsch.getSession(username, host, port);\n            }\n            session.setUserInfo(userInfo);\n            //session.setHostKeyAlias(host);\n\n            if (portsToForward != null)", "line_changes": {"deleted": [{"line_no": 43, "char_start": 1324, "char_end": 1406, "line": "                session = jsch.getSession(username, \"127.0.0.1\", sshForwardPort);\n"}], "added": [{"line_no": 44, "char_start": 1324, "char_end": 1409, "line": "                session = jsch.getSession(username, \"<IP-Address>\", sshForwardPort);\n"}]}, "char_changes": {"deleted": [{"char_start": 1324, "char_end": 1406, "chars": "                session = jsch.getSession(username, \"127.0.0.1\", sshForwardPort);\n"}], "added": [{"char_start": 1324, "char_end": 1409, "chars": "                session = jsch.getSession(username, \"<IP-Address>\", sshForwardPort);\n"}]}}
{"func_name": 2611, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package org.keycloak.authentication.authenticators.browser;\n\nimport org.jboss.logging.Logger;\nimport org.keycloak.authentication.AuthenticationFlowContext;\nimport org.keycloak.authentication.Authenticator;\nimport org.keycloak.models.KeycloakSession;\nimport org.keycloak.models.RealmModel;\nimport org.keycloak.models.UserModel;\nimport org.keycloak.scripting.InvocableScript;\nimport org.keycloak.scripting.Script;\nimport org.keycloak.scripting.ScriptBindingsConfigurer;\nimport org.keycloak.scripting.ScriptingProvider;\n\nimport javax.script.Bindings;\nimport javax.script.ScriptException;\nimport java.util.Map;\n\n/**\n * An {@link Authenticator} that can execute a configured script during authentication flow.\n * <p>scripts must provide </p>\n *\n * @author <a href=\"mailto:thomas.darimont@gmail.com\">Thomas Darimont</a>\n */\npublic class ScriptBasedAuthenticator implements Authenticator {\n\n    private static final Logger LOGGER = Logger.getLogger(ScriptBasedAuthenticator.class);\n\n    static final String SCRIPT_CODE = \"scriptCode\";\n    static final String SCRIPT_NAME = \"scriptName\";\n    static final String SCRIPT_DESCRIPTION = \"scriptDescription\";\n\n    static final String ACTION = \"action\";\n    static final String AUTHENTICATE = \"authenticate\";\n    static final String TEXT_JAVASCRIPT = \"text/javascript\";\n\n    @Override\n    public void authenticate(AuthenticationFlowContext context) {\n        tryInvoke(AUTHENTICATE, context);\n    }\n\n    @Override\n    public void action(AuthenticationFlowContext context) {\n        tryInvoke(ACTION, context);\n    }\n\n    private void tryInvoke(String functionName, AuthenticationFlowContext context) {\n\n        InvocableScript script = getInvocableScript(context);\n\n        if (!script.hasFunction(functionName)) {", "func_src_after": "package org.keycloak.authentication.authenticators.browser;\n\nimport org.jboss.logging.Logger;\nimport org.keycloak.authentication.AuthenticationFlowContext;\nimport org.keycloak.authentication.Authenticator;\nimport org.keycloak.models.KeycloakSession;\nimport org.keycloak.models.RealmModel;\nimport org.keycloak.models.UserModel;\nimport org.keycloak.scripting.InvocableScript;\nimport org.keycloak.scripting.Script;\nimport org.keycloak.scripting.ScriptBindingsConfigurer;\nimport org.keycloak.scripting.ScriptingProvider;\n\nimport javax.script.Bindings;\nimport javax.script.ScriptException;\nimport java.util.Map;\n\n/**\n * An {@link Authenticator} that can execute a configured script during authentication flow.\n * <p>scripts must provide </p>\n *\n * @author <a href=\"<EMAIL>\">Thomas Darimont</a>\n */\npublic class ScriptBasedAuthenticator implements Authenticator {\n\n    private static final Logger LOGGER = Logger.getLogger(ScriptBasedAuthenticator.class);\n\n    static final String SCRIPT_CODE = \"scriptCode\";\n    static final String SCRIPT_NAME = \"scriptName\";\n    static final String SCRIPT_DESCRIPTION = \"scriptDescription\";\n\n    static final String ACTION = \"action\";\n    static final String AUTHENTICATE = \"authenticate\";\n    static final String TEXT_JAVASCRIPT = \"text/javascript\";\n\n    @Override\n    public void authenticate(AuthenticationFlowContext context) {\n        tryInvoke(AUTHENTICATE, context);\n    }\n\n    @Override\n    public void action(AuthenticationFlowContext context) {\n        tryInvoke(ACTION, context);\n    }\n\n    private void tryInvoke(String functionName, AuthenticationFlowContext context) {\n\n        InvocableScript script = getInvocableScript(context);\n\n        if (!script.hasFunction(functionName)) {", "line_changes": {"deleted": [{"line_no": 22, "char_start": 740, "char_end": 814, "line": " * @author <a href=\"mailto:thomas.darimont@gmail.com\">Thomas Darimont</a>\n"}], "added": [{"line_no": 23, "char_start": 740, "char_end": 789, "line": " * @author <a href=\"<EMAIL>\">Thomas Darimont</a>\n"}]}, "char_changes": {"deleted": [{"char_start": 740, "char_end": 814, "chars": " * @author <a href=\"mailto:thomas.darimont@gmail.com\">Thomas Darimont</a>\n"}], "added": [{"char_start": 740, "char_end": 789, "chars": " * @author <a href=\"<EMAIL>\">Thomas Darimont</a>\n"}]}}
{"func_name": 2622, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed\n        // create instance of Random class\n        Random rand = new Random();\n        \n        String UserName=jTextField2.getText();\n        jLabel2.setText(UserName);\n  \n       \n         \n  \n        // Generate random integers in range 0 to 999 \n        OTP = rand.nextInt(1000000); \n         \n        \n        \n        jLabel2.setText(\"otp has been sent to your email\");\n        \n        Properties props = new Properties();\nprops.put(\"mail.smtp.starttls.enable\", \"true\");\nprops.put(\"mail.smtp.host\", \"smtp.gmail.com\");\nprops.put(\"mail.smtp.socketFactory.port\", \"465\");\nprops.put(\"mail.smtp.socketFactory.class\",\n\"javax.net.ssl.SSLSocketFactory\");\nprops.put(\"mail.smtp.auth\", \"true\");\nprops.put(\"mail.smtp.port\", \"587\");\n        Session session = Session.getDefaultInstance(props,\nnew javax.mail.Authenticator() {\nprotected PasswordAuthentication getPasswordAuthentication() \n            {\nreturn new PasswordAuthentication(\"unhackonline@gmail.com\",\"2810@AJEETjha$\");\n            }\n        });\ntry\n        {\n            String email=jTextField2.getText().toString();\n            String msg=\"hello all!!!\",cipherText,decryptedText;     \nKeyGenerator keyGen = KeyGenerator.getInstance(\"AES\"); \nkeyGen.init(128); \nSecretKey secretKey = keyGen.generateKey(); \n            Cipher aesCipher = Cipher.getInstance(\"AES\"); \naesCipher.init(Cipher.ENCRYPT_MODE,secretKey); \nbyte[] byteDataToEncrypt = msg.getBytes(); \nbyte[] byteCipherText = aesCipher.doFinal(byteDataToEncrypt); \ncipherText = new BASE64Encoder().encode(byteCipherText); \n            Message message = new MimeMessage(session);\nmessage.setFrom(new InternetAddress(\"unhackonline@gmail.com\"));\nmessage.setRecipients(Message.RecipientType.TO,\nInternetAddress.parse(email));\nmessage.setSubject(\"FILE SECURITY SYSTEM USING OTP....\");", "func_src_after": "\n    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed\n        // create instance of Random class\n        Random rand = new Random();\n        \n        String UserName=jTextField2.getText();\n        jLabel2.setText(UserName);\n  \n       \n         \n  \n        // Generate random integers in range 0 to 999 \n        OTP = rand.nextInt(1000000); \n         \n        \n        \n        jLabel2.setText(\"otp has been sent to your email\");\n        \n        Properties props = new Properties();\nprops.put(\"mail.smtp.starttls.enable\", \"true\");\nprops.put(\"mail.smtp.host\", \"smtp.gmail.com\");\nprops.put(\"mail.smtp.socketFactory.port\", \"465\");\nprops.put(\"mail.smtp.socketFactory.class\",\n\"javax.net.ssl.SSLSocketFactory\");\nprops.put(\"mail.smtp.auth\", \"true\");\nprops.put(\"mail.smtp.port\", \"587\");\n        Session session = Session.getDefaultInstance(props,\nnew javax.mail.Authenticator() {\nprotected PasswordAuthentication getPasswordAuthentication() \n            {\nreturn new PasswordAuthentication(\"<EMAIL>\",\"2810@AJEETjha$\");\n            }\n        });\ntry\n        {\n            String email=jTextField2.getText().toString();\n            String msg=\"hello all!!!\",cipherText,decryptedText;     \nKeyGenerator keyGen = KeyGenerator.getInstance(\"AES\"); \nkeyGen.init(128); \nSecretKey secretKey = keyGen.generateKey(); \n            Cipher aesCipher = Cipher.getInstance(\"AES\"); \naesCipher.init(Cipher.ENCRYPT_MODE,secretKey); \nbyte[] byteDataToEncrypt = msg.getBytes(); \nbyte[] byteCipherText = aesCipher.doFinal(byteDataToEncrypt); \ncipherText = new BASE64Encoder().encode(byteCipherText); \n            Message message = new MimeMessage(session);\nmessage.setFrom(new InternetAddress(\"<EMAIL>\"));\nmessage.setRecipients(Message.RecipientType.TO,\nInternetAddress.parse(email));\nmessage.setSubject(\"FILE SECURITY SYSTEM USING OTP....\");", "line_changes": {"deleted": [{"line_no": 31, "char_start": 1011, "char_end": 1089, "line": "return new PasswordAuthentication(\"unhackonline@gmail.com\",\"2810@AJEETjha$\");\n"}, {"line_no": 48, "char_start": 1690, "char_end": 1754, "line": "message.setFrom(new InternetAddress(\"unhackonline@gmail.com\"));\n"}], "added": [{"line_no": 32, "char_start": 1011, "char_end": 1074, "line": "return new PasswordAuthentication(\"<EMAIL>\",\"2810@AJEETjha$\");\n"}, {"line_no": 49, "char_start": 1690, "char_end": 1739, "line": "message.setFrom(new InternetAddress(\"<EMAIL>\"));\n"}]}, "char_changes": {"deleted": [{"char_start": 1011, "char_end": 1089, "chars": "return new PasswordAuthentication(\"unhackonline@gmail.com\",\"2810@AJEETjha$\");\n"}, {"char_start": 1690, "char_end": 1754, "chars": "message.setFrom(new InternetAddress(\"unhackonline@gmail.com\"));\n"}], "added": [{"char_start": 1011, "char_end": 1074, "chars": "return new PasswordAuthentication(\"<EMAIL>\",\"2810@AJEETjha$\");\n"}, {"char_start": 1690, "char_end": 1739, "chars": "message.setFrom(new InternetAddress(\"<EMAIL>\"));\n"}]}}
{"func_name": 2631, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright 2015 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage io.apiman.gateway.platforms.vertx3.services;\n\nimport io.apiman.gateway.platforms.vertx3.io.VertxApiResponse;\nimport io.apiman.gateway.platforms.vertx3.io.VertxPolicyFailure;\nimport io.apiman.gateway.platforms.vertx3.services.impl.PolicyToIngestorServiceImpl;\nimport io.vertx.codegen.annotations.ProxyClose;\nimport io.vertx.codegen.annotations.ProxyGen;\nimport io.vertx.codegen.annotations.VertxGen;\nimport io.vertx.core.AsyncResult;\nimport io.vertx.core.Handler;\nimport io.vertx.core.Vertx;\nimport io.vertx.serviceproxy.ProxyHelper;\n\n/**\n * Anything that goes from an ingestor (e.g. HTTP) to policy verticle\n *\n * HTTP <=> PolicyVerticle\n *\n * @author Marc Savy {@literal <msavy@redhat.com>}\n */\n@ProxyGen\n@VertxGen\npublic interface PolicyToIngestorService {\n\n    static PolicyToIngestorService create(Vertx vertx) {\n      return new PolicyToIngestorServiceImpl();\n    }\n\n    static PolicyToIngestorService createProxy(Vertx vertx, String address) {\n      return ProxyHelper.createProxy(PolicyToIngestorService.class, vertx, address);\n    }\n\n    /**\n     * Write a apiRequest (head)\n     *", "func_src_after": "/*\n * Copyright 2015 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage io.apiman.gateway.platforms.vertx3.services;\n\nimport io.apiman.gateway.platforms.vertx3.io.VertxApiResponse;\nimport io.apiman.gateway.platforms.vertx3.io.VertxPolicyFailure;\nimport io.apiman.gateway.platforms.vertx3.services.impl.PolicyToIngestorServiceImpl;\nimport io.vertx.codegen.annotations.ProxyClose;\nimport io.vertx.codegen.annotations.ProxyGen;\nimport io.vertx.codegen.annotations.VertxGen;\nimport io.vertx.core.AsyncResult;\nimport io.vertx.core.Handler;\nimport io.vertx.core.Vertx;\nimport io.vertx.serviceproxy.ProxyHelper;\n\n/**\n * Anything that goes from an ingestor (e.g. HTTP) to policy verticle\n *\n * HTTP <=> PolicyVerticle\n *\n * @author Marc Savy {@literal <<EMAIL>>}\n */\n@ProxyGen\n@VertxGen\npublic interface PolicyToIngestorService {\n\n    static PolicyToIngestorService create(Vertx vertx) {\n      return new PolicyToIngestorServiceImpl();\n    }\n\n    static PolicyToIngestorService createProxy(Vertx vertx, String address) {\n      return ProxyHelper.createProxy(PolicyToIngestorService.class, vertx, address);\n    }\n\n    /**\n     * Write a apiRequest (head)\n     *", "line_changes": {"deleted": [{"line_no": 34, "char_start": 1243, "char_end": 1294, "line": " * @author Marc Savy {@literal <msavy@redhat.com>}\n"}], "added": [{"line_no": 35, "char_start": 1243, "char_end": 1285, "line": " * @author Marc Savy {@literal <<EMAIL>>}\n"}]}, "char_changes": {"deleted": [{"char_start": 1243, "char_end": 1294, "chars": " * @author Marc Savy {@literal <msavy@redhat.com>}\n"}], "added": [{"char_start": 1243, "char_end": 1285, "chars": " * @author Marc Savy {@literal <<EMAIL>>}\n"}]}}
{"func_name": 2645, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package de.fherfurt.persons.client;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\n/**\n * Class containing list with created Persons\n *\n */\npublic class DevPerson implements PersonsClient{\n    List<Person> personList;\n\n    public DevPerson(){\n        personList = new LinkedList<>();\n        personList.add(new Person(\"Max\",\"Mustermann\",\"Studentenberatung\",\"6.0.15\",\"Max.Mustermann@fh-erfurt.de\",\"0123456789\",1));\n        personList.add(new Person(\"Sabine\",\"Musterfrau\",\"Gremien Leitung\",\"6.0.12\",\"sabine-musterfrau@fh-erfurt.de\",\"0132435465\",2));\n    }\n\n    /**\n     * Methode to get a Person with all of his/her values\n     * using stream\n     *\n     * @param personId - id of searched Person\n     * @return Person - found Person\n     */\n    public Person getPersonById(int personId){\n        return personList.stream()\n                .filter(Elements -> personId == Elements.getPersonId())\n                .findAny()\n                .orElse(null);\n    }\n\n    @Override\n    public Person findPersonUsingIteratorBy(int PersonID){\n        return null;\n    }\n\n    @Override\n    public byte[] findPersonAvatarBy(int PersonID){\n        return new byte[0];\n    }\n}\n", "func_src_after": "package de.fherfurt.persons.client;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\n/**\n * Class containing list with created Persons\n *\n */\npublic class DevPerson implements PersonsClient{\n    List<Person> personList;\n\n    public DevPerson(){\n        personList = new LinkedList<>();\n        personList.add(new Person(\"Max\",\"Mustermann\",\"Studentenberatung\",\"6.0.15\",\"<EMAIL>\",\"0123456789\",1));\n        personList.add(new Person(\"Sabine\",\"Musterfrau\",\"Gremien Leitung\",\"6.0.12\",\"<EMAIL>\",\"0132435465\",2));\n    }\n\n    /**\n     * Methode to get a Person with all of his/her values\n     * using stream\n     *\n     * @param personId - id of searched Person\n     * @return Person - found Person\n     */\n    public Person getPersonById(int personId){\n        return personList.stream()\n                .filter(Elements -> personId == Elements.getPersonId())\n                .findAny()\n                .orElse(null);\n    }\n\n    @Override\n    public Person findPersonUsingIteratorBy(int PersonID){\n        return null;\n    }\n\n    @Override\n    public byte[] findPersonAvatarBy(int PersonID){\n        return new byte[0];\n    }\n}\n", "line_changes": {"deleted": [{"line_no": 15, "char_start": 291, "char_end": 421, "line": "        personList.add(new Person(\"Max\",\"Mustermann\",\"Studentenberatung\",\"6.0.15\",\"Max.Mustermann@fh-erfurt.de\",\"0123456789\",1));\n"}, {"line_no": 17, "char_start": 401, "char_end": 535, "line": "        personList.add(new Person(\"Sabine\",\"Musterfrau\",\"Gremien Leitung\",\"6.0.12\",\"sabine-musterfrau@fh-erfurt.de\",\"0132435465\",2));\n"}], "added": [{"line_no": 16, "char_start": 291, "char_end": 401, "line": "        personList.add(new Person(\"Max\",\"Mustermann\",\"Studentenberatung\",\"6.0.15\",\"<EMAIL>\",\"0123456789\",1));\n"}, {"line_no": 18, "char_start": 401, "char_end": 512, "line": "        personList.add(new Person(\"Sabine\",\"Musterfrau\",\"Gremien Leitung\",\"6.0.12\",\"<EMAIL>\",\"0132435465\",2));\n"}]}, "char_changes": {"deleted": [{"char_start": 291, "char_end": 421, "chars": "        personList.add(new Person(\"Max\",\"Mustermann\",\"Studentenberatung\",\"6.0.15\",\"Max.Mustermann@fh-erfurt.de\",\"0123456789\",1));\n"}, {"char_start": 401, "char_end": 535, "chars": "        personList.add(new Person(\"Sabine\",\"Musterfrau\",\"Gremien Leitung\",\"6.0.12\",\"sabine-musterfrau@fh-erfurt.de\",\"0132435465\",2));\n"}], "added": [{"char_start": 291, "char_end": 401, "chars": "        personList.add(new Person(\"Max\",\"Mustermann\",\"Studentenberatung\",\"6.0.15\",\"<EMAIL>\",\"0123456789\",1));\n"}, {"char_start": 401, "char_end": 512, "chars": "        personList.add(new Person(\"Sabine\",\"Musterfrau\",\"Gremien Leitung\",\"6.0.12\",\"<EMAIL>\",\"0132435465\",2));\n"}]}}
{"func_name": 2657, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    public void RSA() throws Exception {\n        String content = \"H\";\n//        String privateKey = \"MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAK9p6r0xXI7ieu3cXJ+kp2ZoKBmuD4VTq/cQPEe5y/HVOl/kImEeLII8XQZ1Dqy4GNjW0Ci5rej7MZBDV11UFMVrQKwPXRvBpuYMujzD8v5v0KNqpDFgK6M3hOs4M4oB8CXQ680LaaGxSgoZNcAsGxeacgHwr4h36hq8FJS1a/WbAgMBAAECgYAyZv2zFQ7iY4Ms+4eFu5r6Gu2Cy3fcOHmOCRU5CtLmDv2x9exG+ZOSbGPSaiooSNGi5L51JT0qV5sbN65Pu8wnnr1mnsgvszs0R19sc+E0/HiWAYSNsQk/xCZRC93k3GX9tmwxm2FqVP35K6CWS/5gvgGX35FOrXgmTpyi/2/UwQJBAPOgJLNeqHyZFuvN0Mf/f65cEDbA+0pNnGLy7iXSwzyF5vV/XA31UJXCoLBa2Umxndju43rU/6cv3lfqnaVD6jsCQQC4UtEs8hYSs2lg9UmxyJshyuTumhHHoZL8PPqU3B++be2cMkUH6IcEqJ8Ev2olYipRQcjyt7cfIUJEcs9vEAwhAkEA6+tgnvJDZqU5NRAR5hrdohM1AFDRB5swngFx7N60gZ+JkKLMmhe8+cmHoj/Xuy1tFe4AC6rIBzarsadZEfk6kQJAfnbr55+Nf3UzNv/0eRM/RNc1bXOuAT8dXwzjjGDfMsOvhDyFWmCyyoJ64EIIrO+GQ0wUeFuOO8CQ+++d3QCwoQJANZYD6UmEkfkrz/dEwQvpL2ovYB1Nm/XxjP3f2meb8v7xkUIdluaVaPacqIl9AfM+et4E1wC+a2pKmCrrCfu9Cw==\";\n//        String publicKey = \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCvaeq9MVyO4nrt3FyfpKdmaCgZrg+FU6v3EDxHucvx1Tpf5CJhHiyCPF0GdQ6suBjY1tAoua3o+zGQQ1ddVBTFa0CsD10bwabmDLo8w/L+b9CjaqQxYCujN4TrODOKAfAl0OvNC2mhsUoKGTXALBsXmnIB8K+Id+oavBSUtWv1mwIDAQAB\";\n//        EncryptUtils.RSA.getPublicKey(publicKey);\n//        KeyPair keyPair = EncryptUtils.RSA.buildKeyPair();\n//        PrivateKey privateKey = keyPair.getPrivate();\n//        PublicKey publicKey = keyPair.getPublic();\n\n        String encryptString =new String(EncryptUtils.RSA.encrypt(content.getBytes(), EncryptUtils.RSA.getPublicKey(publicKeyString)));\n        System.out.println(\"encryptString:\"+encryptString);\n        String decryptString =new String(EncryptUtils.RSA.decrypt(encryptString.getBytes(), EncryptUtils.RSA.getPrivateKey(privateKeyString)));\n        System.out.println(\"decryptString:\"+decryptString);\n    }\n}", "func_src_after": "    public void RSA() throws Exception {\n        String content = \"H\";\n//        String privateKey = \"MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAK9p6r0xXI7ieu3cXJ+kp2ZoKBmuD4VTq/cQPEe5y/HVOl/kImEeLII8XQZ1Dqy4GNjW0Ci5rej7MZBDV11UFMVrQKwPXRvBpuYMujzD8v5v0KNqpDFgK6M3hOs4M4oB8CXQ680LaaGxSgoZNcAsGxeacgHwr4h36hq8FJS1a/WbAgMBAAECgYAyZv2zFQ7iY4Ms+4eFu5r6Gu2Cy3fcOHmOCRU5CtLmDv2x9exG+ZOSbGPSaiooSNGi5L51JT0qV5sbN65Pu8wnnr1mnsgvszs0R19sc+E0/HiWAYSNsQk/xCZRC93k3GX9tmwxm2FqVP35K6CWS/5gvgGX35FOrXgmTpyi/2/UwQJBAPOgJLNeqHyZFuvN0Mf/f65cEDbA+0pNnGLy7iXSwzyF5vV/XA31UJXCoLBa2Umxndju43rU/6cv3lfqnaVD6jsCQQC4UtEs8hYSs2lg9UmxyJshyuTumhHHoZL8PPqU3B++be2cMkUH6IcEqJ8Ev2olYipRQcjyt7cfIUJEcs9vEAwhAkEA6+tgnvJDZqU5NRAR5hrdohM1AFDRB5swngFx7N60gZ+JkKLMmhe8+cmHoj/Xuy1tFe4AC6rIBzarsadZEfk6kQJAfnbr55+Nf3UzNv/0eRM/RNc1bXOuAT8dXwzjjGDfMsOvhDyFWmCyyoJ64EIIrO+GQ0wUeFuOO8CQ+++d3QCwoQJANZYD6UmEkfkrz/dEwQvpL2ovYB1Nm/XxjP3f2meb8v7xkUIdluaVaPacqIl9AfM+et4E1wC+a2pKmCrrCfu9Cw==\";\n//        String publicKey = \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCvaeq9MVyO4nrt3FyfpKdmaCgZrg+FU6v3EDxHucvx1Tpf5CJhHiyCPF0GdQ6suBjY1tAoua3o+zGQQ1ddVBTFa0CsD10bwabmDLo8w/L+b9CjaqQxYCujN4TrODOKAfAl0OvNC2mhsUoKGTXALBsXmnIB8K+Id+oavBSUtWv1mwIDAQAB\";\n//        EncryptUtils.RSA.getPublicKey(publicKey);\n//        KeyPair keyPair = EncryptUtils.RSA.buildKeyPair();\n//        PrivateKey privateKey = keyPair.getPrivate();\n//        PublicKey publicKey = keyPair.getPublic();\n\n        String encryptString =new String(EncryptUtils.RSA.encrypt(content.getBytes(), EncryptUtils.RSA.getPublicKey(publicKeyString)));\n        System.out.println(\"encryptString:\"+encryptString);\n        String decryptString =new String(EncryptUtils.RSA.decrypt(encryptString.getBytes(), EncryptUtils.RSA.getPrivateKey(privateKeyString)));\n        System.out.println(\"decryptString:\"+decryptString);\n    }\n}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2679, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * gml-objects - A Java mapping for the OGC Geography Markup Language (GML)\n * https://github.com/xmlobjects/gml-objects\n *\n * Copyright 2019-2021 Claus Nagel <claus.nagel@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.xmlobjects.gml.adapter;\n\nimport org.xmlobjects.gml.model.base.AggregationAttributes;\nimport org.xmlobjects.gml.model.base.AssociationAttributes;\nimport org.xmlobjects.gml.model.base.OwnershipAttributes;\nimport org.xmlobjects.gml.model.geometry.SRSInformation;\nimport org.xmlobjects.gml.model.geometry.SRSReference;\nimport org.xmlobjects.gml.model.valueobjects.ReferenceSystem;\nimport org.xmlobjects.gml.util.GMLConstants;\nimport org.xmlobjects.xml.Element;\nimport org.xmlobjects.xml.Namespaces;\nimport org.xmlobjects.xml.TextContent;\n\npublic class GMLSerializerHelper {\n\n    public static String getGMLBaseNamespace(Namespaces namespaces) {\n        return namespaces.contains(GMLConstants.GML_3_1_NAMESPACE) ?\n                GMLConstants.GML_3_1_NAMESPACE : GMLConstants.GML_3_2_NAMESPACE;\n    }\n\n    public static void serializeAssociationAttributes(Element element, AssociationAttributes object, Namespaces namespaces) {\n        String baseNamespace = getGMLBaseNamespace(namespaces);\n\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"href\", object.getHref());\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"role\", object.getRole());\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"arcrole\", object.getArcRole());\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"title\", object.getTitle());\n        element.addAttribute(baseNamespace, \"remoteSchema\", object.getRemoteSchema());\n\n        if (object.getShow() != null)\n            element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"show\", object.getShow().toValue());", "func_src_after": "/*\n * gml-objects - A Java mapping for the OGC Geography Markup Language (GML)\n * https://github.com/xmlobjects/gml-objects\n *\n * Copyright 2019-2021 Claus Nagel <<EMAIL>>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.xmlobjects.gml.adapter;\n\nimport org.xmlobjects.gml.model.base.AggregationAttributes;\nimport org.xmlobjects.gml.model.base.AssociationAttributes;\nimport org.xmlobjects.gml.model.base.OwnershipAttributes;\nimport org.xmlobjects.gml.model.geometry.SRSInformation;\nimport org.xmlobjects.gml.model.geometry.SRSReference;\nimport org.xmlobjects.gml.model.valueobjects.ReferenceSystem;\nimport org.xmlobjects.gml.util.GMLConstants;\nimport org.xmlobjects.xml.Element;\nimport org.xmlobjects.xml.Namespaces;\nimport org.xmlobjects.xml.TextContent;\n\npublic class GMLSerializerHelper {\n\n    public static String getGMLBaseNamespace(Namespaces namespaces) {\n        return namespaces.contains(GMLConstants.GML_3_1_NAMESPACE) ?\n                GMLConstants.GML_3_1_NAMESPACE : GMLConstants.GML_3_2_NAMESPACE;\n    }\n\n    public static void serializeAssociationAttributes(Element element, AssociationAttributes object, Namespaces namespaces) {\n        String baseNamespace = getGMLBaseNamespace(namespaces);\n\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"href\", object.getHref());\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"role\", object.getRole());\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"arcrole\", object.getArcRole());\n        element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"title\", object.getTitle());\n        element.addAttribute(baseNamespace, \"remoteSchema\", object.getRemoteSchema());\n\n        if (object.getShow() != null)\n            element.addAttribute(GMLConstants.XLINK_NAMESPACE, \"show\", object.getShow().toValue());", "line_changes": {"deleted": [{"line_no": 5, "char_start": 127, "char_end": 186, "line": " * Copyright 2019-2021 Claus Nagel <claus.nagel@gmail.com>\n"}], "added": [{"line_no": 6, "char_start": 127, "char_end": 172, "line": " * Copyright 2019-2021 Claus Nagel <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 127, "char_end": 186, "chars": " * Copyright 2019-2021 Claus Nagel <claus.nagel@gmail.com>\n"}], "added": [{"char_start": 127, "char_end": 172, "chars": " * Copyright 2019-2021 Claus Nagel <<EMAIL>>\n"}]}}
{"func_name": 2709, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright 2017 Organizations participating in ISAAC, ISAAC's KOMET, and SOLOR development include the \n         US Veterans Health Administration, OSHERA, and the Health Services Platform Consortium..\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage sh.isaac.provider.drools;\n\nimport org.drools.core.base.BaseEvaluator;\nimport org.drools.core.base.ValueType;\nimport org.drools.core.base.evaluators.EvaluatorDefinition;\nimport org.drools.core.base.evaluators.Operator;\nimport sh.isaac.api.Get;\nimport sh.isaac.api.component.concept.ConceptSnapshot;\nimport sh.isaac.api.coordinate.ManifoldCoordinate;\nimport sh.komet.gui.control.property.ViewProperties;\n\n/**\n *\n * {@link IsKindOfEvaluatorDefinition}\n *\n * Only includes stated view.\n *\n * @author kec\n * @author afurber\n * @author <a href=\"mailto:daniel.armbrust.list@gmail.com\">Dan Armbrust</a>\n */\npublic class IsKindOfEvaluatorDefinition extends IsaacBaseEvaluatorDefinition implements EvaluatorDefinition {\n\n    public static final Operator IS_KIND_OF = Operator.addOperatorToRegistry(\"isKindOf\", false);\n    public static final Operator NOT_IS_KIND_OF = Operator.addOperatorToRegistry(IS_KIND_OF.getOperatorString(), true);\n\n    public static class IsKindOfEvaluator extends IsaacBaseEvaluator {\n\n        public IsKindOfEvaluator() {\n            super();\n            // No arg constructor for serialization.  \n        }\n\n        public IsKindOfEvaluator(final ValueType type, final boolean isNegated) {", "func_src_after": "/*\n * Copyright 2017 Organizations participating in ISAAC, ISAAC's KOMET, and SOLOR development include the \n         US Veterans Health Administration, OSHERA, and the Health Services Platform Consortium..\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage sh.isaac.provider.drools;\n\nimport org.drools.core.base.BaseEvaluator;\nimport org.drools.core.base.ValueType;\nimport org.drools.core.base.evaluators.EvaluatorDefinition;\nimport org.drools.core.base.evaluators.Operator;\nimport sh.isaac.api.Get;\nimport sh.isaac.api.component.concept.ConceptSnapshot;\nimport sh.isaac.api.coordinate.ManifoldCoordinate;\nimport sh.komet.gui.control.property.ViewProperties;\n\n/**\n *\n * {@link IsKindOfEvaluatorDefinition}\n *\n * Only includes stated view.\n *\n * @author kec\n * @author afurber\n * @author <a href=\"mailto:daniel.armbrust.list@gmail.com\">Dan Armbrust</a>\n */\npublic class IsKindOfEvaluatorDefinition extends IsaacBaseEvaluatorDefinition implements EvaluatorDefinition {\n\n    public static final Operator IS_KIND_OF = Operator.addOperatorToRegistry(\"isKindOf\", false);\n    public static final Operator NOT_IS_KIND_OF = Operator.addOperatorToRegistry(IS_KIND_OF.getOperatorString(), true);\n\n    public static class IsKindOfEvaluator extends IsaacBaseEvaluator {\n\n        public IsKindOfEvaluator() {\n            super();\n            // No arg constructor for serialization.  \n        }\n\n        public IsKindOfEvaluator(final ValueType type, final boolean isNegated) {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2736, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    public final static String JSON_KEY_ZK_PORT = \"zkPort\";\n    public final static String JSON_KEY_STATE_UPDATE_INTERVAL_MS = \"stateUpdateIntervalMs\";\n    public final static String JSON_KEY_RETRY_INITIAL_DELAY_MS = \"retryInitialDelayMs\";\n    public final static String JSON_KEY_RETRY_DELAY_MULTIPLIER = \"retryDelayMultiplier\";\n    public final static String JSON_KEY_RETRY_DELAY_MAX_MS = \"retryDelayMaxMs\";\n    public final static String JSON_KEY_OUTPUT_STREAM_ID = \"outputStreamId\";\n    public final static String JSON_KEY_PARSED_TUPLES_STREAM = \"parsedTuplesStream\";\n    public final static String JSON_KEY_FAILED_TUPLES_STREAM = \"failedTuplesStream\";\n    public final static String JSON_KEY_PARSER_JAR_PATH = \"parserJarPath\";\n    public final static String JSON_KEY_PARSER_ID = \"parserId\";\n    public final static String JSON_KEY_DATA_SOURCE_ID = \"dataSourceId\";\n    public final static String JSON_KEY_STREAM_ID = \"streamId\";\n    public final static String JSON_KEY_NOTIFIER_NAME = \"notifierName\";\n    public final static String JSON_KEY_NOTIFICATION_SINK_JSON = \"notificationSinkJson\";\n    public final static String JSON_KEY_NOTIFIER_JAR_FILENAME = \"jarFileName\";\n    public final static String JSON_KEY_NOTIFIER_CLASSNAME = \"className\";\n    public final static String JSON_KEY_NOTIFIER_PROPERTIES = \"properties\";\n    public final static String JSON_KEY_NOTIFIER_FIELD_VALUES = \"fieldValues\";\n    public final static String JSON_KEY_NOTIFIER_FROM = \"from\";\n    public final static String JSON_KEY_NOTIFIER_TO = \"to\";\n    public final static String JSON_KEY_NOTIFIER_SUBJECT = \"subject\";\n    public final static String JSON_KEY_NOTIFIER_CONTENT_TYPE = \"contentType\";\n    public final static String JSON_KEY_NOTIFIER_BODY = \"body\";\n    public final static String JSON_KEY_NOTIFIER_USERNAME = \"username\";\n    public final static String JSON_KEY_NOTIFIER_PASSWORD = \"password\";\n    public final static String JSON_KEY_NOTIFIER_HOST = \"host\";\n    public final static String JSON_KEY_NOTIFIER_PORT = \"port\";\n    public final static String JSON_KEY_NOTIFIER_SSL = \"ssl\";\n    public final static String JSON_KEY_NOTIFIER_STARTTLS = \"starttls\";\n    public final static String JSON_KEY_NOTIFIER_DEBUG = \"debug\";\n    public final static String JSON_KEY_NOTIFIER_PROTOCOL = \"protocol\";\n    public final static String JSON_KEY_NOTIFIER_AUTH = \"auth\";\n    public final static String JSON_KEY_NOTIFICATION_STORE_CLASS = \"notificationStoreClassName\";\n    public final static String JSON_KEY_GROUPING = \"grouping\";\n    public final static String JSON_KEY_GROUPING_FIELDS = \"groupingFields\";\n    public final static String JSON_KEY_CUSTOM_GROUPING_IMPL = \"customGroupingImpl\";\n    public final static String JSON_KEY_PARALLELISM = \"parallelism\";\n    public final static String JSON_KEY_PARALLELISM_TOOLTIP = \"Number of executors\";\n    public final static String JSON_KEY_RULES_PROCESSOR_CONFIG =\"rulesProcessorConfig\";\n    public final static String JSON_KEY_RULES = \"rules\";\n    public final static String JSON_KEY_RULE_ACTIONS = \"actions\";\n    public final static String JSON_KEY_RULE_DECLARED_OUTPUT = \"declaredOutput\";\n    public final static String JSON_KEY_RULE_WINDOW_CONFIG = \"windowConfig\";\n\n    // normalization processor related constants\n    public final static String JSON_KEY_NORMALIZATION_PROCESSOR_CONFIG =\"normalizationProcessorConfig\";\n\n    public final static String JSON_KEY_INPUT_SCHEMA = \"inputSchema\";\n    public final static String JSON_KEY_INPUT_SCHEMA_MAP = \"inputSchemaMap\";\n    public final static String JSON_KEY_OUTPUT_STREAMS_SCHEMA = \"outputStreamToSchema\";", "func_src_after": "    public final static String JSON_KEY_ZK_PORT = \"zkPort\";\n    public final static String JSON_KEY_STATE_UPDATE_INTERVAL_MS = \"stateUpdateIntervalMs\";\n    public final static String JSON_KEY_RETRY_INITIAL_DELAY_MS = \"retryInitialDelayMs\";\n    public final static String JSON_KEY_RETRY_DELAY_MULTIPLIER = \"retryDelayMultiplier\";\n    public final static String JSON_KEY_RETRY_DELAY_MAX_MS = \"retryDelayMaxMs\";\n    public final static String JSON_KEY_OUTPUT_STREAM_ID = \"outputStreamId\";\n    public final static String JSON_KEY_PARSED_TUPLES_STREAM = \"parsedTuplesStream\";\n    public final static String JSON_KEY_FAILED_TUPLES_STREAM = \"failedTuplesStream\";\n    public final static String JSON_KEY_PARSER_JAR_PATH = \"parserJarPath\";\n    public final static String JSON_KEY_PARSER_ID = \"parserId\";\n    public final static String JSON_KEY_DATA_SOURCE_ID = \"dataSourceId\";\n    public final static String JSON_KEY_STREAM_ID = \"streamId\";\n    public final static String JSON_KEY_NOTIFIER_NAME = \"notifierName\";\n    public final static String JSON_KEY_NOTIFICATION_SINK_JSON = \"notificationSinkJson\";\n    public final static String JSON_KEY_NOTIFIER_JAR_FILENAME = \"jarFileName\";\n    public final static String JSON_KEY_NOTIFIER_CLASSNAME = \"className\";\n    public final static String JSON_KEY_NOTIFIER_PROPERTIES = \"properties\";\n    public final static String JSON_KEY_NOTIFIER_FIELD_VALUES = \"fieldValues\";\n    public final static String JSON_KEY_NOTIFIER_FROM = \"from\";\n    public final static String JSON_KEY_NOTIFIER_TO = \"to\";\n    public final static String JSON_KEY_NOTIFIER_SUBJECT = \"subject\";\n    public final static String JSON_KEY_NOTIFIER_CONTENT_TYPE = \"contentType\";\n    public final static String JSON_KEY_NOTIFIER_BODY = \"body\";\n    public final static String JSON_KEY_NOTIFIER_USERNAME = \"username\";\n    public final static String JSON_KEY_NOTIFIER_PASSWORD = \"password\";\n    public final static String JSON_KEY_NOTIFIER_HOST = \"host\";\n    public final static String JSON_KEY_NOTIFIER_PORT = \"port\";\n    public final static String JSON_KEY_NOTIFIER_SSL = \"ssl\";\n    public final static String JSON_KEY_NOTIFIER_STARTTLS = \"starttls\";\n    public final static String JSON_KEY_NOTIFIER_DEBUG = \"debug\";\n    public final static String JSON_KEY_NOTIFIER_PROTOCOL = \"protocol\";\n    public final static String JSON_KEY_NOTIFIER_AUTH = \"auth\";\n    public final static String JSON_KEY_NOTIFICATION_STORE_CLASS = \"notificationStoreClassName\";\n    public final static String JSON_KEY_GROUPING = \"grouping\";\n    public final static String JSON_KEY_GROUPING_FIELDS = \"groupingFields\";\n    public final static String JSON_KEY_CUSTOM_GROUPING_IMPL = \"customGroupingImpl\";\n    public final static String JSON_KEY_PARALLELISM = \"parallelism\";\n    public final static String JSON_KEY_PARALLELISM_TOOLTIP = \"Number of executors\";\n    public final static String JSON_KEY_RULES_PROCESSOR_CONFIG =\"rulesProcessorConfig\";\n    public final static String JSON_KEY_RULES = \"rules\";\n    public final static String JSON_KEY_RULE_ACTIONS = \"actions\";\n    public final static String JSON_KEY_RULE_DECLARED_OUTPUT = \"declaredOutput\";\n    public final static String JSON_KEY_RULE_WINDOW_CONFIG = \"windowConfig\";\n\n    // normalization processor related constants\n    public final static String JSON_KEY_NORMALIZATION_PROCESSOR_CONFIG =\"normalizationProcessorConfig\";\n\n    public final static String JSON_KEY_INPUT_SCHEMA = \"inputSchema\";\n    public final static String JSON_KEY_INPUT_SCHEMA_MAP = \"inputSchemaMap\";\n    public final static String JSON_KEY_OUTPUT_STREAMS_SCHEMA = \"outputStreamToSchema\";", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2747, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"编号\", \"184111\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"订舱日期\", \"2021.05.06\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"货代名称\", \"深圳美林联合国际货运代理有限公司\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"联系人\", \"Lisa\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"TEL\", \"86755-2586 2305/2264(8038)\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"FAX\", \"755-2586 2885\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"E-Mail\", \"sales17@wells-shipping.com\");\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"地址\", \"深圳市罗湖区地王大厦2501\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"托运人\", \"浙江泰普森实业集团有限公司\");\n//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜0p06＠hengfeng-china.com\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜Op06＠hengfeng-china.com\");\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"单证\", \"吴秋菊｜0571-28906150｜Doc03＠hengfeng-china.com\");\n\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"发票抬头\", \"ATVK LTD 108811,Moscow,Moscowskiy city St.Georgievskay,11,VII Contract N9003CH/2018 from 27.02.2018\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"产地抬头\", \"无\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"传真\", \"0571-28887270\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"寄单地址\", \"杭州市通益路68号（原杭印路68号）\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"托运人\", \"浙江泰普森实业集团有限公司\");\n\n//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"SHIPPRER（承运人）\", \"ZHEJIANG HENGFENG TOP LEISURE CO.,LTD BEIHU STREET MOGANSHAN ECONOMICAL DEVELOPING ZONE DEQING ZHEJIANG,P.R.CHINA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"SHIPPRER（承运人）\", \"ZHEJIANG HENGFENG TOP LEISURE CO.,LTD BEIHU STREET MOGANSHAN ECONOMICAL DEVELOPING ZONE DEQING ZHEJIANG.P.R.CHINA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"CONSIGNEE（收货人）\", \"ATVK LTD 108811,Moscow,Moscowskiy city St.Georgievskay,11,VII\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"NOTIFYPARTY（通知人）\", \"无\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"客户订单号或合同号\", \"20-09-025M/68626/62238/18-05-617M\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"客户订单号或合同号\", \"20-09-025M/68626/62238/18-05-617M\");\n\n\n//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"付款条件\", \"T/T\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"付款条件\", \"т/Т\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"价格条款\", \"FOB SHANGHAI,CHINA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"起运港\", \"SHANGHAI\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"目的港\", \"MOSCOW\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"目的地\", \"RUSSIA\");\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"国别地区\", \"RUSSIA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"出货日期\", \"2021.05.12\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"运费\", \"FREIGHT COLLECT\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"箱量\", \"1x40'H\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"唛头\", \"N/M\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"备注：\", \"1、贵司承运我司货物，在目的港务必凭正本提单放货。如在未收到我司正本书面确认的情况下擅自无单放货，贵司将承担由此造成的全部经济损失和法律责任。2、我司不接受任何形式的FCR、SEAWAY B／L、EXPRESS CARGO B／L等无货权提单。我司只接受船公司提单或在交通部备案的无船承运人提单。如贵司无法提供以上两种法定提单，请在第一时间与我司联系，告知情况。3、贵司的各项费用标准请与配舱回单一同传至我司确认，谢谢！\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"合计-件数\", \"638\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"合计-毛重\", \"4,214.90\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"合计-体积\", \"58.362\");\n\n\n\n    }", "func_src_after": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"编号\", \"184111\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"订舱日期\", \"2021.05.06\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"货代名称\", \"深圳美林联合国际货运代理有限公司\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"联系人\", \"Lisa\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"TEL\", \"86755-2586 2305/2264(8038)\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"FAX\", \"755-2586 2885\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"E-Mail\", \"<EMAIL>\");\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"地址\", \"深圳市罗湖区地王大厦2501\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"托运人\", \"浙江泰普森实业集团有限公司\");\n//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜<EMAIL>);\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜<EMAIL>\");\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"单证\", \"吴秋菊｜0571-28906150｜<EMAIL>\");\n\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"发票抬头\", \"ATVK LTD 108811,Moscow,Moscowskiy city St.Georgievskay,11,VII Contract N9003CH/2018 from 27.02.2018\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"产地抬头\", \"无\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"传真\", \"0571-28887270\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"寄单地址\", \"杭州市通益路68号（原杭印路68号）\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"托运人\", \"浙江泰普森实业集团有限公司\");\n\n//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"SHIPPRER（承运人）\", \"ZHEJIANG HENGFENG TOP LEISURE CO.,LTD BEIHU STREET MOGANSHAN ECONOMICAL DEVELOPING ZONE DEQING ZHEJIANG,P.R.CHINA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"SHIPPRER（承运人）\", \"ZHEJIANG HENGFENG TOP LEISURE CO.,LTD BEIHU STREET MOGANSHAN ECONOMICAL DEVELOPING ZONE DEQING ZHEJIANG.P.R.CHINA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"CONSIGNEE（收货人）\", \"ATVK LTD 108811,Moscow,Moscowskiy city St.Georgievskay,11,VII\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"NOTIFYPARTY（通知人）\", \"无\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"客户订单号或合同号\", \"20-09-025M/68626/62238/18-05-617M\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"客户订单号或合同号\", \"20-09-025M/68626/62238/18-05-617M\");\n\n\n//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"付款条件\", \"T/T\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"付款条件\", \"т/Т\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"价格条款\", \"FOB SHANGHAI,CHINA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"起运港\", \"SHANGHAI\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"目的港\", \"MOSCOW\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"目的地\", \"RUSSIA\");\n\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"国别地区\", \"RUSSIA\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"出货日期\", \"2021.05.12\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"运费\", \"FREIGHT COLLECT\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"箱量\", \"1x40'H\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"唛头\", \"N/M\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"备注：\", \"1、贵司承运我司货物，在目的港务必凭正本提单放货。如在未收到我司正本书面确认的情况下擅自无单放货，贵司将承担由此造成的全部经济损失和法律责任。2、我司不接受任何形式的FCR、SEAWAY B／L、EXPRESS CARGO B／L等无货权提单。我司只接受船公司提单或在交通部备案的无船承运人提单。如贵司无法提供以上两种法定提单，请在第一时间与我司联系，告知情况。3、贵司的各项费用标准请与配舱回单一同传至我司确认，谢谢！\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"合计-件数\", \"638\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"合计-毛重\", \"4,214.90\");\n        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"合计-体积\", \"58.362\");\n\n\n\n    }", "line_changes": {"deleted": [{"line_no": 7, "char_start": 520, "char_end": 623, "line": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"E-Mail\", \"sales17@wells-shipping.com\");\n"}, {"line_no": 12, "char_start": 779, "char_end": 895, "line": "//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜0p06＠hengfeng-china.com\");\n"}, {"line_no": 14, "char_start": 878, "char_end": 992, "line": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜Op06＠hengfeng-china.com\");\n"}, {"line_no": 17, "char_start": 977, "char_end": 1092, "line": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"单证\", \"吴秋菊｜0571-28906150｜Doc03＠hengfeng-china.com\");\n"}], "added": [{"line_no": 8, "char_start": 520, "char_end": 604, "line": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"E-Mail\", \"<EMAIL>\");\n"}, {"line_no": 13, "char_start": 779, "char_end": 878, "line": "//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜<EMAIL>);\n"}, {"line_no": 15, "char_start": 878, "char_end": 976, "line": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜<EMAIL>\");\n"}, {"line_no": 18, "char_start": 977, "char_end": 1075, "line": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"单证\", \"吴秋菊｜0571-28906150｜<EMAIL>\");\n"}]}, "char_changes": {"deleted": [{"char_start": 520, "char_end": 623, "chars": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"E-Mail\", \"sales17@wells-shipping.com\");\n"}, {"char_start": 779, "char_end": 895, "chars": "//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜0p06＠hengfeng-china.com\");\n"}, {"char_start": 878, "char_end": 992, "chars": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜Op06＠hengfeng-china.com\");\n"}, {"char_start": 977, "char_end": 1092, "chars": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"单证\", \"吴秋菊｜0571-28906150｜Doc03＠hengfeng-china.com\");\n"}], "added": [{"char_start": 520, "char_end": 604, "chars": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"E-Mail\", \"<EMAIL>\");\n"}, {"char_start": 779, "char_end": 878, "chars": "//        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜<EMAIL>);\n"}, {"char_start": 878, "char_end": 976, "chars": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"储运\", \"范璐青｜0571-28028027｜<EMAIL>\");\n"}, {"char_start": 977, "char_end": 1075, "chars": "        assert  BlockItemUtils.checkKeyValueMap(keyValueList, \"单证\", \"吴秋菊｜0571-28906150｜<EMAIL>\");\n"}]}}
{"func_name": 2808, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        /**\n         * Disables the Sonatype OSS Index Analyzer's ability to cache results\n         * locally.\n         */\n        public static final String DISABLE_OSSINDEX_CACHE = \"disableOssIndexCache\";\n        /**\n         * The username for the Sonatype OSS Index.\n         */\n        public static final String OSSINDEX_USERNAME = \"ossIndexUsername\";\n        /**\n         * The password for the Sonatype OSS Index.\n         */\n        public static final String OSSINDEX_PASSWORD = \"ossIndexPassword\";\n        /**\n         * Disables the OpenSSL Analyzer.\n         */\n        public static final String DISABLE_OPENSSL = \"disableOpenSSL\";\n        /**\n         * Disables the Node.js Package Analyzer.\n         */\n        public static final String DISABLE_NODE_JS = \"disableNodeJS\";\n        /**\n         * Skips dev dependencies in Node Package Analyzer\n         */\n        public static final String NODE_PACKAGE_SKIP_DEV_DEPENDENCIES = \"nodePackageSkipDevDependencies\";\n        /**\n         * Disables the Node Audit Analyzer.\n         */\n        public static final String DISABLE_NODE_AUDIT = \"disableNodeAudit\";\n        /**\n         * Disables the Yarn Audit Analyzer.\n         */\n        public static final String DISABLE_YARN_AUDIT = \"disableYarnAudit\";\n        /**\n         * Disables the Node Audit Analyzer's ability to cache results locally.\n         */\n        public static final String DISABLE_NODE_AUDIT_CACHE = \"disableNodeAuditCache\";\n        /**\n         * Configures the Node Audit Analyzer to skip the dev dependencies.\n         */\n        public static final String DISABLE_NODE_AUDIT_SKIPDEV = \"nodeAuditSkipDevDependencies\";\n        /**\n         * Disables the RetireJS Analyzer.\n         */\n        public static final String DISABLE_RETIRE_JS = \"disableRetireJS\";\n        /**\n         * Whether the RetireJS Analyzer will update regardless of the\n         * `autoupdate` setting.\n         */\n        public static final String RETIRE_JS_FORCEUPDATE = \"retireJsForceUpdate\";", "func_src_after": "        /**\n         * Disables the Sonatype OSS Index Analyzer's ability to cache results\n         * locally.\n         */\n        public static final String DISABLE_OSSINDEX_CACHE = \"disableOssIndexCache\";\n        /**\n         * The username for the Sonatype OSS Index.\n         */\n        public static final String OSSINDEX_USERNAME = \"ossIndexUsername\";\n        /**\n         * The password for the Sonatype OSS Index.\n         */\n        public static final String OSSINDEX_PASSWORD = \"ossIndexPassword\";\n        /**\n         * Disables the OpenSSL Analyzer.\n         */\n        public static final String DISABLE_OPENSSL = \"disableOpenSSL\";\n        /**\n         * Disables the Node.js Package Analyzer.\n         */\n        public static final String DISABLE_NODE_JS = \"disableNodeJS\";\n        /**\n         * Skips dev dependencies in Node Package Analyzer\n         */\n        public static final String NODE_PACKAGE_SKIP_DEV_DEPENDENCIES = \"nodePackageSkipDevDependencies\";\n        /**\n         * Disables the Node Audit Analyzer.\n         */\n        public static final String DISABLE_NODE_AUDIT = \"disableNodeAudit\";\n        /**\n         * Disables the Yarn Audit Analyzer.\n         */\n        public static final String DISABLE_YARN_AUDIT = \"disableYarnAudit\";\n        /**\n         * Disables the Node Audit Analyzer's ability to cache results locally.\n         */\n        public static final String DISABLE_NODE_AUDIT_CACHE = \"disableNodeAuditCache\";\n        /**\n         * Configures the Node Audit Analyzer to skip the dev dependencies.\n         */\n        public static final String DISABLE_NODE_AUDIT_SKIPDEV = \"nodeAuditSkipDevDependencies\";\n        /**\n         * Disables the RetireJS Analyzer.\n         */\n        public static final String DISABLE_RETIRE_JS = \"disableRetireJS\";\n        /**\n         * Whether the RetireJS Analyzer will update regardless of the\n         * `autoupdate` setting.\n         */\n        public static final String RETIRE_JS_FORCEUPDATE = \"retireJsForceUpdate\";", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2825, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * This file is part of bytesocks, licensed under the MIT License.\n *\n *  Copyright (c) lucko (Luck) <luck@lucko.me>\n *  Copyright (c) contributors\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n */\n\npackage me.lucko.bytesocks;\n\nimport me.lucko.bytesocks.http.CreateHandler;\nimport me.lucko.bytesocks.http.MetricsHandler;\nimport me.lucko.bytesocks.http.PreConnectHandler;\nimport me.lucko.bytesocks.util.RateLimiter;\nimport me.lucko.bytesocks.util.TokenGenerator;\nimport me.lucko.bytesocks.ws.ChannelRegistry;\nimport me.lucko.bytesocks.ws.ConnectHandler;\n\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\nimport io.jooby.Context;\nimport io.jooby.Cors;\nimport io.jooby.CorsHandler;\nimport io.jooby.ExecutionMode;\nimport io.jooby.Jooby;\nimport io.jooby.MediaType;\nimport io.jooby.ServerOptions;\nimport io.jooby.StatusCode;\nimport io.jooby.exception.StatusCodeException;\n\nimport java.time.Duration;\nimport java.util.concurrent.CompletionException;", "func_src_after": "/*\n * This file is part of bytesocks, licensed under the MIT License.\n *\n *  Copyright (c) lucko (Luck) <<EMAIL>>\n *  Copyright (c) contributors\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n */\n\npackage me.lucko.bytesocks;\n\nimport me.lucko.bytesocks.http.CreateHandler;\nimport me.lucko.bytesocks.http.MetricsHandler;\nimport me.lucko.bytesocks.http.PreConnectHandler;\nimport me.lucko.bytesocks.util.RateLimiter;\nimport me.lucko.bytesocks.util.TokenGenerator;\nimport me.lucko.bytesocks.ws.ChannelRegistry;\nimport me.lucko.bytesocks.ws.ConnectHandler;\n\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\nimport io.jooby.Context;\nimport io.jooby.Cors;\nimport io.jooby.CorsHandler;\nimport io.jooby.ExecutionMode;\nimport io.jooby.Jooby;\nimport io.jooby.MediaType;\nimport io.jooby.ServerOptions;\nimport io.jooby.StatusCode;\nimport io.jooby.exception.StatusCodeException;\n\nimport java.time.Duration;\nimport java.util.concurrent.CompletionException;", "line_changes": {"deleted": [{"line_no": 4, "char_start": 73, "char_end": 120, "line": " *  Copyright (c) lucko (Luck) <luck@lucko.me>\n"}], "added": [{"line_no": 5, "char_start": 73, "char_end": 114, "line": " *  Copyright (c) lucko (Luck) <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 73, "char_end": 120, "chars": " *  Copyright (c) lucko (Luck) <luck@lucko.me>\n"}], "added": [{"char_start": 73, "char_end": 114, "chars": " *  Copyright (c) lucko (Luck) <<EMAIL>>\n"}]}}
{"func_name": 2826, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//    password = \"\";\n\n    URL url = new URL(serverUrl);\n    host = url.getHost();\n    version = \"2\";\n    cloudEndpointInfo = new CloudEndpointInfo(serverUrl, appId, userName, password);\n  }\n  \n  public void testUpdateTaskAdd_ExpectPass() {\n    String csvFile = absolutePathOfTestFiles + \"plot\" + File.separator + \"definition.csv\";\n    String dataPath = absolutePathOfTestFiles + \"plot\" + File.separator + \"plot-add.csv\";\n    String testTableId = \"test1\";\n    String tableSchemaETag = null;\n    SyncClient sc = null;\n    int retCode;\n\n    try {\n      sc = new SyncClient();\n      \n      String cloud_endpoint_url = cloudEndpointInfo.getHostUrl();\n      cloud_endpoint_url = cloud_endpoint_url.substring(0, cloud_endpoint_url.length()-1);\n      \n      URL url = new URL(cloud_endpoint_url);\n      String host = url.getHost();\n      \n      sc.init(host, cloudEndpointInfo.getUserName(), cloudEndpointInfo.getPassword());\n\n      LoginTask lTask = new LoginTask(cloudEndpointInfo, false);\n      retCode = lTask.blockingExecute();\n      assertEquals(retCode, SuitcaseSwingWorker.okCode);\n\n      JSONObject result = sc.createTableWithCSV(cloudEndpointInfo.getServerUrl(), cloudEndpointInfo.getAppId(),\n          testTableId, null, csvFile);\n      System.out.println(\"testUpdateTaskAdd: result is \" + result);\n\n      if (result.containsKey(SyncClient.TABLE_ID_JSON)) {\n        String tableId = result.getString(SyncClient.TABLE_ID_JSON);\n        assertEquals(tableId, testTableId);\n        tableSchemaETag = result.getString(SyncClient.SCHEMA_ETAG_JSON);\n      }\n\n      // Get the table definition\n      JSONObject tableDef = sc.getTableDefinition(cloudEndpointInfo.getServerUrl(), cloudEndpointInfo.getAppId(),\n          testTableId, tableSchemaETag);\n\n      // Make sure it is the same as the csv definition\n      assertTrue(TestUtilities.checkThatTableDefAndCSVDefAreEqual(csvFile, tableDef));\n\n      UpdateTask updateTask = new UpdateTask(cloudEndpointInfo, dataPath, version, testTableId, null, false);\n      retCode = updateTask.blockingExecute();", "func_src_after": "//    password = \"\";\n\n    URL url = new URL(serverUrl);\n    host = url.getHost();\n    version = \"2\";\n    cloudEndpointInfo = new CloudEndpointInfo(serverUrl, appId, userName, password);\n  }\n  \n  public void testUpdateTaskAdd_ExpectPass() {\n    String csvFile = absolutePathOfTestFiles + \"plot\" + File.separator + \"definition.csv\";\n    String dataPath = absolutePathOfTestFiles + \"plot\" + File.separator + \"plot-add.csv\";\n    String testTableId = \"test1\";\n    String tableSchemaETag = null;\n    SyncClient sc = null;\n    int retCode;\n\n    try {\n      sc = new SyncClient();\n      \n      String cloud_endpoint_url = cloudEndpointInfo.getHostUrl();\n      cloud_endpoint_url = cloud_endpoint_url.substring(0, cloud_endpoint_url.length()-1);\n      \n      URL url = new URL(cloud_endpoint_url);\n      String host = url.getHost();\n      \n      sc.init(host, cloudEndpointInfo.getUserName(), cloudEndpointInfo.getPassword());\n\n      LoginTask lTask = new LoginTask(cloudEndpointInfo, false);\n      retCode = lTask.blockingExecute();\n      assertEquals(retCode, SuitcaseSwingWorker.okCode);\n\n      JSONObject result = sc.createTableWithCSV(cloudEndpointInfo.getServerUrl(), cloudEndpointInfo.getAppId(),\n          testTableId, null, csvFile);\n      System.out.println(\"testUpdateTaskAdd: result is \" + result);\n\n      if (result.containsKey(SyncClient.TABLE_ID_JSON)) {\n        String tableId = result.getString(SyncClient.TABLE_ID_JSON);\n        assertEquals(tableId, testTableId);\n        tableSchemaETag = result.getString(SyncClient.SCHEMA_ETAG_JSON);\n      }\n\n      // Get the table definition\n      JSONObject tableDef = sc.getTableDefinition(cloudEndpointInfo.getServerUrl(), cloudEndpointInfo.getAppId(),\n          testTableId, tableSchemaETag);\n\n      // Make sure it is the same as the csv definition\n      assertTrue(TestUtilities.checkThatTableDefAndCSVDefAreEqual(csvFile, tableDef));\n\n      UpdateTask updateTask = new UpdateTask(cloudEndpointInfo, dataPath, version, testTableId, null, false);\n      retCode = updateTask.blockingExecute();", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2875, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package org.firstinspires.ftc.teamcode.Vision;\n\nimport com.qualcomm.robotcore.hardware.HardwareMap;\n\nimport org.firstinspires.ftc.robotcore.external.ClassFactory;\nimport org.firstinspires.ftc.robotcore.external.Telemetry;\nimport org.firstinspires.ftc.robotcore.external.navigation.RelicRecoveryVuMark;\nimport org.firstinspires.ftc.robotcore.external.navigation.VuforiaLocalizer;\nimport org.firstinspires.ftc.robotcore.external.navigation.VuforiaTrackable;\nimport org.firstinspires.ftc.robotcore.external.navigation.VuforiaTrackables;\n\n/**\n * Created by Mikko on 11/21/17\n */\n\npublic class VuMarkRecognition\n{\n    VuforiaLocalizer vuforia;\n    VuforiaTrackable relicTemplate;\n    VuforiaTrackables relicTrackables;\n\n    public VuMarkRecognition(HardwareMap hardwareMap, Telemetry telemetry){\n    init(hardwareMap, telemetry);\n    }\n    public void init(HardwareMap hardwareMap, Telemetry telemetry)\n    {\n        telemetry.addData(\"starting vuforia\",\"\");\n        telemetry.update();\n\n        int cameraMonitorViewId = hardwareMap.appContext.getResources().getIdentifier(\"cameraMonitorViewId\", \"id\", hardwareMap.appContext.getPackageName());\n        VuforiaLocalizer.Parameters parameters = new VuforiaLocalizer.Parameters(cameraMonitorViewId);\n        parameters.vuforiaLicenseKey = \"AWFEfJ//////AAAAGRSAEvItIE6VmtdgqLncdq5pwXP81G5X4IT2ssIXnwbRECRsNIbxeFqkExyfeZM/uFLLMbwShZBYACYOOgl/aIz8PqlIV8FSGppU1XkPuC9WjGLiclIsgO+AXZ4OEKJyc27eiNvXTNI8MTBxyR3vk/cB9XDqtC7ksqhB8TgFD9QuKS3Xo9gOH8edNZ+pD6T0Xjfbh3Vl8REKuTcCQvIDG3ImRJVi3b6fsXxmciBv+pw91FqMjZeZbHFEKrDLlUHisvgQ1NkaoiOlyWw5XCXFmv0gtO0t+whwTOMz3dkOfUPafS+e2oDdd5SQJgk6R7SgzTmc/8Ld/TqiZtXSsIR39qUFdklNGhmWqd+mA5ZNCLUq\";\n        parameters.cameraDirection = VuforiaLocalizer.CameraDirection.FRONT; //Use selfie camera\n        vuforia = ClassFactory.createVuforiaLocalizer(parameters);\n        relicTrackables = this.vuforia.loadTrackablesFromAsset(\"RelicVuMark\");\n        relicTemplate = relicTrackables.get(0);\n        relicTemplate.setName(\"relicVuMarkTemplate\"); // can help in debugging; otherwise not necessary\n        relicTrackables.activate();\n\n        telemetry.addData(\"finished vuforia\",\"\");\n        telemetry.update();\n    }\n\n    //0 - Unknown\n    //1 - Left\n    //2 - Center\n    //3 - Right\n    public int getVuMark()\n    {\n        RelicRecoveryVuMark vuMark = RelicRecoveryVuMark.from(relicTemplate);", "func_src_after": "package org.firstinspires.ftc.teamcode.Vision;\n\nimport com.qualcomm.robotcore.hardware.HardwareMap;\n\nimport org.firstinspires.ftc.robotcore.external.ClassFactory;\nimport org.firstinspires.ftc.robotcore.external.Telemetry;\nimport org.firstinspires.ftc.robotcore.external.navigation.RelicRecoveryVuMark;\nimport org.firstinspires.ftc.robotcore.external.navigation.VuforiaLocalizer;\nimport org.firstinspires.ftc.robotcore.external.navigation.VuforiaTrackable;\nimport org.firstinspires.ftc.robotcore.external.navigation.VuforiaTrackables;\n\n/**\n * Created by Mikko on 11/21/17\n */\n\npublic class VuMarkRecognition\n{\n    VuforiaLocalizer vuforia;\n    VuforiaTrackable relicTemplate;\n    VuforiaTrackables relicTrackables;\n\n    public VuMarkRecognition(HardwareMap hardwareMap, Telemetry telemetry){\n    init(hardwareMap, telemetry);\n    }\n    public void init(HardwareMap hardwareMap, Telemetry telemetry)\n    {\n        telemetry.addData(\"starting vuforia\",\"\");\n        telemetry.update();\n\n        int cameraMonitorViewId = hardwareMap.appContext.getResources().getIdentifier(\"cameraMonitorViewId\", \"id\", hardwareMap.appContext.getPackageName());\n        VuforiaLocalizer.Parameters parameters = new VuforiaLocalizer.Parameters(cameraMonitorViewId);\n        parameters.vuforiaLicenseKey = \"AWFEfJ//////AAAAGRSAEvItIE6VmtdgqLncdq5pwXP81G5X4IT2ssIXnwbRECRsNIbxeFqkExyfeZM/uFLLMbwShZBYACYOOgl/aIz8PqlIV8FSGppU1XkPuC9WjGLiclIsgO+AXZ4OEKJyc27eiNvXTNI8MTBxyR3vk/cB9XDqtC7ksqhB8TgFD9QuKS3Xo9gOH8edNZ+pD6T0Xjfbh3Vl8REKuTcCQvIDG3ImRJVi3b6fsXxmciBv+pw91FqMjZeZbHFEKrDLlUHisvgQ1NkaoiOlyWw5XCXFmv0gtO0t+whwTOMz3dkOfUPafS+e2oDdd5SQJgk6R7SgzTmc/8Ld/TqiZtXSsIR39qUFdklNGhmWqd+mA5ZNCLUq\";\n        parameters.cameraDirection = VuforiaLocalizer.CameraDirection.FRONT; //Use selfie camera\n        vuforia = ClassFactory.createVuforiaLocalizer(parameters);\n        relicTrackables = this.vuforia.loadTrackablesFromAsset(\"RelicVuMark\");\n        relicTemplate = relicTrackables.get(0);\n        relicTemplate.setName(\"relicVuMarkTemplate\"); // can help in debugging; otherwise not necessary\n        relicTrackables.activate();\n\n        telemetry.addData(\"finished vuforia\",\"\");\n        telemetry.update();\n    }\n\n    //0 - Unknown\n    //1 - Left\n    //2 - Center\n    //3 - Right\n    public int getVuMark()\n    {\n        RelicRecoveryVuMark vuMark = RelicRecoveryVuMark.from(relicTemplate);", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2881, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\r\n * Copyright 2016 notrevequadrosc@gmail.com.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage controle;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.util.UUID;\r\nimport javax.faces.context.FacesContext;\r\nimport modelo.Evento;\r\nimport modelo.Inscricao;\r\nimport modelo.Perfil;\r\nimport modelo.Usuario;\r\nimport modelo.utils.EmailUtil;\r\nimport modelo.utils.MessagesUtil;\r\n\r\n/**\r\n * Classe que realiza operações relativas ao controle de usuário.\r\n * @author notrevequadrosc@gmail.com\r\n */\r\npublic class Operacao implements Serializable{\r\n \r\n    private Operacao operacoes = null;\r\n    \r\n    /**\r\n     * Método que realiza o login do perfil através dos dados preenchidos pelo\r\n     * usuário de login e senha.\r\n     * @param crud Objeto que realiza as operações no banco de dados.\r\n     * @return objeto resultante da consulta.\r\n     */\r\n    public String doLogin(Crud crud) {\r\n        \r\n        String query = \"FROM Perfil WHERE login = :login and senha = :senha\";\r\n        Perfil objeto = (Perfil)crud.consultaUnica(query\r\n                    ,new String[]{\"login\",\"senha\"}\r\n                    ,new String[]{((Perfil)crud.getInstance()).getLogin()\r\n                                 ,((Perfil)crud.getInstance()).getSenha()}); \r\n\r", "func_src_after": "/*\r\n * Copyright 2016 <EMAIL>.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage controle;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.util.UUID;\r\nimport javax.faces.context.FacesContext;\r\nimport modelo.Evento;\r\nimport modelo.Inscricao;\r\nimport modelo.Perfil;\r\nimport modelo.Usuario;\r\nimport modelo.utils.EmailUtil;\r\nimport modelo.utils.MessagesUtil;\r\n\r\n/**\r\n * Classe que realiza operações relativas ao controle de usuário.\r\n * @author <EMAIL>\r\n */\r\npublic class Operacao implements Serializable{\r\n \r\n    private Operacao operacoes = null;\r\n    \r\n    /**\r\n     * Método que realiza o login do perfil através dos dados preenchidos pelo\r\n     * usuário de login e senha.\r\n     * @param crud Objeto que realiza as operações no banco de dados.\r\n     * @return objeto resultante da consulta.\r\n     */\r\n    public String doLogin(Crud crud) {\r\n        \r\n        String query = \"FROM Perfil WHERE login = :login and senha = :senha\";\r\n        Perfil objeto = (Perfil)crud.consultaUnica(query\r\n                    ,new String[]{\"login\",\"senha\"}\r\n                    ,new String[]{((Perfil)crud.getInstance()).getLogin()\r\n                                 ,((Perfil)crud.getInstance()).getSenha()}); \r\n\r", "line_changes": {"deleted": [{"line_no": 2, "char_start": 4, "char_end": 50, "line": " * Copyright 2016 notrevequadrosc@gmail.com.\r\n"}, {"line_no": 32, "char_start": 986, "char_end": 1024, "line": " * @author notrevequadrosc@gmail.com\r\n"}], "added": [{"line_no": 3, "char_start": 4, "char_end": 32, "line": " * Copyright 2016 <EMAIL>.\r\n"}, {"line_no": 33, "char_start": 986, "char_end": 1006, "line": " * @author <EMAIL>\r\n"}]}, "char_changes": {"deleted": [{"char_start": 4, "char_end": 50, "chars": " * Copyright 2016 notrevequadrosc@gmail.com.\r\n"}, {"char_start": 986, "char_end": 1024, "chars": " * @author notrevequadrosc@gmail.com\r\n"}], "added": [{"char_start": 4, "char_end": 32, "chars": " * Copyright 2016 <EMAIL>.\r\n"}, {"char_start": 986, "char_end": 1006, "chars": " * @author <EMAIL>\r\n"}]}}
{"func_name": 2903, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n        User user = this.authenticationClient.loginByEmail(new LoginByEmailInput(email, password)).execute();\n        Assert.assertEquals(user.getEmail(), email);\n    }\n\n    @Test\n    public void loginByWechat() throws IOException, GraphQLException {\n        String code = \"021I11Ga1hP9Uz0GJbGa1SVgxo4I11G7\";\n        User user = this.authenticationClient.loginByWechat(code).execute();\n        System.out.println(user);\n        Assert.assertNotNull(user);\n    }\n\n    @Test\n    public void loginByUsername() throws IOException, GraphQLException, ExecutionException, InterruptedException {\n        String username = randomString(6);\n        String password = \"123456\";\n        User user =\n                this.authenticationClient.registerByUsername(new RegisterByUsernameInput(username, password)).execute();\n        Assert.assertEquals(user.getUsername(), username);\n\n        User result = this.authenticationClient.loginByUsername(new LoginByUsernameInput(username, password)).execute();\n        Assert.assertNotNull(result);\n    }\n\n    @Test\n    public void loginByPhoneCode() throws IOException, GraphQLException {\n        // 虚伪的 单元测试 自己手动填写吧\n        String code = \"xxxx\";\n        User user = this.authenticationClient.loginByPhoneCode(new LoginByPhoneCodeInput(PHONE, code)).execute();\n        Assert.assertEquals(user.getPhone(), PHONE);\n    }\n\n    @Test\n    public void loginByPhonePassword() throws IOException, GraphQLException {\n        String password = \"15566416161\";\n        User user =\n                this.authenticationClient.loginByPhonePassword(new LoginByPhonePasswordInput(PHONE, password)).execute();\n        Assert.assertEquals(user.getPhone(), PHONE);\n    }\n\n    @Test\n    public void checkLoginStatus() throws IOException, GraphQLException {\n        String username = randomString(6);\n        String password = \"123456\";\n        User user = this.register(username, password);\n        Assert.assertEquals(user.getUsername(), username);\n\n        this.authenticationClient.loginByUsername(new LoginByUsernameInput(username, password)).execute();\n", "func_src_after": "\n        User user = this.authenticationClient.loginByEmail(new LoginByEmailInput(email, password)).execute();\n        Assert.assertEquals(user.getEmail(), email);\n    }\n\n    @Test\n    public void loginByWechat() throws IOException, GraphQLException {\n        String code = \"021I11Ga1hP9Uz0GJbGa1SVgxo4I11G7\";\n        User user = this.authenticationClient.loginByWechat(code).execute();\n        System.out.println(user);\n        Assert.assertNotNull(user);\n    }\n\n    @Test\n    public void loginByUsername() throws IOException, GraphQLException, ExecutionException, InterruptedException {\n        String username = randomString(6);\n        String password = \"123456\";\n        User user =\n                this.authenticationClient.registerByUsername(new RegisterByUsernameInput(username, password)).execute();\n        Assert.assertEquals(user.getUsername(), username);\n\n        User result = this.authenticationClient.loginByUsername(new LoginByUsernameInput(username, password)).execute();\n        Assert.assertNotNull(result);\n    }\n\n    @Test\n    public void loginByPhoneCode() throws IOException, GraphQLException {\n        // 虚伪的 单元测试 自己手动填写吧\n        String code = \"xxxx\";\n        User user = this.authenticationClient.loginByPhoneCode(new LoginByPhoneCodeInput(PHONE, code)).execute();\n        Assert.assertEquals(user.getPhone(), PHONE);\n    }\n\n    @Test\n    public void loginByPhonePassword() throws IOException, GraphQLException {\n        String password = \"15566416161\";\n        User user =\n                this.authenticationClient.loginByPhonePassword(new LoginByPhonePasswordInput(PHONE, password)).execute();\n        Assert.assertEquals(user.getPhone(), PHONE);\n    }\n\n    @Test\n    public void checkLoginStatus() throws IOException, GraphQLException {\n        String username = randomString(6);\n        String password = \"123456\";\n        User user = this.register(username, password);\n        Assert.assertEquals(user.getUsername(), username);\n\n        this.authenticationClient.loginByUsername(new LoginByUsernameInput(username, password)).execute();\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2933, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        public static final int abc_item_background_holo_light=0x7f020027;\n        public static final int abc_list_divider_mtrl_alpha=0x7f020028;\n        public static final int abc_list_focused_holo=0x7f020029;\n        public static final int abc_list_longpressed_holo=0x7f02002a;\n        public static final int abc_list_pressed_holo_dark=0x7f02002b;\n        public static final int abc_list_pressed_holo_light=0x7f02002c;\n        public static final int abc_list_selector_background_transition_holo_dark=0x7f02002d;\n        public static final int abc_list_selector_background_transition_holo_light=0x7f02002e;\n        public static final int abc_list_selector_disabled_holo_dark=0x7f02002f;\n        public static final int abc_list_selector_disabled_holo_light=0x7f020030;\n        public static final int abc_list_selector_holo_dark=0x7f020031;\n        public static final int abc_list_selector_holo_light=0x7f020032;\n        public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f020033;\n        public static final int abc_popup_background_mtrl_mult=0x7f020034;\n        public static final int abc_ratingbar_indicator_material=0x7f020035;\n        public static final int abc_ratingbar_material=0x7f020036;\n        public static final int abc_ratingbar_small_material=0x7f020037;\n        public static final int abc_scrubber_control_off_mtrl_alpha=0x7f020038;\n        public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f020039;\n        public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f02003a;\n        public static final int abc_scrubber_primary_mtrl_alpha=0x7f02003b;\n        public static final int abc_scrubber_track_mtrl_alpha=0x7f02003c;\n        public static final int abc_seekbar_thumb_material=0x7f02003d;\n        public static final int abc_seekbar_tick_mark_material=0x7f02003e;\n        public static final int abc_seekbar_track_material=0x7f02003f;\n        public static final int abc_spinner_mtrl_am_alpha=0x7f020040;\n        public static final int abc_spinner_textfield_background_material=0x7f020041;\n        public static final int abc_switch_thumb_material=0x7f020042;\n        public static final int abc_switch_track_mtrl_alpha=0x7f020043;\n        public static final int abc_tab_indicator_material=0x7f020044;\n        public static final int abc_tab_indicator_mtrl_alpha=0x7f020045;\n        public static final int abc_text_cursor_material=0x7f020046;\n        public static final int abc_text_select_handle_left_mtrl_dark=0x7f020047;\n        public static final int abc_text_select_handle_left_mtrl_light=0x7f020048;\n        public static final int abc_text_select_handle_middle_mtrl_dark=0x7f020049;\n        public static final int abc_text_select_handle_middle_mtrl_light=0x7f02004a;\n        public static final int abc_text_select_handle_right_mtrl_dark=0x7f02004b;\n        public static final int abc_text_select_handle_right_mtrl_light=0x7f02004c;\n        public static final int abc_textfield_activated_mtrl_alpha=0x7f02004d;\n        public static final int abc_textfield_default_mtrl_alpha=0x7f02004e;\n        public static final int abc_textfield_search_activated_mtrl_alpha=0x7f02004f;\n        public static final int abc_textfield_search_default_mtrl_alpha=0x7f020050;\n        public static final int abc_textfield_search_material=0x7f020051;\n        public static final int abc_vector_test=0x7f020052;\n        public static final int advround=0x7f020053;\n        public static final int avd_hide_password=0x7f020054;\n        public static final int avd_hide_password_1=0x7f02008b;\n        public static final int avd_hide_password_2=0x7f02008c;\n        public static final int avd_hide_password_3=0x7f02008d;\n        public static final int avd_show_password=0x7f020055;", "func_src_after": "        public static final int abc_item_background_holo_light=0x7f020027;\n        public static final int abc_list_divider_mtrl_alpha=0x7f020028;\n        public static final int abc_list_focused_holo=0x7f020029;\n        public static final int abc_list_longpressed_holo=0x7f02002a;\n        public static final int abc_list_pressed_holo_dark=0x7f02002b;\n        public static final int abc_list_pressed_holo_light=0x7f02002c;\n        public static final int abc_list_selector_background_transition_holo_dark=0x7f02002d;\n        public static final int abc_list_selector_background_transition_holo_light=0x7f02002e;\n        public static final int abc_list_selector_disabled_holo_dark=0x7f02002f;\n        public static final int abc_list_selector_disabled_holo_light=0x7f020030;\n        public static final int abc_list_selector_holo_dark=0x7f020031;\n        public static final int abc_list_selector_holo_light=0x7f020032;\n        public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f020033;\n        public static final int abc_popup_background_mtrl_mult=0x7f020034;\n        public static final int abc_ratingbar_indicator_material=0x7f020035;\n        public static final int abc_ratingbar_material=0x7f020036;\n        public static final int abc_ratingbar_small_material=0x7f020037;\n        public static final int abc_scrubber_control_off_mtrl_alpha=0x7f020038;\n        public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f020039;\n        public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f02003a;\n        public static final int abc_scrubber_primary_mtrl_alpha=0x7f02003b;\n        public static final int abc_scrubber_track_mtrl_alpha=0x7f02003c;\n        public static final int abc_seekbar_thumb_material=0x7f02003d;\n        public static final int abc_seekbar_tick_mark_material=0x7f02003e;\n        public static final int abc_seekbar_track_material=0x7f02003f;\n        public static final int abc_spinner_mtrl_am_alpha=0x7f020040;\n        public static final int abc_spinner_textfield_background_material=0x7f020041;\n        public static final int abc_switch_thumb_material=0x7f020042;\n        public static final int abc_switch_track_mtrl_alpha=0x7f020043;\n        public static final int abc_tab_indicator_material=0x7f020044;\n        public static final int abc_tab_indicator_mtrl_alpha=0x7f020045;\n        public static final int abc_text_cursor_material=0x7f020046;\n        public static final int abc_text_select_handle_left_mtrl_dark=0x7f020047;\n        public static final int abc_text_select_handle_left_mtrl_light=0x7f020048;\n        public static final int abc_text_select_handle_middle_mtrl_dark=0x7f020049;\n        public static final int abc_text_select_handle_middle_mtrl_light=0x7f02004a;\n        public static final int abc_text_select_handle_right_mtrl_dark=0x7f02004b;\n        public static final int abc_text_select_handle_right_mtrl_light=0x7f02004c;\n        public static final int abc_textfield_activated_mtrl_alpha=0x7f02004d;\n        public static final int abc_textfield_default_mtrl_alpha=0x7f02004e;\n        public static final int abc_textfield_search_activated_mtrl_alpha=0x7f02004f;\n        public static final int abc_textfield_search_default_mtrl_alpha=0x7f020050;\n        public static final int abc_textfield_search_material=0x7f020051;\n        public static final int abc_vector_test=0x7f020052;\n        public static final int advround=0x7f020053;\n        public static final int avd_hide_password=0x7f020054;\n        public static final int avd_hide_password_1=0x7f02008b;\n        public static final int avd_hide_password_2=0x7f02008c;\n        public static final int avd_hide_password_3=0x7f02008d;\n        public static final int avd_show_password=0x7f020055;", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 2945, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import java.time.temporal.ChronoUnit;\nimport java.util.Objects;\n\nimport static com.upupor.framework.CcConstant.CvCache.createContentIntervalkey;\nimport static com.upupor.framework.ErrorCode.CONTENT_NOT_EXISTS;\nimport static com.upupor.framework.ErrorCode.MEMBER_CONFIG_LESS;\n\n\n/**\n * @author Yang Runkang (cruise)\n * @date 2022年01月09日 11:20\n * @email: yangrunkang53@gmail.com\n */\n@Slf4j\n@Component\npublic class Create extends AbstractEditor<AddContentDetailReq> {\n    @Resource\n    private MemberConfigMapper memberConfigMapper;\n\n    private Long limitedInterval;\n\n    @Override\n    protected EditorType editorType() {\n        return EditorType.CREATE;\n    }\n\n    @Override\n    protected void check() {\n        Member member = getMember();\n        limitedInterval = checkIntervalLimit(member.getUserId());\n    }\n\n    private Content createNewContent() {\n        AddContentDetailReq addContentDetailReq = getReq();\n        Member member = getMember();\n        Content content = Content.create();\n        generateContentId(content);\n        content.setUserId(member.getUserId());\n        content.setTitle(addContentDetailReq.getTitle());\n        content.setContentType(addContentDetailReq.getContentType());\n        content.setShortContent(addContentDetailReq.getShortContent());\n        content.setTagIds(CcUtils.removeLastComma(addContentDetailReq.getTagIds()));\n        content.setStatementId(member.getStatementId());\n        // 初始化文章拓展表\n        content.setContentExtend(ContentExtend.create(content.getContentId(), addContentDetailReq.getContent(), addContentDetailReq.getMdContent()));\n        // 初始化文章数据\n        contentService.initContendData(content.getContentId());\n        // 原创处理\n        originProcessing(content);\n        // 具体操作 发布 或者 草稿", "func_src_after": "import java.time.temporal.ChronoUnit;\nimport java.util.Objects;\n\nimport static com.upupor.framework.CcConstant.CvCache.createContentIntervalkey;\nimport static com.upupor.framework.ErrorCode.CONTENT_NOT_EXISTS;\nimport static com.upupor.framework.ErrorCode.MEMBER_CONFIG_LESS;\n\n\n/**\n * @author Yang Runkang (cruise)\n * @date 2022年01月09日 11:20\n * @email: <EMAIL>\n */\n@Slf4j\n@Component\npublic class Create extends AbstractEditor<AddContentDetailReq> {\n    @Resource\n    private MemberConfigMapper memberConfigMapper;\n\n    private Long limitedInterval;\n\n    @Override\n    protected EditorType editorType() {\n        return EditorType.CREATE;\n    }\n\n    @Override\n    protected void check() {\n        Member member = getMember();\n        limitedInterval = checkIntervalLimit(member.getUserId());\n    }\n\n    private Content createNewContent() {\n        AddContentDetailReq addContentDetailReq = getReq();\n        Member member = getMember();\n        Content content = Content.create();\n        generateContentId(content);\n        content.setUserId(member.getUserId());\n        content.setTitle(addContentDetailReq.getTitle());\n        content.setContentType(addContentDetailReq.getContentType());\n        content.setShortContent(addContentDetailReq.getShortContent());\n        content.setTagIds(CcUtils.removeLastComma(addContentDetailReq.getTagIds()));\n        content.setStatementId(member.getStatementId());\n        // 初始化文章拓展表\n        content.setContentExtend(ContentExtend.create(content.getContentId(), addContentDetailReq.getContent(), addContentDetailReq.getMdContent()));\n        // 初始化文章数据\n        contentService.initContendData(content.getContentId());\n        // 原创处理\n        originProcessing(content);\n        // 具体操作 发布 或者 草稿", "line_changes": {"deleted": [{"line_no": 12, "char_start": 341, "char_end": 376, "line": " * @email: yangrunkang53@gmail.com\n"}], "added": [{"line_no": 13, "char_start": 341, "char_end": 360, "line": " * @email: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 341, "char_end": 376, "chars": " * @email: yangrunkang53@gmail.com\n"}], "added": [{"char_start": 341, "char_end": 360, "chars": " * @email: <EMAIL>\n"}]}}
{"func_name": 2963, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package com.xiongyingqi.util;\n\nimport java.security.*;\n\n/**\n * A Java Implementation of the MD5Crypt function Modified from the GANYMEDE\n * network directory management system released under the GNU General Public\n * License by the University of Texas at Austin\n * http://tools.arlut.utexas.edu/gash2/ Original version from :Jonathan Abbey,\n * jonabbey@arlut.utexas.edu Modified by: Vladimir Silva,\n * vladimir_silva@yahoo.com Modification history: 9/2005 - Removed dependencies\n * on a MD5 private implementation - Added built-in java.security.MessageDigest\n * (MD5) support - Code cleanup\n */\n\npublic class MD5Crypt {\n\t// Character set allowed for the salt string\n\tstatic private final String SALTCHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n\n\t// Character set of the encrypted password: A-Za-z0-9./\n\tstatic private final String itoa64 = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n\t/**\n\t * Function to return a string from the set: A-Za-z0-9./\n\t * \n\t * @return A string of size (size) from the set A-Za-z0-9./\n\t * @param size\n\t *            Length of the string\n\t * @param v\n\t *            value to be converted\n\t */\n\tstatic private final String to64(long v, int size) {\n\t\tStringBuffer result = new StringBuffer();\n\n\t\twhile (--size >= 0) {\n\t\t\tresult.append(itoa64.charAt((int) (v & 0x3f)));\n\t\t\tv >>>= 6;\n\t\t}\n\n\t\treturn result.toString();\n\t}\n\n\tstatic private final void clearbits(byte bits[]) {\n\t\tfor (int i = 0; i < bits.length; i++) {\n\t\t\tbits[i] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * convert an encoded unsigned byte value into a int with the unsigned", "func_src_after": "package com.xiongyingqi.util;\n\nimport java.security.*;\n\n/**\n * A Java Implementation of the MD5Crypt function Modified from the GANYMEDE\n * network directory management system released under the GNU General Public\n * License by the University of Texas at Austin\n * http://tools.arlut.utexas.edu/gash2/ Original version from :Jonathan Abbey,\n * <EMAIL> Modified by: Vladimir Silva,\n * <EMAIL> Modification history: 9/2005 - Removed dependencies\n * on a MD5 private implementation - Added built-in java.security.MessageDigest\n * (MD5) support - Code cleanup\n */\n\npublic class MD5Crypt {\n\t// Character set allowed for the salt string\n\tstatic private final String SALTCHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n\n\t// Character set of the encrypted password: A-Za-z0-9./\n\tstatic private final String itoa64 = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n\t/**\n\t * Function to return a string from the set: A-Za-z0-9./\n\t * \n\t * @return A string of size (size) from the set A-Za-z0-9./\n\t * @param size\n\t *            Length of the string\n\t * @param v\n\t *            value to be converted\n\t */\n\tstatic private final String to64(long v, int size) {\n\t\tStringBuffer result = new StringBuffer();\n\n\t\twhile (--size >= 0) {\n\t\t\tresult.append(itoa64.charAt((int) (v & 0x3f)));\n\t\t\tv >>>= 6;\n\t\t}\n\n\t\treturn result.toString();\n\t}\n\n\tstatic private final void clearbits(byte bits[]) {\n\t\tfor (int i = 0; i < bits.length; i++) {\n\t\t\tbits[i] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * convert an encoded unsigned byte value into a int with the unsigned", "line_changes": {"deleted": [{"line_no": 10, "char_start": 341, "char_end": 399, "line": " * jonabbey@arlut.utexas.edu Modified by: Vladimir Silva,\n"}, {"line_no": 12, "char_start": 381, "char_end": 461, "line": " * vladimir_silva@yahoo.com Modification history: 9/2005 - Removed dependencies\n"}], "added": [{"line_no": 11, "char_start": 341, "char_end": 381, "line": " * <EMAIL> Modified by: Vladimir Silva,\n"}, {"line_no": 13, "char_start": 381, "char_end": 444, "line": " * <EMAIL> Modification history: 9/2005 - Removed dependencies\n"}]}, "char_changes": {"deleted": [{"char_start": 341, "char_end": 399, "chars": " * jonabbey@arlut.utexas.edu Modified by: Vladimir Silva,\n"}, {"char_start": 381, "char_end": 461, "chars": " * vladimir_silva@yahoo.com Modification history: 9/2005 - Removed dependencies\n"}], "added": [{"char_start": 341, "char_end": 381, "chars": " * <EMAIL> Modified by: Vladimir Silva,\n"}, {"char_start": 381, "char_end": 444, "chars": " * <EMAIL> Modification history: 9/2005 - Removed dependencies\n"}]}}
{"func_name": 2981, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package com.smart.test;\n\nimport org.testng.annotations.BeforeClass;\nimport org.testng.annotations.Test;\n\nimport static org.testng.Assert.*;\n\npublic class Main5Test {\n\n\n    @Test\n    public void testCovertToBinary() {\n        Main5.covertToBinary(255);\n    }\n\n    @Test\n    public void testGetIpBinary() {\n        Main5.getIpBinary(\"2.0.0.1\");\n    }\n\n//    @Test\n//    public void testAnd() {\n//    }\n//\n//    @Test\n//    public void testCheckIP() {\n//    }\n//\n//    @Test\n//    public void testCheckMaskCode() {\n//    }\n//\n//    @Test\n//    public void testCheckMask() {\n//    }\n//\n    @Test\n    public void testCheckNetSegment() {\n        System.out.println(Main5.checkNetSegment(\"255.0.0.0\" ,\"193.194.202.15\" ,\"232.43.7.59\"));\n    }\n}", "func_src_after": "package com.smart.test;\n\nimport org.testng.annotations.BeforeClass;\nimport org.testng.annotations.Test;\n\nimport static org.testng.Assert.*;\n\npublic class Main5Test {\n\n\n    @Test\n    public void testCovertToBinary() {\n        Main5.covertToBinary(255);\n    }\n\n    @Test\n    public void testGetIpBinary() {\n        Main5.getIpBinary(\"<IP-Address>\");\n    }\n\n//    @Test\n//    public void testAnd() {\n//    }\n//\n//    @Test\n//    public void testCheckIP() {\n//    }\n//\n//    @Test\n//    public void testCheckMaskCode() {\n//    }\n//\n//    @Test\n//    public void testCheckMask() {\n//    }\n//\n    @Test\n    public void testCheckNetSegment() {\n        System.out.println(Main5.checkNetSegment(\"<IP-Address>\" ,\"<IP-Address>\" ,\"<IP-Address>\"));\n    }\n}", "line_changes": {"deleted": [{"line_no": 18, "char_start": 305, "char_end": 343, "line": "        Main5.getIpBinary(\"2.0.0.1\");\n"}, {"line_no": 40, "char_start": 637, "char_end": 734, "line": "        System.out.println(Main5.checkNetSegment(\"255.0.0.0\" ,\"193.194.202.15\" ,\"232.43.7.59\"));\n"}], "added": [{"line_no": 19, "char_start": 305, "char_end": 348, "line": "        Main5.getIpBinary(\"<IP-Address>\");\n"}, {"line_no": 41, "char_start": 637, "char_end": 736, "line": "        System.out.println(Main5.checkNetSegment(\"<IP-Address>\" ,\"<IP-Address>\" ,\"<IP-Address>\"));\n"}]}, "char_changes": {"deleted": [{"char_start": 305, "char_end": 343, "chars": "        Main5.getIpBinary(\"2.0.0.1\");\n"}, {"char_start": 637, "char_end": 734, "chars": "        System.out.println(Main5.checkNetSegment(\"255.0.0.0\" ,\"193.194.202.15\" ,\"232.43.7.59\"));\n"}], "added": [{"char_start": 305, "char_end": 348, "chars": "        Main5.getIpBinary(\"<IP-Address>\");\n"}, {"char_start": 637, "char_end": 736, "chars": "        System.out.println(Main5.checkNetSegment(\"<IP-Address>\" ,\"<IP-Address>\" ,\"<IP-Address>\"));\n"}]}}
{"func_name": 2982, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package org.ovirt.engine.core.vdsbroker;\n\nimport static org.hamcrest.MatcherAssert.assertThat;\nimport static org.hamcrest.Matchers.is;\n\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.util.stream.Stream;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.ovirt.engine.core.common.config.ConfigValues;\nimport org.ovirt.engine.core.common.utils.Pair;\nimport org.ovirt.engine.core.utils.MockConfigDescriptor;\nimport org.ovirt.engine.core.utils.MockConfigExtension;\n\n@ExtendWith(MockConfigExtension.class)\npublic class HttpUtilsTest {\n\n    private static final String HOSTNAME = \"hostname\";\n    private static final int PORT = 1234;\n    private static final String PATH = \"path\";\n    private static final String IPV6_ADDRESS = \"1:2::3:4\";\n    private static final String IPV4_ADDRESS = \"1.2.3.4\";\n\n    public static Stream<MockConfigDescriptor<?>> mockConfiguration() {\n        return Stream.of(MockConfigDescriptor.of(ConfigValues.EncryptHostCommunication, false));\n    }\n\n    @Test\n    public void testGetConnectionUrl1() throws MalformedURLException {\n        final Pair<String, URL> actual = HttpUtils.getConnectionUrl(HOSTNAME, PORT, PATH, true);\n\n        final String expectedUrl = String.format(\"https://%s:%d/%s\", HOSTNAME, PORT, PATH);\n\n        assertThat(actual.getFirst(), is(expectedUrl));\n        assertThat(actual.getSecond(), is(new URL(expectedUrl)));\n    }\n\n    @Test\n    public void testGetConnectionUrl2() throws MalformedURLException {\n        final Pair<String, URL> actual = HttpUtils.getConnectionUrl(HOSTNAME, PORT, null, false);\n\n        final String expectedUrl = String.format(\"http://%s:%d\", HOSTNAME, PORT);\n\n        assertThat(actual.getFirst(), is(expectedUrl));\n        assertThat(actual.getSecond(), is(new URL(expectedUrl)));\n    }\n\n    @Test", "func_src_after": "package org.ovirt.engine.core.vdsbroker;\n\nimport static org.hamcrest.MatcherAssert.assertThat;\nimport static org.hamcrest.Matchers.is;\n\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.util.stream.Stream;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.ovirt.engine.core.common.config.ConfigValues;\nimport org.ovirt.engine.core.common.utils.Pair;\nimport org.ovirt.engine.core.utils.MockConfigDescriptor;\nimport org.ovirt.engine.core.utils.MockConfigExtension;\n\n@ExtendWith(MockConfigExtension.class)\npublic class HttpUtilsTest {\n\n    private static final String HOSTNAME = \"hostname\";\n    private static final int PORT = 1234;\n    private static final String PATH = \"path\";\n    private static final String IPV6_ADDRESS = \"<IP-Address>\";\n    private static final String IPV4_ADDRESS = \"<IP-Address>\";\n\n    public static Stream<MockConfigDescriptor<?>> mockConfiguration() {\n        return Stream.of(MockConfigDescriptor.of(ConfigValues.EncryptHostCommunication, false));\n    }\n\n    @Test\n    public void testGetConnectionUrl1() throws MalformedURLException {\n        final Pair<String, URL> actual = HttpUtils.getConnectionUrl(HOSTNAME, PORT, PATH, true);\n\n        final String expectedUrl = String.format(\"https://%s:%d/%s\", HOSTNAME, PORT, PATH);\n\n        assertThat(actual.getFirst(), is(expectedUrl));\n        assertThat(actual.getSecond(), is(new URL(expectedUrl)));\n    }\n\n    @Test\n    public void testGetConnectionUrl2() throws MalformedURLException {\n        final Pair<String, URL> actual = HttpUtils.getConnectionUrl(HOSTNAME, PORT, null, false);\n\n        final String expectedUrl = String.format(\"http://%s:%d\", HOSTNAME, PORT);\n\n        assertThat(actual.getFirst(), is(expectedUrl));\n        assertThat(actual.getSecond(), is(new URL(expectedUrl)));\n    }\n\n    @Test", "line_changes": {"deleted": [{"line_no": 23, "char_start": 747, "char_end": 806, "line": "    private static final String IPV6_ADDRESS = \"1:2::3:4\";\n"}, {"line_no": 25, "char_start": 810, "char_end": 868, "line": "    private static final String IPV4_ADDRESS = \"1.2.3.4\";\n"}], "added": [{"line_no": 24, "char_start": 747, "char_end": 810, "line": "    private static final String IPV6_ADDRESS = \"<IP-Address>\";\n"}, {"line_no": 26, "char_start": 810, "char_end": 873, "line": "    private static final String IPV4_ADDRESS = \"<IP-Address>\";\n"}]}, "char_changes": {"deleted": [{"char_start": 747, "char_end": 806, "chars": "    private static final String IPV6_ADDRESS = \"1:2::3:4\";\n"}, {"char_start": 810, "char_end": 868, "chars": "    private static final String IPV4_ADDRESS = \"1.2.3.4\";\n"}], "added": [{"char_start": 747, "char_end": 810, "chars": "    private static final String IPV6_ADDRESS = \"<IP-Address>\";\n"}, {"char_start": 810, "char_end": 873, "chars": "    private static final String IPV4_ADDRESS = \"<IP-Address>\";\n"}]}}
{"func_name": 3010, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "var translationsUA = {\n        STATS_NAME:\"Hазва кав'ярні\",\n        STATS_GAME_TIME:\"Часу у грі\",\n        STATS_MONEY:\"Mонет у касі\",\n\n        SOME_HELLO_TEXT:\"SOME_HELLO_TEXT UA.js\",\n        NEED_BUY_KG_COFFE:\"Треба купити кілограм кави.\",\n//top menus and modals\n        SING_IN:'Увійти/Зареєструватися',\n        LOG_OUT:'Вийти',\n        LOGIN:'Увійти',\n        SING_IN_PLAING:'Увійти та продовжувати грати',\n        OR:' або ' ,\n        REGISTER_SHOP:'зареєструвати нову кав\\'ярню',\n        REGISTER:\"Зареєструватися\",\n        REGISTER_PLAYING:'Зареєструйтеся, щоб почати грати',\n        DESIRED_SHOP_NAME:\"Hазва кав'ярні\",\n        DESIRED_ENTER_PASSWORD:\"Пароль\",\n        ENTER_PASSWORD:\"Напишіть бажаний пароль\",\n        ENTER_SHOP_NAME:\"Напишіть назву свої кав'ярні\",\n        INFO: 'Iнформація',\n        INFO_GAME_ABOUT:'<p><strong>What is this game about?</strong> <br>Have you ever dreamt about your own cafe? Do you want to try it yourself? Here is your chance to experience the rush! The game was created using the extensive knowledge of the inner workings of a coffee shop. Also, it mimics real-life prices and crowd mechanics (in a way).</p>',\n        INFO_GAME_AIM:'<p><strong>What is the aim of the game?</strong> <br>Max out the Popularity percentage up to 100 %, unlock all of the Achievements, earn 10 000 000 coins, or just enjoy the simulation. :)</p>',\n        INFO_GAME_UPGRADE:'<p><strong>Why sould I upgrade things?</strong> <br>Choosing better alternatives increases the attractiveness of your business—Popularity.</p>',\n        INFO_GAME_POPULARITY:'<p><strong>What Popularity percentage is and why is it important?</strong> <br>Higher popularity allows you either to sell more drinks per month or to increase the price of the drink without customers leaving the queue. You need to find the right balance between the price of the drink and the Popularity percentage in order to maximize your profit.</p>',\n        GAME_VERSION: 'Версія гри: 0.2',\n        SITE: 'jaknakavu.eu',\n        CLOSE: 'Закрити',\n        LANGUAGE: 'Мова',\n        BUTTON_LANG_CZ: 'Česky',\n        BUTTON_LANG_EN: 'English',\n        BUTTON_LANG_RU: 'По-русски',\n        BUTTON_LANG_UA: 'Українською',\n        RESET: 'Скидання',\n        RESET_QUESTION:'Хочете скинути гру а почати знову?',\n        RESET_OK:'Так, почати знову',\n        RESET_BACK:'Ні, повернутися назад у гру',\n        STATS: 'Статистика',\n        STATS_TOP:'Список 10 найкращих гравців. Часу у грі та монет у касі.',\n        WELCOME:\"<p><strong>Ласкаво просимо!</strong><br>Гра була створена на підставі досвіду роботи в кафе. Також використовує реальні ціни, а кожне ваше рішення впливає на відвідуваність і виручку. Отже, можемо починати ... Для старту вашого кафе у вас є 55 тисяч монет. Виберіть по одному варіанту в кожній з шести наведених нижче секцій.</p>\",\n        DISMISS_MESSAGE:\"Закрити це повідомлення\",\n        \n//game clicking area\n        DRINKPRICE: 'Ціна напою:',\n        DRINK: 'напій',\n        CUSTOMERSINQUEUE: 'Замовників в черзі:',\n        YOUHAVE: 'У касі:',\n        CURRENCY: 'монет',\n        OPENEDMONTHS: 'Відкрито місяців:',\n        TOTALDRINKS: 'Усього напоїв:',", "func_src_after": "var translationsUA = {\n        STATS_NAME:\"Hазва кав'ярні\",\n        STATS_GAME_TIME:\"Часу у грі\",\n        STATS_MONEY:\"Mонет у касі\",\n\n        SOME_HELLO_TEXT:\"SOME_HELLO_TEXT UA.js\",\n        NEED_BUY_KG_COFFE:\"Треба купити кілограм кави.\",\n//top menus and modals\n        SING_IN:'Увійти/Зареєструватися',\n        LOG_OUT:'Вийти',\n        LOGIN:'Увійти',\n        SING_IN_PLAING:'Увійти та продовжувати грати',\n        OR:' або ' ,\n        REGISTER_SHOP:'зареєструвати нову кав\\'ярню',\n        REGISTER:\"Зареєструватися\",\n        REGISTER_PLAYING:'Зареєструйтеся, щоб почати грати',\n        DESIRED_SHOP_NAME:\"Hазва кав'ярні\",\n        DESIRED_ENTER_PASSWORD:\"Пароль\",\n        ENTER_PASSWORD:\"Напишіть бажаний пароль\",\n        ENTER_SHOP_NAME:\"Напишіть назву свої кав'ярні\",\n        INFO: 'Iнформація',\n        INFO_GAME_ABOUT:'<p><strong>What is this game about?</strong> <br>Have you ever dreamt about your own cafe? Do you want to try it yourself? Here is your chance to experience the rush! The game was created using the extensive knowledge of the inner workings of a coffee shop. Also, it mimics real-life prices and crowd mechanics (in a way).</p>',\n        INFO_GAME_AIM:'<p><strong>What is the aim of the game?</strong> <br>Max out the Popularity percentage up to 100 %, unlock all of the Achievements, earn 10 000 000 coins, or just enjoy the simulation. :)</p>',\n        INFO_GAME_UPGRADE:'<p><strong>Why sould I upgrade things?</strong> <br>Choosing better alternatives increases the attractiveness of your business—Popularity.</p>',\n        INFO_GAME_POPULARITY:'<p><strong>What Popularity percentage is and why is it important?</strong> <br>Higher popularity allows you either to sell more drinks per month or to increase the price of the drink without customers leaving the queue. You need to find the right balance between the price of the drink and the Popularity percentage in order to maximize your profit.</p>',\n        GAME_VERSION: 'Версія гри: 0.2',\n        SITE: 'jaknakavu.eu',\n        CLOSE: 'Закрити',\n        LANGUAGE: 'Мова',\n        BUTTON_LANG_CZ: 'Česky',\n        BUTTON_LANG_EN: 'English',\n        BUTTON_LANG_RU: 'По-русски',\n        BUTTON_LANG_UA: 'Українською',\n        RESET: 'Скидання',\n        RESET_QUESTION:'Хочете скинути гру а почати знову?',\n        RESET_OK:'Так, почати знову',\n        RESET_BACK:'Ні, повернутися назад у гру',\n        STATS: 'Статистика',\n        STATS_TOP:'Список 10 найкращих гравців. Часу у грі та монет у касі.',\n        WELCOME:\"<p><strong>Ласкаво просимо!</strong><br>Гра була створена на підставі досвіду роботи в кафе. Також використовує реальні ціни, а кожне ваше рішення впливає на відвідуваність і виручку. Отже, можемо починати ... Для старту вашого кафе у вас є 55 тисяч монет. Виберіть по одному варіанту в кожній з шести наведених нижче секцій.</p>\",\n        DISMISS_MESSAGE:\"Закрити це повідомлення\",\n        \n//game clicking area\n        DRINKPRICE: 'Ціна напою:',\n        DRINK: 'напій',\n        CUSTOMERSINQUEUE: 'Замовників в черзі:',\n        YOUHAVE: 'У касі:',\n        CURRENCY: 'монет',\n        OPENEDMONTHS: 'Відкрито місяців:',\n        TOTALDRINKS: 'Усього напоїв:',", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3011, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                        </div>\n                    </div>\n                    <div className = \"row no-gutters\">\n                        <div className= {`col-11 col-md-11 col-lg-12`}> {/* note: need to tweak paragraph size to be more accurate to Figma*/}\n                            <div className={`${styles.about_text}`}>\n                            HackDavis is UC Davis’ 36-hour collegiate hackathon dedicated to empowering student hackers to collaborate \n                            and build impactful projects that make the world a better place. HackDavis 2021 featured \n                            <span className={`${styles.about_text_alt}`}> 750+ student attendees </span> and \n                            <span className={`${styles.about_text_alt}`}> 150+ project submissions </span> \n                            dedicated to social good, making the event a huge success and the \n                            <span className={`${styles.about_text_alt}`}> second-largest hackathon in California. </span> \n                            We also partnered with non-profit organizations like Aging 2.0, The Children’s \n                            Scoliosis Foundation, and Breathe California to support our local communities.\n                            </div>\n                        </div>\n                    </div>\n                    <div className = \"row no-gutters\">\n                        <div className={`${styles.view_winner_button_container} col-12 col-sm-12` }>\n                            <div className = {styles.view_winner} onClick={() => window.open('mailto:team@hackdavis.io')}>\n                                    SPONSOR 2022\n                            </div>\n                        </div>\n                    </div>\n                    <div className = \"row no-gutters align-items-end\">\n                        <div className={`col-5 offset-1 col-md-3 offset-md-0 col-lg-3 offset-lg-0`}> {/* Note: not really centered on small, kinda jank lol*/}\n                            <img src={images['attendee_logo']}></img>\n                            <div className={styles.about_stats_text_container}>\n                                <div className = {styles.about_stats_big}>\n                                    750+\n                                </div>\n                                <div className = {styles.about_stats_small}>\n                                    <p>attendees</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className= {`col-5 offset-1 col-md-3 offset-md-0 col-lg-3 offset-lg-0`}>\n                            <img src={images['projects_logo']}></img>\n                            <div className={styles.about_stats_text_container}>\n                                <div className = {styles.about_stats_big}>\n                                    150+\n                                </div>\n                                <div className = {styles.about_stats_small}>\n                                    projects submitted\n                                </div>\n                            </div>\n                        </div>\n                        <div className= {`col-5 offset-1 col-md-3 offset-md-0 col-lg-3 offset-lg-0`}>\n                            <img src={images['first_time_logo']}></img>\n                            <div className={styles.about_stats_text_container}>\n                                <div className = {styles.about_stats_big}>", "func_src_after": "                        </div>\n                    </div>\n                    <div className = \"row no-gutters\">\n                        <div className= {`col-11 col-md-11 col-lg-12`}> {/* note: need to tweak paragraph size to be more accurate to Figma*/}\n                            <div className={`${styles.about_text}`}>\n                            HackDavis is UC Davis’ 36-hour collegiate hackathon dedicated to empowering student hackers to collaborate \n                            and build impactful projects that make the world a better place. HackDavis 2021 featured \n                            <span className={`${styles.about_text_alt}`}> 750+ student attendees </span> and \n                            <span className={`${styles.about_text_alt}`}> 150+ project submissions </span> \n                            dedicated to social good, making the event a huge success and the \n                            <span className={`${styles.about_text_alt}`}> second-largest hackathon in California. </span> \n                            We also partnered with non-profit organizations like Aging 2.0, The Children’s \n                            Scoliosis Foundation, and Breathe California to support our local communities.\n                            </div>\n                        </div>\n                    </div>\n                    <div className = \"row no-gutters\">\n                        <div className={`${styles.view_winner_button_container} col-12 col-sm-12` }>\n                            <div className = {styles.view_winner} onClick={() => window.open('mailto:<EMAIL>')}>\n                                    SPONSOR 2022\n                            </div>\n                        </div>\n                    </div>\n                    <div className = \"row no-gutters align-items-end\">\n                        <div className={`col-5 offset-1 col-md-3 offset-md-0 col-lg-3 offset-lg-0`}> {/* Note: not really centered on small, kinda jank lol*/}\n                            <img src={images['attendee_logo']}></img>\n                            <div className={styles.about_stats_text_container}>\n                                <div className = {styles.about_stats_big}>\n                                    750+\n                                </div>\n                                <div className = {styles.about_stats_small}>\n                                    <p>attendees</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className= {`col-5 offset-1 col-md-3 offset-md-0 col-lg-3 offset-lg-0`}>\n                            <img src={images['projects_logo']}></img>\n                            <div className={styles.about_stats_text_container}>\n                                <div className = {styles.about_stats_big}>\n                                    150+\n                                </div>\n                                <div className = {styles.about_stats_small}>\n                                    projects submitted\n                                </div>\n                            </div>\n                        </div>\n                        <div className= {`col-5 offset-1 col-md-3 offset-md-0 col-lg-3 offset-lg-0`}>\n                            <img src={images['first_time_logo']}></img>\n                            <div className={styles.about_stats_text_container}>\n                                <div className = {styles.about_stats_big}>", "line_changes": {"deleted": [{"line_no": 19, "char_start": 1479, "char_end": 1602, "line": "                            <div className = {styles.view_winner} onClick={() => window.open('mailto:team@hackdavis.io')}>\n"}], "added": [{"line_no": 20, "char_start": 1479, "char_end": 1592, "line": "                            <div className = {styles.view_winner} onClick={() => window.open('mailto:<EMAIL>')}>\n"}]}, "char_changes": {"deleted": [{"char_start": 1479, "char_end": 1602, "chars": "                            <div className = {styles.view_winner} onClick={() => window.open('mailto:team@hackdavis.io')}>\n"}], "added": [{"char_start": 1479, "char_end": 1592, "chars": "                            <div className = {styles.view_winner} onClick={() => window.open('mailto:<EMAIL>')}>\n"}]}}
{"func_name": 3014, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    return testUser;\n  });\n\n  await request(api)\n    .post('/public/login')\n    .set('Accept', /json/)\n    .send({\n      email: 'martin@mail.com',\n      password: 'securepassword',\n    })\n    .expect(200)\n    .then((res) => t.truthy(res.body.token));\n\n  t.truthy(testUser);\n\n  await testUser.destroy();\n});\n\ntest.serial('User | get all (auth)', async (t) => {\n  let token;\n  let testUser;\n  await User.create({\n    email: 'martin@mail.com',\n    password: 'securepassword',\n  }).then((user) => {\n    testUser = user;\n    return testUser;\n  });\n\n  await request(api)\n    .post('/public/login')\n    .set('Accept', /json/)\n    .send({\n      email: 'martin@mail.com',\n      password: 'securepassword',\n    })\n    .expect(200)\n    .then((res) => {\n      t.truthy(res.body.token);\n      token = res.body.token;\n      return token;\n    });\n\n  await request(api)\n    .get('/private/users')\n    .set('Accept', /json/)\n    .set('Authorization', `Bearer ${token}`)\n    .set('Content-Type', 'application/json')\n    .expect(200)\n    .then((res) => {", "func_src_after": "    return testUser;\n  });\n\n  await request(api)\n    .post('/public/login')\n    .set('Accept', /json/)\n    .send({\n      email: '<EMAIL>',\n      password: 'securepassword',\n    })\n    .expect(200)\n    .then((res) => t.truthy(res.body.token));\n\n  t.truthy(testUser);\n\n  await testUser.destroy();\n});\n\ntest.serial('User | get all (auth)', async (t) => {\n  let token;\n  let testUser;\n  await User.create({\n    email: '<EMAIL>',\n    password: 'securepassword',\n  }).then((user) => {\n    testUser = user;\n    return testUser;\n  });\n\n  await request(api)\n    .post('/public/login')\n    .set('Accept', /json/)\n    .send({\n      email: '<EMAIL>',\n      password: 'securepassword',\n    })\n    .expect(200)\n    .then((res) => {\n      t.truthy(res.body.token);\n      token = res.body.token;\n      return token;\n    });\n\n  await request(api)\n    .get('/private/users')\n    .set('Accept', /json/)\n    .set('Authorization', `Bearer ${token}`)\n    .set('Content-Type', 'application/json')\n    .expect(200)\n    .then((res) => {", "line_changes": {"deleted": [{"line_no": 8, "char_start": 115, "char_end": 147, "line": "      email: 'martin@mail.com',\n"}, {"line_no": 24, "char_start": 403, "char_end": 433, "line": "    email: 'martin@mail.com',\n"}, {"line_no": 36, "char_start": 615, "char_end": 647, "line": "      email: 'martin@mail.com',\n"}], "added": [{"line_no": 9, "char_start": 115, "char_end": 139, "line": "      email: '<EMAIL>',\n"}, {"line_no": 25, "char_start": 403, "char_end": 425, "line": "    email: '<EMAIL>',\n"}, {"line_no": 37, "char_start": 615, "char_end": 639, "line": "      email: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 115, "char_end": 147, "chars": "      email: 'martin@mail.com',\n"}, {"char_start": 403, "char_end": 433, "chars": "    email: 'martin@mail.com',\n"}, {"char_start": 615, "char_end": 647, "chars": "      email: 'martin@mail.com',\n"}], "added": [{"char_start": 115, "char_end": 139, "chars": "      email: '<EMAIL>',\n"}, {"char_start": 403, "char_end": 425, "chars": "    email: '<EMAIL>',\n"}, {"char_start": 615, "char_end": 639, "chars": "      email: '<EMAIL>',\n"}]}}
{"func_name": 3021, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//   handleNewDrug  = event => {\n//       event.preventDefault();\n//       if(this.state.drugName && this.state.drugType && this.state.dosage){\n//         medicationAPI.newDrug({\n//           name : this.state.drugName,\n//           type : this.state.drugType,\n//           dose : this.state.dosage\n//       })\n//         .then(res => {\n//             console.log(\"success!\");\n//             console.log(res);\n//         })\n//          .catch(err =>{ \n\n//             console.log(err);}); \n//       }\n//   };\n\n\n//   handleCreatePatient = event => {\n//       event.preventDefault();\n//       if(this.state.password && this.state.username){\n//         userAPI.createAccount({\n//             username : this.state.username,\n//             password : this.state.password,\n//             email: \"mel.kopffh@doctor.com\",\n//             role : \"Admin\"\n//         })\n//         .then(res => {\n//             console.log(res);\n//             this.setState({\n//                 messageCenter : \"Account created successfully!\",\n//                 messageStatus: \"success\"\n//             })\n//         })\n//         .catch(err => {\n//             console.log(\"fail\");\n//             console.log(\"setting redirect to true\");\n//             console.log(err)\n//             this.setState({ \n//                 messageCenter : \"Invalid input field, please change the field accordingly\",\n//                 messageStatus : \"danger\"\n//             });  \n//         });\n//       }\n//   }\n//   handleLogout = event => {\n//     userAPI.logout()\n//     .then(res =>{\n//         console.log(res);", "func_src_after": "//   handleNewDrug  = event => {\n//       event.preventDefault();\n//       if(this.state.drugName && this.state.drugType && this.state.dosage){\n//         medicationAPI.newDrug({\n//           name : this.state.drugName,\n//           type : this.state.drugType,\n//           dose : this.state.dosage\n//       })\n//         .then(res => {\n//             console.log(\"success!\");\n//             console.log(res);\n//         })\n//          .catch(err =>{ \n\n//             console.log(err);}); \n//       }\n//   };\n\n\n//   handleCreatePatient = event => {\n//       event.preventDefault();\n//       if(this.state.password && this.state.username){\n//         userAPI.createAccount({\n//             username : this.state.username,\n//             password : this.state.password,\n//             email: \"<EMAIL>\",\n//             role : \"Admin\"\n//         })\n//         .then(res => {\n//             console.log(res);\n//             this.setState({\n//                 messageCenter : \"Account created successfully!\",\n//                 messageStatus: \"success\"\n//             })\n//         })\n//         .catch(err => {\n//             console.log(\"fail\");\n//             console.log(\"setting redirect to true\");\n//             console.log(err)\n//             this.setState({ \n//                 messageCenter : \"Invalid input field, please change the field accordingly\",\n//                 messageStatus : \"danger\"\n//             });  \n//         });\n//       }\n//   }\n//   handleLogout = event => {\n//     userAPI.logout()\n//     .then(res =>{\n//         console.log(res);", "line_changes": {"deleted": [{"line_no": 26, "char_start": 768, "char_end": 815, "line": "//             email: \"mel.kopffh@doctor.com\",\n"}], "added": [{"line_no": 27, "char_start": 768, "char_end": 801, "line": "//             email: \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 768, "char_end": 815, "chars": "//             email: \"mel.kopffh@doctor.com\",\n"}], "added": [{"char_start": 768, "char_end": 801, "chars": "//             email: \"<EMAIL>\",\n"}]}}
{"func_name": 3048, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        msg: 'Successfuly created user'\n      });\n    })\n  }\n})\n\n//password reset\nrouter.post('/forget', (req, res, next) => {\n  async.waterfall([\n    (done) => {\n      crypto.randomBytes(20, (err, buff) => {\n        const token = buff.toString('hex');\n        done(err, token);\n      });\n    },\n    (token, done) => {\n      User.findOne({\n        email: req.body.email\n      }, (err, user) => {\n        if (!user) {\n          return res.status(400).send({\n            success: false,\n            msg: 'Provided user does not exists'\n          });\n        }\n        user.resetPasswordToken = token;\n        user.resetPasswordExpires = Date.now() + 3600000;\n        user.save((err) => {\n          done(err, token, user);\n        });\n      });\n    },\n    (token, user, done) => {\n      const transporter = nodemailer.createTransport({\n        service: 'gmail',\n        auth: {\n          user: 'miuattendance@gmail.com',\n          pass: 'W3lcome!.!'\n        },\n        tls: {\n          rejectUnauthorized: false\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: 'miuattendance@gmail.com',\n        subject: 'Password Rest',\n        text: 'You are receiving this because you (or someone else) have requested the reset of the password for your account.\\n\\n' +\n          'Please click on the following link, or paste this into your browser to complete the process:\\n\\n' +\n          'https://client-fyp.herokuapp.com/forgot/' + token + '\\n\\n' +", "func_src_after": "        msg: 'Successfuly created user'\n      });\n    })\n  }\n})\n\n//password reset\nrouter.post('/forget', (req, res, next) => {\n  async.waterfall([\n    (done) => {\n      crypto.randomBytes(20, (err, buff) => {\n        const token = buff.toString('hex');\n        done(err, token);\n      });\n    },\n    (token, done) => {\n      User.findOne({\n        email: req.body.email\n      }, (err, user) => {\n        if (!user) {\n          return res.status(400).send({\n            success: false,\n            msg: 'Provided user does not exists'\n          });\n        }\n        user.resetPasswordToken = token;\n        user.resetPasswordExpires = Date.now() + 3600000;\n        user.save((err) => {\n          done(err, token, user);\n        });\n      });\n    },\n    (token, user, done) => {\n      const transporter = nodemailer.createTransport({\n        service: 'gmail',\n        auth: {\n          user: '<EMAIL>',\n          pass: 'W3lcome!.!'\n        },\n        tls: {\n          rejectUnauthorized: false\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: '<EMAIL>',\n        subject: 'Password Rest',\n        text: 'You are receiving this because you (or someone else) have requested the reset of the password for your account.\\n\\n' +\n          'Please click on the following link, or paste this into your browser to complete the process:\\n\\n' +\n          'https://client-fyp.herokuapp.com/forgot/' + token + '\\n\\n' +", "line_changes": {"deleted": [{"line_no": 37, "char_start": 875, "char_end": 918, "line": "          user: 'miuattendance@gmail.com',\n"}, {"line_no": 47, "char_start": 1065, "char_end": 1106, "line": "        from: 'miuattendance@gmail.com',\n"}], "added": [{"line_no": 38, "char_start": 875, "char_end": 902, "line": "          user: '<EMAIL>',\n"}, {"line_no": 48, "char_start": 1065, "char_end": 1090, "line": "        from: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 875, "char_end": 918, "chars": "          user: 'miuattendance@gmail.com',\n"}, {"char_start": 1065, "char_end": 1106, "chars": "        from: 'miuattendance@gmail.com',\n"}], "added": [{"char_start": 875, "char_end": 902, "chars": "          user: '<EMAIL>',\n"}, {"char_start": 1065, "char_end": 1090, "chars": "        from: '<EMAIL>',\n"}]}}
{"func_name": 3049, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        }\n      }, (err, user) => {\n        if (!user) {\n          return res.status(400).send({\n            success: false,\n            msg: 'Password reset token is invalid or has Expired'\n          });\n        }\n        user.password = req.body.password;\n        user.resetPasswordToken = undefined;\n        user.resetPasswordExpires = undefined;\n        user.save((err) => {\n          if (err) {\n            console.log(err);\n          }\n          done(err, user);\n        });\n      });\n    },\n    (user, done) => {\n      const transporter = nodemailer.createTransport({\n        service: 'gmail',\n        auth: {\n          user: 'miuattendance@gmail.com',\n          pass: 'W3lcome!.!'\n        },\n        tls: {\n          rejectUnauthorized: false\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: 'miuattendance',\n        subject: 'Your password has changed',\n        text: `Hello,\\n\\n\n        This is a confirmation that the password for your account ${user.email} has just been changed.\\n`\n      };\n      transporter.sendMail(mailOptions, (err) => {\n        return res.status(200).send({\n          success: true,\n          msg: 'Your password has been changed'\n        });\n        done(err);\n      });\n    }\n  ], (err) => {\n    return res.status(401).send({\n      success: false,\n      msg: 'Server error'\n    });", "func_src_after": "        }\n      }, (err, user) => {\n        if (!user) {\n          return res.status(400).send({\n            success: false,\n            msg: 'Password reset token is invalid or has Expired'\n          });\n        }\n        user.password = req.body.password;\n        user.resetPasswordToken = undefined;\n        user.resetPasswordExpires = undefined;\n        user.save((err) => {\n          if (err) {\n            console.log(err);\n          }\n          done(err, user);\n        });\n      });\n    },\n    (user, done) => {\n      const transporter = nodemailer.createTransport({\n        service: 'gmail',\n        auth: {\n          user: '<EMAIL>',\n          pass: 'W3lcome!.!'\n        },\n        tls: {\n          rejectUnauthorized: false\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: 'miuattendance',\n        subject: 'Your password has changed',\n        text: `Hello,\\n\\n\n        This is a confirmation that the password for your account ${user.email} has just been changed.\\n`\n      };\n      transporter.sendMail(mailOptions, (err) => {\n        return res.status(200).send({\n          success: true,\n          msg: 'Your password has been changed'\n        });\n        done(err);\n      });\n    }\n  ], (err) => {\n    return res.status(401).send({\n      success: false,\n      msg: 'Server error'\n    });", "line_changes": {"deleted": [{"line_no": 24, "char_start": 617, "char_end": 660, "line": "          user: 'miuattendance@gmail.com',\n"}], "added": [{"line_no": 25, "char_start": 617, "char_end": 644, "line": "          user: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 617, "char_end": 660, "chars": "          user: 'miuattendance@gmail.com',\n"}], "added": [{"char_start": 617, "char_end": 644, "chars": "          user: '<EMAIL>',\n"}]}}
{"func_name": 3051, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * Created by simba on 5/6/16.\n */\n\nmodule.exports.save_viewer_node=save_viewer_node\n\nvar MongoClient = require('mongodb').MongoClient;\nvar assert = require('assert');\n//var url = 'mongodb://hotShareAdmin:aei_19056@host1.tiegushi.com:27017/hotShare';\nvar url = 'mongodb://localhost:27017/localdb';\n\nvar dbGraph = require(\"seraph\")({ server: \"http://120.24.247.107:7474\",\n    endpoint: \"/db/data\",\n    user: \"neo4j\",\n    pass: \"5MW-wU3-V9t-bF6\" });\nfunction save_viewer_node(doc,cb){\n    if (doc !== null) {\n        var querystr = 'MATCH (u:User)-[v:VIEWER]->(p:Post) WHERE u.userId=\"'+doc.userId+\n            '\" AND p.postId=\"'+doc.postId+'\" RETURN v;'\n        console.log(querystr)\n        dbGraph.query(querystr, function(err, relationShip) {\n            var createstr = 'MATCH (u:User {userId:\"'+doc.userId+'\"}),(p:Post {postId:\"'+\n                doc.postId+'\"}) MERGE  (u)-[v:VIEWER{by:'+doc.createdAt.getTime()+'}]->(p) RETURN v;';\n            console.log(relationShip)\n            if (!relationShip || relationShip.length===0){\n                console.log(createstr)\n                dbGraph.query(createstr, function(err1, result) {\n                    console.log(result)\n                    cb(null)\n                })\n                return\n            }\n            cb(null)\n        });\n    }\n}\nfunction grab_viewerInfo_in_hotshare(db){\n    var cursor =db.collection('viewers').find({});//.limit(3000).sort({createdAt:-1});\n\n    function eachViewersInfo(err,doc){\n        if(doc ===null){\n            return\n        }\n        if(!err){\n            console.dir(doc)\n            save_viewer_node(doc,function(){\n                setTimeout(function(){\n                    cursor.next(eachViewersInfo)\n                },0)\n            })", "func_src_after": "/**\n * Created by simba on 5/6/16.\n */\n\nmodule.exports.save_viewer_node=save_viewer_node\n\nvar MongoClient = require('mongodb').MongoClient;\nvar assert = require('assert');\n//var url = 'mongodb://hotShareAdmin:<EMAIL>:27017/hotShare';\nvar url = 'mongodb://localhost:27017/localdb';\n\nvar dbGraph = require(\"seraph\")({ server: \"http://<IP-Address>:7474\",\n    endpoint: \"/db/data\",\n    user: \"neo4j\",\n    pass: \"5MW-wU3-V9t-bF6\" });\nfunction save_viewer_node(doc,cb){\n    if (doc !== null) {\n        var querystr = 'MATCH (u:User)-[v:VIEWER]->(p:Post) WHERE u.userId=\"'+doc.userId+\n            '\" AND p.postId=\"'+doc.postId+'\" RETURN v;'\n        console.log(querystr)\n        dbGraph.query(querystr, function(err, relationShip) {\n            var createstr = 'MATCH (u:User {userId:\"'+doc.userId+'\"}),(p:Post {postId:\"'+\n                doc.postId+'\"}) MERGE  (u)-[v:VIEWER{by:'+doc.createdAt.getTime()+'}]->(p) RETURN v;';\n            console.log(relationShip)\n            if (!relationShip || relationShip.length===0){\n                console.log(createstr)\n                dbGraph.query(createstr, function(err1, result) {\n                    console.log(result)\n                    cb(null)\n                })\n                return\n            }\n            cb(null)\n        });\n    }\n}\nfunction grab_viewerInfo_in_hotshare(db){\n    var cursor =db.collection('viewers').find({});//.limit(3000).sort({createdAt:-1});\n\n    function eachViewersInfo(err,doc){\n        if(doc ===null){\n            return\n        }\n        if(!err){\n            console.dir(doc)\n            save_viewer_node(doc,function(){\n                setTimeout(function(){\n                    cursor.next(eachViewersInfo)\n                },0)\n            })", "line_changes": {"deleted": [{"line_no": 9, "char_start": 172, "char_end": 255, "line": "//var url = 'mongodb://hotShareAdmin:aei_19056@host1.tiegushi.com:27017/hotShare';\n"}, {"line_no": 13, "char_start": 282, "char_end": 354, "line": "var dbGraph = require(\"seraph\")({ server: \"http://120.24.247.107:7474\",\n"}], "added": [{"line_no": 10, "char_start": 172, "char_end": 234, "line": "//var url = 'mongodb://hotShareAdmin:<EMAIL>:27017/hotShare';\n"}, {"line_no": 14, "char_start": 282, "char_end": 352, "line": "var dbGraph = require(\"seraph\")({ server: \"http://<IP-Address>:7474\",\n"}]}, "char_changes": {"deleted": [{"char_start": 172, "char_end": 255, "chars": "//var url = 'mongodb://hotShareAdmin:aei_19056@host1.tiegushi.com:27017/hotShare';\n"}, {"char_start": 282, "char_end": 354, "chars": "var dbGraph = require(\"seraph\")({ server: \"http://120.24.247.107:7474\",\n"}], "added": [{"char_start": 172, "char_end": 234, "chars": "//var url = 'mongodb://hotShareAdmin:<EMAIL>:27017/hotShare';\n"}, {"char_start": 282, "char_end": 352, "chars": "var dbGraph = require(\"seraph\")({ server: \"http://<IP-Address>:7474\",\n"}]}}
{"func_name": 3063, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      \"AlphaDescending\": \"Valor decrescente\",\n      \"ChiSquare\": \"Qui-quadrado\",\n      \"Nosort\": \"Sem classificação\",\n      \"RelativeFrequency\": \"Frequência relativa\",\n      \"RelativeFrequencyDescription\": \"Classifica com base na frequência relativa dos valores. Valores menos comuns aparecerão mais altos.\",\n      \"DateDistribution\": \"Distribuição de data\",\n      \"Custom\": \"Personalizada\",\n      \"CustomDescription\": \"Classifica com base em uma ordem personalizada\",\n      \"ComputedField\": \"Campo calculado\",\n      \"Ascending\": \"Crescente\",\n      \"Descending\": \"Decrescente\",\n      \"noResultFor\": \"Nenhum resultado para {0}\",\n      \"autoCorrectedQueryTo\": \"A consulta foi corrigida automaticamente para {0}\",\n      \"didYouMean\": \"Você quis dizer: {0}\",\n      \"SuggestedResults\": \"Resultados sugeridos\",\n      \"SuggestedQueries\": \"Consultas sugeridas\",\n      \"MostRelevantItems\": \"Itens mais relevantes:\",\n      \"AllItems\": \"Todos os itens:\",\n      \"ShowLess\": \"Mostrar menos\",\n      \"ShowMore\": \"Mostrar mais\",\n      \"HideFacet\": \"Ocultar faceta\",\n      \"ShowFacet\": \"Mostrar faceta\",\n      \"AndOthers\": \"e {0} outro<pl>s</pl>\",\n      \"Others\": \"{0} outro<pl>s</pl>\",\n      \"MostRelevantPosts\": \"Postagens mais relevantes:\",\n      \"CompleteThread\": \"Tópico completo:\",\n      \"ShowCompleteThread\": \"Mostrar o tópico completo\",\n      \"ShowOnlyTopMatchingPosts\": \"Mostrar somente as principais postagens correspondentes\",\n      \"MostRelevantReplies\": \"Respostas mais relevantes:\",\n      \"AllConversation\": \"Todas as conversas:\",\n      \"ShowAllConversation\": \"Mostrar todas as conversas\",\n      \"ShowAllReplies\": \"Mostrar todas as respostas\",\n      \"ShowOnlyMostRelevantReplies\": \"Mostrar somente as respostas mais relevantes\",\n      \"Close\": \"Fechar\",\n      \"Open\": \"Abrir\",\n      \"OpenInOutlookWhenPossible\": \"Abrir no Outlook (quando possível)\",\n      \"AlwaysOpenInNewWindow\": \"Sempre abrir os resultados em uma nova janela\",\n      \"QuickView\": \"Visualização rápida\",\n      \"ErrorReport\": \"Relatório de erros\",\n      \"OopsError\": \"Ops! Algo deu errado no servidor.\",\n      \"ProblemPersists\": \"Se o problema persistir entre em contato com o administrador.\",\n      \"GoBack\": \"Voltar\",\n      \"Reset\": \"Reiniciar\",\n      \"Retry\": \"Tentar novamente\",\n      \"MoreInfo\": \"Mais Informações\",\n      \"Username\": \"Nome de usuário\",\n      \"Password\": \"Senha\",\n      \"PostedBy\": \"Postado por\",\n      \"CannotConnect\": \"Não é possível conectar ao endereço do servidor.\",\n      \"BadUserPass\": \"Nome de usuário e senha não correspondem.\",", "func_src_after": "      \"AlphaDescending\": \"Valor decrescente\",\n      \"ChiSquare\": \"Qui-quadrado\",\n      \"Nosort\": \"Sem classificação\",\n      \"RelativeFrequency\": \"Frequência relativa\",\n      \"RelativeFrequencyDescription\": \"Classifica com base na frequência relativa dos valores. Valores menos comuns aparecerão mais altos.\",\n      \"DateDistribution\": \"Distribuição de data\",\n      \"Custom\": \"Personalizada\",\n      \"CustomDescription\": \"Classifica com base em uma ordem personalizada\",\n      \"ComputedField\": \"Campo calculado\",\n      \"Ascending\": \"Crescente\",\n      \"Descending\": \"Decrescente\",\n      \"noResultFor\": \"Nenhum resultado para {0}\",\n      \"autoCorrectedQueryTo\": \"A consulta foi corrigida automaticamente para {0}\",\n      \"didYouMean\": \"Você quis dizer: {0}\",\n      \"SuggestedResults\": \"Resultados sugeridos\",\n      \"SuggestedQueries\": \"Consultas sugeridas\",\n      \"MostRelevantItems\": \"Itens mais relevantes:\",\n      \"AllItems\": \"Todos os itens:\",\n      \"ShowLess\": \"Mostrar menos\",\n      \"ShowMore\": \"Mostrar mais\",\n      \"HideFacet\": \"Ocultar faceta\",\n      \"ShowFacet\": \"Mostrar faceta\",\n      \"AndOthers\": \"e {0} outro<pl>s</pl>\",\n      \"Others\": \"{0} outro<pl>s</pl>\",\n      \"MostRelevantPosts\": \"Postagens mais relevantes:\",\n      \"CompleteThread\": \"Tópico completo:\",\n      \"ShowCompleteThread\": \"Mostrar o tópico completo\",\n      \"ShowOnlyTopMatchingPosts\": \"Mostrar somente as principais postagens correspondentes\",\n      \"MostRelevantReplies\": \"Respostas mais relevantes:\",\n      \"AllConversation\": \"Todas as conversas:\",\n      \"ShowAllConversation\": \"Mostrar todas as conversas\",\n      \"ShowAllReplies\": \"Mostrar todas as respostas\",\n      \"ShowOnlyMostRelevantReplies\": \"Mostrar somente as respostas mais relevantes\",\n      \"Close\": \"Fechar\",\n      \"Open\": \"Abrir\",\n      \"OpenInOutlookWhenPossible\": \"Abrir no Outlook (quando possível)\",\n      \"AlwaysOpenInNewWindow\": \"Sempre abrir os resultados em uma nova janela\",\n      \"QuickView\": \"Visualização rápida\",\n      \"ErrorReport\": \"Relatório de erros\",\n      \"OopsError\": \"Ops! Algo deu errado no servidor.\",\n      \"ProblemPersists\": \"Se o problema persistir entre em contato com o administrador.\",\n      \"GoBack\": \"Voltar\",\n      \"Reset\": \"Reiniciar\",\n      \"Retry\": \"Tentar novamente\",\n      \"MoreInfo\": \"Mais Informações\",\n      \"Username\": \"Nome de usuário\",\n      \"Password\": \"Senha\",\n      \"PostedBy\": \"Postado por\",\n      \"CannotConnect\": \"Não é possível conectar ao endereço do servidor.\",\n      \"BadUserPass\": \"Nome de usuário e senha não correspondem.\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3069, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "'use strict';\n/**\n * MainCtrl\n *\n * FirePoker.io is a monolithic well tested app, so for now all it's\n * logic is on this single controller, in the future we could be splitting the logic\n * into diff files and modules.\n *\n * @author Everton Yoshitani <everton@wizehive.com>\n */\nangular.module('firePokerApp')\n  .controller('MainCtrl', function ($rootScope, $scope, $cookieStore, $location, $routeParams, $timeout, angularFire) {\n\n    // Firebase URL\n    //var URL = 'https://pzfqrq7kjy.firebaseio.com';\n    //var URL = 'https://firepokerio.firebaseio.com';\n    var URL = 'https://firepoker-75089.firebaseio.com';\n\n    // Initialize Firebase\n    /*global Firebase*/\n    var ref = new Firebase(URL);\n\n    // UUID generator\n    // Snippet from: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n    var s4 = function () {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    var guid = function () {\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    };\n\n    // Load cookies\n    $scope.fp = $cookieStore.get('fp');\n    if (!$scope.fp) {\n      $scope.fp = {};\n    }\n\n    // UID\n    if (!$scope.fp.user || !$scope.fp.user.id) {\n      var uid = guid();\n      $scope.fp.user = {id: uid};\n      $cookieStore.put('fp', $scope.fp);\n    }\n\n    // GID\n    if (!$scope.fp.gid) {\n      var gid = guid();\n      $scope.fp.gid = gid;\n      $cookieStore.put('fp', $scope.fp);", "func_src_after": "'use strict';\n/**\n * MainCtrl\n *\n * FirePoker.io is a monolithic well tested app, so for now all it's\n * logic is on this single controller, in the future we could be splitting the logic\n * into diff files and modules.\n *\n * @author Everton Yoshitani <<EMAIL>>\n */\nangular.module('firePokerApp')\n  .controller('MainCtrl', function ($rootScope, $scope, $cookieStore, $location, $routeParams, $timeout, angularFire) {\n\n    // Firebase URL\n    //var URL = 'https://pzfqrq7kjy.firebaseio.com';\n    //var URL = 'https://firepokerio.firebaseio.com';\n    var URL = 'https://firepoker-75089.firebaseio.com';\n\n    // Initialize Firebase\n    /*global Firebase*/\n    var ref = new Firebase(URL);\n\n    // UUID generator\n    // Snippet from: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n    var s4 = function () {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    var guid = function () {\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    };\n\n    // Load cookies\n    $scope.fp = $cookieStore.get('fp');\n    if (!$scope.fp) {\n      $scope.fp = {};\n    }\n\n    // UID\n    if (!$scope.fp.user || !$scope.fp.user.id) {\n      var uid = guid();\n      $scope.fp.user = {id: uid};\n      $cookieStore.put('fp', $scope.fp);\n    }\n\n    // GID\n    if (!$scope.fp.gid) {\n      var gid = guid();\n      $scope.fp.gid = gid;\n      $cookieStore.put('fp', $scope.fp);", "line_changes": {"deleted": [{"line_no": 9, "char_start": 222, "char_end": 274, "line": " * @author Everton Yoshitani <everton@wizehive.com>\n"}], "added": [{"line_no": 10, "char_start": 222, "char_end": 261, "line": " * @author Everton Yoshitani <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 222, "char_end": 274, "chars": " * @author Everton Yoshitani <everton@wizehive.com>\n"}], "added": [{"char_start": 222, "char_end": 261, "chars": " * @author Everton Yoshitani <<EMAIL>>\n"}]}}
{"func_name": 3090, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * Абстрактная команда редактора тела книги.\n *\n * @abstract\n * @author dew1983@mail.ru <Suvorov Andrey M.>\n */\n\nExt.define(\n\t'FBEditor.editor.command.AbstractCommand',\n\t{\n\t\textend: 'FBEditor.command.InterfaceCommand',\n\n\t\t/**\n\t\t * @property {Object} Данные для команды.\n\t\t */\n\t\tdata: null,\n\n\t\t/**\n\t\t * @property {Boolean} Нужна ли синхронизация кнопок после проверки по схеме.\n\t\t */\n\t\tsyncButtons: true,\n\n\t\t/**\n\t\t * @param {Object} opts Данные.\n\t\t */\n\t\tconstructor: function (opts)\n\t\t{\n\t\t\tvar me = this;\n\n\t\t\tme.data = opts || {};\n\t\t},\n\n\t\t/**\n\t\t * Возвращает данные для команды.\n\t\t * @return {Object} Данные для команды.\n\t\t */\n\t\tgetData: function ()\n\t\t{\n\t\t\treturn this.data;\n\t\t},\n\n\t\t/**\n\t\t * Возвращает менеджер истории редактора текста.\n\t\t * @param {FBEditor.editor.element.AbstractElement} el Эемент.\n\t\t * @return {FBEditor.editor.History}\n\t\t */\n\t\tgetHistory: function (el)\n\t\t{\n\t\t\tvar editor,\n\t\t\t\thistory;", "func_src_after": "/**\n * Абстрактная команда редактора тела книги.\n *\n * @abstract\n * @author <EMAIL> <Suvorov Andrey M.>\n */\n\nExt.define(\n\t'FBEditor.editor.command.AbstractCommand',\n\t{\n\t\textend: 'FBEditor.command.InterfaceCommand',\n\n\t\t/**\n\t\t * @property {Object} Данные для команды.\n\t\t */\n\t\tdata: null,\n\n\t\t/**\n\t\t * @property {Boolean} Нужна ли синхронизация кнопок после проверки по схеме.\n\t\t */\n\t\tsyncButtons: true,\n\n\t\t/**\n\t\t * @param {Object} opts Данные.\n\t\t */\n\t\tconstructor: function (opts)\n\t\t{\n\t\t\tvar me = this;\n\n\t\t\tme.data = opts || {};\n\t\t},\n\n\t\t/**\n\t\t * Возвращает данные для команды.\n\t\t * @return {Object} Данные для команды.\n\t\t */\n\t\tgetData: function ()\n\t\t{\n\t\t\treturn this.data;\n\t\t},\n\n\t\t/**\n\t\t * Возвращает менеджер истории редактора текста.\n\t\t * @param {FBEditor.editor.element.AbstractElement} el Эемент.\n\t\t * @return {FBEditor.editor.History}\n\t\t */\n\t\tgetHistory: function (el)\n\t\t{\n\t\t\tvar editor,\n\t\t\t\thistory;", "line_changes": {"deleted": [{"line_no": 5, "char_start": 65, "char_end": 112, "line": " * @author dew1983@mail.ru <Suvorov Andrey M.>\n"}], "added": [{"line_no": 6, "char_start": 65, "char_end": 104, "line": " * @author <EMAIL> <Suvorov Andrey M.>\n"}]}, "char_changes": {"deleted": [{"char_start": 65, "char_end": 112, "chars": " * @author dew1983@mail.ru <Suvorov Andrey M.>\n"}], "added": [{"char_start": 65, "char_end": 104, "chars": " * @author <EMAIL> <Suvorov Andrey M.>\n"}]}}
{"func_name": 3092, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    'card.spanInteractionTitle': 'Annotate text segments',\n    'card.steps': 'steps',\n    'card.tagHint': 'Start writing for suggestions',\n\n    'curate.body': 'Curate',\n    'curate.description': 'Curate documents',\n    'curate.name': 'Curate',\n\n    'datapanel.defaultTitle': 'Document details',\n\n    'dateTimeFormat': 'YYYY-MM-DD HH:mm:ss',\n    'dateTimeFormatWithoutSeconds': 'YYYY-MM-DD HH:mm',\n\n    'daterange.dialog.cancel': 'Close',\n    'daterange.dialog.clear': 'Clear',\n    'daterange.dialog.ok': 'Confirm',\n    'daterange.end.empty': 'No end date',\n    'daterange.invalid.label': ' ',\n    'daterange.invalid.msg': 'Invalid date format',\n    'daterange.label.end': 'Until date',\n    'daterange.label.start': 'From date',\n    'daterange.start.empty': 'No start date',\n\n    'false': 'false',\n\n    'landing.empty': 'You are not assigned any responsibilities in this application.',\n    'landing.loggedOut': 'You need to sign in before using the application',\n    'landing.welcome': 'You are using ActiveAnno. See your areas of responsibility here.',\n\n    'language': 'Language',\n    'language.de': 'German',\n    'language.en': 'English',\n\n    'login.defaultUserName': 'user',\n    'login.error': 'Login unsuccessful',\n    'login.greeting': 'Hello',\n    'login.name': 'User',\n    'login.password': 'Password',\n    'login.signIn': 'Login',\n    'login.signOut': 'Logout',\n    'login.success': 'Login successful',\n    'login.username': 'Username',\n\n    'manage.body': 'Create and edit project projects',\n    'manage.project': 'Project',\n    'manage.project.new': 'New project',\n    'manage.projects': 'Projects',\n    'manage.project.edit': 'Edit',\n    'manage.project.generateAnnotations': 'Generate annotations',\n    'manage.project.generateAnnotations.updated': 'Updated',", "func_src_after": "    'card.spanInteractionTitle': 'Annotate text segments',\n    'card.steps': 'steps',\n    'card.tagHint': 'Start writing for suggestions',\n\n    'curate.body': 'Curate',\n    'curate.description': 'Curate documents',\n    'curate.name': 'Curate',\n\n    'datapanel.defaultTitle': 'Document details',\n\n    'dateTimeFormat': 'YYYY-MM-DD HH:mm:ss',\n    'dateTimeFormatWithoutSeconds': 'YYYY-MM-DD HH:mm',\n\n    'daterange.dialog.cancel': 'Close',\n    'daterange.dialog.clear': 'Clear',\n    'daterange.dialog.ok': 'Confirm',\n    'daterange.end.empty': 'No end date',\n    'daterange.invalid.label': ' ',\n    'daterange.invalid.msg': 'Invalid date format',\n    'daterange.label.end': 'Until date',\n    'daterange.label.start': 'From date',\n    'daterange.start.empty': 'No start date',\n\n    'false': 'false',\n\n    'landing.empty': 'You are not assigned any responsibilities in this application.',\n    'landing.loggedOut': 'You need to sign in before using the application',\n    'landing.welcome': 'You are using ActiveAnno. See your areas of responsibility here.',\n\n    'language': 'Language',\n    'language.de': 'German',\n    'language.en': 'English',\n\n    'login.defaultUserName': 'user',\n    'login.error': 'Login unsuccessful',\n    'login.greeting': 'Hello',\n    'login.name': 'User',\n    'login.password': 'Password',\n    'login.signIn': 'Login',\n    'login.signOut': 'Logout',\n    'login.success': 'Login successful',\n    'login.username': 'Username',\n\n    'manage.body': 'Create and edit project projects',\n    'manage.project': 'Project',\n    'manage.project.new': 'New project',\n    'manage.projects': 'Projects',\n    'manage.project.edit': 'Edit',\n    'manage.project.generateAnnotations': 'Generate annotations',\n    'manage.project.generateAnnotations.updated': 'Updated',", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3124, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      // Try deleting Upload\n      request(app).delete('/api/uploads/' + uploadObj._id)\n        .expect(403)\n        .end(function (uploadDeleteErr, uploadDeleteRes) {\n          // Set message assertion\n          (uploadDeleteRes.body.message).should.match('User is not authorized');\n\n          // Handle Upload error error\n          done(uploadDeleteErr);\n        });\n\n    });\n  });\n\n  it('should be able to get a single Upload that has an orphaned user reference', function (done) {\n    // Create orphan user creds\n    var _creds = {\n      username: 'orphan',\n      password: 'M3@n.jsI$Aw3$0m3'\n    };\n\n    // Create orphan user\n    var _orphan = new User({\n      firstName: 'Full',\n      lastName: 'Name',\n      displayName: 'Full Name',\n      email: 'orphan@test.com',\n      username: _creds.username,\n      password: _creds.password,\n      provider: 'local'\n    });\n\n    _orphan.save(function (err, orphan) {\n      // Handle save error\n      if (err) {\n        return done(err);\n      }\n\n      agent.post('/api/auth/signin')\n        .send(_creds)\n        .expect(200)\n        .end(function (signinErr, signinRes) {\n          // Handle signin error\n          if (signinErr) {\n            return done(signinErr);\n          }\n\n          // Get the userId\n          var orphanId = orphan._id;\n", "func_src_after": "      // Try deleting Upload\n      request(app).delete('/api/uploads/' + uploadObj._id)\n        .expect(403)\n        .end(function (uploadDeleteErr, uploadDeleteRes) {\n          // Set message assertion\n          (uploadDeleteRes.body.message).should.match('User is not authorized');\n\n          // Handle Upload error error\n          done(uploadDeleteErr);\n        });\n\n    });\n  });\n\n  it('should be able to get a single Upload that has an orphaned user reference', function (done) {\n    // Create orphan user creds\n    var _creds = {\n      username: 'orphan',\n      password: 'M3@n.jsI$Aw3$0m3'\n    };\n\n    // Create orphan user\n    var _orphan = new User({\n      firstName: 'Full',\n      lastName: 'Name',\n      displayName: 'Full Name',\n      email: '<EMAIL>',\n      username: _creds.username,\n      password: _creds.password,\n      provider: 'local'\n    });\n\n    _orphan.save(function (err, orphan) {\n      // Handle save error\n      if (err) {\n        return done(err);\n      }\n\n      agent.post('/api/auth/signin')\n        .send(_creds)\n        .expect(200)\n        .end(function (signinErr, signinRes) {\n          // Handle signin error\n          if (signinErr) {\n            return done(signinErr);\n          }\n\n          // Get the userId\n          var orphanId = orphan._id;\n", "line_changes": {"deleted": [{"line_no": 27, "char_start": 741, "char_end": 773, "line": "      email: 'orphan@test.com',\n"}], "added": [{"line_no": 28, "char_start": 741, "char_end": 765, "line": "      email: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 741, "char_end": 773, "chars": "      email: 'orphan@test.com',\n"}], "added": [{"char_start": 741, "char_end": 765, "chars": "      email: '<EMAIL>',\n"}]}}
{"func_name": 3154, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  it('should deny to delete user with wrong password parameter', function () {\n    return chakram.delete(`${BASE_URL}/users/me`, { password: `${valid_user.password}hallo` }, { headers: { 'Authorization': `Bearer ${jwt}` } })\n      .then(function (response) {\n        expect(response).to.have.status(403);\n        expect(response).to.have.header('content-type', 'application/json; charset=utf-8');\n        expect(response).to.have.json('message', 'Password incorrect');\n\n        return chakram.wait();\n      });\n  });\n\n  it('should allow to delete user with correct password parameter', function () {\n    return chakram.delete(`${BASE_URL}/users/me`, { password: valid_user.password }, { headers: { 'Authorization': `Bearer ${jwt}` } })\n      .then(function (response) {\n        expect(response).to.have.status(200);\n\n        return chakram.post(`${BASE_URL}/users/sign-in`, valid_user);\n      })\n      .then(function (response) {\n        expect(response).to.have.status(403);\n\n        return chakram.get(`${BASE_URL}/stats`, { headers: { 'x-apicache-bypass': true } });\n      })\n      .then(function (response) {\n        expect(response).status(200);\n        const [boxes, measurements] = response.body;\n\n        expect(boxes).to.be.below(num_boxes_before);\n        expect(measurements).to.be.below(num_measurements_before);\n\n        return chakram.wait();\n      });\n  });\n\n  it('should allow to delete a user with password leading and trailing spaces', function () {\n    return chakram.post(`${BASE_URL}/users/register`, { name: 'spaces_tester2', password: ' leading and trailing spaces ', email: 'leading_spacesaddress2@email.com' })\n      .then(function (response) {\n        expect(response).to.have.status(201);\n        expect(response).to.have.header('content-type', 'application/json; charset=utf-8');\n        expect(response.body.token).to.exist;\n\n        return chakram.delete(`${BASE_URL}/users/me`, { password: ' leading and trailing spaces ' }, { headers: { 'Authorization': `Bearer ${response.body.token}` } });\n      })\n      .then(function (response) {\n        expect(response).to.have.status(200);\n\n        return chakram.post(`${BASE_URL}/users/sign-in`, valid_user);\n      })\n      .then(function (response) {\n        expect(response).to.have.status(403);", "func_src_after": "  it('should deny to delete user with wrong password parameter', function () {\n    return chakram.delete(`${BASE_URL}/users/me`, { password: `${valid_user.password}hallo` }, { headers: { 'Authorization': `Bearer ${jwt}` } })\n      .then(function (response) {\n        expect(response).to.have.status(403);\n        expect(response).to.have.header('content-type', 'application/json; charset=utf-8');\n        expect(response).to.have.json('message', 'Password incorrect');\n\n        return chakram.wait();\n      });\n  });\n\n  it('should allow to delete user with correct password parameter', function () {\n    return chakram.delete(`${BASE_URL}/users/me`, { password: valid_user.password }, { headers: { 'Authorization': `Bearer ${jwt}` } })\n      .then(function (response) {\n        expect(response).to.have.status(200);\n\n        return chakram.post(`${BASE_URL}/users/sign-in`, valid_user);\n      })\n      .then(function (response) {\n        expect(response).to.have.status(403);\n\n        return chakram.get(`${BASE_URL}/stats`, { headers: { 'x-apicache-bypass': true } });\n      })\n      .then(function (response) {\n        expect(response).status(200);\n        const [boxes, measurements] = response.body;\n\n        expect(boxes).to.be.below(num_boxes_before);\n        expect(measurements).to.be.below(num_measurements_before);\n\n        return chakram.wait();\n      });\n  });\n\n  it('should allow to delete a user with password leading and trailing spaces', function () {\n    return chakram.post(`${BASE_URL}/users/register`, { name: 'spaces_tester2', password: ' leading and trailing spaces ', email: '<EMAIL>' })\n      .then(function (response) {\n        expect(response).to.have.status(201);\n        expect(response).to.have.header('content-type', 'application/json; charset=utf-8');\n        expect(response.body.token).to.exist;\n\n        return chakram.delete(`${BASE_URL}/users/me`, { password: ' leading and trailing spaces ' }, { headers: { 'Authorization': `Bearer ${response.body.token}` } });\n      })\n      .then(function (response) {\n        expect(response).to.have.status(200);\n\n        return chakram.post(`${BASE_URL}/users/sign-in`, valid_user);\n      })\n      .then(function (response) {\n        expect(response).to.have.status(403);", "line_changes": {"deleted": [{"line_no": 36, "char_start": 1468, "char_end": 1636, "line": "    return chakram.post(`${BASE_URL}/users/register`, { name: 'spaces_tester2', password: ' leading and trailing spaces ', email: 'leading_spacesaddress2@email.com' })\n"}], "added": [{"line_no": 37, "char_start": 1468, "char_end": 1611, "line": "    return chakram.post(`${BASE_URL}/users/register`, { name: 'spaces_tester2', password: ' leading and trailing spaces ', email: '<EMAIL>' })\n"}]}, "char_changes": {"deleted": [{"char_start": 1468, "char_end": 1636, "chars": "    return chakram.post(`${BASE_URL}/users/register`, { name: 'spaces_tester2', password: ' leading and trailing spaces ', email: 'leading_spacesaddress2@email.com' })\n"}], "added": [{"char_start": 1468, "char_end": 1611, "chars": "    return chakram.post(`${BASE_URL}/users/register`, { name: 'spaces_tester2', password: ' leading and trailing spaces ', email: '<EMAIL>' })\n"}]}}
{"func_name": 3170, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      email: 'test@test.com',\n      username: credentials.username,\n      password: credentials.password,\n      provider: 'local'\n    });\n\n    shipping = new Shipping({\n      shipping: {\n        detail: 'วันอังคาร, 1 - วัน อังคาร, 2 ส.ค. 2017 ฟรี',\n        name: 'ส่งแบบส่งด่วน',\n        price: 0\n      }\n    });\n\n    shop = new Shop({\n      name: 'Shop name'\n    });\n\n    product = new Product({\n      name: 'Crossfit WorldWide Event',\n      image: 'https://images-eu.ssl-images-amazon.com/images/G/02/AMAZON-FASHION/2016/SHOES/SPORT/MISC/Nikemobilefootball',\n      price: 20000,\n      promotionprice: 18000,\n      percentofdiscount: 10,\n      currency: 'THB',\n      shop: shop,\n      shippings: [shipping]\n    });\n\n    // Save a user to the test db and create new Cart\n    user.save(function () {\n      shipping.save(function () {\n        shop.save(function () {\n          product.save(function () {\n            cart = {\n              items: [{\n                product: product,\n                qty: 1,\n                amount: 20000,\n                discount: 2000,\n                totalamount: 18000\n              }],\n              amount: 20000,\n              discount: 2000,\n              totalamount: 18000\n            };\n            done();\n          });\n        });\n      });", "func_src_after": "      email: '<EMAIL>',\n      username: credentials.username,\n      password: credentials.password,\n      provider: 'local'\n    });\n\n    shipping = new Shipping({\n      shipping: {\n        detail: 'วันอังคาร, 1 - วัน อังคาร, 2 ส.ค. 2017 ฟรี',\n        name: 'ส่งแบบส่งด่วน',\n        price: 0\n      }\n    });\n\n    shop = new Shop({\n      name: 'Shop name'\n    });\n\n    product = new Product({\n      name: 'Crossfit WorldWide Event',\n      image: 'https://images-eu.ssl-images-amazon.com/images/G/02/AMAZON-FASHION/2016/SHOES/SPORT/MISC/Nikemobilefootball',\n      price: 20000,\n      promotionprice: 18000,\n      percentofdiscount: 10,\n      currency: 'THB',\n      shop: shop,\n      shippings: [shipping]\n    });\n\n    // Save a user to the test db and create new Cart\n    user.save(function () {\n      shipping.save(function () {\n        shop.save(function () {\n          product.save(function () {\n            cart = {\n              items: [{\n                product: product,\n                qty: 1,\n                amount: 20000,\n                discount: 2000,\n                totalamount: 18000\n              }],\n              amount: 20000,\n              discount: 2000,\n              totalamount: 18000\n            };\n            done();\n          });\n        });\n      });", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 30, "line": "      email: 'test@test.com',\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 24, "line": "      email: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 30, "chars": "      email: 'test@test.com',\n"}], "added": [{"char_start": 0, "char_end": 24, "chars": "      email: '<EMAIL>',\n"}]}}
{"func_name": 3173, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  }\n\n  var linksFromToDate = [];\n  linksFromTo.forEach(rowList => {\n    if (rowList.Date == \"1/6/2014\") {\n      linksFromToDate.push(rowList)\n    }\n  })\n\n  var uniqueFrom = [];\n  let count = 0;\n  linksFromToDate.filter(element => {\n    const isDuplicate = uniqueFrom.includes(element.From);\n    if (!isDuplicate) {\n      uniqueFrom.push(element.From);\n      return true\n    }\n  })\n  console.log(\"uniqueFrom: \", uniqueFrom);\n  console.log(\"indexOf(): \", uniqueFrom.indexOf(\"Orhan.Strum@gastech.com.kronos\"))\n\n  var len = linksFromToDate.length;\n  let ToDistance = [];\n  for (let i=0; i<len; i++) {\n    ToDistance[i] = [];\n    for (let j=0; j<len; j++) {\n      // Preprocess strings and combine words to a unique collection\n      var str1Words = linksFromToDate[i][\"To\"].trim().split(' ').map(omitPunctuations).map(toLowercase);\n      var str2Words = linksFromToDate[j][\"To\"].trim().split(' ').map(omitPunctuations).map(toLowercase);\n      var allWordsUnique = Array.from(new Set(str1Words.concat(str2Words)));\n\n      // Calculate IF-IDF algorithm vectors\n      var str1Vector = calcTfIdfVectorForDoc(str1Words, [str2Words], allWordsUnique);\n      var str2Vector = calcTfIdfVectorForDoc(str2Words, [str1Words], allWordsUnique);\n\n      ToDistance[i][j] = 1.0 - cosineSimilarity(str1Vector, str2Vector);\n    }\n  }\n  console.log(\"ToDistance: \", ToDistance)\n\n  tsne.initDataDist(ToDistance);\n\n  for(var k = 0; k < 6000; k++) {\n    tsne.step(); // every time you call this, solution gets better\n  }\n\n  var Y = tsne.getSolution(); // Y is an array of 2-D points that you can plot\n\n  console.log(\"Y: \", Y)\n", "func_src_after": "  }\n\n  var linksFromToDate = [];\n  linksFromTo.forEach(rowList => {\n    if (rowList.Date == \"1/6/2014\") {\n      linksFromToDate.push(rowList)\n    }\n  })\n\n  var uniqueFrom = [];\n  let count = 0;\n  linksFromToDate.filter(element => {\n    const isDuplicate = uniqueFrom.includes(element.From);\n    if (!isDuplicate) {\n      uniqueFrom.push(element.From);\n      return true\n    }\n  })\n  console.log(\"uniqueFrom: \", uniqueFrom);\n  console.log(\"indexOf(): \", uniqueFrom.indexOf(\"<EMAIL>.kronos\"))\n\n  var len = linksFromToDate.length;\n  let ToDistance = [];\n  for (let i=0; i<len; i++) {\n    ToDistance[i] = [];\n    for (let j=0; j<len; j++) {\n      // Preprocess strings and combine words to a unique collection\n      var str1Words = linksFromToDate[i][\"To\"].trim().split(' ').map(omitPunctuations).map(toLowercase);\n      var str2Words = linksFromToDate[j][\"To\"].trim().split(' ').map(omitPunctuations).map(toLowercase);\n      var allWordsUnique = Array.from(new Set(str1Words.concat(str2Words)));\n\n      // Calculate IF-IDF algorithm vectors\n      var str1Vector = calcTfIdfVectorForDoc(str1Words, [str2Words], allWordsUnique);\n      var str2Vector = calcTfIdfVectorForDoc(str2Words, [str1Words], allWordsUnique);\n\n      ToDistance[i][j] = 1.0 - cosineSimilarity(str1Vector, str2Vector);\n    }\n  }\n  console.log(\"ToDistance: \", ToDistance)\n\n  tsne.initDataDist(ToDistance);\n\n  for(var k = 0; k < 6000; k++) {\n    tsne.step(); // every time you call this, solution gets better\n  }\n\n  var Y = tsne.getSolution(); // Y is an array of 2-D points that you can plot\n\n  console.log(\"Y: \", Y)\n", "line_changes": {"deleted": [{"line_no": 20, "char_start": 424, "char_end": 507, "line": "  console.log(\"indexOf(): \", uniqueFrom.indexOf(\"Orhan.Strum@gastech.com.kronos\"))\n"}], "added": [{"line_no": 21, "char_start": 424, "char_end": 491, "line": "  console.log(\"indexOf(): \", uniqueFrom.indexOf(\"<EMAIL>.kronos\"))\n"}]}, "char_changes": {"deleted": [{"char_start": 424, "char_end": 507, "chars": "  console.log(\"indexOf(): \", uniqueFrom.indexOf(\"Orhan.Strum@gastech.com.kronos\"))\n"}], "added": [{"char_start": 424, "char_end": 491, "chars": "  console.log(\"indexOf(): \", uniqueFrom.indexOf(\"<EMAIL>.kronos\"))\n"}]}}
{"func_name": 3186, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * @fileoverview Test user events for bar chart.\n * @author NHN.\n *         FE Development Lab <dl_javascript@nhn.com>\n */\nimport dom from '../../src/js/helpers/domHandler';\nimport chart from '../../src/js/index';\nconst barChartFactory = chart.barChart;\n\ndescribe('Test user events for bar chart', () => {\n  const rawData = {\n    categories: ['June', 'July', 'Aug', 'Sep', 'Oct', 'Nov'],\n    series: [\n      {\n        name: 'Budget',\n        data: [5000, 3000, 5000, 7000, 6000, 4000]\n      },\n      {\n        name: 'Income',\n        data: [8000, 1000, 7000, 2000, 5000, 3000]\n      },\n      {\n        name: 'Expenses',\n        data: [4000, 4000, 6000, 3000, 4000, 5000]\n      },\n      {\n        name: 'Debt',\n        data: [6000, 3000, 3000, 1000, 2000, 4000]\n      }\n    ]\n  };\n  let barChart;\n\n  beforeEach(() => {\n    const container = dom.create('DIV');\n\n    barChart = barChartFactory(container, rawData, {\n      series: {\n        allowSelect: true\n      }\n    });\n  });\n\n  describe('selectSeries', () => {\n    it('select series', done => {\n      const mouseEventDetector = barChart.componentManager.get('mouseEventDetector');\n\n      mouseEventDetector.mouseEventDetectorContainer = jasmine.createSpyObj(\n        'mouseEventDetectorContainer',\n        ['getBoundingClientRect']", "func_src_after": "/**\n * @fileoverview Test user events for bar chart.\n * @author NHN.\n *         FE Development Lab <<EMAIL>>\n */\nimport dom from '../../src/js/helpers/domHandler';\nimport chart from '../../src/js/index';\nconst barChartFactory = chart.barChart;\n\ndescribe('Test user events for bar chart', () => {\n  const rawData = {\n    categories: ['June', 'July', 'Aug', 'Sep', 'Oct', 'Nov'],\n    series: [\n      {\n        name: 'Budget',\n        data: [5000, 3000, 5000, 7000, 6000, 4000]\n      },\n      {\n        name: 'Income',\n        data: [8000, 1000, 7000, 2000, 5000, 3000]\n      },\n      {\n        name: 'Expenses',\n        data: [4000, 4000, 6000, 3000, 4000, 5000]\n      },\n      {\n        name: 'Debt',\n        data: [6000, 3000, 3000, 1000, 2000, 4000]\n      }\n    ]\n  };\n  let barChart;\n\n  beforeEach(() => {\n    const container = dom.create('DIV');\n\n    barChart = barChartFactory(container, rawData, {\n      series: {\n        allowSelect: true\n      }\n    });\n  });\n\n  describe('selectSeries', () => {\n    it('select series', done => {\n      const mouseEventDetector = barChart.componentManager.get('mouseEventDetector');\n\n      mouseEventDetector.mouseEventDetectorContainer = jasmine.createSpyObj(\n        'mouseEventDetectorContainer',\n        ['getBoundingClientRect']", "line_changes": {"deleted": [{"line_no": 4, "char_start": 69, "char_end": 123, "line": " *         FE Development Lab <dl_javascript@nhn.com>\n"}], "added": [{"line_no": 5, "char_start": 69, "char_end": 109, "line": " *         FE Development Lab <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 69, "char_end": 123, "chars": " *         FE Development Lab <dl_javascript@nhn.com>\n"}], "added": [{"char_start": 69, "char_end": 109, "chars": " *         FE Development Lab <<EMAIL>>\n"}]}}
{"func_name": 3198, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      environmentName: 'pr1',\n      serverRole: {\n        SecurityZone: 'Secure',\n        ServerRoleName: 'Web',\n        ContactEmailTag: 'test@email.com',\n        ScheduleTag: null,\n      },\n      cluster: {\n        Name: 'Tango',\n      },\n    };\n\n    // Act\n    var target = proxyquire('../../../../modules/provisioning/autoScaling/tagsProvider', {\n      '../namingConventionProvider': namingConventionProviderMock,\n    });\n    var promise = target.get(configuration);\n\n    // Assert\n    return promise.then(tags => tags.Schedule.should.be.equal(''));\n\n  });\n\n  it(\"an error should be raised when 'ContactEmailTag' property is missing in configuration\", () => {\n\n    // Arrange\n    var namingConventionProviderMock = {\n      getRoleName: sinon.stub(),\n    };\n\n    var configuration = {\n      environmentTypeName: 'Prod',\n      environmentName: 'pr1',\n      serverRole: {\n        SecurityZone: 'Secure',\n        ServerRoleName: 'Web',\n        ContactEmailTag: null,\n        ScheduleTag: '247',\n      },\n      cluster: {\n        Name: 'Tango',\n      },\n    };\n\n    // Act\n    var target = proxyquire('../../../../modules/provisioning/autoScaling/tagsProvider', {\n      '../namingConventionProvider': namingConventionProviderMock,\n    });\n    var promise = target.get(configuration);\n", "func_src_after": "      environmentName: 'pr1',\n      serverRole: {\n        SecurityZone: 'Secure',\n        ServerRoleName: 'Web',\n        ContactEmailTag: '<EMAIL>',\n        ScheduleTag: null,\n      },\n      cluster: {\n        Name: 'Tango',\n      },\n    };\n\n    // Act\n    var target = proxyquire('../../../../modules/provisioning/autoScaling/tagsProvider', {\n      '../namingConventionProvider': namingConventionProviderMock,\n    });\n    var promise = target.get(configuration);\n\n    // Assert\n    return promise.then(tags => tags.Schedule.should.be.equal(''));\n\n  });\n\n  it(\"an error should be raised when 'ContactEmailTag' property is missing in configuration\", () => {\n\n    // Arrange\n    var namingConventionProviderMock = {\n      getRoleName: sinon.stub(),\n    };\n\n    var configuration = {\n      environmentTypeName: 'Prod',\n      environmentName: 'pr1',\n      serverRole: {\n        SecurityZone: 'Secure',\n        ServerRoleName: 'Web',\n        ContactEmailTag: null,\n        ScheduleTag: '247',\n      },\n      cluster: {\n        Name: 'Tango',\n      },\n    };\n\n    // Act\n    var target = proxyquire('../../../../modules/provisioning/autoScaling/tagsProvider', {\n      '../namingConventionProvider': namingConventionProviderMock,\n    });\n    var promise = target.get(configuration);\n", "line_changes": {"deleted": [{"line_no": 5, "char_start": 113, "char_end": 156, "line": "        ContactEmailTag: 'test@email.com',\n"}], "added": [{"line_no": 6, "char_start": 113, "char_end": 149, "line": "        ContactEmailTag: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 113, "char_end": 156, "chars": "        ContactEmailTag: 'test@email.com',\n"}], "added": [{"char_start": 113, "char_end": 149, "chars": "        ContactEmailTag: '<EMAIL>',\n"}]}}
{"func_name": 3209, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "'use strict';\n\nvar ASN1 = require('./asn1.js');\nvar Enc = require('./encoding.js');\nvar x509 = module.exports;\n\n// 1.2.840.10045.3.1.7\n// prime256v1 (ANSI X9.62 named elliptic curve)\nvar OBJ_ID_EC  = '06 08 2A8648CE3D030107'.replace(/\\s+/g, '').toLowerCase();\n// 1.3.132.0.34\n// secp384r1 (SECG (Certicom) named elliptic curve)\nvar OBJ_ID_EC_384 = '06 05 2B81040022'.replace(/\\s+/g, '').toLowerCase();\n// 1.2.840.10045.2.1\n// ecPublicKey (ANSI X9.62 public key type)\nvar OBJ_ID_EC_PUB = '06 07 2A8648CE3D0201'.replace(/\\s+/g, '').toLowerCase();\n\nx509.parseSec1 = function parseEcOnlyPrivkey(u8, jwk) {\n  var index = 7;\n  var len = 32;\n  var olen = OBJ_ID_EC.length/2;\n\n  if (\"P-384\" === jwk.crv) {\n    olen = OBJ_ID_EC_384.length/2;\n    index = 8;\n    len = 48;\n  }\n  if (len !== u8[index - 1]) {\n    throw new Error(\"Unexpected bitlength \" + len);\n  }\n\n  // private part is d\n  var d = u8.slice(index, index + len);\n  // compression bit index\n  var ci = index + len + 2 + olen + 2 + 3;\n  var c = u8[ci];\n  var x, y;\n\n  if (0x04 === c) {\n    y = u8.slice(ci + 1 + len, ci + 1 + len + len);\n  } else if (0x02 !== c) {\n    throw new Error(\"not a supported EC private key\");\n  }\n  x = u8.slice(ci + 1, ci + 1 + len);\n\n  return {\n    kty: jwk.kty\n  , crv: jwk.crv\n  , d: Enc.bufToUrlBase64(d)\n  //, dh: Enc.bufToHex(d)\n  , x: Enc.bufToUrlBase64(x)", "func_src_after": "'use strict';\n\nvar ASN1 = require('./asn1.js');\nvar Enc = require('./encoding.js');\nvar x509 = module.exports;\n\n// 1.2.840.10045.3.1.7\n// prime256v1 (ANSI X9.62 named elliptic curve)\nvar OBJ_ID_EC  = '06 08 2A8648CE3D030107'.replace(/\\s+/g, '').toLowerCase();\n// 1.3.132.0.34\n// secp384r1 (SECG (Certicom) named elliptic curve)\nvar OBJ_ID_EC_384 = '06 05 2B81040022'.replace(/\\s+/g, '').toLowerCase();\n// 1.2.840.10045.2.1\n// ecPublicKey (ANSI X9.62 public key type)\nvar OBJ_ID_EC_PUB = '06 07 2A8648CE3D0201'.replace(/\\s+/g, '').toLowerCase();\n\nx509.parseSec1 = function parseEcOnlyPrivkey(u8, jwk) {\n  var index = 7;\n  var len = 32;\n  var olen = OBJ_ID_EC.length/2;\n\n  if (\"P-384\" === jwk.crv) {\n    olen = OBJ_ID_EC_384.length/2;\n    index = 8;\n    len = 48;\n  }\n  if (len !== u8[index - 1]) {\n    throw new Error(\"Unexpected bitlength \" + len);\n  }\n\n  // private part is d\n  var d = u8.slice(index, index + len);\n  // compression bit index\n  var ci = index + len + 2 + olen + 2 + 3;\n  var c = u8[ci];\n  var x, y;\n\n  if (0x04 === c) {\n    y = u8.slice(ci + 1 + len, ci + 1 + len + len);\n  } else if (0x02 !== c) {\n    throw new Error(\"not a supported EC private key\");\n  }\n  x = u8.slice(ci + 1, ci + 1 + len);\n\n  return {\n    kty: jwk.kty\n  , crv: jwk.crv\n  , d: Enc.bufToUrlBase64(d)\n  //, dh: Enc.bufToHex(d)\n  , x: Enc.bufToUrlBase64(x)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3234, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "let express = require('express')\nlet apiRoutes = require(\"./routes\")\nlet bodyParser = require('body-parser')\nlet session = require('express-session')\nlet mongoose = require('mongoose')\n\nvar path = require('path')\nlet app = express()\n\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(express.static(path.join(__dirname, 'assets')))\napp.use(session({ secret: 'keyboard cat', cookie: { maxAge: null }}))\n\napp.set('view engine', 'pug')\napp.set('views', path.join(__dirname, 'views'))\n\nlet db_user = 'admin'\nlet db_pswd = 'admin'\nlet db_host = '127.0.0.1'\nlet db_port = '27017'\n\nmongoose.connect('mongodb://'+db_user+':'+db_pswd+'@'+db_host+':'+db_port+'/bookmark_db');\n\nvar db = mongoose.connection\n\nlet port = 8000\n\nlet server = app.listen(port, function () {\n\tapp.use('/', apiRoutes)\n})", "func_src_after": "let express = require('express')\nlet apiRoutes = require(\"./routes\")\nlet bodyParser = require('body-parser')\nlet session = require('express-session')\nlet mongoose = require('mongoose')\n\nvar path = require('path')\nlet app = express()\n\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(express.static(path.join(__dirname, 'assets')))\napp.use(session({ secret: 'keyboard cat', cookie: { maxAge: null }}))\n\napp.set('view engine', 'pug')\napp.set('views', path.join(__dirname, 'views'))\n\nlet db_user = 'admin'\nlet db_pswd = 'admin'\nlet db_host = '<IP-Address>'\nlet db_port = '27017'\n\nmongoose.connect('mongodb://'+db_user+':'+db_pswd+'@'+db_host+':'+db_port+'/bookmark_db');\n\nvar db = mongoose.connection\n\nlet port = 8000\n\nlet server = app.listen(port, function () {\n\tapp.use('/', apiRoutes)\n})", "line_changes": {"deleted": [{"line_no": 20, "char_start": 562, "char_end": 588, "line": "let db_host = '127.0.0.1'\n"}], "added": [{"line_no": 21, "char_start": 562, "char_end": 591, "line": "let db_host = '<IP-Address>'\n"}]}, "char_changes": {"deleted": [{"char_start": 562, "char_end": 588, "chars": "let db_host = '127.0.0.1'\n"}], "added": [{"char_start": 562, "char_end": 591, "chars": "let db_host = '<IP-Address>'\n"}]}}
{"func_name": 3243, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import test from 'ava';\nimport LIVR from '../lib/LIVR';\n\nconst validator = new LIVR.Validator(\n    {\n        code: 'required',\n        password: ['required', { min_length: 3 }],\n        list: { list_of: ['string'] },\n        address: {\n            nested_object: {\n                street: { min_length: 5 }\n            }\n        }\n    },\n    true\n);\n\ntest('NEGATIVE: Validate data with automatic trim', t => {\n    const output = validator.validate({\n        code: '  ',\n        password: ' 12  ',\n        address: {\n            street: '  hell '\n        }\n    });\n\n    t.true(!output, 'should return false due to validation errors for trimmed values');\n\n    t.deepEqual(\n        validator.getErrors(),\n        {\n            code: 'REQUIRED',\n            password: 'TOO_SHORT',\n            address: {\n                street: 'TOO_SHORT'\n            }\n        },\n        'Should contain error codes'\n    );\n});\n\ntest('POSITIVE: Validate data with automatic trim', t => {\n    const cleanData = validator.validate({\n        code: ' A ',\n        password: ' 123  ',\n        list: [' aaa ', ' bbb '],\n        address: {\n            street: '  hello '\n        }\n    });", "func_src_after": "import test from 'ava';\nimport LIVR from '../lib/LIVR';\n\nconst validator = new LIVR.Validator(\n    {\n        code: 'required',\n        password: ['required', { min_length: 3 }],\n        list: { list_of: ['string'] },\n        address: {\n            nested_object: {\n                street: { min_length: 5 }\n            }\n        }\n    },\n    true\n);\n\ntest('NEGATIVE: Validate data with automatic trim', t => {\n    const output = validator.validate({\n        code: '  ',\n        password: ' 12  ',\n        address: {\n            street: '  hell '\n        }\n    });\n\n    t.true(!output, 'should return false due to validation errors for trimmed values');\n\n    t.deepEqual(\n        validator.getErrors(),\n        {\n            code: 'REQUIRED',\n            password: 'TOO_SHORT',\n            address: {\n                street: 'TOO_SHORT'\n            }\n        },\n        'Should contain error codes'\n    );\n});\n\ntest('POSITIVE: Validate data with automatic trim', t => {\n    const cleanData = validator.validate({\n        code: ' A ',\n        password: ' 123  ',\n        list: [' aaa ', ' bbb '],\n        address: {\n            street: '  hello '\n        }\n    });", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3245, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import React, { Component } from 'react';\nimport { View, Image, Text, ScrollView, StyleSheet, TouchableOpacity, TextInput, Alert, FlatList } from 'react-native';\nimport { Button } from 'native-base'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Font from 'react-native-vector-icons/FontAwesome5'\nimport Ant from 'react-native-vector-icons/AntDesign'\nimport moment from 'moment';\nimport { SearchBar } from 'react-native-elements'\nimport { Share } from 'react-native';\nimport Logo from '../../images/logo.png';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nexport default class BuddiesListScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            userID:\"\",\n            data: \"\",\n            userList:\"\",\n            searchWord:\"\",\n            testing:0,\n            spinner:false,\n        };\n        const getData = async () => {\n\n            //using localhost on IOS and using 10.0.2.2 on Android\n            const baseUrl = Platform.OS === 'android' ? 'http://10.0.2.2:8000' : 'http://localhost';\n            const IP = 'https://socialrunningapp.herokuapp.com';\n\n            try {\n                const userJson = await AsyncStorage.getItem('@userJson')\n                if (userJson !== null) {\n                    const user = JSON.parse(userJson);\n                    this.setState({\n                        userID: user.id,\n                    });\n                }\n\n            } catch (e) {\n                console.log(e);\n            }\n            if(this.state.userID.length!=0){\n                //change spinner to visible\n                this.setState({spinner: true});\n                fetch(IP + '/api/buddy/buddyList/'+this.state.userID, {\n                    headers: {", "func_src_after": "import React, { Component } from 'react';\nimport { View, Image, Text, ScrollView, StyleSheet, TouchableOpacity, TextInput, Alert, FlatList } from 'react-native';\nimport { Button } from 'native-base'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Font from 'react-native-vector-icons/FontAwesome5'\nimport Ant from 'react-native-vector-icons/AntDesign'\nimport moment from 'moment';\nimport { SearchBar } from 'react-native-elements'\nimport { Share } from 'react-native';\nimport Logo from '../../images/logo.png';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nexport default class BuddiesListScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            userID:\"\",\n            data: \"\",\n            userList:\"\",\n            searchWord:\"\",\n            testing:0,\n            spinner:false,\n        };\n        const getData = async () => {\n\n            //using localhost on IOS and using <IP-Address> on Android\n            const baseUrl = Platform.OS === 'android' ? 'http://<IP-Address>:8000' : 'http://localhost';\n            const IP = 'https://socialrunningapp.herokuapp.com';\n\n            try {\n                const userJson = await AsyncStorage.getItem('@userJson')\n                if (userJson !== null) {\n                    const user = JSON.parse(userJson);\n                    this.setState({\n                        userID: user.id,\n                    });\n                }\n\n            } catch (e) {\n                console.log(e);\n            }\n            if(this.state.userID.length!=0){\n                //change spinner to visible\n                this.setState({spinner: true});\n                fetch(IP + '/api/buddy/buddyList/'+this.state.userID, {\n                    headers: {", "line_changes": {"deleted": [{"line_no": 30, "char_start": 1065, "char_end": 1132, "line": "            //using localhost on IOS and using 10.0.2.2 on Android\n"}, {"line_no": 32, "char_start": 1136, "char_end": 1237, "line": "            const baseUrl = Platform.OS === 'android' ? 'http://10.0.2.2:8000' : 'http://localhost';\n"}], "added": [{"line_no": 31, "char_start": 1065, "char_end": 1136, "line": "            //using localhost on IOS and using <IP-Address> on Android\n"}, {"line_no": 33, "char_start": 1136, "char_end": 1241, "line": "            const baseUrl = Platform.OS === 'android' ? 'http://<IP-Address>:8000' : 'http://localhost';\n"}]}, "char_changes": {"deleted": [{"char_start": 1065, "char_end": 1132, "chars": "            //using localhost on IOS and using 10.0.2.2 on Android\n"}, {"char_start": 1136, "char_end": 1237, "chars": "            const baseUrl = Platform.OS === 'android' ? 'http://10.0.2.2:8000' : 'http://localhost';\n"}], "added": [{"char_start": 1065, "char_end": 1136, "chars": "            //using localhost on IOS and using <IP-Address> on Android\n"}, {"char_start": 1136, "char_end": 1241, "chars": "            const baseUrl = Platform.OS === 'android' ? 'http://<IP-Address>:8000' : 'http://localhost';\n"}]}}
{"func_name": 3255, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "module.exports = {\n  title: 'Coastal Image Labeler',\n  tagline: '',\n\n  url: 'https://uncg-daisy.github.io/Coastal-Image-Labeler/',\n  baseUrl: '/Coastal-Image-Labeler/',\n  projectName: 'Coastal-Image-Labeler', // Usually your repo name.\n  organizationName: 'UNCG-DAISY', // Usually your GitHub org/user name.\n\n  favicon: 'img/favicon.ico',\n\n\n  themeConfig: {\n    defaultDarkMode: true,\n    algolia: {\n      apiKey: '29427c1dcc88f48e3a32542fcee50c8c',\n      indexName: 'coastal-image-labeler',\n      searchParameters: {}, \n    },\n    navbar: {\n      title: 'Coastal Image Labeler',\n      logo: {\n        alt: 'My Site Logo',\n        src: 'img/logo.svg',\n      },\n      links: [\n        {\n          to: 'docs/',\n          activeBasePath: 'docs',\n          label: 'Docs',\n          position: 'left',\n        },\n        {to: 'blog', label: 'Blog', position: 'left'},\n        {\n          href: 'https://github.com/UNCG-DAISY/Coastal-Image-Labeler',\n          label: 'GitHub',\n          position: 'right',\n        },\n      ],\n    },\n    footer: {\n      style: 'dark',\n      links: [\n        {\n          title: 'Docs',\n          items: [\n            {\n              label: 'Documentation',\n              to: 'docs/',\n            },", "func_src_after": "module.exports = {\n  title: 'Coastal Image Labeler',\n  tagline: '',\n\n  url: 'https://uncg-daisy.github.io/Coastal-Image-Labeler/',\n  baseUrl: '/Coastal-Image-Labeler/',\n  projectName: 'Coastal-Image-Labeler', // Usually your repo name.\n  organizationName: 'UNCG-DAISY', // Usually your GitHub org/user name.\n\n  favicon: 'img/favicon.ico',\n\n\n  themeConfig: {\n    defaultDarkMode: true,\n    algolia: {\n      apiKey: '29427c1dcc88f48e3a32542fcee50c8c',\n      indexName: 'coastal-image-labeler',\n      searchParameters: {}, \n    },\n    navbar: {\n      title: 'Coastal Image Labeler',\n      logo: {\n        alt: 'My Site Logo',\n        src: 'img/logo.svg',\n      },\n      links: [\n        {\n          to: 'docs/',\n          activeBasePath: 'docs',\n          label: 'Docs',\n          position: 'left',\n        },\n        {to: 'blog', label: 'Blog', position: 'left'},\n        {\n          href: 'https://github.com/UNCG-DAISY/Coastal-Image-Labeler',\n          label: 'GitHub',\n          position: 'right',\n        },\n      ],\n    },\n    footer: {\n      style: 'dark',\n      links: [\n        {\n          title: 'Docs',\n          items: [\n            {\n              label: 'Documentation',\n              to: 'docs/',\n            },", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3268, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar euclideanDistance = _interopDefault(require('ml-distance-euclidean'));\n\n/*\n * Original code from:\n *\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */\n\nfunction Node(obj, dimension, parent) {\n    this.obj = obj;\n    this.left = null;\n    this.right = null;\n    this.parent = parent;\n    this.dimension = dimension;\n}\n\nclass KDTree {\n    constructor(points, metric) {\n        // If points is not an array, assume we're loading a pre-built tree\n        if (!Array.isArray(points)) {\n            this.dimensions = points.dimensions;\n            this.root = points;\n            restoreParent(this.root);\n        } else {\n            this.dimensions = new Array(points[0].length);\n            for (var i = 0; i < this.dimensions.length; i++) {\n                this.dimensions[i] = i;\n            }\n            this.root = buildTree(points, 0, null, this.dimensions);\n        }\n        this.metric = metric;\n    }\n\n    // Convert to a JSON serializable structure; this just requires removing\n    // the `parent` property\n    toJSON() {\n        const result = toJSONImpl(this.root, true);\n        result.dimensions = this.dimensions;\n        return result;", "func_src_after": "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar euclideanDistance = _interopDefault(require('ml-distance-euclidean'));\n\n/*\n * Original code from:\n *\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <<EMAIL>>, 2012\n * @author Martin Kleppe <<EMAIL>>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */\n\nfunction Node(obj, dimension, parent) {\n    this.obj = obj;\n    this.left = null;\n    this.right = null;\n    this.parent = parent;\n    this.dimension = dimension;\n}\n\nclass KDTree {\n    constructor(points, metric) {\n        // If points is not an array, assume we're loading a pre-built tree\n        if (!Array.isArray(points)) {\n            this.dimensions = points.dimensions;\n            this.root = points;\n            restoreParent(this.root);\n        } else {\n            this.dimensions = new Array(points[0].length);\n            for (var i = 0; i < this.dimensions.length; i++) {\n                this.dimensions[i] = i;\n            }\n            this.root = buildTree(points, 0, null, this.dimensions);\n        }\n        this.metric = metric;\n    }\n\n    // Convert to a JSON serializable structure; this just requires removing\n    // the `parent` property\n    toJSON() {\n        const result = toJSONImpl(this.root, true);\n        result.dimensions = this.dimensions;\n        return result;", "line_changes": {"deleted": [{"line_no": 14, "char_start": 323, "char_end": 375, "line": " * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n"}, {"line_no": 15, "char_start": 323, "char_end": 375, "line": " * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n"}], "added": [{"line_no": 16, "char_start": 323, "char_end": 364, "line": " * @author Mircea Pricop <<EMAIL>>, 2012\n"}, {"line_no": 17, "char_start": 364, "char_end": 405, "line": " * @author Martin Kleppe <<EMAIL>>, 2012\n"}]}, "char_changes": {"deleted": [{"char_start": 323, "char_end": 375, "chars": " * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n"}, {"char_start": 323, "char_end": 375, "chars": " * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n"}], "added": [{"char_start": 323, "char_end": 364, "chars": " * @author Mircea Pricop <<EMAIL>>, 2012\n"}, {"char_start": 364, "char_end": 405, "chars": " * @author Martin Kleppe <<EMAIL>>, 2012\n"}]}}
{"func_name": 3270, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            password: 'required|min:6',\n            password_confirmation: 'required|min:6'\n        });\n        this.state = {\n            credentials: {\n                name: '',\n                email: '',\n                password: '',\n                password_confirmation: ''\n            },\n            responseError: {\n                isError: false,\n                code: '',\n                text: ''\n            },\n            isSuccess: false,\n            isLoading: false,\n            errors: this.validator.errors,\n            message: {\n                open: false,\n                message: ''\n            },\n            showPassword: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.openMessage = this.openMessage.bind(this);\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        const { errors } = this.validator;\n        const { credentials } = this.state;\n        credentials[name] = value;\n\n        this.validator.validate(name, value)\n            .then(() => {\n                this.setState({ errors, credentials })\n            });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const { credentials } = this.state;\n\n        this.validator.validateAll(credentials)\n            .then(success => {\n                if (success) {", "func_src_after": "            password: 'required|min:6',\n            password_confirmation: 'required|min:6'\n        });\n        this.state = {\n            credentials: {\n                name: '',\n                email: '',\n                password: '',\n                password_confirmation: ''\n            },\n            responseError: {\n                isError: false,\n                code: '',\n                text: ''\n            },\n            isSuccess: false,\n            isLoading: false,\n            errors: this.validator.errors,\n            message: {\n                open: false,\n                message: ''\n            },\n            showPassword: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.openMessage = this.openMessage.bind(this);\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        const { errors } = this.validator;\n        const { credentials } = this.state;\n        credentials[name] = value;\n\n        this.validator.validate(name, value)\n            .then(() => {\n                this.setState({ errors, credentials })\n            });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const { credentials } = this.state;\n\n        this.validator.validateAll(credentials)\n            .then(success => {\n                if (success) {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3281, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import axios from 'axios';\nimport _decode from 'jwt-decode';\nimport types from '../types';\nimport toast from '../../helpers/toast';\n\nconst isProcessing = bool => ({\n  type: types.IS_PROCESSING,\n  bool\n});\n\nconst userAuthSuccess = user => ({\n  type: types.USER_AUTH_SUCCESS,\n  user\n});\n\nconst userAuthFailure = error => ({\n  type: types.USER_AUTH_FAILURE,\n  error\n});\n\nexport const setUser = (dispatch, payload) => {\n  if (payload) dispatch(userAuthSuccess(_decode(payload)));\n  else dispatch(userAuthSuccess({}));\n};\n\nexport default userData => async dispatch => {\n  let route = 'signup';\n\n  if (typeof userData.confirmPassword === 'undefined') {\n    route = 'signin';\n  }\n  dispatch(isProcessing(true));\n\n  try {\n    const response = await axios.post(`/api/${route}`, userData);\n    const { message, payload } = response.data;\n\n    localStorage.setItem('token', payload);\n    setUser(dispatch, payload);\n    dispatch(isProcessing(false));\n    toast('success', message);\n  } catch (error) {\n    const { message } = error.response.data;\n    dispatch(userAuthFailure(message));\n    dispatch(isProcessing(false));\n    toast('error', message);\n  }\n};\n\nexport const logout = () => dispatch => {", "func_src_after": "import axios from 'axios';\nimport _decode from 'jwt-decode';\nimport types from '../types';\nimport toast from '../../helpers/toast';\n\nconst isProcessing = bool => ({\n  type: types.IS_PROCESSING,\n  bool\n});\n\nconst userAuthSuccess = user => ({\n  type: types.USER_AUTH_SUCCESS,\n  user\n});\n\nconst userAuthFailure = error => ({\n  type: types.USER_AUTH_FAILURE,\n  error\n});\n\nexport const setUser = (dispatch, payload) => {\n  if (payload) dispatch(userAuthSuccess(_decode(payload)));\n  else dispatch(userAuthSuccess({}));\n};\n\nexport default userData => async dispatch => {\n  let route = 'signup';\n\n  if (typeof userData.confirmPassword === 'undefined') {\n    route = 'signin';\n  }\n  dispatch(isProcessing(true));\n\n  try {\n    const response = await axios.post(`/api/${route}`, userData);\n    const { message, payload } = response.data;\n\n    localStorage.setItem('token', payload);\n    setUser(dispatch, payload);\n    dispatch(isProcessing(false));\n    toast('success', message);\n  } catch (error) {\n    const { message } = error.response.data;\n    dispatch(userAuthFailure(message));\n    dispatch(isProcessing(false));\n    toast('error', message);\n  }\n};\n\nexport const logout = () => dispatch => {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3284, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\r\n * @author  xing7th@gmail.com\r\n * @website http://www.showdoc.cc/htq\r\n */\r\n// (1) variables\r\nvar redis = require('redis');\r\nvar request = require('request');\r\nvar fs = require('fs');\r\nvar config = JSON.parse(fs.readFileSync('./config.json').toString());\r\nvar redis_client = redis.createClient(config.redis_port, config.redis_host); //creates a new client\r\n\r\n// (2) rpc server\r\nvar hprose = require(\"hprose\");\r\nvar nginxSuffix = '/rpc'; // used for proxy & load balance\r\nvar server = new hprose.Server(\"http://0.0.0.0:\" + config.api_port + nginxSuffix);\r\n\r\n// (3) rpc methods\r\n//添加队列\r\nfunction addQueue(params, callback) {\r\n  console.log(params);\r\n  var queue_name = config.redis_key_prefix + params.queue_name;\r\n  var type = params.type;\r\n  var post_app_key = config.app_key;\r\n  var post_app_token = config.app_token;\r\n  var stepping_time = params.stepping_time;\r\n  var max_time_interval = params.max_time_interval;\r\n  var attribute = { \"type\": type };\r\n  if (stepping_time) { attribute['stepping_time'] = stepping_time };\r\n  if (max_time_interval) { attribute['max_time_interval'] = max_time_interval };\r\n\r\n  if (!check_token(post_app_key, post_app_token)) {\r\n    callback({\"error_code\":1000,\"message\":\"认证失败\"});\r\n    return false;\r\n  }\r\n  //判断是否在哈希表里存在队列名\r\n  redis_client.hexists(config.redis_key_prefix + \"queue_list\", queue_name, function (err, reply) {\r\n    if (!reply) {\r\n      //增加\r\n      redis_client.hmset(config.redis_key_prefix + \"queue_list\", queue_name, JSON.stringify(attribute), function (err, reply) {\r\n        if (reply) {\r\n          callback({\"error_code\":0,\"message\":\"添加成功\"});\r\n        } else {\r\n          callback({\"error_code\":1001,\"message\":\"添加失败\"});\r\n        }\r\n      });\r\n    } else {\r\n      callback({\"error_code\":1002,\"message\":\"队列名已经存在\"});\r\n    }\r\n  });\r\n}\r", "func_src_after": "/**\r\n * @author  <EMAIL>\r\n * @website http://www.showdoc.cc/htq\r\n */\r\n// (1) variables\r\nvar redis = require('redis');\r\nvar request = require('request');\r\nvar fs = require('fs');\r\nvar config = JSON.parse(fs.readFileSync('./config.json').toString());\r\nvar redis_client = redis.createClient(config.redis_port, config.redis_host); //creates a new client\r\n\r\n// (2) rpc server\r\nvar hprose = require(\"hprose\");\r\nvar nginxSuffix = '/rpc'; // used for proxy & load balance\r\nvar server = new hprose.Server(\"http://<IP-Address>\" + config.api_port + nginxSuffix);\r\n\r\n// (3) rpc methods\r\n//添加队列\r\nfunction addQueue(params, callback) {\r\n  console.log(params);\r\n  var queue_name = config.redis_key_prefix + params.queue_name;\r\n  var type = params.type;\r\n  var post_app_key = config.app_key;\r\n  var post_app_token = config.app_token;\r\n  var stepping_time = params.stepping_time;\r\n  var max_time_interval = params.max_time_interval;\r\n  var attribute = { \"type\": type };\r\n  if (stepping_time) { attribute['stepping_time'] = stepping_time };\r\n  if (max_time_interval) { attribute['max_time_interval'] = max_time_interval };\r\n\r\n  if (!check_token(post_app_key, post_app_token)) {\r\n    callback({\"error_code\":1000,\"message\":\"认证失败\"});\r\n    return false;\r\n  }\r\n  //判断是否在哈希表里存在队列名\r\n  redis_client.hexists(config.redis_key_prefix + \"queue_list\", queue_name, function (err, reply) {\r\n    if (!reply) {\r\n      //增加\r\n      redis_client.hmset(config.redis_key_prefix + \"queue_list\", queue_name, JSON.stringify(attribute), function (err, reply) {\r\n        if (reply) {\r\n          callback({\"error_code\":0,\"message\":\"添加成功\"});\r\n        } else {\r\n          callback({\"error_code\":1001,\"message\":\"添加失败\"});\r\n        }\r\n      });\r\n    } else {\r\n      callback({\"error_code\":1002,\"message\":\"队列名已经存在\"});\r\n    }\r\n  });\r\n}\r", "line_changes": {"deleted": [{"line_no": 2, "char_start": 5, "char_end": 36, "line": " * @author  xing7th@gmail.com\r\n"}, {"line_no": 16, "char_start": 465, "char_end": 549, "line": "var server = new hprose.Server(\"http://0.0.0.0:\" + config.api_port + nginxSuffix);\r\n"}], "added": [{"line_no": 3, "char_start": 5, "char_end": 26, "line": " * @author  <EMAIL>\r\n"}, {"line_no": 17, "char_start": 465, "char_end": 553, "line": "var server = new hprose.Server(\"http://<IP-Address>\" + config.api_port + nginxSuffix);\r\n"}]}, "char_changes": {"deleted": [{"char_start": 5, "char_end": 36, "chars": " * @author  xing7th@gmail.com\r\n"}, {"char_start": 465, "char_end": 549, "chars": "var server = new hprose.Server(\"http://0.0.0.0:\" + config.api_port + nginxSuffix);\r\n"}], "added": [{"char_start": 5, "char_end": 26, "chars": " * @author  <EMAIL>\r\n"}, {"char_start": 465, "char_end": 553, "chars": "var server = new hprose.Server(\"http://<IP-Address>\" + config.api_port + nginxSuffix);\r\n"}]}}
{"func_name": 3305, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "const express = require(\"express\")\nconst app = express()\nconst bodyParser = require(\"body-parser\")\nconst mongoose = require(\"mongoose\")\n//models require\nconst Campground = require(\"./models/campground\")\nconst Comment = require(\"./models/comment\")\n//add seeds.js and execute seed function to destroy and create new sample data on db\nconst seedDB = require(\"./seeds\")\nseedDB()\n\n//-------------------CONNECT TO DB--------------\n//connect to a db, and creating it:\n//mongoose.connect(\"mongodb://yelp:yelp@ds028310.mlab.com:28310/yelp\")\n// Using `mongoose.connect`...\nlet promise = mongoose.connect(\"mongodb://yelp:yelp@ds028310.mlab.com:28310/yelp\", {\n\tuseMongoClient: true,\n\t/* other options */\n})\n\n//---------------APP CONFIG-----------------\napp.set(\"view engine\", \"ejs\")\napp.use(bodyParser.urlencoded({extended:true}))\n// official is this, but path not defined:\n//app.use(express.static(path.join(__dirname, \"public\")))\napp.use(express.static(__dirname + \"/public\"))\n//---------------APP ROUTING----------------\napp.get(\"/\", function(req, res) {\n\tres.render(\"landing\")\n})\n//FIRST USE OF A FAT ARROW YAY!!\n//INDEX route - show all campgrounds\napp.get(\"/campgrounds\", (req, res) => {\n\t//get all (all is {}) campgrounds from db:\n\tCampground.find({},(err,all_campings)=>{\n\t\tif(err){\n\t\t\tconsole.log(err)\n\t\t} else {\n\t\t\t//render it:\n\t\t\tres.render(\"campgrounds/index\",{campgrounds:all_campings})\n\t\t}\n\t})\n})\n\n//CREATE route - add new campground to DB\napp.post(\"/campgrounds\", function(req, res){\n\t// get data from form and add to campgrounds array\n\tvar name = req.body.name\n\tvar image = req.body.image\n\tvar description = req.body.description", "func_src_after": "const express = require(\"express\")\nconst app = express()\nconst bodyParser = require(\"body-parser\")\nconst mongoose = require(\"mongoose\")\n//models require\nconst Campground = require(\"./models/campground\")\nconst Comment = require(\"./models/comment\")\n//add seeds.js and execute seed function to destroy and create new sample data on db\nconst seedDB = require(\"./seeds\")\nseedDB()\n\n//-------------------CONNECT TO DB--------------\n//connect to a db, and creating it:\n//mongoose.connect(\"mongodb://yelp:<EMAIL>:28310/yelp\")\n// Using `mongoose.connect`...\nlet promise = mongoose.connect(\"mongodb://<EMAIL>:28310/yelp\", {\n\tuseMongoClient: true,\n\t/* other options */\n})\n\n//---------------APP CONFIG-----------------\napp.set(\"view engine\", \"ejs\")\napp.use(bodyParser.urlencoded({extended:true}))\n// official is this, but path not defined:\n//app.use(express.static(path.join(__dirname, \"public\")))\napp.use(express.static(__dirname + \"/public\"))\n//---------------APP ROUTING----------------\napp.get(\"/\", function(req, res) {\n\tres.render(\"landing\")\n})\n//FIRST USE OF A FAT ARROW YAY!!\n//INDEX route - show all campgrounds\napp.get(\"/campgrounds\", (req, res) => {\n\t//get all (all is {}) campgrounds from db:\n\tCampground.find({},(err,all_campings)=>{\n\t\tif(err){\n\t\t\tconsole.log(err)\n\t\t} else {\n\t\t\t//render it:\n\t\t\tres.render(\"campgrounds/index\",{campgrounds:all_campings})\n\t\t}\n\t})\n})\n\n//CREATE route - add new campground to DB\napp.post(\"/campgrounds\", function(req, res){\n\t// get data from form and add to campgrounds array\n\tvar name = req.body.name\n\tvar image = req.body.image\n\tvar description = req.body.description", "line_changes": {"deleted": [{"line_no": 14, "char_start": 461, "char_end": 532, "line": "//mongoose.connect(\"mongodb://yelp:yelp@ds028310.mlab.com:28310/yelp\")\n"}, {"line_no": 17, "char_start": 548, "char_end": 633, "line": "let promise = mongoose.connect(\"mongodb://yelp:yelp@ds028310.mlab.com:28310/yelp\", {\n"}], "added": [{"line_no": 15, "char_start": 461, "char_end": 517, "line": "//mongoose.connect(\"mongodb://yelp:<EMAIL>:28310/yelp\")\n"}, {"line_no": 18, "char_start": 548, "char_end": 613, "line": "let promise = mongoose.connect(\"mongodb://<EMAIL>:28310/yelp\", {\n"}]}, "char_changes": {"deleted": [{"char_start": 461, "char_end": 532, "chars": "//mongoose.connect(\"mongodb://yelp:yelp@ds028310.mlab.com:28310/yelp\")\n"}, {"char_start": 548, "char_end": 633, "chars": "let promise = mongoose.connect(\"mongodb://yelp:yelp@ds028310.mlab.com:28310/yelp\", {\n"}], "added": [{"char_start": 461, "char_end": 517, "chars": "//mongoose.connect(\"mongodb://yelp:<EMAIL>:28310/yelp\")\n"}, {"char_start": 548, "char_end": 613, "chars": "let promise = mongoose.connect(\"mongodb://<EMAIL>:28310/yelp\", {\n"}]}}
{"func_name": 3310, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      'Under no circumstances the Sirius team. will be held responsible for lost, stolen or misdirected funds.',\n    in_reply_to_status_id: tweet.id_str\n  })\n}\n\nasync function doBalance(tweet, msg) {\n  try {\n    const balance = await sirius.getBalance(\n      id(tweet.user.id_str),\n      config.get('bot.requiredConfirms')\n    ) // Amount of confirms before we can use it.\n    const post = await T.post('statuses/update', {\n      in_reply_to_status_id: tweet.id_str,\n      status: `@${tweet.user.screen_name} You have ${balance} SIRX.`\n    })\n    logger.info(\n      `Sent balance command to ${tweet.user.screen_name}, tweet id: ${\n        tweet.id_str\n      }`\n    )\n  } catch (e) {\n    logger.error(e)\n  }\n}\n\nasync function doDeposit(tweet, msg) {\n  try {\n    const post = await T.post('statuses/update', {\n      status: `@${\n        tweet.user.screen_name\n      } Your deposit address is ${await getAddress(id(tweet.user.id_str))}`,\n      in_reply_to_status_id: tweet.id_str\n    })\n    logger.info(\n      `Sent deposit address to ${tweet.user.screen_name}, tweet id: ${\n        tweet.id_str\n      }`\n    )\n  } catch (e) {\n    logger.error(e)\n  }\n}\n\nasync function doWithdraw(tweet, msg) {\n  try {\n    if (msg.length < 4) return doHelp(tweet, msg)\n    let address = msg[2]\n    let amount = getValidatedAmount(msg[3])\n    if (amount === null) {\n      return await T.post('statuses/update', {", "func_src_after": "      'Under no circumstances the Sirius team. will be held responsible for lost, stolen or misdirected funds.',\n    in_reply_to_status_id: tweet.id_str\n  })\n}\n\nasync function doBalance(tweet, msg) {\n  try {\n    const balance = await sirius.getBalance(\n      id(tweet.user.id_str),\n      config.get('bot.requiredConfirms')\n    ) // Amount of confirms before we can use it.\n    const post = await T.post('statuses/update', {\n      in_reply_to_status_id: tweet.id_str,\n      status: `@${tweet.user.screen_name} You have ${balance} SIRX.`\n    })\n    logger.info(\n      `Sent balance command to ${tweet.user.screen_name}, tweet id: ${\n        tweet.id_str\n      }`\n    )\n  } catch (e) {\n    logger.error(e)\n  }\n}\n\nasync function doDeposit(tweet, msg) {\n  try {\n    const post = await T.post('statuses/update', {\n      status: `@${\n        tweet.user.screen_name\n      } Your deposit address is ${await getAddress(id(tweet.user.id_str))}`,\n      in_reply_to_status_id: tweet.id_str\n    })\n    logger.info(\n      `Sent deposit address to ${tweet.user.screen_name}, tweet id: ${\n        tweet.id_str\n      }`\n    )\n  } catch (e) {\n    logger.error(e)\n  }\n}\n\nasync function doWithdraw(tweet, msg) {\n  try {\n    if (msg.length < 4) return doHelp(tweet, msg)\n    let address = msg[2]\n    let amount = getValidatedAmount(msg[3])\n    if (amount === null) {\n      return await T.post('statuses/update', {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3347, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n\t\n\tif(feature == null) {\n\t\treturn end();\n\t}\n\n\tfunction getKey() {\n\t\t\n\t\tkeys = [\n\t\t\t// \"AIzaSyC-EhpXoUtprv6FByrEvBZVbUb2nVF2Oxw\",\n\t\t\t// \"AIzaSyBgnn4AdWeZL-XdnGcwbGYbFDsW8vu8f4g\",\n\t\t\t// \"AIzaSyBhIDK0v1jSaWJOT-RM8vcNu42V5Gw2Dts\",\n\t\t\t// \"AIzaSyBWdGF64FkkjJxI8pP_vRdKZRJpa_D_1X8\",\n\t\t\t// \"AIzaSyAbuCfpH92zB0PbeZN9nA89nxC1TsWcmLs\",\n\t\t\t// \"AIzaSyCcC1umkWPK6Rk69BRKZ0cU3aoThHrVq3c\",\n\t\t\t// \"AIzaSyCS-13dZx-mKh20AeIWcC9cIMWkdLSyXGU\",\n\t\t\t// \"AIzaSyDChFjyFs-cU9WenwKu86ZV4SPixZuP2Hw\",\n\t\t\t// \"AIzaSyCxNNk0Rgln3UgBas7zYlsu5Z5JtGDSk-I\",\n\t\t\t// \"AIzaSyABma0xkgZHGheVPVKepIiSJkT9dBd1v6I\",\n\t\t\t// \"AIzaSyAbHrHRksBDGtuQYws-KGV3n4sr_f0kjH0\",\n\t\t\t// \"AIzaSyC3hWyKG1k9JfWozxn061RZgU16bCP1oAo\",\n\t\t\t// \"AIzaSyBnBQz95mJzvyxw1uo-IIVi3XYDMeW-Xro\",\n\t\t\t// \"AIzaSyDydF0njb3xlQ8tnovgssxQDQmtZCL29ws\",\n\t\t\t\n\t\t\t// \"AIzaSyDyVzlxGhR1nW0gPUCfNtmXWU3-YMej44k\",\n\t\t\t// \"AIzaSyBFpi5ipXAjQ-g-DNl_6A2-zG3QPYoPB6Y\",\n\t\t\t// \"AIzaSyCO0X5rNJUu74JxGyCbMnWsdXuIhhgxql0\",\n\t\t\t// \"AIzaSyBH2BUSYTpBzM_MpdGPMuMm7I1c6opilq8\",\n\t\t\t// \"AIzaSyC1OJ-1SKJpr7IUhaPcEzkQDd_e9wK_wGU\",\n\t\t\t// \"AIzaSyDSmhqh5Q3J-VLuHtqSN0--vyeJD7UchDQ\",\n\t\t\t// \"AIzaSyDH0BPN9xmNC7P7neQW0MZh8-xMwJ2-XtQ\",\n\t\t\t\n\t\t\t// \"AIzaSyDpNUzRRHh55ea5LFngDycuxmhEtgjsiTE\",\n\t\t\t// \"AIzaSyD0SBNOfy50ZdLwBZiFlBtfaOt67T6cQLU\",\n\t\t\t\n    \"AIzaSyCHf2EeOg7T167gSkNU_ljDPetPXysSMFg\",\n    \"AIzaSyAsU5XpnhyRwiuxqSHxtJnmFJ9nAYsq-Kk\",\n    \"AIzaSyBI5B2snURiIE8VkeuNYL2Es3ZZf8veRf4\",\n    \"AIzaSyAuJIEnY4TcR-G67YJSgS2CNbPJNABzs3s\",\n    \"AIzaSyA-7Ji5LkGy-_gH-RuZeVIV3m6zOuVUZPA\",\n    \"AIzaSyDhLLXweHCuv8m4ZRqocAKizxRywaGBjXI\",\n    \"AIzaSyClDJ30upVkHyCP8IMT5ayCu_3rSu2ag7E\",\n    \"AIzaSyDHoS63IY3s5KczZujHBhhl70mrQLVo-QE\",\n    \"AIzaSyBYuz2HZWdjthly1NlGKqGA-TPsuHms3ZA\",\n    \"AIzaSyAqP-GZF6rfBqL4VUNxGFxZpWGs-0gd5Y0\",\n    \"AIzaSyDEhtQbIdDR_5KQjMBgIPSoEb2IELXYTG0\",\n    \"AIzaSyBausENaGVRf31dW-ph0Wi9sk1vFBSRCzo\",\n    \"AIzaSyDPlgW3AxwsuqkrgjqPS67W9UHIjLGnW5g\",\n    \"AIzaSyBeXdxEh4IVA3A7N5IfmBnvNAAmFbNYc6U\",\n    \"AIzaSyDv4yY43goypjC6BXZYCcaaXySvbsFAxTA\",", "func_src_after": "\n\t\n\tif(feature == null) {\n\t\treturn end();\n\t}\n\n\tfunction getKey() {\n\t\t\n\t\tkeys = [\n\t\t\t// \"AIzaSyC-EhpXoUtprv6FByrEvBZVbUb2nVF2Oxw\",\n\t\t\t// \"AIzaSyBgnn4AdWeZL-XdnGcwbGYbFDsW8vu8f4g\",\n\t\t\t// \"AIzaSyBhIDK0v1jSaWJOT-RM8vcNu42V5Gw2Dts\",\n\t\t\t// \"AIzaSyBWdGF64FkkjJxI8pP_vRdKZRJpa_D_1X8\",\n\t\t\t// \"AIzaSyAbuCfpH92zB0PbeZN9nA89nxC1TsWcmLs\",\n\t\t\t// \"AIzaSyCcC1umkWPK6Rk69BRKZ0cU3aoThHrVq3c\",\n\t\t\t// \"AIzaSyCS-13dZx-mKh20AeIWcC9cIMWkdLSyXGU\",\n\t\t\t// \"AIzaSyDChFjyFs-cU9WenwKu86ZV4SPixZuP2Hw\",\n\t\t\t// \"AIzaSyCxNNk0Rgln3UgBas7zYlsu5Z5JtGDSk-I\",\n\t\t\t// \"AIzaSyABma0xkgZHGheVPVKepIiSJkT9dBd1v6I\",\n\t\t\t// \"AIzaSyAbHrHRksBDGtuQYws-KGV3n4sr_f0kjH0\",\n\t\t\t// \"AIzaSyC3hWyKG1k9JfWozxn061RZgU16bCP1oAo\",\n\t\t\t// \"AIzaSyBnBQz95mJzvyxw1uo-IIVi3XYDMeW-Xro\",\n\t\t\t// \"AIzaSyDydF0njb3xlQ8tnovgssxQDQmtZCL29ws\",\n\t\t\t\n\t\t\t// \"AIzaSyDyVzlxGhR1nW0gPUCfNtmXWU3-YMej44k\",\n\t\t\t// \"AIzaSyBFpi5ipXAjQ-g-DNl_6A2-zG3QPYoPB6Y\",\n\t\t\t// \"AIzaSyCO0X5rNJUu74JxGyCbMnWsdXuIhhgxql0\",\n\t\t\t// \"AIzaSyBH2BUSYTpBzM_MpdGPMuMm7I1c6opilq8\",\n\t\t\t// \"AIzaSyC1OJ-1SKJpr7IUhaPcEzkQDd_e9wK_wGU\",\n\t\t\t// \"AIzaSyDSmhqh5Q3J-VLuHtqSN0--vyeJD7UchDQ\",\n\t\t\t// \"AIzaSyDH0BPN9xmNC7P7neQW0MZh8-xMwJ2-XtQ\",\n\t\t\t\n\t\t\t// \"AIzaSyDpNUzRRHh55ea5LFngDycuxmhEtgjsiTE\",\n\t\t\t// \"AIzaSyD0SBNOfy50ZdLwBZiFlBtfaOt67T6cQLU\",\n\t\t\t\n    \"AIzaSyCHf2EeOg7T167gSkNU_ljDPetPXysSMFg\",\n    \"AIzaSyAsU5XpnhyRwiuxqSHxtJnmFJ9nAYsq-Kk\",\n    \"AIzaSyBI5B2snURiIE8VkeuNYL2Es3ZZf8veRf4\",\n    \"AIzaSyAuJIEnY4TcR-G67YJSgS2CNbPJNABzs3s\",\n    \"AIzaSyA-7Ji5LkGy-_gH-RuZeVIV3m6zOuVUZPA\",\n    \"AIzaSyDhLLXweHCuv8m4ZRqocAKizxRywaGBjXI\",\n    \"AIzaSyClDJ30upVkHyCP8IMT5ayCu_3rSu2ag7E\",\n    \"AIzaSyDHoS63IY3s5KczZujHBhhl70mrQLVo-QE\",\n    \"AIzaSyBYuz2HZWdjthly1NlGKqGA-TPsuHms3ZA\",\n    \"AIzaSyAqP-GZF6rfBqL4VUNxGFxZpWGs-0gd5Y0\",\n    \"AIzaSyDEhtQbIdDR_5KQjMBgIPSoEb2IELXYTG0\",\n    \"AIzaSyBausENaGVRf31dW-ph0Wi9sk1vFBSRCzo\",\n    \"AIzaSyDPlgW3AxwsuqkrgjqPS67W9UHIjLGnW5g\",\n    \"AIzaSyBeXdxEh4IVA3A7N5IfmBnvNAAmFbNYc6U\",\n    \"AIzaSyDv4yY43goypjC6BXZYCcaaXySvbsFAxTA\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3360, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "var voicejs = require('../voice.js');\n\nvar fs = require('fs');\n\nvar client = new voicejs.Client({\n\temail: process.argv[2] || 'email@gmail.com',\n\tpassword: process.argv[3] || 'password',\n\ttokens: require('./tokens.json')\n});\n\n\n// Download all contacts and display them.\nclient.contacts('get', function(error, response, data){\n\tif(error){\n\t\treturn console.log(error)\n\t}\n\t\n\tconsole.log('\\nPHONEBOOK:');\n\tfor(var id in data.contacts){\n\t\tconsole.log('\\n', data.contacts[id].name, data.contacts[id].emails.join(', ') );\n\t\tdata.contacts[id].numbers.forEach(function(number){\n\t\t\tconsole.log('    %s: %s', number.phoneType, number.displayNumber);\n\t\t});\n\t};\n});\n\n\n// REMOVE THIS LINE TO MAKE CHANGES TO YOUR GV ACCOUNT AFTER YOU'VE REVIEWED THE CHANGES BELOW!\nreturn;\n\n\n\n// Add a new contact to your phonebook after making sure to account for any possible matching contacts\nclient.contacts('new',{\n\tnumber: '1-800-225-5532',\n\tname: 'Colonel Sanders',\n\ttype: 'WORK', // MOBILE, WORK, or HOME\n\tcheck: true, // check for possible matching contacts and add contact to phonebook only if there are no possible matches\n//\tfocusId: '' // merge with a contact \n}, function(error, response, data){\n\t\n\tif(error){\n\t\treturn console.log(error);\n\t}\n\t\n\tif(data && data.data && data.data.matchingContacts && data.data.matchingContacts.length){\n\t\tconsole.log('\\nPossible matching contacts and their focus ids: ');\n\t\t\n\t\t// Display contact phone numbers and their 'focusId' which can be passed to client.addContact() to merge the new contact with an old one\n\t\tdata.data.matchingContacts.forEach(function(contact){", "func_src_after": "var voicejs = require('../voice.js');\n\nvar fs = require('fs');\n\nvar client = new voicejs.Client({\n\temail: process.argv[2] || '<EMAIL>',\n\tpassword: process.argv[3] || 'password',\n\ttokens: require('./tokens.json')\n});\n\n\n// Download all contacts and display them.\nclient.contacts('get', function(error, response, data){\n\tif(error){\n\t\treturn console.log(error)\n\t}\n\t\n\tconsole.log('\\nPHONEBOOK:');\n\tfor(var id in data.contacts){\n\t\tconsole.log('\\n', data.contacts[id].name, data.contacts[id].emails.join(', ') );\n\t\tdata.contacts[id].numbers.forEach(function(number){\n\t\t\tconsole.log('    %s: %s', number.phoneType, number.displayNumber);\n\t\t});\n\t};\n});\n\n\n// REMOVE THIS LINE TO MAKE CHANGES TO YOUR GV ACCOUNT AFTER YOU'VE REVIEWED THE CHANGES BELOW!\nreturn;\n\n\n\n// Add a new contact to your phonebook after making sure to account for any possible matching contacts\nclient.contacts('new',{\n\tnumber: '1-800-225-5532',\n\tname: 'Colonel Sanders',\n\ttype: 'WORK', // MOBILE, WORK, or HOME\n\tcheck: true, // check for possible matching contacts and add contact to phonebook only if there are no possible matches\n//\tfocusId: '' // merge with a contact \n}, function(error, response, data){\n\t\n\tif(error){\n\t\treturn console.log(error);\n\t}\n\t\n\tif(data && data.data && data.data.matchingContacts && data.data.matchingContacts.length){\n\t\tconsole.log('\\nPossible matching contacts and their focus ids: ');\n\t\t\n\t\t// Display contact phone numbers and their 'focusId' which can be passed to client.addContact() to merge the new contact with an old one\n\t\tdata.data.matchingContacts.forEach(function(contact){", "line_changes": {"deleted": [{"line_no": 6, "char_start": 98, "char_end": 144, "line": "\temail: process.argv[2] || 'email@gmail.com',\n"}], "added": [{"line_no": 7, "char_start": 98, "char_end": 136, "line": "\temail: process.argv[2] || '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 98, "char_end": 144, "chars": "\temail: process.argv[2] || 'email@gmail.com',\n"}], "added": [{"char_start": 98, "char_end": 136, "chars": "\temail: process.argv[2] || '<EMAIL>',\n"}]}}
{"func_name": 3413, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * Контроллер кнопки элемента блочного типа неограниченного по количеству.\n *\n * @author dew1983@mail.ru <Suvorov Andrey M.>\n */\n\nExt.define(\n\t'FBEditor.view.panel.main.editor.button.UnboundedButtonController',\n\t{\n\t\textend: 'FBEditor.view.panel.main.editor.button.ButtonController',\n\n\t\t/**\n\t\t * Синхронизирует кнопку, используя проверку по схему.\n\t\t */\n\t\tonSync: function ()\n\t\t{\n\t\t\tvar me = this,\n\t\t\t\tbtn = me.getView(),\n\t\t\t\tname = btn.elementName,\n\t\t\t\tmanager = btn.getEditorManager(),\n\t\t\t\tels = {},\n\t\t\t\thash = {},\n\t\t\t\trange;\n\t\t\t\n\t\t\tif (!manager.availableSyncButtons())\n\t\t\t{\n\t\t\t\tme.verifyResult(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\trange = manager.getRange();\n\n\t\t\tif (!range || !range.common.getElement || range.common.getElement().isRoot)\n\t\t\t{\n\t\t\t\tme.verifyResult(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tels.node = range.common.getElement();\n\t\t\t\n\t\t\tif (!range.collapsed)\n\t\t\t{\n\t\t\t\t// ищем самый верхниий элемент, который может делиться на несколько\n\t\t\t\tels.node = els.node.getSplittable();\n\t\t\t\t\n\t\t\t\tif (els.node)\n\t\t\t\t{\n\t\t\t\t\tels.start = range.start.getElement();\n\t\t\t\t\tels.startSplit = els.start.getSplittable();\n\t\t\t\t\tels.end = range.end.getElement();", "func_src_after": "/**\n * Контроллер кнопки элемента блочного типа неограниченного по количеству.\n *\n * @author <EMAIL> <Suvorov Andrey M.>\n */\n\nExt.define(\n\t'FBEditor.view.panel.main.editor.button.UnboundedButtonController',\n\t{\n\t\textend: 'FBEditor.view.panel.main.editor.button.ButtonController',\n\n\t\t/**\n\t\t * Синхронизирует кнопку, используя проверку по схему.\n\t\t */\n\t\tonSync: function ()\n\t\t{\n\t\t\tvar me = this,\n\t\t\t\tbtn = me.getView(),\n\t\t\t\tname = btn.elementName,\n\t\t\t\tmanager = btn.getEditorManager(),\n\t\t\t\tels = {},\n\t\t\t\thash = {},\n\t\t\t\trange;\n\t\t\t\n\t\t\tif (!manager.availableSyncButtons())\n\t\t\t{\n\t\t\t\tme.verifyResult(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\trange = manager.getRange();\n\n\t\t\tif (!range || !range.common.getElement || range.common.getElement().isRoot)\n\t\t\t{\n\t\t\t\tme.verifyResult(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tels.node = range.common.getElement();\n\t\t\t\n\t\t\tif (!range.collapsed)\n\t\t\t{\n\t\t\t\t// ищем самый верхниий элемент, который может делиться на несколько\n\t\t\t\tels.node = els.node.getSplittable();\n\t\t\t\t\n\t\t\t\tif (els.node)\n\t\t\t\t{\n\t\t\t\t\tels.start = range.start.getElement();\n\t\t\t\t\tels.startSplit = els.start.getSplittable();\n\t\t\t\t\tels.end = range.end.getElement();", "line_changes": {"deleted": [{"line_no": 4, "char_start": 82, "char_end": 129, "line": " * @author dew1983@mail.ru <Suvorov Andrey M.>\n"}], "added": [{"line_no": 5, "char_start": 82, "char_end": 121, "line": " * @author <EMAIL> <Suvorov Andrey M.>\n"}]}, "char_changes": {"deleted": [{"char_start": 82, "char_end": 129, "chars": " * @author dew1983@mail.ru <Suvorov Andrey M.>\n"}], "added": [{"char_start": 82, "char_end": 121, "chars": " * @author <EMAIL> <Suvorov Andrey M.>\n"}]}}
{"func_name": 3423, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        ],\n      };\n\n      // OPERATE\n      try {\n        await service.update({}, params);\n        expect.hasAssertions();\n      } catch (err) {\n        expect(service.boom.is(err, 'badRequest')).toBe(true);\n        expect(err.message).toContain('Input has validation errors');\n      }\n    });\n\n    it('should fail because the toPort contains non-integer value', async () => {\n      // BUILD\n      const params = {\n        id: 'testId',\n        updateRequest: [\n          {\n            protocol: 'tcp',\n            fromPort: 123,\n            toPort: '123',\n            cidrBlocks: ['123.123.123.123/32'],\n          },\n        ],\n      };\n\n      // OPERATE\n      try {\n        await service.update({}, params);\n        expect.hasAssertions();\n      } catch (err) {\n        expect(service.boom.is(err, 'badRequest')).toBe(true);\n        expect(err.message).toContain('Input has validation errors');\n      }\n    });\n\n    it('should fail because the updateRequest contains Ipv6 CIDR ranges', async () => {\n      // BUILD\n      const params = {\n        id: 'testId',\n        updateRequest: [\n          {\n            protocol: 'tcp',\n            fromPort: 123,\n            toPort: 123,\n            cidrBlocks: ['123.123.123.123/32', '1234::1234:abcd:ffff:1234:123/64'],\n          },\n        ],\n      };", "func_src_after": "        ],\n      };\n\n      // OPERATE\n      try {\n        await service.update({}, params);\n        expect.hasAssertions();\n      } catch (err) {\n        expect(service.boom.is(err, 'badRequest')).toBe(true);\n        expect(err.message).toContain('Input has validation errors');\n      }\n    });\n\n    it('should fail because the toPort contains non-integer value', async () => {\n      // BUILD\n      const params = {\n        id: 'testId',\n        updateRequest: [\n          {\n            protocol: 'tcp',\n            fromPort: 123,\n            toPort: '123',\n            cidrBlocks: ['<IP-Address>/32'],\n          },\n        ],\n      };\n\n      // OPERATE\n      try {\n        await service.update({}, params);\n        expect.hasAssertions();\n      } catch (err) {\n        expect(service.boom.is(err, 'badRequest')).toBe(true);\n        expect(err.message).toContain('Input has validation errors');\n      }\n    });\n\n    it('should fail because the updateRequest contains Ipv6 CIDR ranges', async () => {\n      // BUILD\n      const params = {\n        id: 'testId',\n        updateRequest: [\n          {\n            protocol: 'tcp',\n            fromPort: 123,\n            toPort: 123,\n            cidrBlocks: ['<IP-Address>/32', '<IP-Address>/64'],\n          },\n        ],\n      };", "line_changes": {"deleted": [{"line_no": 23, "char_start": 558, "char_end": 606, "line": "            cidrBlocks: ['123.123.123.123/32'],\n"}, {"line_no": 48, "char_start": 1178, "char_end": 1262, "line": "            cidrBlocks: ['123.123.123.123/32', '1234::1234:abcd:ffff:1234:123/64'],\n"}], "added": [{"line_no": 24, "char_start": 558, "char_end": 603, "line": "            cidrBlocks: ['<IP-Address>/32'],\n"}, {"line_no": 49, "char_start": 1178, "char_end": 1242, "line": "            cidrBlocks: ['<IP-Address>/32', '<IP-Address>/64'],\n"}]}, "char_changes": {"deleted": [{"char_start": 558, "char_end": 606, "chars": "            cidrBlocks: ['123.123.123.123/32'],\n"}, {"char_start": 1178, "char_end": 1262, "chars": "            cidrBlocks: ['123.123.123.123/32', '1234::1234:abcd:ffff:1234:123/64'],\n"}], "added": [{"char_start": 558, "char_end": 603, "chars": "            cidrBlocks: ['<IP-Address>/32'],\n"}, {"char_start": 1178, "char_end": 1242, "chars": "            cidrBlocks: ['<IP-Address>/32', '<IP-Address>/64'],\n"}]}}
{"func_name": 3436, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "var apijs = {\n// Create User\n  addUser: {\n    client:{\n      feed: \"https://github.com/lakefox.private.atom?token=\",\n      address: \"6603515674@txt.att.net\"\n    },\n    server: {\n      \"res\": (async (data) => {\n        var s = await megaquery.api({\n          q: \"users\"\n        });\n        s = JSON.parse(s);\n        data.last = \"\";\n        let taken = false;\n        let index;\n        s.users.forEach((user, i) => {\n          if (user.address == data.address) {\n            taken = true;\n            index = i\n          }\n        })\n        if (!taken) {\n          s.users.push(data);\n        } else {\n          s.users[index] = data;\n        }\n\n        var r = await megaquery.api({\n          key: \"users\",\n          value: JSON.stringify(s),\n          overwrite: \"true\"\n        });\n        return r;\n      })\n    }\n  },\n// Remove User\n  removeUser: {\n    client:{\n      address: \"6603515674@txt.att.net\"\n    },\n    server: {\n      \"res\": (async (data) => {\n        var s = await megaquery.api({\n          q: \"users\"\n        });\n        s = JSON.parse(s);\n\n        s.users.forEach((user, i) => {", "func_src_after": "var apijs = {\n// Create User\n  addUser: {\n    client:{\n      feed: \"https://github.com/lakefox.private.atom?token=\",\n      address: \"<EMAIL>\"\n    },\n    server: {\n      \"res\": (async (data) => {\n        var s = await megaquery.api({\n          q: \"users\"\n        });\n        s = JSON.parse(s);\n        data.last = \"\";\n        let taken = false;\n        let index;\n        s.users.forEach((user, i) => {\n          if (user.address == data.address) {\n            taken = true;\n            index = i\n          }\n        })\n        if (!taken) {\n          s.users.push(data);\n        } else {\n          s.users[index] = data;\n        }\n\n        var r = await megaquery.api({\n          key: \"users\",\n          value: JSON.stringify(s),\n          overwrite: \"true\"\n        });\n        return r;\n      })\n    }\n  },\n// Remove User\n  removeUser: {\n    client:{\n      address: \"<EMAIL>\"\n    },\n    server: {\n      \"res\": (async (data) => {\n        var s = await megaquery.api({\n          q: \"users\"\n        });\n        s = JSON.parse(s);\n\n        s.users.forEach((user, i) => {", "line_changes": {"deleted": [{"line_no": 6, "char_start": 117, "char_end": 157, "line": "      address: \"6603515674@txt.att.net\"\n"}, {"line_no": 42, "char_start": 852, "char_end": 892, "line": "      address: \"6603515674@txt.att.net\"\n"}], "added": [{"line_no": 7, "char_start": 117, "char_end": 142, "line": "      address: \"<EMAIL>\"\n"}, {"line_no": 43, "char_start": 852, "char_end": 877, "line": "      address: \"<EMAIL>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 117, "char_end": 157, "chars": "      address: \"6603515674@txt.att.net\"\n"}, {"char_start": 852, "char_end": 892, "chars": "      address: \"6603515674@txt.att.net\"\n"}], "added": [{"char_start": 117, "char_end": 142, "chars": "      address: \"<EMAIL>\"\n"}, {"char_start": 852, "char_end": 877, "chars": "      address: \"<EMAIL>\"\n"}]}}
{"func_name": 3506, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                \"id\",\n                \"cupidatat\",\n                \"velit\",\n                \"deserunt\",\n                \"minim\",\n                \"sint\",\n                \"irure\"\n            ],\n            \"friends\": [\n                {\n                    \"id\": 0,\n                    \"name\": \"Fields Holder\"\n                },\n                {\n                    \"id\": 1,\n                    \"name\": \"Holcomb Powers\"\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"Kirkland Franklin\"\n                }\n            ],\n            \"customField\": \"Hello, undefined! You have 1 unread messages.\"\n        },\n        {\n            \"id\": 26,\n            \"guid\": \"5304274f-62dc-45e0-b849-d239c91e1c7b\",\n            \"isActive\": true,\n            \"balance\": \"$2,425.00\",\n            \"picture\": \"http://placehold.it/32x32\",\n            \"age\": 29,\n            \"firstName\": \"Salazar\",\n            \"lastName\": \"Riley\",\n            \"gender\": \"male\",\n            \"company\": \"Virva\",\n            \"email\": \"salazarriley@virva.com\",\n            \"phone\": \"+1 (867) 558-2465\",\n            \"address\": \"562 Locust Street, Allendale, Missouri, 5591\",\n            \"about\": \"Tempor ullamco adipisicing ea eiusmod ullamco magna. Ipsum tempor ullamco ex ex cillum ullamco ut occaecat exercitation est ipsum. Incididunt fugiat dolor aute qui enim adipisicing sunt ipsum deserunt ad eu occaecat id eiusmod. Excepteur non pariatur velit exercitation veniam quis non excepteur Lorem dolore tempor. Duis minim magna occaecat aliqua.\\r\\n\",\n            \"registered\": \"1997-03-03T07:12:27 +07:00\",\n            \"latitude\": 12.401293,\n            \"longitude\": -4.650402,\n            \"tags\": [\n                \"id\",\n                \"quis\",\n                \"officia\",\n                \"dolor\",\n                \"in\",\n                \"aute\",\n                \"exercitation\"", "func_src_after": "                \"id\",\n                \"cupidatat\",\n                \"velit\",\n                \"deserunt\",\n                \"minim\",\n                \"sint\",\n                \"irure\"\n            ],\n            \"friends\": [\n                {\n                    \"id\": 0,\n                    \"name\": \"Fields Holder\"\n                },\n                {\n                    \"id\": 1,\n                    \"name\": \"Holcomb Powers\"\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"Kirkland Franklin\"\n                }\n            ],\n            \"customField\": \"Hello, undefined! You have 1 unread messages.\"\n        },\n        {\n            \"id\": 26,\n            \"guid\": \"5304274f-62dc-45e0-b849-d239c91e1c7b\",\n            \"isActive\": true,\n            \"balance\": \"$2,425.00\",\n            \"picture\": \"http://placehold.it/32x32\",\n            \"age\": 29,\n            \"firstName\": \"Salazar\",\n            \"lastName\": \"Riley\",\n            \"gender\": \"male\",\n            \"company\": \"Virva\",\n            \"email\": \"<EMAIL>\",\n            \"phone\": \"+1 (867) 558-2465\",\n            \"address\": \"562 Locust Street, Allendale, Missouri, 5591\",\n            \"about\": \"Tempor ullamco adipisicing ea eiusmod ullamco magna. Ipsum tempor ullamco ex ex cillum ullamco ut occaecat exercitation est ipsum. Incididunt fugiat dolor aute qui enim adipisicing sunt ipsum deserunt ad eu occaecat id eiusmod. Excepteur non pariatur velit exercitation veniam quis non excepteur Lorem dolore tempor. Duis minim magna occaecat aliqua.\\r\\n\",\n            \"registered\": \"1997-03-03T07:12:27 +07:00\",\n            \"latitude\": 12.401293,\n            \"longitude\": -4.650402,\n            \"tags\": [\n                \"id\",\n                \"quis\",\n                \"officia\",\n                \"dolor\",\n                \"in\",\n                \"aute\",\n                \"exercitation\"", "line_changes": {"deleted": [{"line_no": 36, "char_start": 1016, "char_end": 1063, "line": "            \"email\": \"salazarriley@virva.com\",\n"}], "added": [{"line_no": 37, "char_start": 1016, "char_end": 1048, "line": "            \"email\": \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 1016, "char_end": 1063, "chars": "            \"email\": \"salazarriley@virva.com\",\n"}], "added": [{"char_start": 1016, "char_end": 1048, "chars": "            \"email\": \"<EMAIL>\",\n"}]}}
{"func_name": 3580, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "var Chain2Connect = artifacts.require(\"./Chain2Connect.sol\");\n\ncontract(\"Chain2Connect\", (accounts) => {\n    let app\n\n    before(async () => {\n        app = await Chain2Connect.new()\n    })\n\n    //Checking contract deployment\n    describe(\"Contract deployment\", async () => {\n        it(\"deployed with proper name\", async () => {\n            var name = await app.name()\n            assert.equal(name,\"Chain2Connect\")\n        })\n    })\n\n    //Checking count initialization\n    describe(\"Count initialization\", async () => {\n        it(\"All counts are initialized with zero\", async () => {\n            var donorCount = await app.donorCount()\n            var ngoCount = await app.ngoCount()\n            var storeCount = await app.storeCount()\n            var benCount = await app.benCount()\n            var progCount = await app.progCount()\n            var enrollCount = await app.enrollCount()\n            var donationCount = await app.donationCount()\n            var productCount = await app.productCount()\n            var orderCount = await app.orderCount()\n            var paymentCount = await app.paymentCount()\n            var feedCount = await app.feedCount()\n\n            assert.equal(donorCount,0,\"contains right donorCount\")\n            assert.equal(ngoCount,0,\"contains right ngoCount\")\n            assert.equal(storeCount,0,\"contains right storeCount\")\n            assert.equal(benCount,0,\"contains right benCount\")\n            assert.equal(progCount,0,\"contains right progCount\")\n            assert.equal(enrollCount,0,\"contains right enrollCount\")\n            assert.equal(donationCount,0,\"contains right donationCount\")\n            assert.equal(productCount,0,\"contains right productCount\")\n            assert.equal(orderCount,0,\"contains right orderCount\")\n            assert.equal(paymentCount,0,\"contains right paymentCount\")\n            assert.equal(feedCount,0,\"contains right feedCount\")\n        })\n    })\n\n    //Checking whether we are able to add the users or not\n    describe(\"Adding Users\", async () => {\n        it(\"Donors can be added successfully\", async () => {\n            var result = await app.addDonor(\"donor1\",\"donor@gmail.com\",\"donorPassword\")", "func_src_after": "var Chain2Connect = artifacts.require(\"./Chain2Connect.sol\");\n\ncontract(\"Chain2Connect\", (accounts) => {\n    let app\n\n    before(async () => {\n        app = await Chain2Connect.new()\n    })\n\n    //Checking contract deployment\n    describe(\"Contract deployment\", async () => {\n        it(\"deployed with proper name\", async () => {\n            var name = await app.name()\n            assert.equal(name,\"Chain2Connect\")\n        })\n    })\n\n    //Checking count initialization\n    describe(\"Count initialization\", async () => {\n        it(\"All counts are initialized with zero\", async () => {\n            var donorCount = await app.donorCount()\n            var ngoCount = await app.ngoCount()\n            var storeCount = await app.storeCount()\n            var benCount = await app.benCount()\n            var progCount = await app.progCount()\n            var enrollCount = await app.enrollCount()\n            var donationCount = await app.donationCount()\n            var productCount = await app.productCount()\n            var orderCount = await app.orderCount()\n            var paymentCount = await app.paymentCount()\n            var feedCount = await app.feedCount()\n\n            assert.equal(donorCount,0,\"contains right donorCount\")\n            assert.equal(ngoCount,0,\"contains right ngoCount\")\n            assert.equal(storeCount,0,\"contains right storeCount\")\n            assert.equal(benCount,0,\"contains right benCount\")\n            assert.equal(progCount,0,\"contains right progCount\")\n            assert.equal(enrollCount,0,\"contains right enrollCount\")\n            assert.equal(donationCount,0,\"contains right donationCount\")\n            assert.equal(productCount,0,\"contains right productCount\")\n            assert.equal(orderCount,0,\"contains right orderCount\")\n            assert.equal(paymentCount,0,\"contains right paymentCount\")\n            assert.equal(feedCount,0,\"contains right feedCount\")\n        })\n    })\n\n    //Checking whether we are able to add the users or not\n    describe(\"Adding Users\", async () => {\n        it(\"Donors can be added successfully\", async () => {\n            var result = await app.addDonor(\"donor1\",\"<EMAIL>\",\"donorPassword\")", "line_changes": {"deleted": [{"line_no": 50, "char_start": 2088, "char_end": 2175, "line": "            var result = await app.addDonor(\"donor1\",\"donor@gmail.com\",\"donorPassword\")"}], "added": [{"line_no": 51, "char_start": 2088, "char_end": 2167, "line": "            var result = await app.addDonor(\"donor1\",\"<EMAIL>\",\"donorPassword\")"}]}, "char_changes": {"deleted": [{"char_start": 2088, "char_end": 2175, "chars": "            var result = await app.addDonor(\"donor1\",\"donor@gmail.com\",\"donorPassword\")"}], "added": [{"char_start": 2088, "char_end": 2167, "chars": "            var result = await app.addDonor(\"donor1\",\"<EMAIL>\",\"donorPassword\")"}]}}
{"func_name": 3592, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  });\r\n  self.checked                = ko.observable(false);\r\n  self.setAccepts = function() {\r\n    PeerCastStation.setListenerAccepts(self.id(), self.localAccepts(), self.globalAccepts());\r\n  };\r\n  self.setAuthorizationRequired = function() {\r\n    PeerCastStation.setListenerAuthorizationRequired(self.id(), self.localAuthRequired(), self.globalAuthRequired());\r\n  };\r\n  self.localAuthRequired.subscribe(function (value) {\r\n    self.setAuthorizationRequired();\r\n  });\r\n  self.globalAuthRequired.subscribe(function (value) {\r\n    self.setAuthorizationRequired();\r\n  });\r\n\r\n  self.showAuthenticationInfo = function() {\r\n    self.authenticationInfoVisibility(true);\r\n  };\r\n\r\n  self.update = function(data) {\r\n    self.id(data.listenerId);\r\n    self.address(data.address);\r\n    self.port(data.port);\r\n    self.isOpened(data.isOpened);\r\n    self.portStatus(data.portStatus);\r\n    self.localAccepts(data.localAccepts);\r\n    self.globalAccepts(data.globalAccepts);\r\n    self.localAuthRequired(data.localAuthorizationRequired);\r\n    self.globalAuthRequired(data.globalAuthorizationRequired);\r\n    self.authenticationId(data.authenticationId);\r\n    self.authenticationPassword(data.authenticationPassword);\r\n  };\r\n\r\n  self.addressLabel = ko.computed(function() {\r\n    var addr = self.address();\r\n    if (addr==='0.0.0.0')                  return 'IPv4 Any';\r\n    else if (addr==='0::0' || addr==='::') return 'IPv6 Any';\r\n    else                                   return addr;\r\n  });\r\n\r\n  self.lanPlayAccept = ko.computed({\r\n    read: function() { return (self.localAccepts() & PeerCastStation.OutputStreamType.Play)!=0; },\r\n    write: function(value) {\r\n      if (value) self.localAccepts(self.localAccepts() | PeerCastStation.OutputStreamType.Play);\r\n      else       self.localAccepts(self.localAccepts() & ~PeerCastStation.OutputStreamType.Play);\r\n      self.setAccepts();\r\n    }\r\n  });\r\n\r\n  self.lanRelayAccept = ko.computed({\r", "func_src_after": "  });\r\n  self.checked                = ko.observable(false);\r\n  self.setAccepts = function() {\r\n    PeerCastStation.setListenerAccepts(self.id(), self.localAccepts(), self.globalAccepts());\r\n  };\r\n  self.setAuthorizationRequired = function() {\r\n    PeerCastStation.setListenerAuthorizationRequired(self.id(), self.localAuthRequired(), self.globalAuthRequired());\r\n  };\r\n  self.localAuthRequired.subscribe(function (value) {\r\n    self.setAuthorizationRequired();\r\n  });\r\n  self.globalAuthRequired.subscribe(function (value) {\r\n    self.setAuthorizationRequired();\r\n  });\r\n\r\n  self.showAuthenticationInfo = function() {\r\n    self.authenticationInfoVisibility(true);\r\n  };\r\n\r\n  self.update = function(data) {\r\n    self.id(data.listenerId);\r\n    self.address(data.address);\r\n    self.port(data.port);\r\n    self.isOpened(data.isOpened);\r\n    self.portStatus(data.portStatus);\r\n    self.localAccepts(data.localAccepts);\r\n    self.globalAccepts(data.globalAccepts);\r\n    self.localAuthRequired(data.localAuthorizationRequired);\r\n    self.globalAuthRequired(data.globalAuthorizationRequired);\r\n    self.authenticationId(data.authenticationId);\r\n    self.authenticationPassword(data.authenticationPassword);\r\n  };\r\n\r\n  self.addressLabel = ko.computed(function() {\r\n    var addr = self.address();\r\n    if (addr==='<IP-Address>')                  return 'IPv4 Any';\r\n    else if (addr==='<IP-Address>' || addr==='<IP-Address>') return 'IPv6 Any';\r\n    else                                   return addr;\r\n  });\r\n\r\n  self.lanPlayAccept = ko.computed({\r\n    read: function() { return (self.localAccepts() & PeerCastStation.OutputStreamType.Play)!=0; },\r\n    write: function(value) {\r\n      if (value) self.localAccepts(self.localAccepts() | PeerCastStation.OutputStreamType.Play);\r\n      else       self.localAccepts(self.localAccepts() & ~PeerCastStation.OutputStreamType.Play);\r\n      self.setAccepts();\r\n    }\r\n  });\r\n\r\n  self.lanRelayAccept = ko.computed({\r", "line_changes": {"deleted": [{"line_no": 36, "char_start": 1288, "char_end": 1351, "line": "    if (addr==='0.0.0.0')                  return 'IPv4 Any';\r\n"}, {"line_no": 38, "char_start": 1356, "char_end": 1419, "line": "    else if (addr==='0::0' || addr==='::') return 'IPv6 Any';\r\n"}], "added": [{"line_no": 37, "char_start": 1288, "char_end": 1356, "line": "    if (addr==='<IP-Address>')                  return 'IPv4 Any';\r\n"}, {"line_no": 39, "char_start": 1356, "char_end": 1437, "line": "    else if (addr==='<IP-Address>' || addr==='<IP-Address>') return 'IPv6 Any';\r\n"}]}, "char_changes": {"deleted": [{"char_start": 1288, "char_end": 1351, "chars": "    if (addr==='0.0.0.0')                  return 'IPv4 Any';\r\n"}, {"char_start": 1356, "char_end": 1419, "chars": "    else if (addr==='0::0' || addr==='::') return 'IPv6 Any';\r\n"}], "added": [{"char_start": 1288, "char_end": 1356, "chars": "    if (addr==='<IP-Address>')                  return 'IPv4 Any';\r\n"}, {"char_start": 1356, "char_end": 1437, "chars": "    else if (addr==='<IP-Address>' || addr==='<IP-Address>') return 'IPv6 Any';\r\n"}]}}
{"func_name": 3609, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n@yield('content')\n@include('theme.partial.feedback')\n<!-- ----------------------- footer start ----------------------- -->\n<footer>\n    <!-- ------------------------------ Return to Top start ------------------------------ -->\n    <a href=\"javascript:\" id=\"return-to-top\">\n        <i class=\"fas fa-chevron-up\"></i>\n    </a>\n    <!-- ------------------------------ Return to Top end ------------------------------ -->\n{{--    <div class=\"container\">--}}\n{{--        <p class=\"footer_text\">--}}\n{{--            {{ Site::config()->site_title, 'Copyright © 2022 Daffodil International University. All Rights Reserved.' }}--}}\n{{--        </p>--}}\n{{--    </div>--}}\n\n<div class=\"container\" data-aos=\"fade-up\" data-aos-delay=\"100\">\n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"f_inner\">\n                    <div class=\"footer_logo_main\">\n                        <div class=\"f_logo\">\n                            <img src=\"{!! Site::config()->logo!=null?Site::config()->logo->getUrl()??url('assets/theme/images//Parents Experience Logo.png'):url('assets/theme/images//Parents Experience Logo.png')!!}\" alt=\"DIU Parents Experience\"/>\n\n                        </div>\n                    </div>\n\n                    <p class=\"footer_text f_p_top\"> {{ Site::config()->copyright??'Copyright © 2022 Daffodil International University. All Rights Reserved.' }}</p>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4\">\n                <div class=\"f_inner\">\n                    <p class=\"heading_three text_white\">Support</p>\n\n                    <div class=\"f_links f_p_top\">\n                        <p class=\"footer_text\"><span>Hotline:</span> {{ Site::config()->mobile?? '09617901212' }}</p>\n                        <p class=\"footer_text\"><span>Email:</span>{{ Site::config()->mobile??'info@daffodilvarsity.edu.bd' }}</p>\n                        <a  class=\"footer_text\" target=\"_blank\" href=\"https://pd.daffodilvarsity.edu.bd/support_ticket\">Helpdesk</a>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4\">\n                <div class=\"f_inner\">\n                    <p class=\"heading_three text_white\">Connect With Us</p>\n\n                    <div class=\"f_social f_p_top\">\n                        <a class=\"social_box\" href=\"https://www.facebook.com/daffodilvarsity.edu.bd\" target=\"_blank\">\n                            <i class=\"fab fa-facebook-f\"></i>", "func_src_after": "\n@yield('content')\n@include('theme.partial.feedback')\n<!-- ----------------------- footer start ----------------------- -->\n<footer>\n    <!-- ------------------------------ Return to Top start ------------------------------ -->\n    <a href=\"javascript:\" id=\"return-to-top\">\n        <i class=\"fas fa-chevron-up\"></i>\n    </a>\n    <!-- ------------------------------ Return to Top end ------------------------------ -->\n{{--    <div class=\"container\">--}}\n{{--        <p class=\"footer_text\">--}}\n{{--            {{ Site::config()->site_title, 'Copyright © 2022 Daffodil International University. All Rights Reserved.' }}--}}\n{{--        </p>--}}\n{{--    </div>--}}\n\n<div class=\"container\" data-aos=\"fade-up\" data-aos-delay=\"100\">\n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"f_inner\">\n                    <div class=\"footer_logo_main\">\n                        <div class=\"f_logo\">\n                            <img src=\"{!! Site::config()->logo!=null?Site::config()->logo->getUrl()??url('assets/theme/images//Parents Experience Logo.png'):url('assets/theme/images//Parents Experience Logo.png')!!}\" alt=\"DIU Parents Experience\"/>\n\n                        </div>\n                    </div>\n\n                    <p class=\"footer_text f_p_top\"> {{ Site::config()->copyright??'Copyright © 2022 Daffodil International University. All Rights Reserved.' }}</p>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4\">\n                <div class=\"f_inner\">\n                    <p class=\"heading_three text_white\">Support</p>\n\n                    <div class=\"f_links f_p_top\">\n                        <p class=\"footer_text\"><span>Hotline:</span> {{ Site::config()->mobile?? '09617901212' }}</p>\n                        <p class=\"footer_text\"><span>Email:</span>{{ Site::config()->mobile??'<EMAIL>' }}</p>\n                        <a  class=\"footer_text\" target=\"_blank\" href=\"https://pd.daffodilvarsity.edu.bd/support_ticket\">Helpdesk</a>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4\">\n                <div class=\"f_inner\">\n                    <p class=\"heading_three text_white\">Connect With Us</p>\n\n                    <div class=\"f_social f_p_top\">\n                        <a class=\"social_box\" href=\"https://www.facebook.com/daffodilvarsity.edu.bd\" target=\"_blank\">\n                            <i class=\"fab fa-facebook-f\"></i>", "line_changes": {"deleted": [{"line_no": 38, "char_start": 1748, "char_end": 1878, "line": "                        <p class=\"footer_text\"><span>Email:</span>{{ Site::config()->mobile??'info@daffodilvarsity.edu.bd' }}</p>\n"}], "added": [{"line_no": 39, "char_start": 1748, "char_end": 1858, "line": "                        <p class=\"footer_text\"><span>Email:</span>{{ Site::config()->mobile??'<EMAIL>' }}</p>\n"}]}, "char_changes": {"deleted": [{"char_start": 1748, "char_end": 1878, "chars": "                        <p class=\"footer_text\"><span>Email:</span>{{ Site::config()->mobile??'info@daffodilvarsity.edu.bd' }}</p>\n"}], "added": [{"char_start": 1748, "char_end": 1858, "chars": "                        <p class=\"footer_text\"><span>Email:</span>{{ Site::config()->mobile??'<EMAIL>' }}</p>\n"}]}}
{"func_name": 3619, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                                <strong>Số lượng ít nhất 1 chiếc</strong>\n                            </span>\n                                            @endif\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group {{isset($errors)&& $errors->has('txtName') ? ' has-error' : '' }}\">\n                                        <label for=\"txtName\" class=\"control-label col-md-3 col-sm-2 col-xs-5\">Thành\n                                            tiền </label>\n                                        <div class=\" col-md-9 col-sm-10 col-xs-7\" id=\"totalPrice\">\n                                            {{$product->product_price}}đ\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group {{isset($errors)&& $errors->has('txtName') ? ' has-error' : '' }}\">\n                                        <label for=\"txtName\" class=\"control-label col-md-3 col-sm-2\">Họ tên\n                                            <i>*</i></label>\n                                        <div class=\" col-md-9 col-sm-10\">\n                                            <input id=\"txtName\" type=\"text\" class=\"form-control\" name=\"txtName\"\n                                                   placeholder=\"Họ và tên\"\n                                                   value=\"{{isset($member['name'])?$member['name']: old('txtName') }}\"\n                                                   required>\n                                            @if (isset($errors)&&$errors->has('txtName'))\n                                                <span class=\"help-block\">\n                                <strong>Họ tên không được để trống</strong>\n                            </span>\n                                            @endif\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group{{isset($errors)&& $errors->has('txtMobile') ? ' has-error' : '' }}\">\n                                        <label for=\"txtMobile\" class=\"control-label col-md-3 col-sm-2\">ĐT liên hệ\n                                            <i>*</i></label>\n                                        <div class=\" col-md-9 col-sm-10\">\n                                            <input id=\"txtMobile\" type=\"text\" class=\"form-control\"\n                                                   name=\"txtMobile\" placeholder=\"VD:0986255353\"\n                                                   value=\"{{isset($member['phone'])?$member['phone']: old('txtMobile') }}\"\n                                                   required>\n                                            @if (isset($errors)&&$errors->has('txtMobile'))\n                                                <span class=\"help-block\">\n\t\t\t\t\t\t\t\t<strong>Số điện thoại không đúng</strong>\n                            </span>\n                                            @endif\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group{{isset($errors)&& $errors->has('txtEmail') ? ' has-error' : '' }}\">\n                                        <label for=\"txtEmail\" class=\"control-label col-md-3 col-sm-2\">Địa chỉ\n                                            mail</label>\n                                        <div class=\" col-md-9 col-sm-10\">\n                                            <input id=\"txtEmail\" type=\"email\" class=\"form-control \" name=\"txtEmail\"\n                                                   placeholder=\"abc@gmail.com\"\n                                                   value=\"{{isset($member['email'])?$member['email']: old('txtEmail') }}\">\n                                            @if (isset($errors)&&$errors->has('txtEmail'))", "func_src_after": "                                <strong>Số lượng ít nhất 1 chiếc</strong>\n                            </span>\n                                            @endif\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group {{isset($errors)&& $errors->has('txtName') ? ' has-error' : '' }}\">\n                                        <label for=\"txtName\" class=\"control-label col-md-3 col-sm-2 col-xs-5\">Thành\n                                            tiền </label>\n                                        <div class=\" col-md-9 col-sm-10 col-xs-7\" id=\"totalPrice\">\n                                            {{$product->product_price}}đ\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group {{isset($errors)&& $errors->has('txtName') ? ' has-error' : '' }}\">\n                                        <label for=\"txtName\" class=\"control-label col-md-3 col-sm-2\">Họ tên\n                                            <i>*</i></label>\n                                        <div class=\" col-md-9 col-sm-10\">\n                                            <input id=\"txtName\" type=\"text\" class=\"form-control\" name=\"txtName\"\n                                                   placeholder=\"Họ và tên\"\n                                                   value=\"{{isset($member['name'])?$member['name']: old('txtName') }}\"\n                                                   required>\n                                            @if (isset($errors)&&$errors->has('txtName'))\n                                                <span class=\"help-block\">\n                                <strong>Họ tên không được để trống</strong>\n                            </span>\n                                            @endif\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group{{isset($errors)&& $errors->has('txtMobile') ? ' has-error' : '' }}\">\n                                        <label for=\"txtMobile\" class=\"control-label col-md-3 col-sm-2\">ĐT liên hệ\n                                            <i>*</i></label>\n                                        <div class=\" col-md-9 col-sm-10\">\n                                            <input id=\"txtMobile\" type=\"text\" class=\"form-control\"\n                                                   name=\"txtMobile\" placeholder=\"VD:0986255353\"\n                                                   value=\"{{isset($member['phone'])?$member['phone']: old('txtMobile') }}\"\n                                                   required>\n                                            @if (isset($errors)&&$errors->has('txtMobile'))\n                                                <span class=\"help-block\">\n\t\t\t\t\t\t\t\t<strong>Số điện thoại không đúng</strong>\n                            </span>\n                                            @endif\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group{{isset($errors)&& $errors->has('txtEmail') ? ' has-error' : '' }}\">\n                                        <label for=\"txtEmail\" class=\"control-label col-md-3 col-sm-2\">Địa chỉ\n                                            mail</label>\n                                        <div class=\" col-md-9 col-sm-10\">\n                                            <input id=\"txtEmail\" type=\"email\" class=\"form-control \" name=\"txtEmail\"\n                                                   placeholder=\"<EMAIL>\"\n                                                   value=\"{{isset($member['email'])?$member['email']: old('txtEmail') }}\">\n                                            @if (isset($errors)&&$errors->has('txtEmail'))", "line_changes": {"deleted": [{"line_no": 48, "char_start": 3601, "char_end": 3680, "line": "                                                   placeholder=\"abc@gmail.com\"\n"}], "added": [{"line_no": 49, "char_start": 3601, "char_end": 3674, "line": "                                                   placeholder=\"<EMAIL>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 3601, "char_end": 3680, "chars": "                                                   placeholder=\"abc@gmail.com\"\n"}], "added": [{"char_start": 3601, "char_end": 3674, "chars": "                                                   placeholder=\"<EMAIL>\"\n"}]}}
{"func_name": 3635, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n//Имя пользователя: webadmin\n//Пароль: sbncotJnfY\n\nif($_SERVER['HTTP_HOST']==\"miu-portal.lizasoft.com\"){\n\n    return [\n        'components' => [\n            'db' => [\n                'class' => 'yii\\db\\Connection',\n                'dsn' => 'pgsql:host=127.0.0.1;dbname=photobook',\n                'username' => 'postgres',\n                'password' => 'Max31960',\n                'charset' => 'utf8',\n            ],\n            'mailer' => [\n                'class' => 'yii\\swiftmailer\\Mailer',\n                'viewPath' => '@common/mail',\n            ],\n        ],\n    ];\n\n\n}else{\n    return [\n        'components' => [\n            'db' => [\n                'class' => 'yii\\db\\Connection',\n                'dsn' => 'pgsql:host=ec2-54-235-151-252.compute-1.amazonaws.com;dbname=d3m1jkh1saukl9',\n                'username' => 'nvwwtvmauftsvy',\n                'password' => 'T4Tl019smi9ETrJQHHc8GxxzPj',\n                'charset' => 'utf8',\n            ],\n            'mailer' => [\n                'class' => 'yii\\swiftmailer\\Mailer',\n                'viewPath' => '@common/mail',\n            ],\n        ],\n    ];\n}\n/*\nreturn [\n    'components' => [\n        'db' => [\n            'class' => 'yii\\db\\Connection',\n            'dsn' => 'pgsql:host=postgres28383-photobook.jelastic.neohost.net dbname=photobook user=webadmin password=sbncotJnfY',\n            'username' => 'webadmin',\n            'password' => 'sbncotJnfY',\n            'charset' => 'utf8',\n        ],", "func_src_after": "<?php\n//Имя пользователя: webadmin\n//Пароль: sbncotJnfY\n\nif($_SERVER['HTTP_HOST']==\"miu-portal.lizasoft.com\"){\n\n    return [\n        'components' => [\n            'db' => [\n                'class' => 'yii\\db\\Connection',\n                'dsn' => 'pgsql:host=<IP-Address>;dbname=photobook',\n                'username' => 'postgres',\n                'password' => 'Max31960',\n                'charset' => 'utf8',\n            ],\n            'mailer' => [\n                'class' => 'yii\\swiftmailer\\Mailer',\n                'viewPath' => '@common/mail',\n            ],\n        ],\n    ];\n\n\n}else{\n    return [\n        'components' => [\n            'db' => [\n                'class' => 'yii\\db\\Connection',\n                'dsn' => 'pgsql:host=ec2-54-235-151-252.compute-1.amazonaws.com;dbname=d3m1jkh1saukl9',\n                'username' => 'nvwwtvmauftsvy',\n                'password' => 'T4Tl019smi9ETrJQHHc8GxxzPj',\n                'charset' => 'utf8',\n            ],\n            'mailer' => [\n                'class' => 'yii\\swiftmailer\\Mailer',\n                'viewPath' => '@common/mail',\n            ],\n        ],\n    ];\n}\n/*\nreturn [\n    'components' => [\n        'db' => [\n            'class' => 'yii\\db\\Connection',\n            'dsn' => 'pgsql:host=postgres28383-photobook.jelastic.neohost.net dbname=photobook user=webadmin password=sbncotJnfY',\n            'username' => 'webadmin',\n            'password' => 'sbncotJnfY',\n            'charset' => 'utf8',\n        ],", "line_changes": {"deleted": [{"line_no": 11, "char_start": 221, "char_end": 287, "line": "                'dsn' => 'pgsql:host=127.0.0.1;dbname=photobook',\n"}], "added": [{"line_no": 12, "char_start": 221, "char_end": 290, "line": "                'dsn' => 'pgsql:host=<IP-Address>;dbname=photobook',\n"}]}, "char_changes": {"deleted": [{"char_start": 221, "char_end": 287, "chars": "                'dsn' => 'pgsql:host=127.0.0.1;dbname=photobook',\n"}], "added": [{"char_start": 221, "char_end": 290, "chars": "                'dsn' => 'pgsql:host=<IP-Address>;dbname=photobook',\n"}]}}
{"func_name": 3645, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nnamespace One\\Test\\Unit;\n\nuse One\\Uri;\nuse function One\\createUriFromString;\nuse BadMethodCallException;\n\nclass UriTest extends \\PHPUnit\\Framework\\TestCase\n{\n    /**\n     * @covers Uri::createFromString\n     * @covers Uri::getScheme\n     * @covers Uri::getUserInfo\n     * @covers Uri::getHost\n     * @covers Uri::getPort\n     * @covers Uri::getPath\n     * @covers Uri::getQuery\n     * @covers Uri::getFragment\n     * @covers Uri::getBaseUrl\n     * @covers Uri::withHost\n     * @covers Uri::withUserInfo\n     * @covers Uri::withPort\n     * @covers Uri::withScheme\n     * @covers Uri::withPath\n     * @covers Uri::withQuery\n     * @covers Uri::withString\n     * @covers Uri::withFragment\n     * @covers Uri::filterScheme\n     * @covers Uri::filterPort\n     * @covers Uri::filterPath\n     * @covers Uri::filterQuery\n     * @covers Uri::hasStandardPort\n     */\n\n    public function testMethods()\n    {\n        $string = 'https://username:password@www.example.com:85/kerap/254?page=1#idkomentar';\n\n        $uri = createUriFromString($string);\n\n        $this->assertInstanceOf(Uri::class, $uri);\n\n        $this->assertEquals('https', $uri->getScheme());\n        $this->assertEquals('username:password', $uri->getUserInfo());\n        $this->assertEquals('www.example.com', $uri->getHost());\n        $this->assertEquals('85', $uri->getPort());\n        $this->assertEquals('/kerap/254', $uri->getPath());\n        $this->assertEquals('page=1', $uri->getQuery());\n        $this->assertEquals('idkomentar', $uri->getFragment());", "func_src_after": "<?php\n\nnamespace One\\Test\\Unit;\n\nuse One\\Uri;\nuse function One\\createUriFromString;\nuse BadMethodCallException;\n\nclass UriTest extends \\PHPUnit\\Framework\\TestCase\n{\n    /**\n     * @covers Uri::createFromString\n     * @covers Uri::getScheme\n     * @covers Uri::getUserInfo\n     * @covers Uri::getHost\n     * @covers Uri::getPort\n     * @covers Uri::getPath\n     * @covers Uri::getQuery\n     * @covers Uri::getFragment\n     * @covers Uri::getBaseUrl\n     * @covers Uri::withHost\n     * @covers Uri::withUserInfo\n     * @covers Uri::withPort\n     * @covers Uri::withScheme\n     * @covers Uri::withPath\n     * @covers Uri::withQuery\n     * @covers Uri::withString\n     * @covers Uri::withFragment\n     * @covers Uri::filterScheme\n     * @covers Uri::filterPort\n     * @covers Uri::filterPath\n     * @covers Uri::filterQuery\n     * @covers Uri::hasStandardPort\n     */\n\n    public function testMethods()\n    {\n        $string = 'https://username:password@www.example.com:85/kerap/254?page=1#idkomentar';\n\n        $uri = createUriFromString($string);\n\n        $this->assertInstanceOf(Uri::class, $uri);\n\n        $this->assertEquals('https', $uri->getScheme());\n        $this->assertEquals('username:password', $uri->getUserInfo());\n        $this->assertEquals('www.example.com', $uri->getHost());\n        $this->assertEquals('85', $uri->getPort());\n        $this->assertEquals('/kerap/254', $uri->getPath());\n        $this->assertEquals('page=1', $uri->getQuery());\n        $this->assertEquals('idkomentar', $uri->getFragment());", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3659, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t\t'description' => $this->request->getVar('description'),\n\t\t\t\t\n\t\t\t\t'amount' => $this->request->getVar('amount'),\n\n\n\t\t\t);\n\t\t\t\n\n\t\t\t$orders_model->insert_order($data);\n \t\t\treturn redirect()->to(base_url('customersession'));\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\t$this->insertOrder($customer_id);\t\n\t\t\t\t\t\n\t\t}\n\t}\n\n\n\n\tpublic function removeOrder($id=null){\n\t\t\n\t\tif ($id==null){\n\t\t\treturn redirect()->to('customersession');\n\t\t}\n\n\t\t$orders_model = new OrdersModel();\n\n\t\t$result = $orders_model->getData($id);\n\n\t\tif ($result !=NULL){\n\t\t\t$orders_model->removeOrder($result['id']);\t\t\n\t\t\treturn redirect()->to(base_url('customersession'));\n\t\t\t\n\t\t}else{\n\t\t\treturn redirect()->to(base_url('customersession'));\n\t\t}\n\n\n\t} \n\n\n\tpublic function insertData(){\n\n\t\t$rules = [\n\t\t\t'name' => 'required|min_length[3]|max_length[50]',\n\t\t\t'email' => 'required|min_length[6]|max_length[50]|valid_email|is_unique[customers.email]',\n\t\t\t'passwd'=> 'required|min_length[6]|max_length[60]', \n\t\t];\n", "func_src_after": "\t\t\t\t'description' => $this->request->getVar('description'),\n\t\t\t\t\n\t\t\t\t'amount' => $this->request->getVar('amount'),\n\n\n\t\t\t);\n\t\t\t\n\n\t\t\t$orders_model->insert_order($data);\n \t\t\treturn redirect()->to(base_url('customersession'));\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\t$this->insertOrder($customer_id);\t\n\t\t\t\t\t\n\t\t}\n\t}\n\n\n\n\tpublic function removeOrder($id=null){\n\t\t\n\t\tif ($id==null){\n\t\t\treturn redirect()->to('customersession');\n\t\t}\n\n\t\t$orders_model = new OrdersModel();\n\n\t\t$result = $orders_model->getData($id);\n\n\t\tif ($result !=NULL){\n\t\t\t$orders_model->removeOrder($result['id']);\t\t\n\t\t\treturn redirect()->to(base_url('customersession'));\n\t\t\t\n\t\t}else{\n\t\t\treturn redirect()->to(base_url('customersession'));\n\t\t}\n\n\n\t} \n\n\n\tpublic function insertData(){\n\n\t\t$rules = [\n\t\t\t'name' => 'required|min_length[3]|max_length[50]',\n\t\t\t'email' => 'required|min_length[6]|max_length[50]|valid_email|is_unique[customers.email]',\n\t\t\t'passwd'=> 'required|min_length[6]|max_length[60]', \n\t\t];\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3675, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n$lang = array(\n\n  'adminPanel'  =>  'Admin Panel',\n  'login'       =>  'Login',\n\t'password'\t\t=>\t'Password',\n\t'mail'\t\t\t\t=>\t'Mail',\n\n  // Login errors\n  'wrongPassword' => 'Wrong password',\n  'wrongMail' => 'Wrong mail',\n\n  '404notfound' => '404 Not Found',\n  'goBack'      => 'Go Back',\n\n  'general' => 'General',\n\t'download'=>'Download',\n  'crawlingEnableText'  => 'Enable crawling',\n  'siteIconChangeText'  => 'Change website icon',\n  'send'  =>  'Send',\n\t'goToTop'=>'Go to top',\n  'shortcuts'   => 'Shortcuts',\n  'language'  => 'Language',\n  'mainPage'  => 'Main Page',\n\t'editImages'=>'Edit Images',\n  'loadTheme' => 'Load Theme',\n  'editVariables' => 'Edit Variables',\n  'editManualKeywords'  => 'Edit keywords manually',\n  'logout'  => 'Log out',\n  'zipfile' => 'Zip file',\n  'themeUpladedText'  => 'Theme loaded successfully! You can start here',\n  'add' => 'Add',\n  'delete'  => 'Delete',\n  'giveKeywordText' => 'Type keyword',\n  'useOnlyAlphabet' => 'Use only alphabet',\n  'procSuccess' => 'Process success',\n  'procError' => 'Process unsuccess',\n\n\t//\n\t'selectIconIcoType'\t=> 'Select image in &quot;ICO&quot; type for site icon',\n\t'languageForDefaultAndAdmin'\t=> 'This language will be both the language of your management panel and the language that will be directed to the home address of your site.',\n\t'thisProcessDeleteEverythingSure'\t=> 'This process will delete all the data of your site. Are you sure about this?',\n\t'downloadBackup'=>'Download backup',\n\t'langFileNotFound'=>'Language package not found.',\n\t'editOtherLang'=>'Edit another language',\n\t'keyword'=>'Keyword',\n\t'value'=>'Value',\n\n\t'oldFileCannotDelete'=>'Cannot delete old file',\n\t'newFileCannotCreate'=>'Cannot create new file',", "func_src_after": "<?php\n$lang = array(\n\n  'adminPanel'  =>  'Admin Panel',\n  'login'       =>  'Login',\n\t'password'\t\t=>\t'Password',\n\t'mail'\t\t\t\t=>\t'Mail',\n\n  // Login errors\n  'wrongPassword' => 'Wrong password',\n  'wrongMail' => 'Wrong mail',\n\n  '404notfound' => '404 Not Found',\n  'goBack'      => 'Go Back',\n\n  'general' => 'General',\n\t'download'=>'Download',\n  'crawlingEnableText'  => 'Enable crawling',\n  'siteIconChangeText'  => 'Change website icon',\n  'send'  =>  'Send',\n\t'goToTop'=>'Go to top',\n  'shortcuts'   => 'Shortcuts',\n  'language'  => 'Language',\n  'mainPage'  => 'Main Page',\n\t'editImages'=>'Edit Images',\n  'loadTheme' => 'Load Theme',\n  'editVariables' => 'Edit Variables',\n  'editManualKeywords'  => 'Edit keywords manually',\n  'logout'  => 'Log out',\n  'zipfile' => 'Zip file',\n  'themeUpladedText'  => 'Theme loaded successfully! You can start here',\n  'add' => 'Add',\n  'delete'  => 'Delete',\n  'giveKeywordText' => 'Type keyword',\n  'useOnlyAlphabet' => 'Use only alphabet',\n  'procSuccess' => 'Process success',\n  'procError' => 'Process unsuccess',\n\n\t//\n\t'selectIconIcoType'\t=> 'Select image in &quot;ICO&quot; type for site icon',\n\t'languageForDefaultAndAdmin'\t=> 'This language will be both the language of your management panel and the language that will be directed to the home address of your site.',\n\t'thisProcessDeleteEverythingSure'\t=> 'This process will delete all the data of your site. Are you sure about this?',\n\t'downloadBackup'=>'Download backup',\n\t'langFileNotFound'=>'Language package not found.',\n\t'editOtherLang'=>'Edit another language',\n\t'keyword'=>'Keyword',\n\t'value'=>'Value',\n\n\t'oldFileCannotDelete'=>'Cannot delete old file',\n\t'newFileCannotCreate'=>'Cannot create new file',", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3684, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/**\n * Hooks Container Class\n *\n * The Container class holds all user definitions for hook points in the form of\n * Hook class objects. It also provides methods for adding new definitions, and\n * execution of those user definitions.\n *\n * @package   SlaxWeb\\Hooks\n * @author    Tomaz Lovrec <tomaz.lovrec@gmail.com>\n * @copyright 2016 (c) Tomaz Lovrec\n * @license   MIT <https://opensource.org/licenses/MIT>\n * @link      https://github.com/slaxweb/\n * @version   0.6\n */\nnamespace SlaxWeb\\Hooks;\n\nclass Container\n{\n    /**\n     * Logger\n     *\n     * @var \\Psr\\Log\\LoggerInterface\n     */\n    protected $logger = null;\n\n    /**\n     * Hook definition container\n     *\n     * @var array\n     */\n    protected $hooks = [];\n\n    /**\n     * Hook Parameters\n     *\n     * @var array\n     */\n    protected $params = [];\n\n    /**\n     * Prevent further execution\n     *\n     * @var bool\n     */\n    protected $stop = false;\n\n    /**\n     * Class constructor\n     *", "func_src_after": "<?php\n/**\n * Hooks Container Class\n *\n * The Container class holds all user definitions for hook points in the form of\n * Hook class objects. It also provides methods for adding new definitions, and\n * execution of those user definitions.\n *\n * @package   SlaxWeb\\Hooks\n * @author    Tomaz Lovrec <<EMAIL>>\n * @copyright 2016 (c) Tomaz Lovrec\n * @license   MIT <https://opensource.org/licenses/MIT>\n * @link      https://github.com/slaxweb/\n * @version   0.6\n */\nnamespace SlaxWeb\\Hooks;\n\nclass Container\n{\n    /**\n     * Logger\n     *\n     * @var \\Psr\\Log\\LoggerInterface\n     */\n    protected $logger = null;\n\n    /**\n     * Hook definition container\n     *\n     * @var array\n     */\n    protected $hooks = [];\n\n    /**\n     * Hook Parameters\n     *\n     * @var array\n     */\n    protected $params = [];\n\n    /**\n     * Prevent further execution\n     *\n     * @var bool\n     */\n    protected $stop = false;\n\n    /**\n     * Class constructor\n     *", "line_changes": {"deleted": [{"line_no": 10, "char_start": 270, "char_end": 322, "line": " * @author    Tomaz Lovrec <tomaz.lovrec@gmail.com>\n"}], "added": [{"line_no": 11, "char_start": 270, "char_end": 307, "line": " * @author    Tomaz Lovrec <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 270, "char_end": 322, "chars": " * @author    Tomaz Lovrec <tomaz.lovrec@gmail.com>\n"}], "added": [{"char_start": 270, "char_end": 307, "chars": " * @author    Tomaz Lovrec <<EMAIL>>\n"}]}}
{"func_name": 3711, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/*\n * This file is part of the Eko\\GoogleTranslateBundle Symfony bundle.\n *\n * (c) Vincent Composieux <vincent.composieux@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Eko\\GoogleTranslateBundle\\Translate;\n\nuse GuzzleHttp\\ClientInterface;\nuse Symfony\\Component\\Stopwatch\\Stopwatch;\nuse Symfony\\Component\\Stopwatch\\StopwatchEvent;\n\n/**\n * Class Method.\n *\n * This is the main Method class that is instancing Guzzle HTTP client\n *\n * @author Vincent Composieux <vincent.composieux@gmail.com>\n */\nclass Method\n{\n    /**\n     * @var string Google Translate API key\n     */\n    protected $apiKey = null;\n\n    /**\n     * @var ClientInterface A Guzzle client instance\n     */\n    protected $client;\n\n    /**\n     * @var string API translation url\n     */\n    protected $url = null;\n\n    /**\n     * @var array Symfony profiler profiles data\n     */\n    protected $profiles = [];\n\n    /**\n     * @var Stopwatch Symfony profiler Stopwatch service\n     */\n    protected $stopwatch;\n", "func_src_after": "<?php\n/*\n * This file is part of the Eko\\GoogleTranslateBundle Symfony bundle.\n *\n * (c) Vincent Composieux <<EMAIL>>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Eko\\GoogleTranslateBundle\\Translate;\n\nuse GuzzleHttp\\ClientInterface;\nuse Symfony\\Component\\Stopwatch\\Stopwatch;\nuse Symfony\\Component\\Stopwatch\\StopwatchEvent;\n\n/**\n * Class Method.\n *\n * This is the main Method class that is instancing Guzzle HTTP client\n *\n * @author Vincent Composieux <<EMAIL>>\n */\nclass Method\n{\n    /**\n     * @var string Google Translate API key\n     */\n    protected $apiKey = null;\n\n    /**\n     * @var ClientInterface A Guzzle client instance\n     */\n    protected $client;\n\n    /**\n     * @var string API translation url\n     */\n    protected $url = null;\n\n    /**\n     * @var array Symfony profiler profiles data\n     */\n    protected $profiles = [];\n\n    /**\n     * @var Stopwatch Symfony profiler Stopwatch service\n     */\n    protected $stopwatch;\n", "line_changes": {"deleted": [{"line_no": 5, "char_start": 82, "char_end": 139, "line": " * (c) Vincent Composieux <vincent.composieux@gmail.com>\n"}, {"line_no": 23, "char_start": 523, "char_end": 584, "line": " * @author Vincent Composieux <vincent.composieux@gmail.com>\n"}], "added": [{"line_no": 6, "char_start": 82, "char_end": 118, "line": " * (c) Vincent Composieux <<EMAIL>>\n"}, {"line_no": 24, "char_start": 523, "char_end": 563, "line": " * @author Vincent Composieux <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 82, "char_end": 139, "chars": " * (c) Vincent Composieux <vincent.composieux@gmail.com>\n"}, {"char_start": 523, "char_end": 584, "chars": " * @author Vincent Composieux <vincent.composieux@gmail.com>\n"}], "added": [{"char_start": 82, "char_end": 118, "chars": " * (c) Vincent Composieux <<EMAIL>>\n"}, {"char_start": 523, "char_end": 563, "chars": " * @author Vincent Composieux <<EMAIL>>\n"}]}}
{"func_name": 3717, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php  if ( ! defined('LIB')) exit('Direct script access is not allowed!');\n/*\n * This file is a part of the inno package.\n * Copyright (C) 2008 Orlino L. Monares Jr. <anxietylost110987@gmail.com, orlino_monares110987@yahoo.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * \n *\n * @author:     Orlino L. Monares Jr. <anxietylost110987@gmail.com, orlino_monares110987@yahoo.com>\n * @package:    inno\n * @subpackage: helper.Form\n *\n * @todo: _____________\n *\n */\n \nfunction initializeForm()\n{\n  // initialize\n}\n\n/*\n * Creates a smart input textbox\n * \n * @param: name     The [name] of the textbox, also associated with its [id]\n * @param: details  The details pertaining to the textbox; [class], [style], tooptip, etc.\n * \n * @return: textbox Returns the textbox, as a string\n */\nfunction textbox($name, $details = array())\n{\n  $textbox = '<input type=\"text\" name=\"'.$name.'\" id=\"'.$name.'\"'._tag_details('input.textbox', $details).'/>';\n\n  return $textbox;\n}\n\n/*\n * Creates a smart form initialization tag\n * \n * @param: url      The url to target the form [action]\n * @param: method   The request method: POST || GET\n * @param: details  The details pertaining to the textbox; [class], [style], tooptip, etc.\n */\nfunction form($url, $method = \"post\", $details = array())\n{\n  $form = '<form action=\"'.$url.'\" method=\"'.$method.'\"'._tag_details('form', $details).'>';", "func_src_after": "<?php  if ( ! defined('LIB')) exit('Direct script access is not allowed!');\n/*\n * This file is a part of the inno package.\n * Copyright (C) 2008 Orlino L. Monares Jr. <<EMAIL>, <EMAIL>>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * \n *\n * @author:     Orlino L. Monares Jr. <<EMAIL>, <EMAIL>>\n * @package:    inno\n * @subpackage: helper.Form\n *\n * @todo: _____________\n *\n */\n \nfunction initializeForm()\n{\n  // initialize\n}\n\n/*\n * Creates a smart input textbox\n * \n * @param: name     The [name] of the textbox, also associated with its [id]\n * @param: details  The details pertaining to the textbox; [class], [style], tooptip, etc.\n * \n * @return: textbox Returns the textbox, as a string\n */\nfunction textbox($name, $details = array())\n{\n  $textbox = '<input type=\"text\" name=\"'.$name.'\" id=\"'.$name.'\"'._tag_details('input.textbox', $details).'/>';\n\n  return $textbox;\n}\n\n/*\n * Creates a smart form initialization tag\n * \n * @param: url      The url to target the form [action]\n * @param: method   The request method: POST || GET\n * @param: details  The details pertaining to the textbox; [class], [style], tooptip, etc.\n */\nfunction form($url, $method = \"post\", $details = array())\n{\n  $form = '<form action=\"'.$url.'\" method=\"'.$method.'\"'._tag_details('form', $details).'>';", "line_changes": {"deleted": [{"line_no": 4, "char_start": 123, "char_end": 229, "line": " * Copyright (C) 2008 Orlino L. Monares Jr. <anxietylost110987@gmail.com, orlino_monares110987@yahoo.com>\n"}, {"line_no": 14, "char_start": 331, "char_end": 431, "line": " * @author:     Orlino L. Monares Jr. <anxietylost110987@gmail.com, orlino_monares110987@yahoo.com>\n"}], "added": [{"line_no": 5, "char_start": 123, "char_end": 186, "line": " * Copyright (C) 2008 Orlino L. Monares Jr. <<EMAIL>, <EMAIL>>\n"}, {"line_no": 15, "char_start": 331, "char_end": 388, "line": " * @author:     Orlino L. Monares Jr. <<EMAIL>, <EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 123, "char_end": 229, "chars": " * Copyright (C) 2008 Orlino L. Monares Jr. <anxietylost110987@gmail.com, orlino_monares110987@yahoo.com>\n"}, {"char_start": 331, "char_end": 431, "chars": " * @author:     Orlino L. Monares Jr. <anxietylost110987@gmail.com, orlino_monares110987@yahoo.com>\n"}], "added": [{"char_start": 123, "char_end": 186, "chars": " * Copyright (C) 2008 Orlino L. Monares Jr. <<EMAIL>, <EMAIL>>\n"}, {"char_start": 331, "char_end": 388, "chars": " * @author:     Orlino L. Monares Jr. <<EMAIL>, <EMAIL>>\n"}]}}
{"func_name": 3736, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php \n\tinclude(\"includes/config.php\");\n\n\t$name = \"\";\n\t$email =\"\";\n\t$message =\"\";\n\n\tfunction sanitizeFormString($inputText) {\n\t$inputText = strip_tags($inputText);\n\t$inputText = str_replace(\" \", \"\", $inputText);\n\t$inputText = ucfirst(strtolower($inputText));\n\treturn $inputText;\n}\n\n\tfunction sanitizeFormEmail($inputText) {\n\t$inputText = strip_tags($inputText);\n\t$inputText = str_replace(\" \", \"\", $inputText);\n\treturn $inputText;\n}\n\nif(isset($_SESSION['userLoggedIn'])) {\n\t\n}\nelse {\n\theader(\"Location: register.php\");\n}\n\n\nif(isset($_POST['submit'])){\n\t\n\trequire_once('PHPMailer-master/src/class.phpmailer.php');\n  \trequire(\"PHPMailer-master/src/SMTP.php\");\n  \trequire(\"PHPMailer-master/src/Exception.php\");\n\n  \t$username = $_POST['username'];\n  \t$email = $_POST['email'];\n  \t\n\n\t$mail = new PHPMailer\\PHPMailer\\PHPMailer();\n\t$mail->setFrom('cavjuice@gmail.com', 'CavJuice Company');\n\t$mail->addAddress($email, $name);\n\t$mail->AddCC('cavjuice@gmail.com', 'CavJuice Company');\n\t$mail->Subject  = 'Refund Request';\n\t$mail->Body     = \"Your Refund Request has been recieved and is being processed. Review of Request may take up to 4-5 buisness days.\";\n\tif(!$mail->send()) {\n\t  echo 'Message was not sent.';\n\t  echo 'Mailer error: ' . $mail->ErrorInfo;\n\t} else {\n\t  echo 'Message has been sent.';\n\t}", "func_src_after": "<?php \n\tinclude(\"includes/config.php\");\n\n\t$name = \"\";\n\t$email =\"\";\n\t$message =\"\";\n\n\tfunction sanitizeFormString($inputText) {\n\t$inputText = strip_tags($inputText);\n\t$inputText = str_replace(\" \", \"\", $inputText);\n\t$inputText = ucfirst(strtolower($inputText));\n\treturn $inputText;\n}\n\n\tfunction sanitizeFormEmail($inputText) {\n\t$inputText = strip_tags($inputText);\n\t$inputText = str_replace(\" \", \"\", $inputText);\n\treturn $inputText;\n}\n\nif(isset($_SESSION['userLoggedIn'])) {\n\t\n}\nelse {\n\theader(\"Location: register.php\");\n}\n\n\nif(isset($_POST['submit'])){\n\t\n\trequire_once('PHPMailer-master/src/class.phpmailer.php');\n  \trequire(\"PHPMailer-master/src/SMTP.php\");\n  \trequire(\"PHPMailer-master/src/Exception.php\");\n\n  \t$username = $_POST['username'];\n  \t$email = $_POST['email'];\n  \t\n\n\t$mail = new PHPMailer\\PHPMailer\\PHPMailer();\n\t$mail->setFrom('<EMAIL>', 'CavJuice Company');\n\t$mail->addAddress($email, $name);\n\t$mail->AddCC('<EMAIL>', 'CavJuice Company');\n\t$mail->Subject  = 'Refund Request';\n\t$mail->Body     = \"Your Refund Request has been recieved and is being processed. Review of Request may take up to 4-5 buisness days.\";\n\tif(!$mail->send()) {\n\t  echo 'Message was not sent.';\n\t  echo 'Mailer error: ' . $mail->ErrorInfo;\n\t} else {\n\t  echo 'Message has been sent.';\n\t}", "line_changes": {"deleted": [{"line_no": 40, "char_start": 823, "char_end": 882, "line": "\t$mail->setFrom('cavjuice@gmail.com', 'CavJuice Company');\n"}, {"line_no": 43, "char_start": 906, "char_end": 963, "line": "\t$mail->AddCC('cavjuice@gmail.com', 'CavJuice Company');\n"}], "added": [{"line_no": 41, "char_start": 823, "char_end": 871, "line": "\t$mail->setFrom('<EMAIL>', 'CavJuice Company');\n"}, {"line_no": 44, "char_start": 906, "char_end": 952, "line": "\t$mail->AddCC('<EMAIL>', 'CavJuice Company');\n"}]}, "char_changes": {"deleted": [{"char_start": 823, "char_end": 882, "chars": "\t$mail->setFrom('cavjuice@gmail.com', 'CavJuice Company');\n"}, {"char_start": 906, "char_end": 963, "chars": "\t$mail->AddCC('cavjuice@gmail.com', 'CavJuice Company');\n"}], "added": [{"char_start": 823, "char_end": 871, "chars": "\t$mail->setFrom('<EMAIL>', 'CavJuice Company');\n"}, {"char_start": 906, "char_end": 952, "chars": "\t$mail->AddCC('<EMAIL>', 'CavJuice Company');\n"}]}}
{"func_name": 3738, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/**\n * BinggitestController.php - Main Controller\n *\n * Main Controller Binggitest Module\n *\n * @category Controller\n * @package Binggitest\n * @author Verein onePlace\n * @copyright (C) 2020  Verein onePlace <admin@1plc.ch>\n * @license https://opensource.org/licenses/BSD-3-Clause\n * @version 1.0.0\n * @since 1.0.0\n */\n\ndeclare(strict_types=1);\n\nnamespace OnePlace\\Binggitest\\Controller;\n\nuse Application\\Controller\\CoreController;\nuse Application\\Model\\CoreEntityModel;\nuse OnePlace\\Binggitest\\Model\\Binggitest;\nuse OnePlace\\Binggitest\\Model\\BinggitestTable;\nuse Laminas\\View\\Model\\ViewModel;\nuse Laminas\\Db\\Adapter\\AdapterInterface;\n\nclass BinggitestController extends CoreController {\n    /**\n     * Binggitest Table Object\n     *\n     * @since 1.0.0\n     */\n    private $oTableGateway;\n\n    /**\n     * BinggitestController constructor.\n     *\n     * @param AdapterInterface $oDbAdapter\n     * @param BinggitestTable $oTableGateway\n     * @since 1.0.0\n     */\n    public function __construct(AdapterInterface $oDbAdapter,BinggitestTable $oTableGateway,$oServiceManager) {\n        $this->oTableGateway = $oTableGateway;\n        $this->sSingleForm = 'binggitest-single';\n        parent::__construct($oDbAdapter,$oTableGateway,$oServiceManager);\n\n        if($oTableGateway) {\n            # Attach TableGateway to Entity Models\n            if(!isset(CoreEntityModel::$aEntityTables[$this->sSingleForm])) {\n                CoreEntityModel::$aEntityTables[$this->sSingleForm] = $oTableGateway;", "func_src_after": "<?php\n/**\n * BinggitestController.php - Main Controller\n *\n * Main Controller Binggitest Module\n *\n * @category Controller\n * @package Binggitest\n * @author Verein onePlace\n * @copyright (C) 2020  Verein onePlace <<EMAIL>>\n * @license https://opensource.org/licenses/BSD-3-Clause\n * @version 1.0.0\n * @since 1.0.0\n */\n\ndeclare(strict_types=1);\n\nnamespace OnePlace\\Binggitest\\Controller;\n\nuse Application\\Controller\\CoreController;\nuse Application\\Model\\CoreEntityModel;\nuse OnePlace\\Binggitest\\Model\\Binggitest;\nuse OnePlace\\Binggitest\\Model\\BinggitestTable;\nuse Laminas\\View\\Model\\ViewModel;\nuse Laminas\\Db\\Adapter\\AdapterInterface;\n\nclass BinggitestController extends CoreController {\n    /**\n     * Binggitest Table Object\n     *\n     * @since 1.0.0\n     */\n    private $oTableGateway;\n\n    /**\n     * BinggitestController constructor.\n     *\n     * @param AdapterInterface $oDbAdapter\n     * @param BinggitestTable $oTableGateway\n     * @since 1.0.0\n     */\n    public function __construct(AdapterInterface $oDbAdapter,BinggitestTable $oTableGateway,$oServiceManager) {\n        $this->oTableGateway = $oTableGateway;\n        $this->sSingleForm = 'binggitest-single';\n        parent::__construct($oDbAdapter,$oTableGateway,$oServiceManager);\n\n        if($oTableGateway) {\n            # Attach TableGateway to Entity Models\n            if(!isset(CoreEntityModel::$aEntityTables[$this->sSingleForm])) {\n                CoreEntityModel::$aEntityTables[$this->sSingleForm] = $oTableGateway;", "line_changes": {"deleted": [{"line_no": 10, "char_start": 173, "char_end": 229, "line": " * @copyright (C) 2020  Verein onePlace <admin@1plc.ch>\n"}], "added": [{"line_no": 11, "char_start": 173, "char_end": 223, "line": " * @copyright (C) 2020  Verein onePlace <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 173, "char_end": 229, "chars": " * @copyright (C) 2020  Verein onePlace <admin@1plc.ch>\n"}], "added": [{"char_start": 173, "char_end": 223, "chars": " * @copyright (C) 2020  Verein onePlace <<EMAIL>>\n"}]}}
{"func_name": 3743, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        </li>\n        <li>\n            <a href=\"javascript:void(0)\">\n                <i class=\"mdi mdi-newspaper fa-fw\"></i> <span class=\"hide-menu\">News List / Memo<span class=\"fa arrow\"></span></span>\n            </a>\n            <ul class=\"nav nav-second-level\">\n                <li><a href=\"{{ route('administrator.news.index') }}\"><i class=\"mdi mdi-book-multiple fa-fw\"></i><span class=\"hide-menu\">News</span></a></li>\n                <li><a href=\"{{ route('administrator.internal-memo.index') }}\"><i class=\"mdi mdi-clipboard-text fa-fw\"></i><span class=\"hide-menu\">Internal Memo</span></a></li>\n                <li><a href=\"{{ route('administrator.peraturan-perusahaan.index') }}\"><i class=\"mdi mdi-file-document-box fa-fw\"></i><span class=\"hide-menu\">Product Information</span></a></li>\n            </ul>\n        </li>\n        @endif\n        @if(checkModuleAdmin(13))\n        <li>\n            <a href=\"{{ route('administrator.payroll.index') }}\">\n                <i class=\"mdi mdi-cash fa-fw\"></i> <span class=\"hide-menu\">Payroll</span>\n            </a>\n        </li>\n        @endif\n        @if(checkModuleAdmin(14))\n        <li>\n            <a href=\"javascript:void(0)\">\n                <i class=\"mdi mdi-nutrition fa-fw\"></i> <span class=\"hide-menu\">Facilities Management<span class=\"fa arrow\"></span></span>\n            </a>\n            <ul class=\"nav nav-second-level\">\n                <li>\n                    <a href=\"{{ route('administrator.asset.index') }}\"><i class=\"mdi mdi-home-modern fa-fw\"></i><span class=\"hide-menu\">Facilities</span></a>\n                </li>\n                <li>\n                    <a href=\"{{ route('administrator.asset-type.index') }}\"><i class=\"mdi mdi-plus-network fa-fw\"></i><span class=\"hide-menu\">Facilities Type</span></a>\n                </li>\n                <li>\n                    <a href=\"{{ route('administrator.asset-tracking.index') }}\"><i class=\"mdi mdi-chemical-weapon fa-fw\"></i><span class=\"hide-menu\">Facilities Tracking</span></a>\n                </li>\n            </ul>\n        </li>\n        @endif\n       \n        @if(checkModuleAdmin(15))\n       <li>\n             <a href=\"{{ route('attendance.index') }}\"><i class=\"mdi mdi-fingerprint fa-fw\"></i><span class=\"hide-menu\">Attendance</span></a>\n        </li>\n        @endif\n        <li class=\"mega-nav\">\n            <a href=\"{{ route('administrator.setting.index') }}\" class=\"waves-effect\">\n                <i class=\"mdi mdi-settings fa-fw\"></i> <span class=\"hide-menu\">@lang('menu.setting')</span>\n            </a>\n        </li>\n        <!--As Karyawan-->\n        @if(Auth::user()->project_id != 1)", "func_src_after": "        </li>\n        <li>\n            <a href=\"javascript:void(0)\">\n                <i class=\"mdi mdi-newspaper fa-fw\"></i> <span class=\"hide-menu\">News List / Memo<span class=\"fa arrow\"></span></span>\n            </a>\n            <ul class=\"nav nav-second-level\">\n                <li><a href=\"{{ route('administrator.news.index') }}\"><i class=\"mdi mdi-book-multiple fa-fw\"></i><span class=\"hide-menu\">News</span></a></li>\n                <li><a href=\"{{ route('administrator.internal-memo.index') }}\"><i class=\"mdi mdi-clipboard-text fa-fw\"></i><span class=\"hide-menu\">Internal Memo</span></a></li>\n                <li><a href=\"{{ route('administrator.peraturan-perusahaan.index') }}\"><i class=\"mdi mdi-file-document-box fa-fw\"></i><span class=\"hide-menu\">Product Information</span></a></li>\n            </ul>\n        </li>\n        @endif\n        @if(checkModuleAdmin(13))\n        <li>\n            <a href=\"{{ route('administrator.payroll.index') }}\">\n                <i class=\"mdi mdi-cash fa-fw\"></i> <span class=\"hide-menu\">Payroll</span>\n            </a>\n        </li>\n        @endif\n        @if(checkModuleAdmin(14))\n        <li>\n            <a href=\"javascript:void(0)\">\n                <i class=\"mdi mdi-nutrition fa-fw\"></i> <span class=\"hide-menu\">Facilities Management<span class=\"fa arrow\"></span></span>\n            </a>\n            <ul class=\"nav nav-second-level\">\n                <li>\n                    <a href=\"{{ route('administrator.asset.index') }}\"><i class=\"mdi mdi-home-modern fa-fw\"></i><span class=\"hide-menu\">Facilities</span></a>\n                </li>\n                <li>\n                    <a href=\"{{ route('administrator.asset-type.index') }}\"><i class=\"mdi mdi-plus-network fa-fw\"></i><span class=\"hide-menu\">Facilities Type</span></a>\n                </li>\n                <li>\n                    <a href=\"{{ route('administrator.asset-tracking.index') }}\"><i class=\"mdi mdi-chemical-weapon fa-fw\"></i><span class=\"hide-menu\">Facilities Tracking</span></a>\n                </li>\n            </ul>\n        </li>\n        @endif\n       \n        @if(checkModuleAdmin(15))\n       <li>\n             <a href=\"{{ route('attendance.index') }}\"><i class=\"mdi mdi-fingerprint fa-fw\"></i><span class=\"hide-menu\">Attendance</span></a>\n        </li>\n        @endif\n        <li class=\"mega-nav\">\n            <a href=\"{{ route('administrator.setting.index') }}\" class=\"waves-effect\">\n                <i class=\"mdi mdi-settings fa-fw\"></i> <span class=\"hide-menu\">@lang('menu.setting')</span>\n            </a>\n        </li>\n        <!--As Karyawan-->\n        @if(Auth::user()->project_id != 1)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3750, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php declare(strict_types = 1);\n\nnamespace Contributte\\OAuth2Server\\DI;\n\nuse Contributte\\OAuth2Server\\Exception\\InvalidArgumentException;\nuse DateInterval;\nuse League\\OAuth2\\Server\\AuthorizationServer;\nuse League\\OAuth2\\Server\\CryptKey;\nuse League\\OAuth2\\Server\\Grant\\AuthCodeGrant;\nuse League\\OAuth2\\Server\\Grant\\ClientCredentialsGrant;\nuse League\\OAuth2\\Server\\Grant\\ImplicitGrant;\nuse League\\OAuth2\\Server\\Grant\\PasswordGrant;\nuse League\\OAuth2\\Server\\Grant\\RefreshTokenGrant;\nuse League\\OAuth2\\Server\\ResourceServer;\nuse Nette\\DI\\CompilerExtension;\nuse Nette\\DI\\Definitions\\Statement;\nuse Nette\\Schema\\Expect;\nuse Nette\\Schema\\Schema;\nuse stdClass;\n\n/**\n * @property-read stdClass $config\n */\nclass OAuth2ServerExtension extends CompilerExtension\n{\n\n\tprivate const GRANT_AUTH_CODE = 'authCode';\n\tprivate const GRANT_CLIENT_CREDENTIALS = 'clientCredentials';\n\tprivate const GRANT_IMPLICIT = 'implicit';\n\tprivate const GRANT_PASSWORD = 'password';\n\tprivate const GRANT_REFRESH_TOKEN = 'refreshToken';\n\n\tprivate const GRANTS = [\n\t\tself::GRANT_AUTH_CODE,\n\t\tself::GRANT_CLIENT_CREDENTIALS,\n\t\tself::GRANT_IMPLICIT,\n\t\tself::GRANT_PASSWORD,\n\t\tself::GRANT_REFRESH_TOKEN,\n\t];\n\n\tpublic function getConfigSchema(): Schema\n\t{\n\t\treturn Expect::structure([\n\t\t\t'encryptionKey' => Expect::anyOf(Expect::string(), Expect::type(Statement::class)),\n\t\t\t'privateKey' => Expect::array([\n\t\t\t\t'path' => Expect::string(),\n\t\t\t\t'passPhrase' => Expect::string(),\n\t\t\t\t'permissionCheck' => Expect::bool(true),\n\t\t\t]),\n\t\t\t'publicKey' => Expect::array([", "func_src_after": "<?php declare(strict_types = 1);\n\nnamespace Contributte\\OAuth2Server\\DI;\n\nuse Contributte\\OAuth2Server\\Exception\\InvalidArgumentException;\nuse DateInterval;\nuse League\\OAuth2\\Server\\AuthorizationServer;\nuse League\\OAuth2\\Server\\CryptKey;\nuse League\\OAuth2\\Server\\Grant\\AuthCodeGrant;\nuse League\\OAuth2\\Server\\Grant\\ClientCredentialsGrant;\nuse League\\OAuth2\\Server\\Grant\\ImplicitGrant;\nuse League\\OAuth2\\Server\\Grant\\PasswordGrant;\nuse League\\OAuth2\\Server\\Grant\\RefreshTokenGrant;\nuse League\\OAuth2\\Server\\ResourceServer;\nuse Nette\\DI\\CompilerExtension;\nuse Nette\\DI\\Definitions\\Statement;\nuse Nette\\Schema\\Expect;\nuse Nette\\Schema\\Schema;\nuse stdClass;\n\n/**\n * @property-read stdClass $config\n */\nclass OAuth2ServerExtension extends CompilerExtension\n{\n\n\tprivate const GRANT_AUTH_CODE = 'authCode';\n\tprivate const GRANT_CLIENT_CREDENTIALS = 'clientCredentials';\n\tprivate const GRANT_IMPLICIT = 'implicit';\n\tprivate const GRANT_PASSWORD = 'password';\n\tprivate const GRANT_REFRESH_TOKEN = 'refreshToken';\n\n\tprivate const GRANTS = [\n\t\tself::GRANT_AUTH_CODE,\n\t\tself::GRANT_CLIENT_CREDENTIALS,\n\t\tself::GRANT_IMPLICIT,\n\t\tself::GRANT_PASSWORD,\n\t\tself::GRANT_REFRESH_TOKEN,\n\t];\n\n\tpublic function getConfigSchema(): Schema\n\t{\n\t\treturn Expect::structure([\n\t\t\t'encryptionKey' => Expect::anyOf(Expect::string(), Expect::type(Statement::class)),\n\t\t\t'privateKey' => Expect::array([\n\t\t\t\t'path' => Expect::string(),\n\t\t\t\t'passPhrase' => Expect::string(),\n\t\t\t\t'permissionCheck' => Expect::bool(true),\n\t\t\t]),\n\t\t\t'publicKey' => Expect::array([", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3757, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n/*\n * This file is part of the TelegramBot package.\n *\n * (c) Avtandil Kikabidze aka LONGMAN <akalongman@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n * Written by Marco Boretto <marco.bore@gmail.com>\n*/\nnamespace Longman\\TelegramBot;\n\nuse Longman\\TelegramBot\\Entities\\Update;\nuse Longman\\TelegramBot\\Exception\\TelegramException;\n\n/**\n * @package         Telegram\n * @author          Avtandil Kikabidze <akalongman@gmail.com>\n * @copyright       Avtandil Kikabidze <akalongman@gmail.com>\n * @license         http://opensource.org/licenses/mit-license.php  The MIT License (MIT)\n * @link            http://www.github.com/akalongman/php-telegram-bot\n */\n\nclass DB\n{\n    /**\n     * MySQL credentials\n     *\n     * @var array\n     */\n    static protected $mysql_credentials = array();\n\n    /**\n     * PDO object\n     *\n     * @var \\PDO\n     */\n    static protected $pdo;\n\n    /**\n     * Initialize\n     *\n     * @param array credential, string table_prefix\n     */\n    public static function initialize(array $credentials, $table_prefix = null)\n    {\n        if (empty($credentials)) {\n            throw new TelegramException('MySQL credentials not provided!');\n        }", "func_src_after": "<?php\n\n/*\n * This file is part of the TelegramBot package.\n *\n * (c) Avtandil Kikabidze aka LONGMAN <<EMAIL>>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n * Written by Marco Boretto <<EMAIL>>\n*/\nnamespace Longman\\TelegramBot;\n\nuse Longman\\TelegramBot\\Entities\\Update;\nuse Longman\\TelegramBot\\Exception\\TelegramException;\n\n/**\n * @package         Telegram\n * @author          Avtandil Kikabidze <<EMAIL>>\n * @copyright       Avtandil Kikabidze <<EMAIL>>\n * @license         http://opensource.org/licenses/mit-license.php  The MIT License (MIT)\n * @link            http://www.github.com/akalongman/php-telegram-bot\n */\n\nclass DB\n{\n    /**\n     * MySQL credentials\n     *\n     * @var array\n     */\n    static protected $mysql_credentials = array();\n\n    /**\n     * PDO object\n     *\n     * @var \\PDO\n     */\n    static protected $pdo;\n\n    /**\n     * Initialize\n     *\n     * @param array credential, string table_prefix\n     */\n    public static function initialize(array $credentials, $table_prefix = null)\n    {\n        if (empty($credentials)) {\n            throw new TelegramException('MySQL credentials not provided!');\n        }", "line_changes": {"deleted": [{"line_no": 6, "char_start": 62, "char_end": 123, "line": " * (c) Avtandil Kikabidze aka LONGMAN <akalongman@gmail.com>\n"}, {"line_no": 11, "char_start": 240, "char_end": 291, "line": " * Written by Marco Boretto <marco.bore@gmail.com>\n"}, {"line_no": 21, "char_start": 441, "char_end": 503, "line": " * @author          Avtandil Kikabidze <akalongman@gmail.com>\n"}, {"line_no": 23, "char_start": 490, "char_end": 552, "line": " * @copyright       Avtandil Kikabidze <akalongman@gmail.com>\n"}], "added": [{"line_no": 7, "char_start": 62, "char_end": 110, "line": " * (c) Avtandil Kikabidze aka LONGMAN <<EMAIL>>\n"}, {"line_no": 12, "char_start": 240, "char_end": 278, "line": " * Written by Marco Boretto <<EMAIL>>\n"}, {"line_no": 22, "char_start": 441, "char_end": 490, "line": " * @author          Avtandil Kikabidze <<EMAIL>>\n"}, {"line_no": 24, "char_start": 490, "char_end": 539, "line": " * @copyright       Avtandil Kikabidze <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 62, "char_end": 123, "chars": " * (c) Avtandil Kikabidze aka LONGMAN <akalongman@gmail.com>\n"}, {"char_start": 240, "char_end": 291, "chars": " * Written by Marco Boretto <marco.bore@gmail.com>\n"}, {"char_start": 441, "char_end": 503, "chars": " * @author          Avtandil Kikabidze <akalongman@gmail.com>\n"}, {"char_start": 490, "char_end": 552, "chars": " * @copyright       Avtandil Kikabidze <akalongman@gmail.com>\n"}], "added": [{"char_start": 62, "char_end": 110, "chars": " * (c) Avtandil Kikabidze aka LONGMAN <<EMAIL>>\n"}, {"char_start": 240, "char_end": 278, "chars": " * Written by Marco Boretto <<EMAIL>>\n"}, {"char_start": 441, "char_end": 490, "chars": " * @author          Avtandil Kikabidze <<EMAIL>>\n"}, {"char_start": 490, "char_end": 539, "chars": " * @copyright       Avtandil Kikabidze <<EMAIL>>\n"}]}}
{"func_name": 3760, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n// If automatic system installation fails:\n\n\n//die('The configuration you did manually contains some mistakes. Please have a look at your .htconfig.php file.');\n// If you are doing the configuration manually, please remove the line above\n\n\n// Copy or rename this file to .htconfig.php\n\n// Why .htconfig.php? Because it contains sensitive information which could\n// give somebody complete control of your database. Apache's default\n// configuration denies access to and refuses to serve any file beginning\n// with .ht\n\n// Then set the following for your MySQL installation\n\n$db_host = 'your.mysqlhost.com';\n$db_user = 'mysqlusername';\n$db_pass = 'mysqlpassword';\n$db_data = 'mysqldatabasename';\n\n// Use environment variables for mysql if they are set beforehand\nif (!empty(getenv('MYSQL_HOST'))\n    && !empty(getenv('MYSQL_PORT'))\n    && !empty(getenv('MYSQL_USERNAME'))\n    && !empty(getenv('MYSQL_PASSWORD'))\n    && !empty(getenv('MYSQL_DATABASE'))) {\n    $db_host = getenv('MYSQL_HOST') . ':' . getenv('MYSQL_PORT');\n    $db_user = getenv('MYSQL_USERNAME');\n    $db_pass = getenv('MYSQL_PASSWORD');\n    $db_data = getenv('MYSQL_DATABASE');\n}\n\n// Set the database connection charset to full Unicode (utf8mb4).\n// Changing this value will likely corrupt the special characters.\n// You have been warned.\n$a->config['system']['db_charset'] = 'utf8mb4';\n\n// Choose a legal default timezone. If you are unsure, use \"America/Los_Angeles\".\n// It can be changed later and only applies to timestamps for anonymous viewers.\n\n$default_timezone = 'Europe/Berlin';\n\n// Default system language\n\n$a->config['system']['language'] = 'de';\n\n// What is your site name?", "func_src_after": "<?php\n\n// If automatic system installation fails:\n\n\n//die('The configuration you did manually contains some mistakes. Please have a look at your .htconfig.php file.');\n// If you are doing the configuration manually, please remove the line above\n\n\n// Copy or rename this file to .htconfig.php\n\n// Why .htconfig.php? Because it contains sensitive information which could\n// give somebody complete control of your database. Apache's default\n// configuration denies access to and refuses to serve any file beginning\n// with .ht\n\n// Then set the following for your MySQL installation\n\n$db_host = 'your.mysqlhost.com';\n$db_user = 'mysqlusername';\n$db_pass = 'mysqlpassword';\n$db_data = 'mysqldatabasename';\n\n// Use environment variables for mysql if they are set beforehand\nif (!empty(getenv('MYSQL_HOST'))\n    && !empty(getenv('MYSQL_PORT'))\n    && !empty(getenv('MYSQL_USERNAME'))\n    && !empty(getenv('MYSQL_PASSWORD'))\n    && !empty(getenv('MYSQL_DATABASE'))) {\n    $db_host = getenv('MYSQL_HOST') . ':' . getenv('MYSQL_PORT');\n    $db_user = getenv('MYSQL_USERNAME');\n    $db_pass = getenv('MYSQL_PASSWORD');\n    $db_data = getenv('MYSQL_DATABASE');\n}\n\n// Set the database connection charset to full Unicode (utf8mb4).\n// Changing this value will likely corrupt the special characters.\n// You have been warned.\n$a->config['system']['db_charset'] = 'utf8mb4';\n\n// Choose a legal default timezone. If you are unsure, use \"America/Los_Angeles\".\n// It can be changed later and only applies to timestamps for anonymous viewers.\n\n$default_timezone = 'Europe/Berlin';\n\n// Default system language\n\n$a->config['system']['language'] = 'de';\n\n// What is your site name?", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3794, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "@extends('layouts.master2')\n@section('title','My Blog | Admin | Edit Users')\n\n\n\n@section('header','Edit User Roles')\n@section('content')\n\n\n    \n\n      <div class=\"content\">\n        <div class=\"row\">\n          <div class=\"col-md-8\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                \n              </div>\n              <div class=\"card-body\">\n                <form action=\"/userroleupdate/{{$users->id}}\" method=\"POST\">\n                            {{ csrf_field() }}\n                            {{ method_field('PUT') }}\n                            <div class=\"form-group\">\n                                <label>Name</label>\n                                <input type=\"text\" name=\"username\" class=\"form-control\" value=\"{{$users->name}}\" id=\"exampleFormControlInput1\" placeholder=\"Name\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Email address</label>\n                                <input type=\"email\" name=\"email\"class=\"form-control\" value=\"{{$users->email}}\" id=\"exampleFormControlInput2\" placeholder=\"name@example.com\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label>User Type</label>\n                                <select class=\"form-control\" name=\"usertype\" id=\"exampleFormControlSelect1\">\n                                    <option>admin</option>\n                                    <option>user</option>\n                                    <option> </option>\n                                </select>\n                            </div>\n\n            <div class=\"form-group\">\n                                    <label><strong>Access :</strong></label><br>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Contact\">Contact</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Blog\">Blog</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Edit\">Edit</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Update\">Update</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Delete\">Delete</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Manage Admin\">Manage Admin</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Searching\">Searching</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Comment\">Comment</label>\n", "func_src_after": "@extends('layouts.master2')\n@section('title','My Blog | Admin | Edit Users')\n\n\n\n@section('header','Edit User Roles')\n@section('content')\n\n\n    \n\n      <div class=\"content\">\n        <div class=\"row\">\n          <div class=\"col-md-8\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                \n              </div>\n              <div class=\"card-body\">\n                <form action=\"/userroleupdate/{{$users->id}}\" method=\"POST\">\n                            {{ csrf_field() }}\n                            {{ method_field('PUT') }}\n                            <div class=\"form-group\">\n                                <label>Name</label>\n                                <input type=\"text\" name=\"username\" class=\"form-control\" value=\"{{$users->name}}\" id=\"exampleFormControlInput1\" placeholder=\"Name\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Email address</label>\n                                <input type=\"email\" name=\"email\"class=\"form-control\" value=\"{{$users->email}}\" id=\"exampleFormControlInput2\" placeholder=\"<EMAIL>\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label>User Type</label>\n                                <select class=\"form-control\" name=\"usertype\" id=\"exampleFormControlSelect1\">\n                                    <option>admin</option>\n                                    <option>user</option>\n                                    <option> </option>\n                                </select>\n                            </div>\n\n            <div class=\"form-group\">\n                                    <label><strong>Access :</strong></label><br>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Contact\">Contact</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Blog\">Blog</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Edit\">Edit</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Update\">Update</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Delete\">Delete</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Manage Admin\">Manage Admin</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Searching\">Searching</label>\n                                    <label><input type=\"checkbox\" name=\"access[]\" value=\"Comment\">Comment</label>\n", "line_changes": {"deleted": [{"line_no": 29, "char_start": 974, "char_end": 1147, "line": "                                <input type=\"email\" name=\"email\"class=\"form-control\" value=\"{{$users->email}}\" id=\"exampleFormControlInput2\" placeholder=\"name@example.com\">\n"}], "added": [{"line_no": 30, "char_start": 974, "char_end": 1138, "line": "                                <input type=\"email\" name=\"email\"class=\"form-control\" value=\"{{$users->email}}\" id=\"exampleFormControlInput2\" placeholder=\"<EMAIL>\">\n"}]}, "char_changes": {"deleted": [{"char_start": 974, "char_end": 1147, "chars": "                                <input type=\"email\" name=\"email\"class=\"form-control\" value=\"{{$users->email}}\" id=\"exampleFormControlInput2\" placeholder=\"name@example.com\">\n"}], "added": [{"char_start": 974, "char_end": 1138, "chars": "                                <input type=\"email\" name=\"email\"class=\"form-control\" value=\"{{$users->email}}\" id=\"exampleFormControlInput2\" placeholder=\"<EMAIL>\">\n"}]}}
{"func_name": 3818, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                        ->queryAll();\r\n        foreach ($listRs as $k => $v) {\r\n            foreach ($dealCourse as $v1) {\r\n                if ($v['coach_id'] == $v1['private_id']) {\r\n                    $listRs[$k]['deal_sum'] = $v1['sum'];\r\n                }\r\n            }\r\n\r\n            !isset($listRs[$k]['deal_sum']) && $listRs[$k]['deal_sum'] = \"0\";\r\n        }\r\n\r\n        return $listRs;\r\n    }\r\n\r\n    /**\r\n     * @api {get} /service/coach/count  私教上课量统计\r\n     * @apiName        2私教上课量统计\r\n     * @apiGroup       coach\r\n     * @apiParam  {string}            type       日期类别：d 日、w 周 、m 月 、s 季度 、y 年\r\n     * @apiParam  {string}            venue_id   场馆ID\r\n     * @apiDescription   私教上课量统计\r\n     * <br/>\r\n     * <span><strong>作    者：</strong></span>王亮亮<br/>\r\n     * <span><strong>邮    箱：</strong></span>wangliangliang@itsports.club\r\n     * <span><strong>创建时间：</strong></span>2018/01/09\r\n     * @apiSampleRequest  http://apiqa.aixingfu.net/service/coach/count\r\n     * @apiSuccess (返回值) {json} data\r\n     * @apiSuccessExample {json}返回值详情（成功）\r\n\r\n    {\r\n        \"message\": \"\",\r\n        \"code\": 1,\r\n        \"status\": 200,\r\n        \"data\": [\r\n            {\r\n                \"name\": \"胡媛媛\",\r\n                \"num\": \"100\"\r\n            },\r\n            {\r\n                \"name\": \"唐成\",\r\n                \"num\": \"245\"\r\n            },\r\n            {\r\n                \"name\": \"刘琳娜\",\r\n                \"num\": \"329\"\r\n            },\r\n            {\r\n                \"name\": \"王亚明\",\r\n                \"num\": \"118\"\r\n            },\r", "func_src_after": "                        ->queryAll();\r\n        foreach ($listRs as $k => $v) {\r\n            foreach ($dealCourse as $v1) {\r\n                if ($v['coach_id'] == $v1['private_id']) {\r\n                    $listRs[$k]['deal_sum'] = $v1['sum'];\r\n                }\r\n            }\r\n\r\n            !isset($listRs[$k]['deal_sum']) && $listRs[$k]['deal_sum'] = \"0\";\r\n        }\r\n\r\n        return $listRs;\r\n    }\r\n\r\n    /**\r\n     * @api {get} /service/coach/count  私教上课量统计\r\n     * @apiName        2私教上课量统计\r\n     * @apiGroup       coach\r\n     * @apiParam  {string}            type       日期类别：d 日、w 周 、m 月 、s 季度 、y 年\r\n     * @apiParam  {string}            venue_id   场馆ID\r\n     * @apiDescription   私教上课量统计\r\n     * <br/>\r\n     * <span><strong>作    者：</strong></span>王亮亮<br/>\r\n     * <span><strong>邮    箱：</strong></span>wangliangliang@itsports.club\r\n     * <span><strong>创建时间：</strong></span>2018/01/09\r\n     * @apiSampleRequest  http://apiqa.aixingfu.net/service/coach/count\r\n     * @apiSuccess (返回值) {json} data\r\n     * @apiSuccessExample {json}返回值详情（成功）\r\n\r\n    {\r\n        \"message\": \"\",\r\n        \"code\": 1,\r\n        \"status\": 200,\r\n        \"data\": [\r\n            {\r\n                \"name\": \"胡媛媛\",\r\n                \"num\": \"100\"\r\n            },\r\n            {\r\n                \"name\": \"唐成\",\r\n                \"num\": \"245\"\r\n            },\r\n            {\r\n                \"name\": \"刘琳娜\",\r\n                \"num\": \"329\"\r\n            },\r\n            {\r\n                \"name\": \"王亚明\",\r\n                \"num\": \"118\"\r\n            },\r", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3831, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        }\n\n        return $user;\n    }\n\n    /**\n     * Update a user.\n     *\n     * @param $user\n     * @param $data\n     *\n     * @return mixed\n     */\n    public function update($user, $data)\n    {\n    }\n\n    /**\n     * Update a user and sync its roles.\n     *\n     * @param int $userId\n     * @param $data\n     * @param $roles\n     *\n     * @return mixed\n     */\n    public function updateAndSyncRoles($userId, $data, $roles)\n    {\n    }\n\n    /**\n     * Find a user by its credentials.\n     *\n     * @param array $credentials\n     *\n     * @return mixed\n     */\n    public function findByCredentials(array $credentials)\n    {\n    }\n\n    /**\n     *\n     */\n    public function updatePassword($user, ChangePasswordRequest $input)\n    {\n        if ($user === null) {\n            return [\n                'old_password' => 'Cant find user?',\n            ];", "func_src_after": "        }\n\n        return $user;\n    }\n\n    /**\n     * Update a user.\n     *\n     * @param $user\n     * @param $data\n     *\n     * @return mixed\n     */\n    public function update($user, $data)\n    {\n    }\n\n    /**\n     * Update a user and sync its roles.\n     *\n     * @param int $userId\n     * @param $data\n     * @param $roles\n     *\n     * @return mixed\n     */\n    public function updateAndSyncRoles($userId, $data, $roles)\n    {\n    }\n\n    /**\n     * Find a user by its credentials.\n     *\n     * @param array $credentials\n     *\n     * @return mixed\n     */\n    public function findByCredentials(array $credentials)\n    {\n    }\n\n    /**\n     *\n     */\n    public function updatePassword($user, ChangePasswordRequest $input)\n    {\n        if ($user === null) {\n            return [\n                'old_password' => 'Cant find user?',\n            ];", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3832, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Strings for component 'theme_academi', language 'es', branch 'MOODLE_38_STABLE'\n *\n * @package   theme_academi\n * @copyright 1999 onwards Martin Dougiamas  {@link http://moodle.com}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefined('MOODLE_INTERNAL') || die();\n\n$string['about'] = 'Acerca de';\n$string['aboutus'] = 'Sobre Nosotros';\n$string['address'] = 'Dirección';\n$string['calendar'] = 'Calendario';\n$string['callus'] = 'Teléfono';\n$string['choosereadme'] = '<div class=\"clearfix\"><div class=\"theme_screenshot\"><img class=img-polaroid src=\"academi/pix/screenshot.jpg\" /><br/><p></p><h3>Creditos del Tema</h3><p><h3>Tema Moodle Academi</h3><p>Este tema se basa en el tema Boost Moodle.</p><p>Autores: LMSACE Dev Team<br>Contacto: info@lmsace.com<br>Sitio Web: <a href=\"http://www.lmsace.com\">www.lmsace.com</a><br></p>';\n$string['configtitle'] = 'Academi';\n$string['connectus'] = 'Contacta con nosotros';\n$string['contact'] = 'Contacto';\n$string['contact_us'] = 'Contacto';\n$string['copyright_default'] = 'Copyright © 2017 -Desarrollado por <a href=\"http://lmsace.com\">LMSACE.com</a>. Desarrollado por <a href=\"https://moodle.org\">Moodle</a>';\n$string['copyright_footer'] = 'Derechos de Autor';\n$string['customcss'] = 'CSS personalizado';\n$string['customcssdesc'] = 'Cada regla CSS que añadas a este area de texto afectará a cada página, facilitando la personalización de este tema.';\n$string['defaultaddress'] = '308 Negra Narrow Lane, Albeeze, New york, 87104';\n$string['defaultemailid'] = 'info@example.com';\n$string['defaultphoneno'] = '(000) 123-456';\n$string['email'] = 'Correo electrónico';\n$string['emailid'] = 'Email';\n$string['enable'] = 'Logo de pie de página habilitado';\n$string['fburl'] = 'Facebook';\n$string['fburl_default'] = 'https://www.facebook.com/yourfacebookid';\n$string['fburldesc'] = 'URL de tu organización en Facebook.';", "func_src_after": "<?php\n\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Strings for component 'theme_academi', language 'es', branch 'MOODLE_38_STABLE'\n *\n * @package   theme_academi\n * @copyright 1999 onwards Martin Dougiamas  {@link http://moodle.com}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefined('MOODLE_INTERNAL') || die();\n\n$string['about'] = 'Acerca de';\n$string['aboutus'] = 'Sobre Nosotros';\n$string['address'] = 'Dirección';\n$string['calendar'] = 'Calendario';\n$string['callus'] = 'Teléfono';\n$string['choosereadme'] = '<div class=\"clearfix\"><div class=\"theme_screenshot\"><img class=img-polaroid src=\"academi/pix/screenshot.jpg\" /><br/><p></p><h3>Creditos del Tema</h3><p><h3>Tema Moodle Academi</h3><p>Este tema se basa en el tema Boost Moodle.</p><p>Autores: LMSACE Dev Team<br>Contacto: <EMAIL><br>Sitio Web: <a href=\"http://www.lmsace.com\">www.lmsace.com</a><br></p>';\n$string['configtitle'] = 'Academi';\n$string['connectus'] = 'Contacta con nosotros';\n$string['contact'] = 'Contacto';\n$string['contact_us'] = 'Contacto';\n$string['copyright_default'] = 'Copyright © 2017 -Desarrollado por <a href=\"http://lmsace.com\">LMSACE.com</a>. Desarrollado por <a href=\"https://moodle.org\">Moodle</a>';\n$string['copyright_footer'] = 'Derechos de Autor';\n$string['customcss'] = 'CSS personalizado';\n$string['customcssdesc'] = 'Cada regla CSS que añadas a este area de texto afectará a cada página, facilitando la personalización de este tema.';\n$string['defaultaddress'] = '308 Negra Narrow Lane, Albeeze, New york, 87104';\n$string['defaultemailid'] = '<EMAIL>';\n$string['defaultphoneno'] = '(000) 123-456';\n$string['email'] = 'Correo electrónico';\n$string['emailid'] = 'Email';\n$string['enable'] = 'Logo de pie de página habilitado';\n$string['fburl'] = 'Facebook';\n$string['fburl_default'] = 'https://www.facebook.com/yourfacebookid';\n$string['fburldesc'] = 'URL de tu organización en Facebook.';", "line_changes": {"deleted": [{"line_no": 33, "char_start": 1167, "char_end": 1555, "line": "$string['choosereadme'] = '<div class=\"clearfix\"><div class=\"theme_screenshot\"><img class=img-polaroid src=\"academi/pix/screenshot.jpg\" /><br/><p></p><h3>Creditos del Tema</h3><p><h3>Tema Moodle Academi</h3><p>Este tema se basa en el tema Boost Moodle.</p><p>Autores: LMSACE Dev Team<br>Contacto: info@lmsace.com<br>Sitio Web: <a href=\"http://www.lmsace.com\">www.lmsace.com</a><br></p>';\n"}, {"line_no": 44, "char_start": 2190, "char_end": 2238, "line": "$string['defaultemailid'] = 'info@example.com';\n"}], "added": [{"line_no": 34, "char_start": 1167, "char_end": 1547, "line": "$string['choosereadme'] = '<div class=\"clearfix\"><div class=\"theme_screenshot\"><img class=img-polaroid src=\"academi/pix/screenshot.jpg\" /><br/><p></p><h3>Creditos del Tema</h3><p><h3>Tema Moodle Academi</h3><p>Este tema se basa en el tema Boost Moodle.</p><p>Autores: LMSACE Dev Team<br>Contacto: <EMAIL><br>Sitio Web: <a href=\"http://www.lmsace.com\">www.lmsace.com</a><br></p>';\n"}, {"line_no": 45, "char_start": 2190, "char_end": 2229, "line": "$string['defaultemailid'] = '<EMAIL>';\n"}]}, "char_changes": {"deleted": [{"char_start": 1167, "char_end": 1555, "chars": "$string['choosereadme'] = '<div class=\"clearfix\"><div class=\"theme_screenshot\"><img class=img-polaroid src=\"academi/pix/screenshot.jpg\" /><br/><p></p><h3>Creditos del Tema</h3><p><h3>Tema Moodle Academi</h3><p>Este tema se basa en el tema Boost Moodle.</p><p>Autores: LMSACE Dev Team<br>Contacto: info@lmsace.com<br>Sitio Web: <a href=\"http://www.lmsace.com\">www.lmsace.com</a><br></p>';\n"}, {"char_start": 2190, "char_end": 2238, "chars": "$string['defaultemailid'] = 'info@example.com';\n"}], "added": [{"char_start": 1167, "char_end": 1547, "chars": "$string['choosereadme'] = '<div class=\"clearfix\"><div class=\"theme_screenshot\"><img class=img-polaroid src=\"academi/pix/screenshot.jpg\" /><br/><p></p><h3>Creditos del Tema</h3><p><h3>Tema Moodle Academi</h3><p>Este tema se basa en el tema Boost Moodle.</p><p>Autores: LMSACE Dev Team<br>Contacto: <EMAIL><br>Sitio Web: <a href=\"http://www.lmsace.com\">www.lmsace.com</a><br></p>';\n"}, {"char_start": 2190, "char_end": 2229, "chars": "$string['defaultemailid'] = '<EMAIL>';\n"}]}}
{"func_name": 3833, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nnamespace app\\commands;\n\nuse app\\models\\User;\nuse yii\\console\\Controller;\n\nclass AuthController extends Controller\n{\n    const DEFAULT_PASSWORD = 'testtest';\n\n    public function actionCreateUser($name, $email, $role)\n    {\n        $user = new User();\n        $user->setAttributes([\n            'username' => $name,\n            'email' => $email,\n            'status' => User::STATUS_ACTIVE,\n            'password' => self::DEFAULT_PASSWORD,\n            'role' => $role\n        ]);\n\n        if (!$user->validate()) {\n            $this->stderr('Errors:' . PHP_EOL);\n            print_r($user->getErrors());\n            return;\n        }\n\n        $user->save();\n\n        $roleName = $role == 1 ? 'Agent' : 'Company';\n\n        $this->stdout($roleName . ' created:' . PHP_EOL);\n        $this->stdout($user->email . PHP_EOL);\n        $this->stdout(self::DEFAULT_PASSWORD . PHP_EOL);\n    }\n}\n", "func_src_after": "<?php\n\nnamespace app\\commands;\n\nuse app\\models\\User;\nuse yii\\console\\Controller;\n\nclass AuthController extends Controller\n{\n    const DEFAULT_PASSWORD = 'testtest';\n\n    public function actionCreateUser($name, $email, $role)\n    {\n        $user = new User();\n        $user->setAttributes([\n            'username' => $name,\n            'email' => $email,\n            'status' => User::STATUS_ACTIVE,\n            'password' => self::DEFAULT_PASSWORD,\n            'role' => $role\n        ]);\n\n        if (!$user->validate()) {\n            $this->stderr('Errors:' . PHP_EOL);\n            print_r($user->getErrors());\n            return;\n        }\n\n        $user->save();\n\n        $roleName = $role == 1 ? 'Agent' : 'Company';\n\n        $this->stdout($roleName . ' created:' . PHP_EOL);\n        $this->stdout($user->email . PHP_EOL);\n        $this->stdout(self::DEFAULT_PASSWORD . PHP_EOL);\n    }\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3864, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n/*\n * This file is part of the Elimuswift/multi-tenant package.\n *\n * (c) Albert Leitato <wizqydy@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @see https://github.com/Elimuswift/multi-tenant\n *\n */\n\nuse Elimuswift\\Tenancy\\Database\\Connection;\n\nreturn [\n    'website' => [\n        /*\n         * Each website has a short random hash that identifies this entity\n         * to the application. By default this id is randomized and fully\n         * auto-generated. In case you want to force your own logic fi\n         * when you need to have a better overview of the complete\n         * tenant folder structure, disable this and implement\n         * your own id generation logic.\n         *\n         */\n        'disable-random-id' => false,\n        /*\n         * The length of the random id that will be generated\n         */\n        'random-id-length' => 16,\n\n        /*\n         * The random Id generator is responsible for creating the hash as mentioned\n         * above. You can override what generator to use by modifying this value\n         * in the configuration.\n         *\n         * @warn This won't work if disable-random-id is true.\n         */\n        'random-id-generator' => Elimuswift\\Tenancy\\Generators\\Uuid\\ShaGenerator::class,\n\n        /*\n         * Specify the disk you configured in the filesystems.php file where to store\n         * the tenant specific files, including media, packages, routes and other\n         * files for this particular website.\n         *\n         * @see\n         * @info If not set, will revert to the default filesystem.\n         */", "func_src_after": "<?php\n\n/*\n * This file is part of the Elimuswift/multi-tenant package.\n *\n * (c) Albert Leitato <<EMAIL>>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @see https://github.com/Elimuswift/multi-tenant\n *\n */\n\nuse Elimuswift\\Tenancy\\Database\\Connection;\n\nreturn [\n    'website' => [\n        /*\n         * Each website has a short random hash that identifies this entity\n         * to the application. By default this id is randomized and fully\n         * auto-generated. In case you want to force your own logic fi\n         * when you need to have a better overview of the complete\n         * tenant folder structure, disable this and implement\n         * your own id generation logic.\n         *\n         */\n        'disable-random-id' => false,\n        /*\n         * The length of the random id that will be generated\n         */\n        'random-id-length' => 16,\n\n        /*\n         * The random Id generator is responsible for creating the hash as mentioned\n         * above. You can override what generator to use by modifying this value\n         * in the configuration.\n         *\n         * @warn This won't work if disable-random-id is true.\n         */\n        'random-id-generator' => Elimuswift\\Tenancy\\Generators\\Uuid\\ShaGenerator::class,\n\n        /*\n         * Specify the disk you configured in the filesystems.php file where to store\n         * the tenant specific files, including media, packages, routes and other\n         * files for this particular website.\n         *\n         * @see\n         * @info If not set, will revert to the default filesystem.\n         */", "line_changes": {"deleted": [{"line_no": 6, "char_start": 74, "char_end": 116, "line": " * (c) Albert Leitato <wizqydy@gmail.com>\n"}], "added": [{"line_no": 7, "char_start": 74, "char_end": 106, "line": " * (c) Albert Leitato <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 74, "char_end": 116, "chars": " * (c) Albert Leitato <wizqydy@gmail.com>\n"}], "added": [{"char_start": 74, "char_end": 106, "chars": " * (c) Albert Leitato <<EMAIL>>\n"}]}}
{"func_name": 3892, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuse App\\User;\nuse App\\Product;\nuse App\\ProductHeader;\n\nclass ProductsTest extends TestCase\n{\n\tuse RefreshDatabase;\n\n    /** @test */\n    public function product_can_be_created()\n    {\n        $user = factory(User::class)->create([\n            'email' => 'admin@root.com',\n            'password' => bcrypt('123456')\n        ]);\n\n        $token = \\Tymon\\JWTAuth\\Facades\\JWTAuth::fromUser($user);\n\n\t\t$this->withHeaders([\"Authorization\" => 'Bearer '.$token])\n\t\t->json('POST', '/api/products', [\n\t\t\t'name' => 'Planchado',\n\t\t\t'type' => 'S',\n\t\t\t'description' => 'Planchado de pelo',\n\t\t\t'price' => 20.5\n\t\t])->assertStatus(201);\n\n\t\t$this->assertDatabaseHas('product_headers', [\n\t\t\t'name' => 'Planchado',\n\t\t\t'type' => 'S',\n\t\t\t'description' => 'Planchado de pelo'\n\t\t]);\n\n\t\t$this->assertDatabaseHas('products', [\n\t\t\t'price' => 20.5\n\t\t]);\n    }\n\n    /** @test */\n    public function product_price_update()\n    {\n\n    \t//$this->withoutExceptionHandling();", "func_src_after": "<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuse App\\User;\nuse App\\Product;\nuse App\\ProductHeader;\n\nclass ProductsTest extends TestCase\n{\n\tuse RefreshDatabase;\n\n    /** @test */\n    public function product_can_be_created()\n    {\n        $user = factory(User::class)->create([\n            'email' => '<EMAIL>',\n            'password' => bcrypt('123456')\n        ]);\n\n        $token = \\Tymon\\JWTAuth\\Facades\\JWTAuth::fromUser($user);\n\n\t\t$this->withHeaders([\"Authorization\" => 'Bearer '.$token])\n\t\t->json('POST', '/api/products', [\n\t\t\t'name' => 'Planchado',\n\t\t\t'type' => 'S',\n\t\t\t'description' => 'Planchado de pelo',\n\t\t\t'price' => 20.5\n\t\t])->assertStatus(201);\n\n\t\t$this->assertDatabaseHas('product_headers', [\n\t\t\t'name' => 'Planchado',\n\t\t\t'type' => 'S',\n\t\t\t'description' => 'Planchado de pelo'\n\t\t]);\n\n\t\t$this->assertDatabaseHas('products', [\n\t\t\t'price' => 20.5\n\t\t]);\n    }\n\n    /** @test */\n    public function product_price_update()\n    {\n\n    \t//$this->withoutExceptionHandling();", "line_changes": {"deleted": [{"line_no": 21, "char_start": 381, "char_end": 422, "line": "            'email' => 'admin@root.com',\n"}], "added": [{"line_no": 22, "char_start": 381, "char_end": 415, "line": "            'email' => '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 381, "char_end": 422, "chars": "            'email' => 'admin@root.com',\n"}], "added": [{"char_start": 381, "char_end": 415, "chars": "            'email' => '<EMAIL>',\n"}]}}
{"func_name": 3894, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t->json('GET', '/api/products/'.$product->id)\n\t\t\t->assertStatus(200)\n\t\t\t->assertExactJson([\n\t\t\t\t'product' => [\n\t\t\t\t\t'id' => $product->id,\n\t\t\t\t\t'price' => $product->price,\n\t\t\t\t\t'product_header_id' => $product->product_header_id,\n\t\t\t\t\t'created_at' => (string)$product->created_at,\n\t\t\t\t\t'updated_at' => (string)$product->updated_at,\n\t\t\t\t\t'deleted_at' => NULL,\n\t\t\t\t\t'definition' => [\n\t\t\t\t\t\t'id' => $product->definition->id,\n\t\t\t\t\t\t'name' => $product->definition->name,\n\t\t\t\t\t\t'type' => $product->definition->type,\n\t\t\t\t\t\t'image' => NULL,\n\t\t\t\t\t\t'description' => $product->definition->description,\n\t\t\t\t\t\t'created_at' => (string)$product->definition->created_at,\n\t\t\t\t\t\t'updated_at' => (string)$product->definition->updated_at,\n\t\t\t\t\t\t'deleted_at' => NULL\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t]);\n    }\n\n    /** @test */\n    public function one_product_edit_data_can_be_finded()\n    {\n        $user = factory(User::class)->create([\n            'email' => 'admin@root.com',\n            'password' => bcrypt('123456')\n        ]);\n\n        $token = \\Tymon\\JWTAuth\\Facades\\JWTAuth::fromUser($user);\n\n      \t$productHeader = factory(ProductHeader::class)->create(['name'=>'Planchado', 'description'=> 'Planchado de pelo', 'type' => 'S']);\n\n        $product = factory(Product::class)->create([\n        \t'price' => 10.5,\n        \t'product_header_id' => $productHeader->id\n        ]);\n\n\t\t$this->withHeaders([\"Authorization\" => 'Bearer '.$token])\n\t\t\t->json('GET', '/api/products/'.$product->id.'/edit')\n\t\t\t->assertStatus(200)\n\t\t\t->assertExactJson([\n\t\t\t\t'product' => [\n\t\t\t\t\t'id' => $product->id,\n\t\t\t\t\t'price' => $product->price,\n\t\t\t\t\t'product_header_id' => $product->product_header_id,\n\t\t\t\t\t'created_at' => (string)$product->created_at,", "func_src_after": "\t\t\t->json('GET', '/api/products/'.$product->id)\n\t\t\t->assertStatus(200)\n\t\t\t->assertExactJson([\n\t\t\t\t'product' => [\n\t\t\t\t\t'id' => $product->id,\n\t\t\t\t\t'price' => $product->price,\n\t\t\t\t\t'product_header_id' => $product->product_header_id,\n\t\t\t\t\t'created_at' => (string)$product->created_at,\n\t\t\t\t\t'updated_at' => (string)$product->updated_at,\n\t\t\t\t\t'deleted_at' => NULL,\n\t\t\t\t\t'definition' => [\n\t\t\t\t\t\t'id' => $product->definition->id,\n\t\t\t\t\t\t'name' => $product->definition->name,\n\t\t\t\t\t\t'type' => $product->definition->type,\n\t\t\t\t\t\t'image' => NULL,\n\t\t\t\t\t\t'description' => $product->definition->description,\n\t\t\t\t\t\t'created_at' => (string)$product->definition->created_at,\n\t\t\t\t\t\t'updated_at' => (string)$product->definition->updated_at,\n\t\t\t\t\t\t'deleted_at' => NULL\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t]);\n    }\n\n    /** @test */\n    public function one_product_edit_data_can_be_finded()\n    {\n        $user = factory(User::class)->create([\n            'email' => '<EMAIL>',\n            'password' => bcrypt('123456')\n        ]);\n\n        $token = \\Tymon\\JWTAuth\\Facades\\JWTAuth::fromUser($user);\n\n      \t$productHeader = factory(ProductHeader::class)->create(['name'=>'Planchado', 'description'=> 'Planchado de pelo', 'type' => 'S']);\n\n        $product = factory(Product::class)->create([\n        \t'price' => 10.5,\n        \t'product_header_id' => $productHeader->id\n        ]);\n\n\t\t$this->withHeaders([\"Authorization\" => 'Bearer '.$token])\n\t\t\t->json('GET', '/api/products/'.$product->id.'/edit')\n\t\t\t->assertStatus(200)\n\t\t\t->assertExactJson([\n\t\t\t\t'product' => [\n\t\t\t\t\t'id' => $product->id,\n\t\t\t\t\t'price' => $product->price,\n\t\t\t\t\t'product_header_id' => $product->product_header_id,\n\t\t\t\t\t'created_at' => (string)$product->created_at,", "line_changes": {"deleted": [{"line_no": 29, "char_start": 900, "char_end": 941, "line": "            'email' => 'admin@root.com',\n"}], "added": [{"line_no": 30, "char_start": 900, "char_end": 934, "line": "            'email' => '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 900, "char_end": 941, "chars": "            'email' => 'admin@root.com',\n"}], "added": [{"char_start": 900, "char_end": 934, "chars": "            'email' => '<EMAIL>',\n"}]}}
{"func_name": 3896, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        $this->composerMock = $this->createComposerMock();\n        $this->configuration = new Configuration($this->inputMock, $this->composerMock, new NullIO());\n    }\n\n    private function createComposerMock()\n    {\n        $composer = $this->createMock(Composer::class);\n        $packageInterface = $this->createMock(RootPackageInterface::class);\n\n        $composer->method('getPackage')->willReturn($packageInterface);\n\n        $packageInterface->method('getVersion')->willReturn('1.2.3');\n        $packageInterface->method('getExtra')->willReturnCallback(function() {\n            if ($this->singleConfig) {\n                return [\n                    'push' => [\n                        'url' => 'https://example.com',\n                        \"username\" => \"push-username\",\n                        \"password\" => \"push-password\",\n                        \"ignore\" => $this->configIgnore,\n                        \"type\" => $this->extraConfigType,\n                        \"ssl-verify\" => $this->extraVerifySsl,\n                    ]\n                ];\n            } else {\n                return [\n                    'push' => [\n                        [\n                            'name' => 'A',\n                            'url' => 'https://a.com',\n                            \"username\" => \"push-username-a\",\n                            \"password\" => \"push-password-a\",\n                        ],\n                        [\n                            'name' => 'B',\n                            'url' => 'https://b.com',\n                            \"username\" => \"push-username-b\",\n                            \"password\" => \"push-password-b\",\n                        ]\n                    ]\n                ];\n            }\n\n        });\n\n        $packageInterface->method('getArchiveExcludes')->willReturnCallback(function() {\n            return $this->composerPackageArchiveExcludes;\n        });\n\n        return $composer;", "func_src_after": "        $this->composerMock = $this->createComposerMock();\n        $this->configuration = new Configuration($this->inputMock, $this->composerMock, new NullIO());\n    }\n\n    private function createComposerMock()\n    {\n        $composer = $this->createMock(Composer::class);\n        $packageInterface = $this->createMock(RootPackageInterface::class);\n\n        $composer->method('getPackage')->willReturn($packageInterface);\n\n        $packageInterface->method('getVersion')->willReturn('1.2.3');\n        $packageInterface->method('getExtra')->willReturnCallback(function() {\n            if ($this->singleConfig) {\n                return [\n                    'push' => [\n                        'url' => 'https://example.com',\n                        \"username\" => \"push-username\",\n                        \"password\" => \"push-password\",\n                        \"ignore\" => $this->configIgnore,\n                        \"type\" => $this->extraConfigType,\n                        \"ssl-verify\" => $this->extraVerifySsl,\n                    ]\n                ];\n            } else {\n                return [\n                    'push' => [\n                        [\n                            'name' => 'A',\n                            'url' => 'https://a.com',\n                            \"username\" => \"push-username-a\",\n                            \"password\" => \"push-password-a\",\n                        ],\n                        [\n                            'name' => 'B',\n                            'url' => 'https://b.com',\n                            \"username\" => \"push-username-b\",\n                            \"password\" => \"push-password-b\",\n                        ]\n                    ]\n                ];\n            }\n\n        });\n\n        $packageInterface->method('getArchiveExcludes')->willReturnCallback(function() {\n            return $this->composerPackageArchiveExcludes;\n        });\n\n        return $composer;", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3898, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n\nnamespace models;\n\n\n/**\n *\n * @package Core\n * @link http://ican.openacalendar.org/ OpenACalendar Open Source Software\n * @license http://ican.openacalendar.org/license.html 3-clause BSD\n * @copyright (c) 2013-2014, JMB Technology Limited, http://jmbtechnology.co.uk/\n * @author James Baster <james@jarofgreen.co.uk>\n */\nclass GroupHistoryModel extends GroupModel {\n\n\tprotected $group_slug;\n\t//protected $user_account_id;\n\tprotected $created_at; \n\tprotected $user_account_id;\n\tprotected $user_account_username;\n\t\n\tprotected $title_changed = 0;\n\tprotected $description_changed = 0;\n\tprotected $url_changed = 0;\n\tprotected $twitter_username_changed = 0;\n\tprotected $is_deleted_changed = 0;\n\n\tprotected $is_new = 0;\n\n\n\n\tpublic function setFromDataBaseRow($data) {\n\t\t$this->id = $data['group_id'];\n\t\t$this->group_slug = isset($data['group_slug']) ? $data['group_slug'] : null;\n\t\t$this->title = $data['title'];\n\t\t$this->url = $data['url'];\n\t\t$this->description = $data['description'];\n\t\t$this->twitter_username = $data['twitter_username'];\n\t\t$this->is_deleted = $data['is_deleted'];\n\t\t$utc = new \\DateTimeZone(\"UTC\");\n\t\t$this->created_at = new \\DateTime($data['created_at'], $utc);\n\t\t$this->user_account_id = $data['user_account_id'];\n\t\t$this->user_account_username = isset($data['user_account_username']) ? $data['user_account_username'] : null;\n\t\t$this->title_changed = $data['title_changed'];\n\t\t$this->description_changed = $data['description_changed'];\n\t\t$this->url_changed = $data['url_changed'];\n\t\t$this->twitter_username_changed = $data['twitter_username_changed'];\n\t\t$this->is_deleted_changed = $data['is_deleted_changed'];\n\t\t$this->is_new = isset($data['is_new']) ? $data['is_new'] : 0;", "func_src_after": "<?php\n\n\nnamespace models;\n\n\n/**\n *\n * @package Core\n * @link http://ican.openacalendar.org/ OpenACalendar Open Source Software\n * @license http://ican.openacalendar.org/license.html 3-clause BSD\n * @copyright (c) 2013-2014, JMB Technology Limited, http://jmbtechnology.co.uk/\n * @author James Baster <<EMAIL>>\n */\nclass GroupHistoryModel extends GroupModel {\n\n\tprotected $group_slug;\n\t//protected $user_account_id;\n\tprotected $created_at; \n\tprotected $user_account_id;\n\tprotected $user_account_username;\n\t\n\tprotected $title_changed = 0;\n\tprotected $description_changed = 0;\n\tprotected $url_changed = 0;\n\tprotected $twitter_username_changed = 0;\n\tprotected $is_deleted_changed = 0;\n\n\tprotected $is_new = 0;\n\n\n\n\tpublic function setFromDataBaseRow($data) {\n\t\t$this->id = $data['group_id'];\n\t\t$this->group_slug = isset($data['group_slug']) ? $data['group_slug'] : null;\n\t\t$this->title = $data['title'];\n\t\t$this->url = $data['url'];\n\t\t$this->description = $data['description'];\n\t\t$this->twitter_username = $data['twitter_username'];\n\t\t$this->is_deleted = $data['is_deleted'];\n\t\t$utc = new \\DateTimeZone(\"UTC\");\n\t\t$this->created_at = new \\DateTime($data['created_at'], $utc);\n\t\t$this->user_account_id = $data['user_account_id'];\n\t\t$this->user_account_username = isset($data['user_account_username']) ? $data['user_account_username'] : null;\n\t\t$this->title_changed = $data['title_changed'];\n\t\t$this->description_changed = $data['description_changed'];\n\t\t$this->url_changed = $data['url_changed'];\n\t\t$this->twitter_username_changed = $data['twitter_username_changed'];\n\t\t$this->is_deleted_changed = $data['is_deleted_changed'];\n\t\t$this->is_new = isset($data['is_new']) ? $data['is_new'] : 0;", "line_changes": {"deleted": [{"line_no": 13, "char_start": 276, "char_end": 325, "line": " * @author James Baster <james@jarofgreen.co.uk>\n"}], "added": [{"line_no": 14, "char_start": 276, "char_end": 310, "line": " * @author James Baster <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 276, "char_end": 325, "chars": " * @author James Baster <james@jarofgreen.co.uk>\n"}], "added": [{"char_start": 276, "char_end": 310, "chars": " * @author James Baster <<EMAIL>>\n"}]}}
{"func_name": 3912, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n$config = [\n\t'components' => [\n\t\t'db' => [\n\t\t\t'class' => 'yii\\db\\Connection',\n\t\t\t'dsn' => 'mysql:host=localhost;dbname=dbname',\n\t\t\t'username' => 'username',\n\t\t\t'password' => 'password',\n\t\t\t'charset' => 'utf8',\n\t\t\t'enableSchemaCache' => true,\n\t\t\t'attributes' => [\n\t\t\t\tPDO::MYSQL_ATTR_INIT_COMMAND => \"SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));\",\n\t\t\t],\n\t\t],\n\t\t'mailer' => [\n\t\t\t'class' => 'yii\\swiftmailer\\Mailer',\n\t\t\t'viewPath' => '@common/mail',\n\t\t\t'useFileTransport' => false,\n\t\t\t'transport' => [\n\t\t\t\t'class' => 'Swift_SmtpTransport',\n\t\t\t\t'host' => 'smtp.example.com',\n\t\t\t\t'username' => 'mailbox@example.com',\n\t\t\t\t'password' => 'mypassword',\n\t\t\t\t'port' => '465',\n\t\t\t\t'encryption' => 'ssl',\n\t\t\t],\n\t\t],\n\t],\n];\n\nif (YII_ENV_DEV) {\n\t$config['bootstrap'][] = 'debug';\n\t$config['modules']['debug'] = [\n\t\t'class' => 'yii\\debug\\Module',\n\t\t'allowedIPs' => ['127.0.0.1', '::1', '192.168.0.*', '192.168.1.*'],\n\t];\n\t$config['bootstrap'][] = 'gii';\n\t$config['modules']['gii'] = [\n\t\t'class' => 'yii\\gii\\Module',\n\t\t'allowedIPs' => ['127.0.0.1', '::1', '192.168.0.*', '192.168.1.*'],\n\t];\n}\n\nreturn $config;", "func_src_after": "<?php\n$config = [\n\t'components' => [\n\t\t'db' => [\n\t\t\t'class' => 'yii\\db\\Connection',\n\t\t\t'dsn' => 'mysql:host=localhost;dbname=dbname',\n\t\t\t'username' => 'username',\n\t\t\t'password' => 'password',\n\t\t\t'charset' => 'utf8',\n\t\t\t'enableSchemaCache' => true,\n\t\t\t'attributes' => [\n\t\t\t\tPDO::MYSQL_ATTR_INIT_COMMAND => \"SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));\",\n\t\t\t],\n\t\t],\n\t\t'mailer' => [\n\t\t\t'class' => 'yii\\swiftmailer\\Mailer',\n\t\t\t'viewPath' => '@common/mail',\n\t\t\t'useFileTransport' => false,\n\t\t\t'transport' => [\n\t\t\t\t'class' => 'Swift_SmtpTransport',\n\t\t\t\t'host' => 'smtp.example.com',\n\t\t\t\t'username' => '<EMAIL>',\n\t\t\t\t'password' => 'mypassword',\n\t\t\t\t'port' => '465',\n\t\t\t\t'encryption' => 'ssl',\n\t\t\t],\n\t\t],\n\t],\n];\n\nif (YII_ENV_DEV) {\n\t$config['bootstrap'][] = 'debug';\n\t$config['modules']['debug'] = [\n\t\t'class' => 'yii\\debug\\Module',\n\t\t'allowedIPs' => ['<IP-Address>', '<IP-Address>', '<IP-Address>', '<IP-Address>'],\n\t];\n\t$config['bootstrap'][] = 'gii';\n\t$config['modules']['gii'] = [\n\t\t'class' => 'yii\\gii\\Module',\n\t\t'allowedIPs' => ['<IP-Address>', '<IP-Address>', '<IP-Address>', '<IP-Address>'],\n\t];\n}\n\nreturn $config;", "line_changes": {"deleted": [{"line_no": 22, "char_start": 599, "char_end": 640, "line": "\t\t\t\t'username' => 'mailbox@example.com',\n"}, {"line_no": 36, "char_start": 847, "char_end": 917, "line": "\t\t'allowedIPs' => ['127.0.0.1', '::1', '192.168.0.*', '192.168.1.*'],\n"}, {"line_no": 42, "char_start": 1030, "char_end": 1100, "line": "\t\t'allowedIPs' => ['127.0.0.1', '::1', '192.168.0.*', '192.168.1.*'],\n"}], "added": [{"line_no": 23, "char_start": 599, "char_end": 628, "line": "\t\t\t\t'username' => '<EMAIL>',\n"}, {"line_no": 37, "char_start": 847, "char_end": 931, "line": "\t\t'allowedIPs' => ['<IP-Address>', '<IP-Address>', '<IP-Address>', '<IP-Address>'],\n"}, {"line_no": 43, "char_start": 1030, "char_end": 1114, "line": "\t\t'allowedIPs' => ['<IP-Address>', '<IP-Address>', '<IP-Address>', '<IP-Address>'],\n"}]}, "char_changes": {"deleted": [{"char_start": 599, "char_end": 640, "chars": "\t\t\t\t'username' => 'mailbox@example.com',\n"}, {"char_start": 847, "char_end": 917, "chars": "\t\t'allowedIPs' => ['127.0.0.1', '::1', '192.168.0.*', '192.168.1.*'],\n"}, {"char_start": 1030, "char_end": 1100, "chars": "\t\t'allowedIPs' => ['127.0.0.1', '::1', '192.168.0.*', '192.168.1.*'],\n"}], "added": [{"char_start": 599, "char_end": 628, "chars": "\t\t\t\t'username' => '<EMAIL>',\n"}, {"char_start": 847, "char_end": 931, "chars": "\t\t'allowedIPs' => ['<IP-Address>', '<IP-Address>', '<IP-Address>', '<IP-Address>'],\n"}, {"char_start": 1030, "char_end": 1114, "chars": "\t\t'allowedIPs' => ['<IP-Address>', '<IP-Address>', '<IP-Address>', '<IP-Address>'],\n"}]}}
{"func_name": 3913, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/**\n * RequestSettingsResponse\n *\n * PHP version 7.2\n *\n * @category Class\n * @package  Fastly\n * @author   oss@fastly.com\n */\n\n/**\n * Fastly API\n *\n * A PHP client library for interacting with most facets of the Fastly API.\n *\n */\n\n/**\n * NOTE: This class is auto generated.\n * Do not edit the class manually.\n */\n\nnamespace Fastly\\Model;\n\nuse \\ArrayAccess;\nuse \\Fastly\\ObjectSerializer;\n\n/**\n * RequestSettingsResponse Class Doc Comment\n *\n * @category Class\n * @package  Fastly\n * @author   oss@fastly.com\n * @implements \\ArrayAccess<TKey, TValue>\n * @template TKey int|null\n * @template TValue mixed|null  \n */\nclass RequestSettingsResponse implements ModelInterface, ArrayAccess, \\JsonSerializable\n{\n    public const DISCRIMINATOR = null;\n\n    /**\n      * The original name of the model.\n      *\n      * @var string\n      */\n    protected static $fastlyModelName = 'request_settings_response';\n\n    /**", "func_src_after": "<?php\n/**\n * RequestSettingsResponse\n *\n * PHP version 7.2\n *\n * @category Class\n * @package  Fastly\n * @author   <EMAIL> */\n\n/**\n * Fastly API\n *\n * A PHP client library for interacting with most facets of the Fastly API.\n *\n */\n\n/**\n * NOTE: This class is auto generated.\n * Do not edit the class manually.\n */\n\nnamespace Fastly\\Model;\n\nuse \\ArrayAccess;\nuse \\Fastly\\ObjectSerializer;\n\n/**\n * RequestSettingsResponse Class Doc Comment\n *\n * @category Class\n * @package  Fastly\n * @author   <EMAIL>\n * @implements \\ArrayAccess<TKey, TValue>\n * @template TKey int|null\n * @template TValue mixed|null  \n */\nclass RequestSettingsResponse implements ModelInterface, ArrayAccess, \\JsonSerializable\n{\n    public const DISCRIMINATOR = null;\n\n    /**\n      * The original name of the model.\n      *\n      * @var string\n      */\n    protected static $fastlyModelName = 'request_settings_response';\n\n    /**", "line_changes": {"deleted": [{"line_no": 10, "char_start": 125, "char_end": 153, "line": " * @author   oss@fastly.com\n"}, {"line_no": 11, "char_start": 125, "char_end": 129, "line": " */\n"}, {"line_no": 35, "char_start": 479, "char_end": 507, "line": " * @author   oss@fastly.com\n"}], "added": [{"line_no": 9, "char_start": 101, "char_end": 125, "line": " * @author   <EMAIL> */\n"}, {"line_no": 36, "char_start": 479, "char_end": 500, "line": " * @author   <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 125, "char_end": 153, "chars": " * @author   oss@fastly.com\n"}, {"char_start": 125, "char_end": 129, "chars": " */\n"}, {"char_start": 479, "char_end": 507, "chars": " * @author   oss@fastly.com\n"}], "added": [{"char_start": 101, "char_end": 125, "chars": " * @author   <EMAIL> */\n"}, {"char_start": 479, "char_end": 500, "chars": " * @author   <EMAIL>\n"}]}}
{"func_name": 3914, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "          'blankPage' => true\n      ];\n\n      return view('admin.auth.login', [\n          'pageConfigs' => $pageConfigs\n      ]);\n    }\n\n    public function loginUser(Request $request)\n    {\n      // Validate the form data\n      $this->validate($request, [\n        'email'   => 'required|email',\n        'password' => 'required'\n      ]);\n      // Attempt to log the user in\n      if (\\Auth::guard($this->guard_name)->attempt(['email' => $request->email, 'password' => $request->password], $request->remember)) {\n        // if successful, then redirect to their intended location\n        return redirect()->intended(route('admin.dashboard'));\n      }\n      // if unsuccessful, then redirect back to the login with the form data\n      return back()->withErrors(['email' => 'Email or password are incorrect!'])->withInput($request->only('email', 'remember'));\n    }\n\n    /**\n     * Log the user out of the application.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function logout(Request $request)\n    {\n        $this->guard($this->guard_name)->logout();\n\n        $request->session()->invalidate();\n\n        return $this->loggedOut($request) ?: redirect(route('admin.auth.login'));\n    }\n}\n", "func_src_after": "          'blankPage' => true\n      ];\n\n      return view('admin.auth.login', [\n          'pageConfigs' => $pageConfigs\n      ]);\n    }\n\n    public function loginUser(Request $request)\n    {\n      // Validate the form data\n      $this->validate($request, [\n        'email'   => 'required|email',\n        'password' => 'required'\n      ]);\n      // Attempt to log the user in\n      if (\\Auth::guard($this->guard_name)->attempt(['email' => $request->email, 'password' => $request->password], $request->remember)) {\n        // if successful, then redirect to their intended location\n        return redirect()->intended(route('admin.dashboard'));\n      }\n      // if unsuccessful, then redirect back to the login with the form data\n      return back()->withErrors(['email' => 'Email or password are incorrect!'])->withInput($request->only('email', 'remember'));\n    }\n\n    /**\n     * Log the user out of the application.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function logout(Request $request)\n    {\n        $this->guard($this->guard_name)->logout();\n\n        $request->session()->invalidate();\n\n        return $this->loggedOut($request) ?: redirect(route('admin.auth.login'));\n    }\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3917, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store()\n    {\n        $this->validate(request(), [\n            'name' => 'required|unique:users',\n            'email' => 'required|email',\n            'password' => 'required',\n            'role' => 'required'\n        ]);\n        \n        $user = User::create(request(['name', 'email', 'password','role']));\n        \n        auth()->login($user);\n        \n        return redirect('/users')->with('success', 'Ajout avec succes!');\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function compte()\n    {\n        \n        $now = date('Y-m-d');\n        $assurences = DB::table('vehicules')->where('assurences', 'like', '%'.$now.'%');\n        $assurences = $assurences->get();\n        $vidanges = DB::table('vehicules')->where('vidanges', 'like', '%'.$now.'%');\n        $vidanges = $vidanges->get();\n        $vignettes = DB::table('vehicules')->where('vignettes', 'like', '%'.$now.'%');\n        $vignettes = $vignettes->get();\n        $visites = DB::table('vehicules')->where('visites_tech', 'like', '%'.$now.'%');\n        $visites = $visites->get();\n        $reparations = DB::table('vehicules')->where('repdate', 'like', '%'.$now.'%');\n        $reparations = $reparations->get();\n\n        $nbassurences = DB::table('vehicules')->where('assurences', 'like', '%'.$now.'%')->count();\n        $nbvidanges = DB::table('vehicules')->where('vidanges', 'like', '%'.$now.'%')->count();", "func_src_after": "    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store()\n    {\n        $this->validate(request(), [\n            'name' => 'required|unique:users',\n            'email' => 'required|email',\n            'password' => 'required',\n            'role' => 'required'\n        ]);\n        \n        $user = User::create(request(['name', 'email', 'password','role']));\n        \n        auth()->login($user);\n        \n        return redirect('/users')->with('success', 'Ajout avec succes!');\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function compte()\n    {\n        \n        $now = date('Y-m-d');\n        $assurences = DB::table('vehicules')->where('assurences', 'like', '%'.$now.'%');\n        $assurences = $assurences->get();\n        $vidanges = DB::table('vehicules')->where('vidanges', 'like', '%'.$now.'%');\n        $vidanges = $vidanges->get();\n        $vignettes = DB::table('vehicules')->where('vignettes', 'like', '%'.$now.'%');\n        $vignettes = $vignettes->get();\n        $visites = DB::table('vehicules')->where('visites_tech', 'like', '%'.$now.'%');\n        $visites = $visites->get();\n        $reparations = DB::table('vehicules')->where('repdate', 'like', '%'.$now.'%');\n        $reparations = $reparations->get();\n\n        $nbassurences = DB::table('vehicules')->where('assurences', 'like', '%'.$now.'%')->count();\n        $nbvidanges = DB::table('vehicules')->where('vidanges', 'like', '%'.$now.'%')->count();", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3934, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n\nnamespace App\\Swagger\\Requests;\n\n/**\n * @OA\\Schema(\n *      title=\"Login request\",\n *      description=\"Login request body data\",\n *      type=\"object\",\n *      required={\"email\", \"password\"}\n * )\n */\nclass LoginRequest {\n\n    /**\n     * @OA\\Property(\n     *      title=\"email\",\n     *      description=\"Email address to the user's account.\",\n     *      example=\"john.doe@example.com\"\n     * )\n     * @var string\n     */\n    public $email;\n\n    /**\n     * @OA\\Property(\n     *      title=\"password\",\n     *      description=\"Password to the user's account.\",\n     *      example=\"Vertex25!\"\n     * )\n     * @var string\n     */\n    public $password;\n\n}\n", "func_src_after": "<?php\n\n\nnamespace App\\Swagger\\Requests;\n\n/**\n * @OA\\Schema(\n *      title=\"Login request\",\n *      description=\"Login request body data\",\n *      type=\"object\",\n *      required={\"email\", \"password\"}\n * )\n */\nclass LoginRequest {\n\n    /**\n     * @OA\\Property(\n     *      title=\"email\",\n     *      description=\"Email address to the user's account.\",\n     *      example=\"<EMAIL>\"\n     * )\n     * @var string\n     */\n    public $email;\n\n    /**\n     * @OA\\Property(\n     *      title=\"password\",\n     *      description=\"Password to the user's account.\",\n     *      example=\"Vertex25!\"\n     * )\n     * @var string\n     */\n    public $password;\n\n}\n", "line_changes": {"deleted": [{"line_no": 20, "char_start": 351, "char_end": 394, "line": "     *      example=\"john.doe@example.com\"\n"}], "added": [{"line_no": 21, "char_start": 351, "char_end": 381, "line": "     *      example=\"<EMAIL>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 351, "char_end": 394, "chars": "     *      example=\"john.doe@example.com\"\n"}], "added": [{"char_start": 351, "char_end": 381, "chars": "     *      example=\"<EMAIL>\"\n"}]}}
{"func_name": 3937, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    /**\n     * muestra datos del recurso y combos asociados para editar\n     * usuarios/{usuarios}/edit\n     * GET\n     */\n    public function edit($id) {\n        if(Auth::user()->can('update-users')) {\n            $user = User::findOrFail($id); \n            //$roles_user = $user->roles->lists('id')->first();\n            $roles_user = $user->roles->lists('id')->toArray();\n            $roles = Role::orderBy('display_name', 'asc')->lists('display_name', 'id');\n            return [\n                'user'=>$user,\n                'roles'=>$roles,\n                'roles_user'=>$roles_user,\n            ];\n            //return view('auth::user.edit', compact('user', 'roles', 'roles_user'));\n        }\n        return redirect('/logout');\n    }\n\n\n    /**\n     * solo muestra datos del recurso\n     * usuarios/{usuarios}\n     * GET\n     */\n    public function show($id)\n    {\n        if(Auth::user()->can('read-users')) {\n            return User::findOrFail($id);\n        }\n        return redirect('/logout');\n    }\n    /**\n     * actualizar usuario en especifico\n     * usuarios/{usuarios}\n     * PUT|PATCH\n     */\n    public function update(UpdateUserRequest $request, $id)\n    {\n        /*\n        $this->validate($request, [\n            'name' => 'required',\n            'email' => 'required|email|unique:users,email,'.$id,\n            'password' => 'same:confirm-password',\n            'roles' => 'required'\n        ]);\n\n        $input = $request->all();", "func_src_after": "    /**\n     * muestra datos del recurso y combos asociados para editar\n     * usuarios/{usuarios}/edit\n     * GET\n     */\n    public function edit($id) {\n        if(Auth::user()->can('update-users')) {\n            $user = User::findOrFail($id); \n            //$roles_user = $user->roles->lists('id')->first();\n            $roles_user = $user->roles->lists('id')->toArray();\n            $roles = Role::orderBy('display_name', 'asc')->lists('display_name', 'id');\n            return [\n                'user'=>$user,\n                'roles'=>$roles,\n                'roles_user'=>$roles_user,\n            ];\n            //return view('auth::user.edit', compact('user', 'roles', 'roles_user'));\n        }\n        return redirect('/logout');\n    }\n\n\n    /**\n     * solo muestra datos del recurso\n     * usuarios/{usuarios}\n     * GET\n     */\n    public function show($id)\n    {\n        if(Auth::user()->can('read-users')) {\n            return User::findOrFail($id);\n        }\n        return redirect('/logout');\n    }\n    /**\n     * actualizar usuario en especifico\n     * usuarios/{usuarios}\n     * PUT|PATCH\n     */\n    public function update(UpdateUserRequest $request, $id)\n    {\n        /*\n        $this->validate($request, [\n            'name' => 'required',\n            'email' => 'required|email|unique:users,email,'.$id,\n            'password' => 'same:confirm-password',\n            'roles' => 'required'\n        ]);\n\n        $input = $request->all();", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3938, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n?>\n\n<!-- Sidebar user panel -->\n<div class=\"user-panel\">\n    <div class=\"pull-left image\">\n        <?php echo \\cebe\\gravatar\\Gravatar::widget(\n            [\n                'email' => 'username@example.com',\n                'options' => [\n                    'alt' => 'username',\n                ],\n                'size' => 64,\n            ]\n        ); ?>\n    </div>\n    <div class=\"pull-left info\">\n        <p>username</p>\n\n        <a href=\"#\"><i class=\"fa fa-circle text-success\"></i> Online</a>\n    </div>\n</div>\n\n<?php\n\n// prepare menu items, get all modules\n$menuItems = [];\n\n$favouriteMenuItems[] = ['label' => 'Opciones', 'options' => ['class' => 'header']];\n\n\n$developerMenuItems = [];\n$developerMenuItems[] = [\n    'url' => ['/sub/action/one'],\n    'icon' => 'cog',\n    'label' => 'Sub 1',\n];\n$developerMenuItems[] = [\n    'icon' => 'cog',\n    'label' => 'No Link',\n];\n$developerMenuItems[] = [\n    'icon' => 'cog',\n    'label' => 'Not visible',\n    'visible' => false,\n];\n$developerMenuItems[] = [\n    'icon' => 'cog',\n    'label' => 'Folder',", "func_src_after": "<?php\n\n?>\n\n<!-- Sidebar user panel -->\n<div class=\"user-panel\">\n    <div class=\"pull-left image\">\n        <?php echo \\cebe\\gravatar\\Gravatar::widget(\n            [\n                'email' => '<EMAIL>',\n                'options' => [\n                    'alt' => 'username',\n                ],\n                'size' => 64,\n            ]\n        ); ?>\n    </div>\n    <div class=\"pull-left info\">\n        <p>username</p>\n\n        <a href=\"#\"><i class=\"fa fa-circle text-success\"></i> Online</a>\n    </div>\n</div>\n\n<?php\n\n// prepare menu items, get all modules\n$menuItems = [];\n\n$favouriteMenuItems[] = ['label' => 'Opciones', 'options' => ['class' => 'header']];\n\n\n$developerMenuItems = [];\n$developerMenuItems[] = [\n    'url' => ['/sub/action/one'],\n    'icon' => 'cog',\n    'label' => 'Sub 1',\n];\n$developerMenuItems[] = [\n    'icon' => 'cog',\n    'label' => 'No Link',\n];\n$developerMenuItems[] = [\n    'icon' => 'cog',\n    'label' => 'Not visible',\n    'visible' => false,\n];\n$developerMenuItems[] = [\n    'icon' => 'cog',\n    'label' => 'Folder',", "line_changes": {"deleted": [{"line_no": 10, "char_start": 164, "char_end": 215, "line": "                'email' => 'username@example.com',\n"}], "added": [{"line_no": 11, "char_start": 164, "char_end": 202, "line": "                'email' => '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 164, "char_end": 215, "chars": "                'email' => 'username@example.com',\n"}], "added": [{"char_start": 164, "char_end": 202, "chars": "                'email' => '<EMAIL>',\n"}]}}
{"func_name": 3940, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n/**\n * Unit test class for the FunctionSpacing sniff.\n *\n * @author    Greg Sherwood <gsherwood@squiz.net>\n * @copyright 2006-2015 Squiz Pty Ltd (ABN 77 084 670 600)\n * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence\n */\nnamespace Dekode\\GravityForms\\Vendor\\PHP_CodeSniffer\\Standards\\Squiz\\Tests\\WhiteSpace;\n\nuse Dekode\\GravityForms\\Vendor\\PHP_CodeSniffer\\Tests\\Standards\\AbstractSniffUnitTest;\nclass FunctionSpacingUnitTest extends \\Dekode\\GravityForms\\Vendor\\PHP_CodeSniffer\\Tests\\Standards\\AbstractSniffUnitTest\n{\n    /**\n     * Returns the lines where errors should occur.\n     *\n     * The key of the array should represent the line number and the value\n     * should represent the number of errors that should occur on that line.\n     *\n     * @param string $testFile The name of the file being tested.\n     *\n     * @return array<int, int>\n     */\n    public function getErrorList($testFile = '')\n    {\n        switch ($testFile) {\n            case 'FunctionSpacingUnitTest.1.inc':\n                return [26 => 1, 35 => 1, 44 => 1, 51 => 1, 55 => 1, 61 => 1, 64 => 1, 66 => 1, 81 => 1, 100 => 1, 111 => 1, 113 => 1, 119 => 2, 141 => 1, 160 => 1, 173 => 2, 190 => 1, 224 => 2, 281 => 1, 282 => 1, 295 => 1, 297 => 1, 303 => 1, 327 => 1, 329 => 1, 338 => 1, 344 => 1, 345 => 1, 354 => 2, 355 => 1, 356 => 1, 360 => 2, 361 => 1, 362 => 1, 385 => 1, 399 => 1, 411 => 2, 418 => 2, 426 => 2, 432 => 1, 437 => 1, 438 => 1, 442 => 2, 444 => 1, 449 => 1, 458 => 2, 459 => 1, 460 => 1, 465 => 2, 466 => 1, 467 => 1, 471 => 1, 473 => 2, 475 => 1, 478 => 2, 479 => 1, 483 => 2, 495 => 1, 529 => 1, 539 => 1, 547 => 2, 551 => 1, 553 => 1, 560 => 1, 566 => 1];\n            case 'FunctionSpacingUnitTest.2.inc':\n                return [2 => 1];\n            case 'FunctionSpacingUnitTest.3.inc':\n                return [7 => 1];\n            case 'FunctionSpacingUnitTest.5.inc':\n                return [5 => 1];\n            case 'FunctionSpacingUnitTest.6.inc':\n                return [10 => 1];\n            default:\n                return [];\n        }\n        //end switch\n    }\n    //end getErrorList()\n    /**\n     * Returns the lines where warnings should occur.\n     *\n     * The key of the array should represent the line number and the value\n     * should represent the number of warnings that should occur on that line.\n     *\n     * @return array<int, int>", "func_src_after": "<?php\n\n/**\n * Unit test class for the FunctionSpacing sniff.\n *\n * @author    Greg Sherwood <<EMAIL>>\n * @copyright 2006-2015 Squiz Pty Ltd (ABN 77 084 670 600)\n * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence\n */\nnamespace Dekode\\GravityForms\\Vendor\\PHP_CodeSniffer\\Standards\\Squiz\\Tests\\WhiteSpace;\n\nuse Dekode\\GravityForms\\Vendor\\PHP_CodeSniffer\\Tests\\Standards\\AbstractSniffUnitTest;\nclass FunctionSpacingUnitTest extends \\Dekode\\GravityForms\\Vendor\\PHP_CodeSniffer\\Tests\\Standards\\AbstractSniffUnitTest\n{\n    /**\n     * Returns the lines where errors should occur.\n     *\n     * The key of the array should represent the line number and the value\n     * should represent the number of errors that should occur on that line.\n     *\n     * @param string $testFile The name of the file being tested.\n     *\n     * @return array<int, int>\n     */\n    public function getErrorList($testFile = '')\n    {\n        switch ($testFile) {\n            case 'FunctionSpacingUnitTest.1.inc':\n                return [26 => 1, 35 => 1, 44 => 1, 51 => 1, 55 => 1, 61 => 1, 64 => 1, 66 => 1, 81 => 1, 100 => 1, 111 => 1, 113 => 1, 119 => 2, 141 => 1, 160 => 1, 173 => 2, 190 => 1, 224 => 2, 281 => 1, 282 => 1, 295 => 1, 297 => 1, 303 => 1, 327 => 1, 329 => 1, 338 => 1, 344 => 1, 345 => 1, 354 => 2, 355 => 1, 356 => 1, 360 => 2, 361 => 1, 362 => 1, 385 => 1, 399 => 1, 411 => 2, 418 => 2, 426 => 2, 432 => 1, 437 => 1, 438 => 1, 442 => 2, 444 => 1, 449 => 1, 458 => 2, 459 => 1, 460 => 1, 465 => 2, 466 => 1, 467 => 1, 471 => 1, 473 => 2, 475 => 1, 478 => 2, 479 => 1, 483 => 2, 495 => 1, 529 => 1, 539 => 1, 547 => 2, 551 => 1, 553 => 1, 560 => 1, 566 => 1];\n            case 'FunctionSpacingUnitTest.2.inc':\n                return [2 => 1];\n            case 'FunctionSpacingUnitTest.3.inc':\n                return [7 => 1];\n            case 'FunctionSpacingUnitTest.5.inc':\n                return [5 => 1];\n            case 'FunctionSpacingUnitTest.6.inc':\n                return [10 => 1];\n            default:\n                return [];\n        }\n        //end switch\n    }\n    //end getErrorList()\n    /**\n     * Returns the lines where warnings should occur.\n     *\n     * The key of the array should represent the line number and the value\n     * should represent the number of warnings that should occur on that line.\n     *\n     * @return array<int, int>", "line_changes": {"deleted": [{"line_no": 6, "char_start": 64, "char_end": 114, "line": " * @author    Greg Sherwood <gsherwood@squiz.net>\n"}], "added": [{"line_no": 7, "char_start": 64, "char_end": 102, "line": " * @author    Greg Sherwood <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 64, "char_end": 114, "chars": " * @author    Greg Sherwood <gsherwood@squiz.net>\n"}], "added": [{"char_start": 64, "char_end": 102, "chars": " * @author    Greg Sherwood <<EMAIL>>\n"}]}}
{"func_name": 3943, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nnamespace App\\Http\\Controllers\\V1;\n\nuse App\\Models\\Agent;\nuse Illuminate\\Http\\Request;\nuse App\\Models\\Menu;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Redis;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass AuthController extends BaseController\n{\n\n    protected $guard = 'admin';\n    public function __construct()\n    {\n        \\Auth::guard($this->guard);\n    }\n\n    /**\n     * consumes={\"multipart/form-data\"},\n     * @SWG\\Post(\n     *   path=\"/authorization\",\n     *   tags={\"登录\"},\n     *   summary=\"厅主/代理商登录\",\n     *   description=\"\n     *   厅主/代理商登录\n     *   成功返回字段说明\n    {\n    'code': 0,\n    'text': '认证成功',\n    'result': {\n    'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYWdlbnQtYXBpLmRldi9hcGkvYXV0aG9yaXphdGlvbiIsImlhdCI6MTQ5MDc3MTA0NywiZXhwIjoxNDkwOTg3MDQ3LCJuYmYiOjE0OTA3NzEwNDcsImp0aSI6InBYblFwbnV3c1N6b3JhMEEiLCJzdWIiOjJ9.8OUMTZTK7sovzwduyq7c94UJjcTxOjWT9SFluk7fMko',\n    'user': {\n    'id': 2, //登录用户ID\n    'user_name': 'agent_test',  //登录用户名\n    'grade_id': 2   //登录用户类型，1为厅主，2为代理商\n    },\n    'menus': {},//菜单集合\n    'languages': {}, //语言包集合\n    'timezones': {}, //时区集合\n    }\n    }\n    \",\n     *   operationId=\"captcha\",\n     *   @SWG\\Parameter(\n     *     in=\"header\",\n     *     name=\"Accept\",\n     *     type=\"string\",", "func_src_after": "<?php\n\nnamespace App\\Http\\Controllers\\V1;\n\nuse App\\Models\\Agent;\nuse Illuminate\\Http\\Request;\nuse App\\Models\\Menu;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Redis;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass AuthController extends BaseController\n{\n\n    protected $guard = 'admin';\n    public function __construct()\n    {\n        \\Auth::guard($this->guard);\n    }\n\n    /**\n     * consumes={\"multipart/form-data\"},\n     * @SWG\\Post(\n     *   path=\"/authorization\",\n     *   tags={\"登录\"},\n     *   summary=\"厅主/代理商登录\",\n     *   description=\"\n     *   厅主/代理商登录\n     *   成功返回字段说明\n    {\n    'code': 0,\n    'text': '认证成功',\n    'result': {\n    'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYWdlbnQtYXBpLmRldi9hcGkvYXV0aG9yaXphdGlvbiIsImlhdCI6MTQ5MDc3MTA0NywiZXhwIjoxNDkwOTg3MDQ3LCJuYmYiOjE0OTA3NzEwNDcsImp0aSI6InBYblFwbnV3c1N6b3JhMEEiLCJzdWIiOjJ9.8OUMTZTK7sovzwduyq7c94UJjcTxOjWT9SFluk7fMko',\n    'user': {\n    'id': 2, //登录用户ID\n    'user_name': 'agent_test',  //登录用户名\n    'grade_id': 2   //登录用户类型，1为厅主，2为代理商\n    },\n    'menus': {},//菜单集合\n    'languages': {}, //语言包集合\n    'timezones': {}, //时区集合\n    }\n    }\n    \",\n     *   operationId=\"captcha\",\n     *   @SWG\\Parameter(\n     *     in=\"header\",\n     *     name=\"Accept\",\n     *     type=\"string\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3952, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\n        $authenticator = $this->getAuthenticator();\n\n        $client = Mockery::mock(Client::class);\n        $client\n            ->shouldReceive('authenticate')->once()\n            ->with(Mockery::on(function ($token) {\n                $this->assertInstanceOf(Token::class, $token);\n\n                return true;\n            }), 'jwt');\n\n        $key = <<<'KEY'\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAov6ljr4lPgoyyyyhIRp+8QdaSUUpWU6oThOeDzX1NIGNCtW+\nEaGLt0Qbhk8qaEhm/aZRRbdvEqNogDMm9b/+RsiremQ98O/4eGuQTTPD9Y78IkAh\nC+QKNNtbqv1v/QMPFeHm7nvB0PRlurSNf6d2jJ9psij0i6nnkXSsmc/i6Qx0MxwA\n8igdKb98wMGqV2Jj45lw/nFeOP+CJmi2ws27JJt40SaXFbbbm7Ye89y0H0UWa2cf\nMrvwJLNKhHos7atlao+ZZHDNsj9ZA6r7xwAXBv9z6kkes1XSarzr1kxtu7XUqoND\n2b6kNCofGabQDK+QErnk1dmEdskNXJFFhx/CSwIDAQABAoIBADp7ujWkfkJrcFw8\nUDhLhH7BT6D4ouR7d6JEIbN9fdTwIwZfOQqkdzgzxNiFMUcnq2SZt5GXRtBeN5HA\nSNtmnzsQp46LxznbMMEsfyNkToyeWFOFxRW6JftfNd39f6A957zHSJALcbii6Jl8\nTUUfdkbwsAEP9ubh+MfVIFU0JUvO7Ij3RX3NxKm6RkfvwSeUCMk4myyj3KOLz8Hn\nn8RQp4F7n54EcMDv79gtolEWo1d9vaQw9S1h0U1OPb+3KveIzy33IWLfFX4Zx1ck\nDAmS/kIGgWzVVdMAAWW0XXGAdLPilWjipLRTl+OfxRcpvDBStraiwYPg6dgtqO0x\nxw2t0CkCgYEA0DcokJhsnZ+hD9z+pLnyFiJIMC+XjD/cEXYAt84RkKPPGMKTYyJy\ncakeSYPyRa8X4fbmRqJcYXtXTRvbVO3nInAX8g6mWl1xcCo/d2eh7AuM98K13nyW\nk5NJFlx5HDMk7k7Xh6rTwsgCLuIQt+ONpm6a82muwsJMM1zZZ437yGUCgYEAyGa6\nvzwH371XX5hDKvw83DnnnZIUwfGOcSN2mTiCxgG9FtkWkyk0ApELGK0e/5mAYKql\nplcOFbsp/KAT/N1VpTNK3LDPI4IZzn5ZSnWnC4qTqaKpmBDMSIt3U6+8wlOWn33d\ng25wHsFvW6XC46HCAC7/OoI6yOwBFHN1JqA4PO8CgYEAh64J3v+Ud7pXqBCoVwtc\nd5PrWosIxDmw3Cf7G8tKoug7wbS5enYuAWbk957ltwb8FyFeuVR/wn4vS24FpPhK\nD6Tf1bo6KNSPYToGlXaQi1KTj7fv74VcUdo+XDXyLbAeNrRlumBVEa5nzck+f7Xm\nzjdw/YE2gm8+XJH6kYJyOgkCgYBF+ChH0MvnAJLbG6yH+528PrNxvqlktdRICFvG\nT4bJX54HtjA9nWs9Yir/qKJkF9JM7gf8NfUC/WBBhhq0dQsMLQZ8W3dXLHuaL185\nsi5qxy2bUuHn6CWLRraZD4jWSJ0UfruywgJ/moYo940+MSItMjuG0CV6NXyDCXTj\n0ZkRHQKBgQCtLUbdM8rm+VuYSbm5p+HRHo8/U9T8m+O11W3LKE0i3VpAt8WOWe4v\nBbzT84hbb9KPWKJOBtyhaFLn/EG6lQYi2rTSsOeRcOed+njm2RNW9PECEY5WGffj\n8YhyE+wHJgA5Ngf22qYAR4MKYsytDx0iDMvMTTWpN+5G618zBfZwwg==\n-----END RSA PRIVATE KEY-----\n\nKEY;\n\n        $return = $authenticator->with($client)->authenticate([\n            'appId' => 1,\n            'key'   => $key,\n        ]);\n\n        $this->assertInstanceOf(Client::class, $return);\n    }", "func_src_after": "    {\n        $authenticator = $this->getAuthenticator();\n\n        $client = Mockery::mock(Client::class);\n        $client\n            ->shouldReceive('authenticate')->once()\n            ->with(Mockery::on(function ($token) {\n                $this->assertInstanceOf(Token::class, $token);\n\n                return true;\n            }), 'jwt');\n\n        $key = <<<'KEY'\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAov6ljr4lPgoyyyyhIRp+8QdaSUUpWU6oThOeDzX1NIGNCtW+\nEaGLt0Qbhk8qaEhm/aZRRbdvEqNogDMm9b/+RsiremQ98O/4eGuQTTPD9Y78IkAh\nC+QKNNtbqv1v/QMPFeHm7nvB0PRlurSNf6d2jJ9psij0i6nnkXSsmc/i6Qx0MxwA\n8igdKb98wMGqV2Jj45lw/nFeOP+CJmi2ws27JJt40SaXFbbbm7Ye89y0H0UWa2cf\nMrvwJLNKhHos7atlao+ZZHDNsj9ZA6r7xwAXBv9z6kkes1XSarzr1kxtu7XUqoND\n2b6kNCofGabQDK+QErnk1dmEdskNXJFFhx/CSwIDAQABAoIBADp7ujWkfkJrcFw8\nUDhLhH7BT6D4ouR7d6JEIbN9fdTwIwZfOQqkdzgzxNiFMUcnq2SZt5GXRtBeN5HA\nSNtmnzsQp46LxznbMMEsfyNkToyeWFOFxRW6JftfNd39f6A957zHSJALcbii6Jl8\nTUUfdkbwsAEP9ubh+MfVIFU0JUvO7Ij3RX3NxKm6RkfvwSeUCMk4myyj3KOLz8Hn\nn8RQp4F7n54EcMDv79gtolEWo1d9vaQw9S1h0U1OPb+3KveIzy33IWLfFX4Zx1ck\nDAmS/kIGgWzVVdMAAWW0XXGAdLPilWjipLRTl+OfxRcpvDBStraiwYPg6dgtqO0x\nxw2t0CkCgYEA0DcokJhsnZ+hD9z+pLnyFiJIMC+XjD/cEXYAt84RkKPPGMKTYyJy\ncakeSYPyRa8X4fbmRqJcYXtXTRvbVO3nInAX8g6mWl1xcCo/d2eh7AuM98K13nyW\nk5NJFlx5HDMk7k7Xh6rTwsgCLuIQt+ONpm6a82muwsJMM1zZZ437yGUCgYEAyGa6\nvzwH371XX5hDKvw83DnnnZIUwfGOcSN2mTiCxgG9FtkWkyk0ApELGK0e/5mAYKql\nplcOFbsp/KAT/N1VpTNK3LDPI4IZzn5ZSnWnC4qTqaKpmBDMSIt3U6+8wlOWn33d\ng25wHsFvW6XC46HCAC7/OoI6yOwBFHN1JqA4PO8CgYEAh64J3v+Ud7pXqBCoVwtc\nd5PrWosIxDmw3Cf7G8tKoug7wbS5enYuAWbk957ltwb8FyFeuVR/wn4vS24FpPhK\nD6Tf1bo6KNSPYToGlXaQi1KTj7fv74VcUdo+XDXyLbAeNrRlumBVEa5nzck+f7Xm\nzjdw/YE2gm8+XJH6kYJyOgkCgYBF+ChH0MvnAJLbG6yH+528PrNxvqlktdRICFvG\nT4bJX54HtjA9nWs9Yir/qKJkF9JM7gf8NfUC/WBBhhq0dQsMLQZ8W3dXLHuaL185\nsi5qxy2bUuHn6CWLRraZD4jWSJ0UfruywgJ/moYo940+MSItMjuG0CV6NXyDCXTj\n0ZkRHQKBgQCtLUbdM8rm+VuYSbm5p+HRHo8/U9T8m+O11W3LKE0i3VpAt8WOWe4v\nBbzT84hbb9KPWKJOBtyhaFLn/EG6lQYi2rTSsOeRcOed+njm2RNW9PECEY5WGffj\n8YhyE+wHJgA5Ngf22qYAR4MKYsytDx0iDMvMTTWpN+5G618zBfZwwg==\n-----END RSA PRIVATE KEY-----\n\nKEY;\n\n        $return = $authenticator->with($client)->authenticate([\n            'appId' => 1,\n            'key'   => $key,\n        ]);\n\n        $this->assertInstanceOf(Client::class, $return);\n    }", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 3956, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n/**\n * Profiler\n *  © 2015 Profiler\n *\n * \n * \n * \n *\n * \n * \n * \n *\n * \n * \n * \n * \n */\n\n/**\n * UserIdentityTest\n *\n * @package profiler.modules_core.user.tests.unit.components\n * @since 0.9\n * @group user\n\n */\nclass UserIdentityTest extends CDbTestCase\n{\n\n    public $fixtures = array(':user', ':user_password');\n\n    public function testAuthenticate()\n    {\n        $identity = new UserIdentity('WrongUser', 'wrongPassword');\n        $this->assertFalse($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_USERNAME_INVALID);\n\n        $identity = new UserIdentity('User1', 'wrongPassword');\n        $this->assertFalse($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_PASSWORD_INVALID);\n\n        $identity = new UserIdentity('User1', '123qwe');\n        $this->assertTrue($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_NONE);\n\n        $identity = new UserIdentity('user1@example.com', 'wrongPassword');\n        $this->assertFalse($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_PASSWORD_INVALID);", "func_src_after": "<?php\n\n/**\n * Profiler\n *  © 2015 Profiler\n *\n * \n * \n * \n *\n * \n * \n * \n *\n * \n * \n * \n * \n */\n\n/**\n * UserIdentityTest\n *\n * @package profiler.modules_core.user.tests.unit.components\n * @since 0.9\n * @group user\n\n */\nclass UserIdentityTest extends CDbTestCase\n{\n\n    public $fixtures = array(':user', ':user_password');\n\n    public function testAuthenticate()\n    {\n        $identity = new UserIdentity('WrongUser', 'wrongPassword');\n        $this->assertFalse($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_USERNAME_INVALID);\n\n        $identity = new UserIdentity('User1', 'wrongPassword');\n        $this->assertFalse($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_PASSWORD_INVALID);\n\n        $identity = new UserIdentity('User1', '123qwe');\n        $this->assertTrue($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_NONE);\n\n        $identity = new UserIdentity('<EMAIL>', 'wrongPassword');\n        $this->assertFalse($identity->authenticate());\n        $this->assertEquals($identity->errorCode, UserIdentity::ERROR_PASSWORD_INVALID);", "line_changes": {"deleted": [{"line_no": 48, "char_start": 979, "char_end": 1055, "line": "        $identity = new UserIdentity('user1@example.com', 'wrongPassword');\n"}], "added": [{"line_no": 49, "char_start": 979, "char_end": 1045, "line": "        $identity = new UserIdentity('<EMAIL>', 'wrongPassword');\n"}]}, "char_changes": {"deleted": [{"char_start": 979, "char_end": 1055, "chars": "        $identity = new UserIdentity('user1@example.com', 'wrongPassword');\n"}], "added": [{"char_start": 979, "char_end": 1045, "chars": "        $identity = new UserIdentity('<EMAIL>', 'wrongPassword');\n"}]}}
{"func_name": 3960, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n/*\n * This file is part of the `src-run/augustus-reflection-library` project.\n *\n * (c) Rob Frawley 2nd <rmf@src.run>\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nnamespace SR\\Reflection\\Inspector\\Aware\\ScopeClass;\n\nuse SR\\Reflection\\Exception\\InvalidArgumentException;\nuse SR\\Reflection\\Inspector\\ConstantInspector;\nuse SR\\Reflection\\Resolver\\ResolverInterface;\n\ninterface ConstantAwareInterface\n{\n    /**\n     * @return \\ReflectionClass\n     */\n    public function reflection();\n\n    /**\n     * @return ResolverInterface\n     */\n    public function resolver();\n\n    /**\n     * @param string $name\n     *\n     * @return bool\n     */\n    public function hasConstant($name);\n\n    /**\n     * @param string $name\n     *\n     * @throws InvalidArgumentException\n     *\n     * @return ConstantInspector\n     */\n    public function getConstant($name);\n\n    /**\n     * @return ConstantInspector[]\n     */\n    public function constants();\n", "func_src_after": "<?php\n\n/*\n * This file is part of the `src-run/augustus-reflection-library` project.\n *\n * (c) Rob Frawley 2nd <<EMAIL>>\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nnamespace SR\\Reflection\\Inspector\\Aware\\ScopeClass;\n\nuse SR\\Reflection\\Exception\\InvalidArgumentException;\nuse SR\\Reflection\\Inspector\\ConstantInspector;\nuse SR\\Reflection\\Resolver\\ResolverInterface;\n\ninterface ConstantAwareInterface\n{\n    /**\n     * @return \\ReflectionClass\n     */\n    public function reflection();\n\n    /**\n     * @return ResolverInterface\n     */\n    public function resolver();\n\n    /**\n     * @param string $name\n     *\n     * @return bool\n     */\n    public function hasConstant($name);\n\n    /**\n     * @param string $name\n     *\n     * @throws InvalidArgumentException\n     *\n     * @return ConstantInspector\n     */\n    public function getConstant($name);\n\n    /**\n     * @return ConstantInspector[]\n     */\n    public function constants();\n", "line_changes": {"deleted": [{"line_no": 6, "char_start": 88, "char_end": 125, "line": " * (c) Rob Frawley 2nd <rmf@src.run>\n"}], "added": [{"line_no": 7, "char_start": 88, "char_end": 121, "line": " * (c) Rob Frawley 2nd <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 88, "char_end": 125, "chars": " * (c) Rob Frawley 2nd <rmf@src.run>\n"}], "added": [{"char_start": 88, "char_end": 121, "chars": " * (c) Rob Frawley 2nd <<EMAIL>>\n"}]}}
{"func_name": 3974, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * CannotBeAppliedMoreThanException.php\n *\n * LICENSE: This source file is created by the company around M. Pretzlaw\n * located in Germany also known as rmp-up. All its contents are proprietary\n * and under german copyright law. Consider this file as closed source and/or\n * without the permission to reuse or modify its contents.\n * This license is available through the world-wide-web at the following URI:\n * https://rmp-up.de/license-generic.txt . If you did not receive a copy\n * of the license and are unable to obtain it through the web, please send a\n * note to mail@rmp-up.de so we can mail you a copy.\n *\n * @package   wp-integration-test\n * @copyright 2021 Pretzlaw\n * @license   https://rmp-up.de/license-generic.txt\n */\n\ndeclare(strict_types=1);\n\nnamespace Pretzlaw\\WPInt\\Mocks;\n\nuse Pretzlaw\\WPInt\\RuntimeException;\nuse Throwable;\n\n/**\n * CannotBeAppliedMoreThanException\n *\n * @copyright 2021 Pretzlaw (https://rmp-up.de)\n */\nclass CannotBeAppliedMoreThanException extends RuntimeException\n{\n    public function __construct(string $methodOrClass, int $maxCalls, $code = 0, Throwable $previous = null)\n    {\n        parent::__construct(sprintf('%s can only be applied %d times', $methodOrClass, $maxCalls), $code, $previous);\n    }\n}\n", "func_src_after": "<?php\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * CannotBeAppliedMoreThanException.php\n *\n * LICENSE: This source file is created by the company around M. Pretzlaw\n * located in Germany also known as rmp-up. All its contents are proprietary\n * and under german copyright law. Consider this file as closed source and/or\n * without the permission to reuse or modify its contents.\n * This license is available through the world-wide-web at the following URI:\n * https://rmp-up.de/license-generic.txt . If you did not receive a copy\n * of the license and are unable to obtain it through the web, please send a\n * note to <EMAIL> so we can mail you a copy.\n *\n * @package   wp-integration-test\n * @copyright 2021 Pretzlaw\n * @license   https://rmp-up.de/license-generic.txt\n */\n\ndeclare(strict_types=1);\n\nnamespace Pretzlaw\\WPInt\\Mocks;\n\nuse Pretzlaw\\WPInt\\RuntimeException;\nuse Throwable;\n\n/**\n * CannotBeAppliedMoreThanException\n *\n * @copyright 2021 Pretzlaw (https://rmp-up.de)\n */\nclass CannotBeAppliedMoreThanException extends RuntimeException\n{\n    public function __construct(string $methodOrClass, int $maxCalls, $code = 0, Throwable $previous = null)\n    {\n        parent::__construct(sprintf('%s can only be applied %d times', $methodOrClass, $maxCalls), $code, $previous);\n    }\n}\n", "line_changes": {"deleted": [{"line_no": 14, "char_start": 633, "char_end": 686, "line": " * note to mail@rmp-up.de so we can mail you a copy.\n"}], "added": [{"line_no": 15, "char_start": 633, "char_end": 679, "line": " * note to <EMAIL> so we can mail you a copy.\n"}]}, "char_changes": {"deleted": [{"char_start": 633, "char_end": 686, "chars": " * note to mail@rmp-up.de so we can mail you a copy.\n"}], "added": [{"char_start": 633, "char_end": 679, "chars": " * note to <EMAIL> so we can mail you a copy.\n"}]}}
{"func_name": 4006, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    public function processPasswordChange(Request $request)\n    {\n        $password = $request->old;\n        $user     = User::where('id', \\Auth::user()->id)->first();\n\n\n        if (Hash::check($password, $user->password)) {\n            $user->password = bcrypt($request->new);\n            $user->save();\n            \\Auth::logout();\n\n            return redirect()->to('/')->with('message', 'Password updated! LOGIN again with updated password.');\n        } else {\n            \\Session::flash('flash_message', 'The supplied password does not matches with the one we have in records');\n\n            return redirect()->back();\n        }\n    }\n\n    public function resetPassword()\n    {\n        return view('admin.auth.reset');\n    }\n\n    public function processPasswordReset(Request $request)\n    {\n        $email = $request->email;\n        $user  = User::where('email', $email)->first();\n\n        if ($user) {\n            $string = strtolower(str_random(6));\n\n\n            $this->mailer->send('hrms.auth.reset_password', ['user' => $user, 'string' => $string], function ($message) use ($user) {\n                $message->from('no-reply@dipi-ip.com', 'Digital IP Insights');\n                $message->to($user->email, $user->name)->subject('Your new password');\n            });\n\n            \\DB::table('users')->where('email', $email)->update(['password' => bcrypt($string)]);\n\n            return redirect()->to('/')->with('message', 'Login with your new password received on your email');\n        } else {\n            return redirect()->to('/')->with('message', 'Your email is not registered');\n        }\n\n    }\n\n    public function convertToArray($values)\n    {", "func_src_after": "\n    public function processPasswordChange(Request $request)\n    {\n        $password = $request->old;\n        $user     = User::where('id', \\Auth::user()->id)->first();\n\n\n        if (Hash::check($password, $user->password)) {\n            $user->password = bcrypt($request->new);\n            $user->save();\n            \\Auth::logout();\n\n            return redirect()->to('/')->with('message', 'Password updated! LOGIN again with updated password.');\n        } else {\n            \\Session::flash('flash_message', 'The supplied password does not matches with the one we have in records');\n\n            return redirect()->back();\n        }\n    }\n\n    public function resetPassword()\n    {\n        return view('admin.auth.reset');\n    }\n\n    public function processPasswordReset(Request $request)\n    {\n        $email = $request->email;\n        $user  = User::where('email', $email)->first();\n\n        if ($user) {\n            $string = strtolower(str_random(6));\n\n\n            $this->mailer->send('hrms.auth.reset_password', ['user' => $user, 'string' => $string], function ($message) use ($user) {\n                $message->from('no-reply@dipi-ip.com', 'Digital IP Insights');\n                $message->to($user->email, $user->name)->subject('Your new password');\n            });\n\n            \\DB::table('users')->where('email', $email)->update(['password' => bcrypt($string)]);\n\n            return redirect()->to('/')->with('message', 'Login with your new password received on your email');\n        } else {\n            return redirect()->to('/')->with('message', 'Your email is not registered');\n        }\n\n    }\n\n    public function convertToArray($values)\n    {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4021, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\ndeclare(strict_types=1);\n\nnamespace Gbere\\SimpleAuth\\DependencyInjection;\n\nuse Gbere\\SimpleAuth\\Entity\\AdminUser;\nuse Gbere\\SimpleAuth\\Entity\\User;\nuse Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder;\nuse Symfony\\Component\\Config\\Definition\\ConfigurationInterface;\n\nclass Configuration implements ConfigurationInterface\n{\n    public function getConfigTreeBuilder()\n    {\n        $treeBuilder = new TreeBuilder('gbere_simple_auth');\n        $rootNode = $treeBuilder->getRootNode();\n        $rootNode\n            ->children()\n                ->arrayNode('sender')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        // TODO: check if it is a valid email\n                        ->scalarNode('email')->defaultValue('sender@email.com')->end()\n                        ->scalarNode('name')->defaultValue('Sender Name')->end()\n                    ->end()\n                ->end()\n                ->arrayNode('user')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        ->scalarNode('entity')->defaultValue(User::class)->info('If you want to extend the entity, the entity name must also be \"User\". Example: App/Entity/User')->end()\n                        ->scalarNode('encoder_algorithm')->defaultValue('auto')->end()\n                    ->end()\n                ->end()\n                ->arrayNode('admin_user')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        ->scalarNode('entity')->defaultValue(AdminUser::class)->info('If you want to extend the entity, the entity name must also be \"AdminUser\". Example: App/Entity/AdminUser')->end()\n                        ->scalarNode('encoder_algorithm')->defaultValue('auto')->end()\n                    ->end()\n                ->end()\n                ->arrayNode('style')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        ->scalarnode('logo')->defaultValue('demo')->info('Define a custom path, disable it with ~ char or set demo image')->end()\n                        ->scalarnode('accent_color')->defaultValue('0088aa')->info('Set color in RGB hexadecimal without the #')->end()\n                    ->end()\n                ->end()\n                ->integerNode('remember_me_lifetime')->defaultValue(null)->end()\n                ->booleanNode('confirm_registration')->defaultValue(true)->end()", "func_src_after": "<?php\n\ndeclare(strict_types=1);\n\nnamespace Gbere\\SimpleAuth\\DependencyInjection;\n\nuse Gbere\\SimpleAuth\\Entity\\AdminUser;\nuse Gbere\\SimpleAuth\\Entity\\User;\nuse Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder;\nuse Symfony\\Component\\Config\\Definition\\ConfigurationInterface;\n\nclass Configuration implements ConfigurationInterface\n{\n    public function getConfigTreeBuilder()\n    {\n        $treeBuilder = new TreeBuilder('gbere_simple_auth');\n        $rootNode = $treeBuilder->getRootNode();\n        $rootNode\n            ->children()\n                ->arrayNode('sender')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        // TODO: check if it is a valid email\n                        ->scalarNode('email')->defaultValue('<EMAIL>')->end()\n                        ->scalarNode('name')->defaultValue('Sender Name')->end()\n                    ->end()\n                ->end()\n                ->arrayNode('user')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        ->scalarNode('entity')->defaultValue(User::class)->info('If you want to extend the entity, the entity name must also be \"User\". Example: App/Entity/User')->end()\n                        ->scalarNode('encoder_algorithm')->defaultValue('auto')->end()\n                    ->end()\n                ->end()\n                ->arrayNode('admin_user')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        ->scalarNode('entity')->defaultValue(AdminUser::class)->info('If you want to extend the entity, the entity name must also be \"AdminUser\". Example: App/Entity/AdminUser')->end()\n                        ->scalarNode('encoder_algorithm')->defaultValue('auto')->end()\n                    ->end()\n                ->end()\n                ->arrayNode('style')\n                ->addDefaultsIfNotSet()\n                    ->children()\n                        ->scalarnode('logo')->defaultValue('demo')->info('Define a custom path, disable it with ~ char or set demo image')->end()\n                        ->scalarnode('accent_color')->defaultValue('0088aa')->info('Set color in RGB hexadecimal without the #')->end()\n                    ->end()\n                ->end()\n                ->integerNode('remember_me_lifetime')->defaultValue(null)->end()\n                ->booleanNode('confirm_registration')->defaultValue(true)->end()", "line_changes": {"deleted": [{"line_no": 24, "char_start": 712, "char_end": 799, "line": "                        ->scalarNode('email')->defaultValue('sender@email.com')->end()\n"}], "added": [{"line_no": 25, "char_start": 712, "char_end": 790, "line": "                        ->scalarNode('email')->defaultValue('<EMAIL>')->end()\n"}]}, "char_changes": {"deleted": [{"char_start": 712, "char_end": 799, "chars": "                        ->scalarNode('email')->defaultValue('sender@email.com')->end()\n"}], "added": [{"char_start": 712, "char_end": 790, "chars": "                        ->scalarNode('email')->defaultValue('<EMAIL>')->end()\n"}]}}
{"func_name": 4030, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\ndeclare(strict_types = 1);\n/**\n * /tests/Functional/Security/Provider/SecurityUserFactoryTest.php\n *\n * @author TLe, Tarmo Leppänen <tarmo.leppanen@pinja.com>\n */\n\nnamespace App\\Tests\\Functional\\Security\\Provider;\n\nuse App\\Entity\\User;\nuse App\\Repository\\UserRepository;\nuse App\\Security\\Provider\\SecurityUserFactory;\nuse App\\Security\\SecurityUser;\nuse App\\Utils\\Tests\\StringableArrayObject;\nuse Generator;\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\KernelTestCase;\nuse Symfony\\Component\\Security\\Core\\Exception\\UnsupportedUserException;\nuse Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException;\nuse Symfony\\Component\\Security\\Core\\User\\InMemoryUser;\nuse Throwable;\n\n/**\n * Class SecurityUserFactoryTest\n *\n * @package App\\Tests\\Integration\\Security\n * @author TLe, Tarmo Leppänen <tarmo.leppanen@pinja.com>\n */\nclass SecurityUserFactoryTest extends KernelTestCase\n{\n    /**\n     * @throws Throwable\n     */\n    public function testThatLoadUserByIdentifierThrowsAnExceptionWithInvalidUsername(): void\n    {\n        $this->expectException(UserNotFoundException::class);\n\n        $this->getSecurityUserFactory()->loadUserByIdentifier('foobar');\n    }\n\n    /**\n     * @dataProvider dataProviderTestThatLoadUserByIdentifierReturnsExpectedUserInstance\n     *\n     * @phpstan-param StringableArrayObject<array<int, string>> $roles\n     * @psalm-param StringableArrayObject $roles\n     *\n     * @throws Throwable\n     *\n     * @testdox Test that `loadUserByIdentifier` method with `$username` returns `SecurityUser` with `$roles` roles\n     */", "func_src_after": "<?php\ndeclare(strict_types = 1);\n/**\n * /tests/Functional/Security/Provider/SecurityUserFactoryTest.php\n *\n * @author TLe, Tarmo Leppänen <<EMAIL>>\n */\n\nnamespace App\\Tests\\Functional\\Security\\Provider;\n\nuse App\\Entity\\User;\nuse App\\Repository\\UserRepository;\nuse App\\Security\\Provider\\SecurityUserFactory;\nuse App\\Security\\SecurityUser;\nuse App\\Utils\\Tests\\StringableArrayObject;\nuse Generator;\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\KernelTestCase;\nuse Symfony\\Component\\Security\\Core\\Exception\\UnsupportedUserException;\nuse Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException;\nuse Symfony\\Component\\Security\\Core\\User\\InMemoryUser;\nuse Throwable;\n\n/**\n * Class SecurityUserFactoryTest\n *\n * @package App\\Tests\\Integration\\Security\n * @author TLe, Tarmo Leppänen <<EMAIL>>\n */\nclass SecurityUserFactoryTest extends KernelTestCase\n{\n    /**\n     * @throws Throwable\n     */\n    public function testThatLoadUserByIdentifierThrowsAnExceptionWithInvalidUsername(): void\n    {\n        $this->expectException(UserNotFoundException::class);\n\n        $this->getSecurityUserFactory()->loadUserByIdentifier('foobar');\n    }\n\n    /**\n     * @dataProvider dataProviderTestThatLoadUserByIdentifierReturnsExpectedUserInstance\n     *\n     * @phpstan-param StringableArrayObject<array<int, string>> $roles\n     * @psalm-param StringableArrayObject $roles\n     *\n     * @throws Throwable\n     *\n     * @testdox Test that `loadUserByIdentifier` method with `$username` returns `SecurityUser` with `$roles` roles\n     */", "line_changes": {"deleted": [{"line_no": 6, "char_start": 107, "char_end": 165, "line": " * @author TLe, Tarmo Leppänen <tarmo.leppanen@pinja.com>\n"}, {"line_no": 28, "char_start": 747, "char_end": 805, "line": " * @author TLe, Tarmo Leppänen <tarmo.leppanen@pinja.com>\n"}], "added": [{"line_no": 7, "char_start": 107, "char_end": 148, "line": " * @author TLe, Tarmo Leppänen <<EMAIL>>\n"}, {"line_no": 29, "char_start": 747, "char_end": 788, "line": " * @author TLe, Tarmo Leppänen <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 107, "char_end": 165, "chars": " * @author TLe, Tarmo Leppänen <tarmo.leppanen@pinja.com>\n"}, {"char_start": 747, "char_end": 805, "chars": " * @author TLe, Tarmo Leppänen <tarmo.leppanen@pinja.com>\n"}], "added": [{"char_start": 107, "char_end": 148, "chars": " * @author TLe, Tarmo Leppänen <<EMAIL>>\n"}, {"char_start": 747, "char_end": 788, "chars": " * @author TLe, Tarmo Leppänen <<EMAIL>>\n"}]}}
{"func_name": 4039, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nreturn [\n    'LoggedInSuccessfully' => 'Logged In Successfully',\n    'Hello' => 'Hello',\n    'HomePage' => 'Home Page',\n    'Company' => 'Company',\n    'ListOfCompanies' => 'List of Companies',\n    'CompanyName' => 'Company Name',\n    'Description' => 'Description',\n    'ExCompanyName' => 'Ex: Rikai...',\n    'ExDescription' => 'Ex: Super Saya...',\n    'DateCreate' => 'Create Date',\n    'UpdateDate' => 'Update Date',\n    'Creator' => 'Create By',\n    'TheUpdatedPerson' => 'Update by',\n    'Search' => 'Search',\n    'Refresh' => 'Refresh',\n    'Show' => 'Show',\n    'of' => 'of',\n    'result' => 'results',\n    'Choose' => 'Choose',\n    'No.' => 'No.',\n    'Name' => 'Name',\n    'Function' => 'Function',\n    'CreateANewCompany' => 'Create new',\n    'CreateNew' => 'Create New',\n    'AddSuccessfulCompanies' => 'Add successful company!',\n    'CompanyUpdate' => 'Company Update',\n    'Update' => 'Update',\n    'DeleteCompany' => 'Delete Company',\n    'DoYouWantToDelete' => 'Do you want to delete',\n    'Closed' => 'Closed',\n    'Delete' => 'Delete',\n    'DeletedSuccessfully' => 'Delete Successfully',\n    'CompanyInformation' => 'Company Infomation',\n    'Details' => 'Details',\n    'RepairCompany' => 'Repair Compnay',\n    'Notification' => 'Notification',\n    'SuccessfulCompanyUpdate' => 'Successful Company Update!',\n    'NoSearchResultsPleaseChooseAgain' => 'No search results, please choose again',\n    'DoYouWantToDeleteTheseCompanies' => 'Do you want to delete these companies',\n    'InformationCorrection' => 'Infomation Correction',\n    'previous' => 'Previous',\n    'next' => 'Next',\n    'Login' => 'Login',\n    'TextBelowLogin' => 'Login with your email and password',\n    'EmailAddress' => 'Email address',\n    'Password' => 'Password',\n    'RememberMe' => 'Remember me',", "func_src_after": "<?php\n\nreturn [\n    'LoggedInSuccessfully' => 'Logged In Successfully',\n    'Hello' => 'Hello',\n    'HomePage' => 'Home Page',\n    'Company' => 'Company',\n    'ListOfCompanies' => 'List of Companies',\n    'CompanyName' => 'Company Name',\n    'Description' => 'Description',\n    'ExCompanyName' => 'Ex: Rikai...',\n    'ExDescription' => 'Ex: Super Saya...',\n    'DateCreate' => 'Create Date',\n    'UpdateDate' => 'Update Date',\n    'Creator' => 'Create By',\n    'TheUpdatedPerson' => 'Update by',\n    'Search' => 'Search',\n    'Refresh' => 'Refresh',\n    'Show' => 'Show',\n    'of' => 'of',\n    'result' => 'results',\n    'Choose' => 'Choose',\n    'No.' => 'No.',\n    'Name' => 'Name',\n    'Function' => 'Function',\n    'CreateANewCompany' => 'Create new',\n    'CreateNew' => 'Create New',\n    'AddSuccessfulCompanies' => 'Add successful company!',\n    'CompanyUpdate' => 'Company Update',\n    'Update' => 'Update',\n    'DeleteCompany' => 'Delete Company',\n    'DoYouWantToDelete' => 'Do you want to delete',\n    'Closed' => 'Closed',\n    'Delete' => 'Delete',\n    'DeletedSuccessfully' => 'Delete Successfully',\n    'CompanyInformation' => 'Company Infomation',\n    'Details' => 'Details',\n    'RepairCompany' => 'Repair Compnay',\n    'Notification' => 'Notification',\n    'SuccessfulCompanyUpdate' => 'Successful Company Update!',\n    'NoSearchResultsPleaseChooseAgain' => 'No search results, please choose again',\n    'DoYouWantToDeleteTheseCompanies' => 'Do you want to delete these companies',\n    'InformationCorrection' => 'Infomation Correction',\n    'previous' => 'Previous',\n    'next' => 'Next',\n    'Login' => 'Login',\n    'TextBelowLogin' => 'Login with your email and password',\n    'EmailAddress' => 'Email address',\n    'Password' => 'Password',\n    'RememberMe' => 'Remember me',", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4044, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                                        <label class=\"form-group\">Your Name: <br><input type=\"text\" value=\"{{ old(\"name\") }}\" name=\"name\"\n                                                                                        class=\"form-control\">\n                                            @error(\"name\")\n                                            <div class=\"error text-danger\">{{ $message }}</div>@enderror\n                                        </label>\n                                        <label class=\"form-group\">\n                                            Your email: <br>\n                                            <input type=\"text\" name=\"email\" value=\"{{ old(\"email\") }}\" class=\"form-control\"\n                                                   placeholder=\"example@email.com\">\n                                            @error(\"email\")\n                                            <div class=\"error text-danger\">{{ $message }}</div>@enderror\n                                        </label>\n                                        <label class=\"form-group\"> Password: <br><input type=\"password\" name=\"password\"\n                                                                                        class=\"form-control\">\n                                            @error(\"password\")\n                                            <div class=\"error text-danger\">{{ $message }}</div>@enderror\n                                        </label>\n\n                                        <label class=\"form-group\"> Confirm Password : <br><input type=\"password\"\n                                                                                                 name=\"password_confirmation\"\n                                                                                                 class=\"form-control\"></label>\n\n\n\n                                        <div class=\"checkbox-container\">\n                                            <input type=\"checkbox\" name=\"license_agree\" />\n                                            <span class=\"checkmark\"></span>\n                                            <p>I agree to the Terms of Service and Privacy Policy</p>\n                                            @error(\"license_agree\")\n                                            <label><div class=\"error text-danger\">{{ $message }}</div></label>@enderror\n                                        </div>\n\n                                        <div class=\"sign-up-node-submit\">\n                                            <input type=\"submit\" value=\"Continue\" class=\"btn btn-primary\">\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n@endsection\n", "func_src_after": "                                        <label class=\"form-group\">Your Name: <br><input type=\"text\" value=\"{{ old(\"name\") }}\" name=\"name\"\n                                                                                        class=\"form-control\">\n                                            @error(\"name\")\n                                            <div class=\"error text-danger\">{{ $message }}</div>@enderror\n                                        </label>\n                                        <label class=\"form-group\">\n                                            Your email: <br>\n                                            <input type=\"text\" name=\"email\" value=\"{{ old(\"email\") }}\" class=\"form-control\"\n                                                   placeholder=\"<EMAIL>\">\n                                            @error(\"email\")\n                                            <div class=\"error text-danger\">{{ $message }}</div>@enderror\n                                        </label>\n                                        <label class=\"form-group\"> Password: <br><input type=\"password\" name=\"password\"\n                                                                                        class=\"form-control\">\n                                            @error(\"password\")\n                                            <div class=\"error text-danger\">{{ $message }}</div>@enderror\n                                        </label>\n\n                                        <label class=\"form-group\"> Confirm Password : <br><input type=\"password\"\n                                                                                                 name=\"password_confirmation\"\n                                                                                                 class=\"form-control\"></label>\n\n\n\n                                        <div class=\"checkbox-container\">\n                                            <input type=\"checkbox\" name=\"license_agree\" />\n                                            <span class=\"checkmark\"></span>\n                                            <p>I agree to the Terms of Service and Privacy Policy</p>\n                                            @error(\"license_agree\")\n                                            <label><div class=\"error text-danger\">{{ $message }}</div></label>@enderror\n                                        </div>\n\n                                        <div class=\"sign-up-node-submit\">\n                                            <input type=\"submit\" value=\"Continue\" class=\"btn btn-primary\">\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n@endsection\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 713, "char_end": 797, "line": "                                                   placeholder=\"example@email.com\">\n"}], "added": [{"line_no": 10, "char_start": 713, "char_end": 787, "line": "                                                   placeholder=\"<EMAIL>\">\n"}]}, "char_changes": {"deleted": [{"char_start": 713, "char_end": 797, "chars": "                                                   placeholder=\"example@email.com\">\n"}], "added": [{"char_start": 713, "char_end": 787, "chars": "                                                   placeholder=\"<EMAIL>\">\n"}]}}
{"func_name": 4051, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                    'pwd' => 'require',\n                    'tel' => 'require',\n                    'email'=>'require',\n                    'company'=>'require'\n                    ]);\n        \n        if($type==1){\n            $usermsg='用户名已存在';\n            $telmsg='手机号已存在';\n            $emailmsg='邮箱已存在';\n        }else{\n           $usermsg='Username already exists.';\n            $telmsg='Phone number already exists.';\n            $emailmsg='E-mail already exists.'; \n        }\n      \n        if($result){\n              //检测用户名重复\n           $where=[\n                 \n               [\n                   'where'=>['user_name'=>$data['user_name']],\n                   'msg'=>$usermsg\n               ],\n               [\n                   'where'=>['tel'=>$data['tel']],\n                   'msg'=>$telmsg\n               ],\n               [\n                   'where'=>['email'=>$data['email']],\n                   'msg'=>$emailmsg\n               ]\n         \n           ];\n           \n           if(is_array($where)){\n               foreach ($where as $key => $value) {\n                   $rr= $this->IsOnly($value['where']);\n                   if(!$rr){\n                       return false;\n                   }\n               }\n              }\n             \n        }\n        return $result;\n    }\n    public function read($filename,$encode='utf-8'){\n\t\t$objReader = \\PHPExcel_IOFactory::createReader('Excel5');\n\t\t$objReader->setReadDataOnly(true);", "func_src_after": "                    'pwd' => 'require',\n                    'tel' => 'require',\n                    'email'=>'require',\n                    'company'=>'require'\n                    ]);\n        \n        if($type==1){\n            $usermsg='用户名已存在';\n            $telmsg='手机号已存在';\n            $emailmsg='邮箱已存在';\n        }else{\n           $usermsg='Username already exists.';\n            $telmsg='Phone number already exists.';\n            $emailmsg='E-mail already exists.'; \n        }\n      \n        if($result){\n              //检测用户名重复\n           $where=[\n                 \n               [\n                   'where'=>['user_name'=>$data['user_name']],\n                   'msg'=>$usermsg\n               ],\n               [\n                   'where'=>['tel'=>$data['tel']],\n                   'msg'=>$telmsg\n               ],\n               [\n                   'where'=>['email'=>$data['email']],\n                   'msg'=>$emailmsg\n               ]\n         \n           ];\n           \n           if(is_array($where)){\n               foreach ($where as $key => $value) {\n                   $rr= $this->IsOnly($value['where']);\n                   if(!$rr){\n                       return false;\n                   }\n               }\n              }\n             \n        }\n        return $result;\n    }\n    public function read($filename,$encode='utf-8'){\n\t\t$objReader = \\PHPExcel_IOFactory::createReader('Excel5');\n\t\t$objReader->setReadDataOnly(true);", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4055, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "             * 返回当前司机需要处理的请求，同时处理包括拒绝和接受\n             * 状态:\n             *      已完成\n             *      魏星\n             * $_POST:\n             *  [token]\n             * return:\n             * {\n             *      status,\n             *      content:[{\n             *                  merchant_id,\n             *                  merchant_name,\n             *                  merchant_mobile,\n             *                  cate_id,\n             *                  cate_name,\n             *                  ispoint,\n             *                  demand_id\n             *                  }]\n             * }\n             */\n            array('transportDemand/getAllTransportDemand','User/getAllTransportDemand',array('method'=>'POST')),\n\n            /**\n             * 添加姓名内容地址\n             * $_POST:\n             *   [name,content,address]\n             * return:\n             * {\n             *       status,\n             *       content\n             * }\n             */\n            array('all/addContacts','User/addContacts',array('method'=>'POST')),\n        ),\n\t  \n\n     // 默认数据库配置,本地\n    \n    'DB_TYPE'       =>  'mysql',\n    'DB_HOST'       =>  'localhost',\n    'DB_NAME'       =>  'banar',\n    'DB_USER'       =>  'root',\n    'DB_PWD'        =>  'root',\n    'DB_PORT'       =>  '3306',\n    'DB_PREFIX'     =>  'lb_',    // 数据库表前缀\n);\n", "func_src_after": "             * 返回当前司机需要处理的请求，同时处理包括拒绝和接受\n             * 状态:\n             *      已完成\n             *      魏星\n             * $_POST:\n             *  [token]\n             * return:\n             * {\n             *      status,\n             *      content:[{\n             *                  merchant_id,\n             *                  merchant_name,\n             *                  merchant_mobile,\n             *                  cate_id,\n             *                  cate_name,\n             *                  ispoint,\n             *                  demand_id\n             *                  }]\n             * }\n             */\n            array('transportDemand/getAllTransportDemand','User/getAllTransportDemand',array('method'=>'POST')),\n\n            /**\n             * 添加姓名内容地址\n             * $_POST:\n             *   [name,content,address]\n             * return:\n             * {\n             *       status,\n             *       content\n             * }\n             */\n            array('all/addContacts','User/addContacts',array('method'=>'POST')),\n        ),\n\t  \n\n     // 默认数据库配置,本地\n    \n    'DB_TYPE'       =>  'mysql',\n    'DB_HOST'       =>  'localhost',\n    'DB_NAME'       =>  'banar',\n    'DB_USER'       =>  'root',\n    'DB_PWD'        =>  'root',\n    'DB_PORT'       =>  '3306',\n    'DB_PREFIX'     =>  'lb_',    // 数据库表前缀\n);\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4073, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/**\n * Get all rates depending on base price\n *\n * LICENSE: This source file is subject to the Creative Commons License.\n * It is available through the world-wide-web at this URL:\n * http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US\n *\n * If you want to add improvements, please create a fork in our GitHub:\n * https://github.com/myparcelnl/magento\n *\n * @author      Reindert Vetter <info@myparcel.nl>\n * @copyright   2010-2019 MyParcel\n * @license     http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US  CC BY-NC-ND 3.0 NL\n * @link        https://github.com/myparcelnl/magento\n * @since       File available since Release 2.0.0\n */\n\nnamespace MyParcelNL\\Magento\\Model\\Rate;\n\nuse Countable;\nuse Magento\\Checkout\\Model\\Session;\nuse Magento\\Quote\\Model\\Quote\\Address\\RateResult\\Method;\nuse MyParcelNL\\Magento\\Helper\\Checkout;\nuse MyParcelNL\\Magento\\Helper\\Data;\nuse MyParcelNL\\Magento\\Model\\Sales\\Repository\\PackageRepository;\nuse MyParcelNL\\Sdk\\src\\Model\\Consignment\\AbstractConsignment;\n\nclass Result extends \\Magento\\Shipping\\Model\\Rate\\Result\n{\n    /**\n     * @var Checkout\n     */\n    private $myParcelHelper;\n\n    /**\n     * @var PackageRepository\n     */\n    private $package;\n\n    /**\n     * @var array\n     */\n    private $parentMethods = [];\n\n    /**\n     * @var Session\n     */\n    private $session;\n", "func_src_after": "<?php\n/**\n * Get all rates depending on base price\n *\n * LICENSE: This source file is subject to the Creative Commons License.\n * It is available through the world-wide-web at this URL:\n * http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US\n *\n * If you want to add improvements, please create a fork in our GitHub:\n * https://github.com/myparcelnl/magento\n *\n * @author      Reindert Vetter <<EMAIL>>\n * @copyright   2010-2019 MyParcel\n * @license     http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US  CC BY-NC-ND 3.0 NL\n * @link        https://github.com/myparcelnl/magento\n * @since       File available since Release 2.0.0\n */\n\nnamespace MyParcelNL\\Magento\\Model\\Rate;\n\nuse Countable;\nuse Magento\\Checkout\\Model\\Session;\nuse Magento\\Quote\\Model\\Quote\\Address\\RateResult\\Method;\nuse MyParcelNL\\Magento\\Helper\\Checkout;\nuse MyParcelNL\\Magento\\Helper\\Data;\nuse MyParcelNL\\Magento\\Model\\Sales\\Repository\\PackageRepository;\nuse MyParcelNL\\Sdk\\src\\Model\\Consignment\\AbstractConsignment;\n\nclass Result extends \\Magento\\Shipping\\Model\\Rate\\Result\n{\n    /**\n     * @var Checkout\n     */\n    private $myParcelHelper;\n\n    /**\n     * @var PackageRepository\n     */\n    private $package;\n\n    /**\n     * @var array\n     */\n    private $parentMethods = [];\n\n    /**\n     * @var Session\n     */\n    private $session;\n", "line_changes": {"deleted": [{"line_no": 12, "char_start": 371, "char_end": 422, "line": " * @author      Reindert Vetter <info@myparcel.nl>\n"}], "added": [{"line_no": 13, "char_start": 371, "char_end": 413, "line": " * @author      Reindert Vetter <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 371, "char_end": 422, "chars": " * @author      Reindert Vetter <info@myparcel.nl>\n"}], "added": [{"char_start": 371, "char_end": 413, "chars": " * @author      Reindert Vetter <<EMAIL>>\n"}]}}
{"func_name": 4079, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/**\n * ZF3 book examples\n *\n * @author     Ralf Eggert <ralf@travello.de>\n * @link       https://github.com/zf3buch/examples\n * @license    http://opensource.org/licenses/MIT The MIT License (MIT)\n */\n\nuse Zend\\Db\\Adapter\\Adapter;\nuse Zend\\Db\\Sql\\Sql;\nuse Zend\\Debug\\Debug;\n\n// define application root for better file path definitions\ndefine('APPLICATION_ROOT', realpath(__DIR__ . '/../..'));\n\n// setup autoloading from composer\nrequire_once APPLICATION_ROOT . '/vendor/autoload.php';\n\n// configure database\n$config = [\n    'driver' => 'pdo',\n    'dsn'    => 'mysql:dbname=examples;host=localhost;charset=utf8',\n    'user'   => 'example-user',\n    'pass'   => 'geheim',\n];\n\n// instantiate adapter\n$adapter = new Adapter($config);\n\n// instantiate sql object\n$sql = new Sql($adapter);\n\n// build insert\n$insert = $sql->insert();\n$insert->into('pizza');\n$insert->columns(['name']);\n$insert->values(['name' => 'Pizza Wundertüte']);\n\n// build sql string\n$sqlString = $sql->buildSqlString($insert);\n\n// output sql string\nDebug::dump($sqlString, 'SQL String ');\n\n// prepare and execute query\n$result = $adapter->query($sqlString)->execute();\n\n// get new id\n$id = $result->getGeneratedValue();", "func_src_after": "<?php\n/**\n * ZF3 book examples\n *\n * @author     Ralf Eggert <<EMAIL>>\n * @link       https://github.com/zf3buch/examples\n * @license    http://opensource.org/licenses/MIT The MIT License (MIT)\n */\n\nuse Zend\\Db\\Adapter\\Adapter;\nuse Zend\\Db\\Sql\\Sql;\nuse Zend\\Debug\\Debug;\n\n// define application root for better file path definitions\ndefine('APPLICATION_ROOT', realpath(__DIR__ . '/../..'));\n\n// setup autoloading from composer\nrequire_once APPLICATION_ROOT . '/vendor/autoload.php';\n\n// configure database\n$config = [\n    'driver' => 'pdo',\n    'dsn'    => 'mysql:dbname=examples;host=localhost;charset=utf8',\n    'user'   => 'example-user',\n    'pass'   => 'geheim',\n];\n\n// instantiate adapter\n$adapter = new Adapter($config);\n\n// instantiate sql object\n$sql = new Sql($adapter);\n\n// build insert\n$insert = $sql->insert();\n$insert->into('pizza');\n$insert->columns(['name']);\n$insert->values(['name' => 'Pizza Wundertüte']);\n\n// build sql string\n$sqlString = $sql->buildSqlString($insert);\n\n// output sql string\nDebug::dump($sqlString, 'SQL String ');\n\n// prepare and execute query\n$result = $adapter->query($sqlString)->execute();\n\n// get new id\n$id = $result->getGeneratedValue();", "line_changes": {"deleted": [{"line_no": 5, "char_start": 34, "char_end": 80, "line": " * @author     Ralf Eggert <ralf@travello.de>\n"}], "added": [{"line_no": 6, "char_start": 34, "char_end": 71, "line": " * @author     Ralf Eggert <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 34, "char_end": 80, "chars": " * @author     Ralf Eggert <ralf@travello.de>\n"}], "added": [{"char_start": 34, "char_end": 71, "chars": " * @author     Ralf Eggert <<EMAIL>>\n"}]}}
{"func_name": 4082, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php \nnamespace App\\Controllers\\Back;\n\nuse CodeIgniter\\Controller;\nuse App\\Controllers\\BaseController;\nuse App\\Models\\Back\\UserModel;\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\SMTP;\nuse PHPMailer\\PHPMailer\\Exception;\n\nclass Reset extends BaseController\n{\n\n    public function __construct()\n    {\n        helper('text');\n        helper('form');\n        $this->user = new UserModel();\n    }\n\n    public function send()\n    {\n        $session        = \\Config\\Services::session();\n        $email          = $this->request->getVar('email');\n        $check_email    = $this->user->getUserByEmail($email);\n\n        if($check_email){\n            $token = sha1(random_string('numeric',10));\n            $data = [\n                'token' => $token\n            ];\n            $this->user->updateUserByEmail($email, $data);\n\n            require ROOTPATH. 'app/ThirdParty/vendor/autoload.php';\n            $mail = new PHPMailer(true);\n            try{\n                $link               = base_url('/admin/reset/password/'.$token);\n                $mail->SMTPDebug    = SMTP::DEBUG_SERVER;\n                $mail->isSMTP();\n                $mail->Host         = 'mail.anakesia.com';\n                $mail->SMTPAuth     = true;\n                $mail->Username     = '99coffee@anakesia.com';\n                $mail->Password     = 'NA2021nikah';\n                $mail->SMTPSecure   = 'ssl';\n                $mail->Port         = 465;\n\n                $mail->setFrom('99coffee@anakesia.com', '99s Coffee');\n                $mail->addAddress($email);\n                $mail->addReplyTo('99coffee@anakesia.com', '99s Coffee');\n", "func_src_after": "<?php \nnamespace App\\Controllers\\Back;\n\nuse CodeIgniter\\Controller;\nuse App\\Controllers\\BaseController;\nuse App\\Models\\Back\\UserModel;\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\SMTP;\nuse PHPMailer\\PHPMailer\\Exception;\n\nclass Reset extends BaseController\n{\n\n    public function __construct()\n    {\n        helper('text');\n        helper('form');\n        $this->user = new UserModel();\n    }\n\n    public function send()\n    {\n        $session        = \\Config\\Services::session();\n        $email          = $this->request->getVar('email');\n        $check_email    = $this->user->getUserByEmail($email);\n\n        if($check_email){\n            $token = sha1(random_string('numeric',10));\n            $data = [\n                'token' => $token\n            ];\n            $this->user->updateUserByEmail($email, $data);\n\n            require ROOTPATH. 'app/ThirdParty/vendor/autoload.php';\n            $mail = new PHPMailer(true);\n            try{\n                $link               = base_url('/admin/reset/password/'.$token);\n                $mail->SMTPDebug    = SMTP::DEBUG_SERVER;\n                $mail->isSMTP();\n                $mail->Host         = '<EMAIL>';\n                $mail->SMTPAuth     = true;\n                $mail->Username     = '<EMAIL>';\n                $mail->Password     = 'NA2021nikah';\n                $mail->SMTPSecure   = 'ssl';\n                $mail->Port         = 465;\n\n                $mail->setFrom('<EMAIL>', '99s Coffee');\n                $mail->addAddress($email);\n                $mail->addReplyTo('<EMAIL>', '99s Coffee');\n", "line_changes": {"deleted": [{"line_no": 40, "char_start": 1130, "char_end": 1189, "line": "                $mail->Host         = 'mail.anakesia.com';\n"}, {"line_no": 43, "char_start": 1223, "char_end": 1286, "line": "                $mail->Username     = '99coffee@anakesia.com';\n"}, {"line_no": 49, "char_start": 1414, "char_end": 1485, "line": "                $mail->setFrom('99coffee@anakesia.com', '99s Coffee');\n"}, {"line_no": 52, "char_start": 1514, "char_end": 1588, "line": "                $mail->addReplyTo('99coffee@anakesia.com', '99s Coffee');\n"}], "added": [{"line_no": 41, "char_start": 1130, "char_end": 1179, "line": "                $mail->Host         = '<EMAIL>';\n"}, {"line_no": 44, "char_start": 1223, "char_end": 1272, "line": "                $mail->Username     = '<EMAIL>';\n"}, {"line_no": 50, "char_start": 1414, "char_end": 1471, "line": "                $mail->setFrom('<EMAIL>', '99s Coffee');\n"}, {"line_no": 53, "char_start": 1514, "char_end": 1574, "line": "                $mail->addReplyTo('<EMAIL>', '99s Coffee');\n"}]}, "char_changes": {"deleted": [{"char_start": 1130, "char_end": 1189, "chars": "                $mail->Host         = 'mail.anakesia.com';\n"}, {"char_start": 1223, "char_end": 1286, "chars": "                $mail->Username     = '99coffee@anakesia.com';\n"}, {"char_start": 1414, "char_end": 1485, "chars": "                $mail->setFrom('99coffee@anakesia.com', '99s Coffee');\n"}, {"char_start": 1514, "char_end": 1588, "chars": "                $mail->addReplyTo('99coffee@anakesia.com', '99s Coffee');\n"}], "added": [{"char_start": 1130, "char_end": 1179, "chars": "                $mail->Host         = '<EMAIL>';\n"}, {"char_start": 1223, "char_end": 1272, "chars": "                $mail->Username     = '<EMAIL>';\n"}, {"char_start": 1414, "char_end": 1471, "chars": "                $mail->setFrom('<EMAIL>', '99s Coffee');\n"}, {"char_start": 1514, "char_end": 1574, "chars": "                $mail->addReplyTo('<EMAIL>', '99s Coffee');\n"}]}}
{"func_name": 4102, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php declare(strict_types = 1);\n\n/*\n * This file is part of the Bukashk0zzzTimestampTypeBundle\n *\n * (c) Denis Golubovskiy <bukashk0zzz@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Bukashk0zzz\\TimestampTypeBundle\\Form\\Type;\n\nuse Bukashk0zzz\\TimestampTypeBundle\\Form\\DataTransformer\\TimestampToDateTimeTransformer;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\IntegerType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\n\n/**\n * Class TimestampType\n */\nclass TimestampType extends AbstractType\n{\n    /**\n     * @param FormBuilderInterface $builder\n     * @param mixed[]              $options\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options): void\n    {\n        $builder->addModelTransformer(new TimestampToDateTimeTransformer());\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getParent()\n    {\n        return IntegerType::class;\n    }\n\n    /**\n     * @return string\n     */\n    public function getBlockPrefix(): string\n    {\n        return 'integer';\n    }\n}\n", "func_src_after": "<?php declare(strict_types = 1);\n\n/*\n * This file is part of the Bukashk0zzzTimestampTypeBundle\n *\n * (c) Denis Golubovskiy <<EMAIL>>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Bukashk0zzz\\TimestampTypeBundle\\Form\\Type;\n\nuse Bukashk0zzz\\TimestampTypeBundle\\Form\\DataTransformer\\TimestampToDateTimeTransformer;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\IntegerType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\n\n/**\n * Class TimestampType\n */\nclass TimestampType extends AbstractType\n{\n    /**\n     * @param FormBuilderInterface $builder\n     * @param mixed[]              $options\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options): void\n    {\n        $builder->addModelTransformer(new TimestampToDateTimeTransformer());\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getParent()\n    {\n        return IntegerType::class;\n    }\n\n    /**\n     * @return string\n     */\n    public function getBlockPrefix(): string\n    {\n        return 'integer';\n    }\n}\n", "line_changes": {"deleted": [{"line_no": 6, "char_start": 99, "char_end": 148, "line": " * (c) Denis Golubovskiy <bukashk0zzz@gmail.com>\n"}], "added": [{"line_no": 7, "char_start": 99, "char_end": 134, "line": " * (c) Denis Golubovskiy <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 99, "char_end": 148, "chars": " * (c) Denis Golubovskiy <bukashk0zzz@gmail.com>\n"}], "added": [{"char_start": 99, "char_end": 134, "chars": " * (c) Denis Golubovskiy <<EMAIL>>\n"}]}}
{"func_name": 4107, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n/**\n * @link https://github.com/yiimaker/yii2-translatable\n * @copyright Copyright (c) 2017-2018 Yii Maker\n * @license BSD 3-Clause License\n */\n\nnamespace ymaker\\translatable\\tests\\entities;\n\nuse yii\\db\\ActiveRecord;\nuse ymaker\\translatable\\TranslatableBehavior;\n\n/**\n * Product entity.\n *\n * @property int $id\n * @property string $title\n * @property string $description\n *\n * @method ProductTranslation translateTo($language = null)\n * @method ProductTranslation getTranslation($language = null)\n * @method bool hasTranslation($language = null)\n *\n * @author Vladimir Kuprienko <vldmr.kuprienko@gmail.com>\n * @since 1.0\n */\nclass Product extends ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'product';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function behaviors()\n    {\n        return [\n            'translatable' => [\n                'class' => TranslatableBehavior::className(),\n                'translationAttributeList' => [\n                    'title',\n                    'description',\n                ],\n            ],\n        ];", "func_src_after": "<?php\n/**\n * @link https://github.com/yiimaker/yii2-translatable\n * @copyright Copyright (c) 2017-2018 Yii Maker\n * @license BSD 3-Clause License\n */\n\nnamespace ymaker\\translatable\\tests\\entities;\n\nuse yii\\db\\ActiveRecord;\nuse ymaker\\translatable\\TranslatableBehavior;\n\n/**\n * Product entity.\n *\n * @property int $id\n * @property string $title\n * @property string $description\n *\n * @method ProductTranslation translateTo($language = null)\n * @method ProductTranslation getTranslation($language = null)\n * @method bool hasTranslation($language = null)\n *\n * @author Vladimir Kuprienko <<EMAIL>>\n * @since 1.0\n */\nclass Product extends ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'product';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function behaviors()\n    {\n        return [\n            'translatable' => [\n                'class' => TranslatableBehavior::className(),\n                'translationAttributeList' => [\n                    'title',\n                    'description',\n                ],\n            ],\n        ];", "line_changes": {"deleted": [{"line_no": 24, "char_start": 555, "char_end": 613, "line": " * @author Vladimir Kuprienko <vldmr.kuprienko@gmail.com>\n"}], "added": [{"line_no": 25, "char_start": 555, "char_end": 595, "line": " * @author Vladimir Kuprienko <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 555, "char_end": 613, "chars": " * @author Vladimir Kuprienko <vldmr.kuprienko@gmail.com>\n"}], "added": [{"char_start": 555, "char_end": 595, "chars": " * @author Vladimir Kuprienko <<EMAIL>>\n"}]}}
{"func_name": 4129, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "     * @apiGroup       member\r\n     * @apiPermission 管理员\r\n     * @apiParam  {int}          mobile       手机\r\n     * @apiParamExample {json} 请求参数\r\n     *   GET /v3/api-member/get-my-venues\r\n     *   {\r\n     *      \"mobile\" :'1369682389'           //手机\r\n     *       \"companyId\" : 1                //我爱运动\r\n     *   }\r\n     * @apiDescription   我拥有的场馆\r\n     * <br/>\r\n     * <span><strong>作    者：</strong></span>焦冰洋<br/>\r\n     * <span><strong>邮    箱：</strong></span>jiaobingyang@itsprts.club\r\n     * <span><strong>创建时间：</strong></span>2017/6/27\r\n     * @apiSampleRequest  http://qa.aixingfu.net/v3/api-member/get-my-venues\r\n     * @apiSuccess (返回值) {string} data\r\n     * @apiSuccessExample {json}返回值详情(成功时)\r\n     *{\r\n     *  \"code\": 1,\r\n     *  \"status\": \"success\",\r\n     *  \"message\": \"成功\",\r\n     *  \"data\": [\r\n     *     {\r\n     *        \"id\": \"2\",\r\n     *        \"name\": \"大上海瑜伽健身馆\"\r\n     *     }\r\n     *  ]\r\n     *}\r\n     * @apiSuccessExample {json}返回值详情(失败时)\r\n     *{\r\n     *  \"code\": 0,\r\n     *  \"status\": \"error\",\r\n     *  \"message\": \"没有数据\"\r\n     *}\r\n     */\r\n    public function actionGetMyVenues()\r\n    {\r\n        $mobile    = \\Yii::$app->request->get('mobile');\r\n        $companyId = \\Yii::$app->request->get('companyId');\r\n        $model = new Member();\r\n        $data  = $model->getMyVenues($mobile, $companyId);\r\n        if($data){\r\n            return ['code' => 1, 'status' => 'success', 'message' => \"成功\", 'data' => $data];\r\n        }else{\r\n            return ['code' => 0, 'status' => 'error', 'message' => \"没有数据\", 'data' => []];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @api {get} /v3/api-member/get-other-venues   我不拥有的场馆\r", "func_src_after": "     * @apiGroup       member\r\n     * @apiPermission 管理员\r\n     * @apiParam  {int}          mobile       手机\r\n     * @apiParamExample {json} 请求参数\r\n     *   GET /v3/api-member/get-my-venues\r\n     *   {\r\n     *      \"mobile\" :'1369682389'           //手机\r\n     *       \"companyId\" : 1                //我爱运动\r\n     *   }\r\n     * @apiDescription   我拥有的场馆\r\n     * <br/>\r\n     * <span><strong>作    者：</strong></span>焦冰洋<br/>\r\n     * <span><strong>邮    箱：</strong></span><EMAIL>\r\n     * <span><strong>创建时间：</strong></span>2017/6/27\r\n     * @apiSampleRequest  http://qa.aixingfu.net/v3/api-member/get-my-venues\r\n     * @apiSuccess (返回值) {string} data\r\n     * @apiSuccessExample {json}返回值详情(成功时)\r\n     *{\r\n     *  \"code\": 1,\r\n     *  \"status\": \"success\",\r\n     *  \"message\": \"成功\",\r\n     *  \"data\": [\r\n     *     {\r\n     *        \"id\": \"2\",\r\n     *        \"name\": \"大上海瑜伽健身馆\"\r\n     *     }\r\n     *  ]\r\n     *}\r\n     * @apiSuccessExample {json}返回值详情(失败时)\r\n     *{\r\n     *  \"code\": 0,\r\n     *  \"status\": \"error\",\r\n     *  \"message\": \"没有数据\"\r\n     *}\r\n     */\r\n    public function actionGetMyVenues()\r\n    {\r\n        $mobile    = \\Yii::$app->request->get('mobile');\r\n        $companyId = \\Yii::$app->request->get('companyId');\r\n        $model = new Member();\r\n        $data  = $model->getMyVenues($mobile, $companyId);\r\n        if($data){\r\n            return ['code' => 1, 'status' => 'success', 'message' => \"成功\", 'data' => $data];\r\n        }else{\r\n            return ['code' => 0, 'status' => 'error', 'message' => \"没有数据\", 'data' => []];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @api {get} /v3/api-member/get-other-venues   我不拥有的场馆\r", "line_changes": {"deleted": [{"line_no": 13, "char_start": 416, "char_end": 487, "line": "     * <span><strong>邮    箱：</strong></span>jiaobingyang@itsprts.club\r\n"}], "added": [{"line_no": 14, "char_start": 416, "char_end": 469, "line": "     * <span><strong>邮    箱：</strong></span><EMAIL>\r\n"}]}, "char_changes": {"deleted": [{"char_start": 416, "char_end": 487, "chars": "     * <span><strong>邮    箱：</strong></span>jiaobingyang@itsprts.club\r\n"}], "added": [{"char_start": 416, "char_end": 469, "chars": "     * <span><strong>邮    箱：</strong></span><EMAIL>\r\n"}]}}
{"func_name": 4145, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nnamespace Webkul\\Pos\\Repositories;\n\nuse Illuminate\\Container\\Container as App;\nuse DB;\nuse Webkul\\Core\\Eloquent\\Repository;\nuse Webkul\\Pos\\Repositories\\PosOutletRepository as PosOutlet;\nuse Webkul\\Product\\Repositories\\ProductRepository as Product;\nuse Webkul\\Product\\Repositories\\ProductInventoryRepository as ProductInventory;\nuse Webkul\\Product\\Repositories\\ProductImageRepository as ProductImage;\n\n/**\n * PosOutletProduct Repository\n *\n * @author Vivek Sharma <viveksh047@webkul.com> @vivek-webkul\n * @copyright 2019 Webkul Software Pvt Ltd (http://www.webkul.com)\n */\nclass PosOutletProductRepository extends Repository\n{\n    /**\n     * Contains route related configuration\n     *\n     * @var array\n     */\n    protected $_config;\n\n    protected $posOutlet;\n\n    protected $product;\n\n    protected $productInventory;\n\n    protected $productImage;\n\n    public function __construct(\n        App $app,\n        PosOutlet $posOutlet,\n        Product $product,\n        ProductInventory $productInventory,\n        ProductImage $productImage\n    )\n    {\n        $this->_config = request('_config');\n\n        $this->posOutlet = $posOutlet;\n\n        $this->product = $product;\n\n        $this->productInventory = $productInventory;", "func_src_after": "<?php\n\nnamespace Webkul\\Pos\\Repositories;\n\nuse Illuminate\\Container\\Container as App;\nuse DB;\nuse Webkul\\Core\\Eloquent\\Repository;\nuse Webkul\\Pos\\Repositories\\PosOutletRepository as PosOutlet;\nuse Webkul\\Product\\Repositories\\ProductRepository as Product;\nuse Webkul\\Product\\Repositories\\ProductInventoryRepository as ProductInventory;\nuse Webkul\\Product\\Repositories\\ProductImageRepository as ProductImage;\n\n/**\n * PosOutletProduct Repository\n *\n * @author Vivek Sharma <<EMAIL>> @vivek-webkul\n * @copyright 2019 Webkul Software Pvt Ltd (http://www.webkul.com)\n */\nclass PosOutletProductRepository extends Repository\n{\n    /**\n     * Contains route related configuration\n     *\n     * @var array\n     */\n    protected $_config;\n\n    protected $posOutlet;\n\n    protected $product;\n\n    protected $productInventory;\n\n    protected $productImage;\n\n    public function __construct(\n        App $app,\n        PosOutlet $posOutlet,\n        Product $product,\n        ProductInventory $productInventory,\n        ProductImage $productImage\n    )\n    {\n        $this->_config = request('_config');\n\n        $this->posOutlet = $posOutlet;\n\n        $this->product = $product;\n\n        $this->productInventory = $productInventory;", "line_changes": {"deleted": [{"line_no": 16, "char_start": 446, "char_end": 508, "line": " * @author Vivek Sharma <viveksh047@webkul.com> @vivek-webkul\n"}], "added": [{"line_no": 17, "char_start": 446, "char_end": 494, "line": " * @author Vivek Sharma <<EMAIL>> @vivek-webkul\n"}]}, "char_changes": {"deleted": [{"char_start": 446, "char_end": 508, "chars": " * @author Vivek Sharma <viveksh047@webkul.com> @vivek-webkul\n"}], "added": [{"char_start": 446, "char_end": 494, "chars": " * @author Vivek Sharma <<EMAIL>> @vivek-webkul\n"}]}}
{"func_name": 4164, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\n/*\n * Page Bundle\n * This file is part of the BardisCMS.\n *\n * (c) George Bardis <george@bardis.info>\n *\n */\n\nnamespace BardisCMS\\PageBundle\\Admin;\n\nuse Sonata\\AdminBundle\\Admin\\Admin;\nuse Sonata\\AdminBundle\\Datagrid\\ListMapper;\nuse Sonata\\AdminBundle\\Datagrid\\DatagridMapper;\nuse Sonata\\CoreBundle\\Validator\\ErrorElement;\nuse Sonata\\AdminBundle\\Form\\FormMapper;\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\n\nclass PageAdmin extends Admin {\n\n    protected function configureFormFields(FormMapper $formMapper) {\n\n        // Getting the container parameters set in the config file that exist after the dependency injection\n        $pageSettings = $this->getConfigurationPool()->getContainer()->getParameter('page_settings');\n\n        // Setting up the available page types and preffered choice\n        $pagetypeChoices = $pageSettings['pagetypes'];\n        reset($pagetypeChoices);\n        $prefPagetypeChoice = key($pagetypeChoices);\n\n        // Setting up the available media sizes and preffered choice\n        $introMediaSizeChoices = $pageSettings['mediasizes'];\n        reset($introMediaSizeChoices);\n        $prefIntroMediaSizeChoice = key($introMediaSizeChoices);\n\n        // Getting the user from container services that exist\n        $loggedUser = $this->getConfigurationPool()->getContainer()->get('security.context')->getToken()->getUser();\n\n        // Using sonata admin to generate the edit page form and its fields\n        $formMapper\n                ->tab('Page Essential Details')\n                ->with('Page Essential Details', array('collapsed' => false))\n                ->add('title', null, array('attr' => array('class' => 'pageTitleField'), 'label' => 'Page Title', 'required' => true))\n                ->add('publishState', 'choice', array('choices' => array('0' => 'Unpublished', '1' => 'Published', '2' => 'Preview'), 'preferred_choices' => array('2'), 'label' => 'Publish State', 'required' => true))\n                ->add('date', 'date', array('widget' => 'single_text', 'format' => 'dd-MM-yyyy', 'attr' => array('class' => 'datepicker'), 'label' => 'Publish Date', 'required' => true))\n                ->add('author', 'entity', array('class' => 'Application\\Sonata\\UserBundle\\Entity\\User', 'choice_label' => 'username', 'expanded' => false, 'multiple' => false, 'label' => 'Author', 'data' => $loggedUser->getId(), 'required' => true))\n                ->add('alias', null, array('attr' => array('class' => 'pageAliasField'), 'label' => 'Page Alias', 'required' => false))\n                ->add('pagetype', 'choice', array('choices' => $pagetypeChoices, 'preferred_choices' => array($prefPagetypeChoice), 'label' => 'Page Type', 'required' => true))\n                ->add('showPageTitle', 'choice', array('choices' => array('0' => 'Hide Title', '1' => 'Show Title'), 'preferred_choices' => array('1'), 'label' => 'Title Display State', 'required' => true))", "func_src_after": "<?php\n\n/*\n * Page Bundle\n * This file is part of the BardisCMS.\n *\n * (c) George Bardis <<EMAIL>>\n *\n */\n\nnamespace BardisCMS\\PageBundle\\Admin;\n\nuse Sonata\\AdminBundle\\Admin\\Admin;\nuse Sonata\\AdminBundle\\Datagrid\\ListMapper;\nuse Sonata\\AdminBundle\\Datagrid\\DatagridMapper;\nuse Sonata\\CoreBundle\\Validator\\ErrorElement;\nuse Sonata\\AdminBundle\\Form\\FormMapper;\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\n\nclass PageAdmin extends Admin {\n\n    protected function configureFormFields(FormMapper $formMapper) {\n\n        // Getting the container parameters set in the config file that exist after the dependency injection\n        $pageSettings = $this->getConfigurationPool()->getContainer()->getParameter('page_settings');\n\n        // Setting up the available page types and preffered choice\n        $pagetypeChoices = $pageSettings['pagetypes'];\n        reset($pagetypeChoices);\n        $prefPagetypeChoice = key($pagetypeChoices);\n\n        // Setting up the available media sizes and preffered choice\n        $introMediaSizeChoices = $pageSettings['mediasizes'];\n        reset($introMediaSizeChoices);\n        $prefIntroMediaSizeChoice = key($introMediaSizeChoices);\n\n        // Getting the user from container services that exist\n        $loggedUser = $this->getConfigurationPool()->getContainer()->get('security.context')->getToken()->getUser();\n\n        // Using sonata admin to generate the edit page form and its fields\n        $formMapper\n                ->tab('Page Essential Details')\n                ->with('Page Essential Details', array('collapsed' => false))\n                ->add('title', null, array('attr' => array('class' => 'pageTitleField'), 'label' => 'Page Title', 'required' => true))\n                ->add('publishState', 'choice', array('choices' => array('0' => 'Unpublished', '1' => 'Published', '2' => 'Preview'), 'preferred_choices' => array('2'), 'label' => 'Publish State', 'required' => true))\n                ->add('date', 'date', array('widget' => 'single_text', 'format' => 'dd-MM-yyyy', 'attr' => array('class' => 'datepicker'), 'label' => 'Publish Date', 'required' => true))\n                ->add('author', 'entity', array('class' => 'Application\\Sonata\\UserBundle\\Entity\\User', 'choice_label' => 'username', 'expanded' => false, 'multiple' => false, 'label' => 'Author', 'data' => $loggedUser->getId(), 'required' => true))\n                ->add('alias', null, array('attr' => array('class' => 'pageAliasField'), 'label' => 'Page Alias', 'required' => false))\n                ->add('pagetype', 'choice', array('choices' => $pagetypeChoices, 'preferred_choices' => array($prefPagetypeChoice), 'label' => 'Page Type', 'required' => true))\n                ->add('showPageTitle', 'choice', array('choices' => array('0' => 'Hide Title', '1' => 'Show Title'), 'preferred_choices' => array('1'), 'label' => 'Title Display State', 'required' => true))", "line_changes": {"deleted": [{"line_no": 7, "char_start": 67, "char_end": 109, "line": " * (c) George Bardis <george@bardis.info>\n"}], "added": [{"line_no": 8, "char_start": 67, "char_end": 98, "line": " * (c) George Bardis <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 67, "char_end": 109, "chars": " * (c) George Bardis <george@bardis.info>\n"}], "added": [{"char_start": 67, "char_end": 98, "chars": " * (c) George Bardis <<EMAIL>>\n"}]}}
{"func_name": 4200, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# frozen_string_literal: true\n\nrequire \"rails_helper\"\nRSpec.describe(\"Unfollow Website\") do\n  before do\n    @user = create(:user, email: \"user@email.com\", username: \"username\", password: \"password\")\n    @user2 = create(:user, email: \"user2@email.com\", username: \"username2\", password: \"password\")\n    prepare_query_variables({})\n    prepare_context({})\n  end\n\n  describe Mutations::Follows::DeleteUserFollowsWebsite do\n    it \"if conditions are valid, website is succesfully unfollowed\" do\n      prepare_context({\n        current_user: @user,\n      })\n\n      website = create(:website, owner: @user2)\n      create(:user_follows_website, website: website, user: @user)\n\n      query = <<~GRAPHQL\n        mutation deleteUserFollowsWebsite($websiteId: Int!) {\n          deleteUserFollowsWebsite(input: { websiteId: $websiteId })\n        }\n      GRAPHQL\n\n      prepare_query(query)\n\n      prepare_query_variables(\n        websiteId: website.id\n      )\n\n      result = graphql!\n\n      expect(result[\"data\"][\"deleteUserFollowsWebsite\"]).to(eq(\"Successfully unfollowed Website\"))\n      expect(UserFollowsWebsite.all.size).to(eq(0))\n    end\n\n    it \"if website id is invalid, error is returned\" do\n      prepare_context({\n        current_user: @user,\n      })\n\n      website = create(:website, owner: @user2)\n      create(:user_follows_website, website: website, user: @user)\n\n      query = <<~GRAPHQL\n        mutation deleteUserFollowsWebsite($websiteId: Int!) {\n          deleteUserFollowsWebsite(input: { websiteId: $websiteId })\n        }", "func_src_after": "# frozen_string_literal: true\n\nrequire \"rails_helper\"\nRSpec.describe(\"Unfollow Website\") do\n  before do\n    @user = create(:user, email: \"<EMAIL>\", username: \"username\", password: \"password\")\n    @user2 = create(:user, email: \"<EMAIL>\", username: \"username2\", password: \"password\")\n    prepare_query_variables({})\n    prepare_context({})\n  end\n\n  describe Mutations::Follows::DeleteUserFollowsWebsite do\n    it \"if conditions are valid, website is succesfully unfollowed\" do\n      prepare_context({\n        current_user: @user,\n      })\n\n      website = create(:website, owner: @user2)\n      create(:user_follows_website, website: website, user: @user)\n\n      query = <<~GRAPHQL\n        mutation deleteUserFollowsWebsite($websiteId: Int!) {\n          deleteUserFollowsWebsite(input: { websiteId: $websiteId })\n        }\n      GRAPHQL\n\n      prepare_query(query)\n\n      prepare_query_variables(\n        websiteId: website.id\n      )\n\n      result = graphql!\n\n      expect(result[\"data\"][\"deleteUserFollowsWebsite\"]).to(eq(\"Successfully unfollowed Website\"))\n      expect(UserFollowsWebsite.all.size).to(eq(0))\n    end\n\n    it \"if website id is invalid, error is returned\" do\n      prepare_context({\n        current_user: @user,\n      })\n\n      website = create(:website, owner: @user2)\n      create(:user_follows_website, website: website, user: @user)\n\n      query = <<~GRAPHQL\n        mutation deleteUserFollowsWebsite($websiteId: Int!) {\n          deleteUserFollowsWebsite(input: { websiteId: $websiteId })\n        }", "line_changes": {"deleted": [{"line_no": 6, "char_start": 104, "char_end": 199, "line": "    @user = create(:user, email: \"user@email.com\", username: \"username\", password: \"password\")\n"}, {"line_no": 8, "char_start": 192, "char_end": 290, "line": "    @user2 = create(:user, email: \"user2@email.com\", username: \"username2\", password: \"password\")\n"}], "added": [{"line_no": 7, "char_start": 104, "char_end": 192, "line": "    @user = create(:user, email: \"<EMAIL>\", username: \"username\", password: \"password\")\n"}, {"line_no": 9, "char_start": 192, "char_end": 282, "line": "    @user2 = create(:user, email: \"<EMAIL>\", username: \"username2\", password: \"password\")\n"}]}, "char_changes": {"deleted": [{"char_start": 104, "char_end": 199, "chars": "    @user = create(:user, email: \"user@email.com\", username: \"username\", password: \"password\")\n"}, {"char_start": 192, "char_end": 290, "chars": "    @user2 = create(:user, email: \"user2@email.com\", username: \"username2\", password: \"password\")\n"}], "added": [{"char_start": 104, "char_end": 192, "chars": "    @user = create(:user, email: \"<EMAIL>\", username: \"username\", password: \"password\")\n"}, {"char_start": 192, "char_end": 282, "chars": "    @user2 = create(:user, email: \"<EMAIL>\", username: \"username2\", password: \"password\")\n"}]}}
{"func_name": 4202, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "=begin\n#Hydrogen Atom API\n\n#The Hydrogen Atom API\n\nOpenAPI spec version: 1.7.0\nContact: info@hydrogenplatform.com\nGenerated by: https://github.com/swagger-api/swagger-codegen.git\nSwagger Codegen version: 2.4.14\n\n=end\n\nrequire 'uri'\n\nmodule NucleusApi\n  class ResourceApi\n    attr_accessor :api_client\n\n    def initialize(api_client = ApiClient.default)\n      @api_client = api_client\n    end\n    # Get All Countries\n    # Get All Countries. \n    # @param [Hash] opts the optional parameters\n    # @return [Array<Country>]\n    def get_all_country_using_get(opts = {})\n      data, _status_code, _headers = get_all_country_using_get_with_http_info(opts)\n      data\n    end\n\n    # Get All Countries\n    # Get All Countries. \n    # @param [Hash] opts the optional parameters\n    # @return [Array<(Array<Country>, Fixnum, Hash)>] Array<Country> data, response status code and response headers\n    def get_all_country_using_get_with_http_info(opts = {})\n      if @api_client.config.debugging\n        @api_client.config.logger.debug 'Calling API: ResourceApi.get_all_country_using_get ...'\n      end\n      # resource path\n      local_var_path = '/resource/country'\n\n      # query parameters\n      query_params = {}\n\n      # header parameters\n      header_params = {}\n      # HTTP header 'Accept' (if needed)\n      header_params['Accept'] = @api_client.select_header_accept(['application/json'])\n\n      # form parameters", "func_src_after": "=begin\n#Hydrogen Atom API\n\n#The Hydrogen Atom API\n\nOpenAPI spec version: 1.7.0\nContact: <EMAIL>\nGenerated by: https://github.com/swagger-api/swagger-codegen.git\nSwagger Codegen version: 2.4.14\n\n=end\n\nrequire 'uri'\n\nmodule NucleusApi\n  class ResourceApi\n    attr_accessor :api_client\n\n    def initialize(api_client = ApiClient.default)\n      @api_client = api_client\n    end\n    # Get All Countries\n    # Get All Countries. \n    # @param [Hash] opts the optional parameters\n    # @return [Array<Country>]\n    def get_all_country_using_get(opts = {})\n      data, _status_code, _headers = get_all_country_using_get_with_http_info(opts)\n      data\n    end\n\n    # Get All Countries\n    # Get All Countries. \n    # @param [Hash] opts the optional parameters\n    # @return [Array<(Array<Country>, Fixnum, Hash)>] Array<Country> data, response status code and response headers\n    def get_all_country_using_get_with_http_info(opts = {})\n      if @api_client.config.debugging\n        @api_client.config.logger.debug 'Calling API: ResourceApi.get_all_country_using_get ...'\n      end\n      # resource path\n      local_var_path = '/resource/country'\n\n      # query parameters\n      query_params = {}\n\n      # header parameters\n      header_params = {}\n      # HTTP header 'Accept' (if needed)\n      header_params['Accept'] = @api_client.select_header_accept(['application/json'])\n\n      # form parameters", "line_changes": {"deleted": [{"line_no": 7, "char_start": 79, "char_end": 114, "line": "Contact: info@hydrogenplatform.com\n"}], "added": [{"line_no": 8, "char_start": 79, "char_end": 96, "line": "Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 79, "char_end": 114, "chars": "Contact: info@hydrogenplatform.com\n"}], "added": [{"char_start": 79, "char_end": 96, "chars": "Contact: <EMAIL>\n"}]}}
{"func_name": 4218, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#\n# Cookbook:: veeam\n# Recipe:: host_mgmt\n#\n# maintainer:: Exosphere Data, LLC\n# maintainer_email:: chef@exospheredata.com\n#\n# Copyright:: 2020, Exosphere Data, LLC, All Rights Reserved.\n\nerror_message = 'This recipe requires a Windows 2012 or higher host!'\n\n# If this host is not Windows, then abort\nraise ArgumentError, error_message unless platform_family?('windows')\n\n# If this host is older than Windows 2012, we should abort the process for an unsupported platform\nraise ArgumentError, error_message if node['platform_version'].to_f < '6.2.9200'.to_f # '6.2.9200' is the numeric platform_version for Windows 2012\n\nveeam_prerequisites 'Install Veeam Prerequisites' do\n  package_url node['veeam']['installer']['package_url']\n  package_checksum node['veeam']['installer']['package_checksum']\n  version node['veeam']['build']\n  install_sql false\n  action :install\nend\n\nveeam_console 'Install Veeam Backup console' do\n  package_url node['veeam']['installer']['package_url']\n  package_checksum node['veeam']['installer']['package_checksum']\n  version node['veeam']['build']\n  accept_eula node['veeam']['console']['accept_eula']\n  install_dir node['veeam']['console']['install_dir']\n  keep_media true\n  action :install\nend\n\nveeam_upgrade node['veeam']['build'] do\n  package_url node['veeam']['installer']['update_url']\n  package_checksum node['veeam']['installer']['update_checksum']\n  keep_media node['veeam']['upgrade']['keep_media']\n  auto_reboot node['veeam']['reboot_on_upgrade']\n  action :install\nend\n\nunless node['veeam']['host']['server'].nil?\n  veeam_host node['veeam']['host']['server'] do\n    vbr_server      node['veeam']['host']['vbr_server']\n    vbr_server_port node['veeam']['host']['vbr_port']\n    vbr_username    node['veeam']['host']['vbr_username']\n    vbr_password    node['veeam']['host']['vbr_password']\n    host_username   node['veeam']['host']['host_username']", "func_src_after": "#\n# Cookbook:: veeam\n# Recipe:: host_mgmt\n#\n# maintainer:: Exosphere Data, LLC\n# maintainer_email:: <EMAIL>\n#\n# Copyright:: 2020, Exosphere Data, LLC, All Rights Reserved.\n\nerror_message = 'This recipe requires a Windows 2012 or higher host!'\n\n# If this host is not Windows, then abort\nraise ArgumentError, error_message unless platform_family?('windows')\n\n# If this host is older than Windows 2012, we should abort the process for an unsupported platform\nraise ArgumentError, error_message if node['platform_version'].to_f < '6.2.9200'.to_f # '6.2.9200' is the numeric platform_version for Windows 2012\n\nveeam_prerequisites 'Install Veeam Prerequisites' do\n  package_url node['veeam']['installer']['package_url']\n  package_checksum node['veeam']['installer']['package_checksum']\n  version node['veeam']['build']\n  install_sql false\n  action :install\nend\n\nveeam_console 'Install Veeam Backup console' do\n  package_url node['veeam']['installer']['package_url']\n  package_checksum node['veeam']['installer']['package_checksum']\n  version node['veeam']['build']\n  accept_eula node['veeam']['console']['accept_eula']\n  install_dir node['veeam']['console']['install_dir']\n  keep_media true\n  action :install\nend\n\nveeam_upgrade node['veeam']['build'] do\n  package_url node['veeam']['installer']['update_url']\n  package_checksum node['veeam']['installer']['update_checksum']\n  keep_media node['veeam']['upgrade']['keep_media']\n  auto_reboot node['veeam']['reboot_on_upgrade']\n  action :install\nend\n\nunless node['veeam']['host']['server'].nil?\n  veeam_host node['veeam']['host']['server'] do\n    vbr_server      node['veeam']['host']['vbr_server']\n    vbr_server_port node['veeam']['host']['vbr_port']\n    vbr_username    node['veeam']['host']['vbr_username']\n    vbr_password    node['veeam']['host']['vbr_password']\n    host_username   node['veeam']['host']['host_username']", "line_changes": {"deleted": [{"line_no": 6, "char_start": 79, "char_end": 123, "line": "# maintainer_email:: chef@exospheredata.com\n"}], "added": [{"line_no": 7, "char_start": 79, "char_end": 108, "line": "# maintainer_email:: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 79, "char_end": 123, "chars": "# maintainer_email:: chef@exospheredata.com\n"}], "added": [{"char_start": 79, "char_end": 108, "chars": "# maintainer_email:: <EMAIL>\n"}]}}
{"func_name": 4230, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require \"rails_helper\"\n\nRSpec.describe SessionsController, type: :controller do\n  describe \"GET :create\" do\n    before do\n      mock_auth(\n        :github,\n        {\n          uid: uid,\n          info: {\n            nickname: login,\n            email: email,\n            name: name\n          }\n        }\n      )\n      request.env[\"omniauth.auth\"] = OmniAuth.config.mock_auth[:github]\n    end\n\n    let(:uid) { 1234 }\n    let(:login) { \"aergonaut\" }\n    let(:email) { \"omgwtf@bbq.org\" }\n    let(:name) { \"Joe Blow\" }\n\n    it \"redirects to the Pull Requests page\" do\n      get :create\n      expect(response).to redirect_to(root_path)\n    end\n\n    context \"when the user has never logged in before\" do\n      it \"makes a new User\" do\n        expect {\n          get :create\n        }.to change {\n          User.count\n        }.by(1)\n      end\n    end\n\n    context \"when the user has logged in before\" do\n      before do\n        FactoryBot.create :user, uid: uid, login: login, email: email, name: name\n      end\n\n      it \"does not make a new User\" do\n        expect {\n          get :create\n        }.to_not change { User.count }\n      end\n    end", "func_src_after": "require \"rails_helper\"\n\nRSpec.describe SessionsController, type: :controller do\n  describe \"GET :create\" do\n    before do\n      mock_auth(\n        :github,\n        {\n          uid: uid,\n          info: {\n            nickname: login,\n            email: email,\n            name: name\n          }\n        }\n      )\n      request.env[\"omniauth.auth\"] = OmniAuth.config.mock_auth[:github]\n    end\n\n    let(:uid) { 1234 }\n    let(:login) { \"aergonaut\" }\n    let(:email) { \"<EMAIL>\" }\n    let(:name) { \"Joe Blow\" }\n\n    it \"redirects to the Pull Requests page\" do\n      get :create\n      expect(response).to redirect_to(root_path)\n    end\n\n    context \"when the user has never logged in before\" do\n      it \"makes a new User\" do\n        expect {\n          get :create\n        }.to change {\n          User.count\n        }.by(1)\n      end\n    end\n\n    context \"when the user has logged in before\" do\n      before do\n        FactoryBot.create :user, uid: uid, login: login, email: email, name: name\n      end\n\n      it \"does not make a new User\" do\n        expect {\n          get :create\n        }.to_not change { User.count }\n      end\n    end", "line_changes": {"deleted": [{"line_no": 22, "char_start": 448, "char_end": 485, "line": "    let(:email) { \"omgwtf@bbq.org\" }\n"}], "added": [{"line_no": 23, "char_start": 448, "char_end": 478, "line": "    let(:email) { \"<EMAIL>\" }\n"}]}, "char_changes": {"deleted": [{"char_start": 448, "char_end": 485, "chars": "    let(:email) { \"omgwtf@bbq.org\" }\n"}], "added": [{"char_start": 448, "char_end": 478, "chars": "    let(:email) { \"<EMAIL>\" }\n"}]}}
{"func_name": 4242, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        'value'   => 'cisco',\n      )\n    }\n  end\n\n  context 'declared on Linux, running Puppet 5.5, with credentials and url parameters' do\n    let(:title)  { 'cisco.example.com' }\n    let(:params) do\n      {\n        :ensure       => :present,\n        :type         => 'cisco_ios',\n        :credentials  => { 'address' => '10.0.0.245', 'port' => 22, 'username' => 'admin', 'password' => 'cisco', 'enable_password' => 'cisco' },\n        :url          => 'https://admin:cisco@10.0.0.245/',\n      }\n    end\n    let(:facts) do\n      {\n        :aio_agent_version            => '5.5.0',\n        :puppetversion                => '5.5.0',\n        :puppet_settings_deviceconfig => '/etc/puppetlabs/puppet/device.conf',\n        :puppet_settings_confdir      => '/etc/puppetlabs',\n        :os                           => { :family => 'redhat' },\n      }\n    end\n\n    it { is_expected.to raise_error(%r{are mutually-exclusive}) }\n  end\nend\n", "func_src_after": "        'value'   => 'cisco',\n      )\n    }\n  end\n\n  context 'declared on Linux, running Puppet 5.5, with credentials and url parameters' do\n    let(:title)  { 'cisco.example.com' }\n    let(:params) do\n      {\n        :ensure       => :present,\n        :type         => 'cisco_ios',\n        :credentials  => { 'address' => '<IP-Address>', 'port' => 22, 'username' => 'admin', 'password' => 'cisco', 'enable_password' => 'cisco' },\n        :url          => 'https://admin:cisco@<IP-Address>/',\n      }\n    end\n    let(:facts) do\n      {\n        :aio_agent_version            => '5.5.0',\n        :puppetversion                => '5.5.0',\n        :puppet_settings_deviceconfig => '/etc/puppetlabs/puppet/device.conf',\n        :puppet_settings_confdir      => '/etc/puppetlabs',\n        :os                           => { :family => 'redhat' },\n      }\n    end\n\n    it { is_expected.to raise_error(%r{are mutually-exclusive}) }\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 12, "char_start": 283, "char_end": 429, "line": "        :credentials  => { 'address' => '10.0.0.245', 'port' => 22, 'username' => 'admin', 'password' => 'cisco', 'enable_password' => 'cisco' },\n"}, {"line_no": 14, "char_start": 431, "char_end": 491, "line": "        :url          => 'https://admin:cisco@10.0.0.245/',\n"}], "added": [{"line_no": 13, "char_start": 283, "char_end": 431, "line": "        :credentials  => { 'address' => '<IP-Address>', 'port' => 22, 'username' => 'admin', 'password' => 'cisco', 'enable_password' => 'cisco' },\n"}, {"line_no": 15, "char_start": 431, "char_end": 493, "line": "        :url          => 'https://admin:cisco@<IP-Address>/',\n"}]}, "char_changes": {"deleted": [{"char_start": 283, "char_end": 429, "chars": "        :credentials  => { 'address' => '10.0.0.245', 'port' => 22, 'username' => 'admin', 'password' => 'cisco', 'enable_password' => 'cisco' },\n"}, {"char_start": 431, "char_end": 491, "chars": "        :url          => 'https://admin:cisco@10.0.0.245/',\n"}], "added": [{"char_start": 283, "char_end": 431, "chars": "        :credentials  => { 'address' => '<IP-Address>', 'port' => 22, 'username' => 'admin', 'password' => 'cisco', 'enable_password' => 'cisco' },\n"}, {"char_start": 431, "char_end": 493, "chars": "        :url          => 'https://admin:cisco@<IP-Address>/',\n"}]}}
{"func_name": 4247, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# frozen_string_literal: true\nrequire 'rails_helper'\n\nRSpec.describe Hyku::API::V1::RegistrationsController, type: :request, clean: true, multitenant: true do\n  let(:account) { create(:account) }\n  let(:email) { 'user@example.com' }\n  let(:password) { 'secure_password' }\n  let(:json_response) { JSON.parse(response.body) }\n  let(:jwt_cookie) { response.cookies.with_indifferent_access[:jwt] }\n\n  before do\n    WebMock.disable!\n    Apartment::Tenant.create(account.tenant)\n    Apartment::Tenant.switch(account.tenant) { Site.update(account: account) }\n  end\n\n  after do\n    WebMock.enable!\n    Apartment::Tenant.drop(account.tenant)\n  end\n\n  describe \"/signup\" do\n    it 'registers the user' do\n      post hyku_api.v1_tenant_users_signup_url(tenant_id: account.id), params: { email: email, password: password, password_confirmation: password }\n\n      expect(response.status).to eq(200)\n      expect(response.body).to eq \"Please check your email at #{email} to complete your registration\"\n      expect(jwt_cookie).to be_truthy\n    end\n\n    xcontext 'when email does not have correct domain' do\n      let(:domain) { 'example.com' }\n      let(:email) { 'user@test.com' }\n\n      it 'does not register the user' do\n        post hyku_api.v1_tenant_users_signup_url(tenant_id: account.id), params: { email: email, password: password, password_confirmation: password }\n\n        expect(response.status).to eq(200)\n        expect(json_response['status']).to eq(401)\n        expect(json_response['code']).to eq 'Invalid credentials'\n        expect(json_response['message']).to include(\"email\" => [\"Email must contain #{domain}\"])\n        expect(jwt_cookie).to be_falsey\n      end\n    end\n\n    context 'when email is already registered' do\n      before do\n        post hyku_api.v1_tenant_users_signup_url(tenant_id: account.id), params: { email: email, password: password, password_confirmation: password }\n      end\n", "func_src_after": "# frozen_string_literal: true\nrequire 'rails_helper'\n\nRSpec.describe Hyku::API::V1::RegistrationsController, type: :request, clean: true, multitenant: true do\n  let(:account) { create(:account) }\n  let(:email) { '<EMAIL>' }\n  let(:password) { 'secure_password' }\n  let(:json_response) { JSON.parse(response.body) }\n  let(:jwt_cookie) { response.cookies.with_indifferent_access[:jwt] }\n\n  before do\n    WebMock.disable!\n    Apartment::Tenant.create(account.tenant)\n    Apartment::Tenant.switch(account.tenant) { Site.update(account: account) }\n  end\n\n  after do\n    WebMock.enable!\n    Apartment::Tenant.drop(account.tenant)\n  end\n\n  describe \"/signup\" do\n    it 'registers the user' do\n      post hyku_api.v1_tenant_users_signup_url(tenant_id: account.id), params: { email: email, password: password, password_confirmation: password }\n\n      expect(response.status).to eq(200)\n      expect(response.body).to eq \"Please check your email at #{email} to complete your registration\"\n      expect(jwt_cookie).to be_truthy\n    end\n\n    xcontext 'when email does not have correct domain' do\n      let(:domain) { 'example.com' }\n      let(:email) { 'user@test.com' }\n\n      it 'does not register the user' do\n        post hyku_api.v1_tenant_users_signup_url(tenant_id: account.id), params: { email: email, password: password, password_confirmation: password }\n\n        expect(response.status).to eq(200)\n        expect(json_response['status']).to eq(401)\n        expect(json_response['code']).to eq 'Invalid credentials'\n        expect(json_response['message']).to include(\"email\" => [\"Email must contain #{domain}\"])\n        expect(jwt_cookie).to be_falsey\n      end\n    end\n\n    context 'when email is already registered' do\n      before do\n        post hyku_api.v1_tenant_users_signup_url(tenant_id: account.id), params: { email: email, password: password, password_confirmation: password }\n      end\n", "line_changes": {"deleted": [{"line_no": 6, "char_start": 196, "char_end": 233, "line": "  let(:email) { 'user@example.com' }\n"}], "added": [{"line_no": 7, "char_start": 196, "char_end": 224, "line": "  let(:email) { '<EMAIL>' }\n"}]}, "char_changes": {"deleted": [{"char_start": 196, "char_end": 233, "chars": "  let(:email) { 'user@example.com' }\n"}], "added": [{"char_start": 196, "char_end": 224, "chars": "  let(:email) { '<EMAIL>' }\n"}]}}
{"func_name": 4249, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require \"rails_helper\"\n\nuser_full_name = 'Tesfalem Medhanie'\nuser_email = 'me@example.com'\nuser_password = 'paassswoord'\n\nfeature \"user wants to update their account settings, so they\", :js do\n  before do\n    step 'user logs in' do\n      existing_user = create :user, full_name: user_full_name, email: user_email, password: user_password\n      login_as(existing_user, scope: :user)\n    end\n  end\n\n  scenario 'navigating to account settings'  do\n    step \"clicks on account button in navbar\" do\n      visit root_path\n      click_on \"Account\"\n      expect(page).to have_text \"Account settings\"\n    end\n\n    step \"clicks on account menu item\" do\n      click_on \"Account settings\"\n      expect(page).to have_text \"Edit account settings\"\n      expect(page).to have_text \"Change password\"\n    end\n  end\n\n  context 'mobile views' do\n\n    before do\n      resize_window_to_mobile\n    end\n\n    after do\n      resize_window_to_default\n    end\n\n    scenario 'navigating to account settings' do\n      step 'clicks on menu button' do\n        visit root_path\n        click_on 'Menu'\n      end\n\n      step \"clicks on account menu item\" do\n        click_on \"Account settings\"\n        expect(page).to have_text \"Edit account settings\"\n        expect(page).to have_text \"Change password\"\n      end\n    end", "func_src_after": "require \"rails_helper\"\n\nuser_full_name = 'Tesfalem Medhanie'\nuser_email = '<EMAIL>'\nuser_password = 'paassswoord'\n\nfeature \"user wants to update their account settings, so they\", :js do\n  before do\n    step 'user logs in' do\n      existing_user = create :user, full_name: user_full_name, email: user_email, password: user_password\n      login_as(existing_user, scope: :user)\n    end\n  end\n\n  scenario 'navigating to account settings'  do\n    step \"clicks on account button in navbar\" do\n      visit root_path\n      click_on \"Account\"\n      expect(page).to have_text \"Account settings\"\n    end\n\n    step \"clicks on account menu item\" do\n      click_on \"Account settings\"\n      expect(page).to have_text \"Edit account settings\"\n      expect(page).to have_text \"Change password\"\n    end\n  end\n\n  context 'mobile views' do\n\n    before do\n      resize_window_to_mobile\n    end\n\n    after do\n      resize_window_to_default\n    end\n\n    scenario 'navigating to account settings' do\n      step 'clicks on menu button' do\n        visit root_path\n        click_on 'Menu'\n      end\n\n      step \"clicks on account menu item\" do\n        click_on \"Account settings\"\n        expect(page).to have_text \"Edit account settings\"\n        expect(page).to have_text \"Change password\"\n      end\n    end", "line_changes": {"deleted": [{"line_no": 4, "char_start": 61, "char_end": 91, "line": "user_email = 'me@example.com'\n"}], "added": [{"line_no": 5, "char_start": 61, "char_end": 84, "line": "user_email = '<EMAIL>'\n"}]}, "char_changes": {"deleted": [{"char_start": 61, "char_end": 91, "chars": "user_email = 'me@example.com'\n"}], "added": [{"char_start": 61, "char_end": 84, "chars": "user_email = '<EMAIL>'\n"}]}}
{"func_name": 4303, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require \"kco_ruby/version\"\nrequire 'sys/uname'\n\nmodule KcoRuby\n\n  #Responsible for creating User agent strings\n  class UserAgent\n    include Sys\n\n    def initialize\n      # Components of the user-agent\n      @fields = []\n      add_field(UserAgentField.new('Library', \"Significantbit.KCO.ApiWrapper\", KcoRuby::VERSION))\n      add_field(UserAgentField.new('OS', Uname.sysname, RUBY_PLATFORM))\n      add_field(UserAgentField.new('Language', \"Ruby\", RUBY_VERSION))\n    end\n\n    def add_field(field)\n      @fields << field\n    end\n\n    def to_s\n      @fields.map { |field| field.to_s }.join(\" \")\n    end\n  end\n\n  #The field class is used to describe a UserAgent field\n  class UserAgentField\n    attr_accessor :identifier, :name, :version\n    attr_writer :options\n\n    def initialize(identifier, name, version, options = nil)\n      @identifier = identifier\n      @name = name\n      @version = version\n      @options = options\n    end\n\n    def to_s\n      [\"#{@identifier}/#{@name}_#{@version}\", options_as_string].join(\" \").strip\n    end\n\n    def options_as_string\n      \"(#{@options.join(\" ; \")})\" if @options\n    end\n  end\n\nend\n", "func_src_after": "require \"kco_ruby/version\"\nrequire 'sys/uname'\n\nmodule KcoRuby\n\n  #Responsible for creating User agent strings\n  class UserAgent\n    include Sys\n\n    def initialize\n      # Components of the user-agent\n      @fields = []\n      add_field(UserAgentField.new('Library', \"Significantbit.KCO.ApiWrapper\", KcoRuby::VERSION))\n      add_field(UserAgentField.new('OS', Uname.sysname, RUBY_PLATFORM))\n      add_field(UserAgentField.new('Language', \"Ruby\", RUBY_VERSION))\n    end\n\n    def add_field(field)\n      @fields << field\n    end\n\n    def to_s\n      @fields.map { |field| field.to_s }.join(\" \")\n    end\n  end\n\n  #The field class is used to describe a UserAgent field\n  class UserAgentField\n    attr_accessor :identifier, :name, :version\n    attr_writer :options\n\n    def initialize(identifier, name, version, options = nil)\n      @identifier = identifier\n      @name = name\n      @version = version\n      @options = options\n    end\n\n    def to_s\n      [\"#{@identifier}/#{@name}_#{@version}\", options_as_string].join(\" \").strip\n    end\n\n    def options_as_string\n      \"(#{@options.join(\" ; \")})\" if @options\n    end\n  end\n\nend\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4315, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# frozen_string_literal: true\n\n#\n# Author:: Chef Partner Engineering (<partnereng@chef.io>)\n# Copyright:: Copyright (c) Chef Software Inc.\n# License:: Apache License, Version 2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nrequire \"chef/knife\"\nrequire \"chef/knife/cloud/list_resource_command\"\nrequire_relative \"cloud/vra_service_options\"\n\nclass Chef\n  class Knife\n    class Cloud\n      class VraCatalogList < ResourceListCommand\n        include VraServiceOptions\n\n        banner \"knife vra catalog list\"\n\n        deps do\n          require_relative \"cloud/vra_service\"\n          require_relative \"cloud/vra_service_helpers\"\n          include VraServiceHelpers\n        end\n\n        option :project_id,\n          long:        \"--project-id\",\n          description: \"Catalogs are retrieved using the Project ID\"\n\n        option :entitled,\n          long:        \"--entitled-only\",\n          description: \"only list entitled vRA catalog entries\",\n          boolean:     true,\n          default:     false\n\n        def before_exec_command\n          @columns_with_info = [", "func_src_after": "# frozen_string_literal: true\n\n#\n# Author:: Chef Partner Engineering (<<EMAIL>>)\n# Copyright:: Copyright (c) Chef Software Inc.\n# License:: Apache License, Version 2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nrequire \"chef/knife\"\nrequire \"chef/knife/cloud/list_resource_command\"\nrequire_relative \"cloud/vra_service_options\"\n\nclass Chef\n  class Knife\n    class Cloud\n      class VraCatalogList < ResourceListCommand\n        include VraServiceOptions\n\n        banner \"knife vra catalog list\"\n\n        deps do\n          require_relative \"cloud/vra_service\"\n          require_relative \"cloud/vra_service_helpers\"\n          include VraServiceHelpers\n        end\n\n        option :project_id,\n          long:        \"--project-id\",\n          description: \"Catalogs are retrieved using the Project ID\"\n\n        option :entitled,\n          long:        \"--entitled-only\",\n          description: \"only list entitled vRA catalog entries\",\n          boolean:     true,\n          default:     false\n\n        def before_exec_command\n          @columns_with_info = [", "line_changes": {"deleted": [{"line_no": 4, "char_start": 33, "char_end": 92, "line": "# Author:: Chef Partner Engineering (<partnereng@chef.io>)\n"}], "added": [{"line_no": 5, "char_start": 33, "char_end": 81, "line": "# Author:: Chef Partner Engineering (<<EMAIL>>)\n"}]}, "char_changes": {"deleted": [{"char_start": 33, "char_end": 92, "chars": "# Author:: Chef Partner Engineering (<partnereng@chef.io>)\n"}], "added": [{"char_start": 33, "char_end": 81, "chars": "# Author:: Chef Partner Engineering (<<EMAIL>>)\n"}]}}
{"func_name": 4319, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "RSpec.configure do |config|\n  def get_user(name)\n    @users ||= {}\n    @users[name] ||= User.create!(email: \"#{name}@bar.com\", password: 'test123', password_confirmation: 'test123', locale: 'en', name: name.humanize)\n    @users[name].reload\n  end\n\n  def get_initiative(permalink, user)\n    @initiatives ||= {}\n    @initiatives[permalink] ||= Initiative.create!(name: permalink.humanize, user: user, permalink: permalink)\n    @initiatives[permalink].reload\n  end\n\n  def get_contribution(state)\n    @contributions ||= {}\n    @contributions[state] ||= Contribution.create!(user: visitor_user, initiative: unlock_initiative, value: 10, state: state, gateway_state: 'production', gateway: production_gateway)\n    @contributions[state].reload\n  end\n\n  def get_gateway(state)\n    @gateways ||= {}\n    @gateways[state] ||= Gateway.create!(initiative: unlock_initiative, module_name: \"#{state.capitalize}Gateway\", state: state)\n    @gateways[state].reload\n  end\n\n  def the_creator_user\n    get_user('the_creator')\n  end\n\n  def visitor_user\n    get_user('visitor')\n  end\n\n  def unlock_initiative\n    get_initiative('unlock', the_creator_user)\n  end\n\n  def pending_contribution()    get_contribution('pending')   end\n  def active_contribution()     get_contribution('active')    end\n  def suspended_contribution()  get_contribution('suspended') end\n\n  def draft_gateway()       get_gateway('draft')      end\n  def sandbox_gateway()     get_gateway('sandbox')    end\n  def production_gateway()  get_gateway('production') end\n\n  config.before(:all) do\n    # Insert all data needed for tests\n    the_creator_user\n    visitor_user\n    unlock_initiative", "func_src_after": "RSpec.configure do |config|\n  def get_user(name)\n    @users ||= {}\n    @users[name] ||= User.create!(email: \"#<EMAIL>\", password: 'test123', password_confirmation: 'test123', locale: 'en', name: name.humanize)\n    @users[name].reload\n  end\n\n  def get_initiative(permalink, user)\n    @initiatives ||= {}\n    @initiatives[permalink] ||= Initiative.create!(name: permalink.humanize, user: user, permalink: permalink)\n    @initiatives[permalink].reload\n  end\n\n  def get_contribution(state)\n    @contributions ||= {}\n    @contributions[state] ||= Contribution.create!(user: visitor_user, initiative: unlock_initiative, value: 10, state: state, gateway_state: 'production', gateway: production_gateway)\n    @contributions[state].reload\n  end\n\n  def get_gateway(state)\n    @gateways ||= {}\n    @gateways[state] ||= Gateway.create!(initiative: unlock_initiative, module_name: \"#{state.capitalize}Gateway\", state: state)\n    @gateways[state].reload\n  end\n\n  def the_creator_user\n    get_user('the_creator')\n  end\n\n  def visitor_user\n    get_user('visitor')\n  end\n\n  def unlock_initiative\n    get_initiative('unlock', the_creator_user)\n  end\n\n  def pending_contribution()    get_contribution('pending')   end\n  def active_contribution()     get_contribution('active')    end\n  def suspended_contribution()  get_contribution('suspended') end\n\n  def draft_gateway()       get_gateway('draft')      end\n  def sandbox_gateway()     get_gateway('sandbox')    end\n  def production_gateway()  get_gateway('production') end\n\n  config.before(:all) do\n    # Insert all data needed for tests\n    the_creator_user\n    visitor_user\n    unlock_initiative", "line_changes": {"deleted": [{"line_no": 4, "char_start": 67, "char_end": 217, "line": "    @users[name] ||= User.create!(email: \"#{name}@bar.com\", password: 'test123', password_confirmation: 'test123', locale: 'en', name: name.humanize)\n"}], "added": [{"line_no": 5, "char_start": 67, "char_end": 210, "line": "    @users[name] ||= User.create!(email: \"#<EMAIL>\", password: 'test123', password_confirmation: 'test123', locale: 'en', name: name.humanize)\n"}]}, "char_changes": {"deleted": [{"char_start": 67, "char_end": 217, "chars": "    @users[name] ||= User.create!(email: \"#{name}@bar.com\", password: 'test123', password_confirmation: 'test123', locale: 'en', name: name.humanize)\n"}], "added": [{"char_start": 67, "char_end": 210, "chars": "    @users[name] ||= User.create!(email: \"#<EMAIL>\", password: 'test123', password_confirmation: 'test123', locale: 'en', name: name.humanize)\n"}]}}
{"func_name": 4321, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n        project.create_push_rule(commit_message_regex: \"Change some files\")\n\n        # push to new branch, so use a blank old rev and new ref\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.to raise_error(described_class::UnauthorizedError)\n      end\n    end\n\n    describe \"member_check\" do\n      before do\n        project.create_push_rule(member_check: true)\n      end\n\n      it 'returns false for non-member user' do\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.to raise_error(described_class::UnauthorizedError)\n      end\n\n      it 'returns true if committer is a gitlab member' do\n        create(:user, email: 'dmitriy.zaporozhets@gmail.com')\n\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.not_to raise_error\n      end\n    end\n\n    describe \"file names check\" do\n      let(:start_sha) { '913c66a37b4a45b9769037c55c2d238bd0942d2e' }\n      let(:end_sha)   { '33f3729a45c02fc67d00adb1b8bca394b0e761d9' }\n\n      before do\n        allow(project.repository).to receive(:new_commits)\n          .and_return(project.repository.commits_between(start_sha, end_sha))\n      end\n\n      it 'returns false when filename is prohibited' do\n        project.create_push_rule(file_name_regex: \"jpg$\")\n\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.to raise_error(described_class::UnauthorizedError)\n      end\n\n      it 'returns true if file name is allowed' do\n        project.create_push_rule(file_name_regex: \"exe$\")\n\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.not_to raise_error\n      end\n    end\n\n    describe \"max file size check\" do\n      let(:start_sha) { 'cfe32cf61b73a0d5e9f13e774abde7ff789b1660' }\n      let(:end_sha)   { 'c84ff944ff4529a70788a5e9003c2b7feae29047' }\n", "func_src_after": "\n        project.create_push_rule(commit_message_regex: \"Change some files\")\n\n        # push to new branch, so use a blank old rev and new ref\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.to raise_error(described_class::UnauthorizedError)\n      end\n    end\n\n    describe \"member_check\" do\n      before do\n        project.create_push_rule(member_check: true)\n      end\n\n      it 'returns false for non-member user' do\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.to raise_error(described_class::UnauthorizedError)\n      end\n\n      it 'returns true if committer is a gitlab member' do\n        create(:user, email: '<EMAIL>')\n\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.not_to raise_error\n      end\n    end\n\n    describe \"file names check\" do\n      let(:start_sha) { '913c66a37b4a45b9769037c55c2d238bd0942d2e' }\n      let(:end_sha)   { '33f3729a45c02fc67d00adb1b8bca394b0e761d9' }\n\n      before do\n        allow(project.repository).to receive(:new_commits)\n          .and_return(project.repository.commits_between(start_sha, end_sha))\n      end\n\n      it 'returns false when filename is prohibited' do\n        project.create_push_rule(file_name_regex: \"jpg$\")\n\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.to raise_error(described_class::UnauthorizedError)\n      end\n\n      it 'returns true if file name is allowed' do\n        project.create_push_rule(file_name_regex: \"exe$\")\n\n        expect { access.send(:check_push_access!, \"#{start_sha} #{end_sha} refs/heads/master\") }.not_to raise_error\n      end\n    end\n\n    describe \"max file size check\" do\n      let(:start_sha) { 'cfe32cf61b73a0d5e9f13e774abde7ff789b1660' }\n      let(:end_sha)   { 'c84ff944ff4529a70788a5e9003c2b7feae29047' }\n", "line_changes": {"deleted": [{"line_no": 19, "char_start": 687, "char_end": 749, "line": "        create(:user, email: 'dmitriy.zaporozhets@gmail.com')\n"}], "added": [{"line_no": 20, "char_start": 687, "char_end": 727, "line": "        create(:user, email: '<EMAIL>')\n"}]}, "char_changes": {"deleted": [{"char_start": 687, "char_end": 749, "chars": "        create(:user, email: 'dmitriy.zaporozhets@gmail.com')\n"}], "added": [{"char_start": 687, "char_end": 727, "chars": "        create(:user, email: '<EMAIL>')\n"}]}}
{"func_name": 4342, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\r\n      http.host: \"127.0.0.1\"\r\n\r\n      # Bind port for the metrics REST endpoint, this option also accept a range\r\n      # (9600-9700) and logstash will pick up the first available ports.\r\n\r\n      http.port: 9600\r\n\r\n      # ------------ Debugging Settings --------------\r\n      #\r\n      # Options for log.level:\r\n      #   * fatal\r\n      #   * error\r\n      #   * warn\r\n      #   * info (default)\r\n      #   * debug\r\n      #   * trace\r\n      #\r\n      # log.level: info\r\n      path.logs: /var/log/logstash\r\n      #\r\n      # ------------ Other Settings --------------\r\n      #\r\n      # Where to find custom plugins\r\n      # path.plugins: []\r\n      #\r\n      # ------------ X-Pack Settings (not applicable for OSS build)--------------\r\n      #\r\n      # X-Pack Monitoring\r\n      # https://www.elastic.co/guide/en/logstash/current/monitoring-logstash.html\r\n      xpack.monitoring.enabled: true\r\n      #xpack.monitoring.elasticsearch.username: logstash_system\r\n      #xpack.monitoring.elasticsearch.password: password\r\n      xpack.monitoring.elasticsearch.url: [\"http://{{ keyOrDefault \"config/services/documents/protocols/http/host\" \"unknown\" }}.service.{{ keyOrDefault \"config/services/consul/domain\" \"unknown\" }}:{{ keyOrDefault \"config/services/documents/protocols/http/port\" \"80\" }}\"]\r\n      #xpack.monitoring.elasticsearch.ssl.ca: [ \"/path/to/ca.crt\" ]\r\n      #xpack.monitoring.elasticsearch.ssl.truststore.path: path/to/file\r\n      #xpack.monitoring.elasticsearch.ssl.truststore.password: password\r\n      #xpack.monitoring.elasticsearch.ssl.keystore.path: /path/to/file\r\n      #xpack.monitoring.elasticsearch.ssl.keystore.password: password\r\n      #xpack.monitoring.elasticsearch.ssl.verification_mode: certificate\r\n      #xpack.monitoring.elasticsearch.sniffing: false\r\n      #xpack.monitoring.collection.interval: 10s\r\n      #xpack.monitoring.collection.pipeline.details.enabled: true\r\n      #\r\n      # X-Pack Management\r\n      # https://www.elastic.co/guide/en/logstash/current/logstash-centralized-pipeline-management.html\r\n      #xpack.management.enabled: false\r\n      #xpack.management.pipeline.id: [\"main\", \"apache_logs\"]\r\n      #xpack.management.elasticsearch.username: logstash_admin_user\r\n      #xpack.management.elasticsearch.password: password\r", "func_src_after": "\r\n      http.host: \"<IP-Address>\"\r\n\r\n      # Bind port for the metrics REST endpoint, this option also accept a range\r\n      # (9600-9700) and logstash will pick up the first available ports.\r\n\r\n      http.port: 9600\r\n\r\n      # ------------ Debugging Settings --------------\r\n      #\r\n      # Options for log.level:\r\n      #   * fatal\r\n      #   * error\r\n      #   * warn\r\n      #   * info (default)\r\n      #   * debug\r\n      #   * trace\r\n      #\r\n      # log.level: info\r\n      path.logs: /var/log/logstash\r\n      #\r\n      # ------------ Other Settings --------------\r\n      #\r\n      # Where to find custom plugins\r\n      # path.plugins: []\r\n      #\r\n      # ------------ X-Pack Settings (not applicable for OSS build)--------------\r\n      #\r\n      # X-Pack Monitoring\r\n      # https://www.elastic.co/guide/en/logstash/current/monitoring-logstash.html\r\n      xpack.monitoring.enabled: true\r\n      #xpack.monitoring.elasticsearch.username: logstash_system\r\n      #xpack.monitoring.elasticsearch.password: password\r\n      xpack.monitoring.elasticsearch.url: [\"http://{{ keyOrDefault \"config/services/documents/protocols/http/host\" \"unknown\" }}.service.{{ keyOrDefault \"config/services/consul/domain\" \"unknown\" }}:{{ keyOrDefault \"config/services/documents/protocols/http/port\" \"80\" }}\"]\r\n      #xpack.monitoring.elasticsearch.ssl.ca: [ \"/path/to/ca.crt\" ]\r\n      #xpack.monitoring.elasticsearch.ssl.truststore.path: path/to/file\r\n      #xpack.monitoring.elasticsearch.ssl.truststore.password: password\r\n      #xpack.monitoring.elasticsearch.ssl.keystore.path: /path/to/file\r\n      #xpack.monitoring.elasticsearch.ssl.keystore.password: password\r\n      #xpack.monitoring.elasticsearch.ssl.verification_mode: certificate\r\n      #xpack.monitoring.elasticsearch.sniffing: false\r\n      #xpack.monitoring.collection.interval: 10s\r\n      #xpack.monitoring.collection.pipeline.details.enabled: true\r\n      #\r\n      # X-Pack Management\r\n      # https://www.elastic.co/guide/en/logstash/current/logstash-centralized-pipeline-management.html\r\n      #xpack.management.enabled: false\r\n      #xpack.management.pipeline.id: [\"main\", \"apache_logs\"]\r\n      #xpack.management.elasticsearch.username: logstash_admin_user\r\n      #xpack.management.elasticsearch.password: password\r", "line_changes": {"deleted": [{"line_no": 2, "char_start": 2, "char_end": 32, "line": "      http.host: \"127.0.0.1\"\r\n"}], "added": [{"line_no": 3, "char_start": 2, "char_end": 35, "line": "      http.host: \"<IP-Address>\"\r\n"}]}, "char_changes": {"deleted": [{"char_start": 2, "char_end": 32, "chars": "      http.host: \"127.0.0.1\"\r\n"}], "added": [{"char_start": 2, "char_end": 35, "chars": "      http.host: \"<IP-Address>\"\r\n"}]}}
{"func_name": 4346, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "version = File.read(File.expand_path(\"../VERSION\", __dir__)).strip\n\nGem::Specification.new do |s|\n  s.name        = 'xavius-core'\n  s.version     = version\n  s.summary     = \"Xavius::Core has the main modules for you to work with RDD\"\n  s.description = \"Xavius::Core is a set of pre-configured controllers, models and forms with clean RDD\"\n  s.authors     = 'Emerson Xavier'\n  s.email       = 'emersonx.engineer@gmail.com'\n  s.homepage    = 'https://github.com/xavius-rb/xavius/tree/master/xavius-core'\n  s.license     = 'MIT'\n  s.files       = Dir[\"lib/**/*\"]\n  s.require_path = \"lib\"\n\n  s.metadata = {\n    \"source_code_uri\" => s.homepage,\n    \"changelog_uri\"   => \"https://github.com/xavius-rb/xavius/tree/master/xavius-core/CHANGELOG.md\"\n  }\n\n  s.add_dependency 'responders', '~> 3.0'\n  s.add_dependency 'activemodel', '>= 5.0', '< 6.1'\n  s.add_dependency 'activerecord', '>= 5.0', '< 6.1'\n  s.add_dependency 'railties', '>= 5.0', '< 6.1'\n\n  s.add_development_dependency 'bundler', '~> 2.1'\n  s.add_development_dependency 'rake', '~> 13.0'\n  s.add_development_dependency 'rspec-rails', '~> 3.9'\n  s.add_development_dependency 'pry-byebug', '~> 3.7'\n  s.add_development_dependency 'factory_bot', '~> 5.1'\nend\n", "func_src_after": "version = File.read(File.expand_path(\"../VERSION\", __dir__)).strip\n\nGem::Specification.new do |s|\n  s.name        = 'xavius-core'\n  s.version     = version\n  s.summary     = \"Xavius::Core has the main modules for you to work with RDD\"\n  s.description = \"Xavius::Core is a set of pre-configured controllers, models and forms with clean RDD\"\n  s.authors     = 'Emerson Xavier'\n  s.email       = '<EMAIL>'\n  s.homepage    = 'https://github.com/xavius-rb/xavius/tree/master/xavius-core'\n  s.license     = 'MIT'\n  s.files       = Dir[\"lib/**/*\"]\n  s.require_path = \"lib\"\n\n  s.metadata = {\n    \"source_code_uri\" => s.homepage,\n    \"changelog_uri\"   => \"https://github.com/xavius-rb/xavius/tree/master/xavius-core/CHANGELOG.md\"\n  }\n\n  s.add_dependency 'responders', '~> 3.0'\n  s.add_dependency 'activemodel', '>= 5.0', '< 6.1'\n  s.add_dependency 'activerecord', '>= 5.0', '< 6.1'\n  s.add_dependency 'railties', '>= 5.0', '< 6.1'\n\n  s.add_development_dependency 'bundler', '~> 2.1'\n  s.add_development_dependency 'rake', '~> 13.0'\n  s.add_development_dependency 'rspec-rails', '~> 3.9'\n  s.add_development_dependency 'pry-byebug', '~> 3.7'\n  s.add_development_dependency 'factory_bot', '~> 5.1'\nend\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 375, "char_end": 423, "line": "  s.email       = 'emersonx.engineer@gmail.com'\n"}], "added": [{"line_no": 10, "char_start": 375, "char_end": 403, "line": "  s.email       = '<EMAIL>'\n"}]}, "char_changes": {"deleted": [{"char_start": 375, "char_end": 423, "chars": "  s.email       = 'emersonx.engineer@gmail.com'\n"}], "added": [{"char_start": 375, "char_end": 403, "chars": "  s.email       = '<EMAIL>'\n"}]}}
{"func_name": 4347, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Shindo.tests('Fog::Identity[:openstack] | user requests', ['openstack']) do\n\n  @user_format = {\n    'id'   => String,\n    'name' => String,\n    'enabled'  => Fog::Boolean,\n    'email'    => String,\n    'tenantId' => Fog::Nullable::String\n  }\n\n  @identity = Fog::Identity[:openstack]\n\n  tests('success') do\n\n    @user_name = Fog::Mock.random_hex(64)\n    @user_name_update = Fog::Mock.random_hex(64)\n\n    tests(\"#create_user('#{@user_name}', 'mypassword', 'morph@example.com', 't3n4nt1d', true)\").formats(@user_format, false) do\n      @user = @identity.create_user(\n        @user_name, \"mypassword\", \"morph@example.com\",\n        OpenStack::Identity.get_tenant_id\n      ).body['user']\n    end\n\n    tests('#list_users').formats({'users' => [@user_format]}) do\n      @identity.list_users.body\n    end\n\n    tests('#get_user_by_id').formats(@user_format) do\n      @identity.get_user_by_id(@user['id']).body['user']\n    end\n\n    tests('#get_user_by_name').formats(@user_format) do\n      @identity.get_user_by_name(@user['name']).body['user']\n    end\n\n    tests(\"#update_user(#{@user['id']}, :name => 'fogupdateduser')\").succeeds do\n      @identity.update_user(@user['id'], :name => @user_name_update, :email => 'fog@test.com')\n    end\n\n    tests(\"#delete_user(#{@user['id']})\").succeeds do\n      @identity.delete_user(@user['id'])\n    end\n\n  end\nend\n", "func_src_after": "Shindo.tests('Fog::Identity[:openstack] | user requests', ['openstack']) do\n\n  @user_format = {\n    'id'   => String,\n    'name' => String,\n    'enabled'  => Fog::Boolean,\n    'email'    => String,\n    'tenantId' => Fog::Nullable::String\n  }\n\n  @identity = Fog::Identity[:openstack]\n\n  tests('success') do\n\n    @user_name = Fog::Mock.random_hex(64)\n    @user_name_update = Fog::Mock.random_hex(64)\n\n    tests(\"#create_user('#{@user_name}', 'mypassword', '<EMAIL>', 't3n4nt1d', true)\").formats(@user_format, false) do\n      @user = @identity.create_user(\n        @user_name, \"mypassword\", \"<EMAIL>\",\n        OpenStack::Identity.get_tenant_id\n      ).body['user']\n    end\n\n    tests('#list_users').formats({'users' => [@user_format]}) do\n      @identity.list_users.body\n    end\n\n    tests('#get_user_by_id').formats(@user_format) do\n      @identity.get_user_by_id(@user['id']).body['user']\n    end\n\n    tests('#get_user_by_name').formats(@user_format) do\n      @identity.get_user_by_name(@user['name']).body['user']\n    end\n\n    tests(\"#update_user(#{@user['id']}, :name => 'fogupdateduser')\").succeeds do\n      @identity.update_user(@user['id'], :name => @user_name_update, :email => '<EMAIL>')\n    end\n\n    tests(\"#delete_user(#{@user['id']})\").succeeds do\n      @identity.delete_user(@user['id'])\n    end\n\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 18, "char_start": 399, "char_end": 527, "line": "    tests(\"#create_user('#{@user_name}', 'mypassword', 'morph@example.com', 't3n4nt1d', true)\").formats(@user_format, false) do\n"}, {"line_no": 21, "char_start": 554, "char_end": 609, "line": "        @user_name, \"mypassword\", \"morph@example.com\",\n"}, {"line_no": 40, "char_start": 1104, "char_end": 1199, "line": "      @identity.update_user(@user['id'], :name => @user_name_update, :email => 'fog@test.com')\n"}], "added": [{"line_no": 19, "char_start": 399, "char_end": 517, "line": "    tests(\"#create_user('#{@user_name}', 'mypassword', '<EMAIL>', 't3n4nt1d', true)\").formats(@user_format, false) do\n"}, {"line_no": 22, "char_start": 554, "char_end": 599, "line": "        @user_name, \"mypassword\", \"<EMAIL>\",\n"}, {"line_no": 41, "char_start": 1104, "char_end": 1194, "line": "      @identity.update_user(@user['id'], :name => @user_name_update, :email => '<EMAIL>')\n"}]}, "char_changes": {"deleted": [{"char_start": 399, "char_end": 527, "chars": "    tests(\"#create_user('#{@user_name}', 'mypassword', 'morph@example.com', 't3n4nt1d', true)\").formats(@user_format, false) do\n"}, {"char_start": 554, "char_end": 609, "chars": "        @user_name, \"mypassword\", \"morph@example.com\",\n"}, {"char_start": 1104, "char_end": 1199, "chars": "      @identity.update_user(@user['id'], :name => @user_name_update, :email => 'fog@test.com')\n"}], "added": [{"char_start": 399, "char_end": 517, "chars": "    tests(\"#create_user('#{@user_name}', 'mypassword', '<EMAIL>', 't3n4nt1d', true)\").formats(@user_format, false) do\n"}, {"char_start": 554, "char_end": 599, "chars": "        @user_name, \"mypassword\", \"<EMAIL>\",\n"}, {"char_start": 1104, "char_end": 1194, "chars": "      @identity.update_user(@user['id'], :name => @user_name_update, :email => '<EMAIL>')\n"}]}}
{"func_name": 4349, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  EOH\nend\n\n# Provided by the omnibus-toolchain package\nif omnibus_toolchain_enabled?\n\n  # We need to configure the omnibus-build-essential's embedded git to use\n  # ca bundle that ships in the package. This can most likely be fixed by\n  # a well placed `./configure` option when compiling git. Follow this\n  # issue for more details:\n  #\n  #  https://github.com/chef/omnibus-build-essential/issues/7\n  #\n  execute \"git config --global http.sslCAinfo /opt/#{node['omnibus']['toolchain_name']}/embedded/ssl/certs/cacert.pem\" do\n    environment(\n      'PATH' => \"/opt/#{node['omnibus']['toolchain_name']}/embedded/bin\",\n      'HOME' => build_user_home,\n    )\n    user node['omnibus']['build_user']\n  end\n\n  return\nelsif windows?\n  windows_package 'Git version 1.9.0-preview20140217' do\n    source 'https://github.com/msysgit/msysgit/releases/download/Git-1.9.0-preview20140217/Git-1.9.0-preview20140217.exe'\n    checksum '22d2d3f43c8a3eb59820c50da81022e98d4df92c333dffaae1ae88aefbceedfc'\n    installer_type :inno\n    action :install\n  end\n\n  # Git is installed to Program Files (x86) on 64-bit machines and\n  # 'Program Files' on 32-bit machines\n  program_files = ENV['ProgramFiles(x86)'] || ENV['ProgramFiles']\n\n  git_paths  = []\n  git_paths << windows_safe_path_join(program_files, 'Git', 'Cmd')\n  git_paths << windows_safe_path_join(program_files, 'Git', 'libexec', 'git-core')\n  git_path   = git_paths.join(File::PATH_SEPARATOR)\n\n  omnibus_env['PATH'] << git_path\nelse\n  include_recipe 'omnibus::_bash'\n  include_recipe 'omnibus::_compile'\n  include_recipe 'omnibus::_openssl'\n  include_recipe 'omnibus::_user'\n\n  make           = 'make'\n  configure_args = '--prefix=/usr/local --without-tcltk'\n  git_environment    = { 'NO_GETTEXT' => '1' }\n", "func_src_after": "  EOH\nend\n\n# Provided by the omnibus-toolchain package\nif omnibus_toolchain_enabled?\n\n  # We need to configure the omnibus-build-essential's embedded git to use\n  # ca bundle that ships in the package. This can most likely be fixed by\n  # a well placed `./configure` option when compiling git. Follow this\n  # issue for more details:\n  #\n  #  https://github.com/chef/omnibus-build-essential/issues/7\n  #\n  execute \"git config --global http.sslCAinfo /opt/#{node['omnibus']['toolchain_name']}/embedded/ssl/certs/cacert.pem\" do\n    environment(\n      'PATH' => \"/opt/#{node['omnibus']['toolchain_name']}/embedded/bin\",\n      'HOME' => build_user_home,\n    )\n    user node['omnibus']['build_user']\n  end\n\n  return\nelsif windows?\n  windows_package 'Git version 1.9.0-preview20140217' do\n    source 'https://github.com/msysgit/msysgit/releases/download/Git-1.9.0-preview20140217/Git-1.9.0-preview20140217.exe'\n    checksum '22d2d3f43c8a3eb59820c50da81022e98d4df92c333dffaae1ae88aefbceedfc'\n    installer_type :inno\n    action :install\n  end\n\n  # Git is installed to Program Files (x86) on 64-bit machines and\n  # 'Program Files' on 32-bit machines\n  program_files = ENV['ProgramFiles(x86)'] || ENV['ProgramFiles']\n\n  git_paths  = []\n  git_paths << windows_safe_path_join(program_files, 'Git', 'Cmd')\n  git_paths << windows_safe_path_join(program_files, 'Git', 'libexec', 'git-core')\n  git_path   = git_paths.join(File::PATH_SEPARATOR)\n\n  omnibus_env['PATH'] << git_path\nelse\n  include_recipe 'omnibus::_bash'\n  include_recipe 'omnibus::_compile'\n  include_recipe 'omnibus::_openssl'\n  include_recipe 'omnibus::_user'\n\n  make           = 'make'\n  configure_args = '--prefix=/usr/local --without-tcltk'\n  git_environment    = { 'NO_GETTEXT' => '1' }\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4354, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# -*- encoding: utf-8 -*-\n# stub: jekyll-image-size 1.2.1 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"jekyll-image-size\".freeze\n  s.version = \"1.2.1\"\n\n  s.required_rubygems_version = Gem::Requirement.new(\">= 0\".freeze) if s.respond_to? :required_rubygems_version=\n  s.require_paths = [\"lib\".freeze]\n  s.authors = [\"Shane Brinkman-Davis Delamore\".freeze]\n  s.date = \"2019-08-01\"\n  s.description = \"Jekyll tag-plugin to read image sizes from static assets and output in many formats.\\n\\nGenerate your opengraph link-tags, img-tags, css, html props, or just output the width and height of an image. All output image-sizes\\ncan be scaled for retina support (/2 for @2x retina, /3 for @3x, etc...).\\n\".freeze\n  s.email = [\"shane@genui.com\".freeze]\n  s.homepage = \"https://github.com/generalui/jekyll-image-size\".freeze\n  s.licenses = [\"MIT\".freeze]\n  s.rubygems_version = \"3.2.3\".freeze\n  s.summary = \"Jekyll tag-plugin to read images and output image-sizes as: opengraph tags, img-tags, css and more - with retina support\".freeze\n\n  s.installed_by_version = \"3.2.3\" if s.respond_to? :installed_by_version\n\n  if s.respond_to? :specification_version then\n    s.specification_version = 4\n  end\n\n  if s.respond_to? :add_runtime_dependency then\n    s.add_runtime_dependency(%q<jekyll>.freeze, [\">= 3.7\"])\n    s.add_runtime_dependency(%q<fastimage>.freeze, [\">= 1.8\"])\n    s.add_development_dependency(%q<bundler>.freeze, [\"~> 2\"])\n    s.add_development_dependency(%q<rake>.freeze, [\"~> 10.0\"])\n    s.add_development_dependency(%q<rspec>.freeze, [\"~> 3.0\"])\n  else\n    s.add_dependency(%q<jekyll>.freeze, [\">= 3.7\"])\n    s.add_dependency(%q<fastimage>.freeze, [\">= 1.8\"])\n    s.add_dependency(%q<bundler>.freeze, [\"~> 2\"])\n    s.add_dependency(%q<rake>.freeze, [\"~> 10.0\"])\n    s.add_dependency(%q<rspec>.freeze, [\"~> 3.0\"])\n  end\nend\n", "func_src_after": "# -*- encoding: utf-8 -*-\n# stub: jekyll-image-size 1.2.1 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"jekyll-image-size\".freeze\n  s.version = \"1.2.1\"\n\n  s.required_rubygems_version = Gem::Requirement.new(\">= 0\".freeze) if s.respond_to? :required_rubygems_version=\n  s.require_paths = [\"lib\".freeze]\n  s.authors = [\"Shane Brinkman-Davis Delamore\".freeze]\n  s.date = \"2019-08-01\"\n  s.description = \"Jekyll tag-plugin to read image sizes from static assets and output in many formats.\\n\\nGenerate your opengraph link-tags, img-tags, css, html props, or just output the width and height of an image. All output image-sizes\\ncan be scaled for retina support (/2 for @2x retina, /3 for @3x, etc...).\\n\".freeze\n  s.email = [\"<EMAIL>\".freeze]\n  s.homepage = \"https://github.com/generalui/jekyll-image-size\".freeze\n  s.licenses = [\"MIT\".freeze]\n  s.rubygems_version = \"3.2.3\".freeze\n  s.summary = \"Jekyll tag-plugin to read images and output image-sizes as: opengraph tags, img-tags, css and more - with retina support\".freeze\n\n  s.installed_by_version = \"3.2.3\" if s.respond_to? :installed_by_version\n\n  if s.respond_to? :specification_version then\n    s.specification_version = 4\n  end\n\n  if s.respond_to? :add_runtime_dependency then\n    s.add_runtime_dependency(%q<jekyll>.freeze, [\">= 3.7\"])\n    s.add_runtime_dependency(%q<fastimage>.freeze, [\">= 1.8\"])\n    s.add_development_dependency(%q<bundler>.freeze, [\"~> 2\"])\n    s.add_development_dependency(%q<rake>.freeze, [\"~> 10.0\"])\n    s.add_development_dependency(%q<rspec>.freeze, [\"~> 3.0\"])\n  else\n    s.add_dependency(%q<jekyll>.freeze, [\">= 3.7\"])\n    s.add_dependency(%q<fastimage>.freeze, [\">= 1.8\"])\n    s.add_dependency(%q<bundler>.freeze, [\"~> 2\"])\n    s.add_dependency(%q<rake>.freeze, [\"~> 10.0\"])\n    s.add_dependency(%q<rspec>.freeze, [\"~> 3.0\"])\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 13, "char_start": 712, "char_end": 751, "line": "  s.email = [\"shane@genui.com\".freeze]\n"}], "added": [{"line_no": 14, "char_start": 712, "char_end": 743, "line": "  s.email = [\"<EMAIL>\".freeze]\n"}]}, "char_changes": {"deleted": [{"char_start": 712, "char_end": 751, "chars": "  s.email = [\"shane@genui.com\".freeze]\n"}], "added": [{"char_start": 712, "char_end": 743, "chars": "  s.email = [\"<EMAIL>\".freeze]\n"}]}}
{"func_name": 4363, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    i = 0\n    users = names.map do |name|\n      srand 0\n      User.create!(\n        default_params.merge(name: name, email: \"test_email#{i += 1}@test.xx\")\n      )\n    end\n\n    assert_equal expected_usernames, users.collect(&:username)\n  end\n\n  test 'age_range_from_birthday' do\n    assert_equal '18+', UserHelpers.age_range_from_birthday(33.years.ago.to_datetime)\n    assert_equal '18+', UserHelpers.age_range_from_birthday(18.years.ago.to_datetime)\n    assert_equal '13+', UserHelpers.age_range_from_birthday(17.years.ago.to_datetime)\n    assert_equal '13+', UserHelpers.age_range_from_birthday(14.years.ago.to_datetime)\n    assert_equal '13+', UserHelpers.age_range_from_birthday(13.years.ago.to_datetime)\n    assert_equal '8+', UserHelpers.age_range_from_birthday(12.years.ago.to_datetime)\n    assert_equal '8+', UserHelpers.age_range_from_birthday(8.years.ago.to_datetime)\n    assert_equal '4+', UserHelpers.age_range_from_birthday(7.years.ago.to_datetime)\n    assert_equal '4+', UserHelpers.age_range_from_birthday(5.years.ago.to_datetime)\n\n    # For some reason, 4.years.ago is interpreted as age 3 on localhost, while\n    # the test machine and CircleCI interpret it as age 4. Work around this by\n    # testing 4 years and 1 day ago, which is interpreted consistently in all\n    # environments.\n    assert_equal '4+', UserHelpers.age_range_from_birthday(4.years.ago.to_datetime - 1)\n\n    assert_nil UserHelpers.age_range_from_birthday(3.years.ago.to_datetime)\n    assert_nil UserHelpers.age_range_from_birthday(1.year.since.to_datetime)\n  end\nend\n", "func_src_after": "\n    i = 0\n    users = names.map do |name|\n      srand 0\n      User.create!(\n        default_params.merge(name: name, email: \"test_email#{i += 1}@test.xx\")\n      )\n    end\n\n    assert_equal expected_usernames, users.collect(&:username)\n  end\n\n  test 'age_range_from_birthday' do\n    assert_equal '18+', UserHelpers.age_range_from_birthday(33.years.ago.to_datetime)\n    assert_equal '18+', UserHelpers.age_range_from_birthday(18.years.ago.to_datetime)\n    assert_equal '13+', UserHelpers.age_range_from_birthday(17.years.ago.to_datetime)\n    assert_equal '13+', UserHelpers.age_range_from_birthday(14.years.ago.to_datetime)\n    assert_equal '13+', UserHelpers.age_range_from_birthday(13.years.ago.to_datetime)\n    assert_equal '8+', UserHelpers.age_range_from_birthday(12.years.ago.to_datetime)\n    assert_equal '8+', UserHelpers.age_range_from_birthday(8.years.ago.to_datetime)\n    assert_equal '4+', UserHelpers.age_range_from_birthday(7.years.ago.to_datetime)\n    assert_equal '4+', UserHelpers.age_range_from_birthday(5.years.ago.to_datetime)\n\n    # For some reason, 4.years.ago is interpreted as age 3 on localhost, while\n    # the test machine and CircleCI interpret it as age 4. Work around this by\n    # testing 4 years and 1 day ago, which is interpreted consistently in all\n    # environments.\n    assert_equal '4+', UserHelpers.age_range_from_birthday(4.years.ago.to_datetime - 1)\n\n    assert_nil UserHelpers.age_range_from_birthday(3.years.ago.to_datetime)\n    assert_nil UserHelpers.age_range_from_birthday(1.year.since.to_datetime)\n  end\nend\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4371, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#\n#  Be sure to run `pod spec lint MaterialColors.podspec' to ensure this is a\n#  valid spec and to remove all comments including this before submitting the spec.\n#\n#  To learn more about Podspec attributes see http://docs.cocoapods.org/specification.html\n#  To see working Podspecs in the CocoaPods repo see https://github.com/CocoaPods/Specs/\n#\n\nPod::Spec.new do |s|\n\n  s.name         \t= \"MaterialColors\"\n  s.version      \t= \"1.0.0\"\n  s.summary      \t= \"Implementation of Material Design Colors in Swift 2.1.\"\n  s.description  \t= <<-DESC\n  \t\t\t\t\t\tEverything you need to use the Google Material Design Colors.\n  \t\t\t\t\t\tIncludes the various colors in groupings and both \n  \t\t\t\t\t\tby static name and string lookup.\n  \t\t\t\t\t\tFun for the whole family.\n                   \t\t DESC\n  s.homepage     \t= \"https://github.com/dpyro/MaterialColors\"\n  s.screenshots  \t= \"https://raw.githubusercontent.com/dpyro/MaterialColors/master/screenshot.png\",\n  s.license      \t= { :type => \"MIT\", :file => \"LICENSE\" }\n  s.author          = { \"Sumant Manne\" => \"sumant.manne@gmail.com\" }\n  s.social_media_url= \"http://twitter.com/SumantManne\"\n  s.platform     \t= :ios, \"8.0\"\n  s.source       \t= { :git => \"https://github.com/dpyro/MaterialColors.git\", :tag => \"#{s.version}\" }\n  s.source_files  \t= \"MaterialColors/*.{h,swift}\"\n  s.requires_arc \t= true\n\nend\n", "func_src_after": "#\n#  Be sure to run `pod spec lint MaterialColors.podspec' to ensure this is a\n#  valid spec and to remove all comments including this before submitting the spec.\n#\n#  To learn more about Podspec attributes see http://docs.cocoapods.org/specification.html\n#  To see working Podspecs in the CocoaPods repo see https://github.com/CocoaPods/Specs/\n#\n\nPod::Spec.new do |s|\n\n  s.name         \t= \"MaterialColors\"\n  s.version      \t= \"1.0.0\"\n  s.summary      \t= \"Implementation of Material Design Colors in Swift 2.1.\"\n  s.description  \t= <<-DESC\n  \t\t\t\t\t\tEverything you need to use the Google Material Design Colors.\n  \t\t\t\t\t\tIncludes the various colors in groupings and both \n  \t\t\t\t\t\tby static name and string lookup.\n  \t\t\t\t\t\tFun for the whole family.\n                   \t\t DESC\n  s.homepage     \t= \"https://github.com/dpyro/MaterialColors\"\n  s.screenshots  \t= \"https://raw.githubusercontent.com/dpyro/MaterialColors/master/screenshot.png\",\n  s.license      \t= { :type => \"MIT\", :file => \"LICENSE\" }\n  s.author          = { \"Sumant Manne\" => \"<EMAIL>\" }\n  s.social_media_url= \"http://twitter.com/SumantManne\"\n  s.platform     \t= :ios, \"8.0\"\n  s.source       \t= { :git => \"https://github.com/dpyro/MaterialColors.git\", :tag => \"#{s.version}\" }\n  s.source_files  \t= \"MaterialColors/*.{h,swift}\"\n  s.requires_arc \t= true\n\nend\n", "line_changes": {"deleted": [{"line_no": 23, "char_start": 993, "char_end": 1062, "line": "  s.author          = { \"Sumant Manne\" => \"sumant.manne@gmail.com\" }\n"}], "added": [{"line_no": 24, "char_start": 993, "char_end": 1047, "line": "  s.author          = { \"Sumant Manne\" => \"<EMAIL>\" }\n"}]}, "char_changes": {"deleted": [{"char_start": 993, "char_end": 1062, "chars": "  s.author          = { \"Sumant Manne\" => \"sumant.manne@gmail.com\" }\n"}], "added": [{"char_start": 993, "char_end": 1047, "chars": "  s.author          = { \"Sumant Manne\" => \"<EMAIL>\" }\n"}]}}
{"func_name": 4374, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# -------------------------------------------------------------------------- #\n# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                #\n#                                                                            #\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may    #\n# not use this file except in compliance with the License. You may obtain    #\n# a copy of the License at                                                   #\n#                                                                            #\n# http://www.apache.org/licenses/LICENSE-2.0                                 #\n#                                                                            #\n# Unless required by applicable law or agreed to in writing, software        #\n# distributed under the License is distributed on an \"AS IS\" BASIS,          #\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #\n# See the License for the specific language governing permissions and        #\n# limitations under the License.                                             #\n#--------------------------------------------------------------------------- #\n\nif !ONE_LOCATION\n    REMOTES_LOCATION=\"/var/lib/one/remotes\"\nelse\n    REMOTES_LOCATION=ONE_LOCATION+\"/var/remotes\"\nend\n\n# TODO vcenter_driver should be stored in RUBY_LIB_LOCATION\n$: << REMOTES_LOCATION+\"/vmm/vcenter/\"\n\nMAX_VCENTER_PASSWORD_LENGTH = 22 #This is the maximum length for a vCenter password\n\nrequire 'vcenter_driver'\n\nhelpers do\n    def vcenter_client\n        hpref        = \"HTTP-\"\n        head_user    = \"X-VCENTER-USER\"\n        head_pwd     = \"X-VCENTER-PASSWORD\"\n        head_vhost   = \"X-VCENTER-HOST\"\n        reqenv       = request.env\n\n        vuser = reqenv[head_user] ? reqenv[head_user] : reqenv[hpref+head_user]\n        vpass = reqenv[head_pwd] ? reqenv[head_pwd] : reqenv[hpref+head_pwd]\n        vhost = reqenv[head_vhost] ? reqenv[head_vhost] : reqenv[hpref+head_vhost]\n\n        # Try with underscores\n        if vuser.nil? || vpass.nil? || vhost.nil?\n            hpref        = \"HTTP_\"\n            head_user    = \"X_VCENTER_USER\"\n            head_pwd     = \"X_VCENTER_PASSWORD\"\n            head_vhost   = \"X_VCENTER_HOST\"\n\n            vuser = reqenv[head_user] ? reqenv[head_user] : reqenv[hpref+head_user]\n            vpass = reqenv[head_pwd] ? reqenv[head_pwd] : reqenv[hpref+head_pwd]", "func_src_after": "# -------------------------------------------------------------------------- #\n# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                #\n#                                                                            #\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may    #\n# not use this file except in compliance with the License. You may obtain    #\n# a copy of the License at                                                   #\n#                                                                            #\n# http://www.apache.org/licenses/LICENSE-2.0                                 #\n#                                                                            #\n# Unless required by applicable law or agreed to in writing, software        #\n# distributed under the License is distributed on an \"AS IS\" BASIS,          #\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #\n# See the License for the specific language governing permissions and        #\n# limitations under the License.                                             #\n#--------------------------------------------------------------------------- #\n\nif !ONE_LOCATION\n    REMOTES_LOCATION=\"/var/lib/one/remotes\"\nelse\n    REMOTES_LOCATION=ONE_LOCATION+\"/var/remotes\"\nend\n\n# TODO vcenter_driver should be stored in RUBY_LIB_LOCATION\n$: << REMOTES_LOCATION+\"/vmm/vcenter/\"\n\nMAX_VCENTER_PASSWORD_LENGTH = 22 #This is the maximum length for a vCenter password\n\nrequire 'vcenter_driver'\n\nhelpers do\n    def vcenter_client\n        hpref        = \"HTTP-\"\n        head_user    = \"X-VCENTER-USER\"\n        head_pwd     = \"X-VCENTER-PASSWORD\"\n        head_vhost   = \"X-VCENTER-HOST\"\n        reqenv       = request.env\n\n        vuser = reqenv[head_user] ? reqenv[head_user] : reqenv[hpref+head_user]\n        vpass = reqenv[head_pwd] ? reqenv[head_pwd] : reqenv[hpref+head_pwd]\n        vhost = reqenv[head_vhost] ? reqenv[head_vhost] : reqenv[hpref+head_vhost]\n\n        # Try with underscores\n        if vuser.nil? || vpass.nil? || vhost.nil?\n            hpref        = \"HTTP_\"\n            head_user    = \"X_VCENTER_USER\"\n            head_pwd     = \"X_VCENTER_PASSWORD\"\n            head_vhost   = \"X_VCENTER_HOST\"\n\n            vuser = reqenv[head_user] ? reqenv[head_user] : reqenv[hpref+head_user]\n            vpass = reqenv[head_pwd] ? reqenv[head_pwd] : reqenv[hpref+head_pwd]", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4386, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require_relative \"test_helper\"\n\nclass AuthTrailTest < ActionDispatch::IntegrationTest\n  def setup\n    User.delete_all\n    LoginActivity.delete_all\n  end\n\n  def test_success\n    user = User.create!(email: \"test@example.org\")\n    post users_sign_in_url, params: {user: {email: \"test@example.org\", password: 'sEcReT'}}\n    assert_response :success\n\n    assert_equal 1, LoginActivity.count\n    login_activity = LoginActivity.last\n    assert_equal \"user\", login_activity.scope\n    assert_equal \"password_strategy\", login_activity.strategy\n    assert_equal \"test@example.org\", login_activity.identity\n    assert login_activity.success\n    assert_nil login_activity.failure_reason\n    assert_equal user, login_activity.user\n    assert_equal \"users#sign_in\", login_activity.context\n  end\n\n  def test_failure\n    post users_sign_in_url, params: {user: {email: \"test@example.org\"}}\n    assert_response :unauthorized\n\n    assert_equal 1, LoginActivity.count\n    login_activity = LoginActivity.last\n    assert_equal \"user\", login_activity.scope\n    assert_equal \"password_strategy\", login_activity.strategy\n    assert_equal \"test@example.org\", login_activity.identity\n    refute login_activity.success\n    assert_equal \"Could not sign in\", login_activity.failure_reason\n    assert_nil login_activity.user\n    assert_equal \"users#sign_in\", login_activity.context\n  end\n\n  def test_failure_with_recoverable_user\n    user = User.create!(email: \"test@example.org\")\n\n    AuthTrail.identity_fetch_method = ->(identity) do\n      User.find_by(email: identity)\n    end\n\n    post users_sign_in_url, params: {user: {email: \"test@example.org\"}}\n    assert_response :unauthorized\n\n    assert_equal 1, LoginActivity.count", "func_src_after": "require_relative \"test_helper\"\n\nclass AuthTrailTest < ActionDispatch::IntegrationTest\n  def setup\n    User.delete_all\n    LoginActivity.delete_all\n  end\n\n  def test_success\n    user = User.create!(email: \"<EMAIL>\")\n    post users_sign_in_url, params: {user: {email: \"<EMAIL>\", password: 'sEcReT'}}\n    assert_response :success\n\n    assert_equal 1, LoginActivity.count\n    login_activity = LoginActivity.last\n    assert_equal \"user\", login_activity.scope\n    assert_equal \"password_strategy\", login_activity.strategy\n    assert_equal \"<EMAIL>\", login_activity.identity\n    assert login_activity.success\n    assert_nil login_activity.failure_reason\n    assert_equal user, login_activity.user\n    assert_equal \"users#sign_in\", login_activity.context\n  end\n\n  def test_failure\n    post users_sign_in_url, params: {user: {email: \"<EMAIL>\"}}\n    assert_response :unauthorized\n\n    assert_equal 1, LoginActivity.count\n    login_activity = LoginActivity.last\n    assert_equal \"user\", login_activity.scope\n    assert_equal \"password_strategy\", login_activity.strategy\n    assert_equal \"<EMAIL>\", login_activity.identity\n    refute login_activity.success\n    assert_equal \"Could not sign in\", login_activity.failure_reason\n    assert_nil login_activity.user\n    assert_equal \"users#sign_in\", login_activity.context\n  end\n\n  def test_failure_with_recoverable_user\n    user = User.create!(email: \"<EMAIL>\")\n\n    AuthTrail.identity_fetch_method = ->(identity) do\n      User.find_by(email: identity)\n    end\n\n    post users_sign_in_url, params: {user: {email: \"<EMAIL>\"}}\n    assert_response :unauthorized\n\n    assert_equal 1, LoginActivity.count", "line_changes": {"deleted": [{"line_no": 10, "char_start": 173, "char_end": 224, "line": "    user = User.create!(email: \"test@example.org\")\n"}, {"line_no": 12, "char_start": 215, "char_end": 307, "line": "    post users_sign_in_url, params: {user: {email: \"test@example.org\", password: 'sEcReT'}}\n"}, {"line_no": 20, "char_start": 516, "char_end": 577, "line": "    assert_equal \"test@example.org\", login_activity.identity\n"}, {"line_no": 29, "char_start": 773, "char_end": 845, "line": "    post users_sign_in_url, params: {user: {email: \"test@example.org\"}}\n"}, {"line_no": 37, "char_start": 1059, "char_end": 1120, "line": "    assert_equal \"test@example.org\", login_activity.identity\n"}, {"line_no": 46, "char_start": 1353, "char_end": 1404, "line": "    user = User.create!(email: \"test@example.org\")\n"}, {"line_no": 53, "char_start": 1495, "char_end": 1567, "line": "    post users_sign_in_url, params: {user: {email: \"test@example.org\"}}\n"}], "added": [{"line_no": 11, "char_start": 173, "char_end": 215, "line": "    user = User.create!(email: \"<EMAIL>\")\n"}, {"line_no": 13, "char_start": 215, "char_end": 298, "line": "    post users_sign_in_url, params: {user: {email: \"<EMAIL>\", password: 'sEcReT'}}\n"}, {"line_no": 21, "char_start": 516, "char_end": 568, "line": "    assert_equal \"<EMAIL>\", login_activity.identity\n"}, {"line_no": 30, "char_start": 773, "char_end": 836, "line": "    post users_sign_in_url, params: {user: {email: \"<EMAIL>\"}}\n"}, {"line_no": 38, "char_start": 1059, "char_end": 1111, "line": "    assert_equal \"<EMAIL>\", login_activity.identity\n"}, {"line_no": 47, "char_start": 1353, "char_end": 1395, "line": "    user = User.create!(email: \"<EMAIL>\")\n"}, {"line_no": 54, "char_start": 1495, "char_end": 1558, "line": "    post users_sign_in_url, params: {user: {email: \"<EMAIL>\"}}\n"}]}, "char_changes": {"deleted": [{"char_start": 173, "char_end": 224, "chars": "    user = User.create!(email: \"test@example.org\")\n"}, {"char_start": 215, "char_end": 307, "chars": "    post users_sign_in_url, params: {user: {email: \"test@example.org\", password: 'sEcReT'}}\n"}, {"char_start": 516, "char_end": 577, "chars": "    assert_equal \"test@example.org\", login_activity.identity\n"}, {"char_start": 773, "char_end": 845, "chars": "    post users_sign_in_url, params: {user: {email: \"test@example.org\"}}\n"}, {"char_start": 1059, "char_end": 1120, "chars": "    assert_equal \"test@example.org\", login_activity.identity\n"}, {"char_start": 1353, "char_end": 1404, "chars": "    user = User.create!(email: \"test@example.org\")\n"}, {"char_start": 1495, "char_end": 1567, "chars": "    post users_sign_in_url, params: {user: {email: \"test@example.org\"}}\n"}], "added": [{"char_start": 173, "char_end": 215, "chars": "    user = User.create!(email: \"<EMAIL>\")\n"}, {"char_start": 215, "char_end": 298, "chars": "    post users_sign_in_url, params: {user: {email: \"<EMAIL>\", password: 'sEcReT'}}\n"}, {"char_start": 516, "char_end": 568, "chars": "    assert_equal \"<EMAIL>\", login_activity.identity\n"}, {"char_start": 773, "char_end": 836, "chars": "    post users_sign_in_url, params: {user: {email: \"<EMAIL>\"}}\n"}, {"char_start": 1059, "char_end": 1111, "chars": "    assert_equal \"<EMAIL>\", login_activity.identity\n"}, {"char_start": 1353, "char_end": 1395, "chars": "    user = User.create!(email: \"<EMAIL>\")\n"}, {"char_start": 1495, "char_end": 1558, "chars": "    post users_sign_in_url, params: {user: {email: \"<EMAIL>\"}}\n"}]}}
{"func_name": 4392, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    result = webhooks_service.delete({\n                                       webhook_id: webhook_id,\n                                     })\n    puts \"result=>#{result}\" unless result[\"success\"]\n    assert_equal(result[\"success\"], true)\n  end\n\n  def test_webhooks_verify_signature\n    data = {}\n    data[:hello] = 'hello'\n    result = webhooks_service.verify_signature({\n                                                 version: \"2\",\n                                                 webhook_secret: \"mySecret\",\n                                                 request_timestamp: \"1559902637\",\n                                                 signature: \"2c56c143550c603a6ff47054803f03ee4755c9c707986ae27f7ca1dd1c92a824\",\n                                                 stringified_data: data.to_json\n                                     })\n    puts \"result=>#{result}\" unless result\n    assert_equal(result, true)\n  end\n\nend\n", "func_src_after": "    result = webhooks_service.delete({\n                                       webhook_id: webhook_id,\n                                     })\n    puts \"result=>#{result}\" unless result[\"success\"]\n    assert_equal(result[\"success\"], true)\n  end\n\n  def test_webhooks_verify_signature\n    data = {}\n    data[:hello] = 'hello'\n    result = webhooks_service.verify_signature({\n                                                 version: \"2\",\n                                                 webhook_secret: \"mySecret\",\n                                                 request_timestamp: \"1559902637\",\n                                                 signature: \"2c56c143550c603a6ff47054803f03ee4755c9c707986ae27f7ca1dd1c92a824\",\n                                                 stringified_data: data.to_json\n                                     })\n    puts \"result=>#{result}\" unless result\n    assert_equal(result, true)\n  end\n\nend\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4398, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": " \n    public\n\n    def userid_filter\n      if @userid.blank?\n        Net::LDAP::Filter.eq(@config[:userid_attribute], self.send(@config[:userid_attribute]).first) \n      else\n        Net::LDAP::Filter.eq(@config[:userid_attribute], @userid)\n      end\n    end\n\n    def user_filter\n      Net::LDAP::Filter.construct(@config[:user_filter])\n    end\n\n    def group_filter\n      Net::LDAP::Filter.construct(@config[:group_filter])\n    end\n\n    def computer_filter\n      Net::LDAP::Filter.construct(@config[:computer_filter])\n    end\n\n    def user_exists?\n      search(userid_filter)\n    end\n\n    def search_for_collection(filter, options=nil)\n      begin\n        collection = Array.new\n        if options and options.has_key?(:attributes) and not options[:attributes].nil?\n          attributes = (Array(options[:attributes]) + [@config[:userid_attribute], 'objectclass']).uniq\n        else\n          attributes = nil\n        end\n        puts options.inspect\n        puts attributes.inspect\n        if options and options.has_key? :with_filter\n          with_filter = options[:with_filter]\n        else\n          with_filter = self.user_filter\n        end\n        Rails.logger.info \"Filter: #{filter & with_filter}\"\n        Rails.logger.info \"Attributes: #{attributes.inspect}\"\n        @current_connection.search(:filter => (filter & with_filter), :attributes => attributes) do |e|\n          userid = e.instance_variable_get(\"@myhash\")[@config[:userid_attribute].to_sym].first\n          collection << Kernel.const_get(self.class.to_s.to_sym).send(:new, userid, e) unless userid.nil?\n        end\n        return collection if not collection.empty?\n      rescue => e", "func_src_after": " \n    public\n\n    def userid_filter\n      if @userid.blank?\n        Net::LDAP::Filter.eq(@config[:userid_attribute], self.send(@config[:userid_attribute]).first) \n      else\n        Net::LDAP::Filter.eq(@config[:userid_attribute], @userid)\n      end\n    end\n\n    def user_filter\n      Net::LDAP::Filter.construct(@config[:user_filter])\n    end\n\n    def group_filter\n      Net::LDAP::Filter.construct(@config[:group_filter])\n    end\n\n    def computer_filter\n      Net::LDAP::Filter.construct(@config[:computer_filter])\n    end\n\n    def user_exists?\n      search(userid_filter)\n    end\n\n    def search_for_collection(filter, options=nil)\n      begin\n        collection = Array.new\n        if options and options.has_key?(:attributes) and not options[:attributes].nil?\n          attributes = (Array(options[:attributes]) + [@config[:userid_attribute], 'objectclass']).uniq\n        else\n          attributes = nil\n        end\n        puts options.inspect\n        puts attributes.inspect\n        if options and options.has_key? :with_filter\n          with_filter = options[:with_filter]\n        else\n          with_filter = self.user_filter\n        end\n        Rails.logger.info \"Filter: #{filter & with_filter}\"\n        Rails.logger.info \"Attributes: #{attributes.inspect}\"\n        @current_connection.search(:filter => (filter & with_filter), :attributes => attributes) do |e|\n          userid = e.instance_variable_get(\"@myhash\")[@config[:userid_attribute].to_sym].first\n          collection << Kernel.const_get(self.class.to_s.to_sym).send(:new, userid, e) unless userid.nil?\n        end\n        return collection if not collection.empty?\n      rescue => e", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4407, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    end\n\n    context 'when deploying instances with a persistent disk' do\n      it 'recreates VM with correct CPI requests' do\n        manifest_hash = Bosh::Spec::NetworkingManifest.deployment_manifest\n        manifest_hash['jobs'] = [\n          Bosh::Spec::Deployments.simple_job(\n            name: 'first-job',\n            static_ips: ['192.168.1.10'],\n            instances: 1,\n            templates: ['name' => 'foobar_without_packages'],\n            persistent_disk_pool: Bosh::Spec::Deployments.disk_pool['name'],\n          )\n        ]\n        manifest_hash.merge!({\n          'tags' => {\n            'tag1' => 'value1',\n          },\n        })\n\n        cloud_config_hash = Bosh::Spec::Deployments.simple_cloud_config\n        cloud_config_hash['networks'].first['subnets'].first['static'] = ['192.168.1.10', '192.168.1.11']\n        cloud_config_hash['disk_pools'] = [Bosh::Spec::Deployments.disk_pool]\n        deploy_from_scratch(manifest_hash: manifest_hash, cloud_config_hash: cloud_config_hash)\n        first_deploy_invocations = current_sandbox.cpi.invocations\n\n        expect(first_deploy_invocations[0].method_name).to eq('create_stemcell')\n        expect(first_deploy_invocations[0].inputs).to match({\n          'image_path' => String,\n          'cloud_properties' => {\n            'property1' => 'test',\n            'property2' => 'test'\n          }\n        })\n\n        expect(first_deploy_invocations[1].method_name).to eq('create_vm')\n        expect(first_deploy_invocations[1].inputs).to match({\n          'agent_id' => String,\n          'stemcell_id' => String,\n          'cloud_properties' => {},\n          'networks' => {\n            'a' => {\n              'ip' => '192.168.1.10',\n              'netmask' => '255.255.255.0',\n              'cloud_properties' => {},\n              'default' => ['dns', 'gateway'],\n              'dns' => ['192.168.1.1', '192.168.1.2'],\n              'gateway' => '192.168.1.1',\n            }\n          },", "func_src_after": "    end\n\n    context 'when deploying instances with a persistent disk' do\n      it 'recreates VM with correct CPI requests' do\n        manifest_hash = Bosh::Spec::NetworkingManifest.deployment_manifest\n        manifest_hash['jobs'] = [\n          Bosh::Spec::Deployments.simple_job(\n            name: 'first-job',\n            static_ips: ['<IP-Address>'],\n            instances: 1,\n            templates: ['name' => 'foobar_without_packages'],\n            persistent_disk_pool: Bosh::Spec::Deployments.disk_pool['name'],\n          )\n        ]\n        manifest_hash.merge!({\n          'tags' => {\n            'tag1' => 'value1',\n          },\n        })\n\n        cloud_config_hash = Bosh::Spec::Deployments.simple_cloud_config\n        cloud_config_hash['networks'].first['subnets'].first['static'] = ['<IP-Address>', '<IP-Address>']\n        cloud_config_hash['disk_pools'] = [Bosh::Spec::Deployments.disk_pool]\n        deploy_from_scratch(manifest_hash: manifest_hash, cloud_config_hash: cloud_config_hash)\n        first_deploy_invocations = current_sandbox.cpi.invocations\n\n        expect(first_deploy_invocations[0].method_name).to eq('create_stemcell')\n        expect(first_deploy_invocations[0].inputs).to match({\n          'image_path' => String,\n          'cloud_properties' => {\n            'property1' => 'test',\n            'property2' => 'test'\n          }\n        })\n\n        expect(first_deploy_invocations[1].method_name).to eq('create_vm')\n        expect(first_deploy_invocations[1].inputs).to match({\n          'agent_id' => String,\n          'stemcell_id' => String,\n          'cloud_properties' => {},\n          'networks' => {\n            'a' => {\n              'ip' => '<IP-Address>',\n              'netmask' => '<IP-Address>',\n              'cloud_properties' => {},\n              'default' => ['dns', 'gateway'],\n              'dns' => ['<IP-Address>', '<IP-Address>'],\n              'gateway' => '<IP-Address>',\n            }\n          },", "line_changes": {"deleted": [{"line_no": 9, "char_start": 313, "char_end": 355, "line": "            static_ips: ['192.168.1.10'],\n"}, {"line_no": 23, "char_start": 724, "char_end": 830, "line": "        cloud_config_hash['networks'].first['subnets'].first['static'] = ['192.168.1.10', '192.168.1.11']\n"}, {"line_no": 45, "char_start": 1663, "char_end": 1701, "line": "              'ip' => '192.168.1.10',\n"}, {"line_no": 46, "char_start": 1663, "char_end": 1707, "line": "              'netmask' => '255.255.255.0',\n"}, {"line_no": 51, "char_start": 1831, "char_end": 1886, "line": "              'dns' => ['192.168.1.1', '192.168.1.2'],\n"}, {"line_no": 52, "char_start": 1831, "char_end": 1873, "line": "              'gateway' => '192.168.1.1',\n"}], "added": [{"line_no": 10, "char_start": 313, "char_end": 355, "line": "            static_ips: ['<IP-Address>'],\n"}, {"line_no": 24, "char_start": 724, "char_end": 830, "line": "        cloud_config_hash['networks'].first['subnets'].first['static'] = ['<IP-Address>', '<IP-Address>']\n"}, {"line_no": 47, "char_start": 1663, "char_end": 1701, "line": "              'ip' => '<IP-Address>',\n"}, {"line_no": 48, "char_start": 1701, "char_end": 1744, "line": "              'netmask' => '<IP-Address>',\n"}, {"line_no": 53, "char_start": 1831, "char_end": 1888, "line": "              'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"line_no": 54, "char_start": 1888, "char_end": 1931, "line": "              'gateway' => '<IP-Address>',\n"}]}, "char_changes": {"deleted": [{"char_start": 313, "char_end": 355, "chars": "            static_ips: ['192.168.1.10'],\n"}, {"char_start": 724, "char_end": 830, "chars": "        cloud_config_hash['networks'].first['subnets'].first['static'] = ['192.168.1.10', '192.168.1.11']\n"}, {"char_start": 1663, "char_end": 1701, "chars": "              'ip' => '192.168.1.10',\n"}, {"char_start": 1663, "char_end": 1707, "chars": "              'netmask' => '255.255.255.0',\n"}, {"char_start": 1831, "char_end": 1886, "chars": "              'dns' => ['192.168.1.1', '192.168.1.2'],\n"}, {"char_start": 1831, "char_end": 1873, "chars": "              'gateway' => '192.168.1.1',\n"}], "added": [{"char_start": 313, "char_end": 355, "chars": "            static_ips: ['<IP-Address>'],\n"}, {"char_start": 724, "char_end": 830, "chars": "        cloud_config_hash['networks'].first['subnets'].first['static'] = ['<IP-Address>', '<IP-Address>']\n"}, {"char_start": 1663, "char_end": 1701, "chars": "              'ip' => '<IP-Address>',\n"}, {"char_start": 1701, "char_end": 1744, "chars": "              'netmask' => '<IP-Address>',\n"}, {"char_start": 1831, "char_end": 1888, "chars": "              'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"char_start": 1888, "char_end": 1931, "chars": "              'gateway' => '<IP-Address>',\n"}]}}
{"func_name": 4422, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "desc 'set of console tasks for ops team'\nnamespace :sms do\n  desc 'Send an SMS to all guests to save the date'\n  task :save_the_date => [:environment] do |t|\n    session = GoogleDrive.saved_session(\n      \"./config/google_config_new.json\",\n      nil,\n      ENV[\"GOOGLE_CLIENT_ID\"],\n      ENV[\"GOOGLE_CLIENT_SECRET\"]\n    )\n\n    ws = session.spreadsheet_by_key(\"1-DVANo0uHCxvv8CBpXY-DsbKvQhSbS9_jaUkmlASfEE\").worksheets[5]\n\n    guests = []\n    (2..ws.rows.length).each do |row|\n      person = {\n        number: ws[row, 1],\n        name: ws[row, 2],\n        message_count: ws[row, 3],\n      }\n\n      guests << person if person[:message_count].to_i < 1\n    end\n\n    @twilio = Twilio::REST::Client.new(ENV[\"TWILIO_SID\"], ENV[\"TWILIO_TOKEN\"])\n    guests.each_with_index do |guest, index|\n      row = (index + 1) + 1 # Headings are on row 1\n\n      message =\n      <<~EOS\n        🌺🍃🌺👰🤵🌺🍃🌺\n\n        Dear #{guest[:name]},\n\n        💌 Save the date!\n\n        Jenny Baskerville and Peter Roome are delighted to invite you to their wedding.\n\n        Saturday 15th September, 2018.\n\n        The Copse, Mill Lane, Kidmore End, Oxon, RG4 9HA. Map 🗺 -> https://goo.gl/vZdmsp.\n\n        The ceremony will begin at 2pm. We are sorry we are unable to accommodate children.\n\n        Please reply YES if you are saving the date and can join us.\n\n        Reply NO if sadly you have something better to do 😉.\n\n        #roomerville\n", "func_src_after": "desc 'set of console tasks for ops team'\nnamespace :sms do\n  desc 'Send an SMS to all guests to save the date'\n  task :save_the_date => [:environment] do |t|\n    session = GoogleDrive.saved_session(\n      \"./config/google_config_new.json\",\n      nil,\n      ENV[\"GOOGLE_CLIENT_ID\"],\n      ENV[\"GOOGLE_CLIENT_SECRET\"]\n    )\n\n    ws = session.spreadsheet_by_key(\"1-DVANo0uHCxvv8CBpXY-DsbKvQhSbS9_jaUkmlASfEE\").worksheets[5]\n\n    guests = []\n    (2..ws.rows.length).each do |row|\n      person = {\n        number: ws[row, 1],\n        name: ws[row, 2],\n        message_count: ws[row, 3],\n      }\n\n      guests << person if person[:message_count].to_i < 1\n    end\n\n    @twilio = Twilio::REST::Client.new(ENV[\"TWILIO_SID\"], ENV[\"TWILIO_TOKEN\"])\n    guests.each_with_index do |guest, index|\n      row = (index + 1) + 1 # Headings are on row 1\n\n      message =\n      <<~EOS\n        🌺🍃🌺👰🤵🌺🍃🌺\n\n        Dear #{guest[:name]},\n\n        💌 Save the date!\n\n        Jenny Baskerville and Peter Roome are delighted to invite you to their wedding.\n\n        Saturday 15th September, 2018.\n\n        The Copse, Mill Lane, Kidmore End, Oxon, RG4 9HA. Map 🗺 -> https://goo.gl/vZdmsp.\n\n        The ceremony will begin at 2pm. We are sorry we are unable to accommodate children.\n\n        Please reply YES if you are saving the date and can join us.\n\n        Reply NO if sadly you have something better to do 😉.\n\n        #roomerville\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4451, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require 'rails_helper'\n\nRSpec.describe Comment, type: :model do\n  let(:user1) { User.create(name: 'user1', email: 'user1@hotmail.com', password: 'password') }\n  let(:user2) { User.create(name: 'user2', email: 'user2@hotmail.com', password: 'password') }\n  let(:post) { user1.posts.create(content: 'test post') }\n  let(:comment1) { Comment.create(content: 'test comment') }\n  let(:comment2) { Comment.create(content: 'test comment') }\n\n  describe 'a post can have comments' do\n    it 'user can create a comment on posts' do\n      comment1.post_id = post.id\n      comment1.user = user2\n      comment1.save\n\n      expect(post.comments.size).to eq(1)\n    end\n\n    it 'user can create more than one comment on posts' do\n      comment1.post_id = post.id\n      comment1.user = user2\n      comment1.save\n\n      comment2.post_id = post.id\n      comment2.user = user2\n      comment2.save\n\n      expect(post.comments.size).to eq(2)\n    end\n  end\nend\n", "func_src_after": "require 'rails_helper'\n\nRSpec.describe Comment, type: :model do\n  let(:user1) { User.create(name: 'user1', email: '<EMAIL>', password: 'password') }\n  let(:user2) { User.create(name: 'user2', email: '<EMAIL>', password: 'password') }\n  let(:post) { user1.posts.create(content: 'test post') }\n  let(:comment1) { Comment.create(content: 'test comment') }\n  let(:comment2) { Comment.create(content: 'test comment') }\n\n  describe 'a post can have comments' do\n    it 'user can create a comment on posts' do\n      comment1.post_id = post.id\n      comment1.user = user2\n      comment1.save\n\n      expect(post.comments.size).to eq(1)\n    end\n\n    it 'user can create more than one comment on posts' do\n      comment1.post_id = post.id\n      comment1.user = user2\n      comment1.save\n\n      comment2.post_id = post.id\n      comment2.user = user2\n      comment2.save\n\n      expect(post.comments.size).to eq(2)\n    end\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 64, "char_end": 159, "line": "  let(:user1) { User.create(name: 'user1', email: 'user1@hotmail.com', password: 'password') }\n"}, {"line_no": 6, "char_start": 149, "char_end": 244, "line": "  let(:user2) { User.create(name: 'user2', email: 'user2@hotmail.com', password: 'password') }\n"}], "added": [{"line_no": 5, "char_start": 64, "char_end": 149, "line": "  let(:user1) { User.create(name: 'user1', email: '<EMAIL>', password: 'password') }\n"}, {"line_no": 7, "char_start": 149, "char_end": 234, "line": "  let(:user2) { User.create(name: 'user2', email: '<EMAIL>', password: 'password') }\n"}]}, "char_changes": {"deleted": [{"char_start": 64, "char_end": 159, "chars": "  let(:user1) { User.create(name: 'user1', email: 'user1@hotmail.com', password: 'password') }\n"}, {"char_start": 149, "char_end": 244, "chars": "  let(:user2) { User.create(name: 'user2', email: 'user2@hotmail.com', password: 'password') }\n"}], "added": [{"char_start": 64, "char_end": 149, "chars": "  let(:user1) { User.create(name: 'user1', email: '<EMAIL>', password: 'password') }\n"}, {"char_start": 149, "char_end": 234, "chars": "  let(:user2) { User.create(name: 'user2', email: '<EMAIL>', password: 'password') }\n"}]}}
{"func_name": 4456, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# frozen_string_literal: true\n\nRSpec.describe Mihari::TypeChecker do\n  subject { described_class }\n\n  describe \".type\" do\n    context \"when given an ip address\" do\n      it do\n        expect(subject.type(\"1.1.1.1\")).to eq(\"ip\")\n      end\n    end\n\n    context \"when given a domain\" do\n      it do\n        expect(subject.type(\"example.com\")).to eq(\"domain\")\n      end\n    end\n\n    context \"when given a url\" do\n      it do\n        expect(subject.type(\"http://example.com\")).to eq(\"url\")\n      end\n    end\n\n    context \"when given a hash\" do\n      it do\n        expect(subject.type(\"275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f\")).to eq(\"hash\")\n      end\n    end\n\n    context \"when given an email\" do\n      it do\n        expect(subject.type(\"example@gmail.com\")).to eq(\"mail\")\n      end\n    end\n  end\n\n  describe \".detailed_type\" do\n    context \"when given a sha256\" do\n      it do\n        expect(subject.detailed_type(\"275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f\")).to eq(\"sha256\")\n      end\n    end\n\n    context \"when given a md5\" do\n      it do\n        expect(subject.detailed_type(\"44d88612fea8a8f36de82e1278abb02f\")).to eq(\"md5\")\n      end\n    end\n  end", "func_src_after": "# frozen_string_literal: true\n\nRSpec.describe Mihari::TypeChecker do\n  subject { described_class }\n\n  describe \".type\" do\n    context \"when given an ip address\" do\n      it do\n        expect(subject.type(\"<IP-Address>\")).to eq(\"ip\")\n      end\n    end\n\n    context \"when given a domain\" do\n      it do\n        expect(subject.type(\"example.com\")).to eq(\"domain\")\n      end\n    end\n\n    context \"when given a url\" do\n      it do\n        expect(subject.type(\"http://example.com\")).to eq(\"url\")\n      end\n    end\n\n    context \"when given a hash\" do\n      it do\n        expect(subject.type(\"275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f\")).to eq(\"hash\")\n      end\n    end\n\n    context \"when given an email\" do\n      it do\n        expect(subject.type(\"<EMAIL>\")).to eq(\"mail\")\n      end\n    end\n  end\n\n  describe \".detailed_type\" do\n    context \"when given a sha256\" do\n      it do\n        expect(subject.detailed_type(\"275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f\")).to eq(\"sha256\")\n      end\n    end\n\n    context \"when given a md5\" do\n      it do\n        expect(subject.detailed_type(\"44d88612fea8a8f36de82e1278abb02f\")).to eq(\"md5\")\n      end\n    end\n  end", "line_changes": {"deleted": [{"line_no": 9, "char_start": 176, "char_end": 228, "line": "        expect(subject.type(\"1.1.1.1\")).to eq(\"ip\")\n"}, {"line_no": 34, "char_start": 735, "char_end": 799, "line": "        expect(subject.type(\"example@gmail.com\")).to eq(\"mail\")\n"}], "added": [{"line_no": 10, "char_start": 176, "char_end": 233, "line": "        expect(subject.type(\"<IP-Address>\")).to eq(\"ip\")\n"}, {"line_no": 35, "char_start": 735, "char_end": 789, "line": "        expect(subject.type(\"<EMAIL>\")).to eq(\"mail\")\n"}]}, "char_changes": {"deleted": [{"char_start": 176, "char_end": 228, "chars": "        expect(subject.type(\"1.1.1.1\")).to eq(\"ip\")\n"}, {"char_start": 735, "char_end": 799, "chars": "        expect(subject.type(\"example@gmail.com\")).to eq(\"mail\")\n"}], "added": [{"char_start": 176, "char_end": 233, "chars": "        expect(subject.type(\"<IP-Address>\")).to eq(\"ip\")\n"}, {"char_start": 735, "char_end": 789, "chars": "        expect(subject.type(\"<EMAIL>\")).to eq(\"mail\")\n"}]}}
{"func_name": 4459, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      visit edit_user_registration_path\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be true\n    end\n  end\n\n  context 'when a user has both a password and oauth set up' do\n    let(:user) do\n      build(:user, password: 'MyPassword').tap do |u|\n        u.authentications.build(provider: 'github', uid: 'abcdefg')\n        u.save!\n      end\n    end\n\n    it \"allows password to be changed\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      fill_in(\"Current password\", with: \"MyPassword\")\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be true\n    end\n  end\n\n  context \"when changing your password\" do\n    it \"is successful when password matches confirmation\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      fill_in(\"Current password\", with: \"MyPassword\")\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be true\n    end\n\n    it \"is unsuccessful when password and confirmation don't match\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password.swapcase)\n      fill_in(\"Current password\", with: \"MyPassword\")\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be false\n    end\n\n    it \"is unsuccessful when current password not provided\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      click_button \"Update\"", "func_src_after": "      visit edit_user_registration_path\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be true\n    end\n  end\n\n  context 'when a user has both a password and oauth set up' do\n    let(:user) do\n      build(:user, password: 'MyPassword').tap do |u|\n        u.authentications.build(provider: 'github', uid: 'abcdefg')\n        u.save!\n      end\n    end\n\n    it \"allows password to be changed\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      fill_in(\"Current password\", with: \"MyPassword\")\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be true\n    end\n  end\n\n  context \"when changing your password\" do\n    it \"is successful when password matches confirmation\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      fill_in(\"Current password\", with: \"MyPassword\")\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be true\n    end\n\n    it \"is unsuccessful when password and confirmation don't match\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password.swapcase)\n      fill_in(\"Current password\", with: \"MyPassword\")\n      click_button \"Update\"\n\n      expect(user.reload.valid_password?(new_password)).to be false\n    end\n\n    it \"is unsuccessful when current password not provided\" do\n      fill_in(\"Password\", match: :first, with: new_password)\n      fill_in(\"Password confirmation\", with: new_password)\n      click_button \"Update\"", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4464, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      metadata_version: metadata_version,\n      raw_metadata: raw_metadata,\n      uuid: uuid\n    }\n    params[:id] = id unless id.nil?\n    vulnerability_findings.create!(params)\n  end\n  # rubocop:enable Metrics/ParameterLists\n\n  def create_user!(name: \"Example User\", email: \"user@example.com\", user_type: nil, created_at: Time.zone.now, confirmed_at: Time.zone.now)\n    table(:users).create!(\n      name: name,\n      email: email,\n      username: name,\n      projects_limit: 0,\n      user_type: user_type,\n      confirmed_at: confirmed_at\n    )\n  end\n\n  def create_finding_pipeline!(project_id:, finding_id:)\n    pipeline = table(:ci_pipelines).create!(project_id: project_id)\n    vulnerability_finding_pipelines.create!(pipeline_id: pipeline.id, occurrence_id: finding_id)\n  end\nend\n", "func_src_after": "      metadata_version: metadata_version,\n      raw_metadata: raw_metadata,\n      uuid: uuid\n    }\n    params[:id] = id unless id.nil?\n    vulnerability_findings.create!(params)\n  end\n  # rubocop:enable Metrics/ParameterLists\n\n  def create_user!(name: \"Example User\", email: \"<EMAIL>\", user_type: nil, created_at: Time.zone.now, confirmed_at: Time.zone.now)\n    table(:users).create!(\n      name: name,\n      email: email,\n      username: name,\n      projects_limit: 0,\n      user_type: user_type,\n      confirmed_at: confirmed_at\n    )\n  end\n\n  def create_finding_pipeline!(project_id:, finding_id:)\n    pipeline = table(:ci_pipelines).create!(project_id: project_id)\n    vulnerability_finding_pipelines.create!(pipeline_id: pipeline.id, occurrence_id: finding_id)\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 10, "char_start": 227, "char_end": 367, "line": "  def create_user!(name: \"Example User\", email: \"user@example.com\", user_type: nil, created_at: Time.zone.now, confirmed_at: Time.zone.now)\n"}], "added": [{"line_no": 11, "char_start": 227, "char_end": 358, "line": "  def create_user!(name: \"Example User\", email: \"<EMAIL>\", user_type: nil, created_at: Time.zone.now, confirmed_at: Time.zone.now)\n"}]}, "char_changes": {"deleted": [{"char_start": 227, "char_end": 367, "chars": "  def create_user!(name: \"Example User\", email: \"user@example.com\", user_type: nil, created_at: Time.zone.now, confirmed_at: Time.zone.now)\n"}], "added": [{"char_start": 227, "char_end": 358, "chars": "  def create_user!(name: \"Example User\", email: \"<EMAIL>\", user_type: nil, created_at: Time.zone.now, confirmed_at: Time.zone.now)\n"}]}}
{"func_name": 4466, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    # helper methods\n    ################\n\n    def file_cache_path\n      Chef::Config[:file_cache_path]\n    end\n\n    def default_source\n      \"https://github.com/coreos/etcd/releases/download/v#{version}/etcd-v#{version}-linux-amd64.tar.gz\"\n    end\n\n    def default_checksum\n      case version\n      when '2.2.2' then '90aff7364caa43932fd46974825af20e0ecb70fe7e01981e2d3a496106f147e7'\n      end\n    end\n\n    def etcd_bin\n      \"#{etcd_bin_prefix}/etcd\"\n    end\n\n    def etcd_bin_prefix\n      '/usr/bin'\n    end\n\n    def etcdctl_bin\n      \"#{etcdctl_bin_prefix}/etcdctl\"\n    end\n\n    def etcdctl_bin_prefix\n      etcd_bin_prefix\n    end\n\n    def extract_etcd_cmd\n      \"tar xvf #{file_cache_path}/etcd-v#{version}-linux-amd64.tar.gz -C #{etcd_bin_prefix} etcd-v#{version}-linux-amd64/etcd --strip-components=1\"\n    end\n\n    def extract_etcdctl_cmd\n      \"tar xvf #{file_cache_path}/etcd-v#{version}-linux-amd64.tar.gz -C #{etcdctl_bin_prefix} etcd-v#{version}-linux-amd64/etcdctl --strip-components=1\"\n    end\n  end\nend\n", "func_src_after": "    # helper methods\n    ################\n\n    def file_cache_path\n      Chef::Config[:file_cache_path]\n    end\n\n    def default_source\n      \"https://github.com/coreos/etcd/releases/download/v#{version}/etcd-v#{version}-linux-amd64.tar.gz\"\n    end\n\n    def default_checksum\n      case version\n      when '2.2.2' then '90aff7364caa43932fd46974825af20e0ecb70fe7e01981e2d3a496106f147e7'\n      end\n    end\n\n    def etcd_bin\n      \"#{etcd_bin_prefix}/etcd\"\n    end\n\n    def etcd_bin_prefix\n      '/usr/bin'\n    end\n\n    def etcdctl_bin\n      \"#{etcdctl_bin_prefix}/etcdctl\"\n    end\n\n    def etcdctl_bin_prefix\n      etcd_bin_prefix\n    end\n\n    def extract_etcd_cmd\n      \"tar xvf #{file_cache_path}/etcd-v#{version}-linux-amd64.tar.gz -C #{etcd_bin_prefix} etcd-v#{version}-linux-amd64/etcd --strip-components=1\"\n    end\n\n    def extract_etcdctl_cmd\n      \"tar xvf #{file_cache_path}/etcd-v#{version}-linux-amd64.tar.gz -C #{etcdctl_bin_prefix} etcd-v#{version}-linux-amd64/etcdctl --strip-components=1\"\n    end\n  end\nend\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4471, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "          'etcd_ip' => 'foo',           \n          'etcd_ca_key' => 'foo',\n          'etcd_ca_crt' => 'foo', \n          'etcdclient_key' => 'foo',\n          'etcdclient_crt' => 'foo',\n          'api_server_count' => 3,\n          'discovery_token_hash' => 'foo',\n          'kube_api_advertise_address' => 'foo',\n          'cni_pod_cidr' => '10.0.0.0/24',\n          'token' => 'foo',\n          'etcd_initial_cluster' => 'foo',   \n          'controller_address' => '172.17.10.101',  \n          'node_label' => 'foo',   \n          'container_runtime' => 'docker',  \n          # 'docker_package_name' => 'docker-engine',   \n        } \n    end\n\n    it { should contain_kubernetes__kubeadm_join('foo') }\n  end\nend\n", "func_src_after": "          'etcd_ip' => 'foo',           \n          'etcd_ca_key' => 'foo',\n          'etcd_ca_crt' => 'foo', \n          'etcdclient_key' => 'foo',\n          'etcdclient_crt' => 'foo',\n          'api_server_count' => 3,\n          'discovery_token_hash' => 'foo',\n          'kube_api_advertise_address' => 'foo',\n          'cni_pod_cidr' => '<IP-Address>/24',\n          'token' => 'foo',\n          'etcd_initial_cluster' => 'foo',   \n          'controller_address' => '<IP-Address>',  \n          'node_label' => 'foo',   \n          'container_runtime' => 'docker',  \n          # 'docker_package_name' => 'docker-engine',   \n        } \n    end\n\n    it { should contain_kubernetes__kubeadm_join('foo') }\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 311, "char_end": 354, "line": "          'cni_pod_cidr' => '10.0.0.0/24',\n"}, {"line_no": 13, "char_start": 432, "char_end": 485, "line": "          'controller_address' => '172.17.10.101',  \n"}], "added": [{"line_no": 10, "char_start": 311, "char_end": 358, "line": "          'cni_pod_cidr' => '<IP-Address>/24',\n"}, {"line_no": 14, "char_start": 432, "char_end": 484, "line": "          'controller_address' => '<IP-Address>',  \n"}]}, "char_changes": {"deleted": [{"char_start": 311, "char_end": 354, "chars": "          'cni_pod_cidr' => '10.0.0.0/24',\n"}, {"char_start": 432, "char_end": 485, "chars": "          'controller_address' => '172.17.10.101',  \n"}], "added": [{"char_start": 311, "char_end": 358, "chars": "          'cni_pod_cidr' => '<IP-Address>/24',\n"}, {"char_start": 432, "char_end": 484, "chars": "          'controller_address' => '<IP-Address>',  \n"}]}}
{"func_name": 4493, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      }\n    }\n  end if defined?(Zlib::GzipWriter)\n\n  def test_multiple_cookies\n    with_http {|srv, dr, url|\n      srv.mount_proc(\"/mcookie/\") {|req, res|\n        res.cookies << \"name1=value1; blabla\"\n        res.cookies << \"name2=value2; blabla\"\n        res.body = \"foo\"\n      }\n      open(\"#{url}/mcookie/\") {|f|\n        assert_equal(\"foo\", f.read)\n        assert_equal([\"name1=value1; blabla\", \"name2=value2; blabla\"],\n                     f.metas['set-cookie'].sort)\n      }\n    }\n  end\n\n  # 192.0.2.0/24 is TEST-NET.  [RFC3330]\n\n  def test_ftp_invalid_request\n    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Db\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Ab\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Db/f\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Ab/f\").read }\n    assert_raise(URI::InvalidComponentError) { URI(\"ftp://127.0.0.1/d/f;type=x\") }\n  end\n\n  def test_ftp\n    TCPServer.open(\"127.0.0.1\", 0) {|serv|\n      _, port, _, host = serv.addr\n      th = Thread.new {\n        s = serv.accept\n        begin\n          s.print \"220 Test FTP Server\\r\\n\"\n          assert_equal(\"USER anonymous\\r\\n\", s.gets); s.print \"331 name ok\\r\\n\"\n          assert_match(/\\APASS .*\\r\\n\\z/, s.gets); s.print \"230 logged in\\r\\n\"\n          assert_equal(\"TYPE I\\r\\n\", s.gets); s.print \"200 type set to I\\r\\n\"\n          assert_equal(\"CWD foo\\r\\n\", s.gets); s.print \"250 CWD successful\\r\\n\"\n          assert_equal(\"PASV\\r\\n\", s.gets)\n          TCPServer.open(\"127.0.0.1\", 0) {|data_serv|\n            _, data_serv_port, _, _ = data_serv.addr\n            hi = data_serv_port >> 8\n            lo = data_serv_port & 0xff\n            s.print \"227 Entering Passive Mode (127,0,0,1,#{hi},#{lo}).\\r\\n\"\n            assert_equal(\"RETR bar\\r\\n\", s.gets); s.print \"150 file okay\\r\\n\"\n            data_sock = data_serv.accept\n            begin", "func_src_after": "      }\n    }\n  end if defined?(Zlib::GzipWriter)\n\n  def test_multiple_cookies\n    with_http {|srv, dr, url|\n      srv.mount_proc(\"/mcookie/\") {|req, res|\n        res.cookies << \"name1=value1; blabla\"\n        res.cookies << \"name2=value2; blabla\"\n        res.body = \"foo\"\n      }\n      open(\"#{url}/mcookie/\") {|f|\n        assert_equal(\"foo\", f.read)\n        assert_equal([\"name1=value1; blabla\", \"name2=value2; blabla\"],\n                     f.metas['set-cookie'].sort)\n      }\n    }\n  end\n\n  # <IP-Address>/24 is TEST-NET.  [RFC3330]\n\n  def test_ftp_invalid_request\n    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Db\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Ab\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Db/f\").read }\n    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Ab/f\").read }\n    assert_raise(URI::InvalidComponentError) { URI(\"ftp://<IP-Address>/d/f;type=x\") }\n  end\n\n  def test_ftp\n    TCPServer.open(\"<IP-Address>\", 0) {|serv|\n      _, port, _, host = serv.addr\n      th = Thread.new {\n        s = serv.accept\n        begin\n          s.print \"220 Test FTP Server\\r\\n\"\n          assert_equal(\"USER anonymous\\r\\n\", s.gets); s.print \"331 name ok\\r\\n\"\n          assert_match(/\\APASS .*\\r\\n\\z/, s.gets); s.print \"230 logged in\\r\\n\"\n          assert_equal(\"TYPE I\\r\\n\", s.gets); s.print \"200 type set to I\\r\\n\"\n          assert_equal(\"CWD foo\\r\\n\", s.gets); s.print \"250 CWD successful\\r\\n\"\n          assert_equal(\"PASV\\r\\n\", s.gets)\n          TCPServer.open(\"<IP-Address>\", 0) {|data_serv|\n            _, data_serv_port, _, _ = data_serv.addr\n            hi = data_serv_port >> 8\n            lo = data_serv_port & 0xff\n            s.print \"227 Entering Passive Mode (127,0,0,1,#{hi},#{lo}).\\r\\n\"\n            assert_equal(\"RETR bar\\r\\n\", s.gets); s.print \"150 file okay\\r\\n\"\n            data_sock = data_serv.accept\n            begin", "line_changes": {"deleted": [{"line_no": 20, "char_start": 492, "char_end": 533, "line": "  # 192.0.2.0/24 is TEST-NET.  [RFC3330]\n"}, {"line_no": 24, "char_start": 568, "char_end": 633, "line": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/\").read }\n"}, {"line_no": 26, "char_start": 636, "char_end": 706, "line": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Db\").read }\n"}, {"line_no": 28, "char_start": 709, "char_end": 779, "line": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Ab\").read }\n"}, {"line_no": 30, "char_start": 782, "char_end": 854, "line": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Db/f\").read }\n"}, {"line_no": 32, "char_start": 857, "char_end": 929, "line": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Ab/f\").read }\n"}, {"line_no": 34, "char_start": 932, "char_end": 1015, "line": "    assert_raise(URI::InvalidComponentError) { URI(\"ftp://127.0.0.1/d/f;type=x\") }\n"}, {"line_no": 39, "char_start": 1040, "char_end": 1083, "line": "    TCPServer.open(\"127.0.0.1\", 0) {|serv|\n"}, {"line_no": 51, "char_start": 1587, "char_end": 1641, "line": "          TCPServer.open(\"127.0.0.1\", 0) {|data_serv|\n"}], "added": [{"line_no": 21, "char_start": 492, "char_end": 536, "line": "  # <IP-Address>/24 is TEST-NET.  [RFC3330]\n"}, {"line_no": 25, "char_start": 568, "char_end": 636, "line": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/\").read }\n"}, {"line_no": 27, "char_start": 636, "char_end": 709, "line": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Db\").read }\n"}, {"line_no": 29, "char_start": 709, "char_end": 782, "line": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Ab\").read }\n"}, {"line_no": 31, "char_start": 782, "char_end": 857, "line": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Db/f\").read }\n"}, {"line_no": 33, "char_start": 857, "char_end": 932, "line": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Ab/f\").read }\n"}, {"line_no": 35, "char_start": 932, "char_end": 1018, "line": "    assert_raise(URI::InvalidComponentError) { URI(\"ftp://<IP-Address>/d/f;type=x\") }\n"}, {"line_no": 40, "char_start": 1040, "char_end": 1086, "line": "    TCPServer.open(\"<IP-Address>\", 0) {|serv|\n"}, {"line_no": 52, "char_start": 1587, "char_end": 1644, "line": "          TCPServer.open(\"<IP-Address>\", 0) {|data_serv|\n"}]}, "char_changes": {"deleted": [{"char_start": 492, "char_end": 533, "chars": "  # 192.0.2.0/24 is TEST-NET.  [RFC3330]\n"}, {"char_start": 568, "char_end": 633, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/\").read }\n"}, {"char_start": 636, "char_end": 706, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Db\").read }\n"}, {"char_start": 709, "char_end": 779, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Ab\").read }\n"}, {"char_start": 782, "char_end": 854, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Db/f\").read }\n"}, {"char_start": 857, "char_end": 929, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://127.0.0.1/a%0Ab/f\").read }\n"}, {"char_start": 932, "char_end": 1015, "chars": "    assert_raise(URI::InvalidComponentError) { URI(\"ftp://127.0.0.1/d/f;type=x\") }\n"}, {"char_start": 1040, "char_end": 1083, "chars": "    TCPServer.open(\"127.0.0.1\", 0) {|serv|\n"}, {"char_start": 1587, "char_end": 1641, "chars": "          TCPServer.open(\"127.0.0.1\", 0) {|data_serv|\n"}], "added": [{"char_start": 492, "char_end": 536, "chars": "  # <IP-Address>/24 is TEST-NET.  [RFC3330]\n"}, {"char_start": 568, "char_end": 636, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/\").read }\n"}, {"char_start": 636, "char_end": 709, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Db\").read }\n"}, {"char_start": 709, "char_end": 782, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Ab\").read }\n"}, {"char_start": 782, "char_end": 857, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Db/f\").read }\n"}, {"char_start": 857, "char_end": 932, "chars": "    assert_raise(ArgumentError) { URI(\"ftp://<IP-Address>/a%0Ab/f\").read }\n"}, {"char_start": 932, "char_end": 1018, "chars": "    assert_raise(URI::InvalidComponentError) { URI(\"ftp://<IP-Address>/d/f;type=x\") }\n"}, {"char_start": 1040, "char_end": 1086, "chars": "    TCPServer.open(\"<IP-Address>\", 0) {|serv|\n"}, {"char_start": 1587, "char_end": 1644, "chars": "          TCPServer.open(\"<IP-Address>\", 0) {|data_serv|\n"}]}}
{"func_name": 4495, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      begin\n        content = URI(\"ftp://#{host}:#{port}/foo/bar\").read(:ftp_active_mode=>true)\n        assert_equal(\"content\", content)\n      ensure\n        Thread.kill(th)\n        th.join\n      end\n    }\n  end\n\n  def test_ftp_ascii\n    TCPServer.open(\"127.0.0.1\", 0) {|serv|\n      _, port, _, host = serv.addr\n      th = Thread.new {\n        s = serv.accept\n        begin\n          content = \"content\"\n          s.print \"220 Test FTP Server\\r\\n\"\n          assert_equal(\"USER anonymous\\r\\n\", s.gets); s.print \"331 name ok\\r\\n\"\n          assert_match(/\\APASS .*\\r\\n\\z/, s.gets); s.print \"230 logged in\\r\\n\"\n          assert_equal(\"TYPE I\\r\\n\", s.gets); s.print \"200 type set to I\\r\\n\"\n          assert_equal(\"CWD /foo\\r\\n\", s.gets); s.print \"250 CWD successful\\r\\n\"\n          assert_equal(\"TYPE A\\r\\n\", s.gets); s.print \"200 type set to A\\r\\n\"\n          assert_equal(\"SIZE bar\\r\\n\", s.gets); s.print \"213 #{content.bytesize}\\r\\n\"\n          assert_equal(\"PASV\\r\\n\", s.gets)\n          TCPServer.open(\"127.0.0.1\", 0) {|data_serv|\n            _, data_serv_port, _, _ = data_serv.addr\n            hi = data_serv_port >> 8\n            lo = data_serv_port & 0xff\n            s.print \"227 Entering Passive Mode (127,0,0,1,#{hi},#{lo}).\\r\\n\"\n            assert_equal(\"RETR bar\\r\\n\", s.gets); s.print \"150 file okay\\r\\n\"\n            data_sock = data_serv.accept\n            begin\n              data_sock << content\n            ensure\n              data_sock.close\n            end\n            s.print \"226 transfer complete\\r\\n\"\n            assert_nil(s.gets)\n          }\n        ensure\n          s.close if s\n        end\n      }\n      begin\n        length = []\n        progress = []\n        content = URI(\"ftp://#{host}:#{port}/%2Ffoo/b%61r;type=a\").read(\n         :content_length_proc => lambda {|n| length << n },\n         :progress_proc => lambda {|n| progress << n })", "func_src_after": "      begin\n        content = URI(\"ftp://#{host}:#{port}/foo/bar\").read(:ftp_active_mode=>true)\n        assert_equal(\"content\", content)\n      ensure\n        Thread.kill(th)\n        th.join\n      end\n    }\n  end\n\n  def test_ftp_ascii\n    TCPServer.open(\"<IP-Address>\", 0) {|serv|\n      _, port, _, host = serv.addr\n      th = Thread.new {\n        s = serv.accept\n        begin\n          content = \"content\"\n          s.print \"220 Test FTP Server\\r\\n\"\n          assert_equal(\"USER anonymous\\r\\n\", s.gets); s.print \"331 name ok\\r\\n\"\n          assert_match(/\\APASS .*\\r\\n\\z/, s.gets); s.print \"230 logged in\\r\\n\"\n          assert_equal(\"TYPE I\\r\\n\", s.gets); s.print \"200 type set to I\\r\\n\"\n          assert_equal(\"CWD /foo\\r\\n\", s.gets); s.print \"250 CWD successful\\r\\n\"\n          assert_equal(\"TYPE A\\r\\n\", s.gets); s.print \"200 type set to A\\r\\n\"\n          assert_equal(\"SIZE bar\\r\\n\", s.gets); s.print \"213 #{content.bytesize}\\r\\n\"\n          assert_equal(\"PASV\\r\\n\", s.gets)\n          TCPServer.open(\"<IP-Address>\", 0) {|data_serv|\n            _, data_serv_port, _, _ = data_serv.addr\n            hi = data_serv_port >> 8\n            lo = data_serv_port & 0xff\n            s.print \"227 Entering Passive Mode (<IP-Address>,#{hi},#{lo}).\\r\\n\"\n            assert_equal(\"RETR bar\\r\\n\", s.gets); s.print \"150 file okay\\r\\n\"\n            data_sock = data_serv.accept\n            begin\n              data_sock << content\n            ensure\n              data_sock.close\n            end\n            s.print \"226 transfer complete\\r\\n\"\n            assert_nil(s.gets)\n          }\n        ensure\n          s.close if s\n        end\n      }\n      begin\n        length = []\n        progress = []\n        content = URI(\"ftp://#{host}:#{port}/%2Ffoo/b%61r;type=a\").read(\n         :content_length_proc => lambda {|n| length << n },\n         :progress_proc => lambda {|n| progress << n })", "line_changes": {"deleted": [{"line_no": 12, "char_start": 234, "char_end": 277, "line": "    TCPServer.open(\"127.0.0.1\", 0) {|serv|\n"}, {"line_no": 27, "char_start": 976, "char_end": 1030, "line": "          TCPServer.open(\"127.0.0.1\", 0) {|data_serv|\n"}, {"line_no": 32, "char_start": 1162, "char_end": 1239, "line": "            s.print \"227 Entering Passive Mode (127,0,0,1,#{hi},#{lo}).\\r\\n\"\n"}], "added": [{"line_no": 13, "char_start": 234, "char_end": 280, "line": "    TCPServer.open(\"<IP-Address>\", 0) {|serv|\n"}, {"line_no": 28, "char_start": 976, "char_end": 1033, "line": "          TCPServer.open(\"<IP-Address>\", 0) {|data_serv|\n"}, {"line_no": 33, "char_start": 1162, "char_end": 1242, "line": "            s.print \"227 Entering Passive Mode (<IP-Address>,#{hi},#{lo}).\\r\\n\"\n"}]}, "char_changes": {"deleted": [{"char_start": 234, "char_end": 277, "chars": "    TCPServer.open(\"127.0.0.1\", 0) {|serv|\n"}, {"char_start": 976, "char_end": 1030, "chars": "          TCPServer.open(\"127.0.0.1\", 0) {|data_serv|\n"}, {"char_start": 1162, "char_end": 1239, "chars": "            s.print \"227 Entering Passive Mode (127,0,0,1,#{hi},#{lo}).\\r\\n\"\n"}], "added": [{"char_start": 234, "char_end": 280, "chars": "    TCPServer.open(\"<IP-Address>\", 0) {|serv|\n"}, {"char_start": 976, "char_end": 1033, "chars": "          TCPServer.open(\"<IP-Address>\", 0) {|data_serv|\n"}, {"char_start": 1162, "char_end": 1242, "chars": "            s.print \"227 Entering Passive Mode (<IP-Address>,#{hi},#{lo}).\\r\\n\"\n"}]}}
{"func_name": 4508, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Pod::Spec.new do |s|\n\n  s.name         = \"RxTestExt\"\n  s.version      = \"0.4.1\"\n  s.summary      = \"A collection of operators & tools not found in the core RxTest distribution.\"\n\n  s.description  = <<-DESC\n  Provide developers with extensions for RxTest. The library includes a set of extensions for test schedulers and assertions on testable observers.\n                   DESC\n\n  s.homepage     = \"https://github.com/RxSwiftCommunity/RxTestExt\"\n  s.license      = { :type => 'MIT', :file => 'LICENSE' }\n  s.author       = { \"mosamer\" => \"mostafamamer@gmail.com\" }\n  s.source       = { :git => 'https://github.com/RxSwiftCommunity/RxTestExt.git', :tag => s.version.to_s }\n\n  s.ios.deployment_target = '9.0'\n\n  s.subspec \"Core\" do |ss|\n    ss.source_files = [\n        'RxTestExt/Core/*.{swift}',\n        'RxTestExt/Assertion/*.{swift}',\n    ]\n    ss.dependency 'RxTest', '~> 6.0'\n  end\n\n  s.subspec \"Relays\" do |ss|\n    ss.source_files = \"RxTestExt/Relays/*.{swift}\"\n    ss.dependency \"RxTestExt/Core\"\n    ss.dependency 'RxRelay', '~> 6.0'\n  end\n\n  s.frameworks = 'XCTest'\nend\n", "func_src_after": "Pod::Spec.new do |s|\n\n  s.name         = \"RxTestExt\"\n  s.version      = \"0.4.1\"\n  s.summary      = \"A collection of operators & tools not found in the core RxTest distribution.\"\n\n  s.description  = <<-DESC\n  Provide developers with extensions for RxTest. The library includes a set of extensions for test schedulers and assertions on testable observers.\n                   DESC\n\n  s.homepage     = \"https://github.com/RxSwiftCommunity/RxTestExt\"\n  s.license      = { :type => 'MIT', :file => 'LICENSE' }\n  s.author       = { \"mosamer\" => \"<EMAIL>\" }\n  s.source       = { :git => 'https://github.com/RxSwiftCommunity/RxTestExt.git', :tag => s.version.to_s }\n\n  s.ios.deployment_target = '9.0'\n\n  s.subspec \"Core\" do |ss|\n    ss.source_files = [\n        'RxTestExt/Core/*.{swift}',\n        'RxTestExt/Assertion/*.{swift}',\n    ]\n    ss.dependency 'RxTest', '~> 6.0'\n  end\n\n  s.subspec \"Relays\" do |ss|\n    ss.source_files = \"RxTestExt/Relays/*.{swift}\"\n    ss.dependency \"RxTestExt/Core\"\n    ss.dependency 'RxRelay', '~> 6.0'\n  end\n\n  s.frameworks = 'XCTest'\nend\n", "line_changes": {"deleted": [{"line_no": 13, "char_start": 504, "char_end": 565, "line": "  s.author       = { \"mosamer\" => \"mostafamamer@gmail.com\" }\n"}], "added": [{"line_no": 14, "char_start": 504, "char_end": 550, "line": "  s.author       = { \"mosamer\" => \"<EMAIL>\" }\n"}]}, "char_changes": {"deleted": [{"char_start": 504, "char_end": 565, "chars": "  s.author       = { \"mosamer\" => \"mostafamamer@gmail.com\" }\n"}], "added": [{"char_start": 504, "char_end": 550, "chars": "  s.author       = { \"mosamer\" => \"<EMAIL>\" }\n"}]}}
{"func_name": 4509, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      it 'creates a range node with from and to parameters' do\n        expect(subject).to have_name('range')\n\n        attributes = attributes_to_hash(subject.attributes)\n        expect(attributes).to include(\n          'from' => '192.168.1.0',\n          'to' => '192.168.1.255'\n        )\n      end\n    end\n\n    context 'with a CIDR notation IP range' do\n      subject { Nexpose::IPRange.new('192.168.1.0/24').as_xml }\n\n      it 'creates a range node with from and to parameters' do\n        expect(subject).to have_name('range')\n\n        attributes = attributes_to_hash(subject.attributes)\n        expect(attributes).to include(\n          'from' => '192.168.1.0',\n          'to' => '192.168.1.255'\n        )\n      end\n    end\n  end\n\n  describe '#size' do\n    context 'with a single IP address' do\n      subject { Nexpose::IPRange.new('192.168.1.0') }\n\n      it 'returns one' do\n        expect(subject.size).to eq(1)\n      end\n    end\n\n    context 'with multiple IP addresses' do\n      subject { Nexpose::IPRange.new('192.168.1.0', '192.168.1.255') }\n\n      it 'returns 256' do\n        expect(subject.size).to eq(256)\n      end\n    end\n\n    context 'with a CIDR notation IP range' do\n      subject { Nexpose::IPRange.new('192.168.1.0/24') }\n\n      it 'returns 256' do\n        expect(subject.size).to eq(256)\n      end\n    end", "func_src_after": "      it 'creates a range node with from and to parameters' do\n        expect(subject).to have_name('range')\n\n        attributes = attributes_to_hash(subject.attributes)\n        expect(attributes).to include(\n          'from' => '<IP-Address>',\n          'to' => '<IP-Address>'\n        )\n      end\n    end\n\n    context 'with a CIDR notation IP range' do\n      subject { Nexpose::IPRange.new('1<IP-Address>/24').as_xml }\n\n      it 'creates a range node with from and to parameters' do\n        expect(subject).to have_name('range')\n\n        attributes = attributes_to_hash(subject.attributes)\n        expect(attributes).to include(\n          'from' => '<IP-Address>',\n          'to' => '<IP-Address>'\n        )\n      end\n    end\n  end\n\n  describe '#size' do\n    context 'with a single IP address' do\n      subject { Nexpose::IPRange.new('<IP-Address>') }\n\n      it 'returns one' do\n        expect(subject.size).to eq(1)\n      end\n    end\n\n    context 'with multiple IP addresses' do\n      subject { Nexpose::IPRange.new('<IP-Address>', '<IP-Address>') }\n\n      it 'returns 256' do\n        expect(subject.size).to eq(256)\n      end\n    end\n\n    context 'with a CIDR notation IP range' do\n      subject { Nexpose::IPRange.new('<IP-Address>/24') }\n\n      it 'returns 256' do\n        expect(subject.size).to eq(256)\n      end\n    end", "line_changes": {"deleted": [{"line_no": 6, "char_start": 209, "char_end": 244, "line": "          'from' => '192.168.1.0',\n"}, {"line_no": 7, "char_start": 209, "char_end": 243, "line": "          'to' => '192.168.1.255'\n"}, {"line_no": 15, "char_start": 354, "char_end": 418, "line": "      subject { Nexpose::IPRange.new('192.168.1.0/24').as_xml }\n"}, {"line_no": 23, "char_start": 630, "char_end": 665, "line": "          'from' => '192.168.1.0',\n"}, {"line_no": 24, "char_start": 630, "char_end": 664, "line": "          'to' => '192.168.1.255'\n"}, {"line_no": 34, "char_start": 798, "char_end": 852, "line": "      subject { Nexpose::IPRange.new('192.168.1.0') }\n"}, {"line_no": 43, "char_start": 981, "char_end": 1052, "line": "      subject { Nexpose::IPRange.new('192.168.1.0', '192.168.1.255') }\n"}, {"line_no": 52, "char_start": 1185, "char_end": 1242, "line": "      subject { Nexpose::IPRange.new('192.168.1.0/24') }\n"}], "added": [{"line_no": 8, "char_start": 209, "char_end": 245, "line": "          'from' => '<IP-Address>',\n"}, {"line_no": 9, "char_start": 245, "char_end": 278, "line": "          'to' => '<IP-Address>'\n"}, {"line_no": 16, "char_start": 354, "char_end": 420, "line": "      subject { Nexpose::IPRange.new('1<IP-Address>/24').as_xml }\n"}, {"line_no": 25, "char_start": 630, "char_end": 666, "line": "          'from' => '<IP-Address>',\n"}, {"line_no": 26, "char_start": 666, "char_end": 699, "line": "          'to' => '<IP-Address>'\n"}, {"line_no": 35, "char_start": 798, "char_end": 853, "line": "      subject { Nexpose::IPRange.new('<IP-Address>') }\n"}, {"line_no": 44, "char_start": 981, "char_end": 1052, "line": "      subject { Nexpose::IPRange.new('<IP-Address>', '<IP-Address>') }\n"}, {"line_no": 53, "char_start": 1185, "char_end": 1243, "line": "      subject { Nexpose::IPRange.new('<IP-Address>/24') }\n"}]}, "char_changes": {"deleted": [{"char_start": 209, "char_end": 244, "chars": "          'from' => '192.168.1.0',\n"}, {"char_start": 209, "char_end": 243, "chars": "          'to' => '192.168.1.255'\n"}, {"char_start": 354, "char_end": 418, "chars": "      subject { Nexpose::IPRange.new('192.168.1.0/24').as_xml }\n"}, {"char_start": 630, "char_end": 665, "chars": "          'from' => '192.168.1.0',\n"}, {"char_start": 630, "char_end": 664, "chars": "          'to' => '192.168.1.255'\n"}, {"char_start": 798, "char_end": 852, "chars": "      subject { Nexpose::IPRange.new('192.168.1.0') }\n"}, {"char_start": 981, "char_end": 1052, "chars": "      subject { Nexpose::IPRange.new('192.168.1.0', '192.168.1.255') }\n"}, {"char_start": 1185, "char_end": 1242, "chars": "      subject { Nexpose::IPRange.new('192.168.1.0/24') }\n"}], "added": [{"char_start": 209, "char_end": 245, "chars": "          'from' => '<IP-Address>',\n"}, {"char_start": 245, "char_end": 278, "chars": "          'to' => '<IP-Address>'\n"}, {"char_start": 354, "char_end": 420, "chars": "      subject { Nexpose::IPRange.new('1<IP-Address>/24').as_xml }\n"}, {"char_start": 630, "char_end": 666, "chars": "          'from' => '<IP-Address>',\n"}, {"char_start": 666, "char_end": 699, "chars": "          'to' => '<IP-Address>'\n"}, {"char_start": 798, "char_end": 853, "chars": "      subject { Nexpose::IPRange.new('<IP-Address>') }\n"}, {"char_start": 981, "char_end": 1052, "chars": "      subject { Nexpose::IPRange.new('<IP-Address>', '<IP-Address>') }\n"}, {"char_start": 1185, "char_end": 1243, "chars": "      subject { Nexpose::IPRange.new('<IP-Address>/24') }\n"}]}}
{"func_name": 4548, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Pod::Spec.new do |s|\n  s.name = 'SilverTray'\n  s.version = '1.3.0'\n  s.license = 'Apache License, Version 2.0'\n  s.summary = 'Data chunk player'\n  s.description = <<-DESC\nplay encoded data using AVAudioEngine\n                       DESC\n\n  s.homepage = 'https://github.com/nugu-developers/silvertray-ios'\n  s.author = { 'childc' => 'skimdcc@gmail.com' }\n  s.source = { :git => 'https://github.com/nugu-developers/silvertray-ios.git', :tag => s.version.to_s }\n  s.documentation_url = 'https://developers.nugu.co.kr'\n\n  s.ios.deployment_target = '12.0'\n  # s.tvos.deployment_target = '13.0'\n  # FIXME: OpusDecoder.o does not valid.\n  # s.watchos.deployment_target = '6.0'\n  # s.macos.deployment_target = '10.15.0'\n\n  s.source_files = 'SilverTray/Classes/**/*', 'SilverTray/Libraries/**/*.h'\n  s.public_header_files = 'SilverTray/Classes/**/*.h', 'SilverTray/Libraries/**/*.h'\n  s.vendored_frameworks = 'SilverTray/Libraries/Opus/Binary/OpusCodec.xcframework'\n  s.preserve_paths = 'SilverTray/Libraries/**'\n  s.libraries = 'c++'\n\n  s.xcconfig = {\n    'OTHER_LDFLAGS' => '-Xlinker -w',\n    'SWIFT_INCLUDE_PATHS' => '$(PODS_ROOT)/SilverTray/SilverTray/Libraries/**'\n  }\n  \nend\n", "func_src_after": "Pod::Spec.new do |s|\n  s.name = 'SilverTray'\n  s.version = '1.3.0'\n  s.license = 'Apache License, Version 2.0'\n  s.summary = 'Data chunk player'\n  s.description = <<-DESC\nplay encoded data using AVAudioEngine\n                       DESC\n\n  s.homepage = 'https://github.com/nugu-developers/silvertray-ios'\n  s.author = { 'childc' => '<EMAIL>' }\n  s.source = { :git => 'https://github.com/nugu-developers/silvertray-ios.git', :tag => s.version.to_s }\n  s.documentation_url = 'https://developers.nugu.co.kr'\n\n  s.ios.deployment_target = '12.0'\n  # s.tvos.deployment_target = '13.0'\n  # FIXME: OpusDecoder.o does not valid.\n  # s.watchos.deployment_target = '6.0'\n  # s.macos.deployment_target = '10.15.0'\n\n  s.source_files = 'SilverTray/Classes/**/*', 'SilverTray/Libraries/**/*.h'\n  s.public_header_files = 'SilverTray/Classes/**/*.h', 'SilverTray/Libraries/**/*.h'\n  s.vendored_frameworks = 'SilverTray/Libraries/Opus/Binary/OpusCodec.xcframework'\n  s.preserve_paths = 'SilverTray/Libraries/**'\n  s.libraries = 'c++'\n\n  s.xcconfig = {\n    'OTHER_LDFLAGS' => '-Xlinker -w',\n    'SWIFT_INCLUDE_PATHS' => '$(PODS_ROOT)/SilverTray/SilverTray/Libraries/**'\n  }\n  \nend\n", "line_changes": {"deleted": [{"line_no": 11, "char_start": 305, "char_end": 354, "line": "  s.author = { 'childc' => 'skimdcc@gmail.com' }\n"}], "added": [{"line_no": 12, "char_start": 305, "char_end": 344, "line": "  s.author = { 'childc' => '<EMAIL>' }\n"}]}, "char_changes": {"deleted": [{"char_start": 305, "char_end": 354, "chars": "  s.author = { 'childc' => 'skimdcc@gmail.com' }\n"}], "added": [{"char_start": 305, "char_end": 344, "chars": "  s.author = { 'childc' => '<EMAIL>' }\n"}]}}
{"func_name": 4550, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require 'spec_helper'\n\ndescribe 'freeradius::statusclient' do\n  include_context 'redhat_common_dependencies'\n\n  let(:title) { 'test' }\n\n  let(:params) do\n    {\n      secret: 'test_secret',\n      ip: '1.2.3.4',\n    }\n  end\n\n  it do\n    is_expected.to contain_file('/etc/raddb/statusclients.d/test.conf')\n      .with_content(%r{^client test {\\n\\s+ipaddr = 1.2.3.4\\n\\s+shortname = test\\n\\s+secret = \"test_secret\"\\n}\\n})\n      .with_ensure('present')\n      .with_group('radiusd')\n      .with_mode('0640')\n      .with_owner('root')\n      .that_notifies('Service[radiusd]')\n      .that_requires('Package[freeradius]')\n      .that_requires('Group[radiusd]')\n      .that_requires('File[/etc/raddb/clients.d]')\n  end\n\n  context 'with secret containing a newline' do\n    let(:params) do\n      super().merge(\n        secret: \"foo\\nbar\",\n      )\n    end\n\n    it do\n      is_expected.to compile.and_raise_error(%r{parameter 'secret' expects a match for Freeradius::Secret})\n    end\n  end\nend\n", "func_src_after": "require 'spec_helper'\n\ndescribe 'freeradius::statusclient' do\n  include_context 'redhat_common_dependencies'\n\n  let(:title) { 'test' }\n\n  let(:params) do\n    {\n      secret: 'test_secret',\n      ip: '<IP-Address>',\n    }\n  end\n\n  it do\n    is_expected.to contain_file('/etc/raddb/statusclients.d/test.conf')\n      .with_content(%r{^client test {\\n\\s+ipaddr = <IP-Address>\\n\\s+shortname = test\\n\\s+secret = \"test_secret\"\\n}\\n})\n      .with_ensure('present')\n      .with_group('radiusd')\n      .with_mode('0640')\n      .with_owner('root')\n      .that_notifies('Service[radiusd]')\n      .that_requires('Package[freeradius]')\n      .that_requires('Group[radiusd]')\n      .that_requires('File[/etc/raddb/clients.d]')\n  end\n\n  context 'with secret containing a newline' do\n    let(:params) do\n      super().merge(\n        secret: \"foo\\nbar\",\n      )\n    end\n\n    it do\n      is_expected.to compile.and_raise_error(%r{parameter 'secret' expects a match for Freeradius::Secret})\n    end\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 11, "char_start": 189, "char_end": 210, "line": "      ip: '1.2.3.4',\n"}, {"line_no": 18, "char_start": 308, "char_end": 422, "line": "      .with_content(%r{^client test {\\n\\s+ipaddr = 1.2.3.4\\n\\s+shortname = test\\n\\s+secret = \"test_secret\"\\n}\\n})\n"}], "added": [{"line_no": 12, "char_start": 189, "char_end": 215, "line": "      ip: '<IP-Address>',\n"}, {"line_no": 19, "char_start": 308, "char_end": 427, "line": "      .with_content(%r{^client test {\\n\\s+ipaddr = <IP-Address>\\n\\s+shortname = test\\n\\s+secret = \"test_secret\"\\n}\\n})\n"}]}, "char_changes": {"deleted": [{"char_start": 189, "char_end": 210, "chars": "      ip: '1.2.3.4',\n"}, {"char_start": 308, "char_end": 422, "chars": "      .with_content(%r{^client test {\\n\\s+ipaddr = 1.2.3.4\\n\\s+shortname = test\\n\\s+secret = \"test_secret\"\\n}\\n})\n"}], "added": [{"char_start": 189, "char_end": 215, "chars": "      ip: '<IP-Address>',\n"}, {"char_start": 308, "char_end": 427, "chars": "      .with_content(%r{^client test {\\n\\s+ipaddr = <IP-Address>\\n\\s+shortname = test\\n\\s+secret = \"test_secret\"\\n}\\n})\n"}]}}
{"func_name": 4563, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#    Copyright 2014 Mirantis, Inc.\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n#    not use this file except in compliance with the License. You may obtain\n#    a copy of the License at\n#\n#         http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n#    License for the specific language governing permissions and limitations\n#    under the License.\n\nrequire File.join(File.dirname(__FILE__), '../spec_helper')\n\ndescribe Astute::CobblerManager do\n  include SpecHelpers\n\n  let(:data) do\n    {\n      \"engine\"=>{\n        \"url\"=>\"http://localhost/cobbler_api\",\n        \"username\"=>\"cobbler\",\n        \"password\"=>\"cobbler\",\n        \"master_ip\"=>\"127.0.0.1\",\n        \"provision_method\"=>\"cobbler\",\n      },\n      \"task_uuid\"=>\"a5c44b9a-285a-4a0c-ae65-2ed6b3d250f4\",\n      \"nodes\" => [\n        {\n          'uid' => '1',\n          'profile' => 'centos-x86_64',\n          \"slave_name\"=>\"controller-1\",\n          \"admin_ip\" =>'1.2.3.5',\n          'power_type' => 'ssh',\n          'power_user' => 'root',\n          'power_pass' => '/root/.ssh/bootstrap.rsa',\n          'power-address' => '1.2.3.5',\n          'hostname' => 'name.domain.tld',\n          'name_servers' => '1.2.3.4 1.2.3.100',\n          'name_servers_search' => 'some.domain.tld domain.tld',\n          'netboot_enabled' => '1',\n          'ks_meta' => {\n            'repo_metadata'=>{\n              'repo1' => 'ip_address:port/patch param1 param2',\n              'repo2' => 'ip_address:port/patch'\n            }\n          },\n          'interfaces' => {", "func_src_after": "#    Copyright 2014 Mirantis, Inc.\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n#    not use this file except in compliance with the License. You may obtain\n#    a copy of the License at\n#\n#         http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n#    License for the specific language governing permissions and limitations\n#    under the License.\n\nrequire File.join(File.dirname(__FILE__), '../spec_helper')\n\ndescribe Astute::CobblerManager do\n  include SpecHelpers\n\n  let(:data) do\n    {\n      \"engine\"=>{\n        \"url\"=>\"http://localhost/cobbler_api\",\n        \"username\"=>\"cobbler\",\n        \"password\"=>\"cobbler\",\n        \"master_ip\"=>\"<IP-Address>\",\n        \"provision_method\"=>\"cobbler\",\n      },\n      \"task_uuid\"=>\"a5c44b9a-285a-4a0c-ae65-2ed6b3d250f4\",\n      \"nodes\" => [\n        {\n          'uid' => '1',\n          'profile' => 'centos-x86_64',\n          \"slave_name\"=>\"controller-1\",\n          \"admin_ip\" =>'<IP-Address>',\n          'power_type' => 'ssh',\n          'power_user' => 'root',\n          'power_pass' => '/root/.ssh/bootstrap.rsa',\n          'power-address' => '<IP-Address>',\n          'hostname' => 'name.domain.tld',\n          'name_servers' => '<IP-Address> <IP-Address>',\n          'name_servers_search' => 'some.domain.tld domain.tld',\n          'netboot_enabled' => '1',\n          'ks_meta' => {\n            'repo_metadata'=>{\n              'repo1' => 'ip_address:port/patch param1 param2',\n              'repo2' => 'ip_address:port/patch'\n            }\n          },\n          'interfaces' => {", "line_changes": {"deleted": [{"line_no": 26, "char_start": 878, "char_end": 912, "line": "        \"master_ip\"=>\"127.0.0.1\",\n"}, {"line_no": 36, "char_start": 1155, "char_end": 1189, "line": "          \"admin_ip\" =>'1.2.3.5',\n"}, {"line_no": 41, "char_start": 1315, "char_end": 1355, "line": "          'power-address' => '1.2.3.5',\n"}, {"line_no": 44, "char_start": 1403, "char_end": 1452, "line": "          'name_servers' => '1.2.3.4 1.2.3.100',\n"}], "added": [{"line_no": 27, "char_start": 878, "char_end": 915, "line": "        \"master_ip\"=>\"<IP-Address>\",\n"}, {"line_no": 37, "char_start": 1155, "char_end": 1194, "line": "          \"admin_ip\" =>'<IP-Address>',\n"}, {"line_no": 42, "char_start": 1315, "char_end": 1360, "line": "          'power-address' => '<IP-Address>',\n"}, {"line_no": 45, "char_start": 1403, "char_end": 1460, "line": "          'name_servers' => '<IP-Address> <IP-Address>',\n"}]}, "char_changes": {"deleted": [{"char_start": 878, "char_end": 912, "chars": "        \"master_ip\"=>\"127.0.0.1\",\n"}, {"char_start": 1155, "char_end": 1189, "chars": "          \"admin_ip\" =>'1.2.3.5',\n"}, {"char_start": 1315, "char_end": 1355, "chars": "          'power-address' => '1.2.3.5',\n"}, {"char_start": 1403, "char_end": 1452, "chars": "          'name_servers' => '1.2.3.4 1.2.3.100',\n"}], "added": [{"char_start": 878, "char_end": 915, "chars": "        \"master_ip\"=>\"<IP-Address>\",\n"}, {"char_start": 1155, "char_end": 1194, "chars": "          \"admin_ip\" =>'<IP-Address>',\n"}, {"char_start": 1315, "char_end": 1360, "chars": "          'power-address' => '<IP-Address>',\n"}, {"char_start": 1403, "char_end": 1460, "chars": "          'name_servers' => '<IP-Address> <IP-Address>',\n"}]}}
{"func_name": 4566, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require 'rails_helper'\n\n\nRSpec.describe Api::UserController do\n\n  describe \"Register new User\", type: :request  do\n    before do\n      @json_user = { email: 'user@user.com', password: 'demo' }\n      #post '/api/user/register', params: { user: { :email => 'user2@user2.com', :password => 'demo' } }\n    end\n\n    it \"returns http success\" do\n      post '/api/user/register', params: { user:  @json_user }\n      expect(response).to have_http_status(:success)\n    end\n\n    it \"returns http bad_request / error register\" do\n      @user1 = create(:user)\n      post '/api/user/register', params: { user: @user1.as_json(only: [:email, :password]) }\n      expect(response).to have_http_status(:bad_request)\n    end\n\n    it \"JSON body response contains :token & :email keys\" do\n      post '/api/user/register', params: { user:  @json_user }\n      json_response = JSON.parse(response.body)\n      expect(json_response.keys.map(&:to_sym)).to match_array([:token, :email])\n    end\n\n  end\n\n\n  describe \"Login\", type: :request  do\n     before do\n       @user1 = create(:user)\n     end\n\n     it \"returns http success\" do\n       post '/api/user/login', params: { user: @user1.as_json(only: [:email, :password]) }\n       expect(response).to have_http_status(:success)\n     end\n\n     it \"returns http bad_request / error login\" do\n       post '/api/user/login', params: { user: { :email => 'user2@user2.com', :password => 'demo' } }\n       expect(response).to have_http_status(:bad_request)\n     end\n\n     it \"JSON body response contains :token & :email keys\" do\n       post '/api/user/login', params: { user: @user1.as_json(only: [:email, :password]) }\n       json_response = JSON.parse(response.body)\n       expect(json_response.keys.map(&:to_sym)).to match_array([:token, :email])", "func_src_after": "require 'rails_helper'\n\n\nRSpec.describe Api::UserController do\n\n  describe \"Register new User\", type: :request  do\n    before do\n      @json_user = { email: '<EMAIL>', password: 'demo' }\n      #post '/api/user/register', params: { user: { :email => '<EMAIL>', :password => 'demo' } }\n    end\n\n    it \"returns http success\" do\n      post '/api/user/register', params: { user:  @json_user }\n      expect(response).to have_http_status(:success)\n    end\n\n    it \"returns http bad_request / error register\" do\n      @user1 = create(:user)\n      post '/api/user/register', params: { user: @user1.as_json(only: [:email, :password]) }\n      expect(response).to have_http_status(:bad_request)\n    end\n\n    it \"JSON body response contains :token & :email keys\" do\n      post '/api/user/register', params: { user:  @json_user }\n      json_response = JSON.parse(response.body)\n      expect(json_response.keys.map(&:to_sym)).to match_array([:token, :email])\n    end\n\n  end\n\n\n  describe \"Login\", type: :request  do\n     before do\n       @user1 = create(:user)\n     end\n\n     it \"returns http success\" do\n       post '/api/user/login', params: { user: @user1.as_json(only: [:email, :password]) }\n       expect(response).to have_http_status(:success)\n     end\n\n     it \"returns http bad_request / error login\" do\n       post '/api/user/login', params: { user: { :email => '<EMAIL>', :password => 'demo' } }\n       expect(response).to have_http_status(:bad_request)\n     end\n\n     it \"JSON body response contains :token & :email keys\" do\n       post '/api/user/login', params: { user: @user1.as_json(only: [:email, :password]) }\n       json_response = JSON.parse(response.body)\n       expect(json_response.keys.map(&:to_sym)).to match_array([:token, :email])", "line_changes": {"deleted": [{"line_no": 8, "char_start": 129, "char_end": 193, "line": "      @json_user = { email: 'user@user.com', password: 'demo' }\n"}, {"line_no": 10, "char_start": 187, "char_end": 292, "line": "      #post '/api/user/register', params: { user: { :email => 'user2@user2.com', :password => 'demo' } }\n"}, {"line_no": 45, "char_start": 1297, "char_end": 1399, "line": "       post '/api/user/login', params: { user: { :email => 'user2@user2.com', :password => 'demo' } }\n"}], "added": [{"line_no": 9, "char_start": 129, "char_end": 187, "line": "      @json_user = { email: '<EMAIL>', password: 'demo' }\n"}, {"line_no": 11, "char_start": 187, "char_end": 284, "line": "      #post '/api/user/register', params: { user: { :email => '<EMAIL>', :password => 'demo' } }\n"}, {"line_no": 46, "char_start": 1297, "char_end": 1391, "line": "       post '/api/user/login', params: { user: { :email => '<EMAIL>', :password => 'demo' } }\n"}]}, "char_changes": {"deleted": [{"char_start": 129, "char_end": 193, "chars": "      @json_user = { email: 'user@user.com', password: 'demo' }\n"}, {"char_start": 187, "char_end": 292, "chars": "      #post '/api/user/register', params: { user: { :email => 'user2@user2.com', :password => 'demo' } }\n"}, {"char_start": 1297, "char_end": 1399, "chars": "       post '/api/user/login', params: { user: { :email => 'user2@user2.com', :password => 'demo' } }\n"}], "added": [{"char_start": 129, "char_end": 187, "chars": "      @json_user = { email: '<EMAIL>', password: 'demo' }\n"}, {"char_start": 187, "char_end": 284, "chars": "      #post '/api/user/register', params: { user: { :email => '<EMAIL>', :password => 'demo' } }\n"}, {"char_start": 1297, "char_end": 1391, "chars": "       post '/api/user/login', params: { user: { :email => '<EMAIL>', :password => 'demo' } }\n"}]}}
{"func_name": 4571, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# frozen_string_literal: true\n\nrequire 'rails_helper'\n\nRSpec.describe 'Form526 Opt In Endpoint', type: :request do\n  let(:user) { build(:user, :loa3) }\n  let(:email) { { 'email' => 'test@adhocteam.us' } }\n\n  before { sign_in }\n\n  it 'returns a 200' do\n    post '/v0/form526_opt_in', params: email\n    expect(response).to have_http_status(:ok)\n  end\n\n  it 'returns the email' do\n    post '/v0/form526_opt_in', params: email\n    expect(response).to be_successful\n    expect(response.body).to be_a(String)\n    json = JSON.parse(response.body)\n    expect(json['data']['attributes']['email']).to eq(email['email'])\n  end\n\n  it 'creates a table entry' do\n    post '/v0/form526_opt_in', params: email\n    expect(Form526OptIn.find_by(user_uuid: user.uuid).present?).to eq(true)\n  end\n\n  it 'updates table entry if called again' do\n    post '/v0/form526_opt_in', params: email\n    post '/v0/form526_opt_in', params: { 'email' => 'test2@adhocteam.us' }\n\n    expect(Form526OptIn.find_by(user_uuid: user.uuid).email).to eq('test2@adhocteam.us')\n  end\nend\n", "func_src_after": "# frozen_string_literal: true\n\nrequire 'rails_helper'\n\nRSpec.describe 'Form526 Opt In Endpoint', type: :request do\n  let(:user) { build(:user, :loa3) }\n  let(:email) { { 'email' => '<EMAIL>' } }\n\n  before { sign_in }\n\n  it 'returns a 200' do\n    post '/v0/form526_opt_in', params: email\n    expect(response).to have_http_status(:ok)\n  end\n\n  it 'returns the email' do\n    post '/v0/form526_opt_in', params: email\n    expect(response).to be_successful\n    expect(response.body).to be_a(String)\n    json = JSON.parse(response.body)\n    expect(json['data']['attributes']['email']).to eq(email['email'])\n  end\n\n  it 'creates a table entry' do\n    post '/v0/form526_opt_in', params: email\n    expect(Form526OptIn.find_by(user_uuid: user.uuid).present?).to eq(true)\n  end\n\n  it 'updates table entry if called again' do\n    post '/v0/form526_opt_in', params: email\n    post '/v0/form526_opt_in', params: { 'email' => '<EMAIL>' }\n\n    expect(Form526OptIn.find_by(user_uuid: user.uuid).email).to eq('<EMAIL>')\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 7, "char_start": 152, "char_end": 205, "line": "  let(:email) { { 'email' => 'test@adhocteam.us' } }\n"}, {"line_no": 32, "char_start": 858, "char_end": 933, "line": "    post '/v0/form526_opt_in', params: { 'email' => 'test2@adhocteam.us' }\n"}, {"line_no": 35, "char_start": 923, "char_end": 1012, "line": "    expect(Form526OptIn.find_by(user_uuid: user.uuid).email).to eq('test2@adhocteam.us')\n"}], "added": [{"line_no": 8, "char_start": 152, "char_end": 195, "line": "  let(:email) { { 'email' => '<EMAIL>' } }\n"}, {"line_no": 33, "char_start": 858, "char_end": 922, "line": "    post '/v0/form526_opt_in', params: { 'email' => '<EMAIL>' }\n"}, {"line_no": 36, "char_start": 923, "char_end": 1001, "line": "    expect(Form526OptIn.find_by(user_uuid: user.uuid).email).to eq('<EMAIL>')\n"}]}, "char_changes": {"deleted": [{"char_start": 152, "char_end": 205, "chars": "  let(:email) { { 'email' => 'test@adhocteam.us' } }\n"}, {"char_start": 858, "char_end": 933, "chars": "    post '/v0/form526_opt_in', params: { 'email' => 'test2@adhocteam.us' }\n"}, {"char_start": 923, "char_end": 1012, "chars": "    expect(Form526OptIn.find_by(user_uuid: user.uuid).email).to eq('test2@adhocteam.us')\n"}], "added": [{"char_start": 152, "char_end": 195, "chars": "  let(:email) { { 'email' => '<EMAIL>' } }\n"}, {"char_start": 858, "char_end": 922, "chars": "    post '/v0/form526_opt_in', params: { 'email' => '<EMAIL>' }\n"}, {"char_start": 923, "char_end": 1001, "chars": "    expect(Form526OptIn.find_by(user_uuid: user.uuid).email).to eq('<EMAIL>')\n"}]}}
{"func_name": 4579, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    ], [\n      a foaf:Person; foaf:name \"Keita Urashima\"; foaf:mbox_sha1sum \"2b4247b6fd5bb4a1383378f325784318680d5ff9\"\n    ], [\n      a foaf:Person; foaf:name \"Pius Uzamere\"; foaf:mbox_sha1sum \"bedbbf2451e5beb38d59687c0460032aff92cd3c\"\n    ] .\n\n  <http://ar.to/#self> a foaf:Person;\n    foaf:name \"Arto Bendiken\";\n    foaf:mbox <mailto:arto@bendiken.net>;\n    foaf:mbox_sha1sum \"a033f652c84a4d73b8c26d318c2395699dd2bdfb\",\n                      \"d0737cceb55eb7d740578d2db1bc0727e3ed49ce\";\n    foaf:homepage <http://ar.to/>;\n    foaf:made <http://rubygems.org/gems/rdf>;\n    rdfs:isDefinedBy <http://datagraph.org/bendiken/foaf> .\n\n  <http://bhuga.net/#ben> a foaf:Person;\n    foaf:name \"Ben Lavender\";\n    foaf:mbox <mailto:blavender@gmail.com>;\n    foaf:mbox_sha1sum \"dbf45f4ffbd27b67aa84f02a6a31c144727d10af\";\n    foaf:homepage <http://bhuga.net/>;\n    rdfs:isDefinedBy <http://datagraph.org/bhuga/foaf> .\n\n  <http://greggkellogg.net/foaf#me> a foaf:Person;\n    foaf:name \"Gregg Kellogg\";\n    foaf:mbox <mailto:gregg@greggkellogg.net>;\n    foaf:mbox_sha1sum \"35bc44e6d0070e5ad50ccbe0d24403c96af2b9bd\";\n    foaf:homepage <http://greggkellogg.net/>;\n    rdfs:isDefinedBy <http://greggkellogg.net/foaf> .\n\n  <http://example.org/xi1> <http://example.org/p> \"1\"^^<http://www.w3.org/2001/XMLSchema#integer> .\n  <http://example.org/xi2> <http://example.org/p> \"1\"^^<http://www.w3.org/2001/XMLSchema#integer> .\n  <http://example.org/xi3> <http://example.org/p> \"01\"^^<http://www.w3.org/2001/XMLSchema#integer> .\n  <http://example.org/xd1> <http://example.org/p> \"1.0e0\"^^<http://www.w3.org/2001/XMLSchema#double> .\n  <http://example.org/xd2> <http://example.org/p> \"1.0\"^^<http://www.w3.org/2001/XMLSchema#double> .\n  <http://example.org/xd3> <http://example.org/p> \"1\"^^<http://www.w3.org/2001/XMLSchema#double> .\n  <http://example.org/xt1> <http://example.org/p> \"zzz\"^^<http://example.org/myType> .\n  <http://example.org/xp1> <http://example.org/p> \"zzz\" .\n  <http://example.org/xp2> <http://example.org/p> \"1\" .\n  <http://example.org/xu> <http://example.org/p> <http://example.org/z> .\n}\n", "func_src_after": "    ], [\n      a foaf:Person; foaf:name \"Keita Urashima\"; foaf:mbox_sha1sum \"2b4247b6fd5bb4a1383378f325784318680d5ff9\"\n    ], [\n      a foaf:Person; foaf:name \"Pius Uzamere\"; foaf:mbox_sha1sum \"bedbbf2451e5beb38d59687c0460032aff92cd3c\"\n    ] .\n\n  <http://ar.to/#self> a foaf:Person;\n    foaf:name \"Arto Bendiken\";\n    foaf:mbox <mailto:<EMAIL>>;\n    foaf:mbox_sha1sum \"a033f652c84a4d73b8c26d318c2395699dd2bdfb\",\n                      \"d0737cceb55eb7d740578d2db1bc0727e3ed49ce\";\n    foaf:homepage <http://ar.to/>;\n    foaf:made <http://rubygems.org/gems/rdf>;\n    rdfs:isDefinedBy <http://datagraph.org/bendiken/foaf> .\n\n  <http://bhuga.net/#ben> a foaf:Person;\n    foaf:name \"Ben Lavender\";\n    foaf:mbox <mailto:<EMAIL>>;\n    foaf:mbox_sha1sum \"dbf45f4ffbd27b67aa84f02a6a31c144727d10af\";\n    foaf:homepage <http://bhuga.net/>;\n    rdfs:isDefinedBy <http://datagraph.org/bhuga/foaf> .\n\n  <http://greggkellogg.net/foaf#me> a foaf:Person;\n    foaf:name \"Gregg Kellogg\";\n    foaf:mbox <mailto:<EMAIL>;\n    foaf:mbox_sha1sum \"35bc44e6d0070e5ad50ccbe0d24403c96af2b9bd\";\n    foaf:homepage <http://greggkellogg.net/>;\n    rdfs:isDefinedBy <http://greggkellogg.net/foaf> .\n\n  <http://example.org/xi1> <http://example.org/p> \"1\"^^<http://www.w3.org/2001/XMLSchema#integer> .\n  <http://example.org/xi2> <http://example.org/p> \"1\"^^<http://www.w3.org/2001/XMLSchema#integer> .\n  <http://example.org/xi3> <http://example.org/p> \"01\"^^<http://www.w3.org/2001/XMLSchema#integer> .\n  <http://example.org/xd1> <http://example.org/p> \"1.0e0\"^^<http://www.w3.org/2001/XMLSchema#double> .\n  <http://example.org/xd2> <http://example.org/p> \"1.0\"^^<http://www.w3.org/2001/XMLSchema#double> .\n  <http://example.org/xd3> <http://example.org/p> \"1\"^^<http://www.w3.org/2001/XMLSchema#double> .\n  <http://example.org/xt1> <http://example.org/p> \"zzz\"^^<http://example.org/myType> .\n  <http://example.org/xp1> <http://example.org/p> \"zzz\" .\n  <http://example.org/xp2> <http://example.org/p> \"1\" .\n  <http://example.org/xu> <http://example.org/p> <http://example.org/z> .\n}\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 314, "char_end": 356, "line": "    foaf:mbox <mailto:arto@bendiken.net>;\n"}, {"line_no": 19, "char_start": 691, "char_end": 735, "line": "    foaf:mbox <mailto:blavender@gmail.com>;\n"}, {"line_no": 27, "char_start": 968, "char_end": 1015, "line": "    foaf:mbox <mailto:gregg@greggkellogg.net>;\n"}], "added": [{"line_no": 10, "char_start": 314, "char_end": 346, "line": "    foaf:mbox <mailto:<EMAIL>>;\n"}, {"line_no": 20, "char_start": 691, "char_end": 723, "line": "    foaf:mbox <mailto:<EMAIL>>;\n"}, {"line_no": 28, "char_start": 968, "char_end": 999, "line": "    foaf:mbox <mailto:<EMAIL>;\n"}]}, "char_changes": {"deleted": [{"char_start": 314, "char_end": 356, "chars": "    foaf:mbox <mailto:arto@bendiken.net>;\n"}, {"char_start": 691, "char_end": 735, "chars": "    foaf:mbox <mailto:blavender@gmail.com>;\n"}, {"char_start": 968, "char_end": 1015, "chars": "    foaf:mbox <mailto:gregg@greggkellogg.net>;\n"}], "added": [{"char_start": 314, "char_end": 346, "chars": "    foaf:mbox <mailto:<EMAIL>>;\n"}, {"char_start": 691, "char_end": 723, "chars": "    foaf:mbox <mailto:<EMAIL>>;\n"}, {"char_start": 968, "char_end": 999, "chars": "    foaf:mbox <mailto:<EMAIL>;\n"}]}}
{"func_name": 4616, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        t[\"keys\"].each do |k, v|\n          path << \":\" + keyword(k)\n        end\n      end\n    end\n  end\n\n  path.join(\"/\")\nend\n\ndef rails_modify_controller(table_name, table_keys, db_fields, api_path)\n  puts \"=> Modify controller '\" + keyword(table_name) + \"'...\"\n\n  table_def = $tables[:json][table_name]\n  @is_assoc = table_def[\"type\"] == \"association\"\n\n  @controller_name = keyword_plural(table_name)\n  controller = \"app/controllers/#{@controller_name}_controller.rb\"\n  template = File.read(\"../controller.erb\")\n\n  File.open(controller, \"w\") do |f|\n    @belongs_to = table_def[\"belongs-to\"]\n    @app_name = keyword_camel($rails_project)\n    @model_name = keyword(table_name)\n    @model_name_p = keyword(table_name).pluralize\n    @class_name = keyword_camel(table_name)\n    @class_name_p = keyword_camel(table_name).pluralize\n    @null_keys = {}\n    if table_keys != nil\n      @null_keys = table_keys.select do |k, v|\n        (!v[\"null\"].nil? and v[\"null\"] == true) or !v[\"auto\"].nil?\n      end\n    end\n    @api_path = api_path\n\n    @order = nil\n    if table_def[\"order\"] != nil\n      @order = keyword(table_def[\"order\"])\n    end\n\n    @keys_str = db_fields.map {|f| ':' + keyword(f[0])}.join(\", \")\n\n    renderer = ERB.new(template, nil, '<>')\n    f.puts renderer.result()\n  end\nend  \n\ndef key_value_pairs(name, obj)\n  obj.map {|k, v| keyword(k) + \" <%= \" + name + \".\" + keyword(k) + \" %>\"}.join(\" \")\nend  ", "func_src_after": "        t[\"keys\"].each do |k, v|\n          path << \":\" + keyword(k)\n        end\n      end\n    end\n  end\n\n  path.join(\"/\")\nend\n\ndef rails_modify_controller(table_name, table_keys, db_fields, api_path)\n  puts \"=> Modify controller '\" + keyword(table_name) + \"'...\"\n\n  table_def = $tables[:json][table_name]\n  @is_assoc = table_def[\"type\"] == \"association\"\n\n  @controller_name = keyword_plural(table_name)\n  controller = \"app/controllers/#{@controller_name}_controller.rb\"\n  template = File.read(\"../controller.erb\")\n\n  File.open(controller, \"w\") do |f|\n    @belongs_to = table_def[\"belongs-to\"]\n    @app_name = keyword_camel($rails_project)\n    @model_name = keyword(table_name)\n    @model_name_p = keyword(table_name).pluralize\n    @class_name = keyword_camel(table_name)\n    @class_name_p = keyword_camel(table_name).pluralize\n    @null_keys = {}\n    if table_keys != nil\n      @null_keys = table_keys.select do |k, v|\n        (!v[\"null\"].nil? and v[\"null\"] == true) or !v[\"auto\"].nil?\n      end\n    end\n    @api_path = api_path\n\n    @order = nil\n    if table_def[\"order\"] != nil\n      @order = keyword(table_def[\"order\"])\n    end\n\n    @keys_str = db_fields.map {|f| ':' + keyword(f[0])}.join(\", \")\n\n    renderer = ERB.new(template, nil, '<>')\n    f.puts renderer.result()\n  end\nend  \n\ndef key_value_pairs(name, obj)\n  obj.map {|k, v| keyword(k) + \" <%= \" + name + \".\" + keyword(k) + \" %>\"}.join(\" \")\nend  ", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4650, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#\n# Be sure to run `pod lib lint dial-discovery-ios.podspec' to ensure this is a\n# valid spec before submitting.\n#\n# Any lines starting with a # are optional, but their use is encouraged\n# To learn more about a Podspec see http://guides.cocoapods.org/syntax/podspec.html\n#\n\nPod::Spec.new do |s|\n  s.name             = 'dial-discovery-ios'\n  s.version          = '0.1.0'\n  s.summary          = 'Service discovery via SSDP and HbbTV device discovery via DIAL'\n\n# This description is used to generate tags and improve search results.\n#   * Think: What does it do? Why did you write it? What is the focus?\n#   * Try to keep it short, snappy and to the point.\n#   * Write the description between the DESC delimiters below.\n#   * Finally, don't worry about the indent, CocoaPods strips it!\n\n  s.description      = <<-DESC\nThis framework provides APIs for the discovery of services via SSDP and the discovery of devices via DIAL, as used in [HbbTV 2](http://hbbtv.org/resource-library/#specifications) compliant TVs It allows HbbTV terminals existing on the same network to be discovered by the Companion Screen Application.\nUsing the DIAL protocol, the Companion Screen Application can launch an HbbTV application on the television.\n                       DESC\n\n  s.homepage         = 'https://github.com/bbc/dial-discovery-ios'\n\n  s.license          = { :type => 'Apache License, Version 2.0', :file => 'LICENSE' }\n  s.author           = { 'Rajiv Ramdhany' => 'rajiv.ramdhany@bbc.co.uk' }\n  s.source           = { :git => 'https://github.com/bbc/dial-discovery-ios.git', :tag => s.version.to_s }\n\n  s.ios.deployment_target = '9.0'\n\n  s.source_files = 'dial-discovery-ios/Classes/**/*'\n  \n  s.resource_bundles = {\n    'dial-discovery-ios' => ['dial-discovery-ios/Assets/**/*']\n  }\n\n \n  # s.public_header_files = 'Pod/Classes/**/*.h'\n  # s.frameworks = 'UIKit', 'MapKit'\n  s.dependency 'CocoaAsyncSocket', '~> 7.5.1'\n  s.dependency 'simple-logger-ios', '~> 0.1'\n  s.dependency 'JSONModel', '~> 1.0'\n\nend\n", "func_src_after": "#\n# Be sure to run `pod lib lint dial-discovery-ios.podspec' to ensure this is a\n# valid spec before submitting.\n#\n# Any lines starting with a # are optional, but their use is encouraged\n# To learn more about a Podspec see http://guides.cocoapods.org/syntax/podspec.html\n#\n\nPod::Spec.new do |s|\n  s.name             = 'dial-discovery-ios'\n  s.version          = '0.1.0'\n  s.summary          = 'Service discovery via SSDP and HbbTV device discovery via DIAL'\n\n# This description is used to generate tags and improve search results.\n#   * Think: What does it do? Why did you write it? What is the focus?\n#   * Try to keep it short, snappy and to the point.\n#   * Write the description between the DESC delimiters below.\n#   * Finally, don't worry about the indent, CocoaPods strips it!\n\n  s.description      = <<-DESC\nThis framework provides APIs for the discovery of services via SSDP and the discovery of devices via DIAL, as used in [HbbTV 2](http://hbbtv.org/resource-library/#specifications) compliant TVs It allows HbbTV terminals existing on the same network to be discovered by the Companion Screen Application.\nUsing the DIAL protocol, the Companion Screen Application can launch an HbbTV application on the television.\n                       DESC\n\n  s.homepage         = 'https://github.com/bbc/dial-discovery-ios'\n\n  s.license          = { :type => 'Apache License, Version 2.0', :file => 'LICENSE' }\n  s.author           = { 'Rajiv Ramdhany' => '<EMAIL>' }\n  s.source           = { :git => 'https://github.com/bbc/dial-discovery-ios.git', :tag => s.version.to_s }\n\n  s.ios.deployment_target = '9.0'\n\n  s.source_files = 'dial-discovery-ios/Classes/**/*'\n  \n  s.resource_bundles = {\n    'dial-discovery-ios' => ['dial-discovery-ios/Assets/**/*']\n  }\n\n \n  # s.public_header_files = 'Pod/Classes/**/*.h'\n  # s.frameworks = 'UIKit', 'MapKit'\n  s.dependency 'CocoaAsyncSocket', '~> 7.5.1'\n  s.dependency 'simple-logger-ios', '~> 0.1'\n  s.dependency 'JSONModel', '~> 1.0'\n\nend\n", "line_changes": {"deleted": [{"line_no": 28, "char_start": 1410, "char_end": 1484, "line": "  s.author           = { 'Rajiv Ramdhany' => 'rajiv.ramdhany@bbc.co.uk' }\n"}], "added": [{"line_no": 29, "char_start": 1410, "char_end": 1467, "line": "  s.author           = { 'Rajiv Ramdhany' => '<EMAIL>' }\n"}]}, "char_changes": {"deleted": [{"char_start": 1410, "char_end": 1484, "chars": "  s.author           = { 'Rajiv Ramdhany' => 'rajiv.ramdhany@bbc.co.uk' }\n"}], "added": [{"char_start": 1410, "char_end": 1467, "chars": "  s.author           = { 'Rajiv Ramdhany' => '<EMAIL>' }\n"}]}}
{"func_name": 4690, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\nloginURI = URI::join(webroot, \"api/v1/login.php\")\nresponseJSON = RestClient.post loginURI.to_s, :email => email, :password => 'secret'\nabort(\"Expected registration to succeed\") unless response['authToken']\nputs \"Login response: #{responseJSON}\"\n\n#\n# Send Reset Password Email\n#\n\noldtoken = `mysql backendkit -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'test@example.com\\'\"`\n\nresetPasswordURI = URI::join(webroot, \"api/v1/resetPassword.php\")\nresponseJSON = RestClient.post(resetPasswordURI.to_s, :email => email) { |response, request, result, &block|\n if [301, 302, 307].include? responseJSON.code\n    response.follow_redirection(request, result, &block)\n  else\n    response.return!(request, result, &block)\n  end\n}\n\nabort(\"Expected reset password email request to succeed\") unless responseJSON['success']\nputs \"Reset password request response: #{responseJSON}\"\n\nnewtoken = `mysql backendkit --skip-column-names -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'test@example.com\\'\"`\nnewtoken.strip!\nabort(\"Expected token to change\") unless newtoken != oldtoken\n\n# Perform the password change\nputs \"New verification token: #{newtoken}\"\n\nresponseJSON = RestClient.post(resetPasswordURI.to_s, :vt => newtoken, :newpassword => 'secret')\nresponse = JSON.parse(responseJSON)\nabort(\"Expected reset password to succeed\") unless response['success']\n\nresponseJSON = RestClient.post loginURI.to_s, :email => email, :password => 'secret'\nresponse = JSON.parse(responseJSON)\ntoken = response['authToken']\nabort(\"Expected login after password change to succeed\") unless token\n\n#\n# Change Password\n#\n\nresponseJSON = RestClient.post resetPasswordURI.to_s, {:BEKAuthToken => token, :password => 'secret', :newpassword => 'secret2', :BEKCSRF => '12345678'}, { :cookies => { :BEKCSRF => '12345678' }}\nresponse = JSON.parse(responseJSON)\nabort(\"Fail resetting password\") unless response[\"success\"]\n", "func_src_after": "\nloginURI = URI::join(webroot, \"api/v1/login.php\")\nresponseJSON = RestClient.post loginURI.to_s, :email => email, :password => 'secret'\nabort(\"Expected registration to succeed\") unless response['authToken']\nputs \"Login response: #{responseJSON}\"\n\n#\n# Send Reset Password Email\n#\n\noldtoken = `mysql backendkit -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'<EMAIL>\\'\"`\n\nresetPasswordURI = URI::join(webroot, \"api/v1/resetPassword.php\")\nresponseJSON = RestClient.post(resetPasswordURI.to_s, :email => email) { |response, request, result, &block|\n if [301, 302, 307].include? responseJSON.code\n    response.follow_redirection(request, result, &block)\n  else\n    response.return!(request, result, &block)\n  end\n}\n\nabort(\"Expected reset password email request to succeed\") unless responseJSON['success']\nputs \"Reset password request response: #{responseJSON}\"\n\nnewtoken = `mysql backendkit --skip-column-names -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'<EMAIL>\\'\"`\nnewtoken.strip!\nabort(\"Expected token to change\") unless newtoken != oldtoken\n\n# Perform the password change\nputs \"New verification token: #{newtoken}\"\n\nresponseJSON = RestClient.post(resetPasswordURI.to_s, :vt => newtoken, :newpassword => 'secret')\nresponse = JSON.parse(responseJSON)\nabort(\"Expected reset password to succeed\") unless response['success']\n\nresponseJSON = RestClient.post loginURI.to_s, :email => email, :password => 'secret'\nresponse = JSON.parse(responseJSON)\ntoken = response['authToken']\nabort(\"Expected login after password change to succeed\") unless token\n\n#\n# Change Password\n#\n\nresponseJSON = RestClient.post resetPasswordURI.to_s, {:BEKAuthToken => token, :password => 'secret', :newpassword => 'secret2', :BEKCSRF => '12345678'}, { :cookies => { :BEKCSRF => '12345678' }}\nresponse = JSON.parse(responseJSON)\nabort(\"Fail resetting password\") unless response[\"success\"]\n", "line_changes": {"deleted": [{"line_no": 11, "char_start": 280, "char_end": 414, "line": "oldtoken = `mysql backendkit -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'test@example.com\\'\"`\n"}, {"line_no": 26, "char_start": 893, "char_end": 1047, "line": "newtoken = `mysql backendkit --skip-column-names -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'test@example.com\\'\"`\n"}], "added": [{"line_no": 12, "char_start": 280, "char_end": 405, "line": "oldtoken = `mysql backendkit -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'<EMAIL>\\'\"`\n"}, {"line_no": 27, "char_start": 893, "char_end": 1038, "line": "newtoken = `mysql backendkit --skip-column-names -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'<EMAIL>\\'\"`\n"}]}, "char_changes": {"deleted": [{"char_start": 280, "char_end": 414, "chars": "oldtoken = `mysql backendkit -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'test@example.com\\'\"`\n"}, {"char_start": 893, "char_end": 1047, "chars": "newtoken = `mysql backendkit --skip-column-names -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'test@example.com\\'\"`\n"}], "added": [{"char_start": 280, "char_end": 405, "chars": "oldtoken = `mysql backendkit -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'<EMAIL>\\'\"`\n"}, {"char_start": 893, "char_end": 1038, "chars": "newtoken = `mysql backendkit --skip-column-names -u #{dbuser} -p#{dbpass} -e \"SELECT verification_token FROM bek_users WHERE email=\\'<EMAIL>\\'\"`\n"}]}}
{"func_name": 4692, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      end\n\n      # Make a PUT Request.\n      #\n      # @example\n      #\n      #   client = Bambora::Rest::JSONClient(base_url: '...', api_key: '...', merchant_id: '...')\n      #   profiles = Bambora::V1::ProfileResource(client: client)\n      #   customer_code = '02355E2e58Bf488EAB4EaFAD7083dB6A'\n      #\n      #   data = {\n      #     billing: {\n      #        name: \"joh doe\",\n      #        address_line1: \"123 main st\",\n      #        address_line2: \"111\",\n      #        city: \"victoria\",\n      #        province: \"bc\",\n      #        country: \"ca\",\n      #        postal_code: \"V8T4M3\",\n      #        phone_number: \"25012312345\",\n      #        email_address: \"bill@smith.com\"\n      #     },\n      #     card: {\n      #       name: 'Hup Podling',\n      #       number: '4030000010001234',\n      #       expiry_month: '12',\n      #       expiry_year: '23',\n      #       cvd: '123',\n      #     },\n      #   }\n      #\n      #   profiles.update(customer_code: customer_code, payment_profile_data: data)\n      #   # => {\n      #   #      :code => 1,\n      #   #      :message => \"Operation Successful\",\n      #   #      :customer_code => \"02355E2e58Bf488EAB4EaFAD7083dB6A\",\n      #   #    }\n      #\n      # @param customer_code [String] A unique identifier for the associated payment profile.\n      # @param data [Hash] Payment profile data to be sent in the body of the request.\n      #\n      # @return [Hash] Indicating success or failure of the operation.\n      def update(customer_code:, payment_profile_data:)\n        client.put(path: \"#{@sub_path}/#{customer_code}\", body: payment_profile_data, api_key: api_key)\n      end\n\n      ##\n      # Delete a Bambora payment profile given a customer code.\n      #\n      # @example", "func_src_after": "      end\n\n      # Make a PUT Request.\n      #\n      # @example\n      #\n      #   client = Bambora::Rest::JSONClient(base_url: '...', api_key: '...', merchant_id: '...')\n      #   profiles = Bambora::V1::ProfileResource(client: client)\n      #   customer_code = '02355E2e58Bf488EAB4EaFAD7083dB6A'\n      #\n      #   data = {\n      #     billing: {\n      #        name: \"joh doe\",\n      #        address_line1: \"123 main st\",\n      #        address_line2: \"111\",\n      #        city: \"victoria\",\n      #        province: \"bc\",\n      #        country: \"ca\",\n      #        postal_code: \"V8T4M3\",\n      #        phone_number: \"25012312345\",\n      #        email_address: \"<EMAIL>\"\n      #     },\n      #     card: {\n      #       name: 'Hup Podling',\n      #       number: '4030000010001234',\n      #       expiry_month: '12',\n      #       expiry_year: '23',\n      #       cvd: '123',\n      #     },\n      #   }\n      #\n      #   profiles.update(customer_code: customer_code, payment_profile_data: data)\n      #   # => {\n      #   #      :code => 1,\n      #   #      :message => \"Operation Successful\",\n      #   #      :customer_code => \"02355E2e58Bf488EAB4EaFAD7083dB6A\",\n      #   #    }\n      #\n      # @param customer_code [String] A unique identifier for the associated payment profile.\n      # @param data [Hash] Payment profile data to be sent in the body of the request.\n      #\n      # @return [Hash] Indicating success or failure of the operation.\n      def update(customer_code:, payment_profile_data:)\n        client.put(path: \"#{@sub_path}/#{customer_code}\", body: payment_profile_data, api_key: api_key)\n      end\n\n      ##\n      # Delete a Bambora payment profile given a customer code.\n      #\n      # @example", "line_changes": {"deleted": [{"line_no": 21, "char_start": 637, "char_end": 684, "line": "      #        email_address: \"bill@smith.com\"\n"}], "added": [{"line_no": 22, "char_start": 637, "char_end": 677, "line": "      #        email_address: \"<EMAIL>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 637, "char_end": 684, "chars": "      #        email_address: \"bill@smith.com\"\n"}], "added": [{"char_start": 637, "char_end": 677, "chars": "      #        email_address: \"<EMAIL>\"\n"}]}}
{"func_name": 4695, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "class Caddy < Formula\n  desc \"Powerful, enterprise-ready, open source web server with automatic HTTPS\"\n  homepage \"https://caddyserver.com/\"\n  url \"https://github.com/caddyserver/caddy/archive/v2.5.1.tar.gz\"\n  sha256 \"841f5524e2e107bff278b604c544843564a4a1ef0c3803eeae588e79e4ea5d06\"\n  license \"Apache-2.0\"\n  head \"https://github.com/caddyserver/caddy.git\", branch: \"master\"\n\n  bottle do\n    root_url \"https://github.com/gromgit/homebrew-core-mojave/releases/download/caddy\"\n    sha256 cellar: :any_skip_relocation, mojave: \"fcf9d6604b454e7dcb47837087306a72c71c948c04753dea8f173dd4804b431a\"\n  end\n\n  depends_on \"go\" => :build\n\n  resource \"xcaddy\" do\n    url \"https://github.com/caddyserver/xcaddy/archive/v0.3.0.tar.gz\"\n    sha256 \"1a59ff6f51959072a512002e7ec280ea96775361277ba046a8af5a820a37aacd\"\n  end\n\n  def install\n    revision = build.head? ? version.commit : \"v#{version}\"\n\n    resource(\"xcaddy\").stage do\n      system \"go\", \"run\", \"cmd/xcaddy/main.go\", \"build\", revision, \"--output\", bin/\"caddy\"\n    end\n  end\n\n  service do\n    run [opt_bin/\"caddy\", \"run\", \"--config\", etc/\"Caddyfile\"]\n    keep_alive true\n    error_log_path var/\"log/caddy.log\"\n    log_path var/\"log/caddy.log\"\n  end\n\n  test do\n    port1 = free_port\n    port2 = free_port\n\n    (testpath/\"Caddyfile\").write <<~EOS\n      {\n        admin 127.0.0.1:#{port1}\n      }\n\n      http://127.0.0.1:#{port2} {\n        respond \"Hello, Caddy!\"\n      }\n    EOS\n\n    fork do", "func_src_after": "class Caddy < Formula\n  desc \"Powerful, enterprise-ready, open source web server with automatic HTTPS\"\n  homepage \"https://caddyserver.com/\"\n  url \"https://github.com/caddyserver/caddy/archive/v2.5.1.tar.gz\"\n  sha256 \"841f5524e2e107bff278b604c544843564a4a1ef0c3803eeae588e79e4ea5d06\"\n  license \"Apache-2.0\"\n  head \"https://github.com/caddyserver/caddy.git\", branch: \"master\"\n\n  bottle do\n    root_url \"https://github.com/gromgit/homebrew-core-mojave/releases/download/caddy\"\n    sha256 cellar: :any_skip_relocation, mojave: \"fcf9d6604b454e7dcb47837087306a72c71c948c04753dea8f173dd4804b431a\"\n  end\n\n  depends_on \"go\" => :build\n\n  resource \"xcaddy\" do\n    url \"https://github.com/caddyserver/xcaddy/archive/v0.3.0.tar.gz\"\n    sha256 \"1a59ff6f51959072a512002e7ec280ea96775361277ba046a8af5a820a37aacd\"\n  end\n\n  def install\n    revision = build.head? ? version.commit : \"v#{version}\"\n\n    resource(\"xcaddy\").stage do\n      system \"go\", \"run\", \"cmd/xcaddy/main.go\", \"build\", revision, \"--output\", bin/\"caddy\"\n    end\n  end\n\n  service do\n    run [opt_bin/\"caddy\", \"run\", \"--config\", etc/\"Caddyfile\"]\n    keep_alive true\n    error_log_path var/\"log/caddy.log\"\n    log_path var/\"log/caddy.log\"\n  end\n\n  test do\n    port1 = free_port\n    port2 = free_port\n\n    (testpath/\"Caddyfile\").write <<~EOS\n      {\n        admin <IP-Address>#{port1}\n      }\n\n      http://<IP-Address>#{port2} {\n        respond \"Hello, Caddy!\"\n      }\n    EOS\n\n    fork do", "line_changes": {"deleted": [{"line_no": 42, "char_start": 1295, "char_end": 1328, "line": "        admin 127.0.0.1:#{port1}\n"}, {"line_no": 46, "char_start": 1339, "char_end": 1373, "line": "      http://127.0.0.1:#{port2} {\n"}], "added": [{"line_no": 43, "char_start": 1295, "char_end": 1330, "line": "        admin <IP-Address>#{port1}\n"}, {"line_no": 47, "char_start": 1339, "char_end": 1375, "line": "      http://<IP-Address>#{port2} {\n"}]}, "char_changes": {"deleted": [{"char_start": 1295, "char_end": 1328, "chars": "        admin 127.0.0.1:#{port1}\n"}, {"char_start": 1339, "char_end": 1373, "chars": "      http://127.0.0.1:#{port2} {\n"}], "added": [{"char_start": 1295, "char_end": 1330, "chars": "        admin <IP-Address>#{port1}\n"}, {"char_start": 1339, "char_end": 1375, "chars": "      http://<IP-Address>#{port2} {\n"}]}}
{"func_name": 4706, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "              <atom:title>#{h(title)}</atom:title>\n            </atom:entry>\n          EOS\n          header = {\"Content-Type\" => \"application/atom+xml\", \"If-Match\" => \"*\"}\n          @session.request(:put, edit_url, :data => xml, :auth => :writely, :header => header)\n        end\n        \n        alias title= rename\n        \n        # Returns GoogleDrive::Acl object for the file.\n        #\n        # With the object, you can see and modify people who can access the file.\n        # Modifications take effect immediately.\n        #\n        # Set <tt>params[:reload]</tt> to true to force reloading the data.\n        #\n        # e.g.\n        #   # Dumps people who have access:\n        #   for entry in file.acl\n        #     p [entry.scope_type, entry.scope, entry.role]\n        #     # => e.g. [\"user\", \"example1@gmail.com\", \"owner\"]\n        #   end\n        #   \n        #   # Shares the file with new people:\n        #   # NOTE: This sends email to the new people.\n        #   file.acl.push(\n        #       {:scope_type => \"user\", :scope => \"example2@gmail.com\", :role => \"reader\"})\n        #   file.acl.push(\n        #       {:scope_type => \"user\", :scope => \"example3@gmail.com\", :role => \"writer\"})\n        #   \n        #   # Changes the role of a person:\n        #   file.acl[1].role = \"writer\"\n        #   \n        #   # Deletes an ACL entry:\n        #   file.acl.delete(file.acl[1])\n        def acl(params = {})\n          if !@acl || params[:reload]\n            @acl = Acl.new(@session, self.acl_feed_url)\n          end\n          return @acl\n        end\n\n        def inspect\n          fields = {:document_feed_url => self.document_feed_url}\n          fields[:title] = self.title if @document_feed_entry\n          return \"\\#<%p %s>\" % [self.class, fields.map(){ |k, v| \"%s=%p\" % [k, v] }.join(\", \")]\n        end\n        \n    end\n    ", "func_src_after": "              <atom:title>#{h(title)}</atom:title>\n            </atom:entry>\n          EOS\n          header = {\"Content-Type\" => \"application/atom+xml\", \"If-Match\" => \"*\"}\n          @session.request(:put, edit_url, :data => xml, :auth => :writely, :header => header)\n        end\n        \n        alias title= rename\n        \n        # Returns GoogleDrive::Acl object for the file.\n        #\n        # With the object, you can see and modify people who can access the file.\n        # Modifications take effect immediately.\n        #\n        # Set <tt>params[:reload]</tt> to true to force reloading the data.\n        #\n        # e.g.\n        #   # Dumps people who have access:\n        #   for entry in file.acl\n        #     p [entry.scope_type, entry.scope, entry.role]\n        #     # => e.g. [\"user\", \"<EMAIL>\", \"owner\"]\n        #   end\n        #   \n        #   # Shares the file with new people:\n        #   # NOTE: This sends email to the new people.\n        #   file.acl.push(\n        #       {:scope_type => \"user\", :scope => \"<EMAIL>\", :role => \"reader\"})\n        #   file.acl.push(\n        #       {:scope_type => \"user\", :scope => \"<EMAIL>\", :role => \"writer\"})\n        #   \n        #   # Changes the role of a person:\n        #   file.acl[1].role = \"writer\"\n        #   \n        #   # Deletes an ACL entry:\n        #   file.acl.delete(file.acl[1])\n        def acl(params = {})\n          if !@acl || params[:reload]\n            @acl = Acl.new(@session, self.acl_feed_url)\n          end\n          return @acl\n        end\n\n        def inspect\n          fields = {:document_feed_url => self.document_feed_url}\n          fields[:title] = self.title if @document_feed_entry\n          return \"\\#<%p %s>\" % [self.class, fields.map(){ |k, v| \"%s=%p\" % [k, v] }.join(\", \")]\n        end\n        \n    end\n    ", "line_changes": {"deleted": [{"line_no": 21, "char_start": 771, "char_end": 835, "line": "        #     # => e.g. [\"user\", \"example1@gmail.com\", \"owner\"]\n"}, {"line_no": 28, "char_start": 983, "char_end": 1075, "line": "        #       {:scope_type => \"user\", :scope => \"example2@gmail.com\", :role => \"reader\"})\n"}, {"line_no": 31, "char_start": 1091, "char_end": 1183, "line": "        #       {:scope_type => \"user\", :scope => \"example3@gmail.com\", :role => \"writer\"})\n"}], "added": [{"line_no": 22, "char_start": 771, "char_end": 824, "line": "        #     # => e.g. [\"user\", \"<EMAIL>\", \"owner\"]\n"}, {"line_no": 29, "char_start": 983, "char_end": 1064, "line": "        #       {:scope_type => \"user\", :scope => \"<EMAIL>\", :role => \"reader\"})\n"}, {"line_no": 32, "char_start": 1091, "char_end": 1172, "line": "        #       {:scope_type => \"user\", :scope => \"<EMAIL>\", :role => \"writer\"})\n"}]}, "char_changes": {"deleted": [{"char_start": 771, "char_end": 835, "chars": "        #     # => e.g. [\"user\", \"example1@gmail.com\", \"owner\"]\n"}, {"char_start": 983, "char_end": 1075, "chars": "        #       {:scope_type => \"user\", :scope => \"example2@gmail.com\", :role => \"reader\"})\n"}, {"char_start": 1091, "char_end": 1183, "chars": "        #       {:scope_type => \"user\", :scope => \"example3@gmail.com\", :role => \"writer\"})\n"}], "added": [{"char_start": 771, "char_end": 824, "chars": "        #     # => e.g. [\"user\", \"<EMAIL>\", \"owner\"]\n"}, {"char_start": 983, "char_end": 1064, "chars": "        #       {:scope_type => \"user\", :scope => \"<EMAIL>\", :role => \"reader\"})\n"}, {"char_start": 1091, "char_end": 1172, "chars": "        #       {:scope_type => \"user\", :scope => \"<EMAIL>\", :role => \"writer\"})\n"}]}}
{"func_name": 4708, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    end\n\n    context 'when service_enable is set to valid bool <false>' do\n      let(:params) { { :service_enable => false } }\n      it { should contain_service('monit').with_enable(false) }\n    end\n\n    context 'when service_ensure is set to valid string <stopped>' do\n      let(:params) { { :service_ensure => 'stopped' } }\n      it { should contain_service('monit').with_ensure('stopped') }\n    end\n\n    context 'when service_manage is set to valid bool <false>' do\n      let(:params) { { :service_manage => false } }\n      it { should_not contain_service('monit') }\n      it { should_not contain_file('/etc/default/monit') }\n    end\n\n    context 'when service_name is set to valid string <stopped>' do\n      let(:params) { { :service_name => 'monit3' } }\n      it { should contain_service('monit').with_name('monit3') }\n    end\n\n    context 'when logfile is set to valid path </var/log/monit3.log>' do\n      let(:params) { { :logfile => '/var/log/monit3.log' } }\n      it { should contain_file('monit_config').with_content(%r{^set logfile /var/log/monit3.log$}) }\n    end\n\n    context 'when logfile is set to valid string <syslog>' do\n      let(:params) { { :logfile => 'syslog' } }\n      it { should contain_file('monit_config').with_content(/^set logfile syslog$/) }\n    end\n\n    context 'when mailserver is set to valid string <mailhost>' do\n      let(:params) { { :mailserver => 'mailhost' } }\n      it { should contain_file('monit_config').with_content(/^set mailserver mailhost$/) }\n    end\n\n    context 'when mailformat is set to valid hash' do\n      let(:params) do\n        {\n          :mailformat => {\n            'from'    => 'monit@test.local',\n            'message' => 'Monit $ACTION $SERVICE at $DATE on $HOST: $DESCRIPTION',\n            'subject' => 'spectesting',\n          }\n        }\n      end\n      content = <<-END.gsub(/^\\s+\\|/, '')\n        |set mail-format \\{", "func_src_after": "    end\n\n    context 'when service_enable is set to valid bool <false>' do\n      let(:params) { { :service_enable => false } }\n      it { should contain_service('monit').with_enable(false) }\n    end\n\n    context 'when service_ensure is set to valid string <stopped>' do\n      let(:params) { { :service_ensure => 'stopped' } }\n      it { should contain_service('monit').with_ensure('stopped') }\n    end\n\n    context 'when service_manage is set to valid bool <false>' do\n      let(:params) { { :service_manage => false } }\n      it { should_not contain_service('monit') }\n      it { should_not contain_file('/etc/default/monit') }\n    end\n\n    context 'when service_name is set to valid string <stopped>' do\n      let(:params) { { :service_name => 'monit3' } }\n      it { should contain_service('monit').with_name('monit3') }\n    end\n\n    context 'when logfile is set to valid path </var/log/monit3.log>' do\n      let(:params) { { :logfile => '/var/log/monit3.log' } }\n      it { should contain_file('monit_config').with_content(%r{^set logfile /var/log/monit3.log$}) }\n    end\n\n    context 'when logfile is set to valid string <syslog>' do\n      let(:params) { { :logfile => 'syslog' } }\n      it { should contain_file('monit_config').with_content(/^set logfile syslog$/) }\n    end\n\n    context 'when mailserver is set to valid string <mailhost>' do\n      let(:params) { { :mailserver => 'mailhost' } }\n      it { should contain_file('monit_config').with_content(/^set mailserver mailhost$/) }\n    end\n\n    context 'when mailformat is set to valid hash' do\n      let(:params) do\n        {\n          :mailformat => {\n            'from'    => '<EMAIL>',\n            'message' => 'Monit $ACTION $SERVICE at $DATE on $HOST: $DESCRIPTION',\n            'subject' => 'spectesting',\n          }\n        }\n      end\n      content = <<-END.gsub(/^\\s+\\|/, '')\n        |set mail-format \\{", "line_changes": {"deleted": [{"line_no": 43, "char_start": 1615, "char_end": 1660, "line": "            'from'    => 'monit@test.local',\n"}], "added": [{"line_no": 44, "char_start": 1615, "char_end": 1651, "line": "            'from'    => '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 1615, "char_end": 1660, "chars": "            'from'    => 'monit@test.local',\n"}], "added": [{"char_start": 1615, "char_end": 1651, "chars": "            'from'    => '<EMAIL>',\n"}]}}
{"func_name": 4714, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    it \"closes the connection on the stream\" do\n      stream = Class.new do\n        attr_reader :closed\n        def close_connection\n          @closed = true\n        end\n      end\n\n      @room.stream = stream.new\n      @channel.stream_campfire_to_channel # sets up stream\n      @channel.part\n\n      assert @room.stream.closed\n    end\n\n    it \"closes the em-http connection if present\" do\n      stream = Class.new do\n        attr_reader :closed\n        def close # em-http defines this\n          @closed = true\n        end\n      end\n\n      @room.stream = stream.new\n      @channel.stream_campfire_to_channel # sets up stream\n      @channel.part\n\n      assert @room.stream.closed\n    end\n\n    it \"leaves the channel\" do\n      @channel.part\n      assert @room.left\n    end\n  end\n\n  describe \"#list_users\" do\n    before :each do\n      @room.users = [OpenStruct.new(:id => 10, :name => \"Joe\", :email_address => \"user@example.com\")]\n      @channel.join\n      @client.sent.clear\n    end\n    it \"retrieves a list of users and sends them to the client\" do\n      @channel.list_users\n      @client.sent.first.must_equal(\n        \":camper_van 352 nathan #test user example.com camper_van joe H :0 Joe\"\n      )\n      @client.sent.last.must_match /:camper_van 315 nathan #test :End/\n    end\n", "func_src_after": "    it \"closes the connection on the stream\" do\n      stream = Class.new do\n        attr_reader :closed\n        def close_connection\n          @closed = true\n        end\n      end\n\n      @room.stream = stream.new\n      @channel.stream_campfire_to_channel # sets up stream\n      @channel.part\n\n      assert @room.stream.closed\n    end\n\n    it \"closes the em-http connection if present\" do\n      stream = Class.new do\n        attr_reader :closed\n        def close # em-http defines this\n          @closed = true\n        end\n      end\n\n      @room.stream = stream.new\n      @channel.stream_campfire_to_channel # sets up stream\n      @channel.part\n\n      assert @room.stream.closed\n    end\n\n    it \"leaves the channel\" do\n      @channel.part\n      assert @room.left\n    end\n  end\n\n  describe \"#list_users\" do\n    before :each do\n      @room.users = [OpenStruct.new(:id => 10, :name => \"Joe\", :email_address => \"<EMAIL>\")]\n      @channel.join\n      @client.sent.clear\n    end\n    it \"retrieves a list of users and sends them to the client\" do\n      @channel.list_users\n      @client.sent.first.must_equal(\n        \":camper_van 352 nathan #test user example.com camper_van joe H :0 Joe\"\n      )\n      @client.sent.last.must_match /:camper_van 315 nathan #test :End/\n    end\n", "line_changes": {"deleted": [{"line_no": 39, "char_start": 825, "char_end": 927, "line": "      @room.users = [OpenStruct.new(:id => 10, :name => \"Joe\", :email_address => \"user@example.com\")]\n"}], "added": [{"line_no": 40, "char_start": 825, "char_end": 918, "line": "      @room.users = [OpenStruct.new(:id => 10, :name => \"Joe\", :email_address => \"<EMAIL>\")]\n"}]}, "char_changes": {"deleted": [{"char_start": 825, "char_end": 927, "chars": "      @room.users = [OpenStruct.new(:id => 10, :name => \"Joe\", :email_address => \"user@example.com\")]\n"}], "added": [{"char_start": 825, "char_end": 918, "chars": "      @room.users = [OpenStruct.new(:id => 10, :name => \"Joe\", :email_address => \"<EMAIL>\")]\n"}]}}
{"func_name": 4731, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "keepalived_http_get 'port-80' do\n  connect_timeout 15\n  url path: '/health_check', status_code: 301\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nkeepalived_ssl_get 'port-443' do\n  connect_timeout 20\n  url path: '/health_check', status_code: 200\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nkeepalived_smtp_check 'port-25' do\n  connect_timeout 30\n  helo_name 'smtp.example.com'\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nfile '/usr/local/bin/keepalived-ping-check.sh' do\n  content <<-EOS\n    #!/usr/bin/sh\n    ping -c 2 8.8.8.8\n  EOS\n  mode '755'\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nkeepalived_misc_check 'ping-check' do\n  misc_path '/usr/local/bin/keepalived-ping-check.sh'\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\n%w( 192.168.1.13 192.168.1.14 ).each do |addr|\n  keepalived_real_server \"#{addr}-80\" do\n    ipaddress addr\n    port 80\n    weight 5\n    inhibit_on_failure true\n    healthcheck resources(keepalived_http_get: 'port-80').config_file\n    notifies :restart, 'service[keepalived]', :delayed\n  end\n\n  keepalived_real_server \"#{addr}-443\" do\n    ipaddress addr\n    port 443\n    weight 5\n    inhibit_on_failure true\n    healthcheck resources(keepalived_ssl_get: 'port-443').config_file\n    notifies :restart, 'service[keepalived]', :delayed\n  end", "func_src_after": "keepalived_http_get 'port-80' do\n  connect_timeout 15\n  url path: '/health_check', status_code: 301\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nkeepalived_ssl_get 'port-443' do\n  connect_timeout 20\n  url path: '/health_check', status_code: 200\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nkeepalived_smtp_check 'port-25' do\n  connect_timeout 30\n  helo_name 'smtp.example.com'\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nfile '/usr/local/bin/keepalived-ping-check.sh' do\n  content <<-EOS\n    #!/usr/bin/sh\n    ping -c 2 <IP-Address>\n  EOS\n  mode '755'\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\nkeepalived_misc_check 'ping-check' do\n  misc_path '/usr/local/bin/keepalived-ping-check.sh'\n  notifies :restart, 'service[keepalived]', :delayed\nend\n\n%w( <IP-Address> <IP-Address> ).each do |addr|\n  keepalived_real_server \"#{addr}-80\" do\n    ipaddress addr\n    port 80\n    weight 5\n    inhibit_on_failure true\n    healthcheck resources(keepalived_http_get: 'port-80').config_file\n    notifies :restart, 'service[keepalived]', :delayed\n  end\n\n  keepalived_real_server \"#{addr}-443\" do\n    ipaddress addr\n    port 443\n    weight 5\n    inhibit_on_failure true\n    healthcheck resources(keepalived_ssl_get: 'port-443').config_file\n    notifies :restart, 'service[keepalived]', :delayed\n  end", "line_changes": {"deleted": [{"line_no": 22, "char_start": 546, "char_end": 568, "line": "    ping -c 2 8.8.8.8\n"}, {"line_no": 34, "char_start": 800, "char_end": 847, "line": "%w( 192.168.1.13 192.168.1.14 ).each do |addr|\n"}], "added": [{"line_no": 23, "char_start": 546, "char_end": 573, "line": "    ping -c 2 <IP-Address>\n"}, {"line_no": 35, "char_start": 800, "char_end": 847, "line": "%w( <IP-Address> <IP-Address> ).each do |addr|\n"}]}, "char_changes": {"deleted": [{"char_start": 546, "char_end": 568, "chars": "    ping -c 2 8.8.8.8\n"}, {"char_start": 800, "char_end": 847, "chars": "%w( 192.168.1.13 192.168.1.14 ).each do |addr|\n"}], "added": [{"char_start": 546, "char_end": 573, "chars": "    ping -c 2 <IP-Address>\n"}, {"char_start": 800, "char_end": 847, "chars": "%w( <IP-Address> <IP-Address> ).each do |addr|\n"}]}}
{"func_name": 4737, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require 'spec_helper'\n\ndescribe User do\n  #pending \"add some examples to (or delete) #{__FILE__}\"\nend\n\ndescribe 'username validation' do\n  it 'will not accept spaces' do\n    user = create(:invite).users.build(\n      username: 'This username has spaces',\n      email: 'thisisanemail@rspec.com',\n      password: 'helloworld'\n    )\n\n    user.save.should eq(false)\n    User.count.should eq(0)\n  end\n\n  it 'will accept alphanumerics, underscores and hyphens' do\n    user = create(:invite).users.build(\n      username: 'azAZ0123456789_-alice_m',\n      email: 'thisisanemail@rspec.com',\n      password: 'helloworld'\n    )\n\n    user.save.should eq(true)\n    User.count.should eq(1)\n    User.first.username.should eq('azAZ0123456789_-alice_m')\n  end\n\nend\n\ndescribe 'image count' do\n  it 'will let us know if this user has images or not' do\n    user_with_images = create(:user_with_image)\n    user_without_images = create(:user)\n\n    user_with_images.has_images?.should be_true\n    user_without_images.has_images?.should be_false\n  end\nend\n", "func_src_after": "require 'spec_helper'\n\ndescribe User do\n  #pending \"add some examples to (or delete) #{__FILE__}\"\nend\n\ndescribe 'username validation' do\n  it 'will not accept spaces' do\n    user = create(:invite).users.build(\n      username: 'This username has spaces',\n      email: '<EMAIL>',\n      password: 'helloworld'\n    )\n\n    user.save.should eq(false)\n    User.count.should eq(0)\n  end\n\n  it 'will accept alphanumerics, underscores and hyphens' do\n    user = create(:invite).users.build(\n      username: 'azAZ0123456789_-alice_m',\n      email: '<EMAIL>',\n      password: 'helloworld'\n    )\n\n    user.save.should eq(true)\n    User.count.should eq(1)\n    User.first.username.should eq('azAZ0123456789_-alice_m')\n  end\n\nend\n\ndescribe 'image count' do\n  it 'will let us know if this user has images or not' do\n    user_with_images = create(:user_with_image)\n    user_without_images = create(:user)\n\n    user_with_images.has_images?.should be_true\n    user_without_images.has_images?.should be_false\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 11, "char_start": 254, "char_end": 294, "line": "      email: 'thisisanemail@rspec.com',\n"}, {"line_no": 23, "char_start": 524, "char_end": 564, "line": "      email: 'thisisanemail@rspec.com',\n"}], "added": [{"line_no": 12, "char_start": 254, "char_end": 278, "line": "      email: '<EMAIL>',\n"}, {"line_no": 24, "char_start": 524, "char_end": 548, "line": "      email: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 254, "char_end": 294, "chars": "      email: 'thisisanemail@rspec.com',\n"}, {"char_start": 524, "char_end": 564, "chars": "      email: 'thisisanemail@rspec.com',\n"}], "added": [{"char_start": 254, "char_end": 278, "chars": "      email: '<EMAIL>',\n"}, {"char_start": 524, "char_end": 548, "chars": "      email: '<EMAIL>',\n"}]}}
{"func_name": 4769, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      {'name' => 'zone-3', 'cloud_properties' => {}},\n    ]\n    cloud_config_hash['compilation']['az'] = 'zone-1'\n    cloud_config_hash['networks'].first['subnets'] = [\n      {\n        'range' => '192.168.1.0/24',\n        'gateway' => '192.168.1.1',\n        'dns' => ['192.168.1.1', '192.168.1.2'],\n        'static' => ['192.168.1.10'],\n        'reserved' => [],\n        'cloud_properties' => {},\n        'az' => 'zone-1',\n      },\n      {\n        'range' => '192.168.2.0/24',\n        'gateway' => '192.168.2.1',\n        'dns' => ['192.168.2.1', '192.168.2.2'],\n        'static' => ['192.168.2.10'],\n        'reserved' => [],\n        'cloud_properties' => {},\n        'az' => 'zone-2',\n      },\n      {\n        'range' => '192.168.3.0/24',\n        'gateway' => '192.168.3.1',\n        'dns' => ['192.168.3.1', '192.168.3.2'],\n        'static' => ['192.168.3.10'],\n        'reserved' => [],\n        'cloud_properties' => {},\n        'az' => 'zone-3',\n      }\n    ]\n\n    manifest_hash = Bosh::Spec::NewDeployments.simple_manifest_with_instance_groups\n    manifest_hash['instance_groups'].first['azs'] = ['zone-1', 'zone-2', 'zone-3']\n    deploy_from_scratch(manifest_hash: manifest_hash, cloud_config_hash: cloud_config_hash)\n\n    expect(scrub_random_ids(table(bosh_runner.run('vms', json: true, deployment_name: 'simple')))).to contain_exactly(\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '192.168.1.2', 'vm_cid' => String, 'vm_type' => 'a'},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '192.168.2.2', 'vm_cid' => String, 'vm_type' => 'a'},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '192.168.3.2', 'vm_cid' => String, 'vm_type' => 'a'},\n    )\n\n\n    output = bosh_runner.run('vms --dns', json: true, deployment_name: 'simple')\n    expect(scrub_random_ids(table(output))).to contain_exactly(\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '192.168.1.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n0.foobar.a.simple.bosh\"},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '192.168.2.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n1.foobar.a.simple.bosh\"},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '192.168.3.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n2.foobar.a.simple.bosh\"},\n    )", "func_src_after": "      {'name' => 'zone-3', 'cloud_properties' => {}},\n    ]\n    cloud_config_hash['compilation']['az'] = 'zone-1'\n    cloud_config_hash['networks'].first['subnets'] = [\n      {\n        'range' => '<IP-Address>/24',\n        'gateway' => '<IP-Address>',\n        'dns' => ['<IP-Address>', '<IP-Address>'],\n        'static' => ['<IP-Address>'],\n        'reserved' => [],\n        'cloud_properties' => {},\n        'az' => 'zone-1',\n      },\n      {\n        'range' => '<IP-Address>/24',\n        'gateway' => '<IP-Address>',\n        'dns' => ['<IP-Address>', '<IP-Address>'],\n        'static' => ['<IP-Address>'],\n        'reserved' => [],\n        'cloud_properties' => {},\n        'az' => 'zone-2',\n      },\n      {\n        'range' => '<IP-Address>/24',\n        'gateway' => '<IP-Address>',\n        'dns' => ['<IP-Address>', '<IP-Address>'],\n        'static' => ['<IP-Address>'],\n        'reserved' => [],\n        'cloud_properties' => {},\n        'az' => 'zone-3',\n      }\n    ]\n\n    manifest_hash = Bosh::Spec::NewDeployments.simple_manifest_with_instance_groups\n    manifest_hash['instance_groups'].first['azs'] = ['zone-1', 'zone-2', 'zone-3']\n    deploy_from_scratch(manifest_hash: manifest_hash, cloud_config_hash: cloud_config_hash)\n\n    expect(scrub_random_ids(table(bosh_runner.run('vms', json: true, deployment_name: 'simple')))).to contain_exactly(\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n    )\n\n\n    output = bosh_runner.run('vms --dns', json: true, deployment_name: 'simple')\n    expect(scrub_random_ids(table(output))).to contain_exactly(\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n0.foobar.a.simple.bosh\"},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n1.foobar.a.simple.bosh\"},\n      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n2.foobar.a.simple.bosh\"},\n    )", "line_changes": {"deleted": [{"line_no": 6, "char_start": 177, "char_end": 214, "line": "        'range' => '192.168.1.0/24',\n"}, {"line_no": 7, "char_start": 177, "char_end": 213, "line": "        'gateway' => '192.168.1.1',\n"}, {"line_no": 8, "char_start": 177, "char_end": 226, "line": "        'dns' => ['192.168.1.1', '192.168.1.2'],\n"}, {"line_no": 9, "char_start": 177, "char_end": 215, "line": "        'static' => ['192.168.1.10'],\n"}, {"line_no": 19, "char_start": 444, "char_end": 481, "line": "        'range' => '192.168.2.0/24',\n"}, {"line_no": 20, "char_start": 444, "char_end": 480, "line": "        'gateway' => '192.168.2.1',\n"}, {"line_no": 21, "char_start": 444, "char_end": 493, "line": "        'dns' => ['192.168.2.1', '192.168.2.2'],\n"}, {"line_no": 22, "char_start": 444, "char_end": 482, "line": "        'static' => ['192.168.2.10'],\n"}, {"line_no": 32, "char_start": 711, "char_end": 748, "line": "        'range' => '192.168.3.0/24',\n"}, {"line_no": 33, "char_start": 711, "char_end": 747, "line": "        'gateway' => '192.168.3.1',\n"}, {"line_no": 34, "char_start": 711, "char_end": 760, "line": "        'dns' => ['192.168.3.1', '192.168.3.2'],\n"}, {"line_no": 35, "char_start": 711, "char_end": 749, "line": "        'static' => ['192.168.3.10'],\n"}, {"line_no": 51, "char_start": 1355, "char_end": 1534, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '192.168.1.2', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"line_no": 53, "char_start": 1535, "char_end": 1714, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '192.168.2.2', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"line_no": 55, "char_start": 1715, "char_end": 1894, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '192.168.3.2', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"line_no": 62, "char_start": 2048, "char_end": 2331, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '192.168.1.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n0.foobar.a.simple.bosh\"},\n"}, {"line_no": 64, "char_start": 2332, "char_end": 2615, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '192.168.2.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n1.foobar.a.simple.bosh\"},\n"}, {"line_no": 66, "char_start": 2616, "char_end": 2899, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '192.168.3.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n2.foobar.a.simple.bosh\"},\n"}], "added": [{"line_no": 10, "char_start": 177, "char_end": 215, "line": "        'range' => '<IP-Address>/24',\n"}, {"line_no": 11, "char_start": 215, "char_end": 252, "line": "        'gateway' => '<IP-Address>',\n"}, {"line_no": 12, "char_start": 252, "char_end": 303, "line": "        'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"line_no": 13, "char_start": 303, "char_end": 341, "line": "        'static' => ['<IP-Address>'],\n"}, {"line_no": 23, "char_start": 444, "char_end": 482, "line": "        'range' => '<IP-Address>/24',\n"}, {"line_no": 24, "char_start": 482, "char_end": 519, "line": "        'gateway' => '<IP-Address>',\n"}, {"line_no": 25, "char_start": 519, "char_end": 570, "line": "        'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"line_no": 26, "char_start": 570, "char_end": 608, "line": "        'static' => ['<IP-Address>'],\n"}, {"line_no": 36, "char_start": 711, "char_end": 749, "line": "        'range' => '<IP-Address>/24',\n"}, {"line_no": 37, "char_start": 749, "char_end": 786, "line": "        'gateway' => '<IP-Address>',\n"}, {"line_no": 38, "char_start": 786, "char_end": 837, "line": "        'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"line_no": 39, "char_start": 837, "char_end": 875, "line": "        'static' => ['<IP-Address>'],\n"}, {"line_no": 52, "char_start": 1355, "char_end": 1535, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"line_no": 54, "char_start": 1535, "char_end": 1715, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"line_no": 56, "char_start": 1715, "char_end": 1895, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"line_no": 63, "char_start": 2048, "char_end": 2332, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n0.foobar.a.simple.bosh\"},\n"}, {"line_no": 65, "char_start": 2332, "char_end": 2616, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n1.foobar.a.simple.bosh\"},\n"}, {"line_no": 67, "char_start": 2616, "char_end": 2900, "line": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n2.foobar.a.simple.bosh\"},\n"}]}, "char_changes": {"deleted": [{"char_start": 177, "char_end": 214, "chars": "        'range' => '192.168.1.0/24',\n"}, {"char_start": 177, "char_end": 213, "chars": "        'gateway' => '192.168.1.1',\n"}, {"char_start": 177, "char_end": 226, "chars": "        'dns' => ['192.168.1.1', '192.168.1.2'],\n"}, {"char_start": 177, "char_end": 215, "chars": "        'static' => ['192.168.1.10'],\n"}, {"char_start": 444, "char_end": 481, "chars": "        'range' => '192.168.2.0/24',\n"}, {"char_start": 444, "char_end": 480, "chars": "        'gateway' => '192.168.2.1',\n"}, {"char_start": 444, "char_end": 493, "chars": "        'dns' => ['192.168.2.1', '192.168.2.2'],\n"}, {"char_start": 444, "char_end": 482, "chars": "        'static' => ['192.168.2.10'],\n"}, {"char_start": 711, "char_end": 748, "chars": "        'range' => '192.168.3.0/24',\n"}, {"char_start": 711, "char_end": 747, "chars": "        'gateway' => '192.168.3.1',\n"}, {"char_start": 711, "char_end": 760, "chars": "        'dns' => ['192.168.3.1', '192.168.3.2'],\n"}, {"char_start": 711, "char_end": 749, "chars": "        'static' => ['192.168.3.10'],\n"}, {"char_start": 1355, "char_end": 1534, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '192.168.1.2', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"char_start": 1535, "char_end": 1714, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '192.168.2.2', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"char_start": 1715, "char_end": 1894, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '192.168.3.2', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"char_start": 2048, "char_end": 2331, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '192.168.1.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n0.foobar.a.simple.bosh\"},\n"}, {"char_start": 2332, "char_end": 2615, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '192.168.2.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n1.foobar.a.simple.bosh\"},\n"}, {"char_start": 2616, "char_end": 2899, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '192.168.3.2', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n2.foobar.a.simple.bosh\"},\n"}], "added": [{"char_start": 177, "char_end": 215, "chars": "        'range' => '<IP-Address>/24',\n"}, {"char_start": 215, "char_end": 252, "chars": "        'gateway' => '<IP-Address>',\n"}, {"char_start": 252, "char_end": 303, "chars": "        'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"char_start": 303, "char_end": 341, "chars": "        'static' => ['<IP-Address>'],\n"}, {"char_start": 444, "char_end": 482, "chars": "        'range' => '<IP-Address>/24',\n"}, {"char_start": 482, "char_end": 519, "chars": "        'gateway' => '<IP-Address>',\n"}, {"char_start": 519, "char_end": 570, "chars": "        'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"char_start": 570, "char_end": 608, "chars": "        'static' => ['<IP-Address>'],\n"}, {"char_start": 711, "char_end": 749, "chars": "        'range' => '<IP-Address>/24',\n"}, {"char_start": 749, "char_end": 786, "chars": "        'gateway' => '<IP-Address>',\n"}, {"char_start": 786, "char_end": 837, "chars": "        'dns' => ['<IP-Address>', '<IP-Address>'],\n"}, {"char_start": 837, "char_end": 875, "chars": "        'static' => ['<IP-Address>'],\n"}, {"char_start": 1355, "char_end": 1535, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"char_start": 1535, "char_end": 1715, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"char_start": 1715, "char_end": 1895, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a'},\n"}, {"char_start": 2048, "char_end": 2332, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-1', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n0.foobar.a.simple.bosh\"},\n"}, {"char_start": 2332, "char_end": 2616, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-2', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n1.foobar.a.simple.bosh\"},\n"}, {"char_start": 2616, "char_end": 2900, "chars": "      {'instance' => 'foobar/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'process_state' => 'running', 'az' => 'zone-3', 'ips' => '<IP-Address>', 'vm_cid' => String, 'vm_type' => 'a', 'dns_a_records' => \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.foobar.a.simple.bosh\\n2.foobar.a.simple.bosh\"},\n"}]}}
{"func_name": 4798, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# -*- encoding: utf-8 -*-\n# stub: nexmo 5.5.0 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"nexmo\".freeze\n  s.version = \"5.5.0\"\n\n  s.required_rubygems_version = Gem::Requirement.new(\">= 0\".freeze) if s.respond_to? :required_rubygems_version=\n  s.metadata = { \"bug_tracker_uri\" => \"https://github.com/Nexmo/nexmo-ruby/issues\", \"changelog_uri\" => \"https://github.com/Nexmo/nexmo-ruby/blob/master/CHANGES.md\", \"homepage\" => \"https://github.com/Nexmo/nexmo-ruby\", \"source_code_uri\" => \"https://github.com/Nexmo/nexmo-ruby\" } if s.respond_to? :metadata=\n  s.require_paths = [\"lib\".freeze]\n  s.authors = [\"Nexmo\".freeze]\n  s.date = \"2018-12-03\"\n  s.description = \"Nexmo Client Library for Ruby\".freeze\n  s.email = [\"devrel@nexmo.com\".freeze]\n  s.homepage = \"https://github.com/Nexmo/nexmo-ruby\".freeze\n  s.licenses = [\"MIT\".freeze]\n  s.required_ruby_version = Gem::Requirement.new(\">= 2.1.0\".freeze)\n  s.rubygems_version = \"3.0.3\".freeze\n  s.summary = \"This is the Ruby client library for Nexmo's API. To use it you'll need a Nexmo account. Sign up for free at https://www.nexmo.com\".freeze\n\n  s.installed_by_version = \"3.0.3\" if s.respond_to? :installed_by_version\n\n  if s.respond_to? :specification_version then\n    s.specification_version = 4\n\n    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then\n      s.add_runtime_dependency(%q<jwt>.freeze, [\"~> 2\"])\n      s.add_development_dependency(%q<rake>.freeze, [\"~> 12.0\"])\n      s.add_development_dependency(%q<minitest>.freeze, [\"~> 5.0\"])\n      s.add_development_dependency(%q<webmock>.freeze, [\"~> 3.0\"])\n    else\n      s.add_dependency(%q<jwt>.freeze, [\"~> 2\"])\n      s.add_dependency(%q<rake>.freeze, [\"~> 12.0\"])\n      s.add_dependency(%q<minitest>.freeze, [\"~> 5.0\"])\n      s.add_dependency(%q<webmock>.freeze, [\"~> 3.0\"])\n    end\n  else\n    s.add_dependency(%q<jwt>.freeze, [\"~> 2\"])\n    s.add_dependency(%q<rake>.freeze, [\"~> 12.0\"])\n    s.add_dependency(%q<minitest>.freeze, [\"~> 5.0\"])\n    s.add_dependency(%q<webmock>.freeze, [\"~> 3.0\"])\n  end\nend\n", "func_src_after": "# -*- encoding: utf-8 -*-\n# stub: nexmo 5.5.0 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"nexmo\".freeze\n  s.version = \"5.5.0\"\n\n  s.required_rubygems_version = Gem::Requirement.new(\">= 0\".freeze) if s.respond_to? :required_rubygems_version=\n  s.metadata = { \"bug_tracker_uri\" => \"https://github.com/Nexmo/nexmo-ruby/issues\", \"changelog_uri\" => \"https://github.com/Nexmo/nexmo-ruby/blob/master/CHANGES.md\", \"homepage\" => \"https://github.com/Nexmo/nexmo-ruby\", \"source_code_uri\" => \"https://github.com/Nexmo/nexmo-ruby\" } if s.respond_to? :metadata=\n  s.require_paths = [\"lib\".freeze]\n  s.authors = [\"Nexmo\".freeze]\n  s.date = \"2018-12-03\"\n  s.description = \"Nexmo Client Library for Ruby\".freeze\n  s.email = [\"<EMAIL>\".freeze]\n  s.homepage = \"https://github.com/Nexmo/nexmo-ruby\".freeze\n  s.licenses = [\"MIT\".freeze]\n  s.required_ruby_version = Gem::Requirement.new(\">= 2.1.0\".freeze)\n  s.rubygems_version = \"3.0.3\".freeze\n  s.summary = \"This is the Ruby client library for Nexmo's API. To use it you'll need a Nexmo account. Sign up for free at https://www.nexmo.com\".freeze\n\n  s.installed_by_version = \"3.0.3\" if s.respond_to? :installed_by_version\n\n  if s.respond_to? :specification_version then\n    s.specification_version = 4\n\n    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then\n      s.add_runtime_dependency(%q<jwt>.freeze, [\"~> 2\"])\n      s.add_development_dependency(%q<rake>.freeze, [\"~> 12.0\"])\n      s.add_development_dependency(%q<minitest>.freeze, [\"~> 5.0\"])\n      s.add_development_dependency(%q<webmock>.freeze, [\"~> 3.0\"])\n    else\n      s.add_dependency(%q<jwt>.freeze, [\"~> 2\"])\n      s.add_dependency(%q<rake>.freeze, [\"~> 12.0\"])\n      s.add_dependency(%q<minitest>.freeze, [\"~> 5.0\"])\n      s.add_dependency(%q<webmock>.freeze, [\"~> 3.0\"])\n    end\n  else\n    s.add_dependency(%q<jwt>.freeze, [\"~> 2\"])\n    s.add_dependency(%q<rake>.freeze, [\"~> 12.0\"])\n    s.add_dependency(%q<minitest>.freeze, [\"~> 5.0\"])\n    s.add_dependency(%q<webmock>.freeze, [\"~> 3.0\"])\n  end\nend\n", "line_changes": {"deleted": [{"line_no": 14, "char_start": 702, "char_end": 742, "line": "  s.email = [\"devrel@nexmo.com\".freeze]\n"}], "added": [{"line_no": 15, "char_start": 702, "char_end": 733, "line": "  s.email = [\"<EMAIL>\".freeze]\n"}]}, "char_changes": {"deleted": [{"char_start": 702, "char_end": 742, "chars": "  s.email = [\"devrel@nexmo.com\".freeze]\n"}], "added": [{"char_start": 702, "char_end": 733, "chars": "  s.email = [\"<EMAIL>\".freeze]\n"}]}}
{"func_name": 4801, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"errors\"\n\t\"path/filepath\"\n\n\t\"github.com/gocraft/dbr\"\n\t\"go.knocknote.io/octillery\"\n\t\"go.knocknote.io/octillery/path\"\n)\n\ntype Member struct {\n\tID      int64  `db:\"id\"`\n\tNumber  int64  `db:\"number\"`\n\tName    string `db:\"name\"`\n\tIsValid bool   `db:\"is_valid\"`\n}\n\nfunc main() {\n\tif err := octillery.LoadConfig(filepath.Join(path.ThisDirPath(), \"databases.yml\")); err != nil {\n\t\tpanic(err)\n\t}\n\tconn, err := dbr.Open(\"mysql\", \"root:@tcp(127.0.0.1:3306)/mydb\", nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tsess := conn.NewSession(nil)\n\tif conn.DB != nil {\n\t\tif _, err := conn.DB.Exec(`\nCREATE TABLE IF NOT EXISTS members(\n    id integer NOT NULL PRIMARY KEY AUTO_INCREMENT,\n    number integer NOT NULL,\n    name varchar(255),\n    is_valid tinyint(1) NOT NULL\n)`); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t}\n\tif _, err := sess.DeleteFrom(\"members\").Exec(); err != nil {\n\t\tpanic(err)\n\t}\n\n\tresult, err := sess.InsertInto(\"members\").\n\t\tColumns(\"id\", \"number\", \"name\", \"is_valid\").\n\t\tValues(0, 10, \"Bob\", true).\n\t\tExec()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n", "func_src_after": "package main\n\nimport (\n\t\"errors\"\n\t\"path/filepath\"\n\n\t\"github.com/gocraft/dbr\"\n\t\"go.knocknote.io/octillery\"\n\t\"go.knocknote.io/octillery/path\"\n)\n\ntype Member struct {\n\tID      int64  `db:\"id\"`\n\tNumber  int64  `db:\"number\"`\n\tName    string `db:\"name\"`\n\tIsValid bool   `db:\"is_valid\"`\n}\n\nfunc main() {\n\tif err := octillery.LoadConfig(filepath.Join(path.ThisDirPath(), \"databases.yml\")); err != nil {\n\t\tpanic(err)\n\t}\n\tconn, err := dbr.Open(\"mysql\", \"root:@tcp(<IP-Address>3306)/mydb\", nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tsess := conn.NewSession(nil)\n\tif conn.DB != nil {\n\t\tif _, err := conn.DB.Exec(`\nCREATE TABLE IF NOT EXISTS members(\n    id integer NOT NULL PRIMARY KEY AUTO_INCREMENT,\n    number integer NOT NULL,\n    name varchar(255),\n    is_valid tinyint(1) NOT NULL\n)`); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t}\n\tif _, err := sess.DeleteFrom(\"members\").Exec(); err != nil {\n\t\tpanic(err)\n\t}\n\n\tresult, err := sess.InsertInto(\"members\").\n\t\tColumns(\"id\", \"number\", \"name\", \"is_valid\").\n\t\tValues(0, 10, \"Bob\", true).\n\t\tExec()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n", "line_changes": {"deleted": [{"line_no": 23, "char_start": 411, "char_end": 482, "line": "\tconn, err := dbr.Open(\"mysql\", \"root:@tcp(127.0.0.1:3306)/mydb\", nil)\n"}], "added": [{"line_no": 24, "char_start": 411, "char_end": 484, "line": "\tconn, err := dbr.Open(\"mysql\", \"root:@tcp(<IP-Address>3306)/mydb\", nil)\n"}]}, "char_changes": {"deleted": [{"char_start": 411, "char_end": 482, "chars": "\tconn, err := dbr.Open(\"mysql\", \"root:@tcp(127.0.0.1:3306)/mydb\", nil)\n"}], "added": [{"char_start": 411, "char_end": 484, "chars": "\tconn, err := dbr.Open(\"mysql\", \"root:@tcp(<IP-Address>3306)/mydb\", nil)\n"}]}}
{"func_name": 4811, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package apiserver\n\nimport (\n\t\"context\"\n\t\"github.com/rancher/support-bundle-kit/pkg/simulator/certs\"\n\t\"github.com/rancher/support-bundle-kit/pkg/simulator/etcd\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc TestRunAPIServer(t *testing.T) {\n\n\tdir, err := ioutil.TempDir(\"/tmp\", \"apiserver-\")\n\tdefer os.RemoveAll(dir)\n\tif err != nil {\n\t\tt.Fatalf(\"error setting up temp directory for apiserver %v\", err)\n\t}\n\n\tctx, cancel := context.WithTimeout(context.Background(), 60*time.Second)\n\tdefer cancel()\n\n\ta := APIServerConfig{}\n\n\tgeneratedCerts, err := certs.GenerateCerts([]string{\"localhost\", \"127.0.0.1\"}, dir)\n\tif err != nil {\n\t\tt.Fatalf(\"error generating certificates for sim %v\", err)\n\t}\n\ta.Certs = generatedCerts\n\n\tetcdConfig, err := etcd.RunEmbeddedEtcd(context.TODO(), filepath.Join(dir), a.Certs)\n\tif err != nil {\n\t\tt.Fatalf(\"error setting up embedded etcdserver %v\", err)\n\t}\n\ta.Etcd = etcdConfig\n\n\terr = a.GenerateKubeConfig(filepath.Join(dir, \"admin.kubeconfig\"))\n\tif err != nil {\n\t\tt.Fatalf(\"error generating kubeconfig %v\", err)\n\t}\n\n\terr = a.RunAPIServer(ctx)\n\tif err != nil {\n\t\tt.Fatalf(\"error running API Server %v\", err)\n\t}\n}\n", "func_src_after": "package apiserver\n\nimport (\n\t\"context\"\n\t\"github.com/rancher/support-bundle-kit/pkg/simulator/certs\"\n\t\"github.com/rancher/support-bundle-kit/pkg/simulator/etcd\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc TestRunAPIServer(t *testing.T) {\n\n\tdir, err := ioutil.TempDir(\"/tmp\", \"apiserver-\")\n\tdefer os.RemoveAll(dir)\n\tif err != nil {\n\t\tt.Fatalf(\"error setting up temp directory for apiserver %v\", err)\n\t}\n\n\tctx, cancel := context.WithTimeout(context.Background(), 60*time.Second)\n\tdefer cancel()\n\n\ta := APIServerConfig{}\n\n\tgeneratedCerts, err := certs.GenerateCerts([]string{\"localhost\", \"<IP-Address>\"}, dir)\n\tif err != nil {\n\t\tt.Fatalf(\"error generating certificates for sim %v\", err)\n\t}\n\ta.Certs = generatedCerts\n\n\tetcdConfig, err := etcd.RunEmbeddedEtcd(context.TODO(), filepath.Join(dir), a.Certs)\n\tif err != nil {\n\t\tt.Fatalf(\"error setting up embedded etcdserver %v\", err)\n\t}\n\ta.Etcd = etcdConfig\n\n\terr = a.GenerateKubeConfig(filepath.Join(dir, \"admin.kubeconfig\"))\n\tif err != nil {\n\t\tt.Fatalf(\"error generating kubeconfig %v\", err)\n\t}\n\n\terr = a.RunAPIServer(ctx)\n\tif err != nil {\n\t\tt.Fatalf(\"error running API Server %v\", err)\n\t}\n}\n", "line_changes": {"deleted": [{"line_no": 27, "char_start": 537, "char_end": 622, "line": "\tgeneratedCerts, err := certs.GenerateCerts([]string{\"localhost\", \"127.0.0.1\"}, dir)\n"}], "added": [{"line_no": 28, "char_start": 537, "char_end": 625, "line": "\tgeneratedCerts, err := certs.GenerateCerts([]string{\"localhost\", \"<IP-Address>\"}, dir)\n"}]}, "char_changes": {"deleted": [{"char_start": 537, "char_end": 622, "chars": "\tgeneratedCerts, err := certs.GenerateCerts([]string{\"localhost\", \"127.0.0.1\"}, dir)\n"}], "added": [{"char_start": 537, "char_end": 625, "chars": "\tgeneratedCerts, err := certs.GenerateCerts([]string{\"localhost\", \"<IP-Address>\"}, dir)\n"}]}}
{"func_name": 4824, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package cmd_test\n\nimport (\n\t\"bufio\"\n\t\"errors\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/isaacasensio/memo/cmd\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\ntype errorPasswordReader struct {\n}\n\nfunc (pr errorPasswordReader) ReadPassword() (string, error) {\n\treturn \"\", errors.New(\"error :)\")\n}\n\ntype stubPasswordReader struct {\n\tPassword string\n}\n\nfunc (pr stubPasswordReader) ReadPassword() (string, error) {\n\treturn pr.Password, nil\n}\nfunc TestRunReturnsErrorWhenReadPasswordFails(t *testing.T) {\n\tvar reader errorPasswordReader\n\tscanner := bufio.NewScanner(strings.NewReader(\"\"))\n\tresult, err := cmd.Run(reader, scanner)\n\tassert.Equal(t, errors.New(\"error :)\"), err)\n\tassert.Equal(t, \"\", result)\n}\nfunc TestRunReturnsRequestedRunes(t *testing.T) {\n\tinput := \"2\\n5\\n6\\n\"\n\tscanner := bufio.NewScanner(strings.NewReader(input))\n\tpr := stubPasswordReader{Password: \"password\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.NoError(t, err)\n\tassert.Equal(t, \"awo\", result)\n}\n\nfunc TestRunOnlyReturnsThreeRunes(t *testing.T) {\n\tinput := \"1\\n5\\n6\\n2\"\n\tscanner := bufio.NewScanner(strings.NewReader(input))\n\tpr := stubPasswordReader{Password: \"password\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.NoError(t, err)\n\tassert.Equal(t, \"pwo\", result)\n}", "func_src_after": "package cmd_test\n\nimport (\n\t\"bufio\"\n\t\"errors\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/isaacasensio/memo/cmd\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\ntype errorPasswordReader struct {\n}\n\nfunc (pr errorPasswordReader) ReadPassword() (string, error) {\n\treturn \"\", errors.New(\"error :)\")\n}\n\ntype stubPasswordReader struct {\n\tPassword string\n}\n\nfunc (pr stubPasswordReader) ReadPassword() (string, error) {\n\treturn pr.Password, nil\n}\nfunc TestRunReturnsErrorWhenReadPasswordFails(t *testing.T) {\n\tvar reader errorPasswordReader\n\tscanner := bufio.NewScanner(strings.NewReader(\"\"))\n\tresult, err := cmd.Run(reader, scanner)\n\tassert.Equal(t, errors.New(\"error :)\"), err)\n\tassert.Equal(t, \"\", result)\n}\nfunc TestRunReturnsRequestedRunes(t *testing.T) {\n\tinput := \"2\\n5\\n6\\n\"\n\tscanner := bufio.NewScanner(strings.NewReader(input))\n\tpr := stubPasswordReader{Password: \"password\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.NoError(t, err)\n\tassert.Equal(t, \"awo\", result)\n}\n\nfunc TestRunOnlyReturnsThreeRunes(t *testing.T) {\n\tinput := \"1\\n5\\n6\\n2\"\n\tscanner := bufio.NewScanner(strings.NewReader(input))\n\tpr := stubPasswordReader{Password: \"password\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.NoError(t, err)\n\tassert.Equal(t, \"pwo\", result)\n}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4825, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\nfunc TestRunReturnsErrorWhenNoneIntegerValuesAreProvidedForPosition(t *testing.T) {\n\tinput := \"2\\n5\\na\\n8\"\n\tscanner := bufio.NewScanner(strings.NewReader(input))\n\tpr := stubPasswordReader{Password: \"password\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.Error(t, err)\n\tassert.Equal(t, \"\", result)\n}\n\nfunc TestRunReturnsErrorWhenEmptyPasswordIsProvided(t *testing.T) {\n\tscanner := bufio.NewScanner(strings.NewReader(\"\"))\n\tpr := stubPasswordReader{Password: \"\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.Error(t, err)\n\tassert.Equal(t, \"\", result)\n}\n", "func_src_after": "\nfunc TestRunReturnsErrorWhenNoneIntegerValuesAreProvidedForPosition(t *testing.T) {\n\tinput := \"2\\n5\\na\\n8\"\n\tscanner := bufio.NewScanner(strings.NewReader(input))\n\tpr := stubPasswordReader{Password: \"password\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.Error(t, err)\n\tassert.Equal(t, \"\", result)\n}\n\nfunc TestRunReturnsErrorWhenEmptyPasswordIsProvided(t *testing.T) {\n\tscanner := bufio.NewScanner(strings.NewReader(\"\"))\n\tpr := stubPasswordReader{Password: \"\"}\n\tresult, err := cmd.Run(pr, scanner)\n\tassert.Error(t, err)\n\tassert.Equal(t, \"\", result)\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4827, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2015 The Cockroach Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied. See the License for the specific language governing\n// permissions and limitations under the License. See the AUTHORS file\n// for names of contributors.\n//\n// Author: Marc Berhault (marc@cockroachlabs.com)\n\npackage resolver\n\nimport (\n\t\"testing\"\n\n\t\"github.com/cockroachdb/cockroach/testutils\"\n\t\"github.com/cockroachdb/cockroach/util\"\n)\n\nvar nodeTestBaseContext = testutils.NewNodeTestBaseContext()\n\nfunc TestParseResolverSpec(t *testing.T) {\n\tdef := util.EnsureHostPort(\":\")\n\ttestCases := []struct {\n\t\tinput           string\n\t\tsuccess         bool\n\t\tresolverType    string\n\t\tresolverAddress string\n\t}{\n\t\t// Ports are not checked at parsing time. They are at GetAddress time though.\n\t\t{\"127.0.0.1:26222\", true, \"tcp\", \"127.0.0.1:26222\"},\n\t\t{\":26257\", true, \"tcp\", def},\n\t\t{\"127.0.0.1\", true, \"tcp\", \"127.0.0.1:26257\"},\n\t\t{\"tcp=127.0.0.1\", true, \"tcp\", \"127.0.0.1:26257\"},\n\t\t{\"tcp=127.0.0.1:23456\", true, \"tcp\", \"127.0.0.1:23456\"},\n\t\t{\"lb=127.0.0.1\", true, \"lb\", \"127.0.0.1:26257\"},\n\t\t{\"unix=/tmp/unix-socket12345\", true, \"unix\", \"/tmp/unix-socket12345\"},\n\t\t{\"http-lb=localhost:26257\", true, \"http-lb\", \"localhost:26257\"},\n\t\t{\"http-lb=newhost:1234\", true, \"http-lb\", \"newhost:1234\"},\n\t\t{\"http-lb=:26257\", true, \"http-lb\", def},\n\t\t{\"http-lb=:\", true, \"http-lb\", def},\n\t\t{\"\", false, \"\", \"\"},\n\t\t{\"foo=127.0.0.1\", false, \"\", \"\"},", "func_src_after": "// Copyright 2015 The Cockroach Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied. See the License for the specific language governing\n// permissions and limitations under the License. See the AUTHORS file\n// for names of contributors.\n//\n// Author: Marc Berhault (<EMAIL>)\n\npackage resolver\n\nimport (\n\t\"testing\"\n\n\t\"github.com/cockroachdb/cockroach/testutils\"\n\t\"github.com/cockroachdb/cockroach/util\"\n)\n\nvar nodeTestBaseContext = testutils.NewNodeTestBaseContext()\n\nfunc TestParseResolverSpec(t *testing.T) {\n\tdef := util.EnsureHostPort(\":\")\n\ttestCases := []struct {\n\t\tinput           string\n\t\tsuccess         bool\n\t\tresolverType    string\n\t\tresolverAddress string\n\t}{\n\t\t// Ports are not checked at parsing time. They are at GetAddress time though.\n\t\t{\"<IP-Address>:26222\", true, \"tcp\", \"<IP-Address>:26222\"},\n\t\t{\":26257\", true, \"tcp\", def},\n\t\t{\"<IP-Address>\", true, \"tcp\", \"<IP-Address>:26257\"},\n\t\t{\"tcp=<IP-Address>\", true, \"tcp\", \"<IP-Address>:26257\"},\n\t\t{\"tcp=<IP-Address>:23456\", true, \"tcp\", \"<IP-Address>:23456\"},\n\t\t{\"lb=<IP-Address>\", true, \"lb\", \"<IP-Address>:26257\"},\n\t\t{\"unix=/tmp/unix-socket12345\", true, \"unix\", \"/tmp/unix-socket12345\"},\n\t\t{\"http-lb=localhost:26257\", true, \"http-lb\", \"localhost:26257\"},\n\t\t{\"http-lb=newhost:1234\", true, \"http-lb\", \"newhost:1234\"},\n\t\t{\"http-lb=:26257\", true, \"http-lb\", def},\n\t\t{\"http-lb=:\", true, \"http-lb\", def},\n\t\t{\"\", false, \"\", \"\"},\n\t\t{\"foo=<IP-Address>\", false, \"\", \"\"},", "line_changes": {"deleted": [{"line_no": 16, "char_start": 653, "char_end": 703, "line": "// Author: Marc Berhault (marc@cockroachlabs.com)\n"}, {"line_no": 39, "char_start": 1163, "char_end": 1218, "line": "\t\t{\"127.0.0.1:26222\", true, \"tcp\", \"127.0.0.1:26222\"},\n"}, {"line_no": 42, "char_start": 1256, "char_end": 1305, "line": "\t\t{\"127.0.0.1\", true, \"tcp\", \"127.0.0.1:26257\"},\n"}, {"line_no": 43, "char_start": 1256, "char_end": 1309, "line": "\t\t{\"tcp=127.0.0.1\", true, \"tcp\", \"127.0.0.1:26257\"},\n"}, {"line_no": 44, "char_start": 1256, "char_end": 1315, "line": "\t\t{\"tcp=127.0.0.1:23456\", true, \"tcp\", \"127.0.0.1:23456\"},\n"}, {"line_no": 45, "char_start": 1256, "char_end": 1307, "line": "\t\t{\"lb=127.0.0.1\", true, \"lb\", \"127.0.0.1:26257\"},\n"}, {"line_no": 56, "char_start": 1799, "char_end": 1834, "line": "\t\t{\"foo=127.0.0.1\", false, \"\", \"\"},"}], "added": [{"line_no": 17, "char_start": 653, "char_end": 688, "line": "// Author: Marc Berhault (<EMAIL>)\n"}, {"line_no": 40, "char_start": 1163, "char_end": 1224, "line": "\t\t{\"<IP-Address>:26222\", true, \"tcp\", \"<IP-Address>:26222\"},\n"}, {"line_no": 46, "char_start": 1256, "char_end": 1311, "line": "\t\t{\"<IP-Address>\", true, \"tcp\", \"<IP-Address>:26257\"},\n"}, {"line_no": 47, "char_start": 1311, "char_end": 1370, "line": "\t\t{\"tcp=<IP-Address>\", true, \"tcp\", \"<IP-Address>:26257\"},\n"}, {"line_no": 48, "char_start": 1370, "char_end": 1435, "line": "\t\t{\"tcp=<IP-Address>:23456\", true, \"tcp\", \"<IP-Address>:23456\"},\n"}, {"line_no": 49, "char_start": 1435, "char_end": 1492, "line": "\t\t{\"lb=<IP-Address>\", true, \"lb\", \"<IP-Address>:26257\"},\n"}, {"line_no": 57, "char_start": 1799, "char_end": 1837, "line": "\t\t{\"foo=<IP-Address>\", false, \"\", \"\"},"}]}, "char_changes": {"deleted": [{"char_start": 653, "char_end": 703, "chars": "// Author: Marc Berhault (marc@cockroachlabs.com)\n"}, {"char_start": 1163, "char_end": 1218, "chars": "\t\t{\"127.0.0.1:26222\", true, \"tcp\", \"127.0.0.1:26222\"},\n"}, {"char_start": 1256, "char_end": 1305, "chars": "\t\t{\"127.0.0.1\", true, \"tcp\", \"127.0.0.1:26257\"},\n"}, {"char_start": 1256, "char_end": 1309, "chars": "\t\t{\"tcp=127.0.0.1\", true, \"tcp\", \"127.0.0.1:26257\"},\n"}, {"char_start": 1256, "char_end": 1315, "chars": "\t\t{\"tcp=127.0.0.1:23456\", true, \"tcp\", \"127.0.0.1:23456\"},\n"}, {"char_start": 1256, "char_end": 1307, "chars": "\t\t{\"lb=127.0.0.1\", true, \"lb\", \"127.0.0.1:26257\"},\n"}, {"char_start": 1799, "char_end": 1834, "chars": "\t\t{\"foo=127.0.0.1\", false, \"\", \"\"},"}], "added": [{"char_start": 653, "char_end": 688, "chars": "// Author: Marc Berhault (<EMAIL>)\n"}, {"char_start": 1163, "char_end": 1224, "chars": "\t\t{\"<IP-Address>:26222\", true, \"tcp\", \"<IP-Address>:26222\"},\n"}, {"char_start": 1256, "char_end": 1311, "chars": "\t\t{\"<IP-Address>\", true, \"tcp\", \"<IP-Address>:26257\"},\n"}, {"char_start": 1311, "char_end": 1370, "chars": "\t\t{\"tcp=<IP-Address>\", true, \"tcp\", \"<IP-Address>:26257\"},\n"}, {"char_start": 1370, "char_end": 1435, "chars": "\t\t{\"tcp=<IP-Address>:23456\", true, \"tcp\", \"<IP-Address>:23456\"},\n"}, {"char_start": 1435, "char_end": 1492, "chars": "\t\t{\"lb=<IP-Address>\", true, \"lb\", \"<IP-Address>:26257\"},\n"}, {"char_start": 1799, "char_end": 1837, "chars": "\t\t{\"foo=<IP-Address>\", false, \"\", \"\"},"}]}}
{"func_name": 4831, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package slack\n\nimport (\n\t\"errors\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestParseUserMappings(t *testing.T) {\n\ttt := []struct {\n\t\tname   string\n\t\tinput  []string\n\t\toutput map[string]string\n\t\terr    error\n\t}{\n\t\t{\n\t\t\tname:   \"nil slice\",\n\t\t\tinput:  nil,\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname:   \"empty slice\",\n\t\t\tinput:  []string{},\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname: \"single empty entry\",\n\t\t\tinput: []string{\n\t\t\t\t\"\",\n\t\t\t},\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname: \"single whitespace entry\",\n\t\t\tinput: []string{\n\t\t\t\t\" \",\n\t\t\t},\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname: \"single email entry\",\n\t\t\tinput: []string{\n\t\t\t\t\"foo@bar.com=foo@lunarway.com\",\n\t\t\t},\n\t\t\toutput: map[string]string{", "func_src_after": "package slack\n\nimport (\n\t\"errors\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestParseUserMappings(t *testing.T) {\n\ttt := []struct {\n\t\tname   string\n\t\tinput  []string\n\t\toutput map[string]string\n\t\terr    error\n\t}{\n\t\t{\n\t\t\tname:   \"nil slice\",\n\t\t\tinput:  nil,\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname:   \"empty slice\",\n\t\t\tinput:  []string{},\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname: \"single empty entry\",\n\t\t\tinput: []string{\n\t\t\t\t\"\",\n\t\t\t},\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname: \"single whitespace entry\",\n\t\t\tinput: []string{\n\t\t\t\t\" \",\n\t\t\t},\n\t\t\toutput: map[string]string{},\n\t\t\terr:    nil,\n\t\t},\n\t\t{\n\t\t\tname: \"single email entry\",\n\t\t\tinput: []string{\n\t\t\t\t\"<EMAIL>=<EMAIL>\",\n\t\t\t},\n\t\t\toutput: map[string]string{", "line_changes": {"deleted": [{"line_no": 48, "char_start": 736, "char_end": 772, "line": "\t\t\t\t\"foo@bar.com=foo@lunarway.com\",\n"}], "added": [{"line_no": 49, "char_start": 736, "char_end": 759, "line": "\t\t\t\t\"<EMAIL>=<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 736, "char_end": 772, "chars": "\t\t\t\t\"foo@bar.com=foo@lunarway.com\",\n"}], "added": [{"char_start": 736, "char_end": 759, "chars": "\t\t\t\t\"<EMAIL>=<EMAIL>\",\n"}]}}
{"func_name": 4834, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "var (\n\talwaysReady = func() bool { return true }\n)\n\nvar _ = Describe(\"test ippool\", func() {\n\tpool := &v1alpha1.IPPool{\n\t\tTypeMeta: v1.TypeMeta{},\n\t\tObjectMeta: v1.ObjectMeta{\n\t\t\tName: \"testippool\",\n\t\t},\n\t\tSpec: v1alpha1.IPPoolSpec{\n\t\t\tType: v1alpha1.VLAN,\n\t\t\tCIDR: \"192.168.0.0/24\",\n\t\t},\n\t\tStatus: v1alpha1.IPPoolStatus{},\n\t}\n\n\tksclient := ksfake.NewSimpleClientset()\n\tk8sclinet := k8sfake.NewSimpleClientset()\n\tksInformer := ksinformers.NewSharedInformerFactory(ksclient, 0)\n\tk8sInformer := k8sinformers.NewSharedInformerFactory(k8sclinet, 0)\n\n\tp := ippool.NewProvider(k8sInformer, ksclient, k8sclinet, v1alpha1.IPPoolTypeLocal, nil)\n\tipamClient := ipam.NewIPAMClient(ksclient, v1alpha1.VLAN)\n\tc := NewIPPoolController(ksInformer, k8sInformer, k8sclinet, ksclient, p)\n\n\tstopCh := make(chan struct{})\n\tgo ksInformer.Start(stopCh)\n\tgo k8sInformer.Start(stopCh)\n\tgo c.Start(stopCh)\n\n\tIt(\"test create ippool\", func() {\n\t\tclone := pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"testxxx\"\n\t\tExpect(c.ValidateCreate(clone)).Should(HaveOccurred())\n\n\t\tclone = pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"192.168.0.0/24\"\n\t\tclone.Spec.RangeStart = \"192.168.0.100\"\n\t\tclone.Spec.RangeEnd = \"192.168.0.99\"\n\t\tExpect(c.ValidateCreate(clone)).Should(HaveOccurred())\n\n\t\tclone = pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"192.168.0.0/24\"\n\t\tclone.Spec.RangeStart = \"192.168.3.100\"\n\t\tclone.Spec.RangeEnd = \"192.168.3.111\"\n\t\tExpect(c.ValidateCreate(clone)).Should(HaveOccurred())\n\n\t\tclone = pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"192.168.0.0/24\"", "func_src_after": "var (\n\talwaysReady = func() bool { return true }\n)\n\nvar _ = Describe(\"test ippool\", func() {\n\tpool := &v1alpha1.IPPool{\n\t\tTypeMeta: v1.TypeMeta{},\n\t\tObjectMeta: v1.ObjectMeta{\n\t\t\tName: \"testippool\",\n\t\t},\n\t\tSpec: v1alpha1.IPPoolSpec{\n\t\t\tType: v1alpha1.VLAN,\n\t\t\tCIDR: \"192.168.0.0/24\",\n\t\t},\n\t\tStatus: v1alpha1.IPPoolStatus{},\n\t}\n\n\tksclient := ksfake.NewSimpleClientset()\n\tk8sclinet := k8sfake.NewSimpleClientset()\n\tksInformer := ksinformers.NewSharedInformerFactory(ksclient, 0)\n\tk8sInformer := k8sinformers.NewSharedInformerFactory(k8sclinet, 0)\n\n\tp := ippool.NewProvider(k8sInformer, ksclient, k8sclinet, v1alpha1.IPPoolTypeLocal, nil)\n\tipamClient := ipam.NewIPAMClient(ksclient, v1alpha1.VLAN)\n\tc := NewIPPoolController(ksInformer, k8sInformer, k8sclinet, ksclient, p)\n\n\tstopCh := make(chan struct{})\n\tgo ksInformer.Start(stopCh)\n\tgo k8sInformer.Start(stopCh)\n\tgo c.Start(stopCh)\n\n\tIt(\"test create ippool\", func() {\n\t\tclone := pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"testxxx\"\n\t\tExpect(c.ValidateCreate(clone)).Should(HaveOccurred())\n\n\t\tclone = pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"<IP-Address>/24\"\n\t\tclone.Spec.RangeStart = \"<IP-Address>\"\n\t\tclone.Spec.RangeEnd = \"<IP-Address>\"\n\t\tExpect(c.ValidateCreate(clone)).Should(HaveOccurred())\n\n\t\tclone = pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"<IP-Address>/24\"\n\t\tclone.Spec.RangeStart = \"<IP-Address>\"\n\t\tclone.Spec.RangeEnd = \"<IP-Address>\"\n\t\tExpect(c.ValidateCreate(clone)).Should(HaveOccurred())\n\n\t\tclone = pool.DeepCopy()\n\t\tclone.Spec.CIDR = \"<IP-Address>/24\"", "line_changes": {"deleted": [{"line_no": 38, "char_start": 1058, "char_end": 1095, "line": "\t\tclone.Spec.CIDR = \"192.168.0.0/24\"\n"}, {"line_no": 39, "char_start": 1058, "char_end": 1100, "line": "\t\tclone.Spec.RangeStart = \"192.168.0.100\"\n"}, {"line_no": 40, "char_start": 1058, "char_end": 1097, "line": "\t\tclone.Spec.RangeEnd = \"192.168.0.99\"\n"}, {"line_no": 47, "char_start": 1260, "char_end": 1297, "line": "\t\tclone.Spec.CIDR = \"192.168.0.0/24\"\n"}, {"line_no": 48, "char_start": 1260, "char_end": 1302, "line": "\t\tclone.Spec.RangeStart = \"192.168.3.100\"\n"}, {"line_no": 49, "char_start": 1260, "char_end": 1300, "line": "\t\tclone.Spec.RangeEnd = \"192.168.3.111\"\n"}, {"line_no": 56, "char_start": 1462, "char_end": 1498, "line": "\t\tclone.Spec.CIDR = \"192.168.0.0/24\""}], "added": [{"line_no": 41, "char_start": 1058, "char_end": 1096, "line": "\t\tclone.Spec.CIDR = \"<IP-Address>/24\"\n"}, {"line_no": 42, "char_start": 1096, "char_end": 1137, "line": "\t\tclone.Spec.RangeStart = \"<IP-Address>\"\n"}, {"line_no": 43, "char_start": 1137, "char_end": 1176, "line": "\t\tclone.Spec.RangeEnd = \"<IP-Address>\"\n"}, {"line_no": 50, "char_start": 1260, "char_end": 1298, "line": "\t\tclone.Spec.CIDR = \"<IP-Address>/24\"\n"}, {"line_no": 51, "char_start": 1298, "char_end": 1339, "line": "\t\tclone.Spec.RangeStart = \"<IP-Address>\"\n"}, {"line_no": 52, "char_start": 1339, "char_end": 1378, "line": "\t\tclone.Spec.RangeEnd = \"<IP-Address>\"\n"}, {"line_no": 57, "char_start": 1462, "char_end": 1499, "line": "\t\tclone.Spec.CIDR = \"<IP-Address>/24\""}]}, "char_changes": {"deleted": [{"char_start": 1058, "char_end": 1095, "chars": "\t\tclone.Spec.CIDR = \"192.168.0.0/24\"\n"}, {"char_start": 1058, "char_end": 1100, "chars": "\t\tclone.Spec.RangeStart = \"192.168.0.100\"\n"}, {"char_start": 1058, "char_end": 1097, "chars": "\t\tclone.Spec.RangeEnd = \"192.168.0.99\"\n"}, {"char_start": 1260, "char_end": 1297, "chars": "\t\tclone.Spec.CIDR = \"192.168.0.0/24\"\n"}, {"char_start": 1260, "char_end": 1302, "chars": "\t\tclone.Spec.RangeStart = \"192.168.3.100\"\n"}, {"char_start": 1260, "char_end": 1300, "chars": "\t\tclone.Spec.RangeEnd = \"192.168.3.111\"\n"}, {"char_start": 1462, "char_end": 1498, "chars": "\t\tclone.Spec.CIDR = \"192.168.0.0/24\""}], "added": [{"char_start": 1058, "char_end": 1096, "chars": "\t\tclone.Spec.CIDR = \"<IP-Address>/24\"\n"}, {"char_start": 1096, "char_end": 1137, "chars": "\t\tclone.Spec.RangeStart = \"<IP-Address>\"\n"}, {"char_start": 1137, "char_end": 1176, "chars": "\t\tclone.Spec.RangeEnd = \"<IP-Address>\"\n"}, {"char_start": 1260, "char_end": 1298, "chars": "\t\tclone.Spec.CIDR = \"<IP-Address>/24\"\n"}, {"char_start": 1298, "char_end": 1339, "chars": "\t\tclone.Spec.RangeStart = \"<IP-Address>\"\n"}, {"char_start": 1339, "char_end": 1378, "chars": "\t\tclone.Spec.RangeEnd = \"<IP-Address>\"\n"}, {"char_start": 1462, "char_end": 1499, "chars": "\t\tclone.Spec.CIDR = \"<IP-Address>/24\""}]}}
{"func_name": 4843, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package api\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"reflect\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/apache/trafficcontrol/lib/go-log\"\n\t\"github.com/apache/trafficcontrol/lib/go-tc\"\n)\n\nconst PathParamsKey = \"pathParams\"\nconst DBKey = \"db\"\nconst ConfigKey = \"cfg\"\n\ntype KeyFieldInfo struct {\n\tField string\n\tFunc  func(string) (interface{}, error)\n}\n\nfunc GetIntKey(s string) (interface{}, error) {\n\tif strings.HasSuffix(s, \".json\") {\n\t\ts = s[:len(s)-len(\".json\")]\n\t}", "func_src_after": "package api\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"reflect\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/apache/trafficcontrol/lib/go-log\"\n\t\"github.com/apache/trafficcontrol/lib/go-tc\"\n)\n\nconst PathParamsKey = \"pathParams\"\nconst DBKey = \"db\"\nconst ConfigKey = \"cfg\"\n\ntype KeyFieldInfo struct {\n\tField string\n\tFunc  func(string) (interface{}, error)\n}\n\nfunc GetIntKey(s string) (interface{}, error) {\n\tif strings.HasSuffix(s, \".json\") {\n\t\ts = s[:len(s)-len(\".json\")]\n\t}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4844, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//                           _       _\n// __      _____  __ ___   ___  __ _| |_ ___\n// \\ \\ /\\ / / _ \\/ _` \\ \\ / / |/ _` | __/ _ \\\n//  \\ V  V /  __/ (_| |\\ V /| | (_| | ||  __/\n//   \\_/\\_/ \\___|\\__,_| \\_/ |_|\\__,_|\\__\\___|\n//\n//  Copyright © 2016 - 2022 SeMI Technologies B.V. All rights reserved.\n//\n//  CONTACT: hello@semi.technology\n//\n\n// Code generated by go-swagger; DO NOT EDIT.\n\npackage models\n\n// This file was generated by the swagger tool.\n// Editing this file might prove futile when you re-run the swagger generate command\n\nimport (\n\t\"github.com/go-openapi/strfmt\"\n)\n\n// AdditionalProperties Additional Meta information about a single object object.\n//\n// swagger:model AdditionalProperties\ntype AdditionalProperties map[string]interface{}\n\n// Validate validates this additional properties\nfunc (m AdditionalProperties) Validate(formats strfmt.Registry) error {\n\treturn nil\n}\n", "func_src_after": "//                           _       _\n// __      _____  __ ___   ___  __ _| |_ ___\n// \\ \\ /\\ / / _ \\/ _` \\ \\ / / |/ _` | __/ _ \\\n//  \\ V  V /  __/ (_| |\\ V /| | (_| | ||  __/\n//   \\_/\\_/ \\___|\\__,_| \\_/ |_|\\__,_|\\__\\___|\n//\n//  Copyright © 2016 - 2022 SeMI Technologies B.V. All rights reserved.\n//\n//  CONTACT: <EMAIL>\n//\n\n// Code generated by go-swagger; DO NOT EDIT.\n\npackage models\n\n// This file was generated by the swagger tool.\n// Editing this file might prove futile when you re-run the swagger generate command\n\nimport (\n\t\"github.com/go-openapi/strfmt\"\n)\n\n// AdditionalProperties Additional Meta information about a single object object.\n//\n// swagger:model AdditionalProperties\ntype AdditionalProperties map[string]interface{}\n\n// Validate validates this additional properties\nfunc (m AdditionalProperties) Validate(formats strfmt.Registry) error {\n\treturn nil\n}\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 300, "char_end": 335, "line": "//  CONTACT: hello@semi.technology\n"}], "added": [{"line_no": 10, "char_start": 300, "char_end": 321, "line": "//  CONTACT: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 300, "char_end": 335, "chars": "//  CONTACT: hello@semi.technology\n"}], "added": [{"char_start": 300, "char_end": 321, "chars": "//  CONTACT: <EMAIL>\n"}]}}
{"func_name": 4848, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package graphql\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n\n\t\"github.com/graphql-go/graphql/language/ast\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestUintParseLiteral(t *testing.T) {\n\ttestCases := []struct {\n\t\tin  ast.Value\n\t\tout interface{}\n\t}{\n\t\t{&ast.StringValue{Value: \"123\"}, 123},\n\t\t{&ast.IntValue{Value: \"123\"}, 123},\n\t\t{&ast.IntValue{Value: \"12345678901234567890\"}, nil},\n\t\t{&ast.FloatValue{Value: \"12.43\"}, nil},\n\t}\n\n\tfor _, tc := range testCases {\n\t\tt.Run(fmt.Sprintf(\"with %+v\", tc.in), func(t *testing.T) {\n\t\t\tresolver := unsignedIntegerImpl{}\n\t\t\tres := resolver.ParseLiteral(tc.in)\n\n\t\t\tassert.EqualValues(t, tc.out, res)\n\t\t})\n\t}\n}\n\nfunc TestUintParseValue(t *testing.T) {\n\ttestCases := []struct {\n\t\tin  interface{}\n\t\tout interface{}\n\t}{\n\t\t{uint8(123), 123},\n\t\t{uint16(123), 123},\n\t\t{uint32(123), 123},\n\t\t{uint64(123), 0},\n\t}\n\n\tfor _, tc := range testCases {\n\t\tt.Run(fmt.Sprintf(\"with %#v\", tc.in), func(t *testing.T) {\n\t\t\tresolver := unsignedIntegerImpl{}\n\t\t\tres := resolver.ParseValue(tc.in)\n\n\t\t\tassert.EqualValues(t, tc.out, res)\n\t\t})\n\t}", "func_src_after": "package graphql\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n\n\t\"github.com/graphql-go/graphql/language/ast\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestUintParseLiteral(t *testing.T) {\n\ttestCases := []struct {\n\t\tin  ast.Value\n\t\tout interface{}\n\t}{\n\t\t{&ast.StringValue{Value: \"123\"}, 123},\n\t\t{&ast.IntValue{Value: \"123\"}, 123},\n\t\t{&ast.IntValue{Value: \"12345678901234567890\"}, nil},\n\t\t{&ast.FloatValue{Value: \"12.43\"}, nil},\n\t}\n\n\tfor _, tc := range testCases {\n\t\tt.Run(fmt.Sprintf(\"with %+v\", tc.in), func(t *testing.T) {\n\t\t\tresolver := unsignedIntegerImpl{}\n\t\t\tres := resolver.ParseLiteral(tc.in)\n\n\t\t\tassert.EqualValues(t, tc.out, res)\n\t\t})\n\t}\n}\n\nfunc TestUintParseValue(t *testing.T) {\n\ttestCases := []struct {\n\t\tin  interface{}\n\t\tout interface{}\n\t}{\n\t\t{uint8(123), 123},\n\t\t{uint16(123), 123},\n\t\t{uint32(123), 123},\n\t\t{uint64(123), 0},\n\t}\n\n\tfor _, tc := range testCases {\n\t\tt.Run(fmt.Sprintf(\"with %#v\", tc.in), func(t *testing.T) {\n\t\t\tresolver := unsignedIntegerImpl{}\n\t\t\tres := resolver.ParseValue(tc.in)\n\n\t\t\tassert.EqualValues(t, tc.out, res)\n\t\t})\n\t}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4851, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\nFinverse Public\n\nDocumentation of the early finverse services\n\nAPI version: 0.0.1\nContact: devs@finverse.com\n*/\n\n// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.\n\npackage finverse\n\nimport (\n\t\"encoding/json\"\n\t\"time\"\n)\n\n// Account struct for Account\ntype Account struct {\n\tAccountId string `json:\"account_id\"`\n\t// The SHA3-256 hash of the account number, salted with the loginIdentityId\n\tGroupId           string          `json:\"group_id\"`\n\tAccountHolderName *string         `json:\"account_holder_name,omitempty\"`\n\tAccountName       string          `json:\"account_name\"`\n\tAccountNickname   *string         `json:\"account_nickname,omitempty\"`\n\tAccountType       *string         `json:\"account_type,omitempty\"`\n\tAccountSubType    *string         `json:\"account_sub_type,omitempty\"`\n\tCountry           *string         `json:\"country,omitempty\"`\n\tCreatedAt         *time.Time      `json:\"created_at,omitempty\"`\n\tUpdatedAt         *time.Time      `json:\"updated_at,omitempty\"`\n\tAccountCurrency   *string         `json:\"account_currency,omitempty\"`\n\tBalance           *CurrencyAmount `json:\"balance,omitempty\"`\n\tStatementBalance  *CurrencyAmount `json:\"statement_balance,omitempty\"`\n\tIsParent          bool            `json:\"is_parent\"`\n\tIsClosed          bool            `json:\"is_closed\"`\n\tIsExcluded        bool            `json:\"is_excluded\"`\n}\n\n// NewAccount instantiates a new Account object\n// This constructor will assign default values to properties that have it defined,\n// and makes sure properties required by API are set, but the set of arguments\n// will change when the set of required properties is changed\nfunc NewAccount(accountId string, groupId string, accountName string, isParent bool, isClosed bool, isExcluded bool) *Account {\n\tthis := Account{}\n\tthis.AccountId = accountId\n\tthis.GroupId = groupId\n\tthis.AccountName = accountName\n\tthis.IsParent = isParent\n\tthis.IsClosed = isClosed", "func_src_after": "/*\nFinverse Public\n\nDocumentation of the early finverse services\n\nAPI version: 0.0.1\nContact: <EMAIL>\n*/\n\n// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.\n\npackage finverse\n\nimport (\n\t\"encoding/json\"\n\t\"time\"\n)\n\n// Account struct for Account\ntype Account struct {\n\tAccountId string `json:\"account_id\"`\n\t// The SHA3-256 hash of the account number, salted with the loginIdentityId\n\tGroupId           string          `json:\"group_id\"`\n\tAccountHolderName *string         `json:\"account_holder_name,omitempty\"`\n\tAccountName       string          `json:\"account_name\"`\n\tAccountNickname   *string         `json:\"account_nickname,omitempty\"`\n\tAccountType       *string         `json:\"account_type,omitempty\"`\n\tAccountSubType    *string         `json:\"account_sub_type,omitempty\"`\n\tCountry           *string         `json:\"country,omitempty\"`\n\tCreatedAt         *time.Time      `json:\"created_at,omitempty\"`\n\tUpdatedAt         *time.Time      `json:\"updated_at,omitempty\"`\n\tAccountCurrency   *string         `json:\"account_currency,omitempty\"`\n\tBalance           *CurrencyAmount `json:\"balance,omitempty\"`\n\tStatementBalance  *CurrencyAmount `json:\"statement_balance,omitempty\"`\n\tIsParent          bool            `json:\"is_parent\"`\n\tIsClosed          bool            `json:\"is_closed\"`\n\tIsExcluded        bool            `json:\"is_excluded\"`\n}\n\n// NewAccount instantiates a new Account object\n// This constructor will assign default values to properties that have it defined,\n// and makes sure properties required by API are set, but the set of arguments\n// will change when the set of required properties is changed\nfunc NewAccount(accountId string, groupId string, accountName string, isParent bool, isClosed bool, isExcluded bool) *Account {\n\tthis := Account{}\n\tthis.AccountId = accountId\n\tthis.GroupId = groupId\n\tthis.AccountName = accountName\n\tthis.IsParent = isParent\n\tthis.IsClosed = isClosed", "line_changes": {"deleted": [{"line_no": 7, "char_start": 85, "char_end": 112, "line": "Contact: devs@finverse.com\n"}], "added": [{"line_no": 8, "char_start": 85, "char_end": 102, "line": "Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 85, "char_end": 112, "chars": "Contact: devs@finverse.com\n"}], "added": [{"char_start": 85, "char_end": 102, "chars": "Contact: <EMAIL>\n"}]}}
{"func_name": 4854, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"context\"\n\t\"crypto/tls\"\n\t\"fmt\"\n\tgrpc_server \"github.com/devplayg/grpc-server\"\n\t\"github.com/devplayg/grpc-server/proto\"\n\t\"github.com/golang/protobuf/ptypes/empty\"\n\t\"github.com/golang/protobuf/ptypes/timestamp\"\n\tgrpc_retry \"github.com/grpc-ecosystem/go-grpc-middleware/retry\"\n\t\"github.com/spf13/pflag\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials\"\n\t\"google.golang.org/grpc/keepalive\"\n\t\"io/ioutil\"\n\t\"math/rand\"\n\t\"net/http\"\n\t\"os\"\n\t\"sync\"\n\t\"sync/atomic\"\n\t\"time\"\n\n\tlog \"github.com/sirupsen/logrus\"\n)\n\nvar (\n\tfs         = pflag.NewFlagSet(\"generator\", pflag.ExitOnError)\n\tagentCount = fs.IntP(\"agent\", \"a\", 10, \"Client count\")\n\tdataCount  = fs.IntP(\"c\", \"c\", 1, \"Event count by client\")\n\taddr       = fs.String(\"addr\", \"127.0.0.1:8801\", \"Receiver address\")\n\tinsecure   = fs.Bool(\"insecure\", false, \"Disable TLS\")\n\tdevices    []string\n\timages     [][]byte\n\n\tconn      *grpc.ClientConn\n\tclientApi proto.EventServiceClient\n\n\tsize    uint64\n\tsuccess uint32\n\tfailed  uint32\n)\n\nfunc init() {\n\trand.Seed(time.Now().UnixNano())\n\t_ = fs.Parse(os.Args[1:])\n\n\tdevices = make([]string, 0)\n\tstart := 65\n\tfor i := start; i < start+(*agentCount); i++ {", "func_src_after": "package main\n\nimport (\n\t\"context\"\n\t\"crypto/tls\"\n\t\"fmt\"\n\tgrpc_server \"github.com/devplayg/grpc-server\"\n\t\"github.com/devplayg/grpc-server/proto\"\n\t\"github.com/golang/protobuf/ptypes/empty\"\n\t\"github.com/golang/protobuf/ptypes/timestamp\"\n\tgrpc_retry \"github.com/grpc-ecosystem/go-grpc-middleware/retry\"\n\t\"github.com/spf13/pflag\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials\"\n\t\"google.golang.org/grpc/keepalive\"\n\t\"io/ioutil\"\n\t\"math/rand\"\n\t\"net/http\"\n\t\"os\"\n\t\"sync\"\n\t\"sync/atomic\"\n\t\"time\"\n\n\tlog \"github.com/sirupsen/logrus\"\n)\n\nvar (\n\tfs         = pflag.NewFlagSet(\"generator\", pflag.ExitOnError)\n\tagentCount = fs.IntP(\"agent\", \"a\", 10, \"Client count\")\n\tdataCount  = fs.IntP(\"c\", \"c\", 1, \"Event count by client\")\n\taddr       = fs.String(\"addr\", \"<IP-Address>:8801\", \"Receiver address\")\n\tinsecure   = fs.Bool(\"insecure\", false, \"Disable TLS\")\n\tdevices    []string\n\timages     [][]byte\n\n\tconn      *grpc.ClientConn\n\tclientApi proto.EventServiceClient\n\n\tsize    uint64\n\tsuccess uint32\n\tfailed  uint32\n)\n\nfunc init() {\n\trand.Seed(time.Now().UnixNano())\n\t_ = fs.Parse(os.Args[1:])\n\n\tdevices = make([]string, 0)\n\tstart := 65\n\tfor i := start; i < start+(*agentCount); i++ {", "line_changes": {"deleted": [{"line_no": 31, "char_start": 722, "char_end": 792, "line": "\taddr       = fs.String(\"addr\", \"127.0.0.1:8801\", \"Receiver address\")\n"}], "added": [{"line_no": 32, "char_start": 722, "char_end": 795, "line": "\taddr       = fs.String(\"addr\", \"<IP-Address>:8801\", \"Receiver address\")\n"}]}, "char_changes": {"deleted": [{"char_start": 722, "char_end": 792, "chars": "\taddr       = fs.String(\"addr\", \"127.0.0.1:8801\", \"Receiver address\")\n"}], "added": [{"char_start": 722, "char_end": 795, "chars": "\taddr       = fs.String(\"addr\", \"<IP-Address>:8801\", \"Receiver address\")\n"}]}}
{"func_name": 4861, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// @APIVersion 1.0.0\n// @Title beego Test API\n// @Description beego has a very cool tools to autogenerate documents for your API\n// @Contact astaxie@gmail.com\n// @TermsOfServiceUrl http://beego.me/\n// @License Apache 2.0\n// @LicenseUrl http://www.apache.org/licenses/LICENSE-2.0.html\npackage routers\n\n\nimport (\n    _ \"github.com/astaxie/beego\"\n    \"github.com/gin-gonic/gin\"\n    \"github.com/DeanThompson/ginpprof\"\n    \"Gin_API_Framework/api/controllers\"\n    \"Gin_API_Framework/api/middleware/contrib/cache\"\n    \"Gin_API_Framework/api/middleware/contrib/gin-nice-recovery\"\n    _\"Gin_API_Framework/api/middleware/contrib/ginrus\"\n    _\"Gin_API_Framework/api/middleware/contrib/gzip\"\n    _\"Gin_API_Framework/api/middleware/contrib/rest\"\n    _\"Gin_API_Framework/api/middleware/contrib/secure\"\n    _\"Gin_API_Framework/api/middleware/contrib/gin-csrf\"\n    _\"Gin_API_Framework/api/middleware/contrib/commonlog\"\n    \"Gin_API_Framework/api/middleware/contrib/sessions\"\n\n  \n    \"net/http\"\n    \"path\"\n    \"runtime\"\n    \"fmt\"\n    \"time\"\n)\n\n\n\nfunc callerSourcePath() string {\n    _, callerPath, _, _ := runtime.Caller(1)\n    return path.Dir(callerPath)\n}\n\nfunc recoveryHandler(c *gin.Context, err interface{}) {\n    c.JSON(400,  gin.H{\n        \"status\": \"fail\",\n        \"err\":   err,\n    })\n}\n\n\nfunc InitRouter() http.Handler {\n", "func_src_after": "// @APIVersion 1.0.0\n// @Title beego Test API\n// @Description beego has a very cool tools to autogenerate documents for your API\n// @Contact <EMAIL>\n// @TermsOfServiceUrl http://beego.me/\n// @License Apache 2.0\n// @LicenseUrl http://www.apache.org/licenses/LICENSE-2.0.html\npackage routers\n\n\nimport (\n    _ \"github.com/astaxie/beego\"\n    \"github.com/gin-gonic/gin\"\n    \"github.com/DeanThompson/ginpprof\"\n    \"Gin_API_Framework/api/controllers\"\n    \"Gin_API_Framework/api/middleware/contrib/cache\"\n    \"Gin_API_Framework/api/middleware/contrib/gin-nice-recovery\"\n    _\"Gin_API_Framework/api/middleware/contrib/ginrus\"\n    _\"Gin_API_Framework/api/middleware/contrib/gzip\"\n    _\"Gin_API_Framework/api/middleware/contrib/rest\"\n    _\"Gin_API_Framework/api/middleware/contrib/secure\"\n    _\"Gin_API_Framework/api/middleware/contrib/gin-csrf\"\n    _\"Gin_API_Framework/api/middleware/contrib/commonlog\"\n    \"Gin_API_Framework/api/middleware/contrib/sessions\"\n\n  \n    \"net/http\"\n    \"path\"\n    \"runtime\"\n    \"fmt\"\n    \"time\"\n)\n\n\n\nfunc callerSourcePath() string {\n    _, callerPath, _, _ := runtime.Caller(1)\n    return path.Dir(callerPath)\n}\n\nfunc recoveryHandler(c *gin.Context, err interface{}) {\n    c.JSON(400,  gin.H{\n        \"status\": \"fail\",\n        \"err\":   err,\n    })\n}\n\n\nfunc InitRouter() http.Handler {\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 129, "char_end": 159, "line": "// @Contact astaxie@gmail.com\n"}], "added": [{"line_no": 5, "char_start": 129, "char_end": 149, "line": "// @Contact <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 129, "char_end": 159, "chars": "// @Contact astaxie@gmail.com\n"}], "added": [{"char_start": 129, "char_end": 149, "chars": "// @Contact <EMAIL>\n"}]}}
{"func_name": 4862, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"github.com/elfgzp/plumber/database\"\n\t\"github.com/elfgzp/plumber/models\"\n\t_ \"github.com/jinzhu/gorm/dialects/postgres\"\n)\n\n/*\n\tcreatedb plumber_db -U postgres -W\n*/\n\nfunc main() {\n\tdb := database.ConnectToDB()\n\tdefer db.Close()\n\tmodels.SetDB(db)\n\tdb.LogMode(true)\n\n\tu1e := \"plumber@elfgzp.cn\"\n\tu1, _ := models.CreateUser(\"admin\", u1e, \"123456\")\n\n\tu2e := \"demo@elfgzp.cm\"\n\t_, _ = models.CreateUser(\"demo\", u2e, \"123456\")\n\n\tt1, _ := models.CreateTeam(\"plumber\", u1)\n\t_, _ = models.CreateTeam(\"plumber-front-end\", u1)\n\n\tp1, _ := models.CreateProject(\"plumber-project\", \"Project management tool develop by golang\", t1.ID, u1, false)\n\t_, _ = models.CreateProject(\"plumber-demo-project\", \"Project management tool develop by golang (Demo)\", t1.ID, u1, false)\n\n\t_, _ = models.CreateTaskList(\"需求\", p1.ID, u1)\n\t_, _ = models.CreateTaskList(\"设计\", p1.ID, u1)\n\ttl1, _ := models.CreateTaskList(\"开发\", p1.ID, u1)\n\t_, _ = models.CreateTaskList(\"测试\", p1.ID, u1)\n\t_, _ = models.CreateTaskList(\"上线\", p1.ID, u1)\n\n\t_, _ = models.CreateTask(\"登陆页面开发\", nil, nil, tl1, u1)\n\t_, _ = models.CreateTask(\"注册页面开发\", nil, nil, tl1, u1)\n\ttask1, _ := models.CreateTask(\"任务列表页面开发\", nil, nil, tl1, u1)\n\n\t_, _ = models.CreateTaskCheckpoint(\"检查项组件开发\", nil, nil, task1, u1)\n\t_, _ = models.CreateTaskCheckpoint(\"评论组件开发\", nil, nil, task1, u1)\n\n\t_, _ = models.CreateTaskComment(\"测试评论\", task1.ID, u1)\n\n}\n", "func_src_after": "package main\n\nimport (\n\t\"github.com/elfgzp/plumber/database\"\n\t\"github.com/elfgzp/plumber/models\"\n\t_ \"github.com/jinzhu/gorm/dialects/postgres\"\n)\n\n/*\n\tcreatedb plumber_db -U postgres -W\n*/\n\nfunc main() {\n\tdb := database.ConnectToDB()\n\tdefer db.Close()\n\tmodels.SetDB(db)\n\tdb.LogMode(true)\n\n\tu1e := \"<EMAIL>\"\n\tu1, _ := models.CreateUser(\"admin\", u1e, \"123456\")\n\n\tu2e := \"<EMAIL>\"\n\t_, _ = models.CreateUser(\"demo\", u2e, \"123456\")\n\n\tt1, _ := models.CreateTeam(\"plumber\", u1)\n\t_, _ = models.CreateTeam(\"plumber-front-end\", u1)\n\n\tp1, _ := models.CreateProject(\"plumber-project\", \"Project management tool develop by golang\", t1.ID, u1, false)\n\t_, _ = models.CreateProject(\"plumber-demo-project\", \"Project management tool develop by golang (Demo)\", t1.ID, u1, false)\n\n\t_, _ = models.CreateTaskList(\"需求\", p1.ID, u1)\n\t_, _ = models.CreateTaskList(\"设计\", p1.ID, u1)\n\ttl1, _ := models.CreateTaskList(\"开发\", p1.ID, u1)\n\t_, _ = models.CreateTaskList(\"测试\", p1.ID, u1)\n\t_, _ = models.CreateTaskList(\"上线\", p1.ID, u1)\n\n\t_, _ = models.CreateTask(\"登陆页面开发\", nil, nil, tl1, u1)\n\t_, _ = models.CreateTask(\"注册页面开发\", nil, nil, tl1, u1)\n\ttask1, _ := models.CreateTask(\"任务列表页面开发\", nil, nil, tl1, u1)\n\n\t_, _ = models.CreateTaskCheckpoint(\"检查项组件开发\", nil, nil, task1, u1)\n\t_, _ = models.CreateTaskCheckpoint(\"评论组件开发\", nil, nil, task1, u1)\n\n\t_, _ = models.CreateTaskComment(\"测试评论\", task1.ID, u1)\n\n}\n", "line_changes": {"deleted": [{"line_no": 19, "char_start": 288, "char_end": 316, "line": "\tu1e := \"plumber@elfgzp.cn\"\n"}, {"line_no": 23, "char_start": 359, "char_end": 384, "line": "\tu2e := \"demo@elfgzp.cm\"\n"}], "added": [{"line_no": 20, "char_start": 288, "char_end": 306, "line": "\tu1e := \"<EMAIL>\"\n"}, {"line_no": 24, "char_start": 359, "char_end": 377, "line": "\tu2e := \"<EMAIL>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 288, "char_end": 316, "chars": "\tu1e := \"plumber@elfgzp.cn\"\n"}, {"char_start": 359, "char_end": 384, "chars": "\tu2e := \"demo@elfgzp.cm\"\n"}], "added": [{"char_start": 288, "char_end": 306, "chars": "\tu1e := \"<EMAIL>\"\n"}, {"char_start": 359, "char_end": 377, "chars": "\tu2e := \"<EMAIL>\"\n"}]}}
{"func_name": 4867, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t\t\tURL:   \"https://sso.example.com:8080\",\n\t\t\t\t\tRealm: \"rhpam-test\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tObjects: api.KieAppObjects{\n\t\t\t\tConsole: &api.ConsoleObject{\n\t\t\t\t\tSSOClient: &api.SSOAuthClient{\n\t\t\t\t\t\tName:          \"test-rhpamcentr-client\",\n\t\t\t\t\t\tSecret:        \"supersecret\",\n\t\t\t\t\t\tHostnameHTTP:  \"test-rhpamcentr.example.com\",\n\t\t\t\t\t\tHostnameHTTPS: \"secure-test-rhpamcentr.example.com\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tServers: []api.KieServerSet{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:        \"one\",\n\t\t\t\t\t\tDeployments: Pint(2),\n\t\t\t\t\t\tSSOClient: &api.SSOAuthClient{\n\t\t\t\t\t\t\tName:   \"test-kieserver-a-client\",\n\t\t\t\t\t\t\tSecret: \"supersecret-a\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tDeployments: Pint(3),\n\t\t\t\t\t\tSSOClient: &api.SSOAuthClient{\n\t\t\t\t\t\t\tName:          \"test-kieserver-b-client\",\n\t\t\t\t\t\t\tSecret:        \"supersecret-b\",\n\t\t\t\t\t\t\tHostnameHTTPS: \"test-kieserver-b.example.com\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\tenv, err := GetEnvironment(cr, test.MockService())\n\tassert.Nil(t, err, \"Error getting trial environment\")\n\n\texpectedEnvs := []corev1.EnvVar{\n\t\t{Name: \"SSO_URL\", Value: \"https://sso.example.com:8080\"},\n\t\t{Name: \"SSO_REALM\", Value: \"rhpam-test\"},\n\t\t{Name: \"SSO_OPENIDCONNECT_DEPLOYMENTS\", Value: \"ROOT.war\"},\n\t\t{Name: \"SSO_PRINCIPAL_ATTRIBUTE\", Value: \"preferred_username\"},\n\t\t{Name: \"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION\", Value: \"false\"},\n\t\t{Name: \"SSO_USERNAME\"},\n\t\t{Name: \"SSO_PASSWORD\"},\n\t}\n\tfor _, expectedEnv := range expectedEnvs {\n\t\tassert.Contains(t, env.Console.DeploymentConfigs[0].Spec.Template.Spec.Containers[0].Env, expectedEnv, \"Console does not contain env %v\", expectedEnv)\n\t\tfor i := range env.Servers {\n\t\t\tassert.Contains(t, env.Servers[i].DeploymentConfigs[0].Spec.Template.Spec.Containers[0].Env, expectedEnv, \"Server %v does not contain env %v\", i, expectedEnv)", "func_src_after": "\t\t\t\t\tURL:   \"https://sso.example.com:8080\",\n\t\t\t\t\tRealm: \"rhpam-test\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tObjects: api.KieAppObjects{\n\t\t\t\tConsole: &api.ConsoleObject{\n\t\t\t\t\tSSOClient: &api.SSOAuthClient{\n\t\t\t\t\t\tName:          \"test-rhpamcentr-client\",\n\t\t\t\t\t\tSecret:        \"supersecret\",\n\t\t\t\t\t\tHostnameHTTP:  \"test-rhpamcentr.example.com\",\n\t\t\t\t\t\tHostnameHTTPS: \"secure-test-rhpamcentr.example.com\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tServers: []api.KieServerSet{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:        \"one\",\n\t\t\t\t\t\tDeployments: Pint(2),\n\t\t\t\t\t\tSSOClient: &api.SSOAuthClient{\n\t\t\t\t\t\t\tName:   \"test-kieserver-a-client\",\n\t\t\t\t\t\t\tSecret: \"supersecret-a\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tDeployments: Pint(3),\n\t\t\t\t\t\tSSOClient: &api.SSOAuthClient{\n\t\t\t\t\t\t\tName:          \"test-kieserver-b-client\",\n\t\t\t\t\t\t\tSecret:        \"supersecret-b\",\n\t\t\t\t\t\t\tHostnameHTTPS: \"test-kieserver-b.example.com\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\tenv, err := GetEnvironment(cr, test.MockService())\n\tassert.Nil(t, err, \"Error getting trial environment\")\n\n\texpectedEnvs := []corev1.EnvVar{\n\t\t{Name: \"SSO_URL\", Value: \"https://sso.example.com:8080\"},\n\t\t{Name: \"SSO_REALM\", Value: \"rhpam-test\"},\n\t\t{Name: \"SSO_OPENIDCONNECT_DEPLOYMENTS\", Value: \"ROOT.war\"},\n\t\t{Name: \"SSO_PRINCIPAL_ATTRIBUTE\", Value: \"preferred_username\"},\n\t\t{Name: \"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION\", Value: \"false\"},\n\t\t{Name: \"SSO_USERNAME\"},\n\t\t{Name: \"SSO_PASSWORD\"},\n\t}\n\tfor _, expectedEnv := range expectedEnvs {\n\t\tassert.Contains(t, env.Console.DeploymentConfigs[0].Spec.Template.Spec.Containers[0].Env, expectedEnv, \"Console does not contain env %v\", expectedEnv)\n\t\tfor i := range env.Servers {\n\t\t\tassert.Contains(t, env.Servers[i].DeploymentConfigs[0].Spec.Template.Spec.Containers[0].Env, expectedEnv, \"Server %v does not contain env %v\", i, expectedEnv)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4869, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/miekg/dns\"\n\t\"github.com/spf13/pflag\"\n)\n\nconst ErrNoCAA = `Sorry, we couldn't detect any CAA records for your domain! Are you sure they were configured correctly?\nIf no CAA records are defined, any Certificate Authority can provide SSL/TLS certificates for your domain, without restrictions.`\nconst defaultNS = \"114.114.114.114:53\"\nconst defaultTimeout = \"500ms\"\n\nvar ns *string\nvar timeout time.Duration\n\nfunc init() {\n\tpflag.Usage = func() {\n\t\tfmt.Fprintf(os.Stderr, \"Usage of %s:\\n\\tcaa-validator [domain]\\n\", os.Args[0])\n\t\tpflag.PrintDefaults()\n\t}\n\tns = pflag.StringP(\"server\", \"s\", defaultNS, \"name server\")\n\ttmp := pflag.StringP(\"timeout\", \"t\", defaultTimeout, \"timeout for dial, write and read\")\n\tpflag.Parse()\n\n\tvar err error\n\ttimeout, err = time.ParseDuration(*tmp)\n\tif err != nil {\n\t\tfmt.Println(\"parse timeout error:\", err)\n\t\tos.Exit(0)\n\t}\n\tif timeout > 1e10 {\n\t\ttimeout = 5e8\n\t}\n}\n\nfunc main() {\n\tdomain := dns.Fqdn(pflag.Arg(0))\n\tif domain == \".\" {\n\t\tfmt.Println(\"give a domain please.\")\n\t\tos.Exit(0)\n\t}\n\tdetect(domain)\n}\n\nfunc detect(name string) {\n\tconn, err := dns.DialTimeout(\"tcp\", *ns, timeout)", "func_src_after": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/miekg/dns\"\n\t\"github.com/spf13/pflag\"\n)\n\nconst ErrNoCAA = `Sorry, we couldn't detect any CAA records for your domain! Are you sure they were configured correctly?\nIf no CAA records are defined, any Certificate Authority can provide SSL/TLS certificates for your domain, without restrictions.`\nconst defaultNS = \"<IP-Address>:53\"\nconst defaultTimeout = \"500ms\"\n\nvar ns *string\nvar timeout time.Duration\n\nfunc init() {\n\tpflag.Usage = func() {\n\t\tfmt.Fprintf(os.Stderr, \"Usage of %s:\\n\\tcaa-validator [domain]\\n\", os.Args[0])\n\t\tpflag.PrintDefaults()\n\t}\n\tns = pflag.StringP(\"server\", \"s\", defaultNS, \"name server\")\n\ttmp := pflag.StringP(\"timeout\", \"t\", defaultTimeout, \"timeout for dial, write and read\")\n\tpflag.Parse()\n\n\tvar err error\n\ttimeout, err = time.ParseDuration(*tmp)\n\tif err != nil {\n\t\tfmt.Println(\"parse timeout error:\", err)\n\t\tos.Exit(0)\n\t}\n\tif timeout > 1e10 {\n\t\ttimeout = 5e8\n\t}\n}\n\nfunc main() {\n\tdomain := dns.Fqdn(pflag.Arg(0))\n\tif domain == \".\" {\n\t\tfmt.Println(\"give a domain please.\")\n\t\tos.Exit(0)\n\t}\n\tdetect(domain)\n}\n\nfunc detect(name string) {\n\tconn, err := dns.DialTimeout(\"tcp\", *ns, timeout)", "line_changes": {"deleted": [{"line_no": 14, "char_start": 350, "char_end": 389, "line": "const defaultNS = \"114.114.114.114:53\"\n"}], "added": [{"line_no": 15, "char_start": 350, "char_end": 386, "line": "const defaultNS = \"<IP-Address>:53\"\n"}]}, "char_changes": {"deleted": [{"char_start": 350, "char_end": 389, "chars": "const defaultNS = \"114.114.114.114:53\"\n"}], "added": [{"char_start": 350, "char_end": 386, "chars": "const defaultNS = \"<IP-Address>:53\"\n"}]}}
{"func_name": 4874, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package ics\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\ntype PropertyValueCheck struct {\n\tKey    string\n\tValues []string\n}\n\nfunc (c *PropertyValueCheck) Check(t *testing.T, output *BaseProperty) {\n\tv, ok := output.ICalParameters[c.Key]\n\tif !ok {\n\t\tt.Errorf(\"Key %s value is missing\", c.Key)\n\t\treturn\n\t}\n\tassert.Equal(t, c.Values, v)\n}\n\nfunc NewPropertyValueCheck(key string, properties ...string) *PropertyValueCheck {\n\treturn &PropertyValueCheck{\n\t\tKey:    key,\n\t\tValues: properties,\n\t}\n}\n\nfunc TestPropertyParse(t *testing.T) {\n\ttests := []struct {\n\t\tName     string\n\t\tInput    string\n\t\tExpected func(t *testing.T, output *BaseProperty, err error)\n\t}{\n\t\t{Name: \"Normal attendee parse\", Input: \"ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT;CUTYPE=GROUP:mailto:employee-A@example.com\", Expected: func(t *testing.T, output *BaseProperty, err error) {\n\t\t\tassert.NoError(t, err)\n\t\t\tassert.NotNil(t, output)\n\t\t\tassert.Equal(t, \"ATTENDEE\", output.IANAToken)\n\t\t\tassert.Equal(t, \"mailto:employee-A@example.com\", output.Value)\n\t\t\tfor _, expected := range []*PropertyValueCheck{\n\t\t\t\tNewPropertyValueCheck(\"RSVP\", \"TRUE\"),\n\t\t\t} {\n\t\t\t\texpected.Check(t, output)\n\t\t\t}\n\t\t}},\n\t\t{Name: \"Attendee parse with quotes\", Input: \"ATTENDEE;RSVP=\\\"TRUE\\\";ROLE=REQ-PARTICIPANT;CUTYPE=GROUP:mailto:employee-A@example.com\", Expected: func(t *testing.T, output *BaseProperty, err error) {\n\t\t\tassert.NoError(t, err)\n\t\t\tassert.NotNil(t, output)\n\t\t\tassert.Equal(t, \"ATTENDEE\", output.IANAToken)", "func_src_after": "package ics\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\ntype PropertyValueCheck struct {\n\tKey    string\n\tValues []string\n}\n\nfunc (c *PropertyValueCheck) Check(t *testing.T, output *BaseProperty) {\n\tv, ok := output.ICalParameters[c.Key]\n\tif !ok {\n\t\tt.Errorf(\"Key %s value is missing\", c.Key)\n\t\treturn\n\t}\n\tassert.Equal(t, c.Values, v)\n}\n\nfunc NewPropertyValueCheck(key string, properties ...string) *PropertyValueCheck {\n\treturn &PropertyValueCheck{\n\t\tKey:    key,\n\t\tValues: properties,\n\t}\n}\n\nfunc TestPropertyParse(t *testing.T) {\n\ttests := []struct {\n\t\tName     string\n\t\tInput    string\n\t\tExpected func(t *testing.T, output *BaseProperty, err error)\n\t}{\n\t\t{Name: \"Normal attendee parse\", Input: \"ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT;CUTYPE=GROUP:mailto:employee-A@example.com\", Expected: func(t *testing.T, output *BaseProperty, err error) {\n\t\t\tassert.NoError(t, err)\n\t\t\tassert.NotNil(t, output)\n\t\t\tassert.Equal(t, \"ATTENDEE\", output.IANAToken)\n\t\t\tassert.Equal(t, \"mailto:<EMAIL>\", output.Value)\n\t\t\tfor _, expected := range []*PropertyValueCheck{\n\t\t\t\tNewPropertyValueCheck(\"RSVP\", \"TRUE\"),\n\t\t\t} {\n\t\t\t\texpected.Check(t, output)\n\t\t\t}\n\t\t}},\n\t\t{Name: \"Attendee parse with quotes\", Input: \"ATTENDEE;RSVP=\\\"TRUE\\\";ROLE=REQ-PARTICIPANT;CUTYPE=GROUP:mailto:employee-A@example.com\", Expected: func(t *testing.T, output *BaseProperty, err error) {\n\t\t\tassert.NoError(t, err)\n\t\t\tassert.NotNil(t, output)\n\t\t\tassert.Equal(t, \"ATTENDEE\", output.IANAToken)", "line_changes": {"deleted": [{"line_no": 40, "char_start": 967, "char_end": 1033, "line": "\t\t\tassert.Equal(t, \"mailto:employee-A@example.com\", output.Value)\n"}], "added": [{"line_no": 41, "char_start": 967, "char_end": 1018, "line": "\t\t\tassert.Equal(t, \"mailto:<EMAIL>\", output.Value)\n"}]}, "char_changes": {"deleted": [{"char_start": 967, "char_end": 1033, "chars": "\t\t\tassert.Equal(t, \"mailto:employee-A@example.com\", output.Value)\n"}], "added": [{"char_start": 967, "char_end": 1018, "chars": "\t\t\tassert.Equal(t, \"mailto:<EMAIL>\", output.Value)\n"}]}}
{"func_name": 4881, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2015 The Cockroach Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied. See the License for the specific language governing\n// permissions and limitations under the License. See the AUTHORS file\n// for names of contributors.\n//\n// Author: Peter Mattis (peter@cockroachlabs.com)\n\npackage sql\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/cockroachdb/cockroach/sql/parser\"\n\t\"github.com/cockroachdb/cockroach/util\"\n)\n\n// Set sets session variables.\nfunc (p *planner) Set(n *parser.Set) (planNode, error) {\n\t// By using QualifiedName.String() here any variables that are keywords will\n\t// be double quoted.\n\tname := strings.ToLower(n.Name.String())\n\tswitch name {\n\tcase `\"database\"`: // Quoted: database is a reserved word\n\t\tif len(n.Values) != 1 {\n\t\t\treturn nil, fmt.Errorf(\"database: requires a single string value\")\n\t\t}\n\t\tval, err := parser.EvalExpr(n.Values[0], nil)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tif s, ok := val.(parser.DString); ok {\n\t\t\tp.session.Database = string(s)\n\t\t} else if !ok {\n\t\t\treturn nil, fmt.Errorf(\"database: requires a single string value: %s is a %s\",\n\t\t\t\tn.Values[0], val.Type())\n\t\t}\n\tdefault:\n\t\treturn nil, util.Errorf(\"unknown variable: %s\", name)\n\t}", "func_src_after": "// Copyright 2015 The Cockroach Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied. See the License for the specific language governing\n// permissions and limitations under the License. See the AUTHORS file\n// for names of contributors.\n//\n// Author: Peter Mattis (<EMAIL>)\n\npackage sql\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/cockroachdb/cockroach/sql/parser\"\n\t\"github.com/cockroachdb/cockroach/util\"\n)\n\n// Set sets session variables.\nfunc (p *planner) Set(n *parser.Set) (planNode, error) {\n\t// By using QualifiedName.String() here any variables that are keywords will\n\t// be double quoted.\n\tname := strings.ToLower(n.Name.String())\n\tswitch name {\n\tcase `\"database\"`: // Quoted: database is a reserved word\n\t\tif len(n.Values) != 1 {\n\t\t\treturn nil, fmt.Errorf(\"database: requires a single string value\")\n\t\t}\n\t\tval, err := parser.EvalExpr(n.Values[0], nil)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tif s, ok := val.(parser.DString); ok {\n\t\t\tp.session.Database = string(s)\n\t\t} else if !ok {\n\t\t\treturn nil, fmt.Errorf(\"database: requires a single string value: %s is a %s\",\n\t\t\t\tn.Values[0], val.Type())\n\t\t}\n\tdefault:\n\t\treturn nil, util.Errorf(\"unknown variable: %s\", name)\n\t}", "line_changes": {"deleted": [{"line_no": 16, "char_start": 653, "char_end": 703, "line": "// Author: Peter Mattis (peter@cockroachlabs.com)\n"}], "added": [{"line_no": 17, "char_start": 653, "char_end": 687, "line": "// Author: Peter Mattis (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 653, "char_end": 703, "chars": "// Author: Peter Mattis (peter@cockroachlabs.com)\n"}], "added": [{"char_start": 653, "char_end": 687, "chars": "// Author: Peter Mattis (<EMAIL>)\n"}]}}
{"func_name": 4888, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                \"id\": \"ID{{userID $offset $index}}\"\n            },\n            \"role\": \"{{ $role }}\"\n        }\n        {{- if not (lastIndex $length $index) }},\n        {{end -}}\n        {{- end }}\n    ]\n}\n`\n\nvar memberPageTemplate = template.Must(pageTemplate.New(\"membersResponse\").\n\tFuncs(templateUtilityFuncs).\n\tParse(membersResponseTemplate))\n\nconst (\n\ttestValidTeamID = \"MYTEAM\"\n\ttestAPIKey      = \"MYKEY\"\n\ttestBadURL      = \"A-FAKE-URL\"\n\ttestMaxPageSize = 3\n)\n\nvar templateUtilityFuncs = template.FuncMap{\n\t\"lastIndex\": lastIndex,\n\t\"userID\":    userID,\n}\n\nvar pageTemplate = template.Must(template.New(\"pageInfo\").Parse(`\n    \"more\": {{- .more -}},\n    \"limit\": {{- .limit -}},\n    \"offset\": {{- .offset -}}\n`))\n\ntype pageDetails struct {\n\tlowNumber, highNumber, limit, offset int\n\tmore                                 bool\n}\n\nfunc genMembersRespPage(details pageDetails, t *testing.T) string {\n\tif details.limit == 0 {\n\t\tdetails.limit = 25 // Default to 25, PD's API default.\n\t}\n\n\tpossibleRoles := []string{\"manager\", \"responder\", \"observer\"}\n\troles := make([]string, 0)\n\tfor ; details.lowNumber <= details.highNumber; details.lowNumber++ {\n\t\troles = append(roles, possibleRoles[details.lowNumber%len(possibleRoles)])\n\t}\n\n\tbuffer := bytes.NewBufferString(\"\")", "func_src_after": "                \"id\": \"ID{{userID $offset $index}}\"\n            },\n            \"role\": \"{{ $role }}\"\n        }\n        {{- if not (lastIndex $length $index) }},\n        {{end -}}\n        {{- end }}\n    ]\n}\n`\n\nvar memberPageTemplate = template.Must(pageTemplate.New(\"membersResponse\").\n\tFuncs(templateUtilityFuncs).\n\tParse(membersResponseTemplate))\n\nconst (\n\ttestValidTeamID = \"MYTEAM\"\n\ttestAPIKey      = \"MYKEY\"\n\ttestBadURL      = \"A-FAKE-URL\"\n\ttestMaxPageSize = 3\n)\n\nvar templateUtilityFuncs = template.FuncMap{\n\t\"lastIndex\": lastIndex,\n\t\"userID\":    userID,\n}\n\nvar pageTemplate = template.Must(template.New(\"pageInfo\").Parse(`\n    \"more\": {{- .more -}},\n    \"limit\": {{- .limit -}},\n    \"offset\": {{- .offset -}}\n`))\n\ntype pageDetails struct {\n\tlowNumber, highNumber, limit, offset int\n\tmore                                 bool\n}\n\nfunc genMembersRespPage(details pageDetails, t *testing.T) string {\n\tif details.limit == 0 {\n\t\tdetails.limit = 25 // Default to 25, PD's API default.\n\t}\n\n\tpossibleRoles := []string{\"manager\", \"responder\", \"observer\"}\n\troles := make([]string, 0)\n\tfor ; details.lowNumber <= details.highNumber; details.lowNumber++ {\n\t\troles = append(roles, possibleRoles[details.lowNumber%len(possibleRoles)])\n\t}\n\n\tbuffer := bytes.NewBufferString(\"\")", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4889, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/golang/glog\"\n\t\"github.com/lemontree2015/skynet.common/gproto\"\n\t\"github.com/lemontree2015/skynet.common/libnet\"\n\t\"os\"\n\t\"time\"\n)\n\nvar (\n\tnewConnectionInterval = time.Millisecond * 5\n\tsendPacketInterval    = time.Second\n\tdefaultPacket         = []byte(\"packet:abcdefghijklmnopqrstuvwxyz\")\n)\n\n// stress client\nfunc main() {\n\tflag.Parse()\n\tfor i := 0; i <= 1000; i++ {\n\t\ttime.Sleep(newConnectionInterval)\n\t\tlaunchClient(\"127.0.0.1:8888\", 0)\n\t}\n\n\tfor {\n\t\ttime.Sleep(time.Second * 10)\n\t}\n\n}\n\nfunc launchClient(address string, timeout time.Duration) {\n\tclient, err := libnet.NewClient(address, timeout)\n\tcheckError(err)\n\tclient.Start(func(session *libnet.Session) {\n\t\t// handle panic\n\t\tdefer func() {\n\t\t\tif r := recover(); r != nil {\n\t\t\t\tglog.Warningf(\"session start recover: %v\", r)\n\t\t\t}\n\t\t}()\n\n\t\tglog.Infof(\"connect to server success id = %v\", session.Id())\n\n\t\t// handle incoming packet\n\t\tsession.OnPacket(func(session *libnet.Session, iMessage *gproto.Message) {\n\t\t\tgProtoEchoResponse := (iMessage.Body).(*gproto.GProtoEchoResponse)\n\t\t\t// glog.Infof(\"client id=%v say %v\", session.Id(), gProtoEchoResponse.Data)\n\t\t\tif gProtoEchoResponse.Data != \"Test_Data\" {", "func_src_after": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/golang/glog\"\n\t\"github.com/lemontree2015/skynet.common/gproto\"\n\t\"github.com/lemontree2015/skynet.common/libnet\"\n\t\"os\"\n\t\"time\"\n)\n\nvar (\n\tnewConnectionInterval = time.Millisecond * 5\n\tsendPacketInterval    = time.Second\n\tdefaultPacket         = []byte(\"packet:abcdefghijklmnopqrstuvwxyz\")\n)\n\n// stress client\nfunc main() {\n\tflag.Parse()\n\tfor i := 0; i <= 1000; i++ {\n\t\ttime.Sleep(newConnectionInterval)\n\t\tlaunchClient(\"<IP-Address>:8888\", 0)\n\t}\n\n\tfor {\n\t\ttime.Sleep(time.Second * 10)\n\t}\n\n}\n\nfunc launchClient(address string, timeout time.Duration) {\n\tclient, err := libnet.NewClient(address, timeout)\n\tcheckError(err)\n\tclient.Start(func(session *libnet.Session) {\n\t\t// handle panic\n\t\tdefer func() {\n\t\t\tif r := recover(); r != nil {\n\t\t\t\tglog.Warningf(\"session start recover: %v\", r)\n\t\t\t}\n\t\t}()\n\n\t\tglog.Infof(\"connect to server success id = %v\", session.Id())\n\n\t\t// handle incoming packet\n\t\tsession.OnPacket(func(session *libnet.Session, iMessage *gproto.Message) {\n\t\t\tgProtoEchoResponse := (iMessage.Body).(*gproto.GProtoEchoResponse)\n\t\t\t// glog.Infof(\"client id=%v say %v\", session.Id(), gProtoEchoResponse.Data)\n\t\t\tif gProtoEchoResponse.Data != \"Test_Data\" {", "line_changes": {"deleted": [{"line_no": 24, "char_start": 451, "char_end": 487, "line": "\t\tlaunchClient(\"127.0.0.1:8888\", 0)\n"}], "added": [{"line_no": 25, "char_start": 451, "char_end": 490, "line": "\t\tlaunchClient(\"<IP-Address>:8888\", 0)\n"}]}, "char_changes": {"deleted": [{"char_start": 451, "char_end": 487, "chars": "\t\tlaunchClient(\"127.0.0.1:8888\", 0)\n"}], "added": [{"char_start": 451, "char_end": 490, "chars": "\t\tlaunchClient(\"<IP-Address>:8888\", 0)\n"}]}}
{"func_name": 4891, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net\"\n\n\t\"../pb\"\n\t\"github.com/golang/protobuf/ptypes/empty\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\tcontext \"golang.org/x/net/context\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/reflection\"\n)\n\ntype server struct{}\n\nvar collection *mongo.Collection\n\nfunc main() {\n\tlis, err := net.Listen(\"tcp\", \":7777\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to listen: %v\", err)\n\t}\n\tlog.Println(\"Starting Cart service\")\n\ts := grpc.NewServer()\n\tpb.RegisterCartServiceServer(s, &server{})\n\treflection.Register(s)\n\tinitDatabase()\n\tif err := s.Serve(lis); err != nil {\n\t\tlog.Fatalf(\"Failed to serve: %v\", err)\n\t}\n}\n\nfunc initDatabase() {\n\t// Set client options\n\tclientOptions := options.Client().ApplyURI(\"mongodb+srv://admin:nimda@cluster0-vmhnr.mongodb.net/test?retryWrites=true\")\n\n\t// Connect to MongoDB\n\tclient, err := mongo.Connect(context.TODO(), clientOptions)\n\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Check the connection\n\terr = client.Ping(context.TODO(), nil)\n", "func_src_after": "package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net\"\n\n\t\"../pb\"\n\t\"github.com/golang/protobuf/ptypes/empty\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\tcontext \"golang.org/x/net/context\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/reflection\"\n)\n\ntype server struct{}\n\nvar collection *mongo.Collection\n\nfunc main() {\n\tlis, err := net.Listen(\"tcp\", \":7777\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to listen: %v\", err)\n\t}\n\tlog.Println(\"Starting Cart service\")\n\ts := grpc.NewServer()\n\tpb.RegisterCartServiceServer(s, &server{})\n\treflection.Register(s)\n\tinitDatabase()\n\tif err := s.Serve(lis); err != nil {\n\t\tlog.Fatalf(\"Failed to serve: %v\", err)\n\t}\n}\n\nfunc initDatabase() {\n\t// Set client options\n\tclientOptions := options.Client().ApplyURI(\"mongodb+srv://admin:<EMAIL>/test?retryWrites=true\")\n\n\t// Connect to MongoDB\n\tclient, err := mongo.Connect(context.TODO(), clientOptions)\n\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Check the connection\n\terr = client.Ping(context.TODO(), nil)\n", "line_changes": {"deleted": [{"line_no": 39, "char_start": 764, "char_end": 886, "line": "\tclientOptions := options.Client().ApplyURI(\"mongodb+srv://admin:nimda@cluster0-vmhnr.mongodb.net/test?retryWrites=true\")\n"}], "added": [{"line_no": 40, "char_start": 764, "char_end": 861, "line": "\tclientOptions := options.Client().ApplyURI(\"mongodb+srv://admin:<EMAIL>/test?retryWrites=true\")\n"}]}, "char_changes": {"deleted": [{"char_start": 764, "char_end": 886, "chars": "\tclientOptions := options.Client().ApplyURI(\"mongodb+srv://admin:nimda@cluster0-vmhnr.mongodb.net/test?retryWrites=true\")\n"}], "added": [{"char_start": 764, "char_end": 861, "chars": "\tclientOptions := options.Client().ApplyURI(\"mongodb+srv://admin:<EMAIL>/test?retryWrites=true\")\n"}]}}
{"func_name": 4901, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t_ \"log\"\n\t\"runtime\"\n\t\"testing\"\n)\n\nconst dsnStringTest = \"root:password@tcp(127.0.0.1:3306)/test?multiStatements=true\"\n\nfunc TestGetDBConnectionParametersLocalEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"local\")\n\tif dbUsername != \"root\" || dbPassword != \"password\" || dbHost != \"127.0.0.1:3306\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersTestEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"test\")\n\tif dbUsername != \"root\" || dbPassword != \"\" || dbHost != \"127.0.0.1:3306\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersFailEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"fail\")\n\tif dbUsername != \"fail\" || dbPassword != \"fail\" || dbHost != \"fail:3306\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersMissingEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"bob\")\n\tif dbUsername != \"\" || dbPassword != \"\" || dbHost != \"\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersMissingFile(t *testing.T) {\n\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/fail.fail\", \"fail\")\n\tif dbUsername != \"\" || dbPassword != \"\" || dbHost != \"\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestBuildDsnString(t *testing.T) {\n\tval := buildDsnString(\"root\", \"password\", \"127.0.0.1:3306\", \"test\")\n\tif val != dsnStringTest {\n\t\tt.Fail()", "func_src_after": "package main\n\nimport (\n\t_ \"log\"\n\t\"runtime\"\n\t\"testing\"\n)\n\nconst dsnStringTest = \"root:password@tcp(<IP-Address>:3306)/test?multiStatements=true\"\n\nfunc TestGetDBConnectionParametersLocalEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"local\")\n\tif dbUsername != \"root\" || dbPassword != \"password\" || dbHost != \"<IP-Address>:3306\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersTestEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"test\")\n\tif dbUsername != \"root\" || dbPassword != \"\" || dbHost != \"<IP-Address>:3306\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersFailEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"fail\")\n\tif dbUsername != \"fail\" || dbPassword != \"fail\" || dbHost != \"fail:3306\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersMissingEnvironment(t *testing.T) {\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/environments.csv\", \"bob\")\n\tif dbUsername != \"\" || dbPassword != \"\" || dbHost != \"\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestGetDBConnectionParametersMissingFile(t *testing.T) {\n\n\tdbUsername, dbPassword, dbHost = getDBConnectionParameters(\"testdata/fail.fail\", \"fail\")\n\tif dbUsername != \"\" || dbPassword != \"\" || dbHost != \"\" {\n\t\tt.Fail()\n\t}\n}\n\nfunc TestBuildDsnString(t *testing.T) {\n\tval := buildDsnString(\"root\", \"password\", \"<IP-Address>:3306\", \"test\")\n\tif val != dsnStringTest {\n\t\tt.Fail()", "line_changes": {"deleted": [{"line_no": 9, "char_start": 57, "char_end": 141, "line": "const dsnStringTest = \"root:password@tcp(127.0.0.1:3306)/test?multiStatements=true\"\n"}, {"line_no": 14, "char_start": 310, "char_end": 395, "line": "\tif dbUsername != \"root\" || dbPassword != \"password\" || dbHost != \"127.0.0.1:3306\" {\n"}, {"line_no": 22, "char_start": 578, "char_end": 655, "line": "\tif dbUsername != \"root\" || dbPassword != \"\" || dbHost != \"127.0.0.1:3306\" {\n"}, {"line_no": 51, "char_start": 1441, "char_end": 1510, "line": "\tval := buildDsnString(\"root\", \"password\", \"127.0.0.1:3306\", \"test\")\n"}], "added": [{"line_no": 10, "char_start": 57, "char_end": 144, "line": "const dsnStringTest = \"root:password@tcp(<IP-Address>:3306)/test?multiStatements=true\"\n"}, {"line_no": 15, "char_start": 310, "char_end": 398, "line": "\tif dbUsername != \"root\" || dbPassword != \"password\" || dbHost != \"<IP-Address>:3306\" {\n"}, {"line_no": 23, "char_start": 578, "char_end": 658, "line": "\tif dbUsername != \"root\" || dbPassword != \"\" || dbHost != \"<IP-Address>:3306\" {\n"}, {"line_no": 52, "char_start": 1441, "char_end": 1513, "line": "\tval := buildDsnString(\"root\", \"password\", \"<IP-Address>:3306\", \"test\")\n"}]}, "char_changes": {"deleted": [{"char_start": 57, "char_end": 141, "chars": "const dsnStringTest = \"root:password@tcp(127.0.0.1:3306)/test?multiStatements=true\"\n"}, {"char_start": 310, "char_end": 395, "chars": "\tif dbUsername != \"root\" || dbPassword != \"password\" || dbHost != \"127.0.0.1:3306\" {\n"}, {"char_start": 578, "char_end": 655, "chars": "\tif dbUsername != \"root\" || dbPassword != \"\" || dbHost != \"127.0.0.1:3306\" {\n"}, {"char_start": 1441, "char_end": 1510, "chars": "\tval := buildDsnString(\"root\", \"password\", \"127.0.0.1:3306\", \"test\")\n"}], "added": [{"char_start": 57, "char_end": 144, "chars": "const dsnStringTest = \"root:password@tcp(<IP-Address>:3306)/test?multiStatements=true\"\n"}, {"char_start": 310, "char_end": 398, "chars": "\tif dbUsername != \"root\" || dbPassword != \"password\" || dbHost != \"<IP-Address>:3306\" {\n"}, {"char_start": 578, "char_end": 658, "chars": "\tif dbUsername != \"root\" || dbPassword != \"\" || dbHost != \"<IP-Address>:3306\" {\n"}, {"char_start": 1441, "char_end": 1513, "chars": "\tval := buildDsnString(\"root\", \"password\", \"<IP-Address>:3306\", \"test\")\n"}]}}
{"func_name": 4902, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//\n// rubrik-exporter\n//\n// Exports metrics from rubrik backup for prometheus\n//\n// License: Apache License Version 2.0,\n// Organization: Claranet GmbH\n// Author: Martin Weber <martin.weber@de.clara.net>\n//\n\npackage rubrik\n\nimport (\n\t//\t\"os\"\n\t\"crypto/tls\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"net/url\"\n\t\"strings\"\n\n\t\"github.com/prometheus/log\"\n)\n\ntype RequestParams struct {\n\tbody, header string\n\tparams       url.Values\n}\n\ntype Rubrik struct {\n\turl      string\n\tusername string\n\tpassword string\n\n\tsessionToken string\n\tisLoggedIn   bool\n}\n\nfunc (r *Rubrik) makeRequest(reqType string, action string, p RequestParams) (*http.Response, error) {\n\tlog.Debugf(\"Is logged in: %t\", r.isLoggedIn)\n\n\t_url := r.url + action\n\n\tlog.Infof(\"Requested action: %s\", action)\n\n\ttr := &http.Transport{TLSClientConfig: &tls.Config{InsecureSkipVerify: true}}\n\tvar netClient = http.Client{Transport: tr}\n\n\tbody := p.body\n\n\t_url += \"?\" + p.params.Encode()", "func_src_after": "//\n// rubrik-exporter\n//\n// Exports metrics from rubrik backup for prometheus\n//\n// License: Apache License Version 2.0,\n// Organization: Claranet GmbH\n// Author: Martin Weber <<EMAIL>>\n//\n\npackage rubrik\n\nimport (\n\t//\t\"os\"\n\t\"crypto/tls\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"net/url\"\n\t\"strings\"\n\n\t\"github.com/prometheus/log\"\n)\n\ntype RequestParams struct {\n\tbody, header string\n\tparams       url.Values\n}\n\ntype Rubrik struct {\n\turl      string\n\tusername string\n\tpassword string\n\n\tsessionToken string\n\tisLoggedIn   bool\n}\n\nfunc (r *Rubrik) makeRequest(reqType string, action string, p RequestParams) (*http.Response, error) {\n\tlog.Debugf(\"Is logged in: %t\", r.isLoggedIn)\n\n\t_url := r.url + action\n\n\tlog.Infof(\"Requested action: %s\", action)\n\n\ttr := &http.Transport{TLSClientConfig: &tls.Config{InsecureSkipVerify: true}}\n\tvar netClient = http.Client{Transport: tr}\n\n\tbody := p.body\n\n\t_url += \"?\" + p.params.Encode()", "line_changes": {"deleted": [{"line_no": 8, "char_start": 152, "char_end": 204, "line": "// Author: Martin Weber <martin.weber@de.clara.net>\n"}], "added": [{"line_no": 9, "char_start": 152, "char_end": 186, "line": "// Author: Martin Weber <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 152, "char_end": 204, "chars": "// Author: Martin Weber <martin.weber@de.clara.net>\n"}], "added": [{"char_start": 152, "char_end": 186, "chars": "// Author: Martin Weber <<EMAIL>>\n"}]}}
{"func_name": 4905, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>\n//\n// SPDX-License-Identifier: Apache-2.0\n\npackage rcprectypes\n\nimport (\n\t\"encoding/hex\"\n\te2sm_rc_pre_v2 \"github.com/onosproject/onos-e2-sm/servicemodels/e2sm_rc_pre/v2/e2sm-rc-pre-v2\"\n\t\"gotest.tools/assert\"\n\t\"testing\"\n)\n\nfunc Test_xerEncodePCI(t *testing.T) {\n\n\tvar pci int32 = 252\n\n\tc := &e2sm_rc_pre_v2.Pci{\n\t\tValue: pci,\n\t}\n\n\txer, err := xerEncodePCI(c)\n\tassert.NilError(t, err)\n\tt.Logf(\"PCI XER\\n%s\", string(xer))\n}\n\nfunc Test_decodePCI(t *testing.T) {\n\n\tvar pci int32 = 252\n\n\tc := &e2sm_rc_pre_v2.Pci{\n\t\tValue: pci,\n\t}\n\n\tpciC := newPCI(c)\n\tresult := decodePCI(pciC)\n\tassert.Equal(t, pci, result.Value, \"Something went wrong, comparison is incorrect\")\n}\n\nfunc Test_perEncodePCI(t *testing.T) {\n\n\tvar pci int32 = 252\n\n\tc := &e2sm_rc_pre_v2.Pci{\n\t\tValue: pci,\n\t}\n\n\tpciPer, err := perEncodePCI(c)\n\tassert.NilError(t, err)\n\tassert.Assert(t, pciPer != nil)", "func_src_after": "// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <<EMAIL>>\n//\n// SPDX-License-Identifier: Apache-2.0\n\npackage rcprectypes\n\nimport (\n\t\"encoding/hex\"\n\te2sm_rc_pre_v2 \"github.com/onosproject/onos-e2-sm/servicemodels/e2sm_rc_pre/v2/e2sm-rc-pre-v2\"\n\t\"gotest.tools/assert\"\n\t\"testing\"\n)\n\nfunc Test_xerEncodePCI(t *testing.T) {\n\n\tvar pci int32 = 252\n\n\tc := &e2sm_rc_pre_v2.Pci{\n\t\tValue: pci,\n\t}\n\n\txer, err := xerEncodePCI(c)\n\tassert.NilError(t, err)\n\tt.Logf(\"PCI XER\\n%s\", string(xer))\n}\n\nfunc Test_decodePCI(t *testing.T) {\n\n\tvar pci int32 = 252\n\n\tc := &e2sm_rc_pre_v2.Pci{\n\t\tValue: pci,\n\t}\n\n\tpciC := newPCI(c)\n\tresult := decodePCI(pciC)\n\tassert.Equal(t, pci, result.Value, \"Something went wrong, comparison is incorrect\")\n}\n\nfunc Test_perEncodePCI(t *testing.T) {\n\n\tvar pci int32 = 252\n\n\tc := &e2sm_rc_pre_v2.Pci{\n\t\tValue: pci,\n\t}\n\n\tpciPer, err := perEncodePCI(c)\n\tassert.NilError(t, err)\n\tassert.Assert(t, pciPer != nil)", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 93, "line": "// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 77, "line": "// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 93, "chars": "// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>\n"}], "added": [{"char_start": 0, "char_end": 77, "chars": "// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <<EMAIL>>\n"}]}}
{"func_name": 4910, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * Copyright 2020 Appvia Ltd <info@appvia.io>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage application\n\nimport (\n\t\"fmt\"\n\n\tclustersv1 \"github.com/appvia/kore/pkg/apis/clusters/v1\"\n\tcorev1 \"github.com/appvia/kore/pkg/apis/core/v1\"\n\n\tservicesv1 \"github.com/appvia/kore/pkg/apis/services/v1\"\n\t\"github.com/appvia/kore/pkg/kore\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"sigs.k8s.io/controller-runtime/pkg/reconcile\"\n)\n\nvar _ kore.ServiceProvider = Provider{}\n\nconst (\n\tType               = \"application\"\n\tServiceKindApp     = \"app\"\n\tServiceKindHelmApp = \"helm-app\"\n)\n\ntype Provider struct {\n\tname  string\n\tplans []servicesv1.ServicePlan\n}\n\nfunc (p Provider) Name() string {\n\treturn p.name\n}\n\nfunc (p Provider) Catalog(ctx kore.Context, provider *servicesv1.ServiceProvider) (kore.ServiceProviderCatalog, error) {\n\treturn kore.ServiceProviderCatalog{\n\t\tKinds: []servicesv1.ServiceKind{", "func_src_after": "/**\n * Copyright 2020 Appvia Ltd <<EMAIL>>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage application\n\nimport (\n\t\"fmt\"\n\n\tclustersv1 \"github.com/appvia/kore/pkg/apis/clusters/v1\"\n\tcorev1 \"github.com/appvia/kore/pkg/apis/core/v1\"\n\n\tservicesv1 \"github.com/appvia/kore/pkg/apis/services/v1\"\n\t\"github.com/appvia/kore/pkg/kore\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"sigs.k8s.io/controller-runtime/pkg/reconcile\"\n)\n\nvar _ kore.ServiceProvider = Provider{}\n\nconst (\n\tType               = \"application\"\n\tServiceKindApp     = \"app\"\n\tServiceKindHelmApp = \"helm-app\"\n)\n\ntype Provider struct {\n\tname  string\n\tplans []servicesv1.ServicePlan\n}\n\nfunc (p Provider) Name() string {\n\treturn p.name\n}\n\nfunc (p Provider) Catalog(ctx kore.Context, provider *servicesv1.ServiceProvider) (kore.ServiceProviderCatalog, error) {\n\treturn kore.ServiceProviderCatalog{\n\t\tKinds: []servicesv1.ServiceKind{", "line_changes": {"deleted": [{"line_no": 2, "char_start": 4, "char_end": 50, "line": " * Copyright 2020 Appvia Ltd <info@appvia.io>\n"}], "added": [{"line_no": 3, "char_start": 4, "char_end": 43, "line": " * Copyright 2020 Appvia Ltd <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 4, "char_end": 50, "chars": " * Copyright 2020 Appvia Ltd <info@appvia.io>\n"}], "added": [{"char_start": 4, "char_end": 43, "chars": " * Copyright 2020 Appvia Ltd <<EMAIL>>\n"}]}}
{"func_name": 4923, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\tIndividual: &MerchantAccountPerson{\n\t\t\tFirstName:   \"First\",\n\t\t\tLastName:    \"Last\",\n\t\t\tEmail:       \"firstlast@example.com\",\n\t\t\tPhone:       \"0000000000\",\n\t\t\tDateOfBirth: \"1-1-1900\",\n\t\t\tAddress: &Address{\n\t\t\t\tStreetAddress:   \"222 W Merchandise Mart Plaza\",\n\t\t\t\tExtendedAddress: \"Suite 800\",\n\t\t\t\tLocality:        \"Chicago\",\n\t\t\t\tRegion:          \"IL\",\n\t\t\t\tPostalCode:      \"00000\",\n\t\t\t},\n\t\t},\n\t\tFundingOptions: &MerchantAccountFundingOptions{\n\t\t\tDestination: FUNDING_DEST_MOBILE_PHONE,\n\t\t\tMobilePhone: \"0000000000\",\n\t\t},\n\t}\n\n\tmerchantAccount, err := testGateway.MerchantAccount().Create(context.Background(), &acct)\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"Error creating test sub merchant account: %s\", err))\n\t}\n\n\treturn merchantAccount.Id\n}\n\nfunc init() {\n\tlogEnabled := flag.Bool(\"log\", false, \"enables logging\")\n\tflag.Parse()\n\n\tif *logEnabled {\n\t\ttestGateway.Logger = log.New(os.Stderr, \"\", 0)\n\t}\n}\n", "func_src_after": "\t\tIndividual: &MerchantAccountPerson{\n\t\t\tFirstName:   \"First\",\n\t\t\tLastName:    \"Last\",\n\t\t\tEmail:       \"<EMAIL>\",\n\t\t\tPhone:       \"0000000000\",\n\t\t\tDateOfBirth: \"1-1-1900\",\n\t\t\tAddress: &Address{\n\t\t\t\tStreetAddress:   \"222 W Merchandise Mart Plaza\",\n\t\t\t\tExtendedAddress: \"Suite 800\",\n\t\t\t\tLocality:        \"Chicago\",\n\t\t\t\tRegion:          \"IL\",\n\t\t\t\tPostalCode:      \"00000\",\n\t\t\t},\n\t\t},\n\t\tFundingOptions: &MerchantAccountFundingOptions{\n\t\t\tDestination: FUNDING_DEST_MOBILE_PHONE,\n\t\t\tMobilePhone: \"0000000000\",\n\t\t},\n\t}\n\n\tmerchantAccount, err := testGateway.MerchantAccount().Create(context.Background(), &acct)\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"Error creating test sub merchant account: %s\", err))\n\t}\n\n\treturn merchantAccount.Id\n}\n\nfunc init() {\n\tlogEnabled := flag.Bool(\"log\", false, \"enables logging\")\n\tflag.Parse()\n\n\tif *logEnabled {\n\t\ttestGateway.Logger = log.New(os.Stderr, \"\", 0)\n\t}\n}\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 87, "char_end": 128, "line": "\t\t\tEmail:       \"firstlast@example.com\",\n"}], "added": [{"line_no": 5, "char_start": 87, "char_end": 114, "line": "\t\t\tEmail:       \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 87, "char_end": 128, "chars": "\t\t\tEmail:       \"firstlast@example.com\",\n"}], "added": [{"char_start": 87, "char_end": 114, "chars": "\t\t\tEmail:       \"<EMAIL>\",\n"}]}}
{"func_name": 4924, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package utils\n\nimport (\n\t\"context\"\n\t\"github.com/opentracing/opentracing-go\"\n\t\"github.com/opentracing/opentracing-go/ext\"\n\t\"github.com/opentracing/opentracing-go/log\"\n\t\"github.com/uber/jaeger-client-go\"\n\tjaegerConfig \"github.com/uber/jaeger-client-go/config\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/grpclog\"\n\t\"google.golang.org/grpc/metadata\"\n\t\"io\"\n\t\"strings\"\n)\n\nfunc NewJaegerTracer(serviceName string) (tracer opentracing.Tracer, closer io.Closer, err error) {\n\tcfg := &jaegerConfig.Configuration{\n\t\tSampler: &jaegerConfig.SamplerConfig{\n\t\t\tType:  \"const\", //固定采样\n\t\t\tParam: 1,       //1=全采样、0=不采样\n\t\t},\n\n\t\tReporter: &jaegerConfig.ReporterConfig{\n\t\t\tLogSpans:           true,\n\t\t\tLocalAgentHostPort: \"127.0.0.1:6831\",\n\t\t},\n\n\t\tServiceName: serviceName,\n\t}\n\n\ttracer, closer, err = cfg.NewTracer(jaegerConfig.Logger(jaeger.StdLogger))\n\tif err != nil {\n\t\treturn\n\t}\n\topentracing.SetGlobalTracer(tracer)\n\treturn\n}\n\nvar (\n\tTracingComponentTag = opentracing.Tag{Key: string(ext.Component), Value: \"grpc\"}\n)\n\ntype MDReaderWriter struct {\n\tmetadata.MD\n}\n\nfunc (c MDReaderWriter) ForeachKey(handler func(key, val string) error) error {\n\tfor k, vs := range c.MD {\n\t\tfor _, v := range vs {", "func_src_after": "package utils\n\nimport (\n\t\"context\"\n\t\"github.com/opentracing/opentracing-go\"\n\t\"github.com/opentracing/opentracing-go/ext\"\n\t\"github.com/opentracing/opentracing-go/log\"\n\t\"github.com/uber/jaeger-client-go\"\n\tjaegerConfig \"github.com/uber/jaeger-client-go/config\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/grpclog\"\n\t\"google.golang.org/grpc/metadata\"\n\t\"io\"\n\t\"strings\"\n)\n\nfunc NewJaegerTracer(serviceName string) (tracer opentracing.Tracer, closer io.Closer, err error) {\n\tcfg := &jaegerConfig.Configuration{\n\t\tSampler: &jaegerConfig.SamplerConfig{\n\t\t\tType:  \"const\", //固定采样\n\t\t\tParam: 1,       //1=全采样、0=不采样\n\t\t},\n\n\t\tReporter: &jaegerConfig.ReporterConfig{\n\t\t\tLogSpans:           true,\n\t\t\tLocalAgentHostPort: \"<IP-Address>:6831\",\n\t\t},\n\n\t\tServiceName: serviceName,\n\t}\n\n\ttracer, closer, err = cfg.NewTracer(jaegerConfig.Logger(jaeger.StdLogger))\n\tif err != nil {\n\t\treturn\n\t}\n\topentracing.SetGlobalTracer(tracer)\n\treturn\n}\n\nvar (\n\tTracingComponentTag = opentracing.Tag{Key: string(ext.Component), Value: \"grpc\"}\n)\n\ntype MDReaderWriter struct {\n\tmetadata.MD\n}\n\nfunc (c MDReaderWriter) ForeachKey(handler func(key, val string) error) error {\n\tfor k, vs := range c.MD {\n\t\tfor _, v := range vs {", "line_changes": {"deleted": [{"line_no": 26, "char_start": 686, "char_end": 727, "line": "\t\t\tLocalAgentHostPort: \"127.0.0.1:6831\",\n"}], "added": [{"line_no": 27, "char_start": 686, "char_end": 730, "line": "\t\t\tLocalAgentHostPort: \"<IP-Address>:6831\",\n"}]}, "char_changes": {"deleted": [{"char_start": 686, "char_end": 727, "chars": "\t\t\tLocalAgentHostPort: \"127.0.0.1:6831\",\n"}], "added": [{"char_start": 686, "char_end": 730, "chars": "\t\t\tLocalAgentHostPort: \"<IP-Address>:6831\",\n"}]}}
{"func_name": 4943, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright © 2016-present Thomas Rabaix <thomas.rabaix@gmail.com>.\n//\n// Use of this source code is governed by an MIT-style\n// license that can be found in the LICENSE file.\n\npackage composer\n\nimport (\n\t\"crypto/sha256\"\n\t\"encoding/hex\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\tlog \"github.com/Sirupsen/logrus\"\n\t\"github.com/boltdb/bolt\"\n\t\"github.com/rande/goapp\"\n\t\"github.com/rande/pkgmirror\"\n\t\"github.com/rande/pkgmirror/mirror/git\"\n)\n\ntype ComposerConfig struct {\n\tSourceServer     string\n\tPublicServer     string\n\tBasePublicServer string\n\tCode             []byte\n\tPath             string\n}\n\nfunc NewComposerService() *ComposerService {\n\treturn &ComposerService{\n\t\tConfig: &ComposerConfig{\n\t\t\tSourceServer: \"https://packagist.org\",\n\t\t\tCode:         []byte(\"packagist\"),\n\t\t\tPath:         \"./data/composer\",\n\t\t},\n\t}\n}\n\ntype ComposerService struct {\n\tDB            *bolt.DB\n\tConfig        *ComposerConfig\n\tLogger        *log.Entry\n\tlock          bool\n\tStateChan     chan pkgmirror.State\n\tProvidersURL  string\n\tBoltCompacter *pkgmirror.BoltCompacter\n}\n", "func_src_after": "// Copyright © 2016-present Thomas Rabaix <<EMAIL>>.\n//\n// Use of this source code is governed by an MIT-style\n// license that can be found in the LICENSE file.\n\npackage composer\n\nimport (\n\t\"crypto/sha256\"\n\t\"encoding/hex\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\tlog \"github.com/Sirupsen/logrus\"\n\t\"github.com/boltdb/bolt\"\n\t\"github.com/rande/goapp\"\n\t\"github.com/rande/pkgmirror\"\n\t\"github.com/rande/pkgmirror/mirror/git\"\n)\n\ntype ComposerConfig struct {\n\tSourceServer     string\n\tPublicServer     string\n\tBasePublicServer string\n\tCode             []byte\n\tPath             string\n}\n\nfunc NewComposerService() *ComposerService {\n\treturn &ComposerService{\n\t\tConfig: &ComposerConfig{\n\t\t\tSourceServer: \"https://packagist.org\",\n\t\t\tCode:         []byte(\"packagist\"),\n\t\t\tPath:         \"./data/composer\",\n\t\t},\n\t}\n}\n\ntype ComposerService struct {\n\tDB            *bolt.DB\n\tConfig        *ComposerConfig\n\tLogger        *log.Entry\n\tlock          bool\n\tStateChan     chan pkgmirror.State\n\tProvidersURL  string\n\tBoltCompacter *pkgmirror.BoltCompacter\n}\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 69, "line": "// Copyright © 2016-present Thomas Rabaix <thomas.rabaix@gmail.com>.\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 53, "line": "// Copyright © 2016-present Thomas Rabaix <<EMAIL>>.\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 69, "chars": "// Copyright © 2016-present Thomas Rabaix <thomas.rabaix@gmail.com>.\n"}], "added": [{"char_start": 0, "char_end": 53, "chars": "// Copyright © 2016-present Thomas Rabaix <<EMAIL>>.\n"}]}}
{"func_name": 4946, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package addresses\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n\n\t\"github.com/btcsuite/btcd/chaincfg\"\n\t\"github.com/btcsuite/btcutil/hdkeychain\"\n)\n\nvar network = &chaincfg.RegressionNetParams\n\nfunc TestCreateAddressV2(t *testing.T) {\n\n\tconst (\n\t\taddressPath   = \"m/schema:1'/recovery:1'/external:1/0\"\n\t\toriginAddress = \"2NDeWrsJEwvxwVnvtWzPjhDC5B2LYkFuX2s\"\n\n\t\tencodedMuunKey  = \"tpubDBYMnFoxYLdMBZThTk4uARTe4kGPeEYWdKcaEzaUxt1cesetnxtTqmAxVkzDRou51emWytommyLWcF91SdF5KecA6Ja8oHK1FF7d5U2hMxX\"\n\t\tencodedUserKey  = \"tprv8dfM4H5fYJirMai5Er3LguicgUAyxmcSQbFub5ens16amX1e1HAFiW4SXnFVw9nu9FedFQqTPGTTjPEmgfvvXMKww3UcRpFbbC4DFjbCcTb\"\n\t\tbasePath        = \"m/schema:1'/recovery:1'\"\n\t\tv2EncodedScript = \"5221029fa5af7a34c142c1ce348b360abeb7de01df25b1d50129e58a67a6b846c9303b21025714f6b3670d4a38f5e2d6e8f239c9fc072543ce33dca54fcb4f4886a5cb87a652ae\"\n\t)\n\n\tbaseMuunKey := parseKey(encodedMuunKey)\n\tmuunKey := derive(baseMuunKey, basePath, addressPath)\n\n\tbaseUserKey := parseKey(encodedUserKey)\n\tuserKey := derive(baseUserKey, basePath, addressPath)\n\n\ttype args struct {\n\t\tuserKey *hdkeychain.ExtendedKey\n\t\tmuunKey *hdkeychain.ExtendedKey\n\t}\n\ttests := []struct {\n\t\tname    string\n\t\targs    args\n\t\twant    *WalletAddress\n\t\twantErr bool\n\t}{\n\t\t{name: \"gen address\",\n\t\t\targs: args{userKey: userKey, muunKey: muunKey},\n\t\t\twant: &WalletAddress{address: originAddress, derivationPath: addressPath, version: V2}},\n\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tgot, err := CreateAddressV2(tt.args.userKey, tt.args.muunKey, addressPath, network)\n\t\t\tif (err != nil) != tt.wantErr {\n\t\t\t\tt.Errorf(\"CreateAddressV2() error = %v, wantErr %v\", err, tt.wantErr)\n\t\t\t\treturn", "func_src_after": "package addresses\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n\n\t\"github.com/btcsuite/btcd/chaincfg\"\n\t\"github.com/btcsuite/btcutil/hdkeychain\"\n)\n\nvar network = &chaincfg.RegressionNetParams\n\nfunc TestCreateAddressV2(t *testing.T) {\n\n\tconst (\n\t\taddressPath   = \"m/schema:1'/recovery:1'/external:1/0\"\n\t\toriginAddress = \"2NDeWrsJEwvxwVnvtWzPjhDC5B2LYkFuX2s\"\n\n\t\tencodedMuunKey  = \"tpubDBYMnFoxYLdMBZThTk4uARTe4kGPeEYWdKcaEzaUxt1cesetnxtTqmAxVkzDRou51emWytommyLWcF91SdF5KecA6Ja8oHK1FF7d5U2hMxX\"\n\t\tencodedUserKey  = \"tprv8dfM4H5fYJirMai5Er3LguicgUAyxmcSQbFub5ens16amX1e1HAFiW4SXnFVw9nu9FedFQqTPGTTjPEmgfvvXMKww3UcRpFbbC4DFjbCcTb\"\n\t\tbasePath        = \"m/schema:1'/recovery:1'\"\n\t\tv2EncodedScript = \"5221029fa5af7a34c142c1ce348b360abeb7de01df25b1d50129e58a67a6b846c9303b21025714f6b3670d4a38f5e2d6e8f239c9fc072543ce33dca54fcb4f4886a5cb87a652ae\"\n\t)\n\n\tbaseMuunKey := parseKey(encodedMuunKey)\n\tmuunKey := derive(baseMuunKey, basePath, addressPath)\n\n\tbaseUserKey := parseKey(encodedUserKey)\n\tuserKey := derive(baseUserKey, basePath, addressPath)\n\n\ttype args struct {\n\t\tuserKey *hdkeychain.ExtendedKey\n\t\tmuunKey *hdkeychain.ExtendedKey\n\t}\n\ttests := []struct {\n\t\tname    string\n\t\targs    args\n\t\twant    *WalletAddress\n\t\twantErr bool\n\t}{\n\t\t{name: \"gen address\",\n\t\t\targs: args{userKey: userKey, muunKey: muunKey},\n\t\t\twant: &WalletAddress{address: originAddress, derivationPath: addressPath, version: V2}},\n\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tgot, err := CreateAddressV2(tt.args.userKey, tt.args.muunKey, addressPath, network)\n\t\t\tif (err != nil) != tt.wantErr {\n\t\t\t\tt.Errorf(\"CreateAddressV2() error = %v, wantErr %v\", err, tt.wantErr)\n\t\t\t\treturn", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4950, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright (c) 2017, Heroku Inc <metrics-feedback@heroku.com>.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n//\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n//\n// * The names of its contributors may not be used to endorse or promote\n//   products derived from this software without specific prior written\n//   permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\npackage prom\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"log\"\n\t\"net/http/httptest\"\n\t\"net/url\"\n\t\"testing\"\n\t\"time\"\n\n\tam \"github.com/heroku/agentmon\"\n\t\"github.com/prometheus/client_golang/prometheus\"\n\t\"github.com/prometheus/client_golang/prometheus/promhttp\"\n\n\tdto \"github.com/prometheus/client_model/go\"\n)\n\nfunc setup() (*url.URL, map[string]float64, func()) {\n\treg := prometheus.NewRegistry()", "func_src_after": "// Copyright (c) 2017, Heroku Inc <<EMAIL>>.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n//\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n//\n// * The names of its contributors may not be used to endorse or promote\n//   products derived from this software without specific prior written\n//   permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\npackage prom\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"log\"\n\t\"net/http/httptest\"\n\t\"net/url\"\n\t\"testing\"\n\t\"time\"\n\n\tam \"github.com/heroku/agentmon\"\n\t\"github.com/prometheus/client_golang/prometheus\"\n\t\"github.com/prometheus/client_golang/prometheus/promhttp\"\n\n\tdto \"github.com/prometheus/client_model/go\"\n)\n\nfunc setup() (*url.URL, map[string]float64, func()) {\n\treg := prometheus.NewRegistry()", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 65, "line": "// Copyright (c) 2017, Heroku Inc <metrics-feedback@heroku.com>.\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 45, "line": "// Copyright (c) 2017, Heroku Inc <<EMAIL>>.\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 65, "chars": "// Copyright (c) 2017, Heroku Inc <metrics-feedback@heroku.com>.\n"}], "added": [{"char_start": 0, "char_end": 45, "chars": "// Copyright (c) 2017, Heroku Inc <<EMAIL>>.\n"}]}}
{"func_name": 4951, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\tname    string\n\t\targs    args\n\t\twant    []QueryItem\n\t\twantErr bool\n\t}\n\n\t// This is the fake data being tested\n\tdata := []QueryItem{\n\t\tTestItem{\n\t\t\tname:     \"one\",\n\t\t\tip:       \"192.168.1.10\",\n\t\t\tdate:     \"2020-01-01\",\n\t\t\tttype:    \"test-name\",\n\t\t\tmetadata: StringMap{\"xyz\": \"xxx\"},\n\t\t},\n\t\tTestItem{\n\t\t\tname:     \"two\",\n\t\t\tip:       \"10.10.8.9\",\n\t\t\tdate:     \"2020-02-01\",\n\t\t\tttype:    \"test-name\",\n\t\t\tmetadata: StringMap{\"abc\": \"yyy\"},\n\t\t},\n\t\tTestItem{\n\t\t\tname:     \"three\",\n\t\t\tip:       \"10.150.20.1\",\n\t\t\tdate:     \"2020-02-03 10:00:00\",\n\t\t\tttype:    \"test-date\",\n\t\t\tmetadata: StringMap{\"abc\": \"-+!\", \"other\": \"aaa\"},\n\t\t},\n\t}\n\n\t// Injection function that replaces the resultConverterFunc and returns the test data\n\tvar getData = func(string, Results) ([]QueryItem, error) {\n\t\treturn data, nil\n\t}\n\n\t// Test cases that should succeed\n\ttestsSuccess := []testDef{\n\t\t// Empty filter: gets all items\n\t\t{\n\t\t\tname: \"empty-filter1\",\n\t\t\targs: args{\n\t\t\t\tqByM:      dummyQbyM,\n\t\t\t\tqWithM:    dummyQwithM,\n\t\t\t\tconverter: getData,\n\t\t\t\tcriteria: &FilterDef{\n\t\t\t\t\tFilters:              map[string]string{},\n\t\t\t\t\tMetadata:             []MetadataDef{},\n\t\t\t\t\tUseMetadataApiFilter: false,\n\t\t\t\t},", "func_src_after": "\t\tname    string\n\t\targs    args\n\t\twant    []QueryItem\n\t\twantErr bool\n\t}\n\n\t// This is the fake data being tested\n\tdata := []QueryItem{\n\t\tTestItem{\n\t\t\tname:     \"one\",\n\t\t\tip:       \"<IP-Address>\",\n\t\t\tdate:     \"2020-01-01\",\n\t\t\tttype:    \"test-name\",\n\t\t\tmetadata: StringMap{\"xyz\": \"xxx\"},\n\t\t},\n\t\tTestItem{\n\t\t\tname:     \"two\",\n\t\t\tip:       \"<IP-Address>\",\n\t\t\tdate:     \"2020-02-01\",\n\t\t\tttype:    \"test-name\",\n\t\t\tmetadata: StringMap{\"abc\": \"yyy\"},\n\t\t},\n\t\tTestItem{\n\t\t\tname:     \"three\",\n\t\t\tip:       \"<IP-Address>\",\n\t\t\tdate:     \"2020-02-03 10:00:00\",\n\t\t\tttype:    \"test-date\",\n\t\t\tmetadata: StringMap{\"abc\": \"-+!\", \"other\": \"aaa\"},\n\t\t},\n\t}\n\n\t// Injection function that replaces the resultConverterFunc and returns the test data\n\tvar getData = func(string, Results) ([]QueryItem, error) {\n\t\treturn data, nil\n\t}\n\n\t// Test cases that should succeed\n\ttestsSuccess := []testDef{\n\t\t// Empty filter: gets all items\n\t\t{\n\t\t\tname: \"empty-filter1\",\n\t\t\targs: args{\n\t\t\t\tqByM:      dummyQbyM,\n\t\t\t\tqWithM:    dummyQwithM,\n\t\t\t\tconverter: getData,\n\t\t\t\tcriteria: &FilterDef{\n\t\t\t\t\tFilters:              map[string]string{},\n\t\t\t\t\tMetadata:             []MetadataDef{},\n\t\t\t\t\tUseMetadataApiFilter: false,\n\t\t\t\t},", "line_changes": {"deleted": [{"line_no": 11, "char_start": 166, "char_end": 195, "line": "\t\t\tip:       \"192.168.1.10\",\n"}, {"line_no": 19, "char_start": 323, "char_end": 349, "line": "\t\t\tip:       \"10.10.8.9\",\n"}, {"line_no": 27, "char_start": 482, "char_end": 510, "line": "\t\t\tip:       \"10.150.20.1\",\n"}], "added": [{"line_no": 12, "char_start": 166, "char_end": 195, "line": "\t\t\tip:       \"<IP-Address>\",\n"}, {"line_no": 20, "char_start": 323, "char_end": 352, "line": "\t\t\tip:       \"<IP-Address>\",\n"}, {"line_no": 28, "char_start": 482, "char_end": 511, "line": "\t\t\tip:       \"<IP-Address>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 166, "char_end": 195, "chars": "\t\t\tip:       \"192.168.1.10\",\n"}, {"char_start": 323, "char_end": 349, "chars": "\t\t\tip:       \"10.10.8.9\",\n"}, {"char_start": 482, "char_end": 510, "chars": "\t\t\tip:       \"10.150.20.1\",\n"}], "added": [{"char_start": 166, "char_end": 195, "chars": "\t\t\tip:       \"<IP-Address>\",\n"}, {"char_start": 323, "char_end": 352, "chars": "\t\t\tip:       \"<IP-Address>\",\n"}, {"char_start": 482, "char_end": 511, "chars": "\t\t\tip:       \"<IP-Address>\",\n"}]}}
{"func_name": 4953, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t})\n\t}\n}\n\nfunc Test_getRepoURI(t *testing.T) {\n\ttype args struct {\n\t\turi   string\n\t\tuser  string\n\t\ttoken string\n\t}\n\ttests := []struct {\n\t\tname string\n\t\targs args\n\t\twant string\n\t}{\n\t\t{\n\t\t\tname: \"get url with https:// \",\n\t\t\targs: args{\n\t\t\t\turi:   \"https://my-repo.git\",\n\t\t\t\tuser:  \"user\",\n\t\t\t\ttoken: \"token\",\n\t\t\t},\n\t\t\twant: \"https://user:token@my-repo.git\",\n\t\t},\n\t\t{\n\t\t\tname: \"get url with https:// where user is already included in the url\",\n\t\t\targs: args{\n\t\t\t\turi:   \"https://user@my-repo.git\",\n\t\t\t\tuser:  \"user\",\n\t\t\t\ttoken: \"token\",\n\t\t\t},\n\t\t\twant: \"https://user:token@my-repo.git\",\n\t\t},\n\t\t{\n\t\t\tname: \"get url with http:// \",\n\t\t\targs: args{\n\t\t\t\turi:   \"http://my-repo.git\",\n\t\t\t\tuser:  \"user\",\n\t\t\t\ttoken: \"token\",\n\t\t\t},\n\t\t\twant: \"http://user:token@my-repo.git\",\n\t\t},\n\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tif got := getRepoURI(tt.args.uri, tt.args.user, tt.args.token); got != tt.want {\n\t\t\t\tt.Errorf(\"getRepoURI() = %v, want %v\", got, tt.want)\n\t\t\t}\n\t\t})\n\t}", "func_src_after": "\t\t})\n\t}\n}\n\nfunc Test_getRepoURI(t *testing.T) {\n\ttype args struct {\n\t\turi   string\n\t\tuser  string\n\t\ttoken string\n\t}\n\ttests := []struct {\n\t\tname string\n\t\targs args\n\t\twant string\n\t}{\n\t\t{\n\t\t\tname: \"get url with https:// \",\n\t\t\targs: args{\n\t\t\t\turi:   \"https://my-repo.git\",\n\t\t\t\tuser:  \"user\",\n\t\t\t\ttoken: \"token\",\n\t\t\t},\n\t\t\twant: \"https://user:token@my-repo.git\",\n\t\t},\n\t\t{\n\t\t\tname: \"get url with https:// where user is already included in the url\",\n\t\t\targs: args{\n\t\t\t\turi:   \"https://user@my-repo.git\",\n\t\t\t\tuser:  \"user\",\n\t\t\t\ttoken: \"token\",\n\t\t\t},\n\t\t\twant: \"https://user:token@my-repo.git\",\n\t\t},\n\t\t{\n\t\t\tname: \"get url with http:// \",\n\t\t\targs: args{\n\t\t\t\turi:   \"http://my-repo.git\",\n\t\t\t\tuser:  \"user\",\n\t\t\t\ttoken: \"token\",\n\t\t\t},\n\t\t\twant: \"http://user:token@my-repo.git\",\n\t\t},\n\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tif got := getRepoURI(tt.args.uri, tt.args.user, tt.args.token); got != tt.want {\n\t\t\t\tt.Errorf(\"getRepoURI() = %v, want %v\", got, tt.want)\n\t\t\t}\n\t\t})\n\t}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4958, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n// WithStart sets the start of the range.\nfunc (r *UInt32IncRange) WithStart(start uint32) *UInt32IncRange {\n\tr.pb.Start = start\n\treturn r\n}\n\n// WithStep sets the step between values in the range.\nfunc (r *UInt32IncRange) WithStep(step uint32) *UInt32IncRange {\n\tr.pb.Step = step\n\treturn r\n}\n\nfunc intRangeSingle(i uint32) *opb.UIntRange {\n\treturn &opb.UIntRange{Min: i, Max: i, Count: 1}\n}\n\nfunc addrRangeSingle(a string) *opb.AddressRange {\n\treturn &opb.AddressRange{Min: a, Max: a, Count: 1}\n}\n\nfunc newPortRange() *opb.UIntRange {\n\treturn &opb.UIntRange{Min: 1, Max: maxPort}\n}\n\nfunc newFlowLabelRange() *opb.UIntRange {\n\treturn &opb.UIntRange{Max: maxFlowLabel}\n}\n\nfunc newMACAddrRange() *opb.AddressRange {\n\treturn &opb.AddressRange{Min: \"00:00:00:00:00:01\", Max: \"FF:FF:FF:FF:FF:FE\"}\n}\n\nfunc newIPv4AddrRange() *opb.AddressRange {\n\treturn &opb.AddressRange{Min: \"0.0.0.1\", Max: \"255.255.255.254\"}\n}\n\nfunc newIPv6AddrRange() *opb.AddressRange {\n\treturn &opb.AddressRange{Min: \"::1\", Max: \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\"}\n}\n", "func_src_after": "\n// WithStart sets the start of the range.\nfunc (r *UInt32IncRange) WithStart(start uint32) *UInt32IncRange {\n\tr.pb.Start = start\n\treturn r\n}\n\n// WithStep sets the step between values in the range.\nfunc (r *UInt32IncRange) WithStep(step uint32) *UInt32IncRange {\n\tr.pb.Step = step\n\treturn r\n}\n\nfunc intRangeSingle(i uint32) *opb.UIntRange {\n\treturn &opb.UIntRange{Min: i, Max: i, Count: 1}\n}\n\nfunc addrRangeSingle(a string) *opb.AddressRange {\n\treturn &opb.AddressRange{Min: a, Max: a, Count: 1}\n}\n\nfunc newPortRange() *opb.UIntRange {\n\treturn &opb.UIntRange{Min: 1, Max: maxPort}\n}\n\nfunc newFlowLabelRange() *opb.UIntRange {\n\treturn &opb.UIntRange{Max: maxFlowLabel}\n}\n\nfunc newMACAddrRange() *opb.AddressRange {\n\treturn &opb.AddressRange{Min: \"00:00:00:00:00:01\", Max: \"FF:FF:FF:FF:FF:FE\"}\n}\n\nfunc newIPv4AddrRange() *opb.AddressRange {\n\treturn &opb.AddressRange{Min: \"<IP-Address>\", Max: \"<IP-Address>\"}\n}\n\nfunc newIPv6AddrRange() *opb.AddressRange {\n\treturn &opb.AddressRange{Min: \"<IP-Address>\", Max: \"<IP-Address>\"}\n}\n", "line_changes": {"deleted": [{"line_no": 35, "char_start": 839, "char_end": 905, "line": "\treturn &opb.AddressRange{Min: \"0.0.0.1\", Max: \"255.255.255.254\"}\n"}, {"line_no": 40, "char_start": 954, "char_end": 1040, "line": "\treturn &opb.AddressRange{Min: \"::1\", Max: \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\"}\n"}], "added": [{"line_no": 36, "char_start": 839, "char_end": 907, "line": "\treturn &opb.AddressRange{Min: \"<IP-Address>\", Max: \"<IP-Address>\"}\n"}, {"line_no": 41, "char_start": 954, "char_end": 1022, "line": "\treturn &opb.AddressRange{Min: \"<IP-Address>\", Max: \"<IP-Address>\"}\n"}]}, "char_changes": {"deleted": [{"char_start": 839, "char_end": 905, "chars": "\treturn &opb.AddressRange{Min: \"0.0.0.1\", Max: \"255.255.255.254\"}\n"}, {"char_start": 954, "char_end": 1040, "chars": "\treturn &opb.AddressRange{Min: \"::1\", Max: \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\"}\n"}], "added": [{"char_start": 839, "char_end": 907, "chars": "\treturn &opb.AddressRange{Min: \"<IP-Address>\", Max: \"<IP-Address>\"}\n"}, {"char_start": 954, "char_end": 1022, "chars": "\treturn &opb.AddressRange{Min: \"<IP-Address>\", Max: \"<IP-Address>\"}\n"}]}}
{"func_name": 4960, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2020 @thiinbit(thiinbit@gmail.com). All rights reserved.\n// Use of this source code is governed by an MIT-style\n// license that can be found in the LICENSE file\n\npackage idgen\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t_ \"github.com/go-sql-driver/mysql\"\n\t\"log\"\n)\n\nconst (\n\tdriverName     = \"mysql\"\n\tdataSourceName = \"root:root@/?parseTime=true&loc=Local\"\n)\n\n// dbError is an error wrapper type for internal use only.\n// Panics with errors are wrapped in dbError so that the top-level recover\n// can distinguish intentional panics from this package.\ntype dbError struct{ error }\n\nfunc handleRecover(de *dbError) {\n\tif r := recover(); r != nil {\n\t\tif dbErr, ok := r.(dbError); ok {\n\t\t\tde.error = dbErr.error\n\t\t} else {\n\t\t\tpanic(r)\n\t\t}\n\t}\n}\n\nfunc checkErr(err error) {\n\tif err != nil {\n\t\tpanic(dbError{err})\n\t}\n}\n\nfunc Exec(runSql string, args ...interface{}) (re sql.Result, err error) {\n\tdefer handleRecover(&dbError{err})\n\n\tdb, err := sql.Open(driverName, dataSourceName)\n\tcheckErr(err)\n\tdefer db.Close()\n\n\tstmt, err := db.Prepare(runSql)\n\n\tcheckErr(err)\n", "func_src_after": "// Copyright 2020 @thiinbit(<EMAIL>). All rights reserved.\n// Use of this source code is governed by an MIT-style\n// license that can be found in the LICENSE file\n\npackage idgen\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t_ \"github.com/go-sql-driver/mysql\"\n\t\"log\"\n)\n\nconst (\n\tdriverName     = \"mysql\"\n\tdataSourceName = \"root:root@/?parseTime=true&loc=Local\"\n)\n\n// dbError is an error wrapper type for internal use only.\n// Panics with errors are wrapped in dbError so that the top-level recover\n// can distinguish intentional panics from this package.\ntype dbError struct{ error }\n\nfunc handleRecover(de *dbError) {\n\tif r := recover(); r != nil {\n\t\tif dbErr, ok := r.(dbError); ok {\n\t\t\tde.error = dbErr.error\n\t\t} else {\n\t\t\tpanic(r)\n\t\t}\n\t}\n}\n\nfunc checkErr(err error) {\n\tif err != nil {\n\t\tpanic(dbError{err})\n\t}\n}\n\nfunc Exec(runSql string, args ...interface{}) (re sql.Result, err error) {\n\tdefer handleRecover(&dbError{err})\n\n\tdb, err := sql.Open(driverName, dataSourceName)\n\tcheckErr(err)\n\tdefer db.Close()\n\n\tstmt, err := db.Prepare(runSql)\n\n\tcheckErr(err)\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 70, "line": "// Copyright 2020 @thiinbit(thiinbit@gmail.com). All rights reserved.\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 59, "line": "// Copyright 2020 @thiinbit(<EMAIL>). All rights reserved.\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 70, "chars": "// Copyright 2020 @thiinbit(thiinbit@gmail.com). All rights reserved.\n"}], "added": [{"char_start": 0, "char_end": 59, "chars": "// Copyright 2020 @thiinbit(<EMAIL>). All rights reserved.\n"}]}}
{"func_name": 4965, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\ttt := tt\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tt.Parallel()\n\n\t\t\tassert := assert.New(t)\n\t\t\tassert.EqualValues(tt.expected, merge_v1(tt.input))\n\t\t\tassert.EqualValues(tt.expected, merge_v2(tt.input))\n\t\t\tassert.EqualValues(tt.expected, merge_v3(tt.input))\n\t\t})\n\t}\n}\n\nvar data = map[string]interface{}{\n\t\"instances\": []User{\n\t\tUser{1, \"test01\", \"test01@example.com\"},\n\t\tUser{2, \"test02\", \"test02@example.com\"},\n\t\tUser{3, \"test03\", \"test03@example.com\"},\n\t\tUser{4, \"test04\", \"test04@example.com\"},\n\t\tUser{5, \"test05\", \"test05@example.com\"},\n\t\tUser{6, \"test06\", \"test06@example.com\"},\n\t\tUser{7, \"test07\", \"test07@example.com\"},\n\t\tUser{8, \"test08\", \"test08@example.com\"},\n\t\tUser{9, \"test09\", \"test09@example.com\"},\n\t\tUser{10, \"test10\", \"test10@example.com\"},\n\t\tUser{11, \"test11\", \"test11@example.com\"},\n\t\tUser{12, \"test12\", \"test12@example.com\"},\n\t\tUser{13, \"test13\", \"test13@example.com\"},\n\t\tUser{14, \"test14\", \"test14@example.com\"},\n\t\tUser{15, \"test15\", \"test15@example.com\"},\n\t\tUser{16, \"test16\", \"test16@example.com\"},\n\t\tUser{17, \"test17\", \"test17@example.com\"},\n\t\tUser{18, \"test18\", \"test18@example.com\"},\n\t\tUser{19, \"test19\", \"test19@example.com\"},\n\t\tUser{20, \"test20\", \"test20@example.com\"},\n\t\tUser{21, \"test21\", \"test21@example.com\"},\n\t\tUser{22, \"test22\", \"test22@example.com\"},\n\t\tUser{23, \"test23\", \"test23@example.com\"},\n\t\tUser{24, \"test24\", \"test24@example.com\"},\n\t\tUser{25, \"test25\", \"test25@example.com\"},\n\t\tUser{26, \"test26\", \"test26@example.com\"},\n\t\tUser{27, \"test27\", \"test27@example.com\"},\n\t\tUser{28, \"test28\", \"test28@example.com\"},\n\t\tUser{29, \"test29\", \"test29@example.com\"},", "func_src_after": "\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\ttt := tt\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tt.Parallel()\n\n\t\t\tassert := assert.New(t)\n\t\t\tassert.EqualValues(tt.expected, merge_v1(tt.input))\n\t\t\tassert.EqualValues(tt.expected, merge_v2(tt.input))\n\t\t\tassert.EqualValues(tt.expected, merge_v3(tt.input))\n\t\t})\n\t}\n}\n\nvar data = map[string]interface{}{\n\t\"instances\": []User{\n\t\tUser{1, \"test01\", \"<EMAIL>\"},\n\t\tUser{2, \"test02\", \"<EMAIL>\"},\n\t\tUser{3, \"test03\", \"<EMAIL>\"},\n\t\tUser{4, \"test04\", \"<EMAIL>\"},\n\t\tUser{5, \"test05\", \"<EMAIL>\"},\n\t\tUser{6, \"test06\", \"<EMAIL>\"},\n\t\tUser{7, \"test07\", \"<EMAIL>\"},\n\t\tUser{8, \"test08\", \"<EMAIL>\"},\n\t\tUser{9, \"test09\", \"<EMAIL>\"},\n\t\tUser{10, \"test10\", \"<EMAIL>\"},\n\t\tUser{11, \"test11\", \"<EMAIL>\"},\n\t\tUser{12, \"test12\", \"<EMAIL>\"},\n\t\tUser{13, \"test13\", \"<EMAIL>\"},\n\t\tUser{14, \"test14\", \"<EMAIL>\"},\n\t\tUser{15, \"test15\", \"<EMAIL>\"},\n\t\tUser{16, \"test16\", \"<EMAIL>\"},\n\t\tUser{17, \"test17\", \"<EMAIL>\"},\n\t\tUser{18, \"test18\", \"<EMAIL>\"},\n\t\tUser{19, \"test19\", \"<EMAIL>\"},\n\t\tUser{20, \"test20\", \"<EMAIL>\"},\n\t\tUser{21, \"test21\", \"<EMAIL>\"},\n\t\tUser{22, \"test22\", \"<EMAIL>\"},\n\t\tUser{23, \"test23\", \"<EMAIL>\"},\n\t\tUser{24, \"test24\", \"<EMAIL>\"},\n\t\tUser{25, \"test25\", \"<EMAIL>\"},\n\t\tUser{26, \"test26\", \"<EMAIL>\"},\n\t\tUser{27, \"test27\", \"<EMAIL>\"},\n\t\tUser{28, \"test28\", \"<EMAIL>\"},\n\t\tUser{29, \"test29\", \"<EMAIL>\"},", "line_changes": {"deleted": [{"line_no": 22, "char_start": 384, "char_end": 427, "line": "\t\tUser{1, \"test01\", \"test01@example.com\"},\n"}, {"line_no": 23, "char_start": 384, "char_end": 427, "line": "\t\tUser{2, \"test02\", \"test02@example.com\"},\n"}, {"line_no": 24, "char_start": 384, "char_end": 427, "line": "\t\tUser{3, \"test03\", \"test03@example.com\"},\n"}, {"line_no": 25, "char_start": 384, "char_end": 427, "line": "\t\tUser{4, \"test04\", \"test04@example.com\"},\n"}, {"line_no": 26, "char_start": 384, "char_end": 427, "line": "\t\tUser{5, \"test05\", \"test05@example.com\"},\n"}, {"line_no": 27, "char_start": 384, "char_end": 427, "line": "\t\tUser{6, \"test06\", \"test06@example.com\"},\n"}, {"line_no": 28, "char_start": 384, "char_end": 427, "line": "\t\tUser{7, \"test07\", \"test07@example.com\"},\n"}, {"line_no": 29, "char_start": 384, "char_end": 427, "line": "\t\tUser{8, \"test08\", \"test08@example.com\"},\n"}, {"line_no": 30, "char_start": 384, "char_end": 427, "line": "\t\tUser{9, \"test09\", \"test09@example.com\"},\n"}, {"line_no": 31, "char_start": 384, "char_end": 428, "line": "\t\tUser{10, \"test10\", \"test10@example.com\"},\n"}, {"line_no": 32, "char_start": 384, "char_end": 428, "line": "\t\tUser{11, \"test11\", \"test11@example.com\"},\n"}, {"line_no": 33, "char_start": 384, "char_end": 428, "line": "\t\tUser{12, \"test12\", \"test12@example.com\"},\n"}, {"line_no": 34, "char_start": 384, "char_end": 428, "line": "\t\tUser{13, \"test13\", \"test13@example.com\"},\n"}, {"line_no": 35, "char_start": 384, "char_end": 428, "line": "\t\tUser{14, \"test14\", \"test14@example.com\"},\n"}, {"line_no": 36, "char_start": 384, "char_end": 428, "line": "\t\tUser{15, \"test15\", \"test15@example.com\"},\n"}, {"line_no": 37, "char_start": 384, "char_end": 428, "line": "\t\tUser{16, \"test16\", \"test16@example.com\"},\n"}, {"line_no": 38, "char_start": 384, "char_end": 428, "line": "\t\tUser{17, \"test17\", \"test17@example.com\"},\n"}, {"line_no": 39, "char_start": 384, "char_end": 428, "line": "\t\tUser{18, \"test18\", \"test18@example.com\"},\n"}, {"line_no": 40, "char_start": 384, "char_end": 428, "line": "\t\tUser{19, \"test19\", \"test19@example.com\"},\n"}, {"line_no": 41, "char_start": 384, "char_end": 428, "line": "\t\tUser{20, \"test20\", \"test20@example.com\"},\n"}, {"line_no": 42, "char_start": 384, "char_end": 428, "line": "\t\tUser{21, \"test21\", \"test21@example.com\"},\n"}, {"line_no": 43, "char_start": 384, "char_end": 428, "line": "\t\tUser{22, \"test22\", \"test22@example.com\"},\n"}, {"line_no": 44, "char_start": 384, "char_end": 428, "line": "\t\tUser{23, \"test23\", \"test23@example.com\"},\n"}, {"line_no": 45, "char_start": 384, "char_end": 428, "line": "\t\tUser{24, \"test24\", \"test24@example.com\"},\n"}, {"line_no": 46, "char_start": 384, "char_end": 428, "line": "\t\tUser{25, \"test25\", \"test25@example.com\"},\n"}, {"line_no": 47, "char_start": 384, "char_end": 428, "line": "\t\tUser{26, \"test26\", \"test26@example.com\"},\n"}, {"line_no": 48, "char_start": 384, "char_end": 428, "line": "\t\tUser{27, \"test27\", \"test27@example.com\"},\n"}, {"line_no": 49, "char_start": 384, "char_end": 428, "line": "\t\tUser{28, \"test28\", \"test28@example.com\"},\n"}, {"line_no": 50, "char_start": 384, "char_end": 427, "line": "\t\tUser{29, \"test29\", \"test29@example.com\"},"}], "added": [{"line_no": 51, "char_start": 384, "char_end": 416, "line": "\t\tUser{1, \"test01\", \"<EMAIL>\"},\n"}, {"line_no": 52, "char_start": 416, "char_end": 448, "line": "\t\tUser{2, \"test02\", \"<EMAIL>\"},\n"}, {"line_no": 53, "char_start": 448, "char_end": 480, "line": "\t\tUser{3, \"test03\", \"<EMAIL>\"},\n"}, {"line_no": 54, "char_start": 480, "char_end": 512, "line": "\t\tUser{4, \"test04\", \"<EMAIL>\"},\n"}, {"line_no": 55, "char_start": 512, "char_end": 544, "line": "\t\tUser{5, \"test05\", \"<EMAIL>\"},\n"}, {"line_no": 56, "char_start": 544, "char_end": 576, "line": "\t\tUser{6, \"test06\", \"<EMAIL>\"},\n"}, {"line_no": 57, "char_start": 576, "char_end": 608, "line": "\t\tUser{7, \"test07\", \"<EMAIL>\"},\n"}, {"line_no": 58, "char_start": 608, "char_end": 640, "line": "\t\tUser{8, \"test08\", \"<EMAIL>\"},\n"}, {"line_no": 59, "char_start": 640, "char_end": 672, "line": "\t\tUser{9, \"test09\", \"<EMAIL>\"},\n"}, {"line_no": 60, "char_start": 672, "char_end": 705, "line": "\t\tUser{10, \"test10\", \"<EMAIL>\"},\n"}, {"line_no": 61, "char_start": 705, "char_end": 738, "line": "\t\tUser{11, \"test11\", \"<EMAIL>\"},\n"}, {"line_no": 62, "char_start": 738, "char_end": 771, "line": "\t\tUser{12, \"test12\", \"<EMAIL>\"},\n"}, {"line_no": 63, "char_start": 771, "char_end": 804, "line": "\t\tUser{13, \"test13\", \"<EMAIL>\"},\n"}, {"line_no": 64, "char_start": 804, "char_end": 837, "line": "\t\tUser{14, \"test14\", \"<EMAIL>\"},\n"}, {"line_no": 65, "char_start": 837, "char_end": 870, "line": "\t\tUser{15, \"test15\", \"<EMAIL>\"},\n"}, {"line_no": 66, "char_start": 870, "char_end": 903, "line": "\t\tUser{16, \"test16\", \"<EMAIL>\"},\n"}, {"line_no": 67, "char_start": 903, "char_end": 936, "line": "\t\tUser{17, \"test17\", \"<EMAIL>\"},\n"}, {"line_no": 68, "char_start": 936, "char_end": 969, "line": "\t\tUser{18, \"test18\", \"<EMAIL>\"},\n"}, {"line_no": 69, "char_start": 969, "char_end": 1002, "line": "\t\tUser{19, \"test19\", \"<EMAIL>\"},\n"}, {"line_no": 70, "char_start": 1002, "char_end": 1035, "line": "\t\tUser{20, \"test20\", \"<EMAIL>\"},\n"}, {"line_no": 71, "char_start": 1035, "char_end": 1068, "line": "\t\tUser{21, \"test21\", \"<EMAIL>\"},\n"}, {"line_no": 72, "char_start": 1068, "char_end": 1101, "line": "\t\tUser{22, \"test22\", \"<EMAIL>\"},\n"}, {"line_no": 73, "char_start": 1101, "char_end": 1134, "line": "\t\tUser{23, \"test23\", \"<EMAIL>\"},\n"}, {"line_no": 74, "char_start": 1134, "char_end": 1167, "line": "\t\tUser{24, \"test24\", \"<EMAIL>\"},\n"}, {"line_no": 75, "char_start": 1167, "char_end": 1200, "line": "\t\tUser{25, \"test25\", \"<EMAIL>\"},\n"}, {"line_no": 76, "char_start": 1200, "char_end": 1233, "line": "\t\tUser{26, \"test26\", \"<EMAIL>\"},\n"}, {"line_no": 77, "char_start": 1233, "char_end": 1266, "line": "\t\tUser{27, \"test27\", \"<EMAIL>\"},\n"}, {"line_no": 78, "char_start": 1266, "char_end": 1299, "line": "\t\tUser{28, \"test28\", \"<EMAIL>\"},\n"}, {"line_no": 79, "char_start": 1299, "char_end": 1331, "line": "\t\tUser{29, \"test29\", \"<EMAIL>\"},"}]}, "char_changes": {"deleted": [{"char_start": 384, "char_end": 427, "chars": "\t\tUser{1, \"test01\", \"test01@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{2, \"test02\", \"test02@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{3, \"test03\", \"test03@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{4, \"test04\", \"test04@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{5, \"test05\", \"test05@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{6, \"test06\", \"test06@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{7, \"test07\", \"test07@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{8, \"test08\", \"test08@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{9, \"test09\", \"test09@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{10, \"test10\", \"test10@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{11, \"test11\", \"test11@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{12, \"test12\", \"test12@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{13, \"test13\", \"test13@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{14, \"test14\", \"test14@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{15, \"test15\", \"test15@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{16, \"test16\", \"test16@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{17, \"test17\", \"test17@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{18, \"test18\", \"test18@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{19, \"test19\", \"test19@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{20, \"test20\", \"test20@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{21, \"test21\", \"test21@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{22, \"test22\", \"test22@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{23, \"test23\", \"test23@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{24, \"test24\", \"test24@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{25, \"test25\", \"test25@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{26, \"test26\", \"test26@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{27, \"test27\", \"test27@example.com\"},\n"}, {"char_start": 384, "char_end": 428, "chars": "\t\tUser{28, \"test28\", \"test28@example.com\"},\n"}, {"char_start": 384, "char_end": 427, "chars": "\t\tUser{29, \"test29\", \"test29@example.com\"},"}], "added": [{"char_start": 384, "char_end": 416, "chars": "\t\tUser{1, \"test01\", \"<EMAIL>\"},\n"}, {"char_start": 416, "char_end": 448, "chars": "\t\tUser{2, \"test02\", \"<EMAIL>\"},\n"}, {"char_start": 448, "char_end": 480, "chars": "\t\tUser{3, \"test03\", \"<EMAIL>\"},\n"}, {"char_start": 480, "char_end": 512, "chars": "\t\tUser{4, \"test04\", \"<EMAIL>\"},\n"}, {"char_start": 512, "char_end": 544, "chars": "\t\tUser{5, \"test05\", \"<EMAIL>\"},\n"}, {"char_start": 544, "char_end": 576, "chars": "\t\tUser{6, \"test06\", \"<EMAIL>\"},\n"}, {"char_start": 576, "char_end": 608, "chars": "\t\tUser{7, \"test07\", \"<EMAIL>\"},\n"}, {"char_start": 608, "char_end": 640, "chars": "\t\tUser{8, \"test08\", \"<EMAIL>\"},\n"}, {"char_start": 640, "char_end": 672, "chars": "\t\tUser{9, \"test09\", \"<EMAIL>\"},\n"}, {"char_start": 672, "char_end": 705, "chars": "\t\tUser{10, \"test10\", \"<EMAIL>\"},\n"}, {"char_start": 705, "char_end": 738, "chars": "\t\tUser{11, \"test11\", \"<EMAIL>\"},\n"}, {"char_start": 738, "char_end": 771, "chars": "\t\tUser{12, \"test12\", \"<EMAIL>\"},\n"}, {"char_start": 771, "char_end": 804, "chars": "\t\tUser{13, \"test13\", \"<EMAIL>\"},\n"}, {"char_start": 804, "char_end": 837, "chars": "\t\tUser{14, \"test14\", \"<EMAIL>\"},\n"}, {"char_start": 837, "char_end": 870, "chars": "\t\tUser{15, \"test15\", \"<EMAIL>\"},\n"}, {"char_start": 870, "char_end": 903, "chars": "\t\tUser{16, \"test16\", \"<EMAIL>\"},\n"}, {"char_start": 903, "char_end": 936, "chars": "\t\tUser{17, \"test17\", \"<EMAIL>\"},\n"}, {"char_start": 936, "char_end": 969, "chars": "\t\tUser{18, \"test18\", \"<EMAIL>\"},\n"}, {"char_start": 969, "char_end": 1002, "chars": "\t\tUser{19, \"test19\", \"<EMAIL>\"},\n"}, {"char_start": 1002, "char_end": 1035, "chars": "\t\tUser{20, \"test20\", \"<EMAIL>\"},\n"}, {"char_start": 1035, "char_end": 1068, "chars": "\t\tUser{21, \"test21\", \"<EMAIL>\"},\n"}, {"char_start": 1068, "char_end": 1101, "chars": "\t\tUser{22, \"test22\", \"<EMAIL>\"},\n"}, {"char_start": 1101, "char_end": 1134, "chars": "\t\tUser{23, \"test23\", \"<EMAIL>\"},\n"}, {"char_start": 1134, "char_end": 1167, "chars": "\t\tUser{24, \"test24\", \"<EMAIL>\"},\n"}, {"char_start": 1167, "char_end": 1200, "chars": "\t\tUser{25, \"test25\", \"<EMAIL>\"},\n"}, {"char_start": 1200, "char_end": 1233, "chars": "\t\tUser{26, \"test26\", \"<EMAIL>\"},\n"}, {"char_start": 1233, "char_end": 1266, "chars": "\t\tUser{27, \"test27\", \"<EMAIL>\"},\n"}, {"char_start": 1266, "char_end": 1299, "chars": "\t\tUser{28, \"test28\", \"<EMAIL>\"},\n"}, {"char_start": 1299, "char_end": 1331, "chars": "\t\tUser{29, \"test29\", \"<EMAIL>\"},"}]}}
{"func_name": 4966, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\tUser{30, \"test30\", \"test30@example.com\"},\n\t\tUser{31, \"test31\", \"test31@example.com\"},\n\t\tUser{32, \"test32\", \"test32@example.com\"},\n\t\tUser{33, \"test33\", \"test33@example.com\"},\n\t\tUser{34, \"test34\", \"test34@example.com\"},\n\t\tUser{35, \"test35\", \"test35@example.com\"},\n\t\tUser{36, \"test36\", \"test36@example.com\"},\n\t\tUser{37, \"test37\", \"test37@example.com\"},\n\t\tUser{38, \"test38\", \"test38@example.com\"},\n\t\tUser{39, \"test39\", \"test39@example.com\"},\n\t\tUser{40, \"test40\", \"test40@example.com\"},\n\t\tUser{41, \"test41\", \"test41@example.com\"},\n\t\tUser{42, \"test42\", \"test42@example.com\"},\n\t\tUser{43, \"test43\", \"test43@example.com\"},\n\t\tUser{44, \"test44\", \"test44@example.com\"},\n\t\tUser{45, \"test45\", \"test45@example.com\"},\n\t\tUser{46, \"test46\", \"test46@example.com\"},\n\t\tUser{47, \"test47\", \"test47@example.com\"},\n\t\tUser{48, \"test48\", \"test48@example.com\"},\n\t\tUser{49, \"test49\", \"test49@example.com\"},\n\t\tUser{50, \"test50\", \"test50@example.com\"},\n\t},\n}\n\nvar result interface{}\n\nfunc Benchmark_merge(b *testing.B) {\n\tb.Run(\"merge_v1\", func(b *testing.B) {\n\t\tfor i := 0; i < b.N; i++ {\n\t\t\tresult = merge_v1(data)\n\t\t}\n\t})\n\n\tb.Run(\"merge_v2\", func(b *testing.B) {\n\t\tfor i := 0; i < b.N; i++ {\n\t\t\tresult = merge_v2(data)\n\t\t}\n\t})\n\n\tb.Run(\"merge_v3\", func(b *testing.B) {\n\t\tfor i := 0; i < b.N; i++ {\n\t\t\tresult = merge_v3(data)\n\t\t}\n\t})\n}\n", "func_src_after": "\t\tUser{30, \"test30\", \"<EMAIL>\"},\n\t\tUser{31, \"test31\", \"<EMAIL>\"},\n\t\tUser{32, \"test32\", \"<EMAIL>\"},\n\t\tUser{33, \"test33\", \"<EMAIL>\"},\n\t\tUser{34, \"test34\", \"<EMAIL>\"},\n\t\tUser{35, \"test35\", \"<EMAIL>\"},\n\t\tUser{36, \"test36\", \"<EMAIL>\"},\n\t\tUser{37, \"test37\", \"<EMAIL>\"},\n\t\tUser{38, \"test38\", \"<EMAIL>\"},\n\t\tUser{39, \"test39\", \"<EMAIL>\"},\n\t\tUser{40, \"test40\", \"<EMAIL>\"},\n\t\tUser{41, \"test41\", \"<EMAIL>\"},\n\t\tUser{42, \"test42\", \"<EMAIL>\"},\n\t\tUser{43, \"test43\", \"<EMAIL>\"},\n\t\tUser{44, \"test44\", \"<EMAIL>\"},\n\t\tUser{45, \"test45\", \"<EMAIL>\"},\n\t\tUser{46, \"test46\", \"<EMAIL>\"},\n\t\tUser{47, \"test47\", \"<EMAIL>\"},\n\t\tUser{48, \"test48\", \"<EMAIL>\"},\n\t\tUser{49, \"test49\", \"<EMAIL>\"},\n\t\tUser{50, \"test50\", \"<EMAIL>\"},\n\t},\n}\n\nvar result interface{}\n\nfunc Benchmark_merge(b *testing.B) {\n\tb.Run(\"merge_v1\", func(b *testing.B) {\n\t\tfor i := 0; i < b.N; i++ {\n\t\t\tresult = merge_v1(data)\n\t\t}\n\t})\n\n\tb.Run(\"merge_v2\", func(b *testing.B) {\n\t\tfor i := 0; i < b.N; i++ {\n\t\t\tresult = merge_v2(data)\n\t\t}\n\t})\n\n\tb.Run(\"merge_v3\", func(b *testing.B) {\n\t\tfor i := 0; i < b.N; i++ {\n\t\t\tresult = merge_v3(data)\n\t\t}\n\t})\n}\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 44, "line": "\t\tUser{30, \"test30\", \"test30@example.com\"},\n"}, {"line_no": 2, "char_start": 0, "char_end": 44, "line": "\t\tUser{31, \"test31\", \"test31@example.com\"},\n"}, {"line_no": 3, "char_start": 0, "char_end": 44, "line": "\t\tUser{32, \"test32\", \"test32@example.com\"},\n"}, {"line_no": 4, "char_start": 0, "char_end": 44, "line": "\t\tUser{33, \"test33\", \"test33@example.com\"},\n"}, {"line_no": 5, "char_start": 0, "char_end": 44, "line": "\t\tUser{34, \"test34\", \"test34@example.com\"},\n"}, {"line_no": 6, "char_start": 0, "char_end": 44, "line": "\t\tUser{35, \"test35\", \"test35@example.com\"},\n"}, {"line_no": 7, "char_start": 0, "char_end": 44, "line": "\t\tUser{36, \"test36\", \"test36@example.com\"},\n"}, {"line_no": 8, "char_start": 0, "char_end": 44, "line": "\t\tUser{37, \"test37\", \"test37@example.com\"},\n"}, {"line_no": 9, "char_start": 0, "char_end": 44, "line": "\t\tUser{38, \"test38\", \"test38@example.com\"},\n"}, {"line_no": 10, "char_start": 0, "char_end": 44, "line": "\t\tUser{39, \"test39\", \"test39@example.com\"},\n"}, {"line_no": 11, "char_start": 0, "char_end": 44, "line": "\t\tUser{40, \"test40\", \"test40@example.com\"},\n"}, {"line_no": 12, "char_start": 0, "char_end": 44, "line": "\t\tUser{41, \"test41\", \"test41@example.com\"},\n"}, {"line_no": 13, "char_start": 0, "char_end": 44, "line": "\t\tUser{42, \"test42\", \"test42@example.com\"},\n"}, {"line_no": 14, "char_start": 0, "char_end": 44, "line": "\t\tUser{43, \"test43\", \"test43@example.com\"},\n"}, {"line_no": 15, "char_start": 0, "char_end": 44, "line": "\t\tUser{44, \"test44\", \"test44@example.com\"},\n"}, {"line_no": 16, "char_start": 0, "char_end": 44, "line": "\t\tUser{45, \"test45\", \"test45@example.com\"},\n"}, {"line_no": 17, "char_start": 0, "char_end": 44, "line": "\t\tUser{46, \"test46\", \"test46@example.com\"},\n"}, {"line_no": 18, "char_start": 0, "char_end": 44, "line": "\t\tUser{47, \"test47\", \"test47@example.com\"},\n"}, {"line_no": 19, "char_start": 0, "char_end": 44, "line": "\t\tUser{48, \"test48\", \"test48@example.com\"},\n"}, {"line_no": 20, "char_start": 0, "char_end": 44, "line": "\t\tUser{49, \"test49\", \"test49@example.com\"},\n"}, {"line_no": 21, "char_start": 0, "char_end": 44, "line": "\t\tUser{50, \"test50\", \"test50@example.com\"},\n"}], "added": [{"line_no": 22, "char_start": 0, "char_end": 33, "line": "\t\tUser{30, \"test30\", \"<EMAIL>\"},\n"}, {"line_no": 23, "char_start": 33, "char_end": 66, "line": "\t\tUser{31, \"test31\", \"<EMAIL>\"},\n"}, {"line_no": 24, "char_start": 66, "char_end": 99, "line": "\t\tUser{32, \"test32\", \"<EMAIL>\"},\n"}, {"line_no": 25, "char_start": 99, "char_end": 132, "line": "\t\tUser{33, \"test33\", \"<EMAIL>\"},\n"}, {"line_no": 26, "char_start": 132, "char_end": 165, "line": "\t\tUser{34, \"test34\", \"<EMAIL>\"},\n"}, {"line_no": 27, "char_start": 165, "char_end": 198, "line": "\t\tUser{35, \"test35\", \"<EMAIL>\"},\n"}, {"line_no": 28, "char_start": 198, "char_end": 231, "line": "\t\tUser{36, \"test36\", \"<EMAIL>\"},\n"}, {"line_no": 29, "char_start": 231, "char_end": 264, "line": "\t\tUser{37, \"test37\", \"<EMAIL>\"},\n"}, {"line_no": 30, "char_start": 264, "char_end": 297, "line": "\t\tUser{38, \"test38\", \"<EMAIL>\"},\n"}, {"line_no": 31, "char_start": 297, "char_end": 330, "line": "\t\tUser{39, \"test39\", \"<EMAIL>\"},\n"}, {"line_no": 32, "char_start": 330, "char_end": 363, "line": "\t\tUser{40, \"test40\", \"<EMAIL>\"},\n"}, {"line_no": 33, "char_start": 363, "char_end": 396, "line": "\t\tUser{41, \"test41\", \"<EMAIL>\"},\n"}, {"line_no": 34, "char_start": 396, "char_end": 429, "line": "\t\tUser{42, \"test42\", \"<EMAIL>\"},\n"}, {"line_no": 35, "char_start": 429, "char_end": 462, "line": "\t\tUser{43, \"test43\", \"<EMAIL>\"},\n"}, {"line_no": 36, "char_start": 462, "char_end": 495, "line": "\t\tUser{44, \"test44\", \"<EMAIL>\"},\n"}, {"line_no": 37, "char_start": 495, "char_end": 528, "line": "\t\tUser{45, \"test45\", \"<EMAIL>\"},\n"}, {"line_no": 38, "char_start": 528, "char_end": 561, "line": "\t\tUser{46, \"test46\", \"<EMAIL>\"},\n"}, {"line_no": 39, "char_start": 561, "char_end": 594, "line": "\t\tUser{47, \"test47\", \"<EMAIL>\"},\n"}, {"line_no": 40, "char_start": 594, "char_end": 627, "line": "\t\tUser{48, \"test48\", \"<EMAIL>\"},\n"}, {"line_no": 41, "char_start": 627, "char_end": 660, "line": "\t\tUser{49, \"test49\", \"<EMAIL>\"},\n"}, {"line_no": 42, "char_start": 660, "char_end": 693, "line": "\t\tUser{50, \"test50\", \"<EMAIL>\"},\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 44, "chars": "\t\tUser{30, \"test30\", \"test30@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{31, \"test31\", \"test31@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{32, \"test32\", \"test32@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{33, \"test33\", \"test33@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{34, \"test34\", \"test34@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{35, \"test35\", \"test35@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{36, \"test36\", \"test36@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{37, \"test37\", \"test37@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{38, \"test38\", \"test38@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{39, \"test39\", \"test39@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{40, \"test40\", \"test40@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{41, \"test41\", \"test41@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{42, \"test42\", \"test42@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{43, \"test43\", \"test43@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{44, \"test44\", \"test44@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{45, \"test45\", \"test45@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{46, \"test46\", \"test46@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{47, \"test47\", \"test47@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{48, \"test48\", \"test48@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{49, \"test49\", \"test49@example.com\"},\n"}, {"char_start": 0, "char_end": 44, "chars": "\t\tUser{50, \"test50\", \"test50@example.com\"},\n"}], "added": [{"char_start": 0, "char_end": 33, "chars": "\t\tUser{30, \"test30\", \"<EMAIL>\"},\n"}, {"char_start": 33, "char_end": 66, "chars": "\t\tUser{31, \"test31\", \"<EMAIL>\"},\n"}, {"char_start": 66, "char_end": 99, "chars": "\t\tUser{32, \"test32\", \"<EMAIL>\"},\n"}, {"char_start": 99, "char_end": 132, "chars": "\t\tUser{33, \"test33\", \"<EMAIL>\"},\n"}, {"char_start": 132, "char_end": 165, "chars": "\t\tUser{34, \"test34\", \"<EMAIL>\"},\n"}, {"char_start": 165, "char_end": 198, "chars": "\t\tUser{35, \"test35\", \"<EMAIL>\"},\n"}, {"char_start": 198, "char_end": 231, "chars": "\t\tUser{36, \"test36\", \"<EMAIL>\"},\n"}, {"char_start": 231, "char_end": 264, "chars": "\t\tUser{37, \"test37\", \"<EMAIL>\"},\n"}, {"char_start": 264, "char_end": 297, "chars": "\t\tUser{38, \"test38\", \"<EMAIL>\"},\n"}, {"char_start": 297, "char_end": 330, "chars": "\t\tUser{39, \"test39\", \"<EMAIL>\"},\n"}, {"char_start": 330, "char_end": 363, "chars": "\t\tUser{40, \"test40\", \"<EMAIL>\"},\n"}, {"char_start": 363, "char_end": 396, "chars": "\t\tUser{41, \"test41\", \"<EMAIL>\"},\n"}, {"char_start": 396, "char_end": 429, "chars": "\t\tUser{42, \"test42\", \"<EMAIL>\"},\n"}, {"char_start": 429, "char_end": 462, "chars": "\t\tUser{43, \"test43\", \"<EMAIL>\"},\n"}, {"char_start": 462, "char_end": 495, "chars": "\t\tUser{44, \"test44\", \"<EMAIL>\"},\n"}, {"char_start": 495, "char_end": 528, "chars": "\t\tUser{45, \"test45\", \"<EMAIL>\"},\n"}, {"char_start": 528, "char_end": 561, "chars": "\t\tUser{46, \"test46\", \"<EMAIL>\"},\n"}, {"char_start": 561, "char_end": 594, "chars": "\t\tUser{47, \"test47\", \"<EMAIL>\"},\n"}, {"char_start": 594, "char_end": 627, "chars": "\t\tUser{48, \"test48\", \"<EMAIL>\"},\n"}, {"char_start": 627, "char_end": 660, "chars": "\t\tUser{49, \"test49\", \"<EMAIL>\"},\n"}, {"char_start": 660, "char_end": 693, "chars": "\t\tUser{50, \"test50\", \"<EMAIL>\"},\n"}]}}
{"func_name": 4973, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package scanos\n\nimport (\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n\t\"sort\"\n\t\"testing\"\n)\n\nfunc Test_Sort(t *testing.T) {\n\n\tvar slice MetaInfoSlice\n\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.1.200\"}})\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.3.200\"}})\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.2.200\"}})\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.2.100\"}})\n\n\tsort.Sort(slice)\n}\n\nvar (\n\tMockHostName = \"nodeA\"\n\tMockKernelV  = \"3.10.0-693.2.2.el7.x86_64\"\n\tMockOSV      = \"CentOS Linux release 7.4.1708 (Core)\"\n\n\tMockCPUModeNum     = \"Intel(R) Xeon(R) Silver 4214 CPU\"\n\tMockCPUThreadCount = 4\n\tMockCPUClockSpeed  = \"2.20GHz\"\n\n\tMockCPULoadAverage = \"3.0 2.0 1.0\"\n\n\tMockMemUsed       = 0.66\n\tMockMemUsePercent = 8.64\n\tMockMemTotal      = 7.64\n\n\tMockRootMountUsedPercent       = 98\n\tMockHighUsedPercentMountPoints = \"/,/dev/shm\"\n\n\tMockCPUInfo = `\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 85\nmodel name      : Intel(R) Xeon(R) Silver 4214 CPU @ 2.20GHz\nstepping        : 7\nmicrocode       : 0x1\ncpu MHz         : 2194.842\ncache size      : 16896 KB\nphysical id     : 0", "func_src_after": "package scanos\n\nimport (\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n\t\"sort\"\n\t\"testing\"\n)\n\nfunc Test_Sort(t *testing.T) {\n\n\tvar slice MetaInfoSlice\n\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>\"}})\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>}})\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>\"}})\n\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>}})\n\n\tsort.Sort(slice)\n}\n\nvar (\n\tMockHostName = \"nodeA\"\n\tMockKernelV  = \"3.10.0-693.2.2.el7.x86_64\"\n\tMockOSV      = \"CentOS Linux release 7.4.1708 (Core)\"\n\n\tMockCPUModeNum     = \"Intel(R) Xeon(R) Silver 4214 CPU\"\n\tMockCPUThreadCount = 4\n\tMockCPUClockSpeed  = \"2.20GHz\"\n\n\tMockCPULoadAverage = \"3.0 2.0 1.0\"\n\n\tMockMemUsed       = 0.66\n\tMockMemUsePercent = 8.64\n\tMockMemTotal      = 7.64\n\n\tMockRootMountUsedPercent       = 98\n\tMockHighUsedPercentMountPoints = \"/,/dev/shm\"\n\n\tMockCPUInfo = `\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 85\nmodel name      : Intel(R) Xeon(R) Silver 4214 CPU @ 2.20GHz\nstepping        : 7\nmicrocode       : 0x1\ncpu MHz         : 2194.842\ncache size      : 16896 KB\nphysical id     : 0", "line_changes": {"deleted": [{"line_no": 14, "char_start": 182, "char_end": 265, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.1.200\"}})\n"}, {"line_no": 17, "char_start": 345, "char_end": 428, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.3.200\"}})\n"}, {"line_no": 19, "char_start": 427, "char_end": 510, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.2.200\"}})\n"}, {"line_no": 21, "char_start": 508, "char_end": 591, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.2.100\"}})\n"}], "added": [{"line_no": 15, "char_start": 182, "char_end": 264, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>\"}})\n"}, {"line_no": 16, "char_start": 264, "char_end": 345, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>}})\n"}, {"line_no": 18, "char_start": 345, "char_end": 427, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>\"}})\n"}, {"line_no": 20, "char_start": 427, "char_end": 508, "line": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>}})\n"}]}, "char_changes": {"deleted": [{"char_start": 182, "char_end": 265, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.1.200\"}})\n"}, {"char_start": 345, "char_end": 428, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.3.200\"}})\n"}, {"char_start": 427, "char_end": 510, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.2.200\"}})\n"}, {"char_start": 508, "char_end": 591, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"192.168.2.100\"}})\n"}], "added": [{"char_start": 182, "char_end": 264, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>\"}})\n"}, {"char_start": 264, "char_end": 345, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>}})\n"}, {"char_start": 345, "char_end": 427, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>\"}})\n"}, {"char_start": 427, "char_end": 508, "chars": "\tslice = append(slice, MetaInfo{BaseOSInfo: BaseOSInfo{Address: \"<IP-Address>}})\n"}]}}
{"func_name": 4975, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package driver\r\n\r\nimport (\r\n\t\"errors\"\r\n\t\"strings\"\r\n\r\n\t\"github.com/bitwormhole/starter-gorm/datasource\"\r\n\t\"github.com/bitwormhole/starter/markup\"\r\n\tdriver_sqlite \"gorm.io/driver/sqlite\"\r\n\t\"gorm.io/gorm\"\r\n)\r\n\r\ntype SQLiteDriver struct {\r\n\tmarkup.Component\r\n}\r\n\r\nfunc (inst *SQLiteDriver) _Impl() datasource.Driver {\r\n\treturn inst\r\n}\r\n\r\nfunc (inst *SQLiteDriver) Accept(cfg *datasource.Configuration) bool {\r\n\tname := cfg.Driver\r\n\tname = strings.TrimSpace(name)\r\n\tname = strings.ToLower(name)\r\n\treturn (name == \"sqlite\")\r\n}\r\n\r\nfunc (inst *SQLiteDriver) Open(cfg *datasource.Configuration) (datasource.Source, error) {\r\n\r\n\t//\tdsn := \"sqlserver://gorm:LoremIpsum86@localhost:9930?database=gorm\"\r\n\t//\tdb, err := gorm.Open(sqlserver.Open(dsn), &gorm.Config{})\r\n\r\n\tdsn := cfg.Database\r\n\r\n\tdialector := driver_sqlite.Open(dsn)\r\n\tif dialector == nil {\r\n\t\treturn nil, errors.New(\"driver_sqlserver.Open() return nil\")\r\n\t}\r\n\r\n\tgc := &gorm.Config{}\r\n\r\n\tbuilder := &datasource.GormDataSourceBuilder{}\r\n\tbuilder.Config1 = *cfg\r\n\tbuilder.Config2 = *gc\r\n\tbuilder.Dialector = dialector\r\n\treturn builder.Open()\r\n}\r\n", "func_src_after": "package driver\r\n\r\nimport (\r\n\t\"errors\"\r\n\t\"strings\"\r\n\r\n\t\"github.com/bitwormhole/starter-gorm/datasource\"\r\n\t\"github.com/bitwormhole/starter/markup\"\r\n\tdriver_sqlite \"gorm.io/driver/sqlite\"\r\n\t\"gorm.io/gorm\"\r\n)\r\n\r\ntype SQLiteDriver struct {\r\n\tmarkup.Component\r\n}\r\n\r\nfunc (inst *SQLiteDriver) _Impl() datasource.Driver {\r\n\treturn inst\r\n}\r\n\r\nfunc (inst *SQLiteDriver) Accept(cfg *datasource.Configuration) bool {\r\n\tname := cfg.Driver\r\n\tname = strings.TrimSpace(name)\r\n\tname = strings.ToLower(name)\r\n\treturn (name == \"sqlite\")\r\n}\r\n\r\nfunc (inst *SQLiteDriver) Open(cfg *datasource.Configuration) (datasource.Source, error) {\r\n\r\n\t//\tdsn := \"sqlserver://gorm:<EMAIL>:9930?database=gorm\"\r\n\t//\tdb, err := gorm.Open(sqlserver.Open(dsn), &gorm.Config{})\r\n\r\n\tdsn := cfg.Database\r\n\r\n\tdialector := driver_sqlite.Open(dsn)\r\n\tif dialector == nil {\r\n\t\treturn nil, errors.New(\"driver_sqlserver.Open() return nil\")\r\n\t}\r\n\r\n\tgc := &gorm.Config{}\r\n\r\n\tbuilder := &datasource.GormDataSourceBuilder{}\r\n\tbuilder.Config1 = *cfg\r\n\tbuilder.Config2 = *gc\r\n\tbuilder.Dialector = dialector\r\n\treturn builder.Open()\r\n}\r\n", "line_changes": {"deleted": [{"line_no": 30, "char_start": 618, "char_end": 691, "line": "\t//\tdsn := \"sqlserver://gorm:LoremIpsum86@localhost:9930?database=gorm\"\r\n"}], "added": [{"line_no": 31, "char_start": 618, "char_end": 676, "line": "\t//\tdsn := \"sqlserver://gorm:<EMAIL>:9930?database=gorm\"\r\n"}]}, "char_changes": {"deleted": [{"char_start": 618, "char_end": 691, "chars": "\t//\tdsn := \"sqlserver://gorm:LoremIpsum86@localhost:9930?database=gorm\"\r\n"}], "added": [{"char_start": 618, "char_end": 676, "chars": "\t//\tdsn := \"sqlserver://gorm:<EMAIL>:9930?database=gorm\"\r\n"}]}}
{"func_name": 4978, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package azcertcache_test\n\nimport (\n\t\"context\"\n\t\"io/ioutil\"\n\t\"reflect\"\n\t\"testing\"\n\n\t\"golang.org/x/crypto/acme/autocert\"\n\n\t\"github.com/goenning/azcertcache\"\n)\n\nfunc expectNotNil(t *testing.T, v interface{}) {\n\tif v == nil {\n\t\tt.Errorf(\"should not be nil\")\n\t}\n}\n\nfunc expectNil(t *testing.T, v interface{}) {\n\tif v != nil {\n\t\tt.Errorf(\"should be nil, but was %v\", v)\n\t}\n}\n\nfunc expectEquals(t *testing.T, v interface{}, expected interface{}) {\n\tif !reflect.DeepEqual(v, expected) {\n\t\tt.Errorf(\"should be %v, but was %v\", expected, v)\n\t}\n}\n\nfunc newCache(t *testing.T, containerName string) *azcertcache.Cache {\n\taccountName := \"devstoreaccount1\"\n\taccountKey := \"Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==\"\n\tendpointURL := \"http://localhost:10000/devstoreaccount1\"\n\n\tcache, err := azcertcache.NewWithEndpoint(accountName, accountKey, containerName, endpointURL)\n\texpectNil(t, err)\n\n\terr = cache.DeleteContainer(context.Background())\n\texpectNil(t, err)\n\n\terr = cache.CreateContainer(context.Background())\n\texpectNil(t, err)\n\treturn cache\n}\n\nfunc TestNew(t *testing.T) {\n\tcache := newCache(t, \"testcontainer\")\n\texpectNotNil(t, cache)", "func_src_after": "package azcertcache_test\n\nimport (\n\t\"context\"\n\t\"io/ioutil\"\n\t\"reflect\"\n\t\"testing\"\n\n\t\"golang.org/x/crypto/acme/autocert\"\n\n\t\"github.com/goenning/azcertcache\"\n)\n\nfunc expectNotNil(t *testing.T, v interface{}) {\n\tif v == nil {\n\t\tt.Errorf(\"should not be nil\")\n\t}\n}\n\nfunc expectNil(t *testing.T, v interface{}) {\n\tif v != nil {\n\t\tt.Errorf(\"should be nil, but was %v\", v)\n\t}\n}\n\nfunc expectEquals(t *testing.T, v interface{}, expected interface{}) {\n\tif !reflect.DeepEqual(v, expected) {\n\t\tt.Errorf(\"should be %v, but was %v\", expected, v)\n\t}\n}\n\nfunc newCache(t *testing.T, containerName string) *azcertcache.Cache {\n\taccountName := \"devstoreaccount1\"\n\taccountKey := \"Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==\"\n\tendpointURL := \"http://localhost:10000/devstoreaccount1\"\n\n\tcache, err := azcertcache.NewWithEndpoint(accountName, accountKey, containerName, endpointURL)\n\texpectNil(t, err)\n\n\terr = cache.DeleteContainer(context.Background())\n\texpectNil(t, err)\n\n\terr = cache.CreateContainer(context.Background())\n\texpectNil(t, err)\n\treturn cache\n}\n\nfunc TestNew(t *testing.T) {\n\tcache := newCache(t, \"testcontainer\")\n\texpectNotNil(t, cache)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 4980, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright © 2020-present simon@qchen.fun All rights reserved.\n// Distributed under the terms and conditions of the BSD License.\n// See accompanying files LICENSE.\n\npackage log\n\nimport (\n\t\"os\"\n\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n)\n\ntype Hooker interface {\n\tName() string\n\tFire(entry zapcore.Entry) error\n}\n\n// 配置参数\ntype Config struct {\n\tLevel        string // 等级\n\tFilepath     string // 日志文件\n\tErrFilepath  string // err文件\n\tIsProduction bool   // 是否product模式\n\n\tConf *zap.Config\n}\n\nfunc NewConfig(level string) *Config {\n\treturn &Config{\n\t\tLevel: level,\n\t}\n}\n\nfunc (c *Config) makeOptions() []zap.Option {\n\tvar opts = []zap.Option{\n\t\tzap.AddCallerSkip(1),\n\t}\n\tif c.Filepath != \"\" {\n\t\tc.Conf.OutputPaths = append(c.Conf.OutputPaths, c.Filepath)\n\t}\n\tc.Conf.Development = !c.IsProduction\n\treturn opts\n}\n\nfunc (c *Config) makeDefault() {\n\tif c.Conf != nil {\n\t\treturn\n\t}\n\tif c.IsProduction {", "func_src_after": "// Copyright © 2020-<EMAIL> All rights reserved.\n// Distributed under the terms and conditions of the BSD License.\n// See accompanying files LICENSE.\n\npackage log\n\nimport (\n\t\"os\"\n\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n)\n\ntype Hooker interface {\n\tName() string\n\tFire(entry zapcore.Entry) error\n}\n\n// 配置参数\ntype Config struct {\n\tLevel        string // 等级\n\tFilepath     string // 日志文件\n\tErrFilepath  string // err文件\n\tIsProduction bool   // 是否product模式\n\n\tConf *zap.Config\n}\n\nfunc NewConfig(level string) *Config {\n\treturn &Config{\n\t\tLevel: level,\n\t}\n}\n\nfunc (c *Config) makeOptions() []zap.Option {\n\tvar opts = []zap.Option{\n\t\tzap.AddCallerSkip(1),\n\t}\n\tif c.Filepath != \"\" {\n\t\tc.Conf.OutputPaths = append(c.Conf.OutputPaths, c.Filepath)\n\t}\n\tc.Conf.Development = !c.IsProduction\n\treturn opts\n}\n\nfunc (c *Config) makeDefault() {\n\tif c.Conf != nil {\n\t\treturn\n\t}\n\tif c.IsProduction {", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 65, "line": "// Copyright © 2020-present simon@qchen.fun All rights reserved.\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 49, "line": "// Copyright © 2020-<EMAIL> All rights reserved.\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 65, "chars": "// Copyright © 2020-present simon@qchen.fun All rights reserved.\n"}], "added": [{"char_start": 0, "char_end": 49, "chars": "// Copyright © 2020-<EMAIL> All rights reserved.\n"}]}}
{"func_name": 4983, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright (c) 2021 Patrick Ascher <development@fullhouse-productions.com>. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\npackage auth_test\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"testing\"\n\n\t\"github.com/patrickascher/gofer/auth\"\n\t\"github.com/patrickascher/gofer/auth/mocks\"\n\t\"github.com/patrickascher/gofer/registry\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\n// TestRegisterConfig tests\n// - registering provider\n// - configuration of provider with and without error response\n// - configuration a none existing provider.\n// - new on a not configured provider\n// - new on a configured provider.\nfunc TestRegisterConfig(t *testing.T) {\n\tasserts := assert.New(t)\n\tprovider := new(mocks.Interface)\n\n\t// ok: register mock\n\terr := auth.Register(\"mock\", func(options map[string]interface{}) (auth.Interface, error) {\n\t\tif v, ok := options[\"test\"]; ok && v == 1 {\n\t\t\treturn nil, errors.New(\"an error\")\n\t\t}\n\t\treturn provider, nil\n\t})\n\tasserts.NoError(err)\n\n\t// error: mock is not configured yet\n\tprov, err := auth.New(\"mock\")\n\tasserts.Error(err)\n\tasserts.Nil(prov)\n\tasserts.Equal(fmt.Sprintf(auth.ErrProvider, \"mock\"), err.Error())\n\n\t// error: because register function returns one\n\terr = auth.ConfigureProvider(\"mock\", map[string]interface{}{\"test\": 1})\n\tasserts.Error(err)\n\tasserts.Equal(\"an error\", err.Error())\n\n\t// error: provider not registered\n\terr = auth.ConfigureProvider(\"mock-not-registered\", map[string]interface{}{\"test\": 1})\n\tasserts.Error(err)", "func_src_after": "// Copyright (c) 2021 Patrick Ascher <<EMAIL>>. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\npackage auth_test\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"testing\"\n\n\t\"github.com/patrickascher/gofer/auth\"\n\t\"github.com/patrickascher/gofer/auth/mocks\"\n\t\"github.com/patrickascher/gofer/registry\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\n// TestRegisterConfig tests\n// - registering provider\n// - configuration of provider with and without error response\n// - configuration a none existing provider.\n// - new on a not configured provider\n// - new on a configured provider.\nfunc TestRegisterConfig(t *testing.T) {\n\tasserts := assert.New(t)\n\tprovider := new(mocks.Interface)\n\n\t// ok: register mock\n\terr := auth.Register(\"mock\", func(options map[string]interface{}) (auth.Interface, error) {\n\t\tif v, ok := options[\"test\"]; ok && v == 1 {\n\t\t\treturn nil, errors.New(\"an error\")\n\t\t}\n\t\treturn provider, nil\n\t})\n\tasserts.NoError(err)\n\n\t// error: mock is not configured yet\n\tprov, err := auth.New(\"mock\")\n\tasserts.Error(err)\n\tasserts.Nil(prov)\n\tasserts.Equal(fmt.Sprintf(auth.ErrProvider, \"mock\"), err.Error())\n\n\t// error: because register function returns one\n\terr = auth.ConfigureProvider(\"mock\", map[string]interface{}{\"test\": 1})\n\tasserts.Error(err)\n\tasserts.Equal(\"an error\", err.Error())\n\n\t// error: provider not registered\n\terr = auth.ConfigureProvider(\"mock-not-registered\", map[string]interface{}{\"test\": 1})\n\tasserts.Error(err)", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 99, "line": "// Copyright (c) 2021 Patrick Ascher <development@fullhouse-productions.com>. All rights reserved.\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 69, "line": "// Copyright (c) 2021 Patrick Ascher <<EMAIL>>. All rights reserved.\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 99, "chars": "// Copyright (c) 2021 Patrick Ascher <development@fullhouse-productions.com>. All rights reserved.\n"}], "added": [{"char_start": 0, "char_end": 69, "chars": "// Copyright (c) 2021 Patrick Ascher <<EMAIL>>. All rights reserved.\n"}]}}
{"func_name": 4993, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"fmt\"\n\t\"html/template\"\n\t\"time\"\n\n\t\"github.com/bamzi/jobrunner\"\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype GreetingJob struct {\n\tName string\n}\n\nfunc (g GreetingJob) Run() {\n\tfmt.Println(\"Hello,\", g.Name)\n}\n\ntype EmailJob struct {\n\tEmail string\n}\n\nfunc (e EmailJob) Run() {\n\tfmt.Println(\"Send,\", e.Email)\n}\n\nfunc main() {\n\tr := gin.Default()\n\n\tjobrunner.Start()\n\tjobrunner.Every(5*time.Second, GreetingJob{Name: \"dj\"})\n\tjobrunner.Every(10*time.Second, EmailJob{Email: \"935653229@qq.com\"})\n\n\tr.GET(\"/jobrunner/json\", JobJson)\n\tr.GET(\"/jobrunner/html\", JobHtml)\n\n\tr.Run(\":8888\")\n}\n\nfunc JobJson(c *gin.Context) {\n\tc.JSON(200, jobrunner.StatusJson())\n}\n\nfunc JobHtml(c *gin.Context) {\n\tt, err := template.ParseFiles(\"./Status.html\")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tc.JSON(400, \"error\")\n\t}", "func_src_after": "package main\n\nimport (\n\t\"fmt\"\n\t\"html/template\"\n\t\"time\"\n\n\t\"github.com/bamzi/jobrunner\"\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype GreetingJob struct {\n\tName string\n}\n\nfunc (g GreetingJob) Run() {\n\tfmt.Println(\"Hello,\", g.Name)\n}\n\ntype EmailJob struct {\n\tEmail string\n}\n\nfunc (e EmailJob) Run() {\n\tfmt.Println(\"Send,\", e.Email)\n}\n\nfunc main() {\n\tr := gin.Default()\n\n\tjobrunner.Start()\n\tjobrunner.Every(5*time.Second, GreetingJob{Name: \"dj\"})\n\tjobrunner.Every(10*time.Second, EmailJob{Email: \"935653229@qq.com\"})\n\n\tr.GET(\"/jobrunner/json\", JobJson)\n\tr.GET(\"/jobrunner/html\", JobHtml)\n\n\tr.Run(\":8888\")\n}\n\nfunc JobJson(c *gin.Context) {\n\tc.JSON(200, jobrunner.StatusJson())\n}\n\nfunc JobHtml(c *gin.Context) {\n\tt, err := template.ParseFiles(\"./Status.html\")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tc.JSON(400, \"error\")\n\t}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5014, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "}\n\n// compile time test to check if we are implementing the interface.\nvar _ joe.Adapter = new(BotAdapter)\n\nfunc newTestAdapter(t *testing.T) (*BotAdapter, *mockRocket) {\n\tctx := context.Background()\n\tlogger := zaptest.NewLogger(t)\n\tclient := new(mockRocket)\n\n\tcreds := &models.UserCredentials{\n\t\tEmail:    \"test@email.com\",\n\t\tPassword: \"123\",\n\t\tName:     \"\",\n\t}\n\tloginResp := botUser\n\tclient.On(\"Login\", creds).Return(loginResp, nil)\n\tu, _ := url.Parse(\"https://nowhere\")\n\tconf := Config{\n\t\tEmail:     \"test@email.com\",\n\t\tPassword:  \"123\",\n\t\tServerURL: u,\n\t\tName:      \"Test Name\",\n\t\tDebug:     false,\n\t\tLogger:    logger,\n\t}\n\n\tmyChans := &models.Channel{ID: myMsgs}\n\tclient.On(\"SubscribeToMessageStream\", myChans, mock.AnythingOfType(\"chan models.Message\")).Return(nil)\n\n\tchList := []models.Channel{\n\t\tdummyRoom,\n\t\tdummyDM,\n\t}\n\tclient.On(\"GetChannelsIn\").Return(chList, nil)\n\n\ta, err := newAdapter(ctx, client, conf, &dummygen{})\n\trequire.NoError(t, err)\n\n\treturn a, client\n}\n\nfunc TestAdapter_IgnoreNormalMessages(t *testing.T) {\n\tbrain := joetest.NewBrain(t)\n\ta, _ := newTestAdapter(t)\n\n\tdone := make(chan bool)\n\tgo func() {\n\t\ta.handleRocketMessages(brain.Brain)\n\t\tdone <- true", "func_src_after": "}\n\n// compile time test to check if we are implementing the interface.\nvar _ joe.Adapter = new(BotAdapter)\n\nfunc newTestAdapter(t *testing.T) (*BotAdapter, *mockRocket) {\n\tctx := context.Background()\n\tlogger := zaptest.NewLogger(t)\n\tclient := new(mockRocket)\n\n\tcreds := &models.UserCredentials{\n\t\tEmail:    \"<EMAIL>\",\n\t\tPassword: \"123\",\n\t\tName:     \"\",\n\t}\n\tloginResp := botUser\n\tclient.On(\"Login\", creds).Return(loginResp, nil)\n\tu, _ := url.Parse(\"https://nowhere\")\n\tconf := Config{\n\t\tEmail:     \"<EMAIL>\",\n\t\tPassword:  \"123\",\n\t\tServerURL: u,\n\t\tName:      \"Test Name\",\n\t\tDebug:     false,\n\t\tLogger:    logger,\n\t}\n\n\tmyChans := &models.Channel{ID: myMsgs}\n\tclient.On(\"SubscribeToMessageStream\", myChans, mock.AnythingOfType(\"chan models.Message\")).Return(nil)\n\n\tchList := []models.Channel{\n\t\tdummyRoom,\n\t\tdummyDM,\n\t}\n\tclient.On(\"GetChannelsIn\").Return(chList, nil)\n\n\ta, err := newAdapter(ctx, client, conf, &dummygen{})\n\trequire.NoError(t, err)\n\n\treturn a, client\n}\n\nfunc TestAdapter_IgnoreNormalMessages(t *testing.T) {\n\tbrain := joetest.NewBrain(t)\n\ta, _ := newTestAdapter(t)\n\n\tdone := make(chan bool)\n\tgo func() {\n\t\ta.handleRocketMessages(brain.Brain)\n\t\tdone <- true", "line_changes": {"deleted": [{"line_no": 12, "char_start": 295, "char_end": 325, "line": "\t\tEmail:    \"test@email.com\",\n"}, {"line_no": 21, "char_start": 483, "char_end": 514, "line": "\t\tEmail:     \"test@email.com\",\n"}], "added": [{"line_no": 13, "char_start": 295, "char_end": 318, "line": "\t\tEmail:    \"<EMAIL>\",\n"}, {"line_no": 22, "char_start": 483, "char_end": 507, "line": "\t\tEmail:     \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 295, "char_end": 325, "chars": "\t\tEmail:    \"test@email.com\",\n"}, {"char_start": 483, "char_end": 514, "chars": "\t\tEmail:     \"test@email.com\",\n"}], "added": [{"char_start": 295, "char_end": 318, "chars": "\t\tEmail:    \"<EMAIL>\",\n"}, {"char_start": 483, "char_end": 507, "chars": "\t\tEmail:     \"<EMAIL>\",\n"}]}}
{"func_name": 5019, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package factorybot_test\n\nimport (\n\t\"fmt\"\n\n\t. \"factorybot\"\n\n\t. \"github.com/onsi/ginkgo\"\n\t. \"github.com/onsi/gomega\"\n)\n\nvar _ = Describe(\"Sequence\", func() {\n\tsimple := NewSequence()\n\n\tDescribe(\"#N\", func() {\n\t\tIt(\"increases sequence counter\", func() {\n\t\t\tlast := simple.N()\n\t\t\tfor index := 1; index < 10; index++ {\n\t\t\t\tExpect(simple.N()).To(Equal(index + last))\n\t\t\t}\n\t\t})\n\t})\n\n\tDescribe(\"#Rewind\", func() {\n\t\tIt(\"resets the sequence\", func() {\n\t\t\t_ = simple.N()\n\t\t\tsimple.Rewind()\n\t\t\tExpect(simple.N()).To(Equal(1))\n\t\t})\n\t})\n\n\tDescribe(\"#One\", func() {\n\t\ts := NewSequence(func(n int) interface{} {\n\t\t\treturn fmt.Sprintf(\"address%d@example.com\", n)\n\t\t})\n\n\t\tIt(\"returns next value from the sequence\", func() {\n\t\t\tExpect(s.One().(string)).To(Equal(\"address1@example.com\"))\n\t\t})\n\n\t\tIt(\"returns next value from the simple sequence\", func() {\n\t\t\tExpect(simple.One()).To(Equal(simple.N() - 1))\n\t\t})\n\t})\n})\n", "func_src_after": "package factorybot_test\n\nimport (\n\t\"fmt\"\n\n\t. \"factorybot\"\n\n\t. \"github.com/onsi/ginkgo\"\n\t. \"github.com/onsi/gomega\"\n)\n\nvar _ = Describe(\"Sequence\", func() {\n\tsimple := NewSequence()\n\n\tDescribe(\"#N\", func() {\n\t\tIt(\"increases sequence counter\", func() {\n\t\t\tlast := simple.N()\n\t\t\tfor index := 1; index < 10; index++ {\n\t\t\t\tExpect(simple.N()).To(Equal(index + last))\n\t\t\t}\n\t\t})\n\t})\n\n\tDescribe(\"#Rewind\", func() {\n\t\tIt(\"resets the sequence\", func() {\n\t\t\t_ = simple.N()\n\t\t\tsimple.Rewind()\n\t\t\tExpect(simple.N()).To(Equal(1))\n\t\t})\n\t})\n\n\tDescribe(\"#One\", func() {\n\t\ts := NewSequence(func(n int) interface{} {\n\t\t\treturn fmt.Sprintf(\"<EMAIL>\", n)\n\t\t})\n\n\t\tIt(\"returns next value from the sequence\", func() {\n\t\t\tExpect(s.One().(string)).To(Equal(\"<EMAIL>\"))\n\t\t})\n\n\t\tIt(\"returns next value from the simple sequence\", func() {\n\t\t\tExpect(simple.One()).To(Equal(simple.N() - 1))\n\t\t})\n\t})\n})\n", "line_changes": {"deleted": [{"line_no": 34, "char_start": 597, "char_end": 647, "line": "\t\t\treturn fmt.Sprintf(\"address%d@example.com\", n)\n"}, {"line_no": 39, "char_start": 693, "char_end": 755, "line": "\t\t\tExpect(s.One().(string)).To(Equal(\"address1@example.com\"))\n"}], "added": [{"line_no": 35, "char_start": 597, "char_end": 633, "line": "\t\t\treturn fmt.Sprintf(\"<EMAIL>\", n)\n"}, {"line_no": 40, "char_start": 693, "char_end": 742, "line": "\t\t\tExpect(s.One().(string)).To(Equal(\"<EMAIL>\"))\n"}]}, "char_changes": {"deleted": [{"char_start": 597, "char_end": 647, "chars": "\t\t\treturn fmt.Sprintf(\"address%d@example.com\", n)\n"}, {"char_start": 693, "char_end": 755, "chars": "\t\t\tExpect(s.One().(string)).To(Equal(\"address1@example.com\"))\n"}], "added": [{"char_start": 597, "char_end": 633, "chars": "\t\t\treturn fmt.Sprintf(\"<EMAIL>\", n)\n"}, {"char_start": 693, "char_end": 742, "chars": "\t\t\tExpect(s.One().(string)).To(Equal(\"<EMAIL>\"))\n"}]}}
{"func_name": 5021, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path\"\n\t\"path/filepath\"\n\t\"syscall\"\n\n\tjsonrpc \"github.com/koinos/koinos-jsonrpc/internal\"\n\tlog \"github.com/koinos/koinos-log-golang\"\n\tkoinosmq \"github.com/koinos/koinos-mq-golang\"\n\t\"github.com/koinos/koinos-proto-golang/koinos\"\n\t\"github.com/koinos/koinos-proto-golang/koinos/protocol\"\n\tutil \"github.com/koinos/koinos-util-golang\"\n\tma \"github.com/multiformats/go-multiaddr\"\n\tflag \"github.com/spf13/pflag\"\n\t\"google.golang.org/protobuf/proto\"\n\t\"google.golang.org/protobuf/reflect/protodesc\"\n\t\"google.golang.org/protobuf/reflect/protoreflect\"\n\t\"google.golang.org/protobuf/types/descriptorpb\"\n)\n\nconst (\n\tbasedirOption        = \"basedir\"\n\tamqpOption           = \"amqp\"\n\tlistenOption         = \"listen\"\n\tendpointOption       = \"endpoint\"\n\tlogLevelOption       = \"log-level\"\n\tinstanceIDOption     = \"instance-id\"\n\tdescriptorsDirOption = \"descriptors\"\n)\n\nconst (\n\tbasedirDefault        = \".koinos\"\n\tamqpDefault           = \"amqp://guest:guest@localhost:5672/\"\n\tlistenDefault         = \"/ip4/127.0.0.1/tcp/8080\"\n\tendpointDefault       = \"/\"\n\tlogLevelDefault       = \"info\"\n\tdescriptorsDirDefault = \"descriptors\"\n)\n\nconst (\n\tappName = \"jsonrpc\"\n\tlogDir  = \"logs\"\n)\n", "func_src_after": "package main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path\"\n\t\"path/filepath\"\n\t\"syscall\"\n\n\tjsonrpc \"github.com/koinos/koinos-jsonrpc/internal\"\n\tlog \"github.com/koinos/koinos-log-golang\"\n\tkoinosmq \"github.com/koinos/koinos-mq-golang\"\n\t\"github.com/koinos/koinos-proto-golang/koinos\"\n\t\"github.com/koinos/koinos-proto-golang/koinos/protocol\"\n\tutil \"github.com/koinos/koinos-util-golang\"\n\tma \"github.com/multiformats/go-multiaddr\"\n\tflag \"github.com/spf13/pflag\"\n\t\"google.golang.org/protobuf/proto\"\n\t\"google.golang.org/protobuf/reflect/protodesc\"\n\t\"google.golang.org/protobuf/reflect/protoreflect\"\n\t\"google.golang.org/protobuf/types/descriptorpb\"\n)\n\nconst (\n\tbasedirOption        = \"basedir\"\n\tamqpOption           = \"amqp\"\n\tlistenOption         = \"listen\"\n\tendpointOption       = \"endpoint\"\n\tlogLevelOption       = \"log-level\"\n\tinstanceIDOption     = \"instance-id\"\n\tdescriptorsDirOption = \"descriptors\"\n)\n\nconst (\n\tbasedirDefault        = \".koinos\"\n\tamqpDefault           = \"amqp://guest:guest@localhost:5672/\"\n\tlistenDefault         = \"/ip4/<IP-Address>/tcp/8080\"\n\tendpointDefault       = \"/\"\n\tlogLevelDefault       = \"info\"\n\tdescriptorsDirDefault = \"descriptors\"\n)\n\nconst (\n\tappName = \"jsonrpc\"\n\tlogDir  = \"logs\"\n)\n", "line_changes": {"deleted": [{"line_no": 40, "char_start": 1026, "char_end": 1077, "line": "\tlistenDefault         = \"/ip4/127.0.0.1/tcp/8080\"\n"}], "added": [{"line_no": 41, "char_start": 1026, "char_end": 1080, "line": "\tlistenDefault         = \"/ip4/<IP-Address>/tcp/8080\"\n"}]}, "char_changes": {"deleted": [{"char_start": 1026, "char_end": 1077, "chars": "\tlistenDefault         = \"/ip4/127.0.0.1/tcp/8080\"\n"}], "added": [{"char_start": 1026, "char_end": 1080, "chars": "\tlistenDefault         = \"/ip4/<IP-Address>/tcp/8080\"\n"}]}}
{"func_name": 5023, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package action\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"testing\"\n\n\t\"github.com/botopolis/bot/mock\"\n\t\"github.com/nlopes/slack\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\nconst (\n\tsigningSecret = \"e6b19c573432dcc6b075501d51b51bb8\"\n\n\tfooBody      = `payload=%7B%22callback_id%22%3A%22foo%22%7D`\n\tfooSignature = \"v0=d27668944a2857e8495256fc93c7aed9f1119617ec08902b56edf69862b16855\"\n\tbarBody      = `payload=%7B%22callback_id%22%3A%22bar%22%7D`\n\tbarSignature = \"v0=50179568ccb23da3e0dd88c0ac6da9e336ae9ed2895008d7d736807978e4e8bf\"\n)\n\nfunc newHeader(signature string) http.Header {\n\th := http.Header{}\n\th.Set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\th.Set(\"X-Slack-Signature\", signature)\n\th.Set(\"X-Slack-Request-Timestamp\", \"1531431954\")\n\treturn h\n}\n\nfunc readCloser(b []byte) io.ReadCloser {\n\treturn ioutil.NopCloser(bytes.NewReader(b))\n}\n\nvar logger = mock.NewLogger()\n\nfunc init() {\n\tlogger.WriteFunc = func(l mock.Level, v ...interface{}) {\n\t\tfmt.Println(v...)\n\t}\n\tlogger.WritefFunc = func(l mock.Level, msg string, v ...interface{}) {\n\t\tfmt.Printf(msg, v...)\n\t}\n}\n\nfunc TestWebhook_response(t *testing.T) {\n\tcases := []struct {", "func_src_after": "package action\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"testing\"\n\n\t\"github.com/botopolis/bot/mock\"\n\t\"github.com/nlopes/slack\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\nconst (\n\tsigningSecret = \"e6b19c573432dcc6b075501d51b51bb8\"\n\n\tfooBody      = `payload=%7B%22callback_id%22%3A%22foo%22%7D`\n\tfooSignature = \"v0=d27668944a2857e8495256fc93c7aed9f1119617ec08902b56edf69862b16855\"\n\tbarBody      = `payload=%7B%22callback_id%22%3A%22bar%22%7D`\n\tbarSignature = \"v0=50179568ccb23da3e0dd88c0ac6da9e336ae9ed2895008d7d736807978e4e8bf\"\n)\n\nfunc newHeader(signature string) http.Header {\n\th := http.Header{}\n\th.Set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\th.Set(\"X-Slack-Signature\", signature)\n\th.Set(\"X-Slack-Request-Timestamp\", \"1531431954\")\n\treturn h\n}\n\nfunc readCloser(b []byte) io.ReadCloser {\n\treturn ioutil.NopCloser(bytes.NewReader(b))\n}\n\nvar logger = mock.NewLogger()\n\nfunc init() {\n\tlogger.WriteFunc = func(l mock.Level, v ...interface{}) {\n\t\tfmt.Println(v...)\n\t}\n\tlogger.WritefFunc = func(l mock.Level, msg string, v ...interface{}) {\n\t\tfmt.Printf(msg, v...)\n\t}\n}\n\nfunc TestWebhook_response(t *testing.T) {\n\tcases := []struct {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5026, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2014 The Cockroach Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied. See the License for the specific language governing\n// permissions and limitations under the License. See the AUTHORS file\n// for names of contributors.\n//\n// Author: Matt Tracy (matt.r.tracy@gmail.com)\n\npackage kv\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"sync\"\n\n\t\"github.com/biogo/store/llrb\"\n\t\"github.com/cockroachdb/cockroach/keys\"\n\t\"github.com/cockroachdb/cockroach/roachpb\"\n\t\"github.com/cockroachdb/cockroach/util/cache\"\n\t\"github.com/cockroachdb/cockroach/util/log\"\n)\n\n// rangeCacheKey is the key type used to store and sort values in the\n// RangeCache.\ntype rangeCacheKey roachpb.RKey\n\nfunc (a rangeCacheKey) String() string {\n\treturn roachpb.Key(a).String()\n}\n\n// Compare implements the llrb.Comparable interface for rangeCacheKey, so that\n// it can be used as a key for util.OrderedCache.\nfunc (a rangeCacheKey) Compare(b llrb.Comparable) int {\n\treturn bytes.Compare(a, b.(rangeCacheKey))\n}\n\nfunc meta(k roachpb.RKey) roachpb.RKey {\n\treturn keys.Addr(keys.RangeMetaKey(k))\n}\n\n// RangeDescriptorDB is a type which can query range descriptors from an", "func_src_after": "// Copyright 2014 The Cockroach Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied. See the License for the specific language governing\n// permissions and limitations under the License. See the AUTHORS file\n// for names of contributors.\n//\n// Author: Matt Tracy (<EMAIL>)\n\npackage kv\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"sync\"\n\n\t\"github.com/biogo/store/llrb\"\n\t\"github.com/cockroachdb/cockroach/keys\"\n\t\"github.com/cockroachdb/cockroach/roachpb\"\n\t\"github.com/cockroachdb/cockroach/util/cache\"\n\t\"github.com/cockroachdb/cockroach/util/log\"\n)\n\n// rangeCacheKey is the key type used to store and sort values in the\n// RangeCache.\ntype rangeCacheKey roachpb.RKey\n\nfunc (a rangeCacheKey) String() string {\n\treturn roachpb.Key(a).String()\n}\n\n// Compare implements the llrb.Comparable interface for rangeCacheKey, so that\n// it can be used as a key for util.OrderedCache.\nfunc (a rangeCacheKey) Compare(b llrb.Comparable) int {\n\treturn bytes.Compare(a, b.(rangeCacheKey))\n}\n\nfunc meta(k roachpb.RKey) roachpb.RKey {\n\treturn keys.Addr(keys.RangeMetaKey(k))\n}\n\n// RangeDescriptorDB is a type which can query range descriptors from an", "line_changes": {"deleted": [{"line_no": 16, "char_start": 653, "char_end": 700, "line": "// Author: Matt Tracy (matt.r.tracy@gmail.com)\n"}], "added": [{"line_no": 17, "char_start": 653, "char_end": 685, "line": "// Author: Matt Tracy (<EMAIL>)\n"}]}, "char_changes": {"deleted": [{"char_start": 653, "char_end": 700, "chars": "// Author: Matt Tracy (matt.r.tracy@gmail.com)\n"}], "added": [{"char_start": 653, "char_end": 685, "chars": "// Author: Matt Tracy (<EMAIL>)\n"}]}}
{"func_name": 5028, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * Copyright (c) 2019-2020 Cisco Systems\n *\n * Author: Steven Barth <stbarth@cisco.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/cisco-ie/netgonf/netconf\"\n\t\"golang.org/x/crypto/ssh\"\n)\n\ntype yangPush struct {\n\tnetconf.Notification\n\tPushUpdate struct {\n\t\tContent struct {\n\t\t\tInnerXML []byte `xml:\",innerxml\"`\n\t\t} `xml:\"datastore-contents-xml\"`\n\t} `xml:\"urn:ietf:params:xml:ns:yang:ietf-yang-push push-update\"`\n}\n\ntype establishSubscription struct {\n\tXMLName     xml.Name `xml:\"urn:ietf:params:xml:ns:yang:ietf-event-notifications establish-subscription\"`\n\tYangPush    string   `xml:\"xmlns:yp,attr\"`\n\tStream      string   `xml:\"stream\"`\n\tXPathFilter string   `xml:\"urn:ietf:params:xml:ns:yang:ietf-yang-push xpath-filter\"`\n\tPeriod      int      `xml:\"urn:ietf:params:xml:ns:yang:ietf-yang-push period\"`\n}", "func_src_after": "/**\n * Copyright (c) 2019-2020 Cisco Systems\n *\n * Author: Steven Barth <<EMAIL>>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/cisco-ie/netgonf/netconf\"\n\t\"golang.org/x/crypto/ssh\"\n)\n\ntype yangPush struct {\n\tnetconf.Notification\n\tPushUpdate struct {\n\t\tContent struct {\n\t\t\tInnerXML []byte `xml:\",innerxml\"`\n\t\t} `xml:\"datastore-contents-xml\"`\n\t} `xml:\"urn:ietf:params:xml:ns:yang:ietf-yang-push push-update\"`\n}\n\ntype establishSubscription struct {\n\tXMLName     xml.Name `xml:\"urn:ietf:params:xml:ns:yang:ietf-event-notifications establish-subscription\"`\n\tYangPush    string   `xml:\"xmlns:yp,attr\"`\n\tStream      string   `xml:\"stream\"`\n\tXPathFilter string   `xml:\"urn:ietf:params:xml:ns:yang:ietf-yang-push xpath-filter\"`\n\tPeriod      int      `xml:\"urn:ietf:params:xml:ns:yang:ietf-yang-push period\"`\n}", "line_changes": {"deleted": [{"line_no": 4, "char_start": 48, "char_end": 92, "line": " * Author: Steven Barth <stbarth@cisco.com>\n"}], "added": [{"line_no": 5, "char_start": 48, "char_end": 82, "line": " * Author: Steven Barth <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 48, "char_end": 92, "chars": " * Author: Steven Barth <stbarth@cisco.com>\n"}], "added": [{"char_start": 48, "char_end": 82, "chars": " * Author: Steven Barth <<EMAIL>>\n"}]}}
{"func_name": 5030, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/fatih/color\"\n\t// postgres driver for migrate\n\t_ \"github.com/mattes/migrate/driver/postgres\"\n\t\"github.com/mattes/migrate/file\"\n\t\"github.com/mattes/migrate/migrate/direction\"\n\t\"github.com/spf13/cobra\"\n)\n\nvar url string\nvar path string\n\n// migrateCmd represents the migrate command\nvar migrateCmd = &cobra.Command{\n\tUse:   \"migrate\",\n\tShort: \"Execute migration operations\",\n\tLong:  `Execute migration operations`,\n}\n\nfunc init() {\n\tRootCmd.AddCommand(migrateCmd)\n\tmigrateCmd.PersistentFlags().StringVar(&url, \"url\", driverURL(), \"Database driver url\")\n\tmigrateCmd.PersistentFlags().StringVar(&path, \"path\", prestConfig.MigrationsPath, \"Migrations directory\")\n}\n\nfunc driverURL() string {\n\treturn fmt.Sprintf(\"postgres://%s:%s@%s:%s/%s?sslmode=disable\", prestConfig.PGUser, prestConfig.PGPass, prestConfig.PGHost, prestConfig.PGPort, prestConfig.PGDatabase)\n}\n\nfunc writePipe(pipe chan interface{}) (ok bool) {\n\tokFlag := true\n\tif pipe != nil {\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase item, more := <-pipe:\n\t\t\t\tif more {\n\t\t\t\t\tswitch item.(type) {\n\n\t\t\t\t\tcase string:\n\t\t\t\t\t\tfmt.Println(item.(string))\n\n\t\t\t\t\tcase error:\n\t\t\t\t\t\tc := color.New(color.FgRed)\n\t\t\t\t\t\tc.Println(item.(error).Error())", "func_src_after": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/fatih/color\"\n\t// postgres driver for migrate\n\t_ \"github.com/mattes/migrate/driver/postgres\"\n\t\"github.com/mattes/migrate/file\"\n\t\"github.com/mattes/migrate/migrate/direction\"\n\t\"github.com/spf13/cobra\"\n)\n\nvar url string\nvar path string\n\n// migrateCmd represents the migrate command\nvar migrateCmd = &cobra.Command{\n\tUse:   \"migrate\",\n\tShort: \"Execute migration operations\",\n\tLong:  `Execute migration operations`,\n}\n\nfunc init() {\n\tRootCmd.AddCommand(migrateCmd)\n\tmigrateCmd.PersistentFlags().StringVar(&url, \"url\", driverURL(), \"Database driver url\")\n\tmigrateCmd.PersistentFlags().StringVar(&path, \"path\", prestConfig.MigrationsPath, \"Migrations directory\")\n}\n\nfunc driverURL() string {\n\treturn fmt.Sprintf(\"postgres://%s:%s@%s:%s/%s?sslmode=disable\", prestConfig.PGUser, prestConfig.PGPass, prestConfig.PGHost, prestConfig.PGPort, prestConfig.PGDatabase)\n}\n\nfunc writePipe(pipe chan interface{}) (ok bool) {\n\tokFlag := true\n\tif pipe != nil {\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase item, more := <-pipe:\n\t\t\t\tif more {\n\t\t\t\t\tswitch item.(type) {\n\n\t\t\t\t\tcase string:\n\t\t\t\t\t\tfmt.Println(item.(string))\n\n\t\t\t\t\tcase error:\n\t\t\t\t\t\tc := color.New(color.FgRed)\n\t\t\t\t\t\tc.Println(item.(error).Error())", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5038, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package handler\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n\n\t\"github.com/jdxj/share/model\"\n\n\tuser \"github.com/jdxj/share/user/proto\"\n)\n\nfunc TestUser_Login(t *testing.T) {\n\tvar a, b uint32 = 3, 7\n\tfmt.Printf(\"%d\\n\", int(a-b))\n\tvar c, d int32 = 3, 7\n\tfmt.Printf(\"%d\\n\", c-d)\n}\n\nfunc TestUser_SignUp(t *testing.T) {\n\tmodel.InitDB(\"root\", \"123456\", \"127.0.0.1:3306\", \"video\")\n\tdefer model.CloseDB()\n\n\tu := new(User)\n\treq := &user.RequestLogin{\n\t\tName:     \"abc\",\n\t\tPassword: \"jdxj\",\n\t}\n\tresp := &user.ResponseLogin{}\n\t_ = u.SignUp(nil, req, resp)\n\tfmt.Printf(\"%#v\\n\", resp)\n}\n", "func_src_after": "package handler\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n\n\t\"github.com/jdxj/share/model\"\n\n\tuser \"github.com/jdxj/share/user/proto\"\n)\n\nfunc TestUser_Login(t *testing.T) {\n\tvar a, b uint32 = 3, 7\n\tfmt.Printf(\"%d\\n\", int(a-b))\n\tvar c, d int32 = 3, 7\n\tfmt.Printf(\"%d\\n\", c-d)\n}\n\nfunc TestUser_SignUp(t *testing.T) {\n\tmodel.InitDB(\"root\", \"123456\", \"<IP-Address>:3306\", \"video\")\n\tdefer model.CloseDB()\n\n\tu := new(User)\n\treq := &user.RequestLogin{\n\t\tName:     \"abc\",\n\t\tPassword: \"jdxj\",\n\t}\n\tresp := &user.ResponseLogin{}\n\t_ = u.SignUp(nil, req, resp)\n\tfmt.Printf(\"%#v\\n\", resp)\n}\n", "line_changes": {"deleted": [{"line_no": 20, "char_start": 299, "char_end": 358, "line": "\tmodel.InitDB(\"root\", \"123456\", \"127.0.0.1:3306\", \"video\")\n"}], "added": [{"line_no": 21, "char_start": 299, "char_end": 361, "line": "\tmodel.InitDB(\"root\", \"123456\", \"<IP-Address>:3306\", \"video\")\n"}]}, "char_changes": {"deleted": [{"char_start": 299, "char_end": 358, "chars": "\tmodel.InitDB(\"root\", \"123456\", \"127.0.0.1:3306\", \"video\")\n"}], "added": [{"char_start": 299, "char_end": 361, "chars": "\tmodel.InitDB(\"root\", \"123456\", \"<IP-Address>:3306\", \"video\")\n"}]}}
{"func_name": 5039, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"context\"\n\t\"github.com/go-playground/validator/v10\"\n\t\"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"\n\t_ \"github.com/jinzhu/gorm/dialects/mysql\"\n\t\"github.com/pjoc-team/pay-gateway/internal/service\"\n\t\"github.com/pjoc-team/pay-gateway/pkg/discovery\"\n\t\"github.com/pjoc-team/pay-gateway/pkg/util/db\"\n\tpay \"github.com/pjoc-team/pay-proto/go\"\n\t\"github.com/pjoc-team/tracing/logger\"\n\t\"github.com/spf13/pflag\"\n\t\"google.golang.org/grpc\"\n\t\"time\"\n)\n\nconst serviceName = discovery.DatabaseService\n\nvar (\n\tc = &db.MysqlConfig{}\n)\n\nfunc flagSet() *pflag.FlagSet {\n\tset := pflag.NewFlagSet(serviceName.String(), pflag.ExitOnError)\n\tset.StringVar(\n\t\t&c.URL, \"url\",\n\t\t\"root:111@tcp(127.0.0.1:3306)/pay_gateway?charset=utf8mb4&parseTime=true&loc=Local\"+\n\t\t\t\"&timeout=10s&collation=utf8mb4_unicode_ci\", \"mysql dsn\",\n\t)\n\tset.IntVar(&c.MaxConn, \"max-conn\", 100, \"max connection\")\n\tset.DurationVarP(\n\t\t&c.MaxIdle, \"max-idle\", \"w\", 120*time.Second,\n\t\t\"seconds of idle connection\",\n\t)\n\treturn set\n}\n\nfunc main() {\n\tlog := logger.Log()\n\n\tvalidate := validator.New()\n\terr := validate.Struct(c)\n\tif err != nil {\n\t\tlog.Fatalf(\"illegal configs, error: %v\", err.Error())\n\t}\n\n\tif err != nil {\n\t\tlog.Fatal(err.Error())\n\t}", "func_src_after": "package main\n\nimport (\n\t\"context\"\n\t\"github.com/go-playground/validator/v10\"\n\t\"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"\n\t_ \"github.com/jinzhu/gorm/dialects/mysql\"\n\t\"github.com/pjoc-team/pay-gateway/internal/service\"\n\t\"github.com/pjoc-team/pay-gateway/pkg/discovery\"\n\t\"github.com/pjoc-team/pay-gateway/pkg/util/db\"\n\tpay \"github.com/pjoc-team/pay-proto/go\"\n\t\"github.com/pjoc-team/tracing/logger\"\n\t\"github.com/spf13/pflag\"\n\t\"google.golang.org/grpc\"\n\t\"time\"\n)\n\nconst serviceName = discovery.DatabaseService\n\nvar (\n\tc = &db.MysqlConfig{}\n)\n\nfunc flagSet() *pflag.FlagSet {\n\tset := pflag.NewFlagSet(serviceName.String(), pflag.ExitOnError)\n\tset.StringVar(\n\t\t&c.URL, \"url\",\n\t\t\"root:111@tcp(<IP-Address>:3306)/pay_gateway?charset=utf8mb4&parseTime=true&loc=Local\"+\n\t\t\t\"&timeout=10s&collation=utf8mb4_unicode_ci\", \"mysql dsn\",\n\t)\n\tset.IntVar(&c.MaxConn, \"max-conn\", 100, \"max connection\")\n\tset.DurationVarP(\n\t\t&c.MaxIdle, \"max-idle\", \"w\", 120*time.Second,\n\t\t\"seconds of idle connection\",\n\t)\n\treturn set\n}\n\nfunc main() {\n\tlog := logger.Log()\n\n\tvalidate := validator.New()\n\terr := validate.Struct(c)\n\tif err != nil {\n\t\tlog.Fatalf(\"illegal configs, error: %v\", err.Error())\n\t}\n\n\tif err != nil {\n\t\tlog.Fatal(err.Error())\n\t}", "line_changes": {"deleted": [{"line_no": 28, "char_start": 676, "char_end": 763, "line": "\t\t\"root:111@tcp(127.0.0.1:3306)/pay_gateway?charset=utf8mb4&parseTime=true&loc=Local\"+\n"}], "added": [{"line_no": 29, "char_start": 676, "char_end": 766, "line": "\t\t\"root:111@tcp(<IP-Address>:3306)/pay_gateway?charset=utf8mb4&parseTime=true&loc=Local\"+\n"}]}, "char_changes": {"deleted": [{"char_start": 676, "char_end": 763, "chars": "\t\t\"root:111@tcp(127.0.0.1:3306)/pay_gateway?charset=utf8mb4&parseTime=true&loc=Local\"+\n"}], "added": [{"char_start": 676, "char_end": 766, "chars": "\t\t\"root:111@tcp(<IP-Address>:3306)/pay_gateway?charset=utf8mb4&parseTime=true&loc=Local\"+\n"}]}}
{"func_name": 5044, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\nfunc TestDownloadSuccess(t *testing.T) {\n\tcli, outStream, _ := before()\n\targs := strings.Split(fmt.Sprintf(\"spm clone sf://%s:%s@login.salesforce.com?path=%s\", os.Getenv(\"USERNAME\"), os.Getenv(\"PASSWORD\"), SUCCESS_PACKAGE_TOML), \" \")\n\tcli.Run(args)\n\toutString := outStream.String()\n\tassert.Contains(t, outString, \"Start Retrieve Request...\")\n\tassert.Contains(t, outString, \"Check Retrieve Status...\")\n\tassertIsExists(t, \"tmp/unpackaged/classes/HelloSpm_Dep.cls\")\n\tassertIsExists(t, \"tmp/unpackaged/classes/HelloSpm_Dep.cls-meta.xml\")\n\tassertIsExists(t, \"tmp/unpackaged/package.xml\")\n\tassert.Nil(t, os.RemoveAll(\"./tmp\"))\n}\n\nfunc TestDownloadFailureNoUsername(t *testing.T) {\n\tcli, outStream, _ := before()\n\targs := strings.Split(fmt.Sprintf(\"spm clone sf://:%s@login.salesforce.com?path=%s\", os.Getenv(\"PASSWORD\"), SUCCESS_PACKAGE_TOML), \" \")\n\t_ = cli.Run(args)\n\toutString := outStream.String()\n\tassert.Contains(t, outString, \"Username is required\")\n}\n\nfunc TestDownloadFailureNoPassword(t *testing.T) {\n\tcli, outStream, _ := before()\n\targs := strings.Split(fmt.Sprintf(\"spm clone sf://%s:@login.salesforce.com?path=%s\", os.Getenv(\"USERNAME\"), SUCCESS_PACKAGE_TOML), \" \")\n\t_ = cli.Run(args)\n\toutString := outStream.String()\n\tassert.Contains(t, outString, \"Password is required\")\n}\n\nfunc assertIsExists(t *testing.T, filename string) {\n\t_, err := os.Stat(filename)\n\tassert.Nil(t, err)\n}\n", "func_src_after": "\nfunc TestDownloadSuccess(t *testing.T) {\n\tcli, outStream, _ := before()\n\targs := strings.Split(fmt.Sprintf(\"spm clone sf://%s:%s@login.salesforce.com?path=%s\", os.Getenv(\"USERNAME\"), os.Getenv(\"PASSWORD\"), SUCCESS_PACKAGE_TOML), \" \")\n\tcli.Run(args)\n\toutString := outStream.String()\n\tassert.Contains(t, outString, \"Start Retrieve Request...\")\n\tassert.Contains(t, outString, \"Check Retrieve Status...\")\n\tassertIsExists(t, \"tmp/unpackaged/classes/HelloSpm_Dep.cls\")\n\tassertIsExists(t, \"tmp/unpackaged/classes/HelloSpm_Dep.cls-meta.xml\")\n\tassertIsExists(t, \"tmp/unpackaged/package.xml\")\n\tassert.Nil(t, os.RemoveAll(\"./tmp\"))\n}\n\nfunc TestDownloadFailureNoUsername(t *testing.T) {\n\tcli, outStream, _ := before()\n\targs := strings.Split(fmt.Sprintf(\"spm clone sf://:%s@login.salesforce.com?path=%s\", os.Getenv(\"PASSWORD\"), SUCCESS_PACKAGE_TOML), \" \")\n\t_ = cli.Run(args)\n\toutString := outStream.String()\n\tassert.Contains(t, outString, \"Username is required\")\n}\n\nfunc TestDownloadFailureNoPassword(t *testing.T) {\n\tcli, outStream, _ := before()\n\targs := strings.Split(fmt.Sprintf(\"spm clone sf://%s:@login.salesforce.com?path=%s\", os.Getenv(\"USERNAME\"), SUCCESS_PACKAGE_TOML), \" \")\n\t_ = cli.Run(args)\n\toutString := outStream.String()\n\tassert.Contains(t, outString, \"Password is required\")\n}\n\nfunc assertIsExists(t *testing.T, filename string) {\n\t_, err := os.Stat(filename)\n\tassert.Nil(t, err)\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5055, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright (c) 2018, Divya Cote <divya.cote@gmail.com> All rights reserved.\n// This software is licensed under a 3-clause BSD license. Please consult the\n// LICENSE file distributed with the sources of this project regarding your\n// rights to use or distribute this software.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/sylabs/sif/pkg/sif\"\n\t\"io\"\n\t\"os\"\n\t\"strconv\"\n\t\"time\"\n)\n\n// readableSize returns the size in human readable format\nfunc readableSize(size uint64) string {\n\tvar divs int\n\tvar conversion string\n\n\tfor ; size != 0; size >>= 10 {\n\t\tif size < 1024 {\n\t\t\tbreak\n\t\t}\n\t\tdivs++\n\t}\n\n\tswitch divs {\n\tcase 0:\n\t\tconversion = fmt.Sprintf(\"%d\", size)\n\tcase 1:\n\t\tconversion = fmt.Sprintf(\"%dKB\", size)\n\tcase 2:\n\t\tconversion = fmt.Sprintf(\"%dMB\", size)\n\tcase 3:\n\t\tconversion = fmt.Sprintf(\"%dGB\", size)\n\tcase 4:\n\t\tconversion = fmt.Sprintf(\"%dTB\", size)\n\t}\n\treturn conversion\n}\n\n// archStr returns a human readable version of SIF mach architecture\nfunc archStr(arch string) string {\n\tarchMap := map[string]string{\n\t\tsif.HdrArch386:      \"386\",\n\t\tsif.HdrArchAMD64:    \"amd64\",\n\t\tsif.HdrArchARM:      \"arm\",\n\t\tsif.HdrArchARM64:    \"arm64\",", "func_src_after": "// Copyright (c) 2018, Divya Cote <<EMAIL>> All rights reserved.\n// This software is licensed under a 3-clause BSD license. Please consult the\n// LICENSE file distributed with the sources of this project regarding your\n// rights to use or distribute this software.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/sylabs/sif/pkg/sif\"\n\t\"io\"\n\t\"os\"\n\t\"strconv\"\n\t\"time\"\n)\n\n// readableSize returns the size in human readable format\nfunc readableSize(size uint64) string {\n\tvar divs int\n\tvar conversion string\n\n\tfor ; size != 0; size >>= 10 {\n\t\tif size < 1024 {\n\t\t\tbreak\n\t\t}\n\t\tdivs++\n\t}\n\n\tswitch divs {\n\tcase 0:\n\t\tconversion = fmt.Sprintf(\"%d\", size)\n\tcase 1:\n\t\tconversion = fmt.Sprintf(\"%dKB\", size)\n\tcase 2:\n\t\tconversion = fmt.Sprintf(\"%dMB\", size)\n\tcase 3:\n\t\tconversion = fmt.Sprintf(\"%dGB\", size)\n\tcase 4:\n\t\tconversion = fmt.Sprintf(\"%dTB\", size)\n\t}\n\treturn conversion\n}\n\n// archStr returns a human readable version of SIF mach architecture\nfunc archStr(arch string) string {\n\tarchMap := map[string]string{\n\t\tsif.HdrArch386:      \"386\",\n\t\tsif.HdrArchAMD64:    \"amd64\",\n\t\tsif.HdrArchARM:      \"arm\",\n\t\tsif.HdrArchARM64:    \"arm64\",", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 78, "line": "// Copyright (c) 2018, Divya Cote <divya.cote@gmail.com> All rights reserved.\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 65, "line": "// Copyright (c) 2018, Divya Cote <<EMAIL>> All rights reserved.\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 78, "chars": "// Copyright (c) 2018, Divya Cote <divya.cote@gmail.com> All rights reserved.\n"}], "added": [{"char_start": 0, "char_end": 65, "chars": "// Copyright (c) 2018, Divya Cote <<EMAIL>> All rights reserved.\n"}]}}
{"func_name": 5069, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package rsocket_test\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log\"\n\t\"time\"\n\n\t\"github.com/jjeffcaii/reactor-go/scheduler\"\n\t\"github.com/rsocket/rsocket-go\"\n\t\"github.com/rsocket/rsocket-go/payload\"\n\t\"github.com/rsocket/rsocket-go/rx\"\n\t\"github.com/rsocket/rsocket-go/rx/flux\"\n\t\"github.com/rsocket/rsocket-go/rx/mono\"\n)\n\nfunc Example() {\n\t// Serve a server\n\terr := rsocket.Receive().\n\t\tAcceptor(func(ctx context.Context, setup payload.SetupPayload, sendingSocket rsocket.CloseableRSocket) (rsocket.RSocket, error) {\n\t\t\treturn rsocket.NewAbstractSocket(\n\t\t\t\trsocket.RequestResponse(func(msg payload.Payload) mono.Mono {\n\t\t\t\t\tlog.Println(\"incoming request:\", msg)\n\t\t\t\t\treturn mono.Just(payload.NewString(\"Pong\", time.Now().String()))\n\t\t\t\t}),\n\t\t\t), nil\n\t\t}).\n\t\tTransport(rsocket.TCPServer().SetAddr(\":7878\").Build()).\n\t\tServe(context.Background())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Connect to a server.\n\tcli, err := rsocket.Connect().\n\t\tSetupPayload(payload.NewString(\"Hello World\", \"From Golang\")).\n\t\tTransport(rsocket.TCPClient().SetHostAndPort(\"127.0.0.1\", 7878).Build()).\n\t\tStart(context.Background())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer cli.Close()\n\tcli.RequestResponse(payload.NewString(\"Ping\", time.Now().String())).\n\t\tDoOnSuccess(func(elem payload.Payload) error {\n\t\t\tlog.Println(\"incoming response:\", elem)\n\t\t\treturn nil\n\t\t}).\n\t\tSubscribe(context.Background())\n}\n", "func_src_after": "package rsocket_test\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log\"\n\t\"time\"\n\n\t\"github.com/jjeffcaii/reactor-go/scheduler\"\n\t\"github.com/rsocket/rsocket-go\"\n\t\"github.com/rsocket/rsocket-go/payload\"\n\t\"github.com/rsocket/rsocket-go/rx\"\n\t\"github.com/rsocket/rsocket-go/rx/flux\"\n\t\"github.com/rsocket/rsocket-go/rx/mono\"\n)\n\nfunc Example() {\n\t// Serve a server\n\terr := rsocket.Receive().\n\t\tAcceptor(func(ctx context.Context, setup payload.SetupPayload, sendingSocket rsocket.CloseableRSocket) (rsocket.RSocket, error) {\n\t\t\treturn rsocket.NewAbstractSocket(\n\t\t\t\trsocket.RequestResponse(func(msg payload.Payload) mono.Mono {\n\t\t\t\t\tlog.Println(\"incoming request:\", msg)\n\t\t\t\t\treturn mono.Just(payload.NewString(\"Pong\", time.Now().String()))\n\t\t\t\t}),\n\t\t\t), nil\n\t\t}).\n\t\tTransport(rsocket.TCPServer().SetAddr(\":7878\").Build()).\n\t\tServe(context.Background())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Connect to a server.\n\tcli, err := rsocket.Connect().\n\t\tSetupPayload(payload.NewString(\"Hello World\", \"From Golang\")).\n\t\tTransport(rsocket.TCPClient().SetHostAndPort(\"<IP-Address>\", 7878).Build()).\n\t\tStart(context.Background())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer cli.Close()\n\tcli.RequestResponse(payload.NewString(\"Ping\", time.Now().String())).\n\t\tDoOnSuccess(func(elem payload.Payload) error {\n\t\t\tlog.Println(\"incoming response:\", elem)\n\t\t\treturn nil\n\t\t}).\n\t\tSubscribe(context.Background())\n}\n", "line_changes": {"deleted": [{"line_no": 37, "char_start": 985, "char_end": 1061, "line": "\t\tTransport(rsocket.TCPClient().SetHostAndPort(\"127.0.0.1\", 7878).Build()).\n"}], "added": [{"line_no": 38, "char_start": 985, "char_end": 1064, "line": "\t\tTransport(rsocket.TCPClient().SetHostAndPort(\"<IP-Address>\", 7878).Build()).\n"}]}, "char_changes": {"deleted": [{"char_start": 985, "char_end": 1061, "chars": "\t\tTransport(rsocket.TCPClient().SetHostAndPort(\"127.0.0.1\", 7878).Build()).\n"}], "added": [{"char_start": 985, "char_end": 1064, "chars": "\t\tTransport(rsocket.TCPClient().SetHostAndPort(\"<IP-Address>\", 7878).Build()).\n"}]}}
{"func_name": 5073, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package wol\n\nimport (\n\t\"net\"\n)\n\n// A Client is a Wake-on-LAN client which utilizes a UDP socket.  It can be\n// used to send WoL magic packets to other machines using their network\n// address.\ntype Client struct {\n\tp net.PacketConn\n}\n\n// NewClient creates a new Client which binds to any available UDP port to\n// send Wake-on-LAN magic packets.\nfunc NewClient() (*Client, error) {\n\t// Bind to any available UDP port.\n\tp, err := net.ListenPacket(\"udp\", \":0\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &Client{\n\t\tp: p,\n\t}, nil\n}\n\n// Close closes a Client's UDP socket.\nfunc (c *Client) Close() error {\n\treturn c.p.Close()\n}\n\n// Wake sends a Wake-on-LAN magic packet to an IP address for the specified\n// hardware address.\n//\n// Note that Wake sends an IP packet, and powered-down network devices\n// generally don't listen on IP addresses. In most cases, addr should be the\n// broadcast address of a subnet configured on the VLAN the target machine\n// is connected to (eg. 10.0.0.255/24). This uses the OS' routing table\n// to select an outgoing interface to send an Ethernet broadcast on.\n//\n// However, IPv6 doesn't have subnet-directed broadcasts.\n// The contents of addr are passed to net.Dial, but be aware that sending to\n// multicast addresses like ff02::1 triggers NDP solicitations before sending\n// the packet, which a powered-down device will usually not reply to.\n// Linux seems to refuse to send IPv6 packets at all to Ethernet address\n// ffff.ffff.ffff, not even when explicitly added as a neighbour entry.\n//\n// If there is no IPv4 subnet available on your target VLAN, add a small dummy\n// subnet or use a RawClient for sending raw Ethernet frames.", "func_src_after": "package wol\n\nimport (\n\t\"net\"\n)\n\n// A Client is a Wake-on-LAN client which utilizes a UDP socket.  It can be\n// used to send WoL magic packets to other machines using their network\n// address.\ntype Client struct {\n\tp net.PacketConn\n}\n\n// NewClient creates a new Client which binds to any available UDP port to\n// send Wake-on-LAN magic packets.\nfunc NewClient() (*Client, error) {\n\t// Bind to any available UDP port.\n\tp, err := net.ListenPacket(\"udp\", \":0\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &Client{\n\t\tp: p,\n\t}, nil\n}\n\n// Close closes a Client's UDP socket.\nfunc (c *Client) Close() error {\n\treturn c.p.Close()\n}\n\n// Wake sends a Wake-on-LAN magic packet to an IP address for the specified\n// hardware address.\n//\n// Note that Wake sends an IP packet, and powered-down network devices\n// generally don't listen on IP addresses. In most cases, addr should be the\n// broadcast address of a subnet configured on the VLAN the target machine\n// is connected to (eg. <IP-Address>/24). This uses the OS' routing table\n// to select an outgoing interface to send an Ethernet broadcast on.\n//\n// However, IPv6 doesn't have subnet-directed broadcasts.\n// The contents of addr are passed to net.Dial, but be aware that sending to\n// multicast addresses like <IP-Address> triggers NDP solicitations before sending\n// the packet, which a powered-down device will usually not reply to.\n// Linux seems to refuse to send IPv6 packets at all to Ethernet address\n// ffff.ffff.ffff, not even when explicitly added as a neighbour entry.\n//\n// If there is no IPv4 subnet available on your target VLAN, add a small dummy\n// subnet or use a RawClient for sending raw Ethernet frames.", "line_changes": {"deleted": [{"line_no": 39, "char_start": 950, "char_end": 1022, "line": "// is connected to (eg. 10.0.0.255/24). This uses the OS' routing table\n"}, {"line_no": 45, "char_start": 1231, "char_end": 1309, "line": "// multicast addresses like ff02::1 triggers NDP solicitations before sending\n"}], "added": [{"line_no": 40, "char_start": 950, "char_end": 1024, "line": "// is connected to (eg. <IP-Address>/24). This uses the OS' routing table\n"}, {"line_no": 46, "char_start": 1231, "char_end": 1314, "line": "// multicast addresses like <IP-Address> triggers NDP solicitations before sending\n"}]}, "char_changes": {"deleted": [{"char_start": 950, "char_end": 1022, "chars": "// is connected to (eg. 10.0.0.255/24). This uses the OS' routing table\n"}, {"char_start": 1231, "char_end": 1309, "chars": "// multicast addresses like ff02::1 triggers NDP solicitations before sending\n"}], "added": [{"char_start": 950, "char_end": 1024, "chars": "// is connected to (eg. <IP-Address>/24). This uses the OS' routing table\n"}, {"char_start": 1231, "char_end": 1314, "chars": "// multicast addresses like <IP-Address> triggers NDP solicitations before sending\n"}]}}
{"func_name": 5074, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package checkpoints\n\nimport \"github.com/TeaWeb/code/teaconst\"\n\n// all check points list\nvar AllCheckpoints = []*CheckpointDefinition{\n\t{\n\t\tName:        \"客户端地址（IP）\",\n\t\tPrefix:      \"remoteAddr\",\n\t\tDescription: \"试图通过分析X-Forwarded-For等Header获取的客户端地址，比如192.168.1.100\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRemoteAddrCheckpoint),\n\t},\n\t{\n\t\tName:        \"客户端源地址（IP）\",\n\t\tPrefix:      \"rawRemoteAddr\",\n\t\tDescription: \"直接连接的客户端地址，比如192.168.1.100\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRawRemoteAddrCheckpoint),\n\t},\n\t{\n\t\tName:        \"客户端端口\",\n\t\tPrefix:      \"remotePort\",\n\t\tDescription: \"直接连接的客户端地址端口\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRemotePortCheckpoint),\n\t},\n\t{\n\t\tName:        \"客户端用户名\",\n\t\tPrefix:      \"remoteUser\",\n\t\tDescription: \"通过BasicAuth登录的客户端用户名\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRemoteUserCheckpoint),\n\t},\n\t{\n\t\tName:        \"请求URI\",\n\t\tPrefix:      \"requestURI\",\n\t\tDescription: \"包含URL参数的请求URI，比如/hello/world?lang=go\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestURICheckpoint),\n\t},\n\t{\n\t\tName:        \"请求路径\",\n\t\tPrefix:      \"requestPath\",\n\t\tDescription: \"不包含URL参数的请求路径，比如/hello/world\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestPathCheckpoint),\n\t},\n\t{\n\t\tName:        \"请求内容长度\",", "func_src_after": "package checkpoints\n\nimport \"github.com/TeaWeb/code/teaconst\"\n\n// all check points list\nvar AllCheckpoints = []*CheckpointDefinition{\n\t{\n\t\tName:        \"客户端地址（IP）\",\n\t\tPrefix:      \"remoteAddr\",\n\t\tDescription: \"试图通过分析X-Forwarded-For等Header获取的客户端地址，比如<IP-Address>\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRemoteAddrCheckpoint),\n\t},\n\t{\n\t\tName:        \"客户端源地址（IP）\",\n\t\tPrefix:      \"rawRemoteAddr\",\n\t\tDescription: \"直接连接的客户端地址，比如<IP-Address>\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRawRemoteAddrCheckpoint),\n\t},\n\t{\n\t\tName:        \"客户端端口\",\n\t\tPrefix:      \"remotePort\",\n\t\tDescription: \"直接连接的客户端地址端口\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRemotePortCheckpoint),\n\t},\n\t{\n\t\tName:        \"客户端用户名\",\n\t\tPrefix:      \"remoteUser\",\n\t\tDescription: \"通过BasicAuth登录的客户端用户名\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestRemoteUserCheckpoint),\n\t},\n\t{\n\t\tName:        \"请求URI\",\n\t\tPrefix:      \"requestURI\",\n\t\tDescription: \"包含URL参数的请求URI，比如/hello/world?lang=go\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestURICheckpoint),\n\t},\n\t{\n\t\tName:        \"请求路径\",\n\t\tPrefix:      \"requestPath\",\n\t\tDescription: \"不包含URL参数的请求路径，比如/hello/world\",\n\t\tHasParams:   false,\n\t\tInstance:    new(RequestPathCheckpoint),\n\t},\n\t{\n\t\tName:        \"请求内容长度\",", "line_changes": {"deleted": [{"line_no": 10, "char_start": 194, "char_end": 265, "line": "\t\tDescription: \"试图通过分析X-Forwarded-For等Header获取的客户端地址，比如192.168.1.100\",\n"}, {"line_no": 18, "char_start": 403, "char_end": 448, "line": "\t\tDescription: \"直接连接的客户端地址，比如192.168.1.100\",\n"}], "added": [{"line_no": 11, "char_start": 194, "char_end": 264, "line": "\t\tDescription: \"试图通过分析X-Forwarded-For等Header获取的客户端地址，比如<IP-Address>\",\n"}, {"line_no": 19, "char_start": 403, "char_end": 447, "line": "\t\tDescription: \"直接连接的客户端地址，比如<IP-Address>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 194, "char_end": 265, "chars": "\t\tDescription: \"试图通过分析X-Forwarded-For等Header获取的客户端地址，比如192.168.1.100\",\n"}, {"char_start": 403, "char_end": 448, "chars": "\t\tDescription: \"直接连接的客户端地址，比如192.168.1.100\",\n"}], "added": [{"char_start": 194, "char_end": 264, "chars": "\t\tDescription: \"试图通过分析X-Forwarded-For等Header获取的客户端地址，比如<IP-Address>\",\n"}, {"char_start": 403, "char_end": 447, "chars": "\t\tDescription: \"直接连接的客户端地址，比如<IP-Address>\",\n"}]}}
{"func_name": 5100, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\treturn\n\t\t}\n\n\t\t// Faking allowed methods since we can't know them\n\t\tw.Header().Set(\"Allow\", \"POST, PUT, GET, OPTIONS, DELETE\")\n\t\tw.Header().Set(\"Access-Control-Allow-Methods\", \"POST, PUT, GET, OPTIONS, DELETE\")\n\t\tw.Header().Set(\"Access-Control-Allow-Headers\", \"X-Access-Token\")\n\t\tw.Header().Set(\"Access-Control-Max-Age\", \"300\")\n\t})\n}\n\ntype noopAuth struct{}\n\nfunc (n noopAuth) GetUser(r *http.Request) (*easyauth.User, error) {\n\tname := \"anonymous\"\n\tif cookie, err := r.Cookie(\"action-user\"); err == nil {\n\t\tname = cookie.Value\n\t}\n\t//everybody is an admin!\n\treturn &easyauth.User{\n\t\tAccess:   roleAdmin,\n\t\tUsername: name,\n\t\tMethod:   \"noop\",\n\t}, nil\n}\n\nfunc buildAuth(cfg *conf.AuthConf) (easyauth.AuthManager, *token.TokenProvider, error) {\n\tif cfg == nil {\n\t\tauth, err := easyauth.New()\n\t\tif err != nil {\n\t\t\treturn nil, nil, err\n\t\t}\n\t\tauth.AddProvider(\"nop\", noopAuth{})\n\t\treturn auth, nil, nil\n\t}\n\tconst defaultCookieSecret = \"CookiesAreInsecure\"\n\tif cfg.CookieSecret == \"\" {\n\t\tcfg.CookieSecret = defaultCookieSecret\n\t}\n\tauth, err := easyauth.New(easyauth.CookieSecret(cfg.CookieSecret))\n\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tif cfg.AuthDisabled {\n\t\tauth.AddProvider(\"nop\", noopAuth{})\n\t} else {\n\t\tauthEnabled = true\n\t}\n\tif cfg.LDAP.LdapAddr != \"\" {\n\t\tl, err := buildLDAPConfig(cfg.LDAP)", "func_src_after": "\t\t\treturn\n\t\t}\n\n\t\t// Faking allowed methods since we can't know them\n\t\tw.Header().Set(\"Allow\", \"POST, PUT, GET, OPTIONS, DELETE\")\n\t\tw.Header().Set(\"Access-Control-Allow-Methods\", \"POST, PUT, GET, OPTIONS, DELETE\")\n\t\tw.Header().Set(\"Access-Control-Allow-Headers\", \"X-Access-Token\")\n\t\tw.Header().Set(\"Access-Control-Max-Age\", \"300\")\n\t})\n}\n\ntype noopAuth struct{}\n\nfunc (n noopAuth) GetUser(r *http.Request) (*easyauth.User, error) {\n\tname := \"anonymous\"\n\tif cookie, err := r.Cookie(\"action-user\"); err == nil {\n\t\tname = cookie.Value\n\t}\n\t//everybody is an admin!\n\treturn &easyauth.User{\n\t\tAccess:   roleAdmin,\n\t\tUsername: name,\n\t\tMethod:   \"noop\",\n\t}, nil\n}\n\nfunc buildAuth(cfg *conf.AuthConf) (easyauth.AuthManager, *token.TokenProvider, error) {\n\tif cfg == nil {\n\t\tauth, err := easyauth.New()\n\t\tif err != nil {\n\t\t\treturn nil, nil, err\n\t\t}\n\t\tauth.AddProvider(\"nop\", noopAuth{})\n\t\treturn auth, nil, nil\n\t}\n\tconst defaultCookieSecret = \"CookiesAreInsecure\"\n\tif cfg.CookieSecret == \"\" {\n\t\tcfg.CookieSecret = defaultCookieSecret\n\t}\n\tauth, err := easyauth.New(easyauth.CookieSecret(cfg.CookieSecret))\n\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tif cfg.AuthDisabled {\n\t\tauth.AddProvider(\"nop\", noopAuth{})\n\t} else {\n\t\tauthEnabled = true\n\t}\n\tif cfg.LDAP.LdapAddr != \"\" {\n\t\tl, err := buildLDAPConfig(cfg.LDAP)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5108, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package middleware\n\nimport (\n\t\"os\"\n\t\"io\"\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/ringtail/leadership\"\n\t\"github.com/docker/libkv/store\"\n\t\"github.com/docker/libkv\"\n\t\"github.com/docker/libkv/store/etcd\"\n\t\"time\"\n\t\"go.uber.org/zap\"\n)\n\nvar DefaultErrorWriter io.Writer = os.Stderr\nvar sugar *zap.SugaredLogger\nvar isLeader, canProxy bool\nvar leaderEndpoint string\n\nfunc init() {\n\tlogger, _ := zap.NewProduction()\n\tdefer logger.Sync() // flushes buffer, if any\n\tsugar = logger.Sugar()\n\tisLeader = false\n\tcanProxy = false\n\tetcd.Register()\n\tgo participate()\n}\n\n\nfunc Election() gin.HandlerFunc {\n\treturn ElectionAndProxy(DefaultErrorWriter)\n}\n\nfunc ElectionAndProxy(out io.Writer) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tdefer func() {\n\t\t\tif isLeader {\n\n\t\t\t}else if canProxy == true {\n\n\t\t\t}\n\t\t}()\n\t\tc.Next()\n\t}\n}\n\nfunc participate() {\n\t// Create a store using pkg/store.\n\tclient, err := libkv.NewStore(store.ETCD, []string{\"127.0.0.1:2379\"}, &store.Config{})", "func_src_after": "package middleware\n\nimport (\n\t\"os\"\n\t\"io\"\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/ringtail/leadership\"\n\t\"github.com/docker/libkv/store\"\n\t\"github.com/docker/libkv\"\n\t\"github.com/docker/libkv/store/etcd\"\n\t\"time\"\n\t\"go.uber.org/zap\"\n)\n\nvar DefaultErrorWriter io.Writer = os.Stderr\nvar sugar *zap.SugaredLogger\nvar isLeader, canProxy bool\nvar leaderEndpoint string\n\nfunc init() {\n\tlogger, _ := zap.NewProduction()\n\tdefer logger.Sync() // flushes buffer, if any\n\tsugar = logger.Sugar()\n\tisLeader = false\n\tcanProxy = false\n\tetcd.Register()\n\tgo participate()\n}\n\n\nfunc Election() gin.HandlerFunc {\n\treturn ElectionAndProxy(DefaultErrorWriter)\n}\n\nfunc ElectionAndProxy(out io.Writer) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tdefer func() {\n\t\t\tif isLeader {\n\n\t\t\t}else if canProxy == true {\n\n\t\t\t}\n\t\t}()\n\t\tc.Next()\n\t}\n}\n\nfunc participate() {\n\t// Create a store using pkg/store.\n\tclient, err := libkv.NewStore(store.ETCD, []string{\"<IP-Address>:2379\"}, &store.Config{})", "line_changes": {"deleted": [{"line_no": 50, "char_start": 874, "char_end": 961, "line": "\tclient, err := libkv.NewStore(store.ETCD, []string{\"127.0.0.1:2379\"}, &store.Config{})"}], "added": [{"line_no": 51, "char_start": 874, "char_end": 964, "line": "\tclient, err := libkv.NewStore(store.ETCD, []string{\"<IP-Address>:2379\"}, &store.Config{})"}]}, "char_changes": {"deleted": [{"char_start": 874, "char_end": 961, "chars": "\tclient, err := libkv.NewStore(store.ETCD, []string{\"127.0.0.1:2379\"}, &store.Config{})"}], "added": [{"char_start": 874, "char_end": 964, "chars": "\tclient, err := libkv.NewStore(store.ETCD, []string{\"<IP-Address>:2379\"}, &store.Config{})"}]}}
{"func_name": 5110, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//\n// Copyright (C) 2019-2022 vdaas.org vald team <vald@vdaas.org>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n// Package k8s provides kubernetes control functionality\npackage k8s\n\nimport (\n\t\"github.com/vdaas/vald/internal/errgroup\"\n\t\"github.com/vdaas/vald/internal/net\"\n\t\"sigs.k8s.io/controller-runtime/pkg/manager\"\n)\n\ntype Option func(*controller) error\n\nvar defaultOptions = []Option{\n\tWithErrGroup(errgroup.Get()),\n}\n\nfunc WithErrGroup(eg errgroup.Group) Option {\n\treturn func(c *controller) error {\n\t\tif eg != nil {\n\t\t\tc.eg = eg\n\t\t}\n\t\treturn nil\n\t}\n}\n\nfunc WithControllerName(name string) Option {\n\treturn func(c *controller) error {\n\t\tc.name = name\n\t\treturn nil\n\t}\n}\n\nfunc WithResourceController(rc ResourceController) Option {\n\treturn func(c *controller) error {\n\t\tif c.rcs == nil {", "func_src_after": "//\n// Copyright (C) 2019-2022 vdaas.org vald team <<EMAIL>>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n// Package k8s provides kubernetes control functionality\npackage k8s\n\nimport (\n\t\"github.com/vdaas/vald/internal/errgroup\"\n\t\"github.com/vdaas/vald/internal/net\"\n\t\"sigs.k8s.io/controller-runtime/pkg/manager\"\n)\n\ntype Option func(*controller) error\n\nvar defaultOptions = []Option{\n\tWithErrGroup(errgroup.Get()),\n}\n\nfunc WithErrGroup(eg errgroup.Group) Option {\n\treturn func(c *controller) error {\n\t\tif eg != nil {\n\t\t\tc.eg = eg\n\t\t}\n\t\treturn nil\n\t}\n}\n\nfunc WithControllerName(name string) Option {\n\treturn func(c *controller) error {\n\t\tc.name = name\n\t\treturn nil\n\t}\n}\n\nfunc WithResourceController(rc ResourceController) Option {\n\treturn func(c *controller) error {\n\t\tif c.rcs == nil {", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 67, "line": "// Copyright (C) 2019-2022 vdaas.org vald team <vald@vdaas.org>\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 60, "line": "// Copyright (C) 2019-2022 vdaas.org vald team <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 67, "chars": "// Copyright (C) 2019-2022 vdaas.org vald team <vald@vdaas.org>\n"}], "added": [{"char_start": 3, "char_end": 60, "chars": "// Copyright (C) 2019-2022 vdaas.org vald team <<EMAIL>>\n"}]}}
{"func_name": 5118, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Package main ORY Keto\n *\n * OpenAPI spec version: Latest\n * Contact: hi@ory.am\n * Generated by: https://github.com/swagger-api/swagger-codegen.git\n */\n\npackage swagger\n\ntype Policy struct {\n\n\t// Actions impacted by the policy.\n\tActions []string `json:\"actions,omitempty\"`\n\n\t// Conditions under which the policy is active.\n\tConditions map[string]PolicyConditions `json:\"conditions,omitempty\"`\n\n\t// Description of the policy.\n\tDescription string `json:\"description,omitempty\"`\n\n\t// Effect of the policy\n\tEffect string `json:\"effect,omitempty\"`\n\n\t// ID of the policy.\n\tId string `json:\"id,omitempty\"`\n\n\t// Resources impacted by the policy.\n\tResources []string `json:\"resources,omitempty\"`\n\n\t// Subjects impacted by the policy.\n\tSubjects []string `json:\"subjects,omitempty\"`\n}\n", "func_src_after": "/*\n * Package main ORY Keto\n *\n * OpenAPI spec version: Latest\n * Contact: <EMAIL>\n * Generated by: https://github.com/swagger-api/swagger-codegen.git\n */\n\npackage swagger\n\ntype Policy struct {\n\n\t// Actions impacted by the policy.\n\tActions []string `json:\"actions,omitempty\"`\n\n\t// Conditions under which the policy is active.\n\tConditions map[string]PolicyConditions `json:\"conditions,omitempty\"`\n\n\t// Description of the policy.\n\tDescription string `json:\"description,omitempty\"`\n\n\t// Effect of the policy\n\tEffect string `json:\"effect,omitempty\"`\n\n\t// ID of the policy.\n\tId string `json:\"id,omitempty\"`\n\n\t// Resources impacted by the policy.\n\tResources []string `json:\"resources,omitempty\"`\n\n\t// Subjects impacted by the policy.\n\tSubjects []string `json:\"subjects,omitempty\"`\n}\n", "line_changes": {"deleted": [{"line_no": 5, "char_start": 63, "char_end": 85, "line": " * Contact: hi@ory.am\n"}], "added": [{"line_no": 6, "char_start": 63, "char_end": 83, "line": " * Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 63, "char_end": 85, "chars": " * Contact: hi@ory.am\n"}], "added": [{"char_start": 63, "char_end": 83, "chars": " * Contact: <EMAIL>\n"}]}}
{"func_name": 5120, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2015 CoreOS, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// etcdctlv3 is a command line application that utilizes v3 API.\npackage main\n\nimport (\n\t\"text/tabwriter\"\n\n\t\"github.com/coreos/etcd/Godeps/_workspace/src/github.com/spf13/cobra\"\n\t\"github.com/coreos/etcd/etcdctlv3/command\"\n)\n\nconst (\n\tcliName        = \"etcdctlv3\"\n\tcliDescription = \"A simple command line client for etcd3.\"\n)\n\nvar (\n\ttabOut      *tabwriter.Writer\n\tglobalFlags = command.GlobalFlags{}\n)\n\nvar (\n\trootCmd = &cobra.Command{\n\t\tUse:        cliName,\n\t\tShort:      cliDescription,\n\t\tSuggestFor: []string{\"etcctlv3\", \"etcdcltv3\", \"etlctlv3\"},\n\t}\n)\n\nfunc init() {\n\trootCmd.PersistentFlags().StringVar(&globalFlags.Endpoints, \"endpoint\", \"127.0.0.1:2378\", \"gRPC endpoint\")\n\n\trootCmd.AddCommand(\n\t\tcommand.NewRangeCommand(),\n\t\tcommand.NewPutCommand(),\n\t\tcommand.NewDeleteRangeCommand(),\n\t\tcommand.NewTxnCommand(),", "func_src_after": "// Copyright 2015 CoreOS, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// etcdctlv3 is a command line application that utilizes v3 API.\npackage main\n\nimport (\n\t\"text/tabwriter\"\n\n\t\"github.com/coreos/etcd/Godeps/_workspace/src/github.com/spf13/cobra\"\n\t\"github.com/coreos/etcd/etcdctlv3/command\"\n)\n\nconst (\n\tcliName        = \"etcdctlv3\"\n\tcliDescription = \"A simple command line client for etcd3.\"\n)\n\nvar (\n\ttabOut      *tabwriter.Writer\n\tglobalFlags = command.GlobalFlags{}\n)\n\nvar (\n\trootCmd = &cobra.Command{\n\t\tUse:        cliName,\n\t\tShort:      cliDescription,\n\t\tSuggestFor: []string{\"etcctlv3\", \"etcdcltv3\", \"etlctlv3\"},\n\t}\n)\n\nfunc init() {\n\trootCmd.PersistentFlags().StringVar(&globalFlags.Endpoints, \"endpoint\", \"<IP-Address>:2378\", \"gRPC endpoint\")\n\n\trootCmd.AddCommand(\n\t\tcommand.NewRangeCommand(),\n\t\tcommand.NewPutCommand(),\n\t\tcommand.NewDeleteRangeCommand(),\n\t\tcommand.NewTxnCommand(),", "line_changes": {"deleted": [{"line_no": 44, "char_start": 1160, "char_end": 1268, "line": "\trootCmd.PersistentFlags().StringVar(&globalFlags.Endpoints, \"endpoint\", \"127.0.0.1:2378\", \"gRPC endpoint\")\n"}], "added": [{"line_no": 45, "char_start": 1160, "char_end": 1271, "line": "\trootCmd.PersistentFlags().StringVar(&globalFlags.Endpoints, \"endpoint\", \"<IP-Address>:2378\", \"gRPC endpoint\")\n"}]}, "char_changes": {"deleted": [{"char_start": 1160, "char_end": 1268, "chars": "\trootCmd.PersistentFlags().StringVar(&globalFlags.Endpoints, \"endpoint\", \"127.0.0.1:2378\", \"gRPC endpoint\")\n"}], "added": [{"char_start": 1160, "char_end": 1271, "chars": "\trootCmd.PersistentFlags().StringVar(&globalFlags.Endpoints, \"endpoint\", \"<IP-Address>:2378\", \"gRPC endpoint\")\n"}]}}
{"func_name": 5123, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright © 2019 Ben Overmyer <ben@overmyer.net>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage cmd\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n)\n\nfunc (p Portainer) fetch(item string) string {\n\tbearerHeader := \"Bearer \" + p.token\n\trequestURL := p.URL + \"/\" + item\n\treq, err := http.NewRequest(\"GET\", requestURL, nil)\n\n\treq.Header.Set(\"Authorization\", bearerHeader)\n\n\tclient := &http.Client{}\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer resp.Body.Close()\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\n\treturn string(body)\n}\n\nfunc (p Portainer) login() string {\n\tvar data map[string]interface{}\n\n\ttoken := \"\"\n\turl := p.URL + \"/auth\"\n\n\tauthString := `{\"Username\": \"` + p.username + `\", \"Password\": \"` + p.password + `\"}`\n", "func_src_after": "// Copyright © 2019 Ben Overmyer <<EMAIL>>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage cmd\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n)\n\nfunc (p Portainer) fetch(item string) string {\n\tbearerHeader := \"Bearer \" + p.token\n\trequestURL := p.URL + \"/\" + item\n\treq, err := http.NewRequest(\"GET\", requestURL, nil)\n\n\treq.Header.Set(\"Authorization\", bearerHeader)\n\n\tclient := &http.Client{}\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer resp.Body.Close()\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\n\treturn string(body)\n}\n\nfunc (p Portainer) login() string {\n\tvar data map[string]interface{}\n\n\ttoken := \"\"\n\turl := p.URL + \"/auth\"\n\n\tauthString := `{\"Username\": \"` + p.username + `\", \"Password\": \"` + p.password + `\"}`\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 52, "line": "// Copyright © 2019 Ben Overmyer <ben@overmyer.net>\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 43, "line": "// Copyright © 2019 Ben Overmyer <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 52, "chars": "// Copyright © 2019 Ben Overmyer <ben@overmyer.net>\n"}], "added": [{"char_start": 0, "char_end": 43, "chars": "// Copyright © 2019 Ben Overmyer <<EMAIL>>\n"}]}}
{"func_name": 5148, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* \n * Copyright 2019 Communication Service/Software Laboratory, National Chiao Tung University\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Modifications Copyright 2020 Weiting Hu <zxc6752.cs03@g2.nctu.edu.tw>\n */\n\npackage nasType_test\n\nimport (\n\t\"radio_simulator/lib/nas/nasMessage\"\n\t\"radio_simulator/lib/nas/nasType\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestNasTypeNewNon3GppDeregistrationTimerValue(t *testing.T) {\n\ta := nasType.NewNon3GppDeregistrationTimerValue(nasMessage.ServiceRejectT3346ValueType)\n\tassert.NotNil(t, a)\n\n}\n\nvar nasTypeNon3GppDeregistrationTimerValueServiceRejectT3346ValueTypeTable = []NasTypeIeiData{\n\t{nasMessage.ServiceRejectT3346ValueType, nasMessage.ServiceRejectT3346ValueType},\n}\n\nfunc TestNasTypeNon3GppDeregistrationTimerValueGetSetIei(t *testing.T) {\n\ta := nasType.NewNon3GppDeregistrationTimerValue(nasMessage.ServiceRejectT3346ValueType)\n\tfor _, table := range nasTypeNon3GppDeregistrationTimerValueServiceRejectT3346ValueTypeTable {\n\t\ta.SetIei(table.in)\n\t\tassert.Equal(t, table.out, a.GetIei())\n\t}\n}\n\nvar nasTypeNon3GppDeregistrationTimerValueLenTable = []NasTypeLenuint8Data{\n\t{2, 2},\n}\n", "func_src_after": "/* \n * Copyright 2019 Communication Service/Software Laboratory, National Chiao Tung University\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Modifications Copyright 2020 Weiting Hu <<EMAIL>>\n */\n\npackage nasType_test\n\nimport (\n\t\"radio_simulator/lib/nas/nasMessage\"\n\t\"radio_simulator/lib/nas/nasType\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestNasTypeNewNon3GppDeregistrationTimerValue(t *testing.T) {\n\ta := nasType.NewNon3GppDeregistrationTimerValue(nasMessage.ServiceRejectT3346ValueType)\n\tassert.NotNil(t, a)\n\n}\n\nvar nasTypeNon3GppDeregistrationTimerValueServiceRejectT3346ValueTypeTable = []NasTypeIeiData{\n\t{nasMessage.ServiceRejectT3346ValueType, nasMessage.ServiceRejectT3346ValueType},\n}\n\nfunc TestNasTypeNon3GppDeregistrationTimerValueGetSetIei(t *testing.T) {\n\ta := nasType.NewNon3GppDeregistrationTimerValue(nasMessage.ServiceRejectT3346ValueType)\n\tfor _, table := range nasTypeNon3GppDeregistrationTimerValueServiceRejectT3346ValueTypeTable {\n\t\ta.SetIei(table.in)\n\t\tassert.Equal(t, table.out, a.GetIei())\n\t}\n}\n\nvar nasTypeNon3GppDeregistrationTimerValueLenTable = []NasTypeLenuint8Data{\n\t{2, 2},\n}\n", "line_changes": {"deleted": [{"line_no": 16, "char_start": 657, "char_end": 730, "line": " * Modifications Copyright 2020 Weiting Hu <zxc6752.cs03@g2.nctu.edu.tw>\n"}], "added": [{"line_no": 17, "char_start": 657, "char_end": 710, "line": " * Modifications Copyright 2020 Weiting Hu <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 657, "char_end": 730, "chars": " * Modifications Copyright 2020 Weiting Hu <zxc6752.cs03@g2.nctu.edu.tw>\n"}], "added": [{"char_start": 657, "char_end": 710, "chars": " * Modifications Copyright 2020 Weiting Hu <<EMAIL>>\n"}]}}
{"func_name": 5191, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\nCopyright © 2018 inwinSTACK Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage ipaddr\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestIPs(t *testing.T) {\n\ttests := []struct {\n\t\tParser *Parser\n\t\tIPs    []string\n\t}{\n\t\t{\n\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, true, true),\n\t\t\tIPs:    []string{\"172.22.132.2\", \"172.22.132.3\"},\n\t\t},\n\t\t{\n\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, true, false),\n\t\t\tIPs:    []string{\"172.22.132.1\", \"172.22.132.2\", \"172.22.132.3\"},\n\t\t},\n\t\t{\n\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, false, true),\n\t\t\tIPs:    []string{\"172.22.132.0\", \"172.22.132.2\", \"172.22.132.3\"},\n\t\t},\n\t\t{\n\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, false, false),\n\t\t\tIPs:    []string{\"172.22.132.0\", \"172.22.132.1\", \"172.22.132.2\", \"172.22.132.3\"},\n\t\t},\n\t}\n\n\tfor _, test := range tests {\n\t\tips, err := test.Parser.IPs()\n\t\tassert.Nil(t, err)", "func_src_after": "/*\nCopyright © 2018 inwinSTACK Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage ipaddr\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestIPs(t *testing.T) {\n\ttests := []struct {\n\t\tParser *Parser\n\t\tIPs    []string\n\t}{\n\t\t{\n\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, true, true),\n\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\"},\n\t\t},\n\t\t{\n\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, true, false),\n\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n\t\t},\n\t\t{\n\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, false, true),\n\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n\t\t},\n\t\t{\n\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, false, false),\n\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n\t\t},\n\t}\n\n\tfor _, test := range tests {\n\t\tips, err := test.Parser.IPs()\n\t\tassert.Nil(t, err)", "line_changes": {"deleted": [{"line_no": 31, "char_start": 734, "char_end": 797, "line": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, true, true),\n"}, {"line_no": 33, "char_start": 797, "char_end": 850, "line": "\t\t\tIPs:    []string{\"172.22.132.2\", \"172.22.132.3\"},\n"}, {"line_no": 37, "char_start": 859, "char_end": 923, "line": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, true, false),\n"}, {"line_no": 39, "char_start": 923, "char_end": 992, "line": "\t\t\tIPs:    []string{\"172.22.132.1\", \"172.22.132.2\", \"172.22.132.3\"},\n"}, {"line_no": 43, "char_start": 1001, "char_end": 1065, "line": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, false, true),\n"}, {"line_no": 45, "char_start": 1065, "char_end": 1134, "line": "\t\t\tIPs:    []string{\"172.22.132.0\", \"172.22.132.2\", \"172.22.132.3\"},\n"}, {"line_no": 49, "char_start": 1143, "char_end": 1208, "line": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, false, false),\n"}, {"line_no": 51, "char_start": 1208, "char_end": 1293, "line": "\t\t\tIPs:    []string{\"172.22.132.0\", \"172.22.132.1\", \"172.22.132.2\", \"172.22.132.3\"},\n"}], "added": [{"line_no": 32, "char_start": 734, "char_end": 797, "line": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, true, true),\n"}, {"line_no": 34, "char_start": 797, "char_end": 850, "line": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\"},\n"}, {"line_no": 38, "char_start": 859, "char_end": 923, "line": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, true, false),\n"}, {"line_no": 40, "char_start": 923, "char_end": 992, "line": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n"}, {"line_no": 44, "char_start": 1001, "char_end": 1065, "line": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, false, true),\n"}, {"line_no": 46, "char_start": 1065, "char_end": 1134, "line": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n"}, {"line_no": 50, "char_start": 1143, "char_end": 1208, "line": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, false, false),\n"}, {"line_no": 52, "char_start": 1208, "char_end": 1293, "line": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n"}]}, "char_changes": {"deleted": [{"char_start": 734, "char_end": 797, "chars": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, true, true),\n"}, {"char_start": 797, "char_end": 850, "chars": "\t\t\tIPs:    []string{\"172.22.132.2\", \"172.22.132.3\"},\n"}, {"char_start": 859, "char_end": 923, "chars": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, true, false),\n"}, {"char_start": 923, "char_end": 992, "chars": "\t\t\tIPs:    []string{\"172.22.132.1\", \"172.22.132.2\", \"172.22.132.3\"},\n"}, {"char_start": 1001, "char_end": 1065, "chars": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, false, true),\n"}, {"char_start": 1065, "char_end": 1134, "chars": "\t\t\tIPs:    []string{\"172.22.132.0\", \"172.22.132.2\", \"172.22.132.3\"},\n"}, {"char_start": 1143, "char_end": 1208, "chars": "\t\t\tParser: NewParser([]string{\"172.22.132.0/30\"}, false, false),\n"}, {"char_start": 1208, "char_end": 1293, "chars": "\t\t\tIPs:    []string{\"172.22.132.0\", \"172.22.132.1\", \"172.22.132.2\", \"172.22.132.3\"},\n"}], "added": [{"char_start": 734, "char_end": 797, "chars": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, true, true),\n"}, {"char_start": 797, "char_end": 850, "chars": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\"},\n"}, {"char_start": 859, "char_end": 923, "chars": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, true, false),\n"}, {"char_start": 923, "char_end": 992, "chars": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n"}, {"char_start": 1001, "char_end": 1065, "chars": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, false, true),\n"}, {"char_start": 1065, "char_end": 1134, "chars": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n"}, {"char_start": 1143, "char_end": 1208, "chars": "\t\t\tParser: NewParser([]string{\"<IP-Address>/30\"}, false, false),\n"}, {"char_start": 1208, "char_end": 1293, "chars": "\t\t\tIPs:    []string{\"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\", \"<IP-Address>\"},\n"}]}}
{"func_name": 5239, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "var testPublicKey = `-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwLHsIIZvkWYrexKCK08K\nyDU5uuK8mbzyzkDtK3AVZ1iHYfFV+CQZHed/56to1E9IST6VmPn9Uz5D/mjiJeJV\nbqSxAZJjfNH0WS/O8Ul+z4vWX9NLWlnHuWQUJWWGvvmkxbFBg1vf8qZi8NuCM/yN\na7GTJaA3jBK/PlZnAvw6dymtWIjTqxO7F8tawv8CHxNXyW9+Yexw/9fn8xx7ehWb\nhPHNe224A/Xn4SFCrqMikraHN64gscxhwcUCYkcwO9OcK5VKLcDqtfEs50nsjKV/\n4yoAVdO0O7+nCqM0zcfu7DzN+3m0kY/H8PaXbgp8e1BhnKZJnDKG5YafngMSHAKK\naQIDAQAB\n-----END PUBLIC KEY-----`\n\nfunc newTestTemplate(t *testing.T) *x509.Certificate {\n\tserialNumber, err := func() (*big.Int, error) {\n\t\tlimit := new(big.Int).Lsh(big.NewInt(1), 128)\n\t\treturn rand.Int(rand.Reader, limit)\n\t}()\n\trequire.Nil(t, err)\n\tsubject := pkix.Name{Organization: []string{\"Axis\"}}\n\tnotBefore := time.Now()\n\tnotAfter := notBefore.Add(365 * 24 * time.Hour)\n\tkeyUsage := x509.KeyUsageKeyEncipherment |\n\t\tx509.KeyUsageDigitalSignature |\n\t\tx509.KeyUsageCertSign\n\textKeyUsage := []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth}\n\ttemplate := x509.Certificate{\n\t\tSerialNumber:          serialNumber,\n\t\tSubject:               subject,\n\t\tNotBefore:             notBefore,\n\t\tNotAfter:              notAfter,\n\t\tKeyUsage:              keyUsage,\n\t\tExtKeyUsage:           extKeyUsage,\n\t\tBasicConstraintsValid: true,\n\t\tIsCA:                  true,\n\t}\n\tfor _, s := range []string{\"127.0.0.1\", \"::1\"} {\n\t\tif ip := net.ParseIP(s); ip != nil {\n\t\t\ttemplate.IPAddresses = append(template.IPAddresses, ip)\n\t\t}\n\t}\n\tfor _, name := range []string{\"helloworld.com\"} {\n\t\ttemplate.DNSNames = append(template.DNSNames, name)\n\t}\n\treturn &template\n}\n\nfunc TestCertPemToRsaPublicKey(t *testing.T) {\n\ttemplate := newTestTemplate(t)\n\tpublicKey, err := algorithms.AlgorithmRS256.PublicKey([]byte(testPublicKey))\n\trequire.Nil(t, err)\n\tprivateKey, err := algorithms.AlgorithmRS256.PrivateKey([]byte(testPrivateKey))\n\tder, err := x509.CreateCertificate(", "func_src_after": "var testPublicKey = `-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwLHsIIZvkWYrexKCK08K\nyDU5uuK8mbzyzkDtK3AVZ1iHYfFV+CQZHed/56to1E9IST6VmPn9Uz5D/mjiJeJV\nbqSxAZJjfNH0WS/O8Ul+z4vWX9NLWlnHuWQUJWWGvvmkxbFBg1vf8qZi8NuCM/yN\na7GTJaA3jBK/PlZnAvw6dymtWIjTqxO7F8tawv8CHxNXyW9+Yexw/9fn8xx7ehWb\nhPHNe224A/Xn4SFCrqMikraHN64gscxhwcUCYkcwO9OcK5VKLcDqtfEs50nsjKV/\n4yoAVdO0O7+nCqM0zcfu7DzN+3m0kY/H8PaXbgp8e1BhnKZJnDKG5YafngMSHAKK\naQIDAQAB\n-----END PUBLIC KEY-----`\n\nfunc newTestTemplate(t *testing.T) *x509.Certificate {\n\tserialNumber, err := func() (*big.Int, error) {\n\t\tlimit := new(big.Int).Lsh(big.NewInt(1), 128)\n\t\treturn rand.Int(rand.Reader, limit)\n\t}()\n\trequire.Nil(t, err)\n\tsubject := pkix.Name{Organization: []string{\"Axis\"}}\n\tnotBefore := time.Now()\n\tnotAfter := notBefore.Add(365 * 24 * time.Hour)\n\tkeyUsage := x509.KeyUsageKeyEncipherment |\n\t\tx509.KeyUsageDigitalSignature |\n\t\tx509.KeyUsageCertSign\n\textKeyUsage := []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth}\n\ttemplate := x509.Certificate{\n\t\tSerialNumber:          serialNumber,\n\t\tSubject:               subject,\n\t\tNotBefore:             notBefore,\n\t\tNotAfter:              notAfter,\n\t\tKeyUsage:              keyUsage,\n\t\tExtKeyUsage:           extKeyUsage,\n\t\tBasicConstraintsValid: true,\n\t\tIsCA:                  true,\n\t}\n\tfor _, s := range []string{\"<IP-Address>\", \"<IP-Address>\"} {\n\t\tif ip := net.ParseIP(s); ip != nil {\n\t\t\ttemplate.IPAddresses = append(template.IPAddresses, ip)\n\t\t}\n\t}\n\tfor _, name := range []string{\"helloworld.com\"} {\n\t\ttemplate.DNSNames = append(template.DNSNames, name)\n\t}\n\treturn &template\n}\n\nfunc TestCertPemToRsaPublicKey(t *testing.T) {\n\ttemplate := newTestTemplate(t)\n\tpublicKey, err := algorithms.AlgorithmRS256.PublicKey([]byte(testPublicKey))\n\trequire.Nil(t, err)\n\tprivateKey, err := algorithms.AlgorithmRS256.PrivateKey([]byte(testPrivateKey))\n\tder, err := x509.CreateCertificate(", "line_changes": {"deleted": [{"line_no": 34, "char_start": 1296, "char_end": 1346, "line": "\tfor _, s := range []string{\"127.0.0.1\", \"::1\"} {\n"}], "added": [{"line_no": 35, "char_start": 1296, "char_end": 1358, "line": "\tfor _, s := range []string{\"<IP-Address>\", \"<IP-Address>\"} {\n"}]}, "char_changes": {"deleted": [{"char_start": 1296, "char_end": 1346, "chars": "\tfor _, s := range []string{\"127.0.0.1\", \"::1\"} {\n"}], "added": [{"char_start": 1296, "char_end": 1358, "chars": "\tfor _, s := range []string{\"<IP-Address>\", \"<IP-Address>\"} {\n"}]}}
{"func_name": 5240, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package v1beta1_test\n\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"testing\"\n\n\t\"github.com/google/uuid\"\n\t\"github.com/odpf/salt/log\"\n\t\"github.com/stretchr/testify/assert\"\n\n\tv1 \"github.com/odpf/optimus/api/handler/v1beta1\"\n\tpb \"github.com/odpf/optimus/api/proto/odpf/optimus/core/v1beta1\"\n\t\"github.com/odpf/optimus/mock\"\n\t\"github.com/odpf/optimus/models\"\n\t\"github.com/odpf/optimus/service\"\n)\n\nfunc TestSecretManagementOnRuntimeServer(t *testing.T) {\n\tctx := context.Background()\n\n\tprojectName := \"a-data-project\"\n\n\tprojectSpec := models.ProjectSpec{\n\t\tName: projectName,\n\t\tConfig: map[string]string{\n\t\t\t\"BUCKET\": \"gs://some_folder\",\n\t\t},\n\t}\n\n\tnamespaceSpec := models.NamespaceSpec{\n\t\tID:   uuid.New(),\n\t\tName: \"dev-test-namespace-1\",\n\t\tConfig: map[string]string{\n\t\t\t\"bucket\": \"gs://some_folder\",\n\t\t},\n\t\tProjectSpec: projectSpec,\n\t}\n\n\tt.Run(\"RegisterSecret\", func(t *testing.T) {\n\t\tt.Run(\"should return error when secret is empty\", func(t *testing.T) {\n\t\t\tsecretServiceServer := createTestSecretServiceServer(nil)\n\n\t\t\tsecretRequest := pb.RegisterSecretRequest{\n\t\t\t\tProjectName:   projectSpec.Name,\n\t\t\t\tSecretName:    \"hello\",\n\t\t\t\tValue:         \"\",\n\t\t\t\tNamespaceName: namespaceSpec.Name,\n\t\t\t}", "func_src_after": "package v1beta1_test\n\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"testing\"\n\n\t\"github.com/google/uuid\"\n\t\"github.com/odpf/salt/log\"\n\t\"github.com/stretchr/testify/assert\"\n\n\tv1 \"github.com/odpf/optimus/api/handler/v1beta1\"\n\tpb \"github.com/odpf/optimus/api/proto/odpf/optimus/core/v1beta1\"\n\t\"github.com/odpf/optimus/mock\"\n\t\"github.com/odpf/optimus/models\"\n\t\"github.com/odpf/optimus/service\"\n)\n\nfunc TestSecretManagementOnRuntimeServer(t *testing.T) {\n\tctx := context.Background()\n\n\tprojectName := \"a-data-project\"\n\n\tprojectSpec := models.ProjectSpec{\n\t\tName: projectName,\n\t\tConfig: map[string]string{\n\t\t\t\"BUCKET\": \"gs://some_folder\",\n\t\t},\n\t}\n\n\tnamespaceSpec := models.NamespaceSpec{\n\t\tID:   uuid.New(),\n\t\tName: \"dev-test-namespace-1\",\n\t\tConfig: map[string]string{\n\t\t\t\"bucket\": \"gs://some_folder\",\n\t\t},\n\t\tProjectSpec: projectSpec,\n\t}\n\n\tt.Run(\"RegisterSecret\", func(t *testing.T) {\n\t\tt.Run(\"should return error when secret is empty\", func(t *testing.T) {\n\t\t\tsecretServiceServer := createTestSecretServiceServer(nil)\n\n\t\t\tsecretRequest := pb.RegisterSecretRequest{\n\t\t\t\tProjectName:   projectSpec.Name,\n\t\t\t\tSecretName:    \"hello\",\n\t\t\t\tValue:         \"\",\n\t\t\t\tNamespaceName: namespaceSpec.Name,\n\t\t\t}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5242, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t\tValue: \"world\",\n\t\t\t}\n\n\t\t\tsecretService := new(mock.SecretService)\n\t\t\tsecretService.On(\"Save\", ctx, projectSpec.Name, namespaceSpec.Name, sec).\n\t\t\t\tReturn(errors.New(\"error while saving secret\"))\n\t\t\tdefer secretService.AssertExpectations(t)\n\n\t\t\tsecretServiceServer := createTestSecretServiceServer(secretService)\n\n\t\t\tsecretRequest := pb.RegisterSecretRequest{\n\t\t\t\tProjectName:   projectSpec.Name,\n\t\t\t\tNamespaceName: namespaceSpec.Name,\n\t\t\t\tSecretName:    \"hello\",\n\t\t\t\tValue:         base64.StdEncoding.EncodeToString([]byte(\"world\")),\n\t\t\t}\n\t\t\tresp, err := secretServiceServer.RegisterSecret(ctx, &secretRequest)\n\t\t\tassert.Nil(t, resp)\n\t\t\tassert.Equal(t, \"rpc error: code = Internal desc = error while saving secret: failed to register secret hello\", err.Error())\n\t\t})\n\t})\n\n\tt.Run(\"UpdateSecret\", func(t *testing.T) {\n\t\tt.Run(\"should update a secret successfully\", func(t *testing.T) {\n\t\t\tsec := models.ProjectSecretItem{\n\t\t\t\tName:  \"hello\",\n\t\t\t\tValue: \"world\",\n\t\t\t}\n\n\t\t\tsecretService := new(mock.SecretService)\n\t\t\tsecretService.On(\"Update\", ctx, projectSpec.Name, namespaceSpec.Name, sec).Return(nil)\n\t\t\tdefer secretService.AssertExpectations(t)\n\n\t\t\tsecretServiceServer := createTestSecretServiceServer(secretService)\n\n\t\t\tsecretRequest := pb.UpdateSecretRequest{\n\t\t\t\tProjectName:   projectSpec.Name,\n\t\t\t\tSecretName:    \"hello\",\n\t\t\t\tValue:         base64.StdEncoding.EncodeToString([]byte(\"world\")),\n\t\t\t\tNamespaceName: namespaceSpec.Name,\n\t\t\t}\n\t\t\tresp, err := secretServiceServer.UpdateSecret(ctx, &secretRequest)\n\t\t\tassert.Nil(t, err)\n\t\t\tassert.Equal(t, &pb.UpdateSecretResponse{}, resp)\n\t\t})\n\n\t\tt.Run(\"should return error if updating to secret repository fails\", func(t *testing.T) {\n\t\t\tsec := models.ProjectSecretItem{\n\t\t\t\tName:  \"hello\",\n\t\t\t\tValue: \"world\",", "func_src_after": "\t\t\t\tValue: \"world\",\n\t\t\t}\n\n\t\t\tsecretService := new(mock.SecretService)\n\t\t\tsecretService.On(\"Save\", ctx, projectSpec.Name, namespaceSpec.Name, sec).\n\t\t\t\tReturn(errors.New(\"error while saving secret\"))\n\t\t\tdefer secretService.AssertExpectations(t)\n\n\t\t\tsecretServiceServer := createTestSecretServiceServer(secretService)\n\n\t\t\tsecretRequest := pb.RegisterSecretRequest{\n\t\t\t\tProjectName:   projectSpec.Name,\n\t\t\t\tNamespaceName: namespaceSpec.Name,\n\t\t\t\tSecretName:    \"hello\",\n\t\t\t\tValue:         base64.StdEncoding.EncodeToString([]byte(\"world\")),\n\t\t\t}\n\t\t\tresp, err := secretServiceServer.RegisterSecret(ctx, &secretRequest)\n\t\t\tassert.Nil(t, resp)\n\t\t\tassert.Equal(t, \"rpc error: code = Internal desc = error while saving secret: failed to register secret hello\", err.Error())\n\t\t})\n\t})\n\n\tt.Run(\"UpdateSecret\", func(t *testing.T) {\n\t\tt.Run(\"should update a secret successfully\", func(t *testing.T) {\n\t\t\tsec := models.ProjectSecretItem{\n\t\t\t\tName:  \"hello\",\n\t\t\t\tValue: \"world\",\n\t\t\t}\n\n\t\t\tsecretService := new(mock.SecretService)\n\t\t\tsecretService.On(\"Update\", ctx, projectSpec.Name, namespaceSpec.Name, sec).Return(nil)\n\t\t\tdefer secretService.AssertExpectations(t)\n\n\t\t\tsecretServiceServer := createTestSecretServiceServer(secretService)\n\n\t\t\tsecretRequest := pb.UpdateSecretRequest{\n\t\t\t\tProjectName:   projectSpec.Name,\n\t\t\t\tSecretName:    \"hello\",\n\t\t\t\tValue:         base64.StdEncoding.EncodeToString([]byte(\"world\")),\n\t\t\t\tNamespaceName: namespaceSpec.Name,\n\t\t\t}\n\t\t\tresp, err := secretServiceServer.UpdateSecret(ctx, &secretRequest)\n\t\t\tassert.Nil(t, err)\n\t\t\tassert.Equal(t, &pb.UpdateSecretResponse{}, resp)\n\t\t})\n\n\t\tt.Run(\"should return error if updating to secret repository fails\", func(t *testing.T) {\n\t\t\tsec := models.ProjectSecretItem{\n\t\t\t\tName:  \"hello\",\n\t\t\t\tValue: \"world\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5249, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n   Copyright @ 2021 bocloud <fushaosong@beyondcent.com>.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\npackage driver\n\nimport (\n\t\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/carina-io/carina/pkg/csidriver/driver/k8s\"\n\t\"github.com/carina-io/carina/pkg/version\"\n\t\"github.com/carina-io/carina/utils\"\n\t\"github.com/carina-io/carina/utils/log\"\n\t\"github.com/carina-io/carina/utils/mutx\"\n\t\"github.com/container-storage-interface/spec/lib/go/csi\"\n\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n)\n\n// NewControllerService returns a new ControllerServer.\nfunc NewControllerService(lvService *k8s.LogicVolumeService, nodeService *k8s.NodeService) csi.ControllerServer {\n\treturn &controllerService{lvService: lvService, nodeService: nodeService, mutex: mutx.NewGlobalLocks()}\n}\n\ntype controllerService struct {\n\tcsi.UnimplementedControllerServer\n\tmutex *mutx.GlobalLocks\n\n\tlvService   *k8s.LogicVolumeService\n\tnodeService *k8s.NodeService\n}", "func_src_after": "/*\n   Copyright @ 2021 bocloud <<EMAIL>>.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\npackage driver\n\nimport (\n\t\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/carina-io/carina/pkg/csidriver/driver/k8s\"\n\t\"github.com/carina-io/carina/pkg/version\"\n\t\"github.com/carina-io/carina/utils\"\n\t\"github.com/carina-io/carina/utils/log\"\n\t\"github.com/carina-io/carina/utils/mutx\"\n\t\"github.com/container-storage-interface/spec/lib/go/csi\"\n\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n)\n\n// NewControllerService returns a new ControllerServer.\nfunc NewControllerService(lvService *k8s.LogicVolumeService, nodeService *k8s.NodeService) csi.ControllerServer {\n\treturn &controllerService{lvService: lvService, nodeService: nodeService, mutex: mutx.NewGlobalLocks()}\n}\n\ntype controllerService struct {\n\tcsi.UnimplementedControllerServer\n\tmutex *mutx.GlobalLocks\n\n\tlvService   *k8s.LogicVolumeService\n\tnodeService *k8s.NodeService\n}", "line_changes": {"deleted": [{"line_no": 2, "char_start": 3, "char_end": 60, "line": "   Copyright @ 2021 bocloud <fushaosong@beyondcent.com>.\n"}], "added": [{"line_no": 3, "char_start": 3, "char_end": 42, "line": "   Copyright @ 2021 bocloud <<EMAIL>>.\n"}]}, "char_changes": {"deleted": [{"char_start": 3, "char_end": 60, "chars": "   Copyright @ 2021 bocloud <fushaosong@beyondcent.com>.\n"}], "added": [{"char_start": 3, "char_end": 42, "chars": "   Copyright @ 2021 bocloud <<EMAIL>>.\n"}]}}
{"func_name": 5251, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package geocodio_test\n\nimport (\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/JimS-wex/geocodio\"\n)\n\nconst (\n\tDefaultAPIKey = \"YOUR_API_KEY\"\n\n\tAddressTestOneFull       = \"42370 Bob Hope Dr, Rancho Mirage, CA 92270\"\n\tAddressTestOneWithoutZip = \"42370 Bob Hope Dr, Rancho Mirage, CA\"\n\tAddressTestOneNumber     = \"42370\"\n\tAddressTestOneStreet     = \"Bob Hope Dr\"\n\tAddressTestOneCity       = \"Rancho Mirage\"\n\tAddressTestOneState      = \"CA\"\n\tAddressTestOneZip        = \"92270\"\n\tAddressTestOneLatitude   = 33.73865\n\tAddressTestOneLongitude  = -116.407153\n\n\tAddressTestTwoFull       = \"500 H St NE, Washington, DC 20002\"\n\tAddressTestTwoWithoutZip = \"500 H St NE, Washington, DC\"\n\tAddressTestTwoNumber     = \"500\"\n\tAddressTestTwoStreet     = \"H St NE\"\n\tAddressTestTwoCity       = \"Washington\"\n\tAddressTestTwoState      = \"DC\"\n\tAddressTestTwoLatitude   = 35.9746000\n\tAddressTestTwoLongitude  = -77.9658000\n)\n\nfunc APIKey() string {\n\tif DefaultAPIKey != \"YOUR_API_KEY\" {\n\t\treturn DefaultAPIKey\n\t}\n\treturn os.Getenv(\"API_KEY\")\n}\n\nfunc TestGeocodioWithApiKey(t *testing.T) {\n\t_, err := geocodio.NewGeocodio(APIKey())\n\tif err != nil {\n\t\tt.Error(\"Failed with API KEY set.\", err)\n\t}\n}\n\nfunc TestGeocodioWithoutApiKey(t *testing.T) {\n\t_, err := geocodio.NewGeocodio(\"\")\n\tif err == nil {\n\t\tt.Error(\"Did not through error when omitting API KEY\")", "func_src_after": "package geocodio_test\n\nimport (\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/JimS-wex/geocodio\"\n)\n\nconst (\n\tDefaultAPIKey = \"YOUR_API_KEY\"\n\n\tAddressTestOneFull       = \"42370 Bob Hope Dr, Rancho Mirage, CA 92270\"\n\tAddressTestOneWithoutZip = \"42370 Bob Hope Dr, Rancho Mirage, CA\"\n\tAddressTestOneNumber     = \"42370\"\n\tAddressTestOneStreet     = \"Bob Hope Dr\"\n\tAddressTestOneCity       = \"Rancho Mirage\"\n\tAddressTestOneState      = \"CA\"\n\tAddressTestOneZip        = \"92270\"\n\tAddressTestOneLatitude   = 33.73865\n\tAddressTestOneLongitude  = -116.407153\n\n\tAddressTestTwoFull       = \"500 H St NE, Washington, DC 20002\"\n\tAddressTestTwoWithoutZip = \"500 H St NE, Washington, DC\"\n\tAddressTestTwoNumber     = \"500\"\n\tAddressTestTwoStreet     = \"H St NE\"\n\tAddressTestTwoCity       = \"Washington\"\n\tAddressTestTwoState      = \"DC\"\n\tAddressTestTwoLatitude   = 35.9746000\n\tAddressTestTwoLongitude  = -77.9658000\n)\n\nfunc APIKey() string {\n\tif DefaultAPIKey != \"YOUR_API_KEY\" {\n\t\treturn DefaultAPIKey\n\t}\n\treturn os.Getenv(\"API_KEY\")\n}\n\nfunc TestGeocodioWithApiKey(t *testing.T) {\n\t_, err := geocodio.NewGeocodio(APIKey())\n\tif err != nil {\n\t\tt.Error(\"Failed with API KEY set.\", err)\n\t}\n}\n\nfunc TestGeocodioWithoutApiKey(t *testing.T) {\n\t_, err := geocodio.NewGeocodio(\"\")\n\tif err == nil {\n\t\tt.Error(\"Did not through error when omitting API KEY\")", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5254, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\treturn net.JoinHostPort(addr, port)\n}\n\nfunc (ni *NodeInfo) cqlAddr(fallback string) string {\n\tconst ipv4Zero, ipv6Zero = \"0.0.0.0\", \"::0\"\n\n\tif ni.BroadcastRPCAddress != \"\" {\n\t\treturn ni.BroadcastRPCAddress\n\t}\n\tif ni.RPCAddress != \"\" {\n\t\tif ni.RPCAddress == ipv4Zero || ni.RPCAddress == ipv6Zero {\n\t\t\treturn fallback\n\t\t}\n\t\treturn ni.RPCAddress\n\t}\n\tif ni.ListenAddress == ipv4Zero || ni.ListenAddress == ipv6Zero {\n\t\treturn fallback\n\t}\n\n\treturn ni.ListenAddress\n}\n\n// CQLPort returns CQL port from NodeInfo.\n// `fallbackAddress` argument is needed for Scylla bug workaround, see CQLAddr for description.\nfunc (ni *NodeInfo) CQLPort(fallbackAddress string) string {\n\tif ni.ClientEncryptionEnabled {\n\t\t// Scylla API always returns non-empty NativeTransportPortSSL even when\n\t\t// value is explicitly disabled in configuration file.\n\t\t// This makes impossible to determine which port is being used for CQL\n\t\t// frontend. To workaround it, we try to dial SSL port when\n\t\t// client encryption is enabled. If any error happens, assume this port\n\t\t// is not used.\n\t\t// Ref: https://github.com/scylladb/scylla/issues/7206\n\n\t\td := &net.Dialer{\n\t\t\tTimeout: time.Second,\n\t\t}\n\t\taddr := net.JoinHostPort(ni.cqlAddr(fallbackAddress), ni.NativeTransportPortSsl)\n\t\tc, err := d.Dial(\"tcp\", addr)\n\t\tif err != nil {\n\t\t\treturn ni.NativeTransportPort\n\t\t}\n\t\tdefer c.Close()\n\t\treturn ni.NativeTransportPortSsl\n\t}\n\treturn ni.NativeTransportPort\n}\n\n// AlternatorEnabled returns if Alternator is enabled on host.\nfunc (ni *NodeInfo) AlternatorEnabled() bool {", "func_src_after": "\treturn net.JoinHostPort(addr, port)\n}\n\nfunc (ni *NodeInfo) cqlAddr(fallback string) string {\n\tconst ipv4Zero, ipv6Zero = \"<IP-Address>\", \"<IP-Address>\"\n\n\tif ni.BroadcastRPCAddress != \"\" {\n\t\treturn ni.BroadcastRPCAddress\n\t}\n\tif ni.RPCAddress != \"\" {\n\t\tif ni.RPCAddress == ipv4Zero || ni.RPCAddress == ipv6Zero {\n\t\t\treturn fallback\n\t\t}\n\t\treturn ni.RPCAddress\n\t}\n\tif ni.ListenAddress == ipv4Zero || ni.ListenAddress == ipv6Zero {\n\t\treturn fallback\n\t}\n\n\treturn ni.ListenAddress\n}\n\n// CQLPort returns CQL port from NodeInfo.\n// `fallbackAddress` argument is needed for Scylla bug workaround, see CQLAddr for description.\nfunc (ni *NodeInfo) CQLPort(fallbackAddress string) string {\n\tif ni.ClientEncryptionEnabled {\n\t\t// Scylla API always returns non-empty NativeTransportPortSSL even when\n\t\t// value is explicitly disabled in configuration file.\n\t\t// This makes impossible to determine which port is being used for CQL\n\t\t// frontend. To workaround it, we try to dial SSL port when\n\t\t// client encryption is enabled. If any error happens, assume this port\n\t\t// is not used.\n\t\t// Ref: https://github.com/scylladb/scylla/issues/7206\n\n\t\td := &net.Dialer{\n\t\t\tTimeout: time.Second,\n\t\t}\n\t\taddr := net.JoinHostPort(ni.cqlAddr(fallbackAddress), ni.NativeTransportPortSsl)\n\t\tc, err := d.Dial(\"tcp\", addr)\n\t\tif err != nil {\n\t\t\treturn ni.NativeTransportPort\n\t\t}\n\t\tdefer c.Close()\n\t\treturn ni.NativeTransportPortSsl\n\t}\n\treturn ni.NativeTransportPort\n}\n\n// AlternatorEnabled returns if Alternator is enabled on host.\nfunc (ni *NodeInfo) AlternatorEnabled() bool {", "line_changes": {"deleted": [{"line_no": 5, "char_start": 94, "char_end": 139, "line": "\tconst ipv4Zero, ipv6Zero = \"0.0.0.0\", \"::0\"\n"}], "added": [{"line_no": 6, "char_start": 94, "char_end": 153, "line": "\tconst ipv4Zero, ipv6Zero = \"<IP-Address>\", \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 94, "char_end": 139, "chars": "\tconst ipv4Zero, ipv6Zero = \"0.0.0.0\", \"::0\"\n"}], "added": [{"char_start": 94, "char_end": 153, "chars": "\tconst ipv4Zero, ipv6Zero = \"<IP-Address>\", \"<IP-Address>\"\n"}]}}
{"func_name": 5255, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\treturn (ni.AlternatorHTTPSPort != \"0\" && ni.AlternatorHTTPSPort != \"\") ||\n\t\t(ni.AlternatorPort != \"0\" && ni.AlternatorPort != \"\")\n}\n\n// AlternatorEncryptionEnabled returns if Alternator uses encrypted traffic.\nfunc (ni *NodeInfo) AlternatorEncryptionEnabled() bool {\n\treturn ni.AlternatorHTTPSPort != \"0\" && ni.AlternatorHTTPSPort != \"\"\n}\n\n// SupportsAlternatorQuery returns if Alternator supports querying system tables.\nfunc (ni NodeInfo) SupportsAlternatorQuery() (bool, error) {\n\t// Detect master builds\n\tif scyllaversion.MasterVersion(ni.ScyllaVersion) {\n\t\treturn true, nil\n\t}\n\n\tsupports, err := scyllaversion.CheckConstraint(ni.ScyllaVersion, \">= 4.1, < 2000\")\n\tif err != nil {\n\t\treturn false, errors.Errorf(\"Unsupported Scylla version: %s\", ni.ScyllaVersion)\n\t}\n\n\treturn supports, nil\n}\n\n// AlternatorAddr returns Alternator address from NodeInfo.\n// It chooses right address and port based on information stored in NodeInfo.\n// HTTPS port has preference over HTTP.\n// `fallback` argument is used in case alternator_addresses is zero address.\nfunc (ni *NodeInfo) AlternatorAddr(fallback string) string {\n\tconst ipv4Zero, ipv6Zero = \"0.0.0.0\", \"::0\"\n\n\tu := url.URL{\n\t\tScheme: \"http\",\n\t}\n\n\tport := ni.AlternatorPort\n\tif ni.AlternatorHTTPSPort != \"\" && ni.AlternatorHTTPSPort != \"0\" {\n\t\tport = ni.AlternatorHTTPSPort\n\t\tu.Scheme = \"https\"\n\t}\n\tif ni.AlternatorAddress != \"\" {\n\t\tif ni.AlternatorAddress == ipv4Zero || ni.AlternatorAddress == ipv6Zero {\n\t\t\tu.Host = net.JoinHostPort(fallback, port)\n\t\t} else {\n\t\t\tu.Host = net.JoinHostPort(ni.AlternatorAddress, port)\n\t\t}\n\t} else {\n\t\tu.Host = net.JoinHostPort(fallback, port)\n\t}\n", "func_src_after": "\treturn (ni.AlternatorHTTPSPort != \"0\" && ni.AlternatorHTTPSPort != \"\") ||\n\t\t(ni.AlternatorPort != \"0\" && ni.AlternatorPort != \"\")\n}\n\n// AlternatorEncryptionEnabled returns if Alternator uses encrypted traffic.\nfunc (ni *NodeInfo) AlternatorEncryptionEnabled() bool {\n\treturn ni.AlternatorHTTPSPort != \"0\" && ni.AlternatorHTTPSPort != \"\"\n}\n\n// SupportsAlternatorQuery returns if Alternator supports querying system tables.\nfunc (ni NodeInfo) SupportsAlternatorQuery() (bool, error) {\n\t// Detect master builds\n\tif scyllaversion.MasterVersion(ni.ScyllaVersion) {\n\t\treturn true, nil\n\t}\n\n\tsupports, err := scyllaversion.CheckConstraint(ni.ScyllaVersion, \">= 4.1, < 2000\")\n\tif err != nil {\n\t\treturn false, errors.Errorf(\"Unsupported Scylla version: %s\", ni.ScyllaVersion)\n\t}\n\n\treturn supports, nil\n}\n\n// AlternatorAddr returns Alternator address from NodeInfo.\n// It chooses right address and port based on information stored in NodeInfo.\n// HTTPS port has preference over HTTP.\n// `fallback` argument is used in case alternator_addresses is zero address.\nfunc (ni *NodeInfo) AlternatorAddr(fallback string) string {\n\tconst ipv4Zero, ipv6Zero = \"<IP-Address>\", \"<IP-Address>\"\n\n\tu := url.URL{\n\t\tScheme: \"http\",\n\t}\n\n\tport := ni.AlternatorPort\n\tif ni.AlternatorHTTPSPort != \"\" && ni.AlternatorHTTPSPort != \"0\" {\n\t\tport = ni.AlternatorHTTPSPort\n\t\tu.Scheme = \"https\"\n\t}\n\tif ni.AlternatorAddress != \"\" {\n\t\tif ni.AlternatorAddress == ipv4Zero || ni.AlternatorAddress == ipv6Zero {\n\t\t\tu.Host = net.JoinHostPort(fallback, port)\n\t\t} else {\n\t\t\tu.Host = net.JoinHostPort(ni.AlternatorAddress, port)\n\t\t}\n\t} else {\n\t\tu.Host = net.JoinHostPort(fallback, port)\n\t}\n", "line_changes": {"deleted": [{"line_no": 30, "char_start": 1112, "char_end": 1157, "line": "\tconst ipv4Zero, ipv6Zero = \"0.0.0.0\", \"::0\"\n"}], "added": [{"line_no": 31, "char_start": 1112, "char_end": 1171, "line": "\tconst ipv4Zero, ipv6Zero = \"<IP-Address>\", \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 1112, "char_end": 1157, "chars": "\tconst ipv4Zero, ipv6Zero = \"0.0.0.0\", \"::0\"\n"}], "added": [{"char_start": 1112, "char_end": 1171, "chars": "\tconst ipv4Zero, ipv6Zero = \"<IP-Address>\", \"<IP-Address>\"\n"}]}}
{"func_name": 5257, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t},\n\t\t{\n\t\t\t\"\",\n\t\t\t\"test\",\n\t\t\t\"\",\n\t\t\t&Server{\n\t\t\t\tName:    \"test\",\n\t\t\t\tAddress: \"127.0.0.1:2222\",\n\t\t\t\tUser:    \"mole_test\",\n\t\t\t\tKey:     k1,\n\t\t\t},\n\t\t\tnil,\n\t\t},\n\t\t{\n\t\t\t\"\",\n\t\t\t\"test.something\",\n\t\t\t\"\",\n\t\t\t&Server{\n\t\t\t\tName:    \"test.something\",\n\t\t\t\tAddress: \"172.17.0.1:2223\",\n\t\t\t\tUser:    \"mole_test2\",\n\t\t\t\tKey:     k2,\n\t\t\t},\n\t\t\tnil,\n\t\t},\n\t\t{\n\t\t\t\"mole_user\",\n\t\t\t\"test:3333\",\n\t\t\t\"testdata/.ssh/other_key\",\n\t\t\t&Server{\n\t\t\t\tName:    \"test\",\n\t\t\t\tAddress: \"127.0.0.1:3333\",\n\t\t\t\tUser:    \"mole_user\",\n\t\t\t\tKey:     k2,\n\t\t\t},\n\t\t\tnil,\n\t\t},\n\t\t{\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\tnil,\n\t\t\terrors.New(HostMissing),\n\t\t},\n\t}\n\n\tfor _, test := range tests {\n\t\ts, err := NewServer(test.user, test.address, test.key)\n\t\tif err != nil {\n\t\t\tif test.expectedError != nil {", "func_src_after": "\t\t},\n\t\t{\n\t\t\t\"\",\n\t\t\t\"test\",\n\t\t\t\"\",\n\t\t\t&Server{\n\t\t\t\tName:    \"test\",\n\t\t\t\tAddress: \"<IP-Address>:2222\",\n\t\t\t\tUser:    \"mole_test\",\n\t\t\t\tKey:     k1,\n\t\t\t},\n\t\t\tnil,\n\t\t},\n\t\t{\n\t\t\t\"\",\n\t\t\t\"test.something\",\n\t\t\t\"\",\n\t\t\t&Server{\n\t\t\t\tName:    \"test.something\",\n\t\t\t\tAddress: \"<IP-Address>:2223\",\n\t\t\t\tUser:    \"mole_test2\",\n\t\t\t\tKey:     k2,\n\t\t\t},\n\t\t\tnil,\n\t\t},\n\t\t{\n\t\t\t\"mole_user\",\n\t\t\t\"test:3333\",\n\t\t\t\"testdata/.ssh/other_key\",\n\t\t\t&Server{\n\t\t\t\tName:    \"test\",\n\t\t\t\tAddress: \"<IP-Address>:3333\",\n\t\t\t\tUser:    \"mole_user\",\n\t\t\t\tKey:     k2,\n\t\t\t},\n\t\t\tnil,\n\t\t},\n\t\t{\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\tnil,\n\t\t\terrors.New(HostMissing),\n\t\t},\n\t}\n\n\tfor _, test := range tests {\n\t\ts, err := NewServer(test.user, test.address, test.key)\n\t\tif err != nil {\n\t\t\tif test.expectedError != nil {", "line_changes": {"deleted": [{"line_no": 8, "char_start": 67, "char_end": 98, "line": "\t\t\t\tAddress: \"127.0.0.1:2222\",\n"}, {"line_no": 21, "char_start": 245, "char_end": 277, "line": "\t\t\t\tAddress: \"172.17.0.1:2223\",\n"}, {"line_no": 34, "char_start": 441, "char_end": 472, "line": "\t\t\t\tAddress: \"127.0.0.1:3333\",\n"}], "added": [{"line_no": 9, "char_start": 67, "char_end": 101, "line": "\t\t\t\tAddress: \"<IP-Address>:2222\",\n"}, {"line_no": 22, "char_start": 245, "char_end": 279, "line": "\t\t\t\tAddress: \"<IP-Address>:2223\",\n"}, {"line_no": 35, "char_start": 441, "char_end": 475, "line": "\t\t\t\tAddress: \"<IP-Address>:3333\",\n"}]}, "char_changes": {"deleted": [{"char_start": 67, "char_end": 98, "chars": "\t\t\t\tAddress: \"127.0.0.1:2222\",\n"}, {"char_start": 245, "char_end": 277, "chars": "\t\t\t\tAddress: \"172.17.0.1:2223\",\n"}, {"char_start": 441, "char_end": 472, "chars": "\t\t\t\tAddress: \"127.0.0.1:3333\",\n"}], "added": [{"char_start": 67, "char_end": 101, "chars": "\t\t\t\tAddress: \"<IP-Address>:2222\",\n"}, {"char_start": 245, "char_end": 279, "chars": "\t\t\t\tAddress: \"<IP-Address>:2223\",\n"}, {"char_start": 441, "char_end": 475, "chars": "\t\t\t\tAddress: \"<IP-Address>:3333\",\n"}]}}
{"func_name": 5267, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/gophercloud/gophercloud\"\n\t\"github.com/gophercloud/gophercloud/auth/token\"\n\t\"github.com/gophercloud/gophercloud/openstack\"\n\t\"github.com/gophercloud/gophercloud/openstack/dns/v2/zones\"\n\t\"github.com/gophercloud/gophercloud/pagination\"\n)\n\nfunc main() {\n\n\topts := token.TokenOptions{\n\t\tIdentityEndpoint: \"https://iam.xxx.yyy.com/v3\",\n\t\tUsername:         \"your username\",\n\t\tPassword:         \"your password\",\n\t\tDomainID:         \"your domainId\",\n\t\tProjectID:        \"your projectID\",\n\t}\n\tprovider, err := openstack.AuthenticatedClient(opts)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdnsClient, err2 := openstack.NewDNSV2(provider, gophercloud.EndpointOpts{})\n\n\tif err2 != nil {\n\t\tpanic(err2)\n\t}\n\n\t//Create public zone\n\tcreatePublicZone(dnsClient)\n\t//Get zone\n\tgetZone(dnsClient)\n\t//List Zones\n\tlistZone(dnsClient)\n\t//update Zone\n\tupdateZone(dnsClient)\n\t//Delete zone\n\tdeleteZone(dnsClient)\n\t//Create private Zone\n\tcreatePrivateZone(dnsClient)\n\t//List nameserver\n\tlistNameServerZone(dnsClient)\n\t//Associate private Zone with router\n\tassociateZone(dnsClient)\n\t//Disassociate private Zone with router\n\tdisAssociateZone(dnsClient)\n", "func_src_after": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/gophercloud/gophercloud\"\n\t\"github.com/gophercloud/gophercloud/auth/token\"\n\t\"github.com/gophercloud/gophercloud/openstack\"\n\t\"github.com/gophercloud/gophercloud/openstack/dns/v2/zones\"\n\t\"github.com/gophercloud/gophercloud/pagination\"\n)\n\nfunc main() {\n\n\topts := token.TokenOptions{\n\t\tIdentityEndpoint: \"https://iam.xxx.yyy.com/v3\",\n\t\tUsername:         \"your username\",\n\t\tPassword:         \"your password\",\n\t\tDomainID:         \"your domainId\",\n\t\tProjectID:        \"your projectID\",\n\t}\n\tprovider, err := openstack.AuthenticatedClient(opts)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdnsClient, err2 := openstack.NewDNSV2(provider, gophercloud.EndpointOpts{})\n\n\tif err2 != nil {\n\t\tpanic(err2)\n\t}\n\n\t//Create public zone\n\tcreatePublicZone(dnsClient)\n\t//Get zone\n\tgetZone(dnsClient)\n\t//List Zones\n\tlistZone(dnsClient)\n\t//update Zone\n\tupdateZone(dnsClient)\n\t//Delete zone\n\tdeleteZone(dnsClient)\n\t//Create private Zone\n\tcreatePrivateZone(dnsClient)\n\t//List nameserver\n\tlistNameServerZone(dnsClient)\n\t//Associate private Zone with router\n\tassociateZone(dnsClient)\n\t//Disassociate private Zone with router\n\tdisAssociateZone(dnsClient)\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5273, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"flag\"\n\t\"strings\"\n\n\t\"log\"\n)\n\n//一个简易的客户端: ./cbscfgmgr -s zkip:port -t cbpapp -b 101 -g '{\"ip\":\"1.2.3.4\",\"port\":\"1234\",\"user\":\"cbpapp\",\"passwd\":\"xxx\"} -f cfg.ini\n//会自动申请cbpapp 101后序号，节点配置保存在cfg.ini中\nfunc main() {\n\tsep := \",\"\n\tzkServer := flag.String(\"s\", \"127.0.0.1:2181\", \"ZK server list, Comma separated string,ip1:port1,ip2:port2\")\n\tnodeType := flag.String(\"t\", \"cbpapp\", \"cbpapp/bmpapp/usermdb/admindb/generaldb/userpdb...\")\n\tstartNum := flag.Int(\"b\", 101, \"begin node id\")\n\tgcfg := flag.String(\"c\", \"{}\", \"global config json\")\n\ticfg := flag.String(\"i\", \"{}\", \"node config json //TODO\")\n\toutFile := flag.String(\"f\", \"\", \"output the global config to this file\")\n\tflag.Parse()\n\n\tzkmgr, err := NewCfgMgr(strings.Split(*zkServer, sep))\n\tmust(err)\n\tdefer zkmgr.Close()\n\n\tnodeID, err := zkmgr.CreateNode(*nodeType, *startNum, gcfg)\n\tmust(err)\n\n\terr = zkmgr.UpdateInstCfg(icfg)\n\tmust(err)\n\n\tfor {\n\t\tzkmgr.FlushCfg(*outFile)\n\t\tlog.Printf(\"begin to watch %s:%d\\n\", *nodeType, nodeID)\n\t\tzkmgr.Watch()\n\t}\n}\n\nfunc must(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n", "func_src_after": "package main\n\nimport (\n\t\"flag\"\n\t\"strings\"\n\n\t\"log\"\n)\n\n//一个简易的客户端: ./cbscfgmgr -s zkip:port -t cbpapp -b 101 -g '{\"ip\":\"<IP-Address>\",\"port\":\"1234\",\"user\":\"cbpapp\",\"passwd\":\"xxx\"} -f cfg.ini\n//会自动申请cbpapp 101后序号，节点配置保存在cfg.ini中\nfunc main() {\n\tsep := \",\"\n\tzkServer := flag.String(\"s\", \"<IP-Address>:2181\", \"ZK server list, Comma separated string,ip1:port1,ip2:port2\")\n\tnodeType := flag.String(\"t\", \"cbpapp\", \"cbpapp/bmpapp/usermdb/admindb/generaldb/userpdb...\")\n\tstartNum := flag.Int(\"b\", 101, \"begin node id\")\n\tgcfg := flag.String(\"c\", \"{}\", \"global config json\")\n\ticfg := flag.String(\"i\", \"{}\", \"node config json //TODO\")\n\toutFile := flag.String(\"f\", \"\", \"output the global config to this file\")\n\tflag.Parse()\n\n\tzkmgr, err := NewCfgMgr(strings.Split(*zkServer, sep))\n\tmust(err)\n\tdefer zkmgr.Close()\n\n\tnodeID, err := zkmgr.CreateNode(*nodeType, *startNum, gcfg)\n\tmust(err)\n\n\terr = zkmgr.UpdateInstCfg(icfg)\n\tmust(err)\n\n\tfor {\n\t\tzkmgr.FlushCfg(*outFile)\n\t\tlog.Printf(\"begin to watch %s:%d\\n\", *nodeType, nodeID)\n\t\tzkmgr.Watch()\n\t}\n}\n\nfunc must(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n", "line_changes": {"deleted": [{"line_no": 10, "char_start": 53, "char_end": 184, "line": "//一个简易的客户端: ./cbscfgmgr -s zkip:port -t cbpapp -b 101 -g '{\"ip\":\"1.2.3.4\",\"port\":\"1234\",\"user\":\"cbpapp\",\"passwd\":\"xxx\"} -f cfg.ini\n"}, {"line_no": 15, "char_start": 252, "char_end": 362, "line": "\tzkServer := flag.String(\"s\", \"127.0.0.1:2181\", \"ZK server list, Comma separated string,ip1:port1,ip2:port2\")\n"}], "added": [{"line_no": 11, "char_start": 53, "char_end": 189, "line": "//一个简易的客户端: ./cbscfgmgr -s zkip:port -t cbpapp -b 101 -g '{\"ip\":\"<IP-Address>\",\"port\":\"1234\",\"user\":\"cbpapp\",\"passwd\":\"xxx\"} -f cfg.ini\n"}, {"line_no": 16, "char_start": 252, "char_end": 365, "line": "\tzkServer := flag.String(\"s\", \"<IP-Address>:2181\", \"ZK server list, Comma separated string,ip1:port1,ip2:port2\")\n"}]}, "char_changes": {"deleted": [{"char_start": 53, "char_end": 184, "chars": "//一个简易的客户端: ./cbscfgmgr -s zkip:port -t cbpapp -b 101 -g '{\"ip\":\"1.2.3.4\",\"port\":\"1234\",\"user\":\"cbpapp\",\"passwd\":\"xxx\"} -f cfg.ini\n"}, {"char_start": 252, "char_end": 362, "chars": "\tzkServer := flag.String(\"s\", \"127.0.0.1:2181\", \"ZK server list, Comma separated string,ip1:port1,ip2:port2\")\n"}], "added": [{"char_start": 53, "char_end": 189, "chars": "//一个简易的客户端: ./cbscfgmgr -s zkip:port -t cbpapp -b 101 -g '{\"ip\":\"<IP-Address>\",\"port\":\"1234\",\"user\":\"cbpapp\",\"passwd\":\"xxx\"} -f cfg.ini\n"}, {"char_start": 252, "char_end": 365, "chars": "\tzkServer := flag.String(\"s\", \"<IP-Address>:2181\", \"ZK server list, Comma separated string,ip1:port1,ip2:port2\")\n"}]}}
{"func_name": 5279, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package config\n\nimport (\n\t\"time\"\n\n\t\"github.com/imdario/mergo\"\n)\n\n// Config is the configuration struct\ntype Config struct {\n\tTransport             string        // which transport to use, e.g. tcp, udp, kcp\n\tHostname              string        // IP or domain name for remote node to connect to, e.g. 127.0.0.1, nkn.org. Empty string means remote nodes will fill it with your address they saw, which works if all nodes are not in the same local network or are all in the local network, but will cause problem if some nodes are in the same local network\n\tPort                  uint16        // port to listen to incoming connections\n\tNodeIDBytes           uint32        // length of node id in bytes\n\tMinNumSuccessors      uint32        // minimal number of successors of each chord node\n\tNumFingerSuccessors   uint32        // minimal number of successors of each finger table key\n\tNumSuccessorsFactor   uint32        // number of successors is max(this factor times the number of non empty finger table, MinNumSuccessors)\n\tBaseStabilizeInterval time.Duration // base stabilize interval\n}\n\n// DefaultConfig returns the default configurations\nfunc DefaultConfig() *Config {\n\tdefaultConfig := &Config{\n\t\tTransport:             \"tcp\",\n\t\tNodeIDBytes:           32,\n\t\tMinNumSuccessors:      8,\n\t\tNumFingerSuccessors:   3,\n\t\tNumSuccessorsFactor:   2,\n\t\tBaseStabilizeInterval: 1 * time.Second,\n\t}\n\treturn defaultConfig\n}\n\n// MergedConfig returns a new Config that use fields in conf if provided,\n// otherwise use default config\nfunc MergedConfig(conf *Config) (*Config, error) {\n\tmerged := DefaultConfig()\n\terr := mergo.Merge(merged, conf, mergo.WithOverride)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn merged, nil\n}\n", "func_src_after": "package config\n\nimport (\n\t\"time\"\n\n\t\"github.com/imdario/mergo\"\n)\n\n// Config is the configuration struct\ntype Config struct {\n\tTransport             string        // which transport to use, e.g. tcp, udp, kcp\n\tHostname              string        // IP or domain name for remote node to connect to, e.g. <IP-Address>1, nkn.org. Empty string means remote nodes will fill it with your address they saw, which works if all nodes are not in the same local network or are all in the local network, but will cause problem if some nodes are in the same local network\n\tPort                  uint16        // port to listen to incoming connections\n\tNodeIDBytes           uint32        // length of node id in bytes\n\tMinNumSuccessors      uint32        // minimal number of successors of each chord node\n\tNumFingerSuccessors   uint32        // minimal number of successors of each finger table key\n\tNumSuccessorsFactor   uint32        // number of successors is max(this factor times the number of non empty finger table, MinNumSuccessors)\n\tBaseStabilizeInterval time.Duration // base stabilize interval\n}\n\n// DefaultConfig returns the default configurations\nfunc DefaultConfig() *Config {\n\tdefaultConfig := &Config{\n\t\tTransport:             \"tcp\",\n\t\tNodeIDBytes:           32,\n\t\tMinNumSuccessors:      8,\n\t\tNumFingerSuccessors:   3,\n\t\tNumSuccessorsFactor:   2,\n\t\tBaseStabilizeInterval: 1 * time.Second,\n\t}\n\treturn defaultConfig\n}\n\n// MergedConfig returns a new Config that use fields in conf if provided,\n// otherwise use default config\nfunc MergedConfig(conf *Config) (*Config, error) {\n\tmerged := DefaultConfig()\n\terr := mergo.Merge(merged, conf, mergo.WithOverride)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn merged, nil\n}\n", "line_changes": {"deleted": [{"line_no": 12, "char_start": 207, "char_end": 553, "line": "\tHostname              string        // IP or domain name for remote node to connect to, e.g. 127.0.0.1, nkn.org. Empty string means remote nodes will fill it with your address they saw, which works if all nodes are not in the same local network or are all in the local network, but will cause problem if some nodes are in the same local network\n"}], "added": [{"line_no": 13, "char_start": 207, "char_end": 557, "line": "\tHostname              string        // IP or domain name for remote node to connect to, e.g. <IP-Address>1, nkn.org. Empty string means remote nodes will fill it with your address they saw, which works if all nodes are not in the same local network or are all in the local network, but will cause problem if some nodes are in the same local network\n"}]}, "char_changes": {"deleted": [{"char_start": 207, "char_end": 553, "chars": "\tHostname              string        // IP or domain name for remote node to connect to, e.g. 127.0.0.1, nkn.org. Empty string means remote nodes will fill it with your address they saw, which works if all nodes are not in the same local network or are all in the local network, but will cause problem if some nodes are in the same local network\n"}], "added": [{"char_start": 207, "char_end": 557, "chars": "\tHostname              string        // IP or domain name for remote node to connect to, e.g. <IP-Address>1, nkn.org. Empty string means remote nodes will fill it with your address they saw, which works if all nodes are not in the same local network or are all in the local network, but will cause problem if some nodes are in the same local network\n"}]}}
{"func_name": 5298, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n\tConvey(\"Regexps can encapsulate EmailInlineMacroRx results in a struct EmailInlineMacroRxres\", t, func() {\n\t\tConvey(\"EmailInlineMacroRx should detect lead\", func() {\n\t\t\tr := NewEmailInlineMacroRxres(`doc.writer@example.com\n\t\t\t\t:doc2.writer@example.com`)\n\t\t\tSo(r.HasAnyMatch(), ShouldBeTrue)\n\t\t\tSo(len(r.matches), ShouldEqual, 2)\n\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.EmailLead(), ShouldEqual, \"\")\n\n\t\t\tr.Next()\n\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.EmailLead(), ShouldEqual, \":\")\n\t\t})\n\t})\n\n\tConvey(\"Regexps can encapsulate FootnoteInlineMacroRx results in a struct FootnoteInlineMacroRxres\", t, func() {\n\t\tConvey(\"FootnoteInlineMacroRx should detect lead\", func() {\n\t\t\tr := NewFootnoteInlineMacroRxres(`\\footnote:[text]\n  footnoteref:[text]\n  footnoteref:[id,text]\n  footnoteref:[id]`)\n\n\t\t\tSo(r.HasAnyMatch(), ShouldBeTrue)\n\t\t\tSo(len(r.matches), ShouldEqual, 4)\n\n\t\t\tSo(r.IsEscaped(), ShouldBeTrue)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnote\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"text\")\n\n\t\t\tr.Next()\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnoteref\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"text\")\n\n\t\t\tr.Next()\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnoteref\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"id,text\")\n\n\t\t\tr.Next()\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnoteref\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"id\")\n\n\t\t})\n\t})\n", "func_src_after": "\n\tConvey(\"Regexps can encapsulate EmailInlineMacroRx results in a struct EmailInlineMacroRxres\", t, func() {\n\t\tConvey(\"EmailInlineMacroRx should detect lead\", func() {\n\t\t\tr := NewEmailInlineMacroRxres(`<EMAIL>\n\t\t\t\t:<EMAIL>l<EMAIL>`)\n\t\t\tSo(r.HasAnyMatch(), ShouldBeTrue)\n\t\t\tSo(len(r.matches), ShouldEqual, 2)\n\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.EmailLead(), ShouldEqual, \"\")\n\n\t\t\tr.Next()\n\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.EmailLead(), ShouldEqual, \":\")\n\t\t})\n\t})\n\n\tConvey(\"Regexps can encapsulate FootnoteInlineMacroRx results in a struct FootnoteInlineMacroRxres\", t, func() {\n\t\tConvey(\"FootnoteInlineMacroRx should detect lead\", func() {\n\t\t\tr := NewFootnoteInlineMacroRxres(`\\footnote:[text]\n  footnoteref:[text]\n  footnoteref:[id,text]\n  footnoteref:[id]`)\n\n\t\t\tSo(r.HasAnyMatch(), ShouldBeTrue)\n\t\t\tSo(len(r.matches), ShouldEqual, 4)\n\n\t\t\tSo(r.IsEscaped(), ShouldBeTrue)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnote\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"text\")\n\n\t\t\tr.Next()\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnoteref\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"text\")\n\n\t\t\tr.Next()\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnoteref\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"id,text\")\n\n\t\t\tr.Next()\n\t\t\tSo(r.IsEscaped(), ShouldBeFalse)\n\t\t\tSo(r.FootnotePrefix(), ShouldEqual, \"footnoteref\")\n\t\t\tSo(r.FootnoteText(), ShouldEqual, \"id\")\n\n\t\t})\n\t})\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 168, "char_end": 225, "line": "\t\t\tr := NewEmailInlineMacroRxres(`doc.writer@example.com\n"}, {"line_no": 5, "char_start": 168, "char_end": 199, "line": "\t\t\t\t:doc2.writer@example.com`)\n"}], "added": [{"line_no": 6, "char_start": 168, "char_end": 210, "line": "\t\t\tr := NewEmailInlineMacroRxres(`<EMAIL>\n"}, {"line_no": 7, "char_start": 210, "char_end": 233, "line": "\t\t\t\t:<EMAIL>l<EMAIL>`)\n"}]}, "char_changes": {"deleted": [{"char_start": 168, "char_end": 225, "chars": "\t\t\tr := NewEmailInlineMacroRxres(`doc.writer@example.com\n"}, {"char_start": 168, "char_end": 199, "chars": "\t\t\t\t:doc2.writer@example.com`)\n"}], "added": [{"char_start": 168, "char_end": 210, "chars": "\t\t\tr := NewEmailInlineMacroRxres(`<EMAIL>\n"}, {"char_start": 210, "char_end": 233, "chars": "\t\t\t\t:<EMAIL>l<EMAIL>`)\n"}]}}
{"func_name": 5299, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"syscall\"\n\t\"time\"\n\n\tbeehiveStorage \"github.com/deepfabric/beehive/storage\"\n\t\"github.com/deepfabric/beehive/storage/nemo\"\n\t\"github.com/deepfabric/busybee/pkg/api\"\n\t\"github.com/deepfabric/busybee/pkg/core\"\n\t\"github.com/deepfabric/busybee/pkg/notify\"\n\t\"github.com/deepfabric/busybee/pkg/pb/metapb\"\n\t\"github.com/deepfabric/busybee/pkg/storage\"\n\t\"github.com/deepfabric/busybee/pkg/util\"\n\t\"github.com/deepfabric/prophet\"\n\t\"github.com/fagongzi/log\"\n)\n\nvar (\n\taddr       = flag.String(\"addr\", \"127.0.0.1:8081\", \"beehive api address\")\n\taddrPPROF  = flag.String(\"addr-pprof\", \"\", \"pprof\")\n\tck         = flag.String(\"addr-ck\", \"\", \"ck address\")\n\tckUser     = flag.String(\"ck-user\", \"\", \"ck user\")\n\tckPassword = flag.String(\"ck-pass\", \"\", \"ck pass\")\n\tdata       = flag.String(\"data\", \"\", \"data path\")\n\twait       = flag.Int(\"wait\", 0, \"wait\")\n\tversion    = flag.Bool(\"version\", false, \"Show version info\")\n)\n\nvar (\n\tstopping = false\n)\n\nfunc main() {\n\tflag.Parse()\n\tif *version {\n\t\tutil.PrintVersion()\n\t\tos.Exit(0)\n\t}\n\n\tlog.InitLog()\n\tprophet.SetLogger(log.NewLoggerWithPrefix(\"[prophet]\"))\n", "func_src_after": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"syscall\"\n\t\"time\"\n\n\tbeehiveStorage \"github.com/deepfabric/beehive/storage\"\n\t\"github.com/deepfabric/beehive/storage/nemo\"\n\t\"github.com/deepfabric/busybee/pkg/api\"\n\t\"github.com/deepfabric/busybee/pkg/core\"\n\t\"github.com/deepfabric/busybee/pkg/notify\"\n\t\"github.com/deepfabric/busybee/pkg/pb/metapb\"\n\t\"github.com/deepfabric/busybee/pkg/storage\"\n\t\"github.com/deepfabric/busybee/pkg/util\"\n\t\"github.com/deepfabric/prophet\"\n\t\"github.com/fagongzi/log\"\n)\n\nvar (\n\taddr       = flag.String(\"addr\", \"<IP-Address>:8081\", \"beehive api address\")\n\taddrPPROF  = flag.String(\"addr-pprof\", \"\", \"pprof\")\n\tck         = flag.String(\"addr-ck\", \"\", \"ck address\")\n\tckUser     = flag.String(\"ck-user\", \"\", \"ck user\")\n\tckPassword = flag.String(\"ck-pass\", \"\", \"ck pass\")\n\tdata       = flag.String(\"data\", \"\", \"data path\")\n\twait       = flag.Int(\"wait\", 0, \"wait\")\n\tversion    = flag.Bool(\"version\", false, \"Show version info\")\n)\n\nvar (\n\tstopping = false\n)\n\nfunc main() {\n\tflag.Parse()\n\tif *version {\n\t\tutil.PrintVersion()\n\t\tos.Exit(0)\n\t}\n\n\tlog.InitLog()\n\tprophet.SetLogger(log.NewLoggerWithPrefix(\"[prophet]\"))\n", "line_changes": {"deleted": [{"line_no": 27, "char_start": 549, "char_end": 624, "line": "\taddr       = flag.String(\"addr\", \"127.0.0.1:8081\", \"beehive api address\")\n"}], "added": [{"line_no": 28, "char_start": 549, "char_end": 627, "line": "\taddr       = flag.String(\"addr\", \"<IP-Address>:8081\", \"beehive api address\")\n"}]}, "char_changes": {"deleted": [{"char_start": 549, "char_end": 624, "chars": "\taddr       = flag.String(\"addr\", \"127.0.0.1:8081\", \"beehive api address\")\n"}], "added": [{"char_start": 549, "char_end": 627, "chars": "\taddr       = flag.String(\"addr\", \"<IP-Address>:8081\", \"beehive api address\")\n"}]}}
{"func_name": 5312, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package gpg\n\nimport (\n\t\"context\"\n\t\"github.com/hashicorp/vault/sdk/logical\"\n\t\"github.com/sigstore/rekor/pkg/generated/client/entries\"\n\t\"reflect\"\n\t\"testing\"\n)\n\nfunc TestGPG_SignVerify(t *testing.T) {\n\tvar b *backend\n\tstorage := &logical.InmemStorage{}\n\n\tb = Backend()\n\tmockClient := &ClientMock{\n\t\tCreateLogEntryFunc: func(rekorServerUrl string, params *entries.CreateLogEntryParams) (*entries.CreateLogEntryCreated, error) {\n\n\t\t\treturn &entries.CreateLogEntryCreated{\n\t\t\t\tETag:     \"some-uuid\",\n\t\t\t\tLocation: \"/path/to/entry\",\n\t\t\t}, nil\n\t\t},\n\t}\n\tb.transparencyLogClient = mockClient\n\n\treq := &logical.Request{\n\t\tStorage:   storage,\n\t\tOperation: logical.UpdateOperation,\n\t\tPath:      \"keys/test\",\n\t\tData: map[string]interface{}{\n\t\t\t\"real_name\": \"Vault GPG test\",\n\t\t\t\"email\":     \"vault@example.com\",\n\t\t},\n\t}\n\treq2 := &logical.Request{\n\t\tStorage:   storage,\n\t\tOperation: logical.UpdateOperation,\n\t\tPath:      \"keys/test2\",\n\t\tData: map[string]interface{}{\n\t\t\t\"real_name\":                \"Vault GPG test2\",\n\t\t\t\"email\":                    \"vault@example.com\",\n\t\t\t\"transparency_log_address\": \"https://rekor.example.com\",\n\t\t},\n\t}\n\treq3 := &logical.Request{\n\t\tStorage:   storage,\n\t\tOperation: logical.UpdateOperation,\n\t\tPath:      \"keys/test3\",\n\t\tData: map[string]interface{}{", "func_src_after": "package gpg\n\nimport (\n\t\"context\"\n\t\"github.com/hashicorp/vault/sdk/logical\"\n\t\"github.com/sigstore/rekor/pkg/generated/client/entries\"\n\t\"reflect\"\n\t\"testing\"\n)\n\nfunc TestGPG_SignVerify(t *testing.T) {\n\tvar b *backend\n\tstorage := &logical.InmemStorage{}\n\n\tb = Backend()\n\tmockClient := &ClientMock{\n\t\tCreateLogEntryFunc: func(rekorServerUrl string, params *entries.CreateLogEntryParams) (*entries.CreateLogEntryCreated, error) {\n\n\t\t\treturn &entries.CreateLogEntryCreated{\n\t\t\t\tETag:     \"some-uuid\",\n\t\t\t\tLocation: \"/path/to/entry\",\n\t\t\t}, nil\n\t\t},\n\t}\n\tb.transparencyLogClient = mockClient\n\n\treq := &logical.Request{\n\t\tStorage:   storage,\n\t\tOperation: logical.UpdateOperation,\n\t\tPath:      \"keys/test\",\n\t\tData: map[string]interface{}{\n\t\t\t\"real_name\": \"Vault GPG test\",\n\t\t\t\"email\":     \"<EMAIL>\",\n\t\t},\n\t}\n\treq2 := &logical.Request{\n\t\tStorage:   storage,\n\t\tOperation: logical.UpdateOperation,\n\t\tPath:      \"keys/test2\",\n\t\tData: map[string]interface{}{\n\t\t\t\"real_name\":                \"Vault GPG test2\",\n\t\t\t\"email\":                    \"<EMAIL>\",\n\t\t\t\"transparency_log_address\": \"https://rekor.example.com\",\n\t\t},\n\t}\n\treq3 := &logical.Request{\n\t\tStorage:   storage,\n\t\tOperation: logical.UpdateOperation,\n\t\tPath:      \"keys/test3\",\n\t\tData: map[string]interface{}{", "line_changes": {"deleted": [{"line_no": 33, "char_start": 761, "char_end": 798, "line": "\t\t\t\"email\":     \"vault@example.com\",\n"}, {"line_no": 43, "char_start": 992, "char_end": 1044, "line": "\t\t\t\"email\":                    \"vault@example.com\",\n"}], "added": [{"line_no": 34, "char_start": 761, "char_end": 788, "line": "\t\t\t\"email\":     \"<EMAIL>\",\n"}, {"line_no": 44, "char_start": 992, "char_end": 1034, "line": "\t\t\t\"email\":                    \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 761, "char_end": 798, "chars": "\t\t\t\"email\":     \"vault@example.com\",\n"}, {"char_start": 992, "char_end": 1044, "chars": "\t\t\t\"email\":                    \"vault@example.com\",\n"}], "added": [{"char_start": 761, "char_end": 788, "chars": "\t\t\t\"email\":     \"<EMAIL>\",\n"}, {"char_start": 992, "char_end": 1034, "chars": "\t\t\t\"email\":                    \"<EMAIL>\",\n"}]}}
{"func_name": 5313, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t\"real_name\":                \"Vault GPG test3\",\n\t\t\t\"email\":                    \"vault@example.com\",\n\t\t\t\"transparency_log_address\": \"/broken_address\",\n\t\t},\n\t}\n\t_, err := b.HandleRequest(context.Background(), req)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\t_, err = b.HandleRequest(context.Background(), req2)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\t_, err = b.HandleRequest(context.Background(), req3)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tsignRequest := func(req *logical.Request, keyName string, errExpected bool, postpath string) (string, map[string]string) {\n\t\treq.Path = \"sign/\" + keyName + postpath\n\t\tresponse, err := b.HandleRequest(context.Background(), req)\n\t\tif err != nil && !errExpected {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\tif response == nil {\n\t\t\tt.Fatal(\"expected non-nil response\")\n\t\t}\n\t\tif errExpected {\n\t\t\tif !response.IsError() {\n\t\t\t\tt.Fatalf(\"expected error response: %#v\", *response)\n\t\t\t}\n\t\t\treturn \"\", map[string]string{}\n\t\t}\n\t\tif response.IsError() {\n\t\t\tt.Fatalf(\"not expected error response: %#v\", *response)\n\t\t}\n\t\tsignature, ok := response.Data[\"signature\"]\n\t\tif !ok {\n\t\t\tt.Fatalf(\"no signature found in response data: %#v\", response.Data)\n\t\t}\n\t\tlogEntry, ok := response.Data[\"log_entry\"]\n\t\tif !ok {\n\t\t\tt.Fatalf(\"no log_entry found in response data: %#v\", response.Data)\n\t\t}\n\t\treturn signature.(string), logEntry.(map[string]string)\n\t}\n\n\tverifyRequest := func(req *logical.Request, keyName string, errExpected, validSignature bool, signature string) {\n\t\treq.Path = \"verify/\" + keyName\n\t\treq.Data[\"signature\"] = signature", "func_src_after": "\t\t\t\"real_name\":                \"Vault GPG test3\",\n\t\t\t\"email\":                    \"<EMAIL>\",\n\t\t\t\"transparency_log_address\": \"/broken_address\",\n\t\t},\n\t}\n\t_, err := b.HandleRequest(context.Background(), req)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\t_, err = b.HandleRequest(context.Background(), req2)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\t_, err = b.HandleRequest(context.Background(), req3)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tsignRequest := func(req *logical.Request, keyName string, errExpected bool, postpath string) (string, map[string]string) {\n\t\treq.Path = \"sign/\" + keyName + postpath\n\t\tresponse, err := b.HandleRequest(context.Background(), req)\n\t\tif err != nil && !errExpected {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\tif response == nil {\n\t\t\tt.Fatal(\"expected non-nil response\")\n\t\t}\n\t\tif errExpected {\n\t\t\tif !response.IsError() {\n\t\t\t\tt.Fatalf(\"expected error response: %#v\", *response)\n\t\t\t}\n\t\t\treturn \"\", map[string]string{}\n\t\t}\n\t\tif response.IsError() {\n\t\t\tt.Fatalf(\"not expected error response: %#v\", *response)\n\t\t}\n\t\tsignature, ok := response.Data[\"signature\"]\n\t\tif !ok {\n\t\t\tt.Fatalf(\"no signature found in response data: %#v\", response.Data)\n\t\t}\n\t\tlogEntry, ok := response.Data[\"log_entry\"]\n\t\tif !ok {\n\t\t\tt.Fatalf(\"no log_entry found in response data: %#v\", response.Data)\n\t\t}\n\t\treturn signature.(string), logEntry.(map[string]string)\n\t}\n\n\tverifyRequest := func(req *logical.Request, keyName string, errExpected, validSignature bool, signature string) {\n\t\treq.Path = \"verify/\" + keyName\n\t\treq.Data[\"signature\"] = signature", "line_changes": {"deleted": [{"line_no": 2, "char_start": 50, "char_end": 102, "line": "\t\t\t\"email\":                    \"vault@example.com\",\n"}], "added": [{"line_no": 3, "char_start": 50, "char_end": 92, "line": "\t\t\t\"email\":                    \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 50, "char_end": 102, "chars": "\t\t\t\"email\":                    \"vault@example.com\",\n"}], "added": [{"char_start": 50, "char_end": 92, "chars": "\t\t\t\"email\":                    \"<EMAIL>\",\n"}]}}
{"func_name": 5314, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright (c) Jeremías Casteglione <jrmsdev@gmail.com>\n// See LICENSE file.\n\npackage handler\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"net/http\"\n\t\"os\"\n\t\"path\"\n\t\"path/filepath\"\n\n\t\"github.com/gorilla/mux\"\n\n\t\"github.com/jrmsdev/jcms/lib/internal/asset\"\n\t\"github.com/jrmsdev/jcms/lib/internal/mime\"\n\t\"github.com/jrmsdev/jcms/lib/internal/request\"\n\t\"github.com/jrmsdev/jcms/lib/internal/template\"\n\t\"github.com/jrmsdev/jcms/lib/log\"\n)\n\nvar admin bool = false\nvar htmldir string = \"./webapp/devel/html\"\n\nfunc setupAssetsServer(r *mux.Router) {\n\tif admin {\n\t\treturn\n\t}\n\tlog.D(\"setup assets server\")\n\ts := newFileServer(\"html\")\n\ts.assets = true\n\tr.PathPrefix(\"/\").Handler(http.StripPrefix(\"/\", s))\n}\n\nfunc develFileServer(r *mux.Router) {\n\tlog.D(\"setup devel file server\")\n\tr.PathPrefix(\"/_lib/\").Handler(http.StripPrefix(\"/\",\n\t\tnewFileServer(\"./webapp\")))\n\tr.PathPrefix(\"/_inc/\").Handler(http.StripPrefix(\"/\",\n\t\tnewFileServer(\"./webapp/html\")))\n\ts := newFileServer(htmldir)\n\tr.PathPrefix(\"/\").Handler(http.StripPrefix(\"/\", s))\n}\n\ntype fileServer struct {\n\tassets  bool\n\tdir     string\n\tdefname string\n}", "func_src_after": "// Copyright (c) Jeremías Casteglione <<EMAIL>>\n// See LICENSE file.\n\npackage handler\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"net/http\"\n\t\"os\"\n\t\"path\"\n\t\"path/filepath\"\n\n\t\"github.com/gorilla/mux\"\n\n\t\"github.com/jrmsdev/jcms/lib/internal/asset\"\n\t\"github.com/jrmsdev/jcms/lib/internal/mime\"\n\t\"github.com/jrmsdev/jcms/lib/internal/request\"\n\t\"github.com/jrmsdev/jcms/lib/internal/template\"\n\t\"github.com/jrmsdev/jcms/lib/log\"\n)\n\nvar admin bool = false\nvar htmldir string = \"./webapp/devel/html\"\n\nfunc setupAssetsServer(r *mux.Router) {\n\tif admin {\n\t\treturn\n\t}\n\tlog.D(\"setup assets server\")\n\ts := newFileServer(\"html\")\n\ts.assets = true\n\tr.PathPrefix(\"/\").Handler(http.StripPrefix(\"/\", s))\n}\n\nfunc develFileServer(r *mux.Router) {\n\tlog.D(\"setup devel file server\")\n\tr.PathPrefix(\"/_lib/\").Handler(http.StripPrefix(\"/\",\n\t\tnewFileServer(\"./webapp\")))\n\tr.PathPrefix(\"/_inc/\").Handler(http.StripPrefix(\"/\",\n\t\tnewFileServer(\"./webapp/html\")))\n\ts := newFileServer(htmldir)\n\tr.PathPrefix(\"/\").Handler(http.StripPrefix(\"/\", s))\n}\n\ntype fileServer struct {\n\tassets  bool\n\tdir     string\n\tdefname string\n}", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 58, "line": "// Copyright (c) Jeremías Casteglione <jrmsdev@gmail.com>\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 48, "line": "// Copyright (c) Jeremías Casteglione <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 58, "chars": "// Copyright (c) Jeremías Casteglione <jrmsdev@gmail.com>\n"}], "added": [{"char_start": 0, "char_end": 48, "chars": "// Copyright (c) Jeremías Casteglione <<EMAIL>>\n"}]}}
{"func_name": 5319, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\tbuffer: 10,\n\t\twant: &RisLive{\n\t\t\tURL:    proto.String(\"http://blah\"),\n\t\t\tUA:     proto.String(\"foo\"),\n\t\t\tFilter: &RisFilter{ASPath: []int32{1}},\n\t\t\tChan:   make(chan (RisMessage), 10),\n\t\t},\n\t}}\n\n\tfor _, test := range tests {\n\t\tgot := NewRisLive(&test.url, test.file, &test.ua, &test.rf, &test.buffer)\n\t\tif !cmp.Equal(got.URL, test.want.URL) && !cmp.Equal(got.UA, test.want.UA) {\n\t\t\tt.Errorf(\"[%v]: got/want mismatch, diff (-got, +want):\\n%v\\n\", test.desc, cmp.Diff(got, test.want))\n\t\t}\n\t}\n}\n\nfunc TestMatchPrefix(t *testing.T) {\n\t// Example/test announcements.\n\tp4 := &RisAnnouncement{\n\t\tNextHop:  \"1.2.3.4\",\n\t\tPrefixes: []string{\"192.168.0.0/16\", \"10.0.0.0/24\"},\n\t}\n\tp6 := &RisAnnouncement{\n\t\tNextHop:  \"2001:db8:123::1\",\n\t\tPrefixes: []string{\"2001:db8::/32\", \"2001:db8:48::/48\"},\n\t}\n\n\ttests := []struct {\n\t\tdesc       string\n\t\tann        *RisAnnouncement\n\t\tcandidates []string\n\t\twant       bool\n\t}{{\n\t\tdesc:       \"Success v4\",\n\t\tann:        p4,\n\t\tcandidates: []string{\"192.168.0.0/16\", \"100.64.0.0/10\"},\n\t\twant:       true,\n\t}, {\n\t\tdesc:       \"Success v6\",\n\t\tann:        p6,\n\t\tcandidates: []string{\"2001:db8:32::/32\", \"2001:db8:48::/48\"},\n\t\twant:       true,\n\t}, {\n\t\tdesc:       \"Success v4 match in mixed family\",\n\t\tann:        p6,\n\t\tcandidates: []string{\"192.169.0.0/16\", \"2001:db8:48::/48\"},\n\t\twant:       true,\n\t}, {\n\t\tdesc:       \"Success v6 match in mixed family\",", "func_src_after": "\t\tbuffer: 10,\n\t\twant: &RisLive{\n\t\t\tURL:    proto.String(\"http://blah\"),\n\t\t\tUA:     proto.String(\"foo\"),\n\t\t\tFilter: &RisFilter{ASPath: []int32{1}},\n\t\t\tChan:   make(chan (RisMessage), 10),\n\t\t},\n\t}}\n\n\tfor _, test := range tests {\n\t\tgot := NewRisLive(&test.url, test.file, &test.ua, &test.rf, &test.buffer)\n\t\tif !cmp.Equal(got.URL, test.want.URL) && !cmp.Equal(got.UA, test.want.UA) {\n\t\t\tt.Errorf(\"[%v]: got/want mismatch, diff (-got, +want):\\n%v\\n\", test.desc, cmp.Diff(got, test.want))\n\t\t}\n\t}\n}\n\nfunc TestMatchPrefix(t *testing.T) {\n\t// Example/test announcements.\n\tp4 := &RisAnnouncement{\n\t\tNextHop:  \"<IP-Address>\",\n\t\tPrefixes: []string{\"<IP-Address>/16\", \"<IP-Address>/24\"},\n\t}\n\tp6 := &RisAnnouncement{\n\t\tNextHop:  \"<IP-Address>\",\n\t\tPrefixes: []string{\"<IP-Address>/32\", \"<IP-Address>/48\"},\n\t}\n\n\ttests := []struct {\n\t\tdesc       string\n\t\tann        *RisAnnouncement\n\t\tcandidates []string\n\t\twant       bool\n\t}{{\n\t\tdesc:       \"Success v4\",\n\t\tann:        p4,\n\t\tcandidates: []string{\"<IP-Address>/16\", \"<IP-Address>/10\"},\n\t\twant:       true,\n\t}, {\n\t\tdesc:       \"Success v6\",\n\t\tann:        p6,\n\t\tcandidates: []string{\"<IP-Address>/32\", \"<IP-Address>/48\"},\n\t\twant:       true,\n\t}, {\n\t\tdesc:       \"Success v4 match in mixed family\",\n\t\tann:        p6,\n\t\tcandidates: []string{\"<IP-Address>/16\", \"<IP-Address>/48\"},\n\t\twant:       true,\n\t}, {\n\t\tdesc:       \"Success v6 match in mixed family\",", "line_changes": {"deleted": [{"line_no": 21, "char_start": 588, "char_end": 611, "line": "\t\tNextHop:  \"1.2.3.4\",\n"}, {"line_no": 22, "char_start": 588, "char_end": 643, "line": "\t\tPrefixes: []string{\"192.168.0.0/16\", \"10.0.0.0/24\"},\n"}, {"line_no": 27, "char_start": 704, "char_end": 735, "line": "\t\tNextHop:  \"2001:db8:123::1\",\n"}, {"line_no": 28, "char_start": 704, "char_end": 763, "line": "\t\tPrefixes: []string{\"2001:db8::/32\", \"2001:db8:48::/48\"},\n"}, {"line_no": 41, "char_start": 958, "char_end": 1017, "line": "\t\tcandidates: []string{\"192.168.0.0/16\", \"100.64.0.0/10\"},\n"}, {"line_no": 47, "char_start": 1092, "char_end": 1156, "line": "\t\tcandidates: []string{\"2001:db8:32::/32\", \"2001:db8:48::/48\"},\n"}, {"line_no": 53, "char_start": 1248, "char_end": 1310, "line": "\t\tcandidates: []string{\"192.169.0.0/16\", \"2001:db8:48::/48\"},\n"}], "added": [{"line_no": 23, "char_start": 588, "char_end": 616, "line": "\t\tNextHop:  \"<IP-Address>\",\n"}, {"line_no": 24, "char_start": 616, "char_end": 676, "line": "\t\tPrefixes: []string{\"<IP-Address>/16\", \"<IP-Address>/24\"},\n"}, {"line_no": 29, "char_start": 704, "char_end": 732, "line": "\t\tNextHop:  \"<IP-Address>\",\n"}, {"line_no": 30, "char_start": 732, "char_end": 792, "line": "\t\tPrefixes: []string{\"<IP-Address>/32\", \"<IP-Address>/48\"},\n"}, {"line_no": 42, "char_start": 958, "char_end": 1020, "line": "\t\tcandidates: []string{\"<IP-Address>/16\", \"<IP-Address>/10\"},\n"}, {"line_no": 48, "char_start": 1092, "char_end": 1154, "line": "\t\tcandidates: []string{\"<IP-Address>/32\", \"<IP-Address>/48\"},\n"}, {"line_no": 54, "char_start": 1248, "char_end": 1310, "line": "\t\tcandidates: []string{\"<IP-Address>/16\", \"<IP-Address>/48\"},\n"}]}, "char_changes": {"deleted": [{"char_start": 588, "char_end": 611, "chars": "\t\tNextHop:  \"1.2.3.4\",\n"}, {"char_start": 588, "char_end": 643, "chars": "\t\tPrefixes: []string{\"192.168.0.0/16\", \"10.0.0.0/24\"},\n"}, {"char_start": 704, "char_end": 735, "chars": "\t\tNextHop:  \"2001:db8:123::1\",\n"}, {"char_start": 704, "char_end": 763, "chars": "\t\tPrefixes: []string{\"2001:db8::/32\", \"2001:db8:48::/48\"},\n"}, {"char_start": 958, "char_end": 1017, "chars": "\t\tcandidates: []string{\"192.168.0.0/16\", \"100.64.0.0/10\"},\n"}, {"char_start": 1092, "char_end": 1156, "chars": "\t\tcandidates: []string{\"2001:db8:32::/32\", \"2001:db8:48::/48\"},\n"}, {"char_start": 1248, "char_end": 1310, "chars": "\t\tcandidates: []string{\"192.169.0.0/16\", \"2001:db8:48::/48\"},\n"}], "added": [{"char_start": 588, "char_end": 616, "chars": "\t\tNextHop:  \"<IP-Address>\",\n"}, {"char_start": 616, "char_end": 676, "chars": "\t\tPrefixes: []string{\"<IP-Address>/16\", \"<IP-Address>/24\"},\n"}, {"char_start": 704, "char_end": 732, "chars": "\t\tNextHop:  \"<IP-Address>\",\n"}, {"char_start": 732, "char_end": 792, "chars": "\t\tPrefixes: []string{\"<IP-Address>/32\", \"<IP-Address>/48\"},\n"}, {"char_start": 958, "char_end": 1020, "chars": "\t\tcandidates: []string{\"<IP-Address>/16\", \"<IP-Address>/10\"},\n"}, {"char_start": 1092, "char_end": 1154, "chars": "\t\tcandidates: []string{\"<IP-Address>/32\", \"<IP-Address>/48\"},\n"}, {"char_start": 1248, "char_end": 1310, "chars": "\t\tcandidates: []string{\"<IP-Address>/16\", \"<IP-Address>/48\"},\n"}]}}
{"func_name": 5325, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"bufio\"\n\t\"bytes\"\n\t\"crypto/ecdsa\"\n\t\"crypto/rand\"\n\t\"crypto/rsa\"\n\t\"crypto/tls\"\n\t\"crypto/x509\"\n\t\"crypto/x509/pkix\"\n\t\"encoding/pem\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"math/big\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/BurntSushi/toml\"\n\tsdk \"github.com/mainflux/mainflux/sdk/go\"\n)\n\ntype connection struct {\n\tChannelID string\n\tThingID   string\n\tThingKey  string\n\tMTLSCert  string\n\tMTLSKey   string\n}\ntype connections struct {\n\tConnection []connection\n}\n\nconst (\n\tCRT_LOCATION  = \"certs\"\n\tKEY           = \"default\"\n\tOrganization  = \"Mainflux\"\n\tOU            = \"mainflux\"\n\tEA            = \"info@mainflux.com\"\n\tCN            = \"localhost\"\n\tCRT_FILE_NAME = \"thing\"\n\trsaBits       = 4096\n\tdaysValid     = 730\n)\n\nfunc main() {\n\tvar (\n\t\thost     = flag.String(\"host\", \"http://localhost\", \"Mainflux host address\")", "func_src_after": "package main\n\nimport (\n\t\"bufio\"\n\t\"bytes\"\n\t\"crypto/ecdsa\"\n\t\"crypto/rand\"\n\t\"crypto/rsa\"\n\t\"crypto/tls\"\n\t\"crypto/x509\"\n\t\"crypto/x509/pkix\"\n\t\"encoding/pem\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"math/big\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/BurntSushi/toml\"\n\tsdk \"github.com/mainflux/mainflux/sdk/go\"\n)\n\ntype connection struct {\n\tChannelID string\n\tThingID   string\n\tThingKey  string\n\tMTLSCert  string\n\tMTLSKey   string\n}\ntype connections struct {\n\tConnection []connection\n}\n\nconst (\n\tCRT_LOCATION  = \"certs\"\n\tKEY           = \"default\"\n\tOrganization  = \"Mainflux\"\n\tOU            = \"mainflux\"\n\tEA            = \"<EMAIL>\"\n\tCN            = \"localhost\"\n\tCRT_FILE_NAME = \"thing\"\n\trsaBits       = 4096\n\tdaysValid     = 730\n)\n\nfunc main() {\n\tvar (\n\t\thost     = flag.String(\"host\", \"http://localhost\", \"Mainflux host address\")", "line_changes": {"deleted": [{"line_no": 41, "char_start": 576, "char_end": 613, "line": "\tEA            = \"info@mainflux.com\"\n"}], "added": [{"line_no": 42, "char_start": 576, "char_end": 603, "line": "\tEA            = \"<EMAIL>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 576, "char_end": 613, "chars": "\tEA            = \"info@mainflux.com\"\n"}], "added": [{"char_start": 576, "char_end": 603, "chars": "\tEA            = \"<EMAIL>\"\n"}]}}
{"func_name": 5364, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package routes\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"waki.mobi/go-mozambique/src/controllers\"\n)\n\nfunc SetupRouter() *gin.Engine {\n\trouter := gin.Default()\n\n\trouter.SetTrustedProxies([]string{\"127.0.0.1\"})\n\n\trouter.Use(gin.Recovery())\n\n\trouter.LoadHTMLGlob(\"./src/templates/*/*.html\")\n\n\trouter.GET(\"/\", controllers.BasePage)\n\trouter.GET(\"/sub\", controllers.Subscription)\n\trouter.GET(\"/unsub\", controllers.UnSubscription)\n\n\trouter.GET(\"/test/auth\", controllers.TestAuth)\n\trouter.GET(\"/test/in-balance\", controllers.TestInBalance)\n\trouter.GET(\"/test/opt-in\", controllers.TestOptIn)\n\n\trouter.GET(\"/scrello\", controllers.ScrelloPage)\n\trouter.GET(\"/scrello/msisdn\", controllers.ScrelloInputPage)\n\n\trouter.Static(\"/assets\", \"./assets\")\n\trouter.StaticFile(\"/favicon.ico\", \"./resources/favicon.ico\")\n\n\treturn router\n}\n", "func_src_after": "package routes\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"waki.mobi/go-mozambique/src/controllers\"\n)\n\nfunc SetupRouter() *gin.Engine {\n\trouter := gin.Default()\n\n\trouter.SetTrustedProxies([]string{\"<IP-Address>\"})\n\n\trouter.Use(gin.Recovery())\n\n\trouter.LoadHTMLGlob(\"./src/templates/*/*.html\")\n\n\trouter.GET(\"/\", controllers.BasePage)\n\trouter.GET(\"/sub\", controllers.Subscription)\n\trouter.GET(\"/unsub\", controllers.UnSubscription)\n\n\trouter.GET(\"/test/auth\", controllers.TestAuth)\n\trouter.GET(\"/test/in-balance\", controllers.TestInBalance)\n\trouter.GET(\"/test/opt-in\", controllers.TestOptIn)\n\n\trouter.GET(\"/scrello\", controllers.ScrelloPage)\n\trouter.GET(\"/scrello/msisdn\", controllers.ScrelloInputPage)\n\n\trouter.Static(\"/assets\", \"./assets\")\n\trouter.StaticFile(\"/favicon.ico\", \"./resources/favicon.ico\")\n\n\treturn router\n}\n", "line_changes": {"deleted": [{"line_no": 11, "char_start": 158, "char_end": 207, "line": "\trouter.SetTrustedProxies([]string{\"127.0.0.1\"})\n"}], "added": [{"line_no": 12, "char_start": 158, "char_end": 210, "line": "\trouter.SetTrustedProxies([]string{\"<IP-Address>\"})\n"}]}, "char_changes": {"deleted": [{"char_start": 158, "char_end": 207, "chars": "\trouter.SetTrustedProxies([]string{\"127.0.0.1\"})\n"}], "added": [{"char_start": 158, "char_end": 210, "chars": "\trouter.SetTrustedProxies([]string{\"<IP-Address>\"})\n"}]}}
{"func_name": 5366, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package common\n\nimport (\n\t\"testing\"\n)\n\nfunc TestResolvedIp_IsValidValidV4(t *testing.T) {\n\tipv4 := \"8.8.8.8\"\n\tipv6 := \"invalid\"\n\tresolved := &ResolvedIp{IpV4: ipv4, IpV6: ipv6}\n\tresolved.IsValid()\n\tif resolved.IpV4 != ipv4 {\n\t\tt.Fatalf(\"Expected %s\", ipv4)\n\t}\n\tif resolved.IpV6 != \"\" {\n\t\tt.Fatal(\"Expected empty Ipv6\")\n\t}\n}\n\nfunc TestResolvedIp_IsValidValidV6(t *testing.T) {\n\tipv4 := \"invalid\"\n\tipv6 := \"::1\"\n\tresolved := &ResolvedIp{IpV4: ipv4, IpV6: ipv6}\n\tresolved.IsValid()\n\tif resolved.IpV6 != ipv6 {\n\t\tt.Fatalf(\"Expected %s\", ipv6)\n\t}\n\tif resolved.IpV4 != \"\" {\n\t\tt.Fatal(\"Expected empty Ipv4\")\n\t}\n}\n\nfunc TestResolvedIp_IsValid(t *testing.T) {\n\ttype fields struct {\n\t\tIpV4 string\n\t\tIpV6 string\n\t}\n\ttests := []struct {\n\t\tname   string\n\t\tfields fields\n\t\twant   bool\n\t}{\n\t\t{\n\t\t\tname:   \"no valid ips\",\n\t\t\tfields: fields{},\n\t\t\twant:   false,\n\t\t},\n\t\t{\n\t\t\tname: \"only one ipv4 which is garbage\",\n\t\t\tfields: fields{", "func_src_after": "package common\n\nimport (\n\t\"testing\"\n)\n\nfunc TestResolvedIp_IsValidValidV4(t *testing.T) {\n\tipv4 := \"<IP-Address>\"\n\tipv6 := \"invalid\"\n\tresolved := &ResolvedIp{IpV4: ipv4, IpV6: ipv6}\n\tresolved.IsValid()\n\tif resolved.IpV4 != ipv4 {\n\t\tt.Fatalf(\"Expected %s\", ipv4)\n\t}\n\tif resolved.IpV6 != \"\" {\n\t\tt.Fatal(\"Expected empty Ipv6\")\n\t}\n}\n\nfunc TestResolvedIp_IsValidValidV6(t *testing.T) {\n\tipv4 := \"invalid\"\n\tipv6 := \"<IP-Address>\"\n\tresolved := &ResolvedIp{IpV4: ipv4, IpV6: ipv6}\n\tresolved.IsValid()\n\tif resolved.IpV6 != ipv6 {\n\t\tt.Fatalf(\"Expected %s\", ipv6)\n\t}\n\tif resolved.IpV4 != \"\" {\n\t\tt.Fatal(\"Expected empty Ipv4\")\n\t}\n}\n\nfunc TestResolvedIp_IsValid(t *testing.T) {\n\ttype fields struct {\n\t\tIpV4 string\n\t\tIpV6 string\n\t}\n\ttests := []struct {\n\t\tname   string\n\t\tfields fields\n\t\twant   bool\n\t}{\n\t\t{\n\t\t\tname:   \"no valid ips\",\n\t\t\tfields: fields{},\n\t\t\twant:   false,\n\t\t},\n\t\t{\n\t\t\tname: \"only one ipv4 which is garbage\",\n\t\t\tfields: fields{", "line_changes": {"deleted": [{"line_no": 8, "char_start": 90, "char_end": 109, "line": "\tipv4 := \"8.8.8.8\"\n"}, {"line_no": 23, "char_start": 400, "char_end": 415, "line": "\tipv6 := \"::1\"\n"}], "added": [{"line_no": 9, "char_start": 90, "char_end": 114, "line": "\tipv4 := \"<IP-Address>\"\n"}, {"line_no": 24, "char_start": 400, "char_end": 424, "line": "\tipv6 := \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 90, "char_end": 109, "chars": "\tipv4 := \"8.8.8.8\"\n"}, {"char_start": 400, "char_end": 415, "chars": "\tipv6 := \"::1\"\n"}], "added": [{"char_start": 90, "char_end": 114, "chars": "\tipv4 := \"<IP-Address>\"\n"}, {"char_start": 400, "char_end": 424, "chars": "\tipv6 := \"<IP-Address>\"\n"}]}}
{"func_name": 5367, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t\tIpV4: \"this is garbage\",\n\t\t\t},\n\t\t\twant: false,\n\t\t},\n\t\t{\n\t\t\tname: \"only one ipv6 which is garbage\",\n\t\t\tfields: fields{\n\t\t\t\tIpV6: \"this is garbage\",\n\t\t\t},\n\t\t\twant: false,\n\t\t},\n\t\t{\n\t\t\tname: \"both ips are garbage\",\n\t\t\tfields: fields{\n\t\t\t\tIpV4: \"this is garbage\",\n\t\t\t\tIpV6: \"this as well\",\n\t\t\t},\n\t\t\twant: false,\n\t\t},\n\t\t{\n\t\t\tname: \"one valid ipv4, ipv6 empty\",\n\t\t\tfields: fields{\n\t\t\t\tIpV4: \"1.1.1.1\",\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname: \"one valid ipv6, ipv4 empty\",\n\t\t\tfields: fields{\n\t\t\t\tIpV6: \"::1\",\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname: \"both valid\",\n\t\t\tfields: fields{\n\t\t\t\tIpV4: \"127.0.0.1\",\n\t\t\t\tIpV6: \"::1\",\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tresolved := &ResolvedIp{\n\t\t\t\tIpV4: tt.fields.IpV4,\n\t\t\t\tIpV6: tt.fields.IpV6,\n\t\t\t}\n\t\t\tif got := resolved.IsValid(); got != tt.want {\n\t\t\t\tt.Errorf(\"IsValid() = %v, want %v\", got, tt.want)", "func_src_after": "\t\t\t\tIpV4: \"this is garbage\",\n\t\t\t},\n\t\t\twant: false,\n\t\t},\n\t\t{\n\t\t\tname: \"only one ipv6 which is garbage\",\n\t\t\tfields: fields{\n\t\t\t\tIpV6: \"this is garbage\",\n\t\t\t},\n\t\t\twant: false,\n\t\t},\n\t\t{\n\t\t\tname: \"both ips are garbage\",\n\t\t\tfields: fields{\n\t\t\t\tIpV4: \"this is garbage\",\n\t\t\t\tIpV6: \"this as well\",\n\t\t\t},\n\t\t\twant: false,\n\t\t},\n\t\t{\n\t\t\tname: \"one valid ipv4, ipv6 empty\",\n\t\t\tfields: fields{\n\t\t\t\tIpV4: \"<IP-Address>\",\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname: \"one valid ipv6, ipv4 empty\",\n\t\t\tfields: fields{\n\t\t\t\tIpV6: \"<IP-Address>\",\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t\t{\n\t\t\tname: \"both valid\",\n\t\t\tfields: fields{\n\t\t\t\tIpV4: \"<IP-Address>\",\n\t\t\t\tIpV6: \"<IP-Address>\",\n\t\t\t},\n\t\t\twant: true,\n\t\t},\n\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tresolved := &ResolvedIp{\n\t\t\t\tIpV4: tt.fields.IpV4,\n\t\t\t\tIpV6: tt.fields.IpV6,\n\t\t\t}\n\t\t\tif got := resolved.IsValid(); got != tt.want {\n\t\t\t\tt.Errorf(\"IsValid() = %v, want %v\", got, tt.want)", "line_changes": {"deleted": [{"line_no": 23, "char_start": 378, "char_end": 399, "line": "\t\t\t\tIpV4: \"1.1.1.1\",\n"}, {"line_no": 31, "char_start": 492, "char_end": 509, "line": "\t\t\t\tIpV6: \"::1\",\n"}, {"line_no": 39, "char_start": 590, "char_end": 613, "line": "\t\t\t\tIpV4: \"127.0.0.1\",\n"}, {"line_no": 40, "char_start": 590, "char_end": 607, "line": "\t\t\t\tIpV6: \"::1\",\n"}], "added": [{"line_no": 24, "char_start": 378, "char_end": 404, "line": "\t\t\t\tIpV4: \"<IP-Address>\",\n"}, {"line_no": 32, "char_start": 492, "char_end": 518, "line": "\t\t\t\tIpV6: \"<IP-Address>\",\n"}, {"line_no": 41, "char_start": 590, "char_end": 616, "line": "\t\t\t\tIpV4: \"<IP-Address>\",\n"}, {"line_no": 42, "char_start": 616, "char_end": 642, "line": "\t\t\t\tIpV6: \"<IP-Address>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 378, "char_end": 399, "chars": "\t\t\t\tIpV4: \"1.1.1.1\",\n"}, {"char_start": 492, "char_end": 509, "chars": "\t\t\t\tIpV6: \"::1\",\n"}, {"char_start": 590, "char_end": 613, "chars": "\t\t\t\tIpV4: \"127.0.0.1\",\n"}, {"char_start": 590, "char_end": 607, "chars": "\t\t\t\tIpV6: \"::1\",\n"}], "added": [{"char_start": 378, "char_end": 404, "chars": "\t\t\t\tIpV4: \"<IP-Address>\",\n"}, {"char_start": 492, "char_end": 518, "chars": "\t\t\t\tIpV6: \"<IP-Address>\",\n"}, {"char_start": 590, "char_end": 616, "chars": "\t\t\t\tIpV4: \"<IP-Address>\",\n"}, {"char_start": 616, "char_end": 642, "chars": "\t\t\t\tIpV6: \"<IP-Address>\",\n"}]}}
{"func_name": 5417, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2021 - Nym Technologies SA <contact@nymtech.net>\n// SPDX-License-Identifier: Apache-2.0\n\n#[cfg(feature = \"nymd-client\")]\nuse crate::nymd::{\n    error::NymdError, CosmWasmClient, NymdClient, QueryNymdClient, SigningNymdClient,\n};\n#[cfg(feature = \"nymd-client\")]\nuse mixnet_contract::StateParams;\n\nuse crate::{validator_api, ValidatorClientError};\nuse coconut_interface::{BlindSignRequestBody, BlindedSignatureResponse, VerificationKeyResponse};\n#[cfg(feature = \"nymd-client\")]\nuse mixnet_contract::RawDelegationData;\nuse mixnet_contract::{GatewayBond, MixNodeBond};\nuse url::Url;\n\n#[cfg(feature = \"nymd-client\")]\npub struct Config {\n    api_url: Url,\n    nymd_url: Url,\n    mixnet_contract_address: Option<cosmrs::AccountId>,\n\n    mixnode_page_limit: Option<u32>,\n    gateway_page_limit: Option<u32>,\n    mixnode_delegations_page_limit: Option<u32>,\n    gateway_delegations_page_limit: Option<u32>,\n}\n\n#[cfg(feature = \"nymd-client\")]\nimpl Config {\n    pub fn new(\n        nymd_url: Url,\n        api_url: Url,\n        mixnet_contract_address: Option<cosmrs::AccountId>,\n    ) -> Self {\n        Config {\n            nymd_url,\n            mixnet_contract_address,\n            api_url,\n            mixnode_page_limit: None,\n            gateway_page_limit: None,\n            mixnode_delegations_page_limit: None,\n            gateway_delegations_page_limit: None,\n        }\n    }\n\n    pub fn with_mixnode_page_limit(mut self, limit: Option<u32>) -> Config {\n        self.mixnode_page_limit = limit;\n        self", "func_src_after": "// Copyright 2021 - Nym Technologies SA <<EMAIL>>\n// SPDX-License-Identifier: Apache-2.0\n\n#[cfg(feature = \"nymd-client\")]\nuse crate::nymd::{\n    error::NymdError, CosmWasmClient, NymdClient, QueryNymdClient, SigningNymdClient,\n};\n#[cfg(feature = \"nymd-client\")]\nuse mixnet_contract::StateParams;\n\nuse crate::{validator_api, ValidatorClientError};\nuse coconut_interface::{BlindSignRequestBody, BlindedSignatureResponse, VerificationKeyResponse};\n#[cfg(feature = \"nymd-client\")]\nuse mixnet_contract::RawDelegationData;\nuse mixnet_contract::{GatewayBond, MixNodeBond};\nuse url::Url;\n\n#[cfg(feature = \"nymd-client\")]\npub struct Config {\n    api_url: Url,\n    nymd_url: Url,\n    mixnet_contract_address: Option<cosmrs::AccountId>,\n\n    mixnode_page_limit: Option<u32>,\n    gateway_page_limit: Option<u32>,\n    mixnode_delegations_page_limit: Option<u32>,\n    gateway_delegations_page_limit: Option<u32>,\n}\n\n#[cfg(feature = \"nymd-client\")]\nimpl Config {\n    pub fn new(\n        nymd_url: Url,\n        api_url: Url,\n        mixnet_contract_address: Option<cosmrs::AccountId>,\n    ) -> Self {\n        Config {\n            nymd_url,\n            mixnet_contract_address,\n            api_url,\n            mixnode_page_limit: None,\n            gateway_page_limit: None,\n            mixnode_delegations_page_limit: None,\n            gateway_delegations_page_limit: None,\n        }\n    }\n\n    pub fn with_mixnode_page_limit(mut self, limit: Option<u32>) -> Config {\n        self.mixnode_page_limit = limit;\n        self", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 62, "line": "// Copyright 2021 - Nym Technologies SA <contact@nymtech.net>\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 50, "line": "// Copyright 2021 - Nym Technologies SA <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 62, "chars": "// Copyright 2021 - Nym Technologies SA <contact@nymtech.net>\n"}], "added": [{"char_start": 0, "char_end": 50, "chars": "// Copyright 2021 - Nym Technologies SA <<EMAIL>>\n"}]}}
{"func_name": 5418, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    #[test]\n    fn valid_emails() {\n        assert!(validate_email(\"test@test.ch\").is_ok());\n        assert!(validate_email(\"test@test.test.ch\").is_ok());\n        assert!(validate_email(\"TEST@TEST.TEST.CH\").is_ok());\n        assert!(validate_email(\"a@b.c\").is_ok());\n        assert!(validate_email(\"rh+xy@kl.mu\").is_ok());\n        assert!(validate_email(\"mylongemail@mylongdomain.mytld\").is_ok());\n    }\n\n    #[test]\n    fn invalid_emails() {\n        assert!(validate_email(\"localhost\").is_err());\n        assert!(validate_email(\"me@me\").is_err());\n        assert!(validate_email(\"me@me@me\").is_err());\n        assert!(validate_email(\"me@me.me@me\").is_err());\n        assert!(validate_email(\"\").is_err());\n        assert!(validate_email(\" @ . \").is_err());\n        assert!(validate_email(\"test@test\").is_err());\n        assert!(validate_email(\"gmail.com\").is_err());\n    }\n\n    #[test]\n    fn valid_timezones() {\n        assert!(validate_timezone(\"Europe/Amsterdam\").is_ok());\n    }\n\n    #[test]\n    fn invalid_timezones() {\n        assert!(validate_timezone(\"Europe/Rotterdam\").is_err());\n        assert!(validate_timezone(\"Europe/\").is_err());\n        assert!(validate_timezone(\"Europe\").is_err());\n        assert!(validate_timezone(\"/\").is_err());\n        assert!(validate_timezone(\" \").is_err());\n        assert!(validate_timezone(\"\").is_err());\n    }\n}\n", "func_src_after": "\n    #[test]\n    fn valid_emails() {\n        assert!(validate_email(\"<EMAIL>\").is_ok());\n        assert!(validate_email(\"<EMAIL>\").is_ok());\n        assert!(validate_email(\"<EMAIL>\").is_ok());\n        assert!(validate_email(\"<EMAIL>\").is_ok());\n        assert!(validate_email(\"<EMAIL>\").is_ok());\n        assert!(validate_email(\"<EMAIL>\").is_ok());\n    }\n\n    #[test]\n    fn invalid_emails() {\n        assert!(validate_email(\"localhost\").is_err());\n        assert!(validate_email(\"me@me\").is_err());\n        assert!(validate_email(\"me@me@me\").is_err());\n        assert!(validate_email(\"me@me.me@me\").is_err());\n        assert!(validate_email(\"\").is_err());\n        assert!(validate_email(\" @ . \").is_err());\n        assert!(validate_email(\"test@test\").is_err());\n        assert!(validate_email(\"gmail.com\").is_err());\n    }\n\n    #[test]\n    fn valid_timezones() {\n        assert!(validate_timezone(\"Europe/Amsterdam\").is_ok());\n    }\n\n    #[test]\n    fn invalid_timezones() {\n        assert!(validate_timezone(\"Europe/Rotterdam\").is_err());\n        assert!(validate_timezone(\"Europe/\").is_err());\n        assert!(validate_timezone(\"Europe\").is_err());\n        assert!(validate_timezone(\"/\").is_err());\n        assert!(validate_timezone(\" \").is_err());\n        assert!(validate_timezone(\"\").is_err());\n    }\n}\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 37, "char_end": 94, "line": "        assert!(validate_email(\"test@test.ch\").is_ok());\n"}, {"line_no": 5, "char_start": 37, "char_end": 99, "line": "        assert!(validate_email(\"test@test.test.ch\").is_ok());\n"}, {"line_no": 6, "char_start": 37, "char_end": 99, "line": "        assert!(validate_email(\"TEST@TEST.TEST.CH\").is_ok());\n"}, {"line_no": 7, "char_start": 37, "char_end": 87, "line": "        assert!(validate_email(\"a@b.c\").is_ok());\n"}, {"line_no": 9, "char_start": 89, "char_end": 145, "line": "        assert!(validate_email(\"rh+xy@kl.mu\").is_ok());\n"}, {"line_no": 11, "char_start": 141, "char_end": 216, "line": "        assert!(validate_email(\"mylongemail@mylongdomain.mytld\").is_ok());\n"}], "added": [{"line_no": 8, "char_start": 37, "char_end": 89, "line": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"line_no": 10, "char_start": 89, "char_end": 141, "line": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"line_no": 12, "char_start": 141, "char_end": 193, "line": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"line_no": 13, "char_start": 193, "char_end": 245, "line": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"line_no": 14, "char_start": 245, "char_end": 297, "line": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"line_no": 15, "char_start": 297, "char_end": 349, "line": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}]}, "char_changes": {"deleted": [{"char_start": 37, "char_end": 94, "chars": "        assert!(validate_email(\"test@test.ch\").is_ok());\n"}, {"char_start": 37, "char_end": 99, "chars": "        assert!(validate_email(\"test@test.test.ch\").is_ok());\n"}, {"char_start": 37, "char_end": 99, "chars": "        assert!(validate_email(\"TEST@TEST.TEST.CH\").is_ok());\n"}, {"char_start": 37, "char_end": 87, "chars": "        assert!(validate_email(\"a@b.c\").is_ok());\n"}, {"char_start": 89, "char_end": 145, "chars": "        assert!(validate_email(\"rh+xy@kl.mu\").is_ok());\n"}, {"char_start": 141, "char_end": 216, "chars": "        assert!(validate_email(\"mylongemail@mylongdomain.mytld\").is_ok());\n"}], "added": [{"char_start": 37, "char_end": 89, "chars": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"char_start": 89, "char_end": 141, "chars": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"char_start": 141, "char_end": 193, "chars": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"char_start": 193, "char_end": 245, "chars": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"char_start": 245, "char_end": 297, "chars": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}, {"char_start": 297, "char_end": 349, "chars": "        assert!(validate_email(\"<EMAIL>\").is_ok());\n"}]}}
{"func_name": 5427, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        let addr = reader.local_addr()?;\n        let sender = UdpSocket::bind(ip_str).await?;\n        let saddr = sender.local_addr()?;\n        Ok((reader, addr, sender, saddr))\n    }\n\n    const TEST_NUM_MSGS: usize = 32;\n\n    async fn test_one_iter((reader, addr, sender, saddr): TestConfig) {\n        let sent = TEST_NUM_MSGS - 1;\n        for _ in 0..sent {\n            let data = [0; PACKET_DATA_SIZE];\n            sender.send_to(&data[..], &addr).await.unwrap();\n        }\n\n        let mut packets = vec![Packet::default(); TEST_NUM_MSGS];\n        let recv = recv_mmsg(&reader, &mut packets[..]).await.unwrap();\n        assert_eq!(sent, recv);\n        for packet in packets.iter().take(recv) {\n            assert_eq!(packet.meta.size, PACKET_DATA_SIZE);\n            assert_eq!(packet.meta.socket_addr(), saddr);\n        }\n    }\n\n    #[tokio::test]\n    async fn test_recv_mmsg_one_iter() {\n        test_one_iter(test_setup_reader_sender(\"127.0.0.1:0\").await.unwrap()).await;\n\n        match test_setup_reader_sender(\"::1:0\").await {\n            Ok(config) => test_one_iter(config).await,\n            Err(e) => warn!(\"Failed to configure IPv6: {:?}\", e),\n        }\n    }\n\n    async fn test_multi_iter((reader, addr, sender, saddr): TestConfig) {\n        let sent = TEST_NUM_MSGS + 10;\n        for _ in 0..sent {\n            let data = [0; PACKET_DATA_SIZE];\n            sender.send_to(&data[..], &addr).await.unwrap();\n        }\n\n        let mut packets = vec![Packet::default(); TEST_NUM_MSGS];\n        let recv = recv_mmsg(&reader, &mut packets[..]).await.unwrap();\n        assert_eq!(TEST_NUM_MSGS, recv);\n        for packet in packets.iter().take(recv) {\n            assert_eq!(packet.meta.size, PACKET_DATA_SIZE);\n            assert_eq!(packet.meta.socket_addr(), saddr);\n        }\n\n        packets", "func_src_after": "        let addr = reader.local_addr()?;\n        let sender = UdpSocket::bind(ip_str).await?;\n        let saddr = sender.local_addr()?;\n        Ok((reader, addr, sender, saddr))\n    }\n\n    const TEST_NUM_MSGS: usize = 32;\n\n    async fn test_one_iter((reader, addr, sender, saddr): TestConfig) {\n        let sent = TEST_NUM_MSGS - 1;\n        for _ in 0..sent {\n            let data = [0; PACKET_DATA_SIZE];\n            sender.send_to(&data[..], &addr).await.unwrap();\n        }\n\n        let mut packets = vec![Packet::default(); TEST_NUM_MSGS];\n        let recv = recv_mmsg(&reader, &mut packets[..]).await.unwrap();\n        assert_eq!(sent, recv);\n        for packet in packets.iter().take(recv) {\n            assert_eq!(packet.meta.size, PACKET_DATA_SIZE);\n            assert_eq!(packet.meta.socket_addr(), saddr);\n        }\n    }\n\n    #[tokio::test]\n    async fn test_recv_mmsg_one_iter() {\n        test_one_iter(test_setup_reader_sender(\"<IP-Address>:0\").await.unwrap()).await;\n\n        match test_setup_reader_sender(\"<IP-Address>\").await {\n            Ok(config) => test_one_iter(config).await,\n            Err(e) => warn!(\"Failed to configure IPv6: {:?}\", e),\n        }\n    }\n\n    async fn test_multi_iter((reader, addr, sender, saddr): TestConfig) {\n        let sent = TEST_NUM_MSGS + 10;\n        for _ in 0..sent {\n            let data = [0; PACKET_DATA_SIZE];\n            sender.send_to(&data[..], &addr).await.unwrap();\n        }\n\n        let mut packets = vec![Packet::default(); TEST_NUM_MSGS];\n        let recv = recv_mmsg(&reader, &mut packets[..]).await.unwrap();\n        assert_eq!(TEST_NUM_MSGS, recv);\n        for packet in packets.iter().take(recv) {\n            assert_eq!(packet.meta.size, PACKET_DATA_SIZE);\n            assert_eq!(packet.meta.socket_addr(), saddr);\n        }\n\n        packets", "line_changes": {"deleted": [{"line_no": 27, "char_start": 893, "char_end": 978, "line": "        test_one_iter(test_setup_reader_sender(\"127.0.0.1:0\").await.unwrap()).await;\n"}, {"line_no": 30, "char_start": 982, "char_end": 1038, "line": "        match test_setup_reader_sender(\"::1:0\").await {\n"}], "added": [{"line_no": 28, "char_start": 893, "char_end": 981, "line": "        test_one_iter(test_setup_reader_sender(\"<IP-Address>:0\").await.unwrap()).await;\n"}, {"line_no": 31, "char_start": 982, "char_end": 1045, "line": "        match test_setup_reader_sender(\"<IP-Address>\").await {\n"}]}, "char_changes": {"deleted": [{"char_start": 893, "char_end": 978, "chars": "        test_one_iter(test_setup_reader_sender(\"127.0.0.1:0\").await.unwrap()).await;\n"}, {"char_start": 982, "char_end": 1038, "chars": "        match test_setup_reader_sender(\"::1:0\").await {\n"}], "added": [{"char_start": 893, "char_end": 981, "chars": "        test_one_iter(test_setup_reader_sender(\"<IP-Address>:0\").await.unwrap()).await;\n"}, {"char_start": 982, "char_end": 1045, "chars": "        match test_setup_reader_sender(\"<IP-Address>\").await {\n"}]}}
{"func_name": 5431, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                .unwrap_or_default()\n                .is_empty()\n        {\n            // at least one option has not been specified or uri has no scheme,\n            // therefore cannot have a conflict with is_tls_enabled\n            return Ok(());\n        }\n        let is_tls_enabled = self.is_tls_enabled.unwrap();\n        let scheme_is_type_tls = self.default_is_tls_enabled();\n        if is_tls_enabled != scheme_is_type_tls {\n            Err(format!(\n                \"is_tls_enabled option {} does not match scheme in uri {}\",\n                is_tls_enabled,\n                **self.controller_uri.as_ref().unwrap()\n            ))\n        } else {\n            Ok(())\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use base64::encode;\n    use serial_test::serial;\n    use std::net::Ipv4Addr;\n\n    #[test]\n    #[serial]\n    fn test_get_set() {\n        let config = ClientConfigBuilder::default()\n            .max_connections_in_pool(15 as u32)\n            .connection_type(ConnectionType::Tokio)\n            .retry_policy(RetryWithBackoff::from_millis(1000))\n            .controller_uri(PravegaNodeUri::from(\"127.0.0.2:9091\".to_string()))\n            .build()\n            .unwrap();\n\n        assert_eq!(config.max_connections_in_pool(), 15 as u32);\n        assert_eq!(config.connection_type(), ConnectionType::Tokio);\n        assert_eq!(config.retry_policy(), RetryWithBackoff::from_millis(1000));\n        assert_eq!(\n            config.controller_uri().to_socket_addr().ip(),\n            Ipv4Addr::new(127, 0, 0, 2)\n        );\n        assert_eq!(config.controller_uri().to_socket_addr().port(), 9091);\n    }\n\n    #[test]", "func_src_after": "                .unwrap_or_default()\n                .is_empty()\n        {\n            // at least one option has not been specified or uri has no scheme,\n            // therefore cannot have a conflict with is_tls_enabled\n            return Ok(());\n        }\n        let is_tls_enabled = self.is_tls_enabled.unwrap();\n        let scheme_is_type_tls = self.default_is_tls_enabled();\n        if is_tls_enabled != scheme_is_type_tls {\n            Err(format!(\n                \"is_tls_enabled option {} does not match scheme in uri {}\",\n                is_tls_enabled,\n                **self.controller_uri.as_ref().unwrap()\n            ))\n        } else {\n            Ok(())\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use base64::encode;\n    use serial_test::serial;\n    use std::net::Ipv4Addr;\n\n    #[test]\n    #[serial]\n    fn test_get_set() {\n        let config = ClientConfigBuilder::default()\n            .max_connections_in_pool(15 as u32)\n            .connection_type(ConnectionType::Tokio)\n            .retry_policy(RetryWithBackoff::from_millis(1000))\n            .controller_uri(PravegaNodeUri::from(\"<IP-Address>:9091\".to_string()))\n            .build()\n            .unwrap();\n\n        assert_eq!(config.max_connections_in_pool(), 15 as u32);\n        assert_eq!(config.connection_type(), ConnectionType::Tokio);\n        assert_eq!(config.retry_policy(), RetryWithBackoff::from_millis(1000));\n        assert_eq!(\n            config.controller_uri().to_socket_addr().ip(),\n            Ipv4Addr::new(<IP-Address>)\n        );\n        assert_eq!(config.controller_uri().to_socket_addr().port(), 9091);\n    }\n\n    #[test]", "line_changes": {"deleted": [{"line_no": 36, "char_start": 1082, "char_end": 1162, "line": "            .controller_uri(PravegaNodeUri::from(\"127.0.0.2:9091\".to_string()))\n"}, {"line_no": 46, "char_start": 1503, "char_end": 1543, "line": "            Ipv4Addr::new(127, 0, 0, 2)\n"}], "added": [{"line_no": 37, "char_start": 1082, "char_end": 1165, "line": "            .controller_uri(PravegaNodeUri::from(\"<IP-Address>:9091\".to_string()))\n"}, {"line_no": 47, "char_start": 1503, "char_end": 1543, "line": "            Ipv4Addr::new(<IP-Address>)\n"}]}, "char_changes": {"deleted": [{"char_start": 1082, "char_end": 1162, "chars": "            .controller_uri(PravegaNodeUri::from(\"127.0.0.2:9091\".to_string()))\n"}, {"char_start": 1503, "char_end": 1543, "chars": "            Ipv4Addr::new(127, 0, 0, 2)\n"}], "added": [{"char_start": 1082, "char_end": 1165, "chars": "            .controller_uri(PravegaNodeUri::from(\"<IP-Address>:9091\".to_string()))\n"}, {"char_start": 1503, "char_end": 1543, "chars": "            Ipv4Addr::new(<IP-Address>)\n"}]}}
{"func_name": 5442, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        }\n\n        if let Some(ref mut handler) = self.handler {\n            match handler(request).await {\n                Some(response) => {\n                    debug!(\"Response: {:?}\", response);\n                    self.server.send((response.message, addr)).await?;\n                }\n                None => {\n                    debug!(\"No response\");\n                }\n            }\n        }\n        Ok(())\n    }\n\n    /// enable AllCoAP multicasts - adds the AllCoap addresses to the listener \n    /// - IPv4 AllCoAP multicast address is '224.0.1.187'\n    /// - IPv6 AllCoAp multicast addresses are 'ff0?::fd'\n    /// \n    /// Parameter segment is used with IPv6 to determine the first octet. \n    /// - It's value can be between 0x0 and 0xf. \n    /// - To join multiple segments, you have to call enable_discovery for each of the segments.\n    /// \n    /// For further details see method join_multicast\n    pub fn enable_all_coap(&mut self, segment: u8) {\n        assert!(segment <= 0xf);\n        let socket = self.server.socket.get_mut();\n        let m = match socket.local_addr().unwrap() {\n            SocketAddr::V4(_val) => {\n                IpAddr::V4(Ipv4Addr::new(224, 0, 1, 187))\n            },\n            SocketAddr::V6(_val) => {\n                IpAddr::V6(Ipv6Addr::new(0xff00 + segment as u16,0,0,0,0,0,0,0xfd))\n            },\n        };\n        self.join_multicast(m);\n    }\n\n    /// join multicast - adds the multicast addresses to the unicast listener \n    /// - IPv4 multicast address range is '224.0.0.0/4'\n    /// - IPv6 AllCoAp multicast addresses are 'ff00::/8'\n    /// \n    /// Parameter segment is used with IPv6 to determine the first octet. \n    /// - It's value can be between 0x0 and 0xf. \n    /// - To join multiple segments, you have to call enable_discovery for each of the segments.\n    ///\n    /// Some Multicast address scope\n    /// IPv6        IPv4 equivalent[16]\t        Scope\t            Purpose\n    /// ffx1::/16\t127.0.0.0/8\t                Interface-local\t    Packets with this destination address may not be sent over any network link, but must remain within the current node; this is the multicast equivalent of the unicast loopback address.", "func_src_after": "        }\n\n        if let Some(ref mut handler) = self.handler {\n            match handler(request).await {\n                Some(response) => {\n                    debug!(\"Response: {:?}\", response);\n                    self.server.send((response.message, addr)).await?;\n                }\n                None => {\n                    debug!(\"No response\");\n                }\n            }\n        }\n        Ok(())\n    }\n\n    /// enable AllCoAP multicasts - adds the AllCoap addresses to the listener \n    /// - IPv4 AllCoAP multicast address is '<IP-Address>'\n    /// - IPv6 AllCoAp multicast addresses are '<IP-Address>'\n    /// \n    /// Parameter segment is used with IPv6 to determine the first octet. \n    /// - It's value can be between 0x0 and 0xf. \n    /// - To join multiple segments, you have to call enable_discovery for each of the segments.\n    /// \n    /// For further details see method join_multicast\n    pub fn enable_all_coap(&mut self, segment: u8) {\n        assert!(segment <= 0xf);\n        let socket = self.server.socket.get_mut();\n        let m = match socket.local_addr().unwrap() {\n            SocketAddr::V4(_val) => {\n                IpAddr::V4(Ipv4Addr::new(224, 0, 1, 187))\n            },\n            SocketAddr::V6(_val) => {\n                IpAddr::V6(Ipv6Addr::new(0xff00 + segment as u16,0,0,0,0,0,0,0xfd))\n            },\n        };\n        self.join_multicast(m);\n    }\n\n    /// join multicast - adds the multicast addresses to the unicast listener \n    /// - IPv4 multicast address range is '<IP-Address>/4'\n    /// - IPv6 AllCoAp multicast addresses are '<IP-Address>/8'\n    /// \n    /// Parameter segment is used with IPv6 to determine the first octet. \n    /// - It's value can be between 0x0 and 0xf. \n    /// - To join multiple segments, you have to call enable_discovery for each of the segments.\n    ///\n    /// Some Multicast address scope\n    /// IPv6        IPv4 equivalent[16]\t        Scope\t            Purpose\n    /// <IP-Address>/16\t<IP-Address>/8\t                Interface-local\t    Packets with this destination address may not be sent over any network link, but must remain within the current node; this is the multicast equivalent of the unicast loopback address.", "line_changes": {"deleted": [{"line_no": 18, "char_start": 502, "char_end": 560, "line": "    /// - IPv4 AllCoAP multicast address is '224.0.1.187'\n"}, {"line_no": 20, "char_start": 561, "char_end": 619, "line": "    /// - IPv6 AllCoAp multicast addresses are 'ff0?::fd'\n"}, {"line_no": 43, "char_start": 1484, "char_end": 1540, "line": "    /// - IPv4 multicast address range is '224.0.0.0/4'\n"}, {"line_no": 45, "char_start": 1543, "char_end": 1601, "line": "    /// - IPv6 AllCoAp multicast addresses are 'ff00::/8'\n"}, {"line_no": 54, "char_start": 1957, "char_end": 2206, "line": "    /// ffx1::/16\t127.0.0.0/8\t                Interface-local\t    Packets with this destination address may not be sent over any network link, but must remain within the current node; this is the multicast equivalent of the unicast loopback address."}], "added": [{"line_no": 19, "char_start": 502, "char_end": 561, "line": "    /// - IPv4 AllCoAP multicast address is '<IP-Address>'\n"}, {"line_no": 21, "char_start": 561, "char_end": 623, "line": "    /// - IPv6 AllCoAp multicast addresses are '<IP-Address>'\n"}, {"line_no": 44, "char_start": 1484, "char_end": 1543, "line": "    /// - IPv4 multicast address range is '<IP-Address>/4'\n"}, {"line_no": 46, "char_start": 1543, "char_end": 1607, "line": "    /// - IPv6 AllCoAp multicast addresses are '<IP-Address>/8'\n"}, {"line_no": 55, "char_start": 1957, "char_end": 2215, "line": "    /// <IP-Address>/16\t<IP-Address>/8\t                Interface-local\t    Packets with this destination address may not be sent over any network link, but must remain within the current node; this is the multicast equivalent of the unicast loopback address."}]}, "char_changes": {"deleted": [{"char_start": 502, "char_end": 560, "chars": "    /// - IPv4 AllCoAP multicast address is '224.0.1.187'\n"}, {"char_start": 561, "char_end": 619, "chars": "    /// - IPv6 AllCoAp multicast addresses are 'ff0?::fd'\n"}, {"char_start": 1484, "char_end": 1540, "chars": "    /// - IPv4 multicast address range is '224.0.0.0/4'\n"}, {"char_start": 1543, "char_end": 1601, "chars": "    /// - IPv6 AllCoAp multicast addresses are 'ff00::/8'\n"}, {"char_start": 1957, "char_end": 2206, "chars": "    /// ffx1::/16\t127.0.0.0/8\t                Interface-local\t    Packets with this destination address may not be sent over any network link, but must remain within the current node; this is the multicast equivalent of the unicast loopback address."}], "added": [{"char_start": 502, "char_end": 561, "chars": "    /// - IPv4 AllCoAP multicast address is '<IP-Address>'\n"}, {"char_start": 561, "char_end": 623, "chars": "    /// - IPv6 AllCoAp multicast addresses are '<IP-Address>'\n"}, {"char_start": 1484, "char_end": 1543, "chars": "    /// - IPv4 multicast address range is '<IP-Address>/4'\n"}, {"char_start": 1543, "char_end": 1607, "chars": "    /// - IPv6 AllCoAp multicast addresses are '<IP-Address>/8'\n"}, {"char_start": 1957, "char_end": 2215, "chars": "    /// <IP-Address>/16\t<IP-Address>/8\t                Interface-local\t    Packets with this destination address may not be sent over any network link, but must remain within the current node; this is the multicast equivalent of the unicast loopback address."}]}}
{"func_name": 5443, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    /// ffx2::/16\t224.0.0.0/24\t            Link-local\t        Packets with this destination address may not be routed anywhere.\n    /// ffx3::/16\t239.255.0.0/16\t            IPv4 local scope\n    /// ffx4::/16\t            \t            Admin-local\t        The smallest scope that must be administratively configured.\n    /// ffx5::/16\t\t                        Site-local\t        Restricted to the local physical network.\n    /// ffx8::/16\t239.192.0.0/14\t            Organization-local\tRestricted to networks used by the organization administering the local network. (For example, these addresses might be used over VPNs; when packets for this group are routed over the public internet (where these addresses are not valid), they would have to be encapsulated in some other protocol.)\n    /// ffxe::/16\t224.0.1.0-238.255.255.255\tGlobal scope\t    Eligible to be routed over the public internet.\n    /// \n    /// Notable addresses:\n    /// ff02::1\t    All nodes on the local network segment\n    /// ff0x::c\t    Simple Service Discovery Protocol\n    /// ff0x::fb\tMulticast DNS\n    /// ff0x::fb\tMulticast CoAP\n    /// ff0x::114\tUsed for experiments\n    pub fn join_multicast(&mut self, addr: IpAddr) {\n        self.server.join_multicast(addr);\n    }\n\n    /// leave multicast - remove the multicast address from the listener \n    pub fn leave_multicast(&mut self, addr: IpAddr) {\n        self.server.leave_multicast(addr);\n    }    \n}\n\npub struct CoAPServer {\n    receiver: MessageReceiver,\n    is_terminated: bool,\n    socket: UdpFramed<Codec>,\n    multicast_addresses: Vec<IpAddr>,\n}\n\nimpl CoAPServer {\n    /// Creates a CoAP server listening on the given address.\n    pub fn new<A: ToSocketAddrs>(addr: A, receiver: MessageReceiver) -> Result<CoAPServer, io::Error> {\n        let socket = UdpSocket::from_std(net::UdpSocket::bind(addr).unwrap())?;\n\n        Ok(CoAPServer {\n            receiver,\n            is_terminated: false,\n            socket: UdpFramed::new(socket, Codec::new()),\n            multicast_addresses: Vec::new(),\n        })\n    }\n\n    /// Stop the server.\n    pub fn stop(&mut self) {\n        self.is_terminated = true;\n    }\n\n    /// send the packet to the specific address.\n    pub async fn send(&mut self, frame: (Packet, SocketAddr)) -> Result<(), io::Error> {", "func_src_after": "    /// <IP-Address>/16\t<IP-Address>/24\t            Link-local\t        Packets with this destination address may not be routed anywhere.\n    /// <IP-Address>/16\t<IP-Address>/16\t            IPv4 local scope\n    /// <IP-Address>/16\t            \t            Admin-local\t        The smallest scope that must be administratively configured.\n    /// <IP-Address>/16\t\t                        Site-local\t        Restricted to the local physical network.\n    /// <IP-Address>/16\t<IP-Address>/14\t            Organization-local\tRestricted to networks used by the organization administering the local network. (For example, these addresses might be used over VPNs; when packets for this group are routed over the public internet (where these addresses are not valid), they would have to be encapsulated in some other protocol.)\n    /// <IP-Address>/16\t<IP-Address>-<IP-Address>\tGlobal scope\t    Eligible to be routed over the public internet.\n    /// \n    /// Notable addresses:\n    /// <IP-Address>1\t    All nodes on the local network segment\n    /// <IP-Address>c\t    Simple Service Discovery Protocol\n    /// <IP-Address>fb\tMulticast DNS\n    /// <IP-Address>fb\tMulticast CoAP\n    /// <IP-Address>114\tUsed for experiments\n    pub fn join_multicast(&mut self, addr: IpAddr) {\n        self.server.join_multicast(addr);\n    }\n\n    /// leave multicast - remove the multicast address from the listener \n    pub fn leave_multicast(&mut self, addr: IpAddr) {\n        self.server.leave_multicast(addr);\n    }    \n}\n\npub struct CoAPServer {\n    receiver: MessageReceiver,\n    is_terminated: bool,\n    socket: UdpFramed<Codec>,\n    multicast_addresses: Vec<IpAddr>,\n}\n\nimpl CoAPServer {\n    /// Creates a CoAP server listening on the given address.\n    pub fn new<A: ToSocketAddrs>(addr: A, receiver: MessageReceiver) -> Result<CoAPServer, io::Error> {\n        let socket = UdpSocket::from_std(net::UdpSocket::bind(addr).unwrap())?;\n\n        Ok(CoAPServer {\n            receiver,\n            is_terminated: false,\n            socket: UdpFramed::new(socket, Codec::new()),\n            multicast_addresses: Vec::new(),\n        })\n    }\n\n    /// Stop the server.\n    pub fn stop(&mut self) {\n        self.is_terminated = true;\n    }\n\n    /// send the packet to the specific address.\n    pub async fn send(&mut self, frame: (Packet, SocketAddr)) -> Result<(), io::Error> {", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 128, "line": "    /// ffx2::/16\t224.0.0.0/24\t            Link-local\t        Packets with this destination address may not be routed anywhere.\n"}, {"line_no": 3, "char_start": 137, "char_end": 199, "line": "    /// ffx3::/16\t239.255.0.0/16\t            IPv4 local scope\n"}, {"line_no": 5, "char_start": 206, "char_end": 330, "line": "    /// ffx4::/16\t            \t            Admin-local\t        The smallest scope that must be administratively configured.\n"}, {"line_no": 7, "char_start": 336, "char_end": 440, "line": "    /// ffx5::/16\t\t                        Site-local\t        Restricted to the local physical network.\n"}, {"line_no": 9, "char_start": 446, "char_end": 809, "line": "    /// ffx8::/16\t239.192.0.0/14\t            Organization-local\tRestricted to networks used by the organization administering the local network. (For example, these addresses might be used over VPNs; when packets for this group are routed over the public internet (where these addresses are not valid), they would have to be encapsulated in some other protocol.)\n"}, {"line_no": 11, "char_start": 816, "char_end": 925, "line": "    /// ffxe::/16\t224.0.1.0-238.255.255.255\tGlobal scope\t    Eligible to be routed over the public internet.\n"}, {"line_no": 15, "char_start": 967, "char_end": 1026, "line": "    /// ff02::1\t    All nodes on the local network segment\n"}, {"line_no": 17, "char_start": 1032, "char_end": 1086, "line": "    /// ff0x::c\t    Simple Service Discovery Protocol\n"}, {"line_no": 19, "char_start": 1092, "char_end": 1123, "line": "    /// ff0x::fb\tMulticast DNS\n"}, {"line_no": 20, "char_start": 1092, "char_end": 1124, "line": "    /// ff0x::fb\tMulticast CoAP\n"}, {"line_no": 23, "char_start": 1167, "char_end": 1206, "line": "    /// ff0x::114\tUsed for experiments\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 137, "line": "    /// <IP-Address>/16\t<IP-Address>/24\t            Link-local\t        Packets with this destination address may not be routed anywhere.\n"}, {"line_no": 4, "char_start": 137, "char_end": 206, "line": "    /// <IP-Address>/16\t<IP-Address>/16\t            IPv4 local scope\n"}, {"line_no": 6, "char_start": 206, "char_end": 336, "line": "    /// <IP-Address>/16\t            \t            Admin-local\t        The smallest scope that must be administratively configured.\n"}, {"line_no": 8, "char_start": 336, "char_end": 446, "line": "    /// <IP-Address>/16\t\t                        Site-local\t        Restricted to the local physical network.\n"}, {"line_no": 10, "char_start": 446, "char_end": 816, "line": "    /// <IP-Address>/16\t<IP-Address>/14\t            Organization-local\tRestricted to networks used by the organization administering the local network. (For example, these addresses might be used over VPNs; when packets for this group are routed over the public internet (where these addresses are not valid), they would have to be encapsulated in some other protocol.)\n"}, {"line_no": 12, "char_start": 816, "char_end": 931, "line": "    /// <IP-Address>/16\t<IP-Address>-<IP-Address>\tGlobal scope\t    Eligible to be routed over the public internet.\n"}, {"line_no": 16, "char_start": 967, "char_end": 1032, "line": "    /// <IP-Address>1\t    All nodes on the local network segment\n"}, {"line_no": 18, "char_start": 1032, "char_end": 1092, "line": "    /// <IP-Address>c\t    Simple Service Discovery Protocol\n"}, {"line_no": 21, "char_start": 1092, "char_end": 1129, "line": "    /// <IP-Address>fb\tMulticast DNS\n"}, {"line_no": 22, "char_start": 1129, "char_end": 1167, "line": "    /// <IP-Address>fb\tMulticast CoAP\n"}, {"line_no": 24, "char_start": 1167, "char_end": 1212, "line": "    /// <IP-Address>114\tUsed for experiments\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 128, "chars": "    /// ffx2::/16\t224.0.0.0/24\t            Link-local\t        Packets with this destination address may not be routed anywhere.\n"}, {"char_start": 137, "char_end": 199, "chars": "    /// ffx3::/16\t239.255.0.0/16\t            IPv4 local scope\n"}, {"char_start": 206, "char_end": 330, "chars": "    /// ffx4::/16\t            \t            Admin-local\t        The smallest scope that must be administratively configured.\n"}, {"char_start": 336, "char_end": 440, "chars": "    /// ffx5::/16\t\t                        Site-local\t        Restricted to the local physical network.\n"}, {"char_start": 446, "char_end": 809, "chars": "    /// ffx8::/16\t239.192.0.0/14\t            Organization-local\tRestricted to networks used by the organization administering the local network. (For example, these addresses might be used over VPNs; when packets for this group are routed over the public internet (where these addresses are not valid), they would have to be encapsulated in some other protocol.)\n"}, {"char_start": 816, "char_end": 925, "chars": "    /// ffxe::/16\t224.0.1.0-238.255.255.255\tGlobal scope\t    Eligible to be routed over the public internet.\n"}, {"char_start": 967, "char_end": 1026, "chars": "    /// ff02::1\t    All nodes on the local network segment\n"}, {"char_start": 1032, "char_end": 1086, "chars": "    /// ff0x::c\t    Simple Service Discovery Protocol\n"}, {"char_start": 1092, "char_end": 1123, "chars": "    /// ff0x::fb\tMulticast DNS\n"}, {"char_start": 1092, "char_end": 1124, "chars": "    /// ff0x::fb\tMulticast CoAP\n"}, {"char_start": 1167, "char_end": 1206, "chars": "    /// ff0x::114\tUsed for experiments\n"}], "added": [{"char_start": 0, "char_end": 137, "chars": "    /// <IP-Address>/16\t<IP-Address>/24\t            Link-local\t        Packets with this destination address may not be routed anywhere.\n"}, {"char_start": 137, "char_end": 206, "chars": "    /// <IP-Address>/16\t<IP-Address>/16\t            IPv4 local scope\n"}, {"char_start": 206, "char_end": 336, "chars": "    /// <IP-Address>/16\t            \t            Admin-local\t        The smallest scope that must be administratively configured.\n"}, {"char_start": 336, "char_end": 446, "chars": "    /// <IP-Address>/16\t\t                        Site-local\t        Restricted to the local physical network.\n"}, {"char_start": 446, "char_end": 816, "chars": "    /// <IP-Address>/16\t<IP-Address>/14\t            Organization-local\tRestricted to networks used by the organization administering the local network. (For example, these addresses might be used over VPNs; when packets for this group are routed over the public internet (where these addresses are not valid), they would have to be encapsulated in some other protocol.)\n"}, {"char_start": 816, "char_end": 931, "chars": "    /// <IP-Address>/16\t<IP-Address>-<IP-Address>\tGlobal scope\t    Eligible to be routed over the public internet.\n"}, {"char_start": 967, "char_end": 1032, "chars": "    /// <IP-Address>1\t    All nodes on the local network segment\n"}, {"char_start": 1032, "char_end": 1092, "chars": "    /// <IP-Address>c\t    Simple Service Discovery Protocol\n"}, {"char_start": 1092, "char_end": 1129, "chars": "    /// <IP-Address>fb\tMulticast DNS\n"}, {"char_start": 1129, "char_end": 1167, "chars": "    /// <IP-Address>fb\tMulticast CoAP\n"}, {"char_start": 1167, "char_end": 1212, "chars": "    /// <IP-Address>114\tUsed for experiments\n"}]}}
{"func_name": 5444, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        assert_eq!(uri_path_list.len(), 1);\n        \n        match req.response {\n            Some(mut response) => {\n                response.message.payload = uri_path_list.front().unwrap().clone();\n                Some(response)\n            }\n            _ => None,\n        }\n    }\n\n    pub fn spawn_server_with_all_coap<F: FnMut(CoapRequest<SocketAddr>) -> HandlerRet + Send + 'static, HandlerRet>(ip: &'static str, request_handler: F, segment: u8) -> mpsc::Receiver<u16>  where HandlerRet: Future<Output=Option<CoapResponse>> {\n        let (tx, rx) = mpsc::channel();\n\n        std::thread::Builder::new().name(String::from(\"v4-server\")).spawn(move || {\n            tokio::runtime::Runtime::new().unwrap().block_on(async move {\n                // multicast needs a server on a real interface\n                let mut server = server::Server::new((ip, 0)).unwrap();\n                server.enable_all_coap(segment);\n\n                tx.send(server.socket_addr().unwrap().port()).unwrap();\n                \n                server.run(request_handler).await.unwrap();\n            })\n        }).unwrap();\n        \n        rx\n    }\n\n    #[test]\n    fn test_echo_server() {\n        let server_port = spawn_server(\"127.0.0.1:0\", request_handler).recv().unwrap();\n\n        let client = CoAPClient::new(format!(\"127.0.0.1:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::Confirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 1;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());\n        client.send(&request).unwrap();\n\n        let recv_packet = client.receive().unwrap();\n        assert_eq!(recv_packet.message.payload, b\"test-echo\".to_vec());\n    }\n\n    #[test]\n    #[ignore]\n    fn test_echo_server_v6() {", "func_src_after": "        assert_eq!(uri_path_list.len(), 1);\n        \n        match req.response {\n            Some(mut response) => {\n                response.message.payload = uri_path_list.front().unwrap().clone();\n                Some(response)\n            }\n            _ => None,\n        }\n    }\n\n    pub fn spawn_server_with_all_coap<F: FnMut(CoapRequest<SocketAddr>) -> HandlerRet + Send + 'static, HandlerRet>(ip: &'static str, request_handler: F, segment: u8) -> mpsc::Receiver<u16>  where HandlerRet: Future<Output=Option<CoapResponse>> {\n        let (tx, rx) = mpsc::channel();\n\n        std::thread::Builder::new().name(String::from(\"v4-server\")).spawn(move || {\n            tokio::runtime::Runtime::new().unwrap().block_on(async move {\n                // multicast needs a server on a real interface\n                let mut server = server::Server::new((ip, 0)).unwrap();\n                server.enable_all_coap(segment);\n\n                tx.send(server.socket_addr().unwrap().port()).unwrap();\n                \n                server.run(request_handler).await.unwrap();\n            })\n        }).unwrap();\n        \n        rx\n    }\n\n    #[test]\n    fn test_echo_server() {\n        let server_port = spawn_server(\"<IP-Address>:0\", request_handler).recv().unwrap();\n\n        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::Confirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 1;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());\n        client.send(&request).unwrap();\n\n        let recv_packet = client.receive().unwrap();\n        assert_eq!(recv_packet.message.payload, b\"test-echo\".to_vec());\n    }\n\n    #[test]\n    #[ignore]\n    fn test_echo_server_v6() {", "line_changes": {"deleted": [{"line_no": 32, "char_start": 1170, "char_end": 1258, "line": "        let server_port = spawn_server(\"127.0.0.1:0\", request_handler).recv().unwrap();\n"}, {"line_no": 35, "char_start": 1262, "char_end": 1347, "line": "        let client = CoAPClient::new(format!(\"127.0.0.1:{}\", server_port)).unwrap();\n"}], "added": [{"line_no": 33, "char_start": 1170, "char_end": 1261, "line": "        let server_port = spawn_server(\"<IP-Address>:0\", request_handler).recv().unwrap();\n"}, {"line_no": 36, "char_start": 1262, "char_end": 1350, "line": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}]}, "char_changes": {"deleted": [{"char_start": 1170, "char_end": 1258, "chars": "        let server_port = spawn_server(\"127.0.0.1:0\", request_handler).recv().unwrap();\n"}, {"char_start": 1262, "char_end": 1347, "chars": "        let client = CoAPClient::new(format!(\"127.0.0.1:{}\", server_port)).unwrap();\n"}], "added": [{"char_start": 1170, "char_end": 1261, "chars": "        let server_port = spawn_server(\"<IP-Address>:0\", request_handler).recv().unwrap();\n"}, {"char_start": 1262, "char_end": 1350, "chars": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}]}}
{"func_name": 5447, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    #[test]\n    fn multicast_server_all_coap() {\n        // segment not relevant with IPv4\n        let segment = 0x0;\n        let server_port = spawn_server_with_all_coap(\"0.0.0.0\", request_handler, segment).recv().unwrap();\n\n        let client = CoAPClient::new(format!(\"127.0.0.1:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::Confirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 1;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());\n        client.send(&request).unwrap();\n\n        let recv_packet = client.receive().unwrap();\n        assert_eq!(recv_packet.message.payload, b\"test-echo\".to_vec());\n\n        let client = CoAPClient::new(format!(\"224.0.1.187:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::NonConfirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 2;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());\n        client.send_all_coap(&request, segment).unwrap();\n\n        let recv_packet = client.receive().unwrap();\n        assert_eq!(recv_packet.message.payload, b\"test-echo\".to_vec());\n    }\n\n    //This test right now does not work on windows\n    #[cfg(unix)]\n    #[test]\n    #[ignore]\n    fn multicast_server_all_coap_v6() {\n        // use segment 0x04 which should be the smallest administered scope\n        let segment = 0x04;\n        let server_port = spawn_server_with_all_coap(\"::0\", request_handler, segment).recv().unwrap();\n\n        let client = CoAPClient::new(format!(\"::1:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::Confirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 1;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());", "func_src_after": "    #[test]\n    fn multicast_server_all_coap() {\n        // segment not relevant with IPv4\n        let segment = 0x0;\n        let server_port = spawn_server_with_all_coap(\"<IP-Address>\", request_handler, segment).recv().unwrap();\n\n        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::Confirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 1;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());\n        client.send(&request).unwrap();\n\n        let recv_packet = client.receive().unwrap();\n        assert_eq!(recv_packet.message.payload, b\"test-echo\".to_vec());\n\n        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::NonConfirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 2;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());\n        client.send_all_coap(&request, segment).unwrap();\n\n        let recv_packet = client.receive().unwrap();\n        assert_eq!(recv_packet.message.payload, b\"test-echo\".to_vec());\n    }\n\n    //This test right now does not work on windows\n    #[cfg(unix)]\n    #[test]\n    #[ignore]\n    fn multicast_server_all_coap_v6() {\n        // use segment 0x04 which should be the smallest administered scope\n        let segment = 0x04;\n        let server_port = spawn_server_with_all_coap(\"<IP-Address>\", request_handler, segment).recv().unwrap();\n\n        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n        let mut request = CoapRequest::new();\n        request.message.header.set_version(1);\n        request.message.header.set_type(coap_lite::MessageType::Confirmable);\n        request.message.header.set_code(\"0.01\");\n        request.message.header.message_id = 1;\n        request.message.set_token(vec![0x51, 0x55, 0x77, 0xE8]);\n        request.message.add_option(CoapOption::UriPath, b\"test-echo\".to_vec());", "line_changes": {"deleted": [{"line_no": 5, "char_start": 118, "char_end": 225, "line": "        let server_port = spawn_server_with_all_coap(\"0.0.0.0\", request_handler, segment).recv().unwrap();\n"}, {"line_no": 8, "char_start": 231, "char_end": 316, "line": "        let client = CoAPClient::new(format!(\"127.0.0.1:{}\", server_port)).unwrap();\n"}, {"line_no": 22, "char_start": 898, "char_end": 985, "line": "        let client = CoAPClient::new(format!(\"224.0.1.187:{}\", server_port)).unwrap();\n"}, {"line_no": 44, "char_start": 1830, "char_end": 1933, "line": "        let server_port = spawn_server_with_all_coap(\"::0\", request_handler, segment).recv().unwrap();\n"}, {"line_no": 47, "char_start": 1943, "char_end": 2022, "line": "        let client = CoAPClient::new(format!(\"::1:{}\", server_port)).unwrap();\n"}], "added": [{"line_no": 6, "char_start": 118, "char_end": 230, "line": "        let server_port = spawn_server_with_all_coap(\"<IP-Address>\", request_handler, segment).recv().unwrap();\n"}, {"line_no": 9, "char_start": 231, "char_end": 319, "line": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}, {"line_no": 23, "char_start": 898, "char_end": 986, "line": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}, {"line_no": 45, "char_start": 1830, "char_end": 1942, "line": "        let server_port = spawn_server_with_all_coap(\"<IP-Address>\", request_handler, segment).recv().unwrap();\n"}, {"line_no": 48, "char_start": 1943, "char_end": 2031, "line": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}]}, "char_changes": {"deleted": [{"char_start": 118, "char_end": 225, "chars": "        let server_port = spawn_server_with_all_coap(\"0.0.0.0\", request_handler, segment).recv().unwrap();\n"}, {"char_start": 231, "char_end": 316, "chars": "        let client = CoAPClient::new(format!(\"127.0.0.1:{}\", server_port)).unwrap();\n"}, {"char_start": 898, "char_end": 985, "chars": "        let client = CoAPClient::new(format!(\"224.0.1.187:{}\", server_port)).unwrap();\n"}, {"char_start": 1830, "char_end": 1933, "chars": "        let server_port = spawn_server_with_all_coap(\"::0\", request_handler, segment).recv().unwrap();\n"}, {"char_start": 1943, "char_end": 2022, "chars": "        let client = CoAPClient::new(format!(\"::1:{}\", server_port)).unwrap();\n"}], "added": [{"char_start": 118, "char_end": 230, "chars": "        let server_port = spawn_server_with_all_coap(\"<IP-Address>\", request_handler, segment).recv().unwrap();\n"}, {"char_start": 231, "char_end": 319, "chars": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}, {"char_start": 898, "char_end": 986, "chars": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}, {"char_start": 1830, "char_end": 1942, "chars": "        let server_port = spawn_server_with_all_coap(\"<IP-Address>\", request_handler, segment).recv().unwrap();\n"}, {"char_start": 1943, "char_end": 2031, "chars": "        let client = CoAPClient::new(format!(\"<IP-Address>:{}\", server_port)).unwrap();\n"}]}}
{"func_name": 5490, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    debug!(\"============================================================\");\n\n    // create a signal using this private key on some topic; this also includes building a STARK\n    // proof attesting that the private key is in the access set, and that the nullifier contained\n    // in the signal was built correctly.\n    let now = Instant::now();\n    let signal = access_set.make_signal(&my_key, TOPIC);\n    debug!(\n        \"---------------------\\nSignal created in {} ms\",\n        now.elapsed().as_millis()\n    );\n\n    // print out some stats about the proof\n    debug!(\"{}\", signal);\n    debug!(\"---------------------\");\n\n    // the signal should be valid against this topic\n    let now = Instant::now();\n    match access_set.verify_signal(TOPIC, signal.clone()) {\n        Ok(_) => debug!(\n            \"Signal verified in {:.1} ms\",\n            now.elapsed().as_micros() as f64 / 1000f64\n        ),\n        Err(err) => debug!(\"something went terribly wrong: {}\", err),\n    }\n    debug!(\"============================================================\");\n\n    assert_ne!(\n        signal.nullifier.to_bytes(),\n        hex::decode(\"fa9f5e2287b26f5fc91643a65ecfebbf308c6230283cd5c2a6a57ffe8a60e19d\").unwrap()\n    );\n}\n\n// PUZZLE DESCRIPTION\n// ================================================================================================\n\nconst PUZZLE_DESCRIPTION: &str = \"\\\nAlice implemented a Semaphore protocol to collect anonymous votes from her friends on various\ntopics. She collected public keys from 7 of her friends, and together with her public key, built\nan access set out of them.\n\nDuring one of the votes, Alice collected 9 valid signals on the same topic. But that should not be\npossible! The semaphore protocol guarantees that every user can vote only once on a given topic.\nSomeone must have figured out how to create multiple signals on the same topic.\n\nBelow is a transcript for generating a valid signal on a topic using your private key. Can you\nfigure out how to create a valid signal with a different nullifier on the same topic?\n\";\n", "func_src_after": "\n    debug!(\"============================================================\");\n\n    // create a signal using this private key on some topic; this also includes building a STARK\n    // proof attesting that the private key is in the access set, and that the nullifier contained\n    // in the signal was built correctly.\n    let now = Instant::now();\n    let signal = access_set.make_signal(&my_key, TOPIC);\n    debug!(\n        \"---------------------\\nSignal created in {} ms\",\n        now.elapsed().as_millis()\n    );\n\n    // print out some stats about the proof\n    debug!(\"{}\", signal);\n    debug!(\"---------------------\");\n\n    // the signal should be valid against this topic\n    let now = Instant::now();\n    match access_set.verify_signal(TOPIC, signal.clone()) {\n        Ok(_) => debug!(\n            \"Signal verified in {:.1} ms\",\n            now.elapsed().as_micros() as f64 / 1000f64\n        ),\n        Err(err) => debug!(\"something went terribly wrong: {}\", err),\n    }\n    debug!(\"============================================================\");\n\n    assert_ne!(\n        signal.nullifier.to_bytes(),\n        hex::decode(\"fa9f5e2287b26f5fc91643a65ecfebbf308c6230283cd5c2a6a57ffe8a60e19d\").unwrap()\n    );\n}\n\n// PUZZLE DESCRIPTION\n// ================================================================================================\n\nconst PUZZLE_DESCRIPTION: &str = \"\\\nAlice implemented a Semaphore protocol to collect anonymous votes from her friends on various\ntopics. She collected public keys from 7 of her friends, and together with her public key, built\nan access set out of them.\n\nDuring one of the votes, Alice collected 9 valid signals on the same topic. But that should not be\npossible! The semaphore protocol guarantees that every user can vote only once on a given topic.\nSomeone must have figured out how to create multiple signals on the same topic.\n\nBelow is a transcript for generating a valid signal on a topic using your private key. Can you\nfigure out how to create a valid signal with a different nullifier on the same topic?\n\";\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5532, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    }\n\n    /// Test ipv4 search with large ndots.\n    pub fn search_ipv4_large_ndots_test<E: Executor + Send + 'static, R: RuntimeProvider>(\n        mut exec: E,\n        handle: R::Handle,\n    ) {\n        let mut config = ResolverConfig::default();\n        config.add_search(Name::from_str(\"example.com\").unwrap());\n\n        let resolver = AsyncResolver::<GenericConnection, GenericConnectionProvider<R>>::new(\n            config,\n            ResolverOpts {\n                ip_strategy: LookupIpStrategy::Ipv4Only,\n                ndots: 5,\n                ..ResolverOpts::default()\n            },\n            handle,\n        )\n        .expect(\"failed to create resolver\");\n\n        let response = exec\n            .block_on(resolver.lookup_ip(\"198.51.100.35\"))\n            .expect(\"failed to run lookup\");\n\n        let mut iter = response.iter();\n        assert_eq!(\n            iter.next().expect(\"no rdatas\"),\n            IpAddr::V4(Ipv4Addr::new(198, 51, 100, 35))\n        );\n    }\n\n    /// Test ipv6 search with large ndots.\n    pub fn search_ipv6_large_ndots_test<E: Executor + Send + 'static, R: RuntimeProvider>(\n        mut exec: E,\n        handle: R::Handle,\n    ) {\n        let mut config = ResolverConfig::default();\n        config.add_search(Name::from_str(\"example.com\").unwrap());\n\n        let resolver = AsyncResolver::<GenericConnection, GenericConnectionProvider<R>>::new(\n            config,\n            ResolverOpts {\n                ip_strategy: LookupIpStrategy::Ipv4Only,\n                ndots: 5,\n                ..ResolverOpts::default()\n            },\n            handle,\n        )\n        .expect(\"failed to create resolver\");", "func_src_after": "    }\n\n    /// Test ipv4 search with large ndots.\n    pub fn search_ipv4_large_ndots_test<E: Executor + Send + 'static, R: RuntimeProvider>(\n        mut exec: E,\n        handle: R::Handle,\n    ) {\n        let mut config = ResolverConfig::default();\n        config.add_search(Name::from_str(\"example.com\").unwrap());\n\n        let resolver = AsyncResolver::<GenericConnection, GenericConnectionProvider<R>>::new(\n            config,\n            ResolverOpts {\n                ip_strategy: LookupIpStrategy::Ipv4Only,\n                ndots: 5,\n                ..ResolverOpts::default()\n            },\n            handle,\n        )\n        .expect(\"failed to create resolver\");\n\n        let response = exec\n            .block_on(resolver.lookup_ip(\"<IP-Address>\"))\n            .expect(\"failed to run lookup\");\n\n        let mut iter = response.iter();\n        assert_eq!(\n            iter.next().expect(\"no rdatas\"),\n            IpAddr::V4(Ipv4Addr::new(<IP-Address>))\n        );\n    }\n\n    /// Test ipv6 search with large ndots.\n    pub fn search_ipv6_large_ndots_test<E: Executor + Send + 'static, R: RuntimeProvider>(\n        mut exec: E,\n        handle: R::Handle,\n    ) {\n        let mut config = ResolverConfig::default();\n        config.add_search(Name::from_str(\"example.com\").unwrap());\n\n        let resolver = AsyncResolver::<GenericConnection, GenericConnectionProvider<R>>::new(\n            config,\n            ResolverOpts {\n                ip_strategy: LookupIpStrategy::Ipv4Only,\n                ndots: 5,\n                ..ResolverOpts::default()\n            },\n            handle,\n        )\n        .expect(\"failed to create resolver\");", "line_changes": {"deleted": [{"line_no": 23, "char_start": 703, "char_end": 762, "line": "            .block_on(resolver.lookup_ip(\"198.51.100.35\"))\n"}, {"line_no": 30, "char_start": 912, "char_end": 968, "line": "            IpAddr::V4(Ipv4Addr::new(198, 51, 100, 35))\n"}], "added": [{"line_no": 24, "char_start": 703, "char_end": 761, "line": "            .block_on(resolver.lookup_ip(\"<IP-Address>\"))\n"}, {"line_no": 31, "char_start": 912, "char_end": 964, "line": "            IpAddr::V4(Ipv4Addr::new(<IP-Address>))\n"}]}, "char_changes": {"deleted": [{"char_start": 703, "char_end": 762, "chars": "            .block_on(resolver.lookup_ip(\"198.51.100.35\"))\n"}, {"char_start": 912, "char_end": 968, "chars": "            IpAddr::V4(Ipv4Addr::new(198, 51, 100, 35))\n"}], "added": [{"char_start": 703, "char_end": 761, "chars": "            .block_on(resolver.lookup_ip(\"<IP-Address>\"))\n"}, {"char_start": 912, "char_end": 964, "chars": "            IpAddr::V4(Ipv4Addr::new(<IP-Address>))\n"}]}}
{"func_name": 5538, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        let mut mev = default_mev();\n\n        assert_eq!(mev.entry_body().username().as_str(), DEFAULT_USERNAME);\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_username(\"username\".into());\n\n        assert_eq!(mev.entry_body().username().as_str(), \"username\");\n        assert!(mev.is_modified);\n    }\n\n    #[test]\n    fn update_password() {\n        let mut mev = default_mev();\n\n        assert_eq!(mev.entry_body().password().as_str(), DEFAULT_PASSWORD);\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_password(\"password\".into());\n\n        assert_eq!(mev.entry_body().password().as_str(), \"password\");\n        assert!(mev.is_modified);\n    }\n\n    #[test]\n    fn update_web_address() {\n        let mut mev = default_mev();\n\n        assert!(mev.entry_head().web_address().as_str().is_empty());\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_web_address(\"https://example.com\".into());\n\n        assert_eq!(\n            mev.entry_head().web_address().as_str(),\n            \"https://example.com\"\n        );\n        assert!(mev.is_modified);\n    }\n\n    #[test]\n    fn update_email() {\n        let mut mev = default_mev();\n\n        assert!(mev.entry_body().email().as_str().is_empty());\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_email(\"example@web_address.de\".into());\n\n        assert_eq!(mev.entry_body().email().as_str(), \"example@web_address.de\");", "func_src_after": "        let mut mev = default_mev();\n\n        assert_eq!(mev.entry_body().username().as_str(), DEFAULT_USERNAME);\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_username(\"username\".into());\n\n        assert_eq!(mev.entry_body().username().as_str(), \"username\");\n        assert!(mev.is_modified);\n    }\n\n    #[test]\n    fn update_password() {\n        let mut mev = default_mev();\n\n        assert_eq!(mev.entry_body().password().as_str(), DEFAULT_PASSWORD);\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_password(\"password\".into());\n\n        assert_eq!(mev.entry_body().password().as_str(), \"password\");\n        assert!(mev.is_modified);\n    }\n\n    #[test]\n    fn update_web_address() {\n        let mut mev = default_mev();\n\n        assert!(mev.entry_head().web_address().as_str().is_empty());\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_web_address(\"https://example.com\".into());\n\n        assert_eq!(\n            mev.entry_head().web_address().as_str(),\n            \"https://example.com\"\n        );\n        assert!(mev.is_modified);\n    }\n\n    #[test]\n    fn update_email() {\n        let mut mev = default_mev();\n\n        assert!(mev.entry_body().email().as_str().is_empty());\n        assert!(!mev.is_modified);\n\n        let _ = mev.update_email(\"<EMAIL>\".into());\n\n        assert_eq!(mev.entry_body().email().as_str(), \"<EMAIL>\");", "line_changes": {"deleted": [{"line_no": 48, "char_start": 1263, "char_end": 1330, "line": "        let _ = mev.update_email(\"example@web_address.de\".into());\n"}, {"line_no": 51, "char_start": 1316, "char_end": 1396, "line": "        assert_eq!(mev.entry_body().email().as_str(), \"example@web_address.de\");"}], "added": [{"line_no": 49, "char_start": 1263, "char_end": 1315, "line": "        let _ = mev.update_email(\"<EMAIL>\".into());\n"}, {"line_no": 52, "char_start": 1316, "char_end": 1381, "line": "        assert_eq!(mev.entry_body().email().as_str(), \"<EMAIL>\");"}]}, "char_changes": {"deleted": [{"char_start": 1263, "char_end": 1330, "chars": "        let _ = mev.update_email(\"example@web_address.de\".into());\n"}, {"char_start": 1316, "char_end": 1396, "chars": "        assert_eq!(mev.entry_body().email().as_str(), \"example@web_address.de\");"}], "added": [{"char_start": 1263, "char_end": 1315, "chars": "        let _ = mev.update_email(\"<EMAIL>\".into());\n"}, {"char_start": 1316, "char_end": 1381, "chars": "        assert_eq!(mev.entry_body().email().as_str(), \"<EMAIL>\");"}]}}
{"func_name": 5565, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Reference rust implementation of AluVM (arithmetic logic unit virtual machine).\n// To find more on AluVM please check <https://github.com/internet2-org/aluvm-spec>\n//\n// Designed & written in 2021 by\n//     Dr. Maxim Orlovsky <orlovsky@pandoracore.com>\n// This work is donated to LNP/BP Standards Association by Pandora Core AG\n//\n// This software is licensed under the terms of MIT License.\n// You should have received a copy of the MIT License along with this software.\n// If not, see <https://opensource.org/licenses/MIT>.\n\n//! Data structures representing static library segments\n\nuse alloc::borrow::ToOwned;\nuse alloc::collections::{BTreeMap, BTreeSet};\nuse alloc::string::String;\nuse alloc::vec::Vec;\nuse core::fmt::{self, Display, Formatter};\n\nuse crate::libs::constants::{\n    ISAE_SEGMENT_MAX_COUNT, ISAE_SEGMENT_MAX_LEN, ISA_ID_ALLOWED_CHARS, ISA_ID_ALLOWED_FIRST_CHAR,\n    ISA_ID_MAX_LEN, ISA_ID_MIN_LEN, LIBS_SEGMENT_MAX_COUNT,\n};\nuse crate::libs::{LibId, LibSite};\n\n/// Errors while processing binary-encoded segment data\n#[derive(Clone, Ord, PartialOrd, Eq, PartialEq, Hash, Debug, Display, From)]\n#[cfg_attr(feature = \"std\", derive(Error))]\n#[display(doc_comments)]\npub enum SegmentError {\n    /// the size of the CODE segment is {0}, which exceeds `CODE_SEGMENT_MAX_LEN`\n    CodeSegmentTooLarge(usize),\n\n    /// the size of the DATA segment is {0}, which exceeds `DATA_SEGMENT_MAX_LEN`\n    DataSegmentTooLarge(usize),\n\n    /// ISA segment error\n    #[display(inner)]\n    #[from]\n    IsaeSegment(IsaSegError),\n}\n\n/// Errors while processing ISA extensions segment\n#[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, Display)]\n#[cfg_attr(feature = \"std\", derive(Error))]\n#[display(doc_comments)]\npub enum IsaSegError {\n    /// the size of ISAE (instruction set extensions) segment is {0}, which exceeds\n    /// [`ISAE_SEGMENT_MAX_LEN`]\n    SegmentTooLarge(usize),", "func_src_after": "// Reference rust implementation of AluVM (arithmetic logic unit virtual machine).\n// To find more on AluVM please check <https://github.com/internet2-org/aluvm-spec>\n//\n// Designed & written in 2021 by\n//     Dr. Maxim Orlovsky <<EMAIL>>\n// This work is donated to LNP/BP Standards Association by Pandora Core AG\n//\n// This software is licensed under the terms of MIT License.\n// You should have received a copy of the MIT License along with this software.\n// If not, see <https://opensource.org/licenses/MIT>.\n\n//! Data structures representing static library segments\n\nuse alloc::borrow::ToOwned;\nuse alloc::collections::{BTreeMap, BTreeSet};\nuse alloc::string::String;\nuse alloc::vec::Vec;\nuse core::fmt::{self, Display, Formatter};\n\nuse crate::libs::constants::{\n    ISAE_SEGMENT_MAX_COUNT, ISAE_SEGMENT_MAX_LEN, ISA_ID_ALLOWED_CHARS, ISA_ID_ALLOWED_FIRST_CHAR,\n    ISA_ID_MAX_LEN, ISA_ID_MIN_LEN, LIBS_SEGMENT_MAX_COUNT,\n};\nuse crate::libs::{LibId, LibSite};\n\n/// Errors while processing binary-encoded segment data\n#[derive(Clone, Ord, PartialOrd, Eq, PartialEq, Hash, Debug, Display, From)]\n#[cfg_attr(feature = \"std\", derive(Error))]\n#[display(doc_comments)]\npub enum SegmentError {\n    /// the size of the CODE segment is {0}, which exceeds `CODE_SEGMENT_MAX_LEN`\n    CodeSegmentTooLarge(usize),\n\n    /// the size of the DATA segment is {0}, which exceeds `DATA_SEGMENT_MAX_LEN`\n    DataSegmentTooLarge(usize),\n\n    /// ISA segment error\n    #[display(inner)]\n    #[from]\n    IsaeSegment(IsaSegError),\n}\n\n/// Errors while processing ISA extensions segment\n#[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, Display)]\n#[cfg_attr(feature = \"std\", derive(Error))]\n#[display(doc_comments)]\npub enum IsaSegError {\n    /// the size of ISAE (instruction set extensions) segment is {0}, which exceeds\n    /// [`ISAE_SEGMENT_MAX_LEN`]\n    SegmentTooLarge(usize),", "line_changes": {"deleted": [{"line_no": 5, "char_start": 203, "char_end": 256, "line": "//     Dr. Maxim Orlovsky <orlovsky@pandoracore.com>\n"}], "added": [{"line_no": 6, "char_start": 203, "char_end": 239, "line": "//     Dr. Maxim Orlovsky <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 203, "char_end": 256, "chars": "//     Dr. Maxim Orlovsky <orlovsky@pandoracore.com>\n"}], "added": [{"char_start": 203, "char_end": 239, "chars": "//     Dr. Maxim Orlovsky <<EMAIL>>\n"}]}}
{"func_name": 5566, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// -*- mode: rust; -*-\n//\n// This file is part of curve25519-dalek.\n// Copyright (c) 2016-2021 isis lovecruft\n// Copyright (c) 2016-2019 Henry de Valence\n// See LICENSE for licensing information.\n//\n// Authors:\n// - isis agora lovecruft <isis@patternsinthevoid.net>\n// - Henry de Valence <hdevalence@hdevalence.ca>\n\n//! This module contains constants used by the AVX2 backend.\n\nuse packed_simd::u32x8;\n\nuse backend::vector::avx2::edwards::{CachedPoint, ExtendedPoint};\nuse backend::vector::avx2::field::FieldElement2625x4;\nuse window::NafLookupTable8;\n\n/// The identity element as an `ExtendedPoint`.\npub(crate) static EXTENDEDPOINT_IDENTITY: ExtendedPoint = ExtendedPoint(FieldElement2625x4([\n    u32x8::new(0, 1, 0, 0, 1, 0, 0, 0),\n    u32x8::splat(0),\n    u32x8::splat(0),\n    u32x8::splat(0),\n    u32x8::splat(0),\n]));\n\n/// The identity element as a `CachedPoint`.\npub(crate) static CACHEDPOINT_IDENTITY: CachedPoint = CachedPoint(FieldElement2625x4([\n    u32x8::new(121647, 121666, 0, 0, 243332, 67108845, 0, 33554431),\n    u32x8::new(67108864, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n    u32x8::new(67108863, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n    u32x8::new(67108863, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n    u32x8::new(67108863, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n]));\n\n/// The low limbs of (2p, 2p, 2p, 2p), so that\n/// ```ascii,no_run\n/// (2p, 2p, 2p, 2p) = [P_TIMES_2_LO, P_TIMES_2_HI, P_TIMES_2_HI, P_TIMES_2_HI, P_TIMES_2_HI]\n/// ```\npub(crate) static P_TIMES_2_LO: u32x8 = u32x8::new(\n    67108845 << 1,\n    67108845 << 1,\n    33554431 << 1,\n    33554431 << 1,\n    67108845 << 1,\n    67108845 << 1,\n    33554431 << 1,\n    33554431 << 1,", "func_src_after": "// -*- mode: rust; -*-\n//\n// This file is part of curve25519-dalek.\n// Copyright (c) 2016-2021 isis lovecruft\n// Copyright (c) 2016-2019 Henry de Valence\n// See LICENSE for licensing information.\n//\n// Authors:\n// - isis agora lovecruft <<EMAIL>>\n// - Henry de Valence <<EMAIL>>\n\n//! This module contains constants used by the AVX2 backend.\n\nuse packed_simd::u32x8;\n\nuse backend::vector::avx2::edwards::{CachedPoint, ExtendedPoint};\nuse backend::vector::avx2::field::FieldElement2625x4;\nuse window::NafLookupTable8;\n\n/// The identity element as an `ExtendedPoint`.\npub(crate) static EXTENDEDPOINT_IDENTITY: ExtendedPoint = ExtendedPoint(FieldElement2625x4([\n    u32x8::new(0, 1, 0, 0, 1, 0, 0, 0),\n    u32x8::splat(0),\n    u32x8::splat(0),\n    u32x8::splat(0),\n    u32x8::splat(0),\n]));\n\n/// The identity element as a `CachedPoint`.\npub(crate) static CACHEDPOINT_IDENTITY: CachedPoint = CachedPoint(FieldElement2625x4([\n    u32x8::new(121647, 121666, 0, 0, 243332, 67108845, 0, 33554431),\n    u32x8::new(67108864, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n    u32x8::new(67108863, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n    u32x8::new(67108863, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n    u32x8::new(67108863, 0, 33554431, 0, 0, 67108863, 0, 33554431),\n]));\n\n/// The low limbs of (2p, 2p, 2p, 2p), so that\n/// ```ascii,no_run\n/// (2p, 2p, 2p, 2p) = [P_TIMES_2_LO, P_TIMES_2_HI, P_TIMES_2_HI, P_TIMES_2_HI, P_TIMES_2_HI]\n/// ```\npub(crate) static P_TIMES_2_LO: u32x8 = u32x8::new(\n    67108845 << 1,\n    67108845 << 1,\n    33554431 << 1,\n    33554431 << 1,\n    67108845 << 1,\n    67108845 << 1,\n    33554431 << 1,\n    33554431 << 1,", "line_changes": {"deleted": [{"line_no": 9, "char_start": 211, "char_end": 266, "line": "// - isis agora lovecruft <isis@patternsinthevoid.net>\n"}, {"line_no": 10, "char_start": 211, "char_end": 260, "line": "// - Henry de Valence <hdevalence@hdevalence.ca>\n"}], "added": [{"line_no": 11, "char_start": 211, "char_end": 247, "line": "// - isis agora lovecruft <<EMAIL>>\n"}, {"line_no": 12, "char_start": 247, "char_end": 279, "line": "// - Henry de Valence <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 211, "char_end": 266, "chars": "// - isis agora lovecruft <isis@patternsinthevoid.net>\n"}, {"char_start": 211, "char_end": 260, "chars": "// - Henry de Valence <hdevalence@hdevalence.ca>\n"}], "added": [{"char_start": 211, "char_end": 247, "chars": "// - isis agora lovecruft <<EMAIL>>\n"}, {"char_start": 247, "char_end": 279, "chars": "// - Henry de Valence <<EMAIL>>\n"}]}}
{"func_name": 5587, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_01() {\n        expect(\n            \"A@b@c@example.com\",\n            Error::InvalidCharacter,\n            Some(\"only one @ is allowed outside quotation marks\"),\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_02() {\n        expect(\"a\\\"b(c)d,e:f;g<h>i[j\\\\k]l@example.com\",\n            Error::InvalidCharacter,\n        Some(\"none of the special characters in this local-part are allowed outside quotation marks\")\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_03() {\n        expect(\n            \"just\\\"not\\\"right@example.com\",\n            Error::InvalidCharacter,\n            Some(\n                \"quoted strings must be dot separated or the only element making up the local-part\",\n            ),\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_04() {\n        expect(\"this is\\\"not\\\\allowed@example.com\",\n            Error::InvalidCharacter,\n        Some(\"spaces, quotes, and backslashes may only exist when within quoted strings and preceded by a backslash\")\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_05() {\n        // ()\n        expect(\"this\\\\ still\\\"not\\\\allowed@example.com\",\n            Error::InvalidCharacter,\n        Some(\"even if escaped (preceded by a backslash), spaces, quotes, and backslashes must still be contained by quotes\")\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_06() {", "func_src_after": "        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_01() {\n        expect(\n            \"A@b@c@example.com\",\n            Error::InvalidCharacter,\n            Some(\"only one @ is allowed outside quotation marks\"),\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_02() {\n        expect(\"a\\\"b(c)d,e:f;g<h>i[j\\\\k]l@example.com\",\n            Error::InvalidCharacter,\n        Some(\"none of the special characters in this local-part are allowed outside quotation marks\")\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_03() {\n        expect(\n            \"just\\\"not\\\"<EMAIL>\",\n            Error::InvalidCharacter,\n            Some(\n                \"quoted strings must be dot separated or the only element making up the local-part\",\n            ),\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_04() {\n        expect(\"this is\\\"not\\\\<EMAIL>\",\n            Error::InvalidCharacter,\n        Some(\"spaces, quotes, and backslashes may only exist when within quoted strings and preceded by a backslash\")\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_05() {\n        // ()\n        expect(\"this\\\\ still\\\"not\\\\<EMAIL>\",\n            Error::InvalidCharacter,\n        Some(\"even if escaped (preceded by a backslash), spaces, quotes, and backslashes must still be contained by quotes\")\n        );\n    }\n\n    #[test]\n    fn test_bad_examples_from_wikipedia_06() {", "line_changes": {"deleted": [{"line_no": 24, "char_start": 595, "char_end": 639, "line": "            \"just\\\"not\\\"right@example.com\",\n"}, {"line_no": 35, "char_start": 877, "char_end": 929, "line": "        expect(\"this is\\\"not\\\\allowed@example.com\",\n"}, {"line_no": 45, "char_start": 1163, "char_end": 1220, "line": "        expect(\"this\\\\ still\\\"not\\\\allowed@example.com\",\n"}], "added": [{"line_no": 25, "char_start": 595, "char_end": 629, "line": "            \"just\\\"not\\\"<EMAIL>\",\n"}, {"line_no": 36, "char_start": 877, "char_end": 917, "line": "        expect(\"this is\\\"not\\\\<EMAIL>\",\n"}, {"line_no": 46, "char_start": 1163, "char_end": 1208, "line": "        expect(\"this\\\\ still\\\"not\\\\<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 595, "char_end": 639, "chars": "            \"just\\\"not\\\"right@example.com\",\n"}, {"char_start": 877, "char_end": 929, "chars": "        expect(\"this is\\\"not\\\\allowed@example.com\",\n"}, {"char_start": 1163, "char_end": 1220, "chars": "        expect(\"this\\\\ still\\\"not\\\\allowed@example.com\",\n"}], "added": [{"char_start": 595, "char_end": 629, "chars": "            \"just\\\"not\\\"<EMAIL>\",\n"}, {"char_start": 877, "char_end": 917, "chars": "        expect(\"this is\\\"not\\\\<EMAIL>\",\n"}, {"char_start": 1163, "char_end": 1208, "chars": "        expect(\"this\\\\ still\\\"not\\\\<EMAIL>\",\n"}]}}
{"func_name": 5620, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    #[test]\n    fn test_quit() {\n        let message = IrcMessage::parse(b\":harukomoto!~harukomot@93-34-148-177.ip50.fastwebnet.it QUIT :\").unwrap();\n        let message = IrcMessage::parse(b\":Andrius!~andrius@5ec081cd.skybroadband.com QUIT :\").unwrap();\n        let message = IrcMessage::parse(b\":randomstatistic!~randomsta@64.124.61.215 QUIT :\").unwrap();\n        assert_eq!(message.params().len(), 0);\n\n    }\n\n    #[test]\n    fn test_mode_services() {\n        let message = IrcMessage::parse(b\":services. MODE #foobartest -o marchelzo\").unwrap();\n        println!(\"{:?}\", message);\n        match message.kind {\n            IrcMessageType::Mode => { },\n            _                    => unreachable!()\n        }\n        match message.prefix {\n            Some(IrcMessagePrefix::ServerPrefix(_)) => { },\n            _                                       => unreachable!()\n        }\n\n        assert_eq!(message.params().len(), 3);\n    }\n}\n", "func_src_after": "\n    #[test]\n    fn test_quit() {\n        let message = IrcMessage::parse(b\":harukomoto!~harukomot@93-34-148-177.ip50.fastwebnet.it QUIT :\").unwrap();\n        let message = IrcMessage::parse(b\":Andrius!~andrius@5ec081cd.skybroadband.com QUIT :\").unwrap();\n        let message = IrcMessage::parse(b\":randomstatistic!~randomsta@<IP-Address> QUIT :\").unwrap();\n        assert_eq!(message.params().len(), 0);\n\n    }\n\n    #[test]\n    fn test_mode_services() {\n        let message = IrcMessage::parse(b\":services. MODE #foobartest -o marchelzo\").unwrap();\n        println!(\"{:?}\", message);\n        match message.kind {\n            IrcMessageType::Mode => { },\n            _                    => unreachable!()\n        }\n        match message.prefix {\n            Some(IrcMessagePrefix::ServerPrefix(_)) => { },\n            _                                       => unreachable!()\n        }\n\n        assert_eq!(message.params().len(), 3);\n    }\n}\n", "line_changes": {"deleted": [{"line_no": 6, "char_start": 256, "char_end": 359, "line": "        let message = IrcMessage::parse(b\":randomstatistic!~randomsta@64.124.61.215 QUIT :\").unwrap();\n"}], "added": [{"line_no": 7, "char_start": 256, "char_end": 358, "line": "        let message = IrcMessage::parse(b\":randomstatistic!~randomsta@<IP-Address> QUIT :\").unwrap();\n"}]}, "char_changes": {"deleted": [{"char_start": 256, "char_end": 359, "chars": "        let message = IrcMessage::parse(b\":randomstatistic!~randomsta@64.124.61.215 QUIT :\").unwrap();\n"}], "added": [{"char_start": 256, "char_end": 358, "chars": "        let message = IrcMessage::parse(b\":randomstatistic!~randomsta@<IP-Address> QUIT :\").unwrap();\n"}]}}
{"func_name": 5635, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    Port        10022\n    User        sftp\nHost scp\n    HostName    127.0.0.1\n    Port        10222\n    User        sftp\n\"##;\n    temp.write_all(config.as_bytes()).unwrap();\n    temp\n}\n", "func_src_after": "    Port        10022\n    User        sftp\nHost scp\n    HostName    <IP-Address>\n    Port        10222\n    User        sftp\n\"##;\n    temp.write_all(config.as_bytes()).unwrap();\n    temp\n}\n", "line_changes": {"deleted": [{"line_no": 4, "char_start": 52, "char_end": 78, "line": "    HostName    127.0.0.1\n"}], "added": [{"line_no": 5, "char_start": 52, "char_end": 81, "line": "    HostName    <IP-Address>\n"}]}, "char_changes": {"deleted": [{"char_start": 52, "char_end": 78, "chars": "    HostName    127.0.0.1\n"}], "added": [{"char_start": 52, "char_end": 81, "chars": "    HostName    <IP-Address>\n"}]}}
{"func_name": 5676, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                        coin_amount.denom\n                    );\n                }\n            } else if !self.rates.is_empty() {\n                log::warn!(\n                    \"Reward: {} Missing Exchange rate for {}.\",\n                    height,\n                    coin_amount.denom\n                );\n            }\n        }\n        self.rewards\n            .entry(msg.validator)\n            .and_modify(|e| *e += block_reward)\n            .or_insert(block_reward);\n    }\n}\nimpl Handler<MessageBlockEventExchangeRate> for ValidatorActor {\n    type Result = ();\n\n    fn handle(&mut self, msg: MessageBlockEventExchangeRate, _ctx: &mut Self::Context) {\n        self.last_height = msg.height;\n        //log::info!(\"Exchange rate {}/{}\", msg.denom, msg.exchange_rate);\n        self.rates.insert(msg.denom, msg.exchange_rate);\n    }\n}\nimpl Handler<MessageBlockHeight> for ValidatorActor {\n    type Result = ();\n\n    fn handle(&mut self, _msg: MessageBlockHeight, _ctx: &mut Self::Context) {\n        serde_json::to_writer(std::fs::File::create(\"validator.json\").unwrap(), &self).unwrap();\n    }\n}\nimpl Handler<MessageTick> for ValidatorActor {\n    type Result = ();\n\n    fn handle(&mut self, msg: MessageTick, _ctx: &mut Self::Context) {\n        if let Some(validator) = self\n            .validators\n            .get(\"terravaloper12g4nkvsjjnl0t7fvq3hdcw7y8dc9fq69nyeu9q\")\n        {\n            let tokens = validator.validator.tokens;\n            let rewards = self\n                .rewards\n                .get(\"terravaloper12g4nkvsjjnl0t7fvq3hdcw7y8dc9fq69nyeu9q\")\n                .unwrap_or(&Decimal::ZERO);\n            let rate: Decimal = if tokens > 0 {\n                rewards / Decimal::from(tokens)\n            } else {\n                Decimal::ZERO", "func_src_after": "                        coin_amount.denom\n                    );\n                }\n            } else if !self.rates.is_empty() {\n                log::warn!(\n                    \"Reward: {} Missing Exchange rate for {}.\",\n                    height,\n                    coin_amount.denom\n                );\n            }\n        }\n        self.rewards\n            .entry(msg.validator)\n            .and_modify(|e| *e += block_reward)\n            .or_insert(block_reward);\n    }\n}\nimpl Handler<MessageBlockEventExchangeRate> for ValidatorActor {\n    type Result = ();\n\n    fn handle(&mut self, msg: MessageBlockEventExchangeRate, _ctx: &mut Self::Context) {\n        self.last_height = msg.height;\n        //log::info!(\"Exchange rate {}/{}\", msg.denom, msg.exchange_rate);\n        self.rates.insert(msg.denom, msg.exchange_rate);\n    }\n}\nimpl Handler<MessageBlockHeight> for ValidatorActor {\n    type Result = ();\n\n    fn handle(&mut self, _msg: MessageBlockHeight, _ctx: &mut Self::Context) {\n        serde_json::to_writer(std::fs::File::create(\"validator.json\").unwrap(), &self).unwrap();\n    }\n}\nimpl Handler<MessageTick> for ValidatorActor {\n    type Result = ();\n\n    fn handle(&mut self, msg: MessageTick, _ctx: &mut Self::Context) {\n        if let Some(validator) = self\n            .validators\n            .get(\"terravaloper12g4nkvsjjnl0t7fvq3hdcw7y8dc9fq69nyeu9q\")\n        {\n            let tokens = validator.validator.tokens;\n            let rewards = self\n                .rewards\n                .get(\"terravaloper12g4nkvsjjnl0t7fvq3hdcw7y8dc9fq69nyeu9q\")\n                .unwrap_or(&Decimal::ZERO);\n            let rate: Decimal = if tokens > 0 {\n                rewards / Decimal::from(tokens)\n            } else {\n                Decimal::ZERO", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5678, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  #[test]\n  fn test_validate_ipv4_address_returns_true_for_valid_ipv4_address() {\n    let result = validate_ipv4_address(&String::from(\"127.0.0.1\"));\n    match result {\n      Err(_) => assert!(false),\n      Ok(result) => assert!(result),\n    }\n  }\n\n  #[test]\n  fn seperate_ipv4_address_into_numbers_seperates_ip_address_correctly() {\n    let result = seperate_ipv4_address_into_numbers(&String::from(\"127.0.0.1\"));\n    let expected = vec![127, 0, 0, 1];\n    assert_eq!(expected, result.unwrap());\n  }\n}\n", "func_src_after": "  #[test]\n  fn test_validate_ipv4_address_returns_true_for_valid_ipv4_address() {\n    let result = validate_ipv4_address(&String::from(\"<IP-Address>\"));\n    match result {\n      Err(_) => assert!(false),\n      Ok(result) => assert!(result),\n    }\n  }\n\n  #[test]\n  fn seperate_ipv4_address_into_numbers_seperates_ip_address_correctly() {\n    let result = seperate_ipv4_address_into_numbers(&String::from(\"<IP-Address>\"));\n    let expected = vec![<IP-Address>];\n    assert_eq!(expected, result.unwrap());\n  }\n}\n", "line_changes": {"deleted": [{"line_no": 3, "char_start": 82, "char_end": 150, "line": "    let result = validate_ipv4_address(&String::from(\"127.0.0.1\"));\n"}, {"line_no": 13, "char_start": 337, "char_end": 418, "line": "    let result = seperate_ipv4_address_into_numbers(&String::from(\"127.0.0.1\"));\n"}, {"line_no": 15, "char_start": 421, "char_end": 460, "line": "    let expected = vec![127, 0, 0, 1];\n"}], "added": [{"line_no": 4, "char_start": 82, "char_end": 153, "line": "    let result = validate_ipv4_address(&String::from(\"<IP-Address>\"));\n"}, {"line_no": 14, "char_start": 337, "char_end": 421, "line": "    let result = seperate_ipv4_address_into_numbers(&String::from(\"<IP-Address>\"));\n"}, {"line_no": 16, "char_start": 421, "char_end": 460, "line": "    let expected = vec![<IP-Address>];\n"}]}, "char_changes": {"deleted": [{"char_start": 82, "char_end": 150, "chars": "    let result = validate_ipv4_address(&String::from(\"127.0.0.1\"));\n"}, {"char_start": 337, "char_end": 418, "chars": "    let result = seperate_ipv4_address_into_numbers(&String::from(\"127.0.0.1\"));\n"}, {"char_start": 421, "char_end": 460, "chars": "    let expected = vec![127, 0, 0, 1];\n"}], "added": [{"char_start": 82, "char_end": 153, "chars": "    let result = validate_ipv4_address(&String::from(\"<IP-Address>\"));\n"}, {"char_start": 337, "char_end": 421, "chars": "    let result = seperate_ipv4_address_into_numbers(&String::from(\"<IP-Address>\"));\n"}, {"char_start": 421, "char_end": 460, "chars": "    let expected = vec![<IP-Address>];\n"}]}}
{"func_name": 6349, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n  val mockSessionCacheRepository: SessionCacheRepository = mock(classOf[SessionCacheRepository])\n\n  val now = LocalDateTime.now\n  val mockRepo = mock(classOf[SessionCacheRepository])\n  private val cipher = new TestGCMCipher\n  private val encrypter = new FormModelEncrypter(cipher)\n  lazy val appConfig: AppConfig = inject[AppConfig]\n  val sut = new SessionCacheServiceImpl(mockRepo, encrypter, appConfig)\n\n  override def beforeEach(): Unit = {\n    reset(mockRepo)\n    super.beforeEach\n  }\n\n  private val secretKey = \"VqmXp7yigDFxbCUdDdNZVIvbW6RgPNJsliv6swQNCL8=\"\n  val formModel = NinoSearchFormModel(\n    nino = NinoGenerator.generateNino,\n    givenName = \"Jimmy\",\n    familyName = \"Jazz\",\n    dateOfBirth = LocalDate.now)\n  val encryptedFormModel = encrypter.encryptSearchFormModel(formModel, \"123\", secretKey)\n  val formQuery = FormQueryModel(id = \"123\", data = encryptedFormModel, now)\n\n  \"get\" must {\n\n    \"check the repository and return none where the header carrier has a session id\" in {\n      when(mockRepo.get(any())(any())).thenReturn(Future.successful(None))\n      val hc = HeaderCarrier(sessionId = Some(SessionId(\"123\")))\n      val result = Await.result(sut.get(hc, implicitly), 5 seconds)\n      result mustBe None\n      verify(mockRepo).get(refEq(\"123\"))(any())\n    }\n\n    \"check the repository and return some where the header carrier has a session id\" in {\n      when(mockRepo.get(any())(any())).thenReturn(Future.successful(Some(formQuery)))\n      val hc = HeaderCarrier(sessionId = Some(SessionId(\"123\")))\n      val result = Await.result(sut.get(hc, implicitly), 5 seconds)\n      result mustBe Some(formModel)\n      verify(mockRepo).get(refEq(\"123\"))(any())\n    }\n\n    \"return an error where the header carrier has no session id\" in {\n      val hc = HeaderCarrier(sessionId = None)\n      intercept[NoSessionIdException.type] { Await.result(sut.get(hc, implicitly), 5 seconds) }\n      verify(mockRepo, never()).get(any())(any())\n    }\n  }\n\n  \"set\" must {", "func_src_after": "\n  val mockSessionCacheRepository: SessionCacheRepository = mock(classOf[SessionCacheRepository])\n\n  val now = LocalDateTime.now\n  val mockRepo = mock(classOf[SessionCacheRepository])\n  private val cipher = new TestGCMCipher\n  private val encrypter = new FormModelEncrypter(cipher)\n  lazy val appConfig: AppConfig = inject[AppConfig]\n  val sut = new SessionCacheServiceImpl(mockRepo, encrypter, appConfig)\n\n  override def beforeEach(): Unit = {\n    reset(mockRepo)\n    super.beforeEach\n  }\n\n  private val secretKey = \"VqmXp7yigDFxbCUdDdNZVIvbW6RgPNJsliv6swQNCL8=\"\n  val formModel = NinoSearchFormModel(\n    nino = NinoGenerator.generateNino,\n    givenName = \"Jimmy\",\n    familyName = \"Jazz\",\n    dateOfBirth = LocalDate.now)\n  val encryptedFormModel = encrypter.encryptSearchFormModel(formModel, \"123\", secretKey)\n  val formQuery = FormQueryModel(id = \"123\", data = encryptedFormModel, now)\n\n  \"get\" must {\n\n    \"check the repository and return none where the header carrier has a session id\" in {\n      when(mockRepo.get(any())(any())).thenReturn(Future.successful(None))\n      val hc = HeaderCarrier(sessionId = Some(SessionId(\"123\")))\n      val result = Await.result(sut.get(hc, implicitly), 5 seconds)\n      result mustBe None\n      verify(mockRepo).get(refEq(\"123\"))(any())\n    }\n\n    \"check the repository and return some where the header carrier has a session id\" in {\n      when(mockRepo.get(any())(any())).thenReturn(Future.successful(Some(formQuery)))\n      val hc = HeaderCarrier(sessionId = Some(SessionId(\"123\")))\n      val result = Await.result(sut.get(hc, implicitly), 5 seconds)\n      result mustBe Some(formModel)\n      verify(mockRepo).get(refEq(\"123\"))(any())\n    }\n\n    \"return an error where the header carrier has no session id\" in {\n      val hc = HeaderCarrier(sessionId = None)\n      intercept[NoSessionIdException.type] { Await.result(sut.get(hc, implicitly), 5 seconds) }\n      verify(mockRepo, never()).get(any())(any())\n    }\n  }\n\n  \"set\" must {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6353, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package com.github.tsingjyujing.geo.util.mathematical\n\nimport com.github.tsingjyujing.geo.basic.{IVector2, IVector3}\nimport com.github.tsingjyujing.geo.element.immutable.Vector2\nimport com.github.tsingjyujing.geo.util.BeCarefulWhileUsing\n\n/**\n  * Common methods of vectors\n  *\n  * @author tsingjyujing@163.com\n  */\nobject VectorUtil {\n    /**\n      * Get out product result of Vector3\n      *\n      * @param v1\n      * @param v2\n      * @return\n      */\n    def outerProduct(v1: Array[Double], v2: Array[Double]): Array[Double] = if ((v1.length == 3) && (v2.length == 3)) {\n        Array(\n            0.0D + v1(1) * v2(2) - v1(2) * v2(1),\n            0.0D - v1(0) * v2(2) + v1(2) * v2(0),\n            0.0D + v1(0) * v2(1) - v1(1) * v2(0)\n        )\n    } else {\n        throw new RuntimeException(\"Out product only allowed in 3D vector\")\n    }\n\n    /**\n      * Get norm of an N-dimension vector described by Array[Double]\n      *\n      * @param vec\n      * @param normLen\n      * @return\n      */\n    def norm2Vector(vec: Array[Double], normLen: Double = 1.0): Array[Double] = {\n        val normFactor = normLen / math.sqrt(vec.map(x => x * x).sum)\n        vec.map(x => x * normFactor)\n    }\n\n    /**\n      * Interp vector2\n      *\n      * @param v1    vector 1\n      * @param v2    vector 2\n      * @param ratio commonly should in range(0,1.0)\n      * @return\n      */\n    def linearInterpolation2(v1: IVector2, v2: IVector2, ratio: Double): Vector2 = v1 + ((v2 - v1) * ratio)", "func_src_after": "package com.github.tsingjyujing.geo.util.mathematical\n\nimport com.github.tsingjyujing.geo.basic.{IVector2, IVector3}\nimport com.github.tsingjyujing.geo.element.immutable.Vector2\nimport com.github.tsingjyujing.geo.util.BeCarefulWhileUsing\n\n/**\n  * Common methods of vectors\n  *\n  * @author <EMAIL>\n  */\nobject VectorUtil {\n    /**\n      * Get out product result of Vector3\n      *\n      * @param v1\n      * @param v2\n      * @return\n      */\n    def outerProduct(v1: Array[Double], v2: Array[Double]): Array[Double] = if ((v1.length == 3) && (v2.length == 3)) {\n        Array(\n            0.0D + v1(1) * v2(2) - v1(2) * v2(1),\n            0.0D - v1(0) * v2(2) + v1(2) * v2(0),\n            0.0D + v1(0) * v2(1) - v1(1) * v2(0)\n        )\n    } else {\n        throw new RuntimeException(\"Out product only allowed in 3D vector\")\n    }\n\n    /**\n      * Get norm of an N-dimension vector described by Array[Double]\n      *\n      * @param vec\n      * @param normLen\n      * @return\n      */\n    def norm2Vector(vec: Array[Double], normLen: Double = 1.0): Array[Double] = {\n        val normFactor = normLen / math.sqrt(vec.map(x => x * x).sum)\n        vec.map(x => x * normFactor)\n    }\n\n    /**\n      * Interp vector2\n      *\n      * @param v1    vector 1\n      * @param v2    vector 2\n      * @param ratio commonly should in range(0,1.0)\n      * @return\n      */\n    def linearInterpolation2(v1: IVector2, v2: IVector2, ratio: Double): Vector2 = v1 + ((v2 - v1) * ratio)", "line_changes": {"deleted": [{"line_no": 10, "char_start": 277, "char_end": 310, "line": "  * @author tsingjyujing@163.com\n"}], "added": [{"line_no": 11, "char_start": 277, "char_end": 297, "line": "  * @author <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 277, "char_end": 310, "chars": "  * @author tsingjyujing@163.com\n"}], "added": [{"char_start": 277, "char_end": 297, "chars": "  * @author <EMAIL>\n"}]}}
{"func_name": 6391, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package org.cardioart.rdv\n\nimport akka.actor.{ActorRef, Props, ActorSystem}\nimport com.typesafe.config.{ConfigFactory, Config}\nimport akka.io.IO\nimport org.cardioart.rdv.actor._\nimport scopt.OptionParser\nimport spray.can.Http\n\n/**\n * This is a arguments configuration\n * see: https://github.com/scopt/scopt\n */\ncase class OptionConfig(port: Int = 8080)\n/**\n * This file is a startup program for HTTP server\n * The configs are passed into this program via command-line arguments\n */\nobject Boot extends App {\n\n  val parser = new OptionParser[OptionConfig](\"rdv-http\") {\n    head(\"rdv-http\", \"0.1.1\")\n    opt[Int]('p', \"port\") valueName(\"<port>\") action { (x,c) =>\n      c.copy(port = x) } validate { x =>\n      if (x > 0) success else failure(\"port number must more than zero\") } text(\"port number is required\")\n    help(\"help\") text(\"print usage text\")\n  }\n\n  // parse the program arguments\n  parser.parse(args, OptionConfig()) match {\n    case Some(option) =>\n\n      val config: Config = ConfigFactory.load()\n      implicit val system = ActorSystem(\"rdv-http\", config)\n\n      // actors\n      val statActor = system.actorOf(Props[Stat], \"stat-actor\")\n      val connectionActor = system.actorOf(ConnectionSupervisor.props[Connection](), \"connection-supervisor\")\n      val sessionActor = system.actorOf(SessionSupervisor.props[Session](), \"session-supervisor\")\n\n      // HTTP Restful API interface\n      val apiActor = system.actorOf(Props(new Api(connectionActor, sessionActor)), \"api-actor\")\n      IO(Http) ! Http.Bind(apiActor, interface = \"::0\", port = option.port)\n\n    case None =>\n      println(\"arguments is not valid. use --help to see usage text\")\n      System.exit(0)\n  }\n}\n", "func_src_after": "package org.cardioart.rdv\n\nimport akka.actor.{ActorRef, Props, ActorSystem}\nimport com.typesafe.config.{ConfigFactory, Config}\nimport akka.io.IO\nimport org.cardioart.rdv.actor._\nimport scopt.OptionParser\nimport spray.can.Http\n\n/**\n * This is a arguments configuration\n * see: https://github.com/scopt/scopt\n */\ncase class OptionConfig(port: Int = 8080)\n/**\n * This file is a startup program for HTTP server\n * The configs are passed into this program via command-line arguments\n */\nobject Boot extends App {\n\n  val parser = new OptionParser[OptionConfig](\"rdv-http\") {\n    head(\"rdv-http\", \"0.1.1\")\n    opt[Int]('p', \"port\") valueName(\"<port>\") action { (x,c) =>\n      c.copy(port = x) } validate { x =>\n      if (x > 0) success else failure(\"port number must more than zero\") } text(\"port number is required\")\n    help(\"help\") text(\"print usage text\")\n  }\n\n  // parse the program arguments\n  parser.parse(args, OptionConfig()) match {\n    case Some(option) =>\n\n      val config: Config = ConfigFactory.load()\n      implicit val system = ActorSystem(\"rdv-http\", config)\n\n      // actors\n      val statActor = system.actorOf(Props[Stat], \"stat-actor\")\n      val connectionActor = system.actorOf(ConnectionSupervisor.props[Connection](), \"connection-supervisor\")\n      val sessionActor = system.actorOf(SessionSupervisor.props[Session](), \"session-supervisor\")\n\n      // HTTP Restful API interface\n      val apiActor = system.actorOf(Props(new Api(connectionActor, sessionActor)), \"api-actor\")\n      IO(Http) ! Http.Bind(apiActor, interface = \"::0\", port = option.port)\n\n    case None =>\n      println(\"arguments is not valid. use --help to see usage text\")\n      System.exit(0)\n  }\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6440, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        val tooLong = \"123456789012345678901234567890123\" // length = 33\n        val okay = \"SomeUsername\"\n\n        val edgeCaseLower = \"12\" // length = 2\n        val edgeCaseHigher = \"12345678901234567890123456789012\" // length = 32\n\n        assertEquals(edgeCaseLower, enforceSenderName(edgeCaseLower))\n        assertEquals(edgeCaseHigher, enforceSenderName(edgeCaseHigher))\n        assertEquals(okay, enforceSenderName(okay))\n\n        assertTrue(enforceSenderName(tooShort).length >= minimumAcceptedLength)\n        assertTrue(enforceSenderName(tooLong).length <= maximumAcceptedLength)\n    }\n}\n", "func_src_after": "        val tooLong = \"123456789012345678901234567890123\" // length = 33\n        val okay = \"SomeUsername\"\n\n        val edgeCaseLower = \"12\" // length = 2\n        val edgeCaseHigher = \"12345678901234567890123456789012\" // length = 32\n\n        assertEquals(edgeCaseLower, enforceSenderName(edgeCaseLower))\n        assertEquals(edgeCaseHigher, enforceSenderName(edgeCaseHigher))\n        assertEquals(okay, enforceSenderName(okay))\n\n        assertTrue(enforceSenderName(tooShort).length >= minimumAcceptedLength)\n        assertTrue(enforceSenderName(tooLong).length <= maximumAcceptedLength)\n    }\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6473, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright 2021 Jürgen Reichmann, Jettingen, Germany\n * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.\n */\n\npackage de.rdvsb.kmutil\n\nimport kotlin.test.*\n\ninternal class IniPropertiesCommonTest {\n\n\t@Test\n\tfun iniReaderTest() {\n\t\tprintln(\"IniPropertiesCommonTest.iniReaderTest start\")\n\n\t\tassertEquals(\"val =\", IniProperties.propertyAsDisplay(\"val\", null))\n\t\tassertEquals(\"val = 'a\\\"b'\", IniProperties.propertyAsDisplay(\"val\", \"a\\\"b\"))\n\t\tassertEquals(\"val = \\\"a'b\\\"\", IniProperties.propertyAsDisplay(\"val\", \"a\\'b\"))\n\t\tassertEquals(\"val = \\\"ab\\\"\", IniProperties.propertyAsDisplay(\"val\", \"ab\"))\n\t\tassertEquals(\"val = 12\", IniProperties.propertyAsDisplay(\"val\", 12))\n\t\tassertEquals(\"val = 1.2\", IniProperties.propertyAsDisplay(\"val\", 1.2))\n\t\tassertEquals(\"val = <HIDDEN>\", IniProperties.propertyAsDisplay(\"val\", \"ab\", true))\n\n\t\t///////////////////////////////////////////////////////////////\n\t\t// test generic ini reader\n\t\tval iniReader = IniProperties().apply {\n\t\t\thidePropertiesMap[\"password\"] = Unit\n\t\t}\n\n\t\tval iniText = \"\"\"\n\t\t\t|### test ini parsing ###\n\t\t\t|   ; also a comment\n\t\t\t| noVal =\n\t\t\t|paramInt = 10\n\t\t\t|paramStr1 = \"it's a string param hello\"\n\t\t\t| paramStr2 = 'this is a \"string\" too'\n\t\t\t| password = \"secret\"\n\t\t\t|\n\t\t\t|#---------------------------\n\t\t\t| [Sect1]\n\t\t\t|    name = \"section 1\"\n\t\t\t|    val = 1.5\n\t\t\t|\n\t\t\t|#---------------------------\n\t\t\t| [Sect2]\n\t\t\t|    name = \"section 2\"\n\t\t\t|    val = 2\n\t\t\"\"\".trimMargin()\n\t\t//logMessage('D', \"parse ini data\\n$iniText\")\n\t\tiniReader.parse(iniText)", "func_src_after": "/*\n * Copyright 2021 Jürgen Reichmann, Jettingen, Germany\n * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.\n */\n\npackage de.rdvsb.kmutil\n\nimport kotlin.test.*\n\ninternal class IniPropertiesCommonTest {\n\n\t@Test\n\tfun iniReaderTest() {\n\t\tprintln(\"IniPropertiesCommonTest.iniReaderTest start\")\n\n\t\tassertEquals(\"val =\", IniProperties.propertyAsDisplay(\"val\", null))\n\t\tassertEquals(\"val = 'a\\\"b'\", IniProperties.propertyAsDisplay(\"val\", \"a\\\"b\"))\n\t\tassertEquals(\"val = \\\"a'b\\\"\", IniProperties.propertyAsDisplay(\"val\", \"a\\'b\"))\n\t\tassertEquals(\"val = \\\"ab\\\"\", IniProperties.propertyAsDisplay(\"val\", \"ab\"))\n\t\tassertEquals(\"val = 12\", IniProperties.propertyAsDisplay(\"val\", 12))\n\t\tassertEquals(\"val = 1.2\", IniProperties.propertyAsDisplay(\"val\", 1.2))\n\t\tassertEquals(\"val = <HIDDEN>\", IniProperties.propertyAsDisplay(\"val\", \"ab\", true))\n\n\t\t///////////////////////////////////////////////////////////////\n\t\t// test generic ini reader\n\t\tval iniReader = IniProperties().apply {\n\t\t\thidePropertiesMap[\"password\"] = Unit\n\t\t}\n\n\t\tval iniText = \"\"\"\n\t\t\t|### test ini parsing ###\n\t\t\t|   ; also a comment\n\t\t\t| noVal =\n\t\t\t|paramInt = 10\n\t\t\t|paramStr1 = \"it's a string param hello\"\n\t\t\t| paramStr2 = 'this is a \"string\" too'\n\t\t\t| password = \"secret\"\n\t\t\t|\n\t\t\t|#---------------------------\n\t\t\t| [Sect1]\n\t\t\t|    name = \"section 1\"\n\t\t\t|    val = 1.5\n\t\t\t|\n\t\t\t|#---------------------------\n\t\t\t| [Sect2]\n\t\t\t|    name = \"section 2\"\n\t\t\t|    val = 2\n\t\t\"\"\".trimMargin()\n\t\t//logMessage('D', \"parse ini data\\n$iniText\")\n\t\tiniReader.parse(iniText)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6478, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package ru.otus.spring.kushchenko.hw13.service.security\n\nimport com.nhaarman.mockito_kotlin.mock\nimport com.nhaarman.mockito_kotlin.verify\nimport com.nhaarman.mockito_kotlin.verifyNoMoreInteractions\nimport com.nhaarman.mockito_kotlin.whenever\nimport org.assertj.core.api.Assertions.*\nimport org.junit.jupiter.api.Assertions.*\nimport org.junit.jupiter.api.DisplayName\nimport org.junit.jupiter.api.Nested\nimport org.junit.jupiter.api.Test\nimport org.springframework.security.core.authority.SimpleGrantedAuthority\nimport org.springframework.security.core.userdetails.UsernameNotFoundException\nimport ru.otus.spring.kushchenko.hw13.model.UserRole.*\nimport ru.otus.spring.kushchenko.hw13.repository.UserRepository\n\nimport org.springframework.security.core.userdetails.User as SpringUser\nimport ru.otus.spring.kushchenko.hw13.model.User as MyUser\n\n/**\n * Created by Елена on Нояб., 2018\n */\nclass UserDetailsServiceImplTest {\n    private val userRepository: UserRepository = mock()\n    private val service = UserDetailsServiceImpl(userRepository)\n\n    @Nested\n    @DisplayName(\"Tests for loadUserByUsername() method\")\n    inner class LoadUserByUsername {\n\n        @Test\n        fun shouldPassSuccessfully() {\n            val username = \"User\"\n\n            val myUser = MyUser(\n                username = username,\n                password = \"Password\",\n                roles = listOf(USER, ADMIN)\n            )\n            val springUser = SpringUser(\n                username,\n                \"Password\",\n                listOf(SimpleGrantedAuthority(\"USER\"), SimpleGrantedAuthority(\"ADMIN\"))\n            )\n\n            whenever(userRepository.findByUsername(username)).thenReturn(myUser)\n\n            assertEquals(springUser, service.loadUserByUsername(username))\n\n            verify(userRepository).findByUsername(username)", "func_src_after": "package ru.otus.spring.kushchenko.hw13.service.security\n\nimport com.nhaarman.mockito_kotlin.mock\nimport com.nhaarman.mockito_kotlin.verify\nimport com.nhaarman.mockito_kotlin.verifyNoMoreInteractions\nimport com.nhaarman.mockito_kotlin.whenever\nimport org.assertj.core.api.Assertions.*\nimport org.junit.jupiter.api.Assertions.*\nimport org.junit.jupiter.api.DisplayName\nimport org.junit.jupiter.api.Nested\nimport org.junit.jupiter.api.Test\nimport org.springframework.security.core.authority.SimpleGrantedAuthority\nimport org.springframework.security.core.userdetails.UsernameNotFoundException\nimport ru.otus.spring.kushchenko.hw13.model.UserRole.*\nimport ru.otus.spring.kushchenko.hw13.repository.UserRepository\n\nimport org.springframework.security.core.userdetails.User as SpringUser\nimport ru.otus.spring.kushchenko.hw13.model.User as MyUser\n\n/**\n * Created by Елена on Нояб., 2018\n */\nclass UserDetailsServiceImplTest {\n    private val userRepository: UserRepository = mock()\n    private val service = UserDetailsServiceImpl(userRepository)\n\n    @Nested\n    @DisplayName(\"Tests for loadUserByUsername() method\")\n    inner class LoadUserByUsername {\n\n        @Test\n        fun shouldPassSuccessfully() {\n            val username = \"User\"\n\n            val myUser = MyUser(\n                username = username,\n                password = \"Password\",\n                roles = listOf(USER, ADMIN)\n            )\n            val springUser = SpringUser(\n                username,\n                \"Password\",\n                listOf(SimpleGrantedAuthority(\"USER\"), SimpleGrantedAuthority(\"ADMIN\"))\n            )\n\n            whenever(userRepository.findByUsername(username)).thenReturn(myUser)\n\n            assertEquals(springUser, service.loadUserByUsername(username))\n\n            verify(userRepository).findByUsername(username)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6485, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package space.w0lf.password.manager.ui.addPassword\n\nimport android.os.Bundle\nimport android.text.Editable\nimport android.text.TextWatcher\nimport android.view.View\nimport android.widget.AdapterView\nimport android.widget.ArrayAdapter\nimport androidx.appcompat.app.AlertDialog\nimport androidx.appcompat.widget.AppCompatAutoCompleteTextView\nimport androidx.lifecycle.lifecycleScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.runBlocking\nimport space.w0lf.password.manager.R\nimport space.w0lf.password.manager.base.android.BaseActivity\nimport space.w0lf.password.manager.databinding.ActivityAddPasswordBinding\nimport space.w0lf.password.manager.domain.model.Password\n\nclass AddPasswordActivity() : BaseActivity<ActivityAddPasswordBinding, AddPasswordViewModel>(\n    R.layout.activity_add_password,\n    AddPasswordViewModel::class.java\n) {\n    \n    companion object {\n        const val EXTRA_MODE = \"EXTRA_MODE\"\n        const val EXTRA_PASSWORD = \"EXTRA_PASSWORD\"\n        const val MODE_EDIT = 1\n    }\n    \n    private val confirmedPasswordTextWatcher = object : TextWatcher {\n    \n        override fun afterTextChanged(s: Editable?) {\n            return\n        }\n        \n        override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\n            return\n        }\n        \n        override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\n            lifecycleScope.launch(Dispatchers.IO) { viewModel.setConfirmedPassword(s.toString()) }\n        }\n        \n    }\n    \n    private val nameTextWatcher = object : TextWatcher {\n    \n        override fun afterTextChanged(s: Editable?) {\n            return", "func_src_after": "package space.w0lf.password.manager.ui.addPassword\n\nimport android.os.Bundle\nimport android.text.Editable\nimport android.text.TextWatcher\nimport android.view.View\nimport android.widget.AdapterView\nimport android.widget.ArrayAdapter\nimport androidx.appcompat.app.AlertDialog\nimport androidx.appcompat.widget.AppCompatAutoCompleteTextView\nimport androidx.lifecycle.lifecycleScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.runBlocking\nimport space.w0lf.password.manager.R\nimport space.w0lf.password.manager.base.android.BaseActivity\nimport space.w0lf.password.manager.databinding.ActivityAddPasswordBinding\nimport space.w0lf.password.manager.domain.model.Password\n\nclass AddPasswordActivity() : BaseActivity<ActivityAddPasswordBinding, AddPasswordViewModel>(\n    R.layout.activity_add_password,\n    AddPasswordViewModel::class.java\n) {\n    \n    companion object {\n        const val EXTRA_MODE = \"EXTRA_MODE\"\n        const val EXTRA_PASSWORD = \"EXTRA_PASSWORD\"\n        const val MODE_EDIT = 1\n    }\n    \n    private val confirmedPasswordTextWatcher = object : TextWatcher {\n    \n        override fun afterTextChanged(s: Editable?) {\n            return\n        }\n        \n        override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\n            return\n        }\n        \n        override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\n            lifecycleScope.launch(Dispatchers.IO) { viewModel.setConfirmedPassword(s.toString()) }\n        }\n        \n    }\n    \n    private val nameTextWatcher = object : TextWatcher {\n    \n        override fun afterTextChanged(s: Editable?) {\n            return", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6494, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                passwordView?.bringToFront()\n                passwordView?.isClickable = true\n            }\n            passwordHelper.show(true)\n            passwordViewShowing = true\n        } else {\n            centent?.removeView(passwordView)\n            passwordHelper.show(false)\n            passwordViewShowing = false\n            followupRunnable = null\n        }\n        return passwordViewShowing\n    }\n\n    companion object {\n        private const val WINDOW_PASSWORD_VIEW = \"window-passwordView\"\n    }\n}", "func_src_after": "                passwordView?.bringToFront()\n                passwordView?.isClickable = true\n            }\n            passwordHelper.show(true)\n            passwordViewShowing = true\n        } else {\n            centent?.removeView(passwordView)\n            passwordHelper.show(false)\n            passwordViewShowing = false\n            followupRunnable = null\n        }\n        return passwordViewShowing\n    }\n\n    companion object {\n        private const val WINDOW_PASSWORD_VIEW = \"window-passwordView\"\n    }\n}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6497, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n        loadingView = findViewById(R.id.loading_view)\n\n        adapter = ServerListAdapter(ArrayList())\n        adapter.onInstanceClicked = { instance -> presenter.onAdapterItemClick(instance) }\n        adapter.onManualSetupClicked = { this.startManualSetup() }\n        adapter.onPhoneSignInClicked = { this.startPhoneSignIn() }\n\n        capabilityClient = Wearable.getCapabilityClient(this)\n        remoteActivityHelper = RemoteActivityHelper(this)\n\n        findViewById<WearableRecyclerView>(R.id.server_list)?.apply {\n            layoutManager = LinearLayoutManager(this@OnboardingActivity)\n            isEdgeItemsCenteringEnabled = true\n            adapter = this@OnboardingActivity.adapter\n        }\n    }\n\n    override fun onResume() {\n        super.onResume()\n\n        loadingView.visibility = View.GONE\n\n        // Add listener to exchange authentication tokens\n        Wearable.getDataClient(this).addListener(presenter)\n\n        // Check for current instances\n        Thread { findExistingInstances() }.start()\n\n        // Request authentication token in separate task\n        Thread { requestInstances() }.start()\n\n        // Check if there is a phone connected that supports sign in\n        Thread { requestPhoneSignIn() }.start()\n    }\n\n    override fun onPause() {\n        super.onPause()\n\n        Wearable.getDataClient(this).removeListener(presenter)\n    }\n\n    override fun startAuthentication(flowId: String) {\n        startActivity(AuthenticationActivity.newInstance(this, flowId))\n    }\n\n    override fun startManualSetup() {\n        startActivity(ManualSetupActivity.newInstance(this))\n    }\n", "func_src_after": "\n        loadingView = findViewById(R.id.loading_view)\n\n        adapter = ServerListAdapter(ArrayList())\n        adapter.onInstanceClicked = { instance -> presenter.onAdapterItemClick(instance) }\n        adapter.onManualSetupClicked = { this.startManualSetup() }\n        adapter.onPhoneSignInClicked = { this.startPhoneSignIn() }\n\n        capabilityClient = Wearable.getCapabilityClient(this)\n        remoteActivityHelper = RemoteActivityHelper(this)\n\n        findViewById<WearableRecyclerView>(R.id.server_list)?.apply {\n            layoutManager = LinearLayoutManager(this@OnboardingActivity)\n            isEdgeItemsCenteringEnabled = true\n            adapter = <EMAIL>\n        }\n    }\n\n    override fun onResume() {\n        super.onResume()\n\n        loadingView.visibility = View.GONE\n\n        // Add listener to exchange authentication tokens\n        Wearable.getDataClient(this).addListener(presenter)\n\n        // Check for current instances\n        Thread { findExistingInstances() }.start()\n\n        // Request authentication token in separate task\n        Thread { requestInstances() }.start()\n\n        // Check if there is a phone connected that supports sign in\n        Thread { requestPhoneSignIn() }.start()\n    }\n\n    override fun onPause() {\n        super.onPause()\n\n        Wearable.getDataClient(this).removeListener(presenter)\n    }\n\n    override fun startAuthentication(flowId: String) {\n        startActivity(AuthenticationActivity.newInstance(this, flowId))\n    }\n\n    override fun startManualSetup() {\n        startActivity(ManualSetupActivity.newInstance(this))\n    }\n", "line_changes": {"deleted": [{"line_no": 15, "char_start": 642, "char_end": 696, "line": "            adapter = this@OnboardingActivity.adapter\n"}], "added": [{"line_no": 16, "char_start": 642, "char_end": 672, "line": "            adapter = <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 642, "char_end": 696, "chars": "            adapter = this@OnboardingActivity.adapter\n"}], "added": [{"char_start": 642, "char_end": 672, "chars": "            adapter = <EMAIL>\n"}]}}
{"func_name": 6523, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import 'dart:async';\nimport 'dart:io';\nimport 'package:archive/src/async/archive_async.dart';\nimport 'package:archive/src/async/archive_file_async.dart';\nimport 'package:archive/src/async/input_stream_async.dart';\nimport 'package:archive/src/async/zip_decoder_async.dart';\nimport 'package:smb2/smb2.dart';\n\nvoid main() async {\n  final start = DateTime.now().millisecondsSinceEpoch;\n  final uri = Uri.parse('smb://admin:Zhaoxin110@10.10.10.3/comic/高津/[高津] マイ・ディア・メイド [中国翻訳].zip');\n\n  final serverUri = Uri(scheme: uri.scheme, host: uri.host, userInfo: uri.userInfo, port: uri.port, path: uri.pathSegments.first);\n  final fileUri = Uri(pathSegments: uri.pathSegments.sublist(1));\n  final fileName = uri.pathSegments.last;\n\n  SMB smb = SMB(serverUri, debug: true);\n  await smb.connect();\n  final file = await smb.open(fileUri.toString());\n  final fileLength = file.fileLength;\n\n  final tempDirPath = Directory.systemTemp.path;\n  print(tempDirPath);\n\n  final fileKey = uri.toString();\n\n  final ias = InputStreamAsync.disk((int offset, int length, s) async {\n    final buff = smb.readFile(file, offset: offset, length: length);\n    return buff;\n  }, fileLength, chunkSize: 8 * 1024, fileKey: fileKey, cachePath: tempDirPath, fileName: fileName);\n\n  ArchiveAsync archive = await ZipDecoderAsync().decodeBufferAsync(ias, verify: true);\n\n  print(archive);\n\n  for (ArchiveFileAsync file in archive) {\n    String filename = file.name;\n    if (file.isFile) {\n      await file.getContent().then((data) async {\n        if(data == null) {\n          print('数据为空');\n          return;\n        }\n        final outFile = File('out/' + filename);\n        await outFile.create(recursive: true);\n        await outFile.writeAsBytes(data);\n      });\n    } else {\n      Directory('out/' + filename)..create(recursive: true);\n    }", "func_src_after": "import 'dart:async';\nimport 'dart:io';\nimport 'package:archive/src/async/archive_async.dart';\nimport 'package:archive/src/async/archive_file_async.dart';\nimport 'package:archive/src/async/input_stream_async.dart';\nimport 'package:archive/src/async/zip_decoder_async.dart';\nimport 'package:smb2/smb2.dart';\n\nvoid main() async {\n  final start = DateTime.now().millisecondsSinceEpoch;\n  final uri = Uri.parse('smb://admin:Zhaoxin110@<IP-Address>/comic/高津/[高津] マイ・ディア・メイド [中国翻訳].zip');\n\n  final serverUri = Uri(scheme: uri.scheme, host: uri.host, userInfo: uri.userInfo, port: uri.port, path: uri.pathSegments.first);\n  final fileUri = Uri(pathSegments: uri.pathSegments.sublist(1));\n  final fileName = uri.pathSegments.last;\n\n  SMB smb = SMB(serverUri, debug: true);\n  await smb.connect();\n  final file = await smb.open(fileUri.toString());\n  final fileLength = file.fileLength;\n\n  final tempDirPath = Directory.systemTemp.path;\n  print(tempDirPath);\n\n  final fileKey = uri.toString();\n\n  final ias = InputStreamAsync.disk((int offset, int length, s) async {\n    final buff = smb.readFile(file, offset: offset, length: length);\n    return buff;\n  }, fileLength, chunkSize: 8 * 1024, fileKey: fileKey, cachePath: tempDirPath, fileName: fileName);\n\n  ArchiveAsync archive = await ZipDecoderAsync().decodeBufferAsync(ias, verify: true);\n\n  print(archive);\n\n  for (ArchiveFileAsync file in archive) {\n    String filename = file.name;\n    if (file.isFile) {\n      await file.getContent().then((data) async {\n        if(data == null) {\n          print('数据为空');\n          return;\n        }\n        final outFile = File('out/' + filename);\n        await outFile.create(recursive: true);\n        await outFile.writeAsBytes(data);\n      });\n    } else {\n      Directory('out/' + filename)..create(recursive: true);\n    }", "line_changes": {"deleted": [{"line_no": 11, "char_start": 382, "char_end": 480, "line": "  final uri = Uri.parse('smb://admin:Zhaoxin110@10.10.10.3/comic/高津/[高津] マイ・ディア・メイド [中国翻訳].zip');\n"}], "added": [{"line_no": 12, "char_start": 382, "char_end": 482, "line": "  final uri = Uri.parse('smb://admin:Zhaoxin110@<IP-Address>/comic/高津/[高津] マイ・ディア・メイド [中国翻訳].zip');\n"}]}, "char_changes": {"deleted": [{"char_start": 382, "char_end": 480, "chars": "  final uri = Uri.parse('smb://admin:Zhaoxin110@10.10.10.3/comic/高津/[高津] マイ・ディア・メイド [中国翻訳].zip');\n"}], "added": [{"char_start": 382, "char_end": 482, "chars": "  final uri = Uri.parse('smb://admin:Zhaoxin110@<IP-Address>/comic/高津/[高津] マイ・ディア・メイド [中国翻訳].zip');\n"}]}}
{"func_name": 6554, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      verify(_firebaseAuthMock.signOut());\n      verify(_googleSignInMock.signOut());\n    });\n\n    test('updateUser()', () async {\n      _auth = Auth();\n      _auth.setMockInstances(\n          firebaseAuth: _firebaseAuthMock, googleSignIn: _googleSignInMock);\n\n      when(_graphQL.updateUser(\n              name: anyNamed('name'),\n              username: anyNamed('username'),\n              mobile: anyNamed('mobile'),\n              instituteId: anyNamed('instituteId'),\n              emergencyContact: anyNamed('emergencyContact'),\n              displayPictureUrl: anyNamed('displayPictureUrl')))\n          .thenAnswer((_) => Future.value(_mockAuthUser));\n\n      await _auth.updateUser(name: 'test 3');\n\n      verify(_graphQL.updateUser(\n          name: anyNamed('name'),\n          username: anyNamed('username'),\n          mobile: anyNamed('mobile'),\n          instituteId: anyNamed('instituteId'),\n          emergencyContact: anyNamed('emergencyContact'),\n          displayPictureUrl: anyNamed('displayPictureUrl')));\n      verify(_localDb.putValue(any, any, any));\n      expect(_auth.user, _mockAuthUser);\n    });\n  });\n\n  group('Passwordless signin test - ', () {\n    test('sentVerificationMail() with valid email', () async {\n      const mockEmail = 'ankesh@anku.com';\n      _auth = Auth();\n      _auth.setMockInstances(\n          firebaseAuth: _firebaseAuthMock, googleSignIn: _googleSignInMock);\n\n      when(_firebaseAuthMock.sendSignInLinkToEmail(\n              email: mockEmail,\n              actionCodeSettings: captureAnyNamed('actionCodeSettings')))\n          .thenAnswer((_) => Future.value(null));\n      await _auth.sendVerificationMail(email: mockEmail);\n\n      final capturedArgument = verify(_firebaseAuthMock.sendSignInLinkToEmail(\n              email: mockEmail,\n              actionCodeSettings: captureAnyNamed('actionCodeSettings')))\n          .captured[0];\n      expect(capturedArgument, isA<ActionCodeSettings>());", "func_src_after": "      verify(_firebaseAuthMock.signOut());\n      verify(_googleSignInMock.signOut());\n    });\n\n    test('updateUser()', () async {\n      _auth = Auth();\n      _auth.setMockInstances(\n          firebaseAuth: _firebaseAuthMock, googleSignIn: _googleSignInMock);\n\n      when(_graphQL.updateUser(\n              name: anyNamed('name'),\n              username: anyNamed('username'),\n              mobile: anyNamed('mobile'),\n              instituteId: anyNamed('instituteId'),\n              emergencyContact: anyNamed('emergencyContact'),\n              displayPictureUrl: anyNamed('displayPictureUrl')))\n          .thenAnswer((_) => Future.value(_mockAuthUser));\n\n      await _auth.updateUser(name: 'test 3');\n\n      verify(_graphQL.updateUser(\n          name: anyNamed('name'),\n          username: anyNamed('username'),\n          mobile: anyNamed('mobile'),\n          instituteId: anyNamed('instituteId'),\n          emergencyContact: anyNamed('emergencyContact'),\n          displayPictureUrl: anyNamed('displayPictureUrl')));\n      verify(_localDb.putValue(any, any, any));\n      expect(_auth.user, _mockAuthUser);\n    });\n  });\n\n  group('Passwordless signin test - ', () {\n    test('sentVerificationMail() with valid email', () async {\n      const mockEmail = '<EMAIL>';\n      _auth = Auth();\n      _auth.setMockInstances(\n          firebaseAuth: _firebaseAuthMock, googleSignIn: _googleSignInMock);\n\n      when(_firebaseAuthMock.sendSignInLinkToEmail(\n              email: mockEmail,\n              actionCodeSettings: captureAnyNamed('actionCodeSettings')))\n          .thenAnswer((_) => Future.value(null));\n      await _auth.sendVerificationMail(email: mockEmail);\n\n      final capturedArgument = verify(_firebaseAuthMock.sendSignInLinkToEmail(\n              email: mockEmail,\n              actionCodeSettings: captureAnyNamed('actionCodeSettings')))\n          .captured[0];\n      expect(capturedArgument, isA<ActionCodeSettings>());", "line_changes": {"deleted": [{"line_no": 35, "char_start": 1232, "char_end": 1275, "line": "      const mockEmail = 'ankesh@anku.com';\n"}], "added": [{"line_no": 36, "char_start": 1232, "char_end": 1267, "line": "      const mockEmail = '<EMAIL>';\n"}]}, "char_changes": {"deleted": [{"char_start": 1232, "char_end": 1275, "chars": "      const mockEmail = 'ankesh@anku.com';\n"}], "added": [{"char_start": 1232, "char_end": 1267, "chars": "      const mockEmail = '<EMAIL>';\n"}]}}
{"func_name": 6559, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import 'package:firebase_auth/firebase_auth.dart';\nimport 'package:raffle/model/user_model.dart';\n\nclass AuthService {\n  static final AuthService _authService = AuthService._internal();\n  \n  final FirebaseAuth _firebaseAuth = FirebaseAuth.instance;\n\n  factory AuthService() {\n    return _authService;\n  }\n\n  AuthService._internal();\n\n  signIn(String email, String password) async {\n    return await _firebaseAuth.signInWithEmailAndPassword(\n        email: email, password: password);\n  }\n\n  signUp(String email, String password) async {\n    await _firebaseAuth\n        .createUserWithEmailAndPassword(email: email, password: password)\n        .then((value) {\n      // UserModel//create a user a FireStore q tenga el mismo uid\n      var userModel = UserModel(email: email, name: 'test', uid: value.user!.uid);\n\n      return userModel.userRef.add(userModel);\n    });\n  }\n\n  test() async {\n    await FirebaseAuth.instance\n        .signInWithEmailAndPassword(\n            email: 'ssoj@mail.com', password: 'ssOJ1234');\n  }\n}\n", "func_src_after": "import 'package:firebase_auth/firebase_auth.dart';\nimport 'package:raffle/model/user_model.dart';\n\nclass AuthService {\n  static final AuthService _authService = AuthService._internal();\n  \n  final FirebaseAuth _firebaseAuth = FirebaseAuth.instance;\n\n  factory AuthService() {\n    return _authService;\n  }\n\n  AuthService._internal();\n\n  signIn(String email, String password) async {\n    return await _firebaseAuth.signInWithEmailAndPassword(\n        email: email, password: password);\n  }\n\n  signUp(String email, String password) async {\n    await _firebaseAuth\n        .createUserWithEmailAndPassword(email: email, password: password)\n        .then((value) {\n      // UserModel//create a user a FireStore q tenga el mismo uid\n      var userModel = UserModel(email: email, name: 'test', uid: value.user!.uid);\n\n      return userModel.userRef.add(userModel);\n    });\n  }\n\n  test() async {\n    await FirebaseAuth.instance\n        .signInWithEmailAndPassword(\n            email: '<EMAIL>', password: 'ssOJ1234');\n  }\n}\n", "line_changes": {"deleted": [{"line_no": 34, "char_start": 956, "char_end": 1015, "line": "            email: 'ssoj@mail.com', password: 'ssOJ1234');\n"}], "added": [{"line_no": 35, "char_start": 956, "char_end": 1009, "line": "            email: '<EMAIL>', password: 'ssOJ1234');\n"}]}, "char_changes": {"deleted": [{"char_start": 956, "char_end": 1015, "chars": "            email: 'ssoj@mail.com', password: 'ssOJ1234');\n"}], "added": [{"char_start": 956, "char_end": 1009, "chars": "            email: '<EMAIL>', password: 'ssOJ1234');\n"}]}}
{"func_name": 6586, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                                    ),\n                                  ),\n                                ),\n                              ),\n                            )\n                            .toList(),\n                      ),\n                    ),\n                  ),\n                  SizedBox(height: 15),\n                  Row(\n                    children: [\n                      Text(\n                        \"Kontak & Pengaduan\",\n                        style: Theme.of(context)\n                            .textTheme\n                            .subtitle1\n                            .copyWith(fontWeight: FontWeight.bold),\n                      ),\n                    ],\n                  ),\n                  SizedBox(height: 20),\n                  Row(\n                    children: [\n                      Icon(Icons.location_pin),\n                      Text(\n                        \"Rumah Sakit SMKDEV\",\n                        style: TextStyle(fontWeight: FontWeight.w600),\n                      ),\n                    ],\n                  ),\n                  Row(\n                    children: [\n                      Padding(\n                        padding: const EdgeInsets.only(left: 20.0),\n                        child: Text(\n                          \"Jl. Margacinta No. 29\",\n                          style: TextStyle(fontWeight: FontWeight.normal),\n                        ),\n                      ),\n                    ],\n                  ),\n                  SizedBox(height: 10),\n                  Row(\n                    children: [\n                      Icon(Icons.email_outlined),\n                      SizedBox(\n                        width: 5,\n                      ),\n                      Text(\"info@smk.dev\")", "func_src_after": "                                    ),\n                                  ),\n                                ),\n                              ),\n                            )\n                            .toList(),\n                      ),\n                    ),\n                  ),\n                  SizedBox(height: 15),\n                  Row(\n                    children: [\n                      Text(\n                        \"Kontak & Pengaduan\",\n                        style: Theme.of(context)\n                            .textTheme\n                            .subtitle1\n                            .copyWith(fontWeight: FontWeight.bold),\n                      ),\n                    ],\n                  ),\n                  SizedBox(height: 20),\n                  Row(\n                    children: [\n                      Icon(Icons.location_pin),\n                      Text(\n                        \"Rumah Sakit SMKDEV\",\n                        style: TextStyle(fontWeight: FontWeight.w600),\n                      ),\n                    ],\n                  ),\n                  Row(\n                    children: [\n                      Padding(\n                        padding: const EdgeInsets.only(left: 20.0),\n                        child: Text(\n                          \"Jl. Margacinta No. 29\",\n                          style: TextStyle(fontWeight: FontWeight.normal),\n                        ),\n                      ),\n                    ],\n                  ),\n                  SizedBox(height: 10),\n                  Row(\n                    children: [\n                      Icon(Icons.email_outlined),\n                      SizedBox(\n                        width: 5,\n                      ),\n                      Text(\"<EMAIL>\")", "line_changes": {"deleted": [{"line_no": 50, "char_start": 1721, "char_end": 1763, "line": "                      Text(\"info@smk.dev\")"}], "added": [{"line_no": 51, "char_start": 1721, "char_end": 1758, "line": "                      Text(\"<EMAIL>\")"}]}, "char_changes": {"deleted": [{"char_start": 1721, "char_end": 1763, "chars": "                      Text(\"info@smk.dev\")"}], "added": [{"char_start": 1721, "char_end": 1758, "chars": "                      Text(\"<EMAIL>\")"}]}}
{"func_name": 6588, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import 'dart:convert';\nimport 'dart:io';\nimport 'package:http/http.dart' as http;\nimport 'package:lucifer/lucifer.dart';\nimport 'package:test/test.dart';\n\nconst token = '''\n  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiIxMjcuMC4wLjEiLCJleHAiOi0xLCJpYXQiOiIyMDE2LTEyLTIyVDEyOjQ5OjUwLjM2MTQ0NiIsImlzcyI6ImFuZ2VsX2F1dGgiLCJzdWIiOiIxMDY2OTQ4Mzk2MDIwMjg5ODM2NTYifQ==.PYw7yUb-cFWD7N0sSLztP7eeRvO44nu1J2OgDNyT060=\n''';\n\nString jsonEncodeBody(RequestBody result) {\n  return jsonEncode({\n    'query': result.query,\n    'body': result.body,\n    'files': result.files.map((f) {\n      return {\n        'name': f.name,\n        'type': f.type,\n        'filename': f.filename,\n        'data': f.data,\n      };\n    }).toList(),\n    'error': result.error?.toString(),\n    'stack': result.stack?.toString(), //result.stack.toString(),\n  });\n}\n\nmain() {\n  HttpServer? server;\n  String? url;\n  http.Client? client;\n\n  setUp(() async {\n    server = await HttpServer.bind('127.0.0.1', 0);\n    server!.listen((HttpRequest request) async {\n      //Server will simply return a JSON representation of the parsed body\n      request.response.write(jsonEncodeBody(await parseBody(request)));\n      await request.response.close();\n    });\n\n    url = 'http://localhost:${server!.port}';\n    print('Test server listening on $url');\n\n    client = http.Client();\n  });\n\n  tearDown(() async {\n    await server?.close(force: true);\n    client?.close();\n    server = null;", "func_src_after": "import 'dart:convert';\nimport 'dart:io';\nimport 'package:http/http.dart' as http;\nimport 'package:lucifer/lucifer.dart';\nimport 'package:test/test.dart';\n\nconst token = '''\n  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiIxMjcuMC4wLjEiLCJleHAiOi0xLCJpYXQiOiIyMDE2LTEyLTIyVDEyOjQ5OjUwLjM2MTQ0NiIsImlzcyI6ImFuZ2VsX2F1dGgiLCJzdWIiOiIxMDY2OTQ4Mzk2MDIwMjg5ODM2NTYifQ==.PYw7yUb-cFWD7N0sSLztP7eeRvO44nu1J2OgDNyT060=\n''';\n\nString jsonEncodeBody(RequestBody result) {\n  return jsonEncode({\n    'query': result.query,\n    'body': result.body,\n    'files': result.files.map((f) {\n      return {\n        'name': f.name,\n        'type': f.type,\n        'filename': f.filename,\n        'data': f.data,\n      };\n    }).toList(),\n    'error': result.error?.toString(),\n    'stack': result.stack?.toString(), //result.stack.toString(),\n  });\n}\n\nmain() {\n  HttpServer? server;\n  String? url;\n  http.Client? client;\n\n  setUp(() async {\n    server = await HttpServer.bind('<IP-Address>', 0);\n    server!.listen((HttpRequest request) async {\n      //Server will simply return a JSON representation of the parsed body\n      request.response.write(jsonEncodeBody(await parseBody(request)));\n      await request.response.close();\n    });\n\n    url = 'http://localhost:${server!.port}';\n    print('Test server listening on $url');\n\n    client = http.Client();\n  });\n\n  tearDown(() async {\n    await server?.close(force: true);\n    client?.close();\n    server = null;", "line_changes": {"deleted": [{"line_no": 34, "char_start": 918, "char_end": 970, "line": "    server = await HttpServer.bind('127.0.0.1', 0);\n"}], "added": [{"line_no": 35, "char_start": 918, "char_end": 973, "line": "    server = await HttpServer.bind('<IP-Address>', 0);\n"}]}, "char_changes": {"deleted": [{"char_start": 918, "char_end": 970, "chars": "    server = await HttpServer.bind('127.0.0.1', 0);\n"}], "added": [{"char_start": 918, "char_end": 973, "chars": "    server = await HttpServer.bind('<IP-Address>', 0);\n"}]}}
{"func_name": 6633, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\techo \"DESCRIPTION\"\n\t\techo \"ICUS is a script that helps you save and restore configurations, softwares, internet profiles...\"\n\t\techo \"ICUS generates a ICUS_date.save file to restore later the previous configuration (After a system reinstall for example)\"\n\t\techo \"\"\n\t\techo \"USAGE\"\n\t\techo \"   icus.sh [OPTION] [FILE]\"\n\t\techo \"\"\n\t\techo \"OPTIONS\"\n\t\techo \"   -c, --configure       direct access to the configuration menu\"\n\t\techo \"   -r, --restore         direct access to the restore menu\"\n\t\techo \"   --help                display this help\"\n\t\techo \"FILE\"\n\t\techo \"   *.save                the configuration file\"\n\t\techo \"\"\n\t\techo \"AUTHORS\"\n\t\techo \"Benjamin GUILLET <benjamin.guillet@utbm.fr>\"\n\t\techo \"Thibaut DESPOULAIN <thibaut.despoulain@utbm.fr>\"\n\t\techo \"Thomas REAL <thomas.real@utbm.fr>\"\n\t\techo \"\"\n\t\texit 0;\n\t\t;;\n\t*)\n\t\tif [ -z $1 ]\n\t\tthen\t\n\t\t\tICUS_FILE=\"icus_`date +%Y-%m-%d`.save\"\n\t\t\tICUS_FOLDER=\"${ICUS_FILE%.*}\"\n\t\t\tmenu_root\n\t\t\n\t\telif [ -f $1 ] \n\t\tthen\n\t\t\tICUS_FILE=$1\n\t\t\tICUS_FOLDER=\"${ICUS_FILE%.*}\"\n\t\t\tmenu_root\n\t\telse\n\t\t\techo \"Invalid argument\"\n\t\tfi\n\n\t\t;;\nesac\n\necho \"Exiting ICUS...\"\nexit 0\n", "func_src_after": "\t\techo \"DESCRIPTION\"\n\t\techo \"ICUS is a script that helps you save and restore configurations, softwares, internet profiles...\"\n\t\techo \"ICUS generates a ICUS_date.save file to restore later the previous configuration (After a system reinstall for example)\"\n\t\techo \"\"\n\t\techo \"USAGE\"\n\t\techo \"   icus.sh [OPTION] [FILE]\"\n\t\techo \"\"\n\t\techo \"OPTIONS\"\n\t\techo \"   -c, --configure       direct access to the configuration menu\"\n\t\techo \"   -r, --restore         direct access to the restore menu\"\n\t\techo \"   --help                display this help\"\n\t\techo \"FILE\"\n\t\techo \"   *.save                the configuration file\"\n\t\techo \"\"\n\t\techo \"AUTHORS\"\n\t\techo \"Benjamin GUILLET <<EMAIL>>\"\n\t\techo \"Thibaut DESPOULAIN <t<EMAIL>>\"\n\t\techo \"Thomas REAL <<EMAIL>>\"\n\t\techo \"\"\n\t\texit 0;\n\t\t;;\n\t*)\n\t\tif [ -z $1 ]\n\t\tthen\t\n\t\t\tICUS_FILE=\"icus_`date +%Y-%m-%d`.save\"\n\t\t\tICUS_FOLDER=\"${ICUS_FILE%.*}\"\n\t\t\tmenu_root\n\t\t\n\t\telif [ -f $1 ] \n\t\tthen\n\t\t\tICUS_FILE=$1\n\t\t\tICUS_FOLDER=\"${ICUS_FILE%.*}\"\n\t\t\tmenu_root\n\t\telse\n\t\t\techo \"Invalid argument\"\n\t\tfi\n\n\t\t;;\nesac\n\necho \"Exiting ICUS...\"\nexit 0\n", "line_changes": {"deleted": [{"line_no": 16, "char_start": 636, "char_end": 689, "line": "\t\techo \"Benjamin GUILLET <benjamin.guillet@utbm.fr>\"\n"}, {"line_no": 17, "char_start": 636, "char_end": 693, "line": "\t\techo \"Thibaut DESPOULAIN <thibaut.despoulain@utbm.fr>\"\n"}, {"line_no": 18, "char_start": 636, "char_end": 679, "line": "\t\techo \"Thomas REAL <thomas.real@utbm.fr>\"\n"}], "added": [{"line_no": 19, "char_start": 636, "char_end": 672, "line": "\t\techo \"Benjamin GUILLET <<EMAIL>>\"\n"}, {"line_no": 20, "char_start": 672, "char_end": 711, "line": "\t\techo \"Thibaut DESPOULAIN <t<EMAIL>>\"\n"}, {"line_no": 21, "char_start": 711, "char_end": 742, "line": "\t\techo \"Thomas REAL <<EMAIL>>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 636, "char_end": 689, "chars": "\t\techo \"Benjamin GUILLET <benjamin.guillet@utbm.fr>\"\n"}, {"char_start": 636, "char_end": 693, "chars": "\t\techo \"Thibaut DESPOULAIN <thibaut.despoulain@utbm.fr>\"\n"}, {"char_start": 636, "char_end": 679, "chars": "\t\techo \"Thomas REAL <thomas.real@utbm.fr>\"\n"}], "added": [{"char_start": 636, "char_end": 672, "chars": "\t\techo \"Benjamin GUILLET <<EMAIL>>\"\n"}, {"char_start": 672, "char_end": 711, "chars": "\t\techo \"Thibaut DESPOULAIN <t<EMAIL>>\"\n"}, {"char_start": 711, "char_end": 742, "chars": "\t\techo \"Thomas REAL <<EMAIL>>\"\n"}]}}
{"func_name": 6634, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/data/data/com.termux/files/usr/bin/bash -e\n# Copyright ©2019 by Hax4Us. All rights reserved.\n#\n# Email : lkpandey950@gmail.com\n################################################################################\n\n# colors\n\nred='\\033[1;31m'\nyellow='\\033[1;33m'\nblue='\\033[1;34m'\nreset='\\033[0m'\n\n\n# Destination Path\n\nDESTINATION=${PREFIX}/share/TermuxAlpine\nchoice=\"\"\nif [ -d ${DESTINATION} ]; then\n\tprintf \"${red}[!] ${yellow}Alpine is already installed\\nDo you want to reinstall ? (type \\\"y\\\" for yes or \\\"n\\\" for no) :${reset} \"\n\tread choice\n\tif [ \"${choice}\" = \"y\" ]; then\n\t\trm -rf ${DESTINATION}\n\telif [ \"${choice}\" = \"n\" ]; then\n\t\texit 1\n\telse\n\t\tprintf \"${red}[!] Wrong input${reset}\"\n\t\texit 1\n\tfi\n\nfi\nmkdir ${DESTINATION}\ncd ${DESTINATION}\n\n# Utility function for Unknown Arch\n\nunknownarch() {\n\tprintf \"$red\"\n\techo \"[*] Unknown Architecture :(\"\n\tprintf \"$reset\"\n\texit 1\n}\n\n# Utility function for detect system\n\nchecksysinfo() {\n\tprintf \"$blue [*] Checking host architecture ...\"\n\tcase $(getprop ro.product.cpu.abi) in\n\t\tarm64-v8a)\n\t\t\tSETARCH=aarch64", "func_src_after": "#!/data/data/com.termux/files/usr/bin/bash -e\n# Copyright ©2019 by Hax4Us. All rights reserved.\n#\n# Email : <EMAIL>\n################################################################################\n\n# colors\n\nred='\\033[1;31m'\nyellow='\\033[1;33m'\nblue='\\033[1;34m'\nreset='\\033[0m'\n\n\n# Destination Path\n\nDESTINATION=${PREFIX}/share/TermuxAlpine\nchoice=\"\"\nif [ -d ${DESTINATION} ]; then\n\tprintf \"${red}[!] ${yellow}Alpine is already installed\\nDo you want to reinstall ? (type \\\"y\\\" for yes or \\\"n\\\" for no) :${reset} \"\n\tread choice\n\tif [ \"${choice}\" = \"y\" ]; then\n\t\trm -rf ${DESTINATION}\n\telif [ \"${choice}\" = \"n\" ]; then\n\t\texit 1\n\telse\n\t\tprintf \"${red}[!] Wrong input${reset}\"\n\t\texit 1\n\tfi\n\nfi\nmkdir ${DESTINATION}\ncd ${DESTINATION}\n\n# Utility function for Unknown Arch\n\nunknownarch() {\n\tprintf \"$red\"\n\techo \"[*] Unknown Architecture :(\"\n\tprintf \"$reset\"\n\texit 1\n}\n\n# Utility function for detect system\n\nchecksysinfo() {\n\tprintf \"$blue [*] Checking host architecture ...\"\n\tcase $(getprop ro.product.cpu.abi) in\n\t\tarm64-v8a)\n\t\t\tSETARCH=aarch64", "line_changes": {"deleted": [{"line_no": 4, "char_start": 98, "char_end": 130, "line": "# Email : lkpandey950@gmail.com\n"}], "added": [{"line_no": 5, "char_start": 98, "char_end": 116, "line": "# Email : <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 98, "char_end": 130, "chars": "# Email : lkpandey950@gmail.com\n"}], "added": [{"char_start": 98, "char_end": 116, "chars": "# Email : <EMAIL>\n"}]}}
{"func_name": 6637, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env bash\n#\n# -------------------------------------------------------------------------------\n# Filename:    setup.sh\n# Revision:    1.0\n# Date:        2018-09-14\n# Author:      Grady <yhwei876@gmail.com>\n# Description: Setup shell environment\n# -------------------------------------------------------------------------------\n# Copyright (C) 2018 Grady\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# -------------------------------------------------------------------------------\n# Version 1.0\n# 1. Install iterm2\n# 2. Install common tool\n# 3. setup oh-my-zsh\n# 4. setup tmux\n# -------------------------------------------------------------------------------\n#\n\nZSH_CUSTOM=$HOME/.oh-my-zsh/custom\n\nfunction install_shell_app_and_packages() {\n    cd $SETUP_ROOT_DIR/shell\n    brew bundle check || brew bundle\n    cd $SETUP_ROOT_DIR\n}\n\nfunction install_ohmyzsh() {\n    sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n}\n\nfunction install_zsh_plugins() {\n    git clone https://github.com/zsh-users/zsh-completions $ZSH_CUSTOM/plugins/zsh-completions\n    autoload -U compinit && compinit\n    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting\n    git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n}\n", "func_src_after": "#!/usr/bin/env bash\n#\n# -------------------------------------------------------------------------------\n# Filename:    setup.sh\n# Revision:    1.0\n# Date:        2018-09-14\n# Author:      Grady <<EMAIL>>\n# Description: Setup shell environment\n# -------------------------------------------------------------------------------\n# Copyright (C) 2018 Grady\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# -------------------------------------------------------------------------------\n# Version 1.0\n# 1. Install iterm2\n# 2. Install common tool\n# 3. setup oh-my-zsh\n# 4. setup tmux\n# -------------------------------------------------------------------------------\n#\n\nZSH_CUSTOM=$HOME/.oh-my-zsh/custom\n\nfunction install_shell_app_and_packages() {\n    cd $SETUP_ROOT_DIR/shell\n    brew bundle check || brew bundle\n    cd $SETUP_ROOT_DIR\n}\n\nfunction install_ohmyzsh() {\n    sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n}\n\nfunction install_zsh_plugins() {\n    git clone https://github.com/zsh-users/zsh-completions $ZSH_CUSTOM/plugins/zsh-completions\n    autoload -U compinit && compinit\n    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting\n    git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n}\n", "line_changes": {"deleted": [{"line_no": 7, "char_start": 173, "char_end": 215, "line": "# Author:      Grady <yhwei876@gmail.com>\n"}], "added": [{"line_no": 8, "char_start": 173, "char_end": 204, "line": "# Author:      Grady <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 173, "char_end": 215, "chars": "# Author:      Grady <yhwei876@gmail.com>\n"}], "added": [{"char_start": 173, "char_end": 204, "chars": "# Author:      Grady <<EMAIL>>\n"}]}}
{"func_name": 6645, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env bash\necho \"Starting Master Node Configuration\"\necho \"$@\" > /tmp/mn_passed_args\n/vagrant/bootstrap-nix.sh \"$1\" \"$2\" \"$3\"\n\n## Copy over our Master App\ncp -r /vagrant/configs/master/APL-masternode /opt/splunk/etc/apps\n\n## Final Configuration Tasks\n/vagrant/bootstrap-final.sh\n\n### HAPROXY CONFIG\necho \"Starting Haproxy Configuration\"\nif [ ! -f /etc/haproxy/haproxy.cfg ]; then\n\n  # Install haproxy\n  sudo yum install haproxy -y\n\n  # Configure haproxy\n  cat > /etc/default/haproxy <<EOD\n# Set ENABLED to 1 if you want the init script to start haproxy.\nENABLED=1\n# Add extra flags here.\n#EXTRAOPTS=\"-de -m 16\"\nEOD\n  cat > /etc/haproxy/haproxy.cfg <<EOD\nglobal\n    daemon\n    maxconn 256\n    log 127.0.0.1 local2\ndefaults\n    mode http\n    timeout connect 5000ms\n    timeout client 50000ms\n    timeout server 50000ms\nfrontend http-in\n    bind *:80\n    default_backend webservers\nbackend webservers\n    balance roundrobin\n    # Poor-man's sticky\n    # balance source\n    # JSP SessionID Sticky\n    # appsession JSESSIONID len 52 timeout 3h\n    option httpchk\n    option forwardfor\n    option http-server-close\n    server shc1 192.168.33.140:8000 maxconn 32 check ssl verify none\n    server shc2 192.168.33.150:8000 maxconn 32 check ssl verify none\n    server shc3 192.168.33.160:8000 maxconn 32 check ssl verify none", "func_src_after": "#!/usr/bin/env bash\necho \"Starting Master Node Configuration\"\necho \"$@\" > /tmp/mn_passed_args\n/vagrant/bootstrap-nix.sh \"$1\" \"$2\" \"$3\"\n\n## Copy over our Master App\ncp -r /vagrant/configs/master/APL-masternode /opt/splunk/etc/apps\n\n## Final Configuration Tasks\n/vagrant/bootstrap-final.sh\n\n### HAPROXY CONFIG\necho \"Starting Haproxy Configuration\"\nif [ ! -f /etc/haproxy/haproxy.cfg ]; then\n\n  # Install haproxy\n  sudo yum install haproxy -y\n\n  # Configure haproxy\n  cat > /etc/default/haproxy <<EOD\n# Set ENABLED to 1 if you want the init script to start haproxy.\nENABLED=1\n# Add extra flags here.\n#EXTRAOPTS=\"-de -m 16\"\nEOD\n  cat > /etc/haproxy/haproxy.cfg <<EOD\nglobal\n    daemon\n    maxconn 256\n    log <IP-Address> local2\ndefaults\n    mode http\n    timeout connect 5000ms\n    timeout client 50000ms\n    timeout server 50000ms\nfrontend http-in\n    bind *:80\n    default_backend webservers\nbackend webservers\n    balance roundrobin\n    # Poor-man's sticky\n    # balance source\n    # JSP SessionID Sticky\n    # appsession JSESSIONID len 52 timeout 3h\n    option httpchk\n    option forwardfor\n    option http-server-close\n    server shc1 <IP-Address>:8000 maxconn 32 check ssl verify none\n    server shc2 <IP-Address>:8000 maxconn 32 check ssl verify none\n    server shc3 <IP-Address>:8000 maxconn 32 check ssl verify none", "line_changes": {"deleted": [{"line_no": 30, "char_start": 697, "char_end": 722, "line": "    log 127.0.0.1 local2\n"}, {"line_no": 49, "char_start": 1121, "char_end": 1190, "line": "    server shc1 192.168.33.140:8000 maxconn 32 check ssl verify none\n"}, {"line_no": 51, "char_start": 1188, "char_end": 1257, "line": "    server shc2 192.168.33.150:8000 maxconn 32 check ssl verify none\n"}, {"line_no": 53, "char_start": 1255, "char_end": 1323, "line": "    server shc3 192.168.33.160:8000 maxconn 32 check ssl verify none"}], "added": [{"line_no": 31, "char_start": 697, "char_end": 725, "line": "    log <IP-Address> local2\n"}, {"line_no": 50, "char_start": 1121, "char_end": 1188, "line": "    server shc1 <IP-Address>:8000 maxconn 32 check ssl verify none\n"}, {"line_no": 52, "char_start": 1188, "char_end": 1255, "line": "    server shc2 <IP-Address>:8000 maxconn 32 check ssl verify none\n"}, {"line_no": 54, "char_start": 1255, "char_end": 1321, "line": "    server shc3 <IP-Address>:8000 maxconn 32 check ssl verify none"}]}, "char_changes": {"deleted": [{"char_start": 697, "char_end": 722, "chars": "    log 127.0.0.1 local2\n"}, {"char_start": 1121, "char_end": 1190, "chars": "    server shc1 192.168.33.140:8000 maxconn 32 check ssl verify none\n"}, {"char_start": 1188, "char_end": 1257, "chars": "    server shc2 192.168.33.150:8000 maxconn 32 check ssl verify none\n"}, {"char_start": 1255, "char_end": 1323, "chars": "    server shc3 192.168.33.160:8000 maxconn 32 check ssl verify none"}], "added": [{"char_start": 697, "char_end": 725, "chars": "    log <IP-Address> local2\n"}, {"char_start": 1121, "char_end": 1188, "chars": "    server shc1 <IP-Address>:8000 maxconn 32 check ssl verify none\n"}, {"char_start": 1188, "char_end": 1255, "chars": "    server shc2 <IP-Address>:8000 maxconn 32 check ssl verify none\n"}, {"char_start": 1255, "char_end": 1321, "chars": "    server shc3 <IP-Address>:8000 maxconn 32 check ssl verify none"}]}}
{"func_name": 6696, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/usr/bin/env bash\n#SBATCH --job-name=\"pegasus_star\"\n#SBATCH --time=0-48:00:00\n#SBATCH --mail-user=jetstream@tgen.org\n#SBATCH --mail-type=FAIL\n\ntime=`date +%d-%m-%Y-%H-%M`\nbeginTime=`date +%s`\nmachine=`hostname`\n\nRGTAGLIST=$(echo ${RGTAGLIST} | sed \"s/\\o037/,/g\")\nFASTQL1=$(echo ${FASTQL1} | sed \"s/\\s/,/g\")\nFASTQL2=$(echo ${FASTQL2} | sed \"s/\\s/,/g\")\n\necho \"### NODE: $machine\"\necho \"### STARREF=${STARREF}\"\necho \"### STARGTF=${STARGTF}\"\necho \"### RGTAGLIST=${RGTAGLIST}\"\necho \"### FASTQL1=${FASTQL1}\"\necho \"### FASTQL2=${FASTQL2}\"\necho \"### DIR=${DIR}\"\necho \"### SAMTOOLSPATH=${SAMTOOLSPATH}\"\necho \"### SAMNAME=${SAMNAME}\"\n\nanotherName2=${SAMNAME}\nanotherName=${SAMNAME}.proj\ncd ${DIR}\n\necho \"${STARPATH}/STAR --genomeDir ${STARREF} \\\n    --runMode alignReads \\\n    --limitOutSAMoneReadBytes 90000000 \\\n    --readFilesCommand zcat \\\n    --readFilesIn ${FASTQL1} ${FASTQL2} \\\n    --outSAMtype SAM \\\n    --outFilterType BySJout \\\n    --outFilterMultimapNmax 10 \\\n    --outFilterMismatchNmax 10 \\\n    --outFilterMismatchNoverLmax 0.1 \\\n    --alignIntronMin 20 \\\n    --alignIntronMax 1000000 \\\n    --alignMatesGapMax 1000000 \\\n    --alignSJoverhangMin 8 \\\n    --alignSJDBoverhangMin 1 \\\n    --seedSearchStartLmax 30 \\\n    --chimSegmentMin 15 \\\n    --chimJunctionOverhangMin 15 \\\n    --runThreadN 14 \\\n    --genomeLoad NoSharedMemory \\\n    --outSAMstrandField intronMotif \\\n    --outSAMunmapped Within \\", "func_src_after": "#!/usr/bin/env bash\n#SBATCH --job-name=\"pegasus_star\"\n#SBATCH --time=0-48:00:00\n#SBATCH --mail-user=<EMAIL>\n#SBATCH --mail-type=FAIL\n\ntime=`date +%d-%m-%Y-%H-%M`\nbeginTime=`date +%s`\nmachine=`hostname`\n\nRGTAGLIST=$(echo ${RGTAGLIST} | sed \"s/\\o037/,/g\")\nFASTQL1=$(echo ${FASTQL1} | sed \"s/\\s/,/g\")\nFASTQL2=$(echo ${FASTQL2} | sed \"s/\\s/,/g\")\n\necho \"### NODE: $machine\"\necho \"### STARREF=${STARREF}\"\necho \"### STARGTF=${STARGTF}\"\necho \"### RGTAGLIST=${RGTAGLIST}\"\necho \"### FASTQL1=${FASTQL1}\"\necho \"### FASTQL2=${FASTQL2}\"\necho \"### DIR=${DIR}\"\necho \"### SAMTOOLSPATH=${SAMTOOLSPATH}\"\necho \"### SAMNAME=${SAMNAME}\"\n\nanotherName2=${SAMNAME}\nanotherName=${SAMNAME}.proj\ncd ${DIR}\n\necho \"${STARPATH}/STAR --genomeDir ${STARREF} \\\n    --runMode alignReads \\\n    --limitOutSAMoneReadBytes 90000000 \\\n    --readFilesCommand zcat \\\n    --readFilesIn ${FASTQL1} ${FASTQL2} \\\n    --outSAMtype SAM \\\n    --outFilterType BySJout \\\n    --outFilterMultimapNmax 10 \\\n    --outFilterMismatchNmax 10 \\\n    --outFilterMismatchNoverLmax 0.1 \\\n    --alignIntronMin 20 \\\n    --alignIntronMax 1000000 \\\n    --alignMatesGapMax 1000000 \\\n    --alignSJoverhangMin 8 \\\n    --alignSJDBoverhangMin 1 \\\n    --seedSearchStartLmax 30 \\\n    --chimSegmentMin 15 \\\n    --chimJunctionOverhangMin 15 \\\n    --runThreadN 14 \\\n    --genomeLoad NoSharedMemory \\\n    --outSAMstrandField intronMotif \\\n    --outSAMunmapped Within \\", "line_changes": {"deleted": [{"line_no": 4, "char_start": 80, "char_end": 119, "line": "#SBATCH --mail-user=jetstream@tgen.org\n"}], "added": [{"line_no": 5, "char_start": 80, "char_end": 108, "line": "#SBATCH --mail-user=<EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 80, "char_end": 119, "chars": "#SBATCH --mail-user=jetstream@tgen.org\n"}], "added": [{"char_start": 80, "char_end": 108, "chars": "#SBATCH --mail-user=<EMAIL>\n"}]}}
{"func_name": 6702, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/bin/bash\n\nif [ \"$1\" = \"--help\" ] || [ \"$1\" = \"-h\" ]; then\n    echo \"parameters: \"\n    echo \"  -o, --operation  : Executes cluster-wide operation. Operation can be 'get-state','change-state','shutdown','force-start','partial-start','get-cluster-version','change-cluster-version'.\"\n    echo \"  -s, --state      : Updates state of the cluster to new state. New state can be 'active', 'frozen', 'passive', 'no_migration'.\"\n    echo \"  -a, --address    : Defines which ip address hazelcast is running. Default value is '127.0.0.1'.\"\n    echo \"  -p, --port       : Defines which port hazelcast is running. Default value is '5701'.\"\n    echo \"  -g, --groupname  : Defines groupname of the cluster. Default value is 'dev'.\"\n    echo \"  -P, --password   : Defines password of the cluster. Default value is 'dev-pass'.\"\n    echo \"  -v, --version    : Defines the cluster version to change to. To be used in conjunction with '-o change-cluster-version'.\"\n    echo \"  -d, --debug      : Prints error output.\"\n    echo\n    echo \"HTTPs related (when TLS is enabled):\"\n    echo \"      --https      : Uses HTTPs protocol for REST calls. (no parameter value expected)\"\n    echo \"      --cacert     : Defines trusted PEM-encoded certificate file path. It's used to verify member certificates.\"\n    echo \"      --cert       : Defines PEM-encoded client certificate file path. Only needed when client certificate authentication is used.\"\n    echo \"      --key        : Defines PEM-encoded client private key file path. Only needed when client certificate authentication is used.\"\n    echo \"      --insecure   : Disables member certificate verification. (no parameter value expected)\"\n    exit 0\nfi\n\nURL_SCHEME=\"http\"\nCURL_ARGS=\"--silent\"\n\nwhile [ $# -ge 1 ]\ndo\nkey=\"$1\"\ncase \"$key\" in\n    -o|--operation)\n    OPERATION=\"$2\"\n    shift # past argument\n    ;;\n    -s|--state)\n    STATE=\"$2\"\n    shift # past argument\n    ;;\n    -p|--port)\n    PORT=\"$2\"\n    shift # past argument\n    ;;\n    -g|--groupname)\n    GROUPNAME=\"$2\"\n    shift # past argument\n    ;;\n    -P|--password)\n    PASSWORD=\"$2\"\n    shift # past argument\n    ;;\n     -a|--address)", "func_src_after": "#!/bin/bash\n\nif [ \"$1\" = \"--help\" ] || [ \"$1\" = \"-h\" ]; then\n    echo \"parameters: \"\n    echo \"  -o, --operation  : Executes cluster-wide operation. Operation can be 'get-state','change-state','shutdown','force-start','partial-start','get-cluster-version','change-cluster-version'.\"\n    echo \"  -s, --state      : Updates state of the cluster to new state. New state can be 'active', 'frozen', 'passive', 'no_migration'.\"\n    echo \"  -a, --address    : Defines which ip address hazelcast is running. Default value is '<IP-Address>'.\"\n    echo \"  -p, --port       : Defines which port hazelcast is running. Default value is '5701'.\"\n    echo \"  -g, --groupname  : Defines groupname of the cluster. Default value is 'dev'.\"\n    echo \"  -P, --password   : Defines password of the cluster. Default value is 'dev-pass'.\"\n    echo \"  -v, --version    : Defines the cluster version to change to. To be used in conjunction with '-o change-cluster-version'.\"\n    echo \"  -d, --debug      : Prints error output.\"\n    echo\n    echo \"HTTPs related (when TLS is enabled):\"\n    echo \"      --https      : Uses HTTPs protocol for REST calls. (no parameter value expected)\"\n    echo \"      --cacert     : Defines trusted PEM-encoded certificate file path. It's used to verify member certificates.\"\n    echo \"      --cert       : Defines PEM-encoded client certificate file path. Only needed when client certificate authentication is used.\"\n    echo \"      --key        : Defines PEM-encoded client private key file path. Only needed when client certificate authentication is used.\"\n    echo \"      --insecure   : Disables member certificate verification. (no parameter value expected)\"\n    exit 0\nfi\n\nURL_SCHEME=\"http\"\nCURL_ARGS=\"--silent\"\n\nwhile [ $# -ge 1 ]\ndo\nkey=\"$1\"\ncase \"$key\" in\n    -o|--operation)\n    OPERATION=\"$2\"\n    shift # past argument\n    ;;\n    -s|--state)\n    STATE=\"$2\"\n    shift # past argument\n    ;;\n    -p|--port)\n    PORT=\"$2\"\n    shift # past argument\n    ;;\n    -g|--groupname)\n    GROUPNAME=\"$2\"\n    shift # past argument\n    ;;\n    -P|--password)\n    PASSWORD=\"$2\"\n    shift # past argument\n    ;;\n     -a|--address)", "line_changes": {"deleted": [{"line_no": 7, "char_start": 422, "char_end": 531, "line": "    echo \"  -a, --address    : Defines which ip address hazelcast is running. Default value is '127.0.0.1'.\"\n"}], "added": [{"line_no": 8, "char_start": 422, "char_end": 534, "line": "    echo \"  -a, --address    : Defines which ip address hazelcast is running. Default value is '<IP-Address>'.\"\n"}]}, "char_changes": {"deleted": [{"char_start": 422, "char_end": 531, "chars": "    echo \"  -a, --address    : Defines which ip address hazelcast is running. Default value is '127.0.0.1'.\"\n"}], "added": [{"char_start": 422, "char_end": 534, "chars": "    echo \"  -a, --address    : Defines which ip address hazelcast is running. Default value is '<IP-Address>'.\"\n"}]}}
{"func_name": 6707, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/bin/bash\n## (C) George Goulas, 2011\n##\n## Proxy service configuration script for OSX\n## tested on MacOSX Lion 10.6\n##\n\nROOT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n \n\n## SETTINGS\n##\n# SOCKS PROXY PORT\n# Notes: It's the same value with the autoproxy.pac\nPORT=1090\n# SSH DEBUG OPTIONS\n#SSH_DEBUG_OPTS=\"-vvv\"\nSSH_DEBUG_OPTS=\"\"\n# SSH OPTIONS TO CREATE PROXY\nSSH_OPTS=\"-C2TnNfD\"\n# user@host\nSSH_HOST=\"username@serverip\"\n# SSH PORT\nSSH_PORT=22\n# OSX network service to configure proxy for\nNET_INTERFACE=\"yl\"\n# Pac file for autoproxy\nPAC_FILE=\"file:/${ROOT_DIR}/autoproxy.pac\"\n# Verbose, if not empty, it prints diagnosing messages\nVERBOSE=1\n# Log file for ssh proxy\nLOG_FILE=\"${HOME}/sshproxy.log\"\n# Set auto proxy configuration off or not\nOFF_AUTOPROXY=1\n# Bypass proxy settings for hosts and domains\nBYPASS_DOMAINS=\"127.0.0.1 localhost 169.254/16 192.168/16\"\n##\n## END OF SETTINGS, DO NOT MODIFY PAST THIS POINT\n##\n\n \n\n", "func_src_after": "#!/bin/bash\n## (C) George Goulas, 2011\n##\n## Proxy service configuration script for OSX\n## tested on MacOSX Lion 10.6\n##\n\nROOT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n \n\n## SETTINGS\n##\n# SOCKS PROXY PORT\n# Notes: It's the same value with the autoproxy.pac\nPORT=1090\n# SSH DEBUG OPTIONS\n#SSH_DEBUG_OPTS=\"-vvv\"\nSSH_DEBUG_OPTS=\"\"\n# SSH OPTIONS TO CREATE PROXY\nSSH_OPTS=\"-C2TnNfD\"\n# user@host\nSSH_HOST=\"username@serverip\"\n# SSH PORT\nSSH_PORT=22\n# OSX network service to configure proxy for\nNET_INTERFACE=\"yl\"\n# Pac file for autoproxy\nPAC_FILE=\"file:/${ROOT_DIR}/autoproxy.pac\"\n# Verbose, if not empty, it prints diagnosing messages\nVERBOSE=1\n# Log file for ssh proxy\nLOG_FILE=\"${HOME}/sshproxy.log\"\n# Set auto proxy configuration off or not\nOFF_AUTOPROXY=1\n# Bypass proxy settings for hosts and domains\nBYPASS_DOMAINS=\"<IP-Address> localhost <IP-Address>/16 <IP-Address>/16\"\n##\n## END OF SETTINGS, DO NOT MODIFY PAST THIS POINT\n##\n\n \n\n", "line_changes": {"deleted": [{"line_no": 36, "char_start": 815, "char_end": 874, "line": "BYPASS_DOMAINS=\"127.0.0.1 localhost 169.254/16 192.168/16\"\n"}], "added": [{"line_no": 37, "char_start": 815, "char_end": 887, "line": "BYPASS_DOMAINS=\"<IP-Address> localhost <IP-Address>/16 <IP-Address>/16\"\n"}]}, "char_changes": {"deleted": [{"char_start": 815, "char_end": 874, "chars": "BYPASS_DOMAINS=\"127.0.0.1 localhost 169.254/16 192.168/16\"\n"}], "added": [{"char_start": 815, "char_end": 887, "chars": "BYPASS_DOMAINS=\"<IP-Address> localhost <IP-Address>/16 <IP-Address>/16\"\n"}]}}
{"func_name": 6722, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "GRAPHMAP2_DOWNLOAD_URL=\"https://github.com/lbcb-sci/graphmap2/releases/download/v0.6.4/prebuild.zip\"\n\nSAMTOOLS_VERSION=\"1.9\" # released on 2018.07.18\nSAMTOOLS_DOWNLOAD_URL=\"https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2\"\n\nPICARD_VERSION=\"2.19.0\" # released on 2019.03.22\nPICARD_DOWNLOAD_URL=\"https://github.com/broadinstitute/picard/releases/download/${PICARD_VERSION}/picard.jar\"\n\nGATK3_VERSION=\"3.6-6-g965413b\" # \nGATK3_DOWLOAD_URL=\"https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/${SRA_VERSION}/GenomeAnalysisTK.jar\"\n\nGEMTOOLS_VERSION=\"1.7.1\"\nGEMTOOLS_DOWNLOAD_URL=\"http://barnaserver.com/gemtools/releases/GEMTools-static-i3-${GEMTOOLS_VERSION}.tar.gz\"\n\n# variant calling\nGATK4_VERSION=\"4.0.11.0\" # released on 2018.10.23\nGATK4_DOWNLOAD_URL=\"https://github.com/broadinstitute/gatk/releases/download/${GATK4_VERSION}/gatk-${GATK4_VERSION}.zip\"\n\nFREEBAYES_VERSION=\"1.2.0\" # \nFREEBAYES_GITHUB_COMMIT_VERSION=\"d15209e\" # committed on 2019.02.14\nFREEBAYES_DOWNLOAD_URL=\"https://github.com/ekg/freebayes\"\n\nCLAIR_VERSION=\"2.1.0\" # released on 2020.04.15\n\nLONGSHOT_VERSION=\"0.3.4\" # released on 2019.05.02\n\nFREEC_VERSION=\"11.4\" # released on 2018.04.28\nFREEC_DOWNLOAD_URL=\"https://github.com/BoevaLab/FREEC/archive/v${FREEC_VERSION}.tar.gz\"\n\nMANTA_VERSION=\"1.5.0\" # released on 2018.11.12\nMANTA_DOWNLOAD_URL=\"https://github.com/Illumina/manta/releases/download/v${MANTA_VERSION}/manta-${MANTA_VERSION}.centos6_x86_64.tar.bz2\"\n\nDELLY_VERSION=\"0.8.1\" # released on 2019.02.04\nDELLY_DOWNLOAD_URL=\"https://github.com/dellytools/delly/releases/download/v${DELLY_VERSION}/delly_v${DELLY_VERSION}_linux_x86_64bit\"\n\nSVIM_VERSION=\"1.0.0\" # released on 2019.04.29\nSVIM_GITHUB_COMMIT_VERSION=\"b72e631\" # committed on 2019.05.02\n\nSNIFFLES_VERSION=\"1.0.11\" # released on 2019.01.30\nSNIFFLES_GITHUB_COMMIT_VERSION=\"e5d5150\" # committed on 2019.03.30\nSNIFFLES_DOWNLOAD_URL=\"https://github.com/fritzsedlazeck/Sniffles/archive/${SNIFFLES_VERSION}.tar.gz\"\n\nPBSV_VERSION=\"2.2.0\" # released on 2019.02.28\n\nPICKY_VERSION=\"0.2.a\" # released on 2018.07.17   \nPICKY_GITHUB_COMMIT_VERSION=\"34b85ac\" # committed on 2018.07.17\nPICKY_DOWNLOAD_URL=\"https://github.com/TheJacksonLaboratory/Picky\"\n\nNANOSV_VERSION=\"1.2.3\" # released on 2019.04.09\nNANOSV_GITHUB_COMMIT_VERSION=\"c1ae30c\" # committed on 2019.04.09", "func_src_after": "GRAPHMAP2_DOWNLOAD_URL=\"https://github.com/lbcb-sci/graphmap2/releases/download/v0.6.4/prebuild.zip\"\n\nSAMTOOLS_VERSION=\"1.9\" # released on 2018.07.18\nSAMTOOLS_DOWNLOAD_URL=\"https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2\"\n\nPICARD_VERSION=\"2.19.0\" # released on 2019.03.22\nPICARD_DOWNLOAD_URL=\"https://github.com/broadinstitute/picard/releases/download/${PICARD_VERSION}/picard.jar\"\n\nGATK3_VERSION=\"3.6-6-g965413b\" # \nGATK3_DOWLOAD_URL=\"https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/${SRA_VERSION}/GenomeAnalysisTK.jar\"\n\nGEMTOOLS_VERSION=\"1.7.1\"\nGEMTOOLS_DOWNLOAD_URL=\"http://barnaserver.com/gemtools/releases/GEMTools-static-i3-${GEMTOOLS_VERSION}.tar.gz\"\n\n# variant calling\nGATK4_VERSION=\"4.0.11.0\" # released on 2018.10.23\nGATK4_DOWNLOAD_URL=\"https://github.com/broadinstitute/gatk/releases/download/${GATK4_VERSION}/gatk-${GATK4_VERSION}.zip\"\n\nFREEBAYES_VERSION=\"1.2.0\" # \nFREEBAYES_GITHUB_COMMIT_VERSION=\"d15209e\" # committed on 2019.02.14\nFREEBAYES_DOWNLOAD_URL=\"https://github.com/ekg/freebayes\"\n\nCLAIR_VERSION=\"2.1.0\" # released on 2020.04.15\n\nLONGSHOT_VERSION=\"0.3.4\" # released on 2019.05.02\n\nFREEC_VERSION=\"11.4\" # released on 2018.04.28\nFREEC_DOWNLOAD_URL=\"https://github.com/BoevaLab/FREEC/archive/v${FREEC_VERSION}.tar.gz\"\n\nMANTA_VERSION=\"1.5.0\" # released on 2018.11.12\nMANTA_DOWNLOAD_URL=\"https://github.com/Illumina/manta/releases/download/v${MANTA_VERSION}/manta-${MANTA_VERSION}.centos6_x86_64.tar.bz2\"\n\nDELLY_VERSION=\"0.8.1\" # released on 2019.02.04\nDELLY_DOWNLOAD_URL=\"https://github.com/dellytools/delly/releases/download/v${DELLY_VERSION}/delly_v${DELLY_VERSION}_linux_x86_64bit\"\n\nSVIM_VERSION=\"1.0.0\" # released on 2019.04.29\nSVIM_GITHUB_COMMIT_VERSION=\"b72e631\" # committed on 2019.05.02\n\nSNIFFLES_VERSION=\"1.0.11\" # released on 2019.01.30\nSNIFFLES_GITHUB_COMMIT_VERSION=\"e5d5150\" # committed on 2019.03.30\nSNIFFLES_DOWNLOAD_URL=\"https://github.com/fritzsedlazeck/Sniffles/archive/${SNIFFLES_VERSION}.tar.gz\"\n\nPBSV_VERSION=\"2.2.0\" # released on 2019.02.28\n\nPICKY_VERSION=\"0.2.a\" # released on 2018.07.17   \nPICKY_GITHUB_COMMIT_VERSION=\"34b85ac\" # committed on 2018.07.17\nPICKY_DOWNLOAD_URL=\"https://github.com/TheJacksonLaboratory/Picky\"\n\nNANOSV_VERSION=\"1.2.3\" # released on 2019.04.09\nNANOSV_GITHUB_COMMIT_VERSION=\"c1ae30c\" # committed on 2019.04.09", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6724, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    \"workload-resource\": \"${release}-${sink_app_name}\",\n    \"type\": \"Deployment\"\n  }\n}\nEOF\n)\"\n\n# define the network interface intents for the packetgen workload intent\npacketgen_unprotected_interface_name=\"packetgen_unprotected_if\"\npacketgen_unprotected_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${packetgen_unprotected_interface_name}\",\n    \"description\": \"description of ${packetgen_unprotected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${packetgen_unprotected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${packetgen_unprotected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth1\",\n    \"name\": \"${unprotectedprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"192.168.10.2\"\n  }\n}\nEOF\n)\"\n\npacketgen_emco_interface_name=\"packetgen_emco_if\"\npacketgen_emco_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${packetgen_emco_interface_name}\",\n    \"description\": \"description of ${packetgen_emco_interface_name}\",\n    \"userData1\": \"useer data 2 for ${packetgen_emco_interface_name}\",\n    \"userData2\": \"useer data 2 for ${packetgen_emco_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth2\",\n    \"name\": \"${emcoprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"10.10.20.2\"\n  }\n}\nEOF\n)\"\n\n# define the network interface intents for the firewall workload intent\nfirewall_unprotected_interface_name=\"firewall_unprotected_if\"\nfirewall_unprotected_interface_data=\"$(cat <<EOF\n{", "func_src_after": "    \"workload-resource\": \"${release}-${sink_app_name}\",\n    \"type\": \"Deployment\"\n  }\n}\nEOF\n)\"\n\n# define the network interface intents for the packetgen workload intent\npacketgen_unprotected_interface_name=\"packetgen_unprotected_if\"\npacketgen_unprotected_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${packetgen_unprotected_interface_name}\",\n    \"description\": \"description of ${packetgen_unprotected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${packetgen_unprotected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${packetgen_unprotected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth1\",\n    \"name\": \"${unprotectedprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"192.168.10.2\"\n  }\n}\nEOF\n)\"\n\npacketgen_emco_interface_name=\"packetgen_emco_if\"\npacketgen_emco_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${packetgen_emco_interface_name}\",\n    \"description\": \"description of ${packetgen_emco_interface_name}\",\n    \"userData1\": \"useer data 2 for ${packetgen_emco_interface_name}\",\n    \"userData2\": \"useer data 2 for ${packetgen_emco_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth2\",\n    \"name\": \"${emcoprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"<IP-Address>\"\n  }\n}\nEOF\n)\"\n\n# define the network interface intents for the firewall workload intent\nfirewall_unprotected_interface_name=\"firewall_unprotected_if\"\nfirewall_unprotected_interface_data=\"$(cat <<EOF\n{", "line_changes": {"deleted": [{"line_no": 41, "char_start": 1236, "char_end": 1266, "line": "    \"ipAddress\": \"10.10.20.2\"\n"}], "added": [{"line_no": 42, "char_start": 1236, "char_end": 1268, "line": "    \"ipAddress\": \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 1236, "char_end": 1266, "chars": "    \"ipAddress\": \"10.10.20.2\"\n"}], "added": [{"char_start": 1236, "char_end": 1268, "chars": "    \"ipAddress\": \"<IP-Address>\"\n"}]}}
{"func_name": 6725, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  \"metadata\": {\n    \"name\": \"${firewall_unprotected_interface_name}\",\n    \"description\": \"description of ${firewall_unprotected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${firewall_unprotected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${firewall_unprotected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth1\",\n    \"name\": \"${unprotectedprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"192.168.10.3\"\n  }\n}\nEOF\n)\"\n\nfirewall_protected_interface_name=\"firewall_protected_if\"\nfirewall_protected_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${firewall_protected_interface_name}\",\n    \"description\": \"description of ${firewall_protected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${firewall_protected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${firewall_protected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth2\",\n    \"name\": \"${protectednetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"192.168.20.2\"\n  }\n}\nEOF\n)\"\n\nfirewall_emco_interface_name=\"firewall_emco_if\"\nfirewall_emco_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${firewall_emco_interface_name}\",\n    \"description\": \"description of ${firewall_emco_interface_name}\",\n    \"userData1\": \"useer data 2 for ${firewall_emco_interface_name}\",\n    \"userData2\": \"useer data 2 for ${firewall_emco_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth3\",\n    \"name\": \"${emcoprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"10.10.20.3\"\n  }", "func_src_after": "  \"metadata\": {\n    \"name\": \"${firewall_unprotected_interface_name}\",\n    \"description\": \"description of ${firewall_unprotected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${firewall_unprotected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${firewall_unprotected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth1\",\n    \"name\": \"${unprotectedprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"<IP-Address>\"\n  }\n}\nEOF\n)\"\n\nfirewall_protected_interface_name=\"firewall_protected_if\"\nfirewall_protected_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${firewall_protected_interface_name}\",\n    \"description\": \"description of ${firewall_protected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${firewall_protected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${firewall_protected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth2\",\n    \"name\": \"${protectednetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"<IP-Address>\"\n  }\n}\nEOF\n)\"\n\nfirewall_emco_interface_name=\"firewall_emco_if\"\nfirewall_emco_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${firewall_emco_interface_name}\",\n    \"description\": \"description of ${firewall_emco_interface_name}\",\n    \"userData1\": \"useer data 2 for ${firewall_emco_interface_name}\",\n    \"userData2\": \"useer data 2 for ${firewall_emco_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth3\",\n    \"name\": \"${emcoprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"<IP-Address>\"\n  }", "line_changes": {"deleted": [{"line_no": 11, "char_start": 419, "char_end": 451, "line": "    \"ipAddress\": \"192.168.10.3\"\n"}, {"line_no": 31, "char_start": 973, "char_end": 1005, "line": "    \"ipAddress\": \"192.168.20.2\"\n"}, {"line_no": 51, "char_start": 1495, "char_end": 1525, "line": "    \"ipAddress\": \"10.10.20.3\"\n"}], "added": [{"line_no": 12, "char_start": 419, "char_end": 451, "line": "    \"ipAddress\": \"<IP-Address>\"\n"}, {"line_no": 32, "char_start": 973, "char_end": 1005, "line": "    \"ipAddress\": \"<IP-Address>\"\n"}, {"line_no": 52, "char_start": 1495, "char_end": 1527, "line": "    \"ipAddress\": \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 419, "char_end": 451, "chars": "    \"ipAddress\": \"192.168.10.3\"\n"}, {"char_start": 973, "char_end": 1005, "chars": "    \"ipAddress\": \"192.168.20.2\"\n"}, {"char_start": 1495, "char_end": 1525, "chars": "    \"ipAddress\": \"10.10.20.3\"\n"}], "added": [{"char_start": 419, "char_end": 451, "chars": "    \"ipAddress\": \"<IP-Address>\"\n"}, {"char_start": 973, "char_end": 1005, "chars": "    \"ipAddress\": \"<IP-Address>\"\n"}, {"char_start": 1495, "char_end": 1527, "chars": "    \"ipAddress\": \"<IP-Address>\"\n"}]}}
{"func_name": 6726, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "}\nEOF\n)\"\n\n# define the network interface intents for the sink workload intent\nsink_protected_interface_name=\"sink_protected_if\"\nsink_protected_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${sink_protected_interface_name}\",\n    \"description\": \"description of ${sink_protected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${sink_protected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${sink_protected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth1\",\n    \"name\": \"${protectednetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"192.168.20.3\"\n  }\n}\nEOF\n)\"\n\nsink_emco_interface_name=\"sink_emco_if\"\nsink_emco_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${sink_emco_interface_name}\",\n    \"description\": \"description of ${sink_emco_interface_name}\",\n    \"userData1\": \"useer data 2 for ${sink_emco_interface_name}\",\n    \"userData2\": \"useer data 2 for ${sink_emco_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth2\",\n    \"name\": \"${emcoprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"10.10.20.4\"\n  }\n}\nEOF\n)\"\n\n# define the intents to be used by the group\ndeployment_intents_in_group_name=\"vfw_deploy_intents\"\ndeployment_intents_in_group_data=\"$(cat <<EOF\n{\n   \"metadata\":{\n      \"name\":\"${deployment_intents_in_group_name}\",\n      \"description\":\"descriptionf of ${deployment_intents_in_group_name}\",", "func_src_after": "}\nEOF\n)\"\n\n# define the network interface intents for the sink workload intent\nsink_protected_interface_name=\"sink_protected_if\"\nsink_protected_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${sink_protected_interface_name}\",\n    \"description\": \"description of ${sink_protected_interface_name}\",\n    \"userData1\": \"useer data 2 for ${sink_protected_interface_name}\",\n    \"userData2\": \"useer data 2 for ${sink_protected_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth1\",\n    \"name\": \"${protectednetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"<IP-Address>\"\n  }\n}\nEOF\n)\"\n\nsink_emco_interface_name=\"sink_emco_if\"\nsink_emco_interface_data=\"$(cat <<EOF\n{\n  \"metadata\": {\n    \"name\": \"${sink_emco_interface_name}\",\n    \"description\": \"description of ${sink_emco_interface_name}\",\n    \"userData1\": \"useer data 2 for ${sink_emco_interface_name}\",\n    \"userData2\": \"useer data 2 for ${sink_emco_interface_name}\"\n  },\n  \"spec\": {\n    \"interface\": \"eth2\",\n    \"name\": \"${emcoprovidernetworkname}\",\n    \"defaultGateway\": \"false\",\n    \"ipAddress\": \"<IP-Address>\"\n  }\n}\nEOF\n)\"\n\n# define the intents to be used by the group\ndeployment_intents_in_group_name=\"vfw_deploy_intents\"\ndeployment_intents_in_group_data=\"$(cat <<EOF\n{\n   \"metadata\":{\n      \"name\":\"${deployment_intents_in_group_name}\",\n      \"description\":\"descriptionf of ${deployment_intents_in_group_name}\",", "line_changes": {"deleted": [{"line_no": 19, "char_start": 558, "char_end": 590, "line": "    \"ipAddress\": \"192.168.20.3\"\n"}, {"line_no": 39, "char_start": 1052, "char_end": 1082, "line": "    \"ipAddress\": \"10.10.20.4\"\n"}], "added": [{"line_no": 20, "char_start": 558, "char_end": 590, "line": "    \"ipAddress\": \"<IP-Address>\"\n"}, {"line_no": 40, "char_start": 1052, "char_end": 1084, "line": "    \"ipAddress\": \"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 558, "char_end": 590, "chars": "    \"ipAddress\": \"192.168.20.3\"\n"}, {"char_start": 1052, "char_end": 1082, "chars": "    \"ipAddress\": \"10.10.20.4\"\n"}], "added": [{"char_start": 558, "char_end": 590, "chars": "    \"ipAddress\": \"<IP-Address>\"\n"}, {"char_start": 1052, "char_end": 1084, "chars": "    \"ipAddress\": \"<IP-Address>\"\n"}]}}
{"func_name": 6738, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#---------------------------------------------------------\n\n=head1 NAME\n\nBio::Matrix::PSM::IO::meme - PSM meme parser implementation\n\n=head1 SYNOPSIS\n\nSee Bio::Matrix::PSM::IO for detailed documentation on how to use PSM parsers\n\n=head1 DESCRIPTION\n\nParser for meme.\n\n=head1 FEEDBACK\n\n=head2 Mailing Lists\n\nUser feedback is an integral part of the evolution of this\nand other Bioperl modules. Send your comments and suggestions preferably\n to one of the Bioperl mailing lists.\nYour participation is much appreciated.\n\n  bioperl-l@bioperl.org                  - General discussion\n  http://bioperl.org/wiki/Mailing_lists  - About the mailing lists\n\n=head2 Support \n\nPlease direct usage questions or support issues to the mailing list:\n\nI<bioperl-l@bioperl.org>\n\nrather than to the module maintainer directly. Many experienced and \nreponsive experts will be able look at the problem and quickly \naddress it. Please include a thorough description of the problem \nwith code and data examples if at all possible.\n\n=head2 Reporting Bugs\n\nReport bugs to the Bioperl bug tracking system to help us keep track\nthe bugs and their resolution.  Bug reports can be submitted via the\nweb:\n\n  https://github.com/bioperl/bioperl-live/issues\n\n=head1 AUTHOR - Stefan Kirov\n\nEmail skirov@utk.edu\n\n=head1 APPENDIX", "func_src_after": "#---------------------------------------------------------\n\n=head1 NAME\n\nBio::Matrix::PSM::IO::meme - PSM meme parser implementation\n\n=head1 SYNOPSIS\n\nSee Bio::Matrix::PSM::IO for detailed documentation on how to use PSM parsers\n\n=head1 DESCRIPTION\n\nParser for meme.\n\n=head1 FEEDBACK\n\n=head2 Mailing Lists\n\nUser feedback is an integral part of the evolution of this\nand other Bioperl modules. Send your comments and suggestions preferably\n to one of the Bioperl mailing lists.\nYour participation is much appreciated.\n\n  <EMAIL>                  - General discussion\n  http://bioperl.org/wiki/Mailing_lists  - About the mailing lists\n\n=head2 Support \n\nPlease direct usage questions or support issues to the mailing list:\n\nI<<EMAIL>>\n\nrather than to the module maintainer directly. Many experienced and \nreponsive experts will be able look at the problem and quickly \naddress it. Please include a thorough description of the problem \nwith code and data examples if at all possible.\n\n=head2 Reporting Bugs\n\nReport bugs to the Bioperl bug tracking system to help us keep track\nthe bugs and their resolution.  Bug reports can be submitted via the\nweb:\n\n  https://github.com/bioperl/bioperl-live/issues\n\n=head1 AUTHOR - Stefan Kirov\n\nEmail <EMAIL>\n\n=head1 APPENDIX", "line_changes": {"deleted": [{"line_no": 24, "char_start": 518, "char_end": 580, "line": "  bioperl-l@bioperl.org                  - General discussion\n"}, {"line_no": 32, "char_start": 721, "char_end": 746, "line": "I<bioperl-l@bioperl.org>\n"}, {"line_no": 50, "char_start": 1228, "char_end": 1249, "line": "Email skirov@utk.edu\n"}], "added": [{"line_no": 25, "char_start": 518, "char_end": 566, "line": "  <EMAIL>                  - General discussion\n"}, {"line_no": 33, "char_start": 721, "char_end": 732, "line": "I<<EMAIL>>\n"}, {"line_no": 51, "char_start": 1228, "char_end": 1242, "line": "Email <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 518, "char_end": 580, "chars": "  bioperl-l@bioperl.org                  - General discussion\n"}, {"char_start": 721, "char_end": 746, "chars": "I<bioperl-l@bioperl.org>\n"}, {"char_start": 1228, "char_end": 1249, "chars": "Email skirov@utk.edu\n"}], "added": [{"char_start": 518, "char_end": 566, "chars": "  <EMAIL>                  - General discussion\n"}, {"char_start": 721, "char_end": 732, "chars": "I<<EMAIL>>\n"}, {"char_start": 1228, "char_end": 1242, "chars": "Email <EMAIL>\n"}]}}
{"func_name": 6778, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package Sub::Name;\n\n=head1 NAME\n\nSub::Name - (re)name a sub\n\n=head1 SYNOPSIS\n\n    use Sub::Name;\n\n    subname $name, $subref;\n\n    $subref = subname foo => sub { ... };\n\n=head1 DESCRIPTION\n\nThis module has only one function, which is also exported by default:\n\n=head2 subname NAME, CODEREF\n\nAssigns a new name to referenced sub.  If package specification is omitted in \nthe name, then the current package is used.  The return value is the sub.\n\nThe name is only used for informative routines (caller, Carp, etc).  You won't \nbe able to actually invoke the sub by the given name.  To allow that, you need \nto do glob-assignment yourself.\n\nNote that for anonymous closures (subs that reference lexicals declared outside \nthe sub itself) you can name each instance of the closure differently, which \ncan be very useful for debugging.\n\n=head1 AUTHOR\n\nMatthijs van Duin <xmath@cpan.org>\n\nCopyright (C) 2004, 2008  Matthijs van Duin.  All rights reserved.\nThis program is free software; you can redistribute it and/or modify \nit under the same terms as Perl itself.\n\n=cut\n\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour $VERSION = '0.05';\n\nuse base 'Exporter';\nuse base 'DynaLoader';", "func_src_after": "package Sub::Name;\n\n=head1 NAME\n\nSub::Name - (re)name a sub\n\n=head1 SYNOPSIS\n\n    use Sub::Name;\n\n    subname $name, $subref;\n\n    $subref = subname foo => sub { ... };\n\n=head1 DESCRIPTION\n\nThis module has only one function, which is also exported by default:\n\n=head2 subname NAME, CODEREF\n\nAssigns a new name to referenced sub.  If package specification is omitted in \nthe name, then the current package is used.  The return value is the sub.\n\nThe name is only used for informative routines (caller, Carp, etc).  You won't \nbe able to actually invoke the sub by the given name.  To allow that, you need \nto do glob-assignment yourself.\n\nNote that for anonymous closures (subs that reference lexicals declared outside \nthe sub itself) you can name each instance of the closure differently, which \ncan be very useful for debugging.\n\n=head1 AUTHOR\n\nMatthijs van Duin <<EMAIL>>\n\nCopyright (C) 2004, 2008  Matthijs van Duin.  All rights reserved.\nThis program is free software; you can redistribute it and/or modify \nit under the same terms as Perl itself.\n\n=cut\n\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour $VERSION = '0.05';\n\nuse base 'Exporter';\nuse base 'DynaLoader';", "line_changes": {"deleted": [{"line_no": 34, "char_start": 847, "char_end": 882, "line": "Matthijs van Duin <xmath@cpan.org>\n"}], "added": [{"line_no": 35, "char_start": 847, "char_end": 875, "line": "Matthijs van Duin <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 847, "char_end": 882, "chars": "Matthijs van Duin <xmath@cpan.org>\n"}], "added": [{"char_start": 847, "char_end": 875, "chars": "Matthijs van Duin <<EMAIL>>\n"}]}}
{"func_name": 6792, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "use strict;\nuse vars qw($VERSION %IRSSI);\n\nuse Irssi;\n\n#########################################################################################################################################\n#If there are a lot of people breaking a rule, you can have a custom kick message preformated.\t\t\t\t\t\t#\n#Use \"/rkm [Rule]\" to create a rule.\t\t\t\t\t\t\t\t\t\t\t\t\t#\n#Then, use \"/rk [user] [Spec]\" to kick someone. The kick message will be the spec (specific) followed by the rule.\t\t\t#\n#\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#\n#For example, if you had a rule against using adjectives, you would do \"/rkm = adjective\" which sets the rule to \"= adjective\"\t\t#\n#Then, if somebody says pretty, you do \"/rk nick pretty\" and it will kick nick with the reason \"pretty = adjective\"\t\t\t#\n#########################################################################################################################################\n\n$VERSION = '1.00';\n%IRSSI = (\n    authors\t=> 'fuzzybow',\n    contact\t=> 'fuzzybow@matte.one',\n    name\t=> 'RuleKick',\n    description\t=> 'Simple Modifiable Rule Kick',\n    license\t=> 'MIT',\n);\n\nmy $rule = \" \";\nmy $server = shift;\n\nIrssi::command_bind rkm => sub {\n    $rule = $_[0];\n};\n\nIrssi::command_bind rk => sub {\n    my ($user, $freas, $server, $channel) = @_;\n    my ($reas, $v) = split('Irssi::Irc', $freas, 2);\n    $server->command(\"kick $user $reas $rule\");\n};\n", "func_src_after": "use strict;\nuse vars qw($VERSION %IRSSI);\n\nuse Irssi;\n\n#########################################################################################################################################\n#If there are a lot of people breaking a rule, you can have a custom kick message preformated.\t\t\t\t\t\t#\n#Use \"/rkm [Rule]\" to create a rule.\t\t\t\t\t\t\t\t\t\t\t\t\t#\n#Then, use \"/rk [user] [Spec]\" to kick someone. The kick message will be the spec (specific) followed by the rule.\t\t\t#\n#\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#\n#For example, if you had a rule against using adjectives, you would do \"/rkm = adjective\" which sets the rule to \"= adjective\"\t\t#\n#Then, if somebody says pretty, you do \"/rk nick pretty\" and it will kick nick with the reason \"pretty = adjective\"\t\t\t#\n#########################################################################################################################################\n\n$VERSION = '1.00';\n%IRSSI = (\n    authors\t=> 'fuzzybow',\n    contact\t=> '<EMAIL>',\n    name\t=> 'RuleKick',\n    description\t=> 'Simple Modifiable Rule Kick',\n    license\t=> 'MIT',\n);\n\nmy $rule = \" \";\nmy $server = shift;\n\nIrssi::command_bind rkm => sub {\n    $rule = $_[0];\n};\n\nIrssi::command_bind rk => sub {\n    my ($user, $freas, $server, $channel) = @_;\n    my ($reas, $v) = split('Irssi::Irc', $freas, 2);\n    $server->command(\"kick $user $reas $rule\");\n};\n", "line_changes": {"deleted": [{"line_no": 18, "char_start": 931, "char_end": 968, "line": "    contact\t=> 'fuzzybow@matte.one',\n"}], "added": [{"line_no": 19, "char_start": 931, "char_end": 957, "line": "    contact\t=> '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 931, "char_end": 968, "chars": "    contact\t=> 'fuzzybow@matte.one',\n"}], "added": [{"char_start": 931, "char_end": 957, "chars": "    contact\t=> '<EMAIL>',\n"}]}}
{"func_name": 6805, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "=back\n\n=cut\n\nsub make_report {\n    my ($self, $resource, $dist, $result, @test_output) = @_;\n\n    if ( index($dist, 'Local-') == 0 ) {\n        print \"'Local::' namespace is reserved. Skipping resource '$resource'\\n\"\n          unless $self->quiet;\n        return;\n    }\n    return unless $self->parse_uri($resource);\n\n    my $author = $self->author;\n\n    my $cpanm_version = $self->{_cpanminus_version} || 'unknown cpanm version';\n    my $meta = $self->get_meta_for( $dist );\n    my %CTCC_args = (\n        author      => $self->author || '',\n        distname    => $dist,   # string like: Mason-Tidy-2.57\n        grade       => $result,\n        via         => \"App::cpanminus::reporter $App::cpanminus::reporter::VERSION ($cpanm_version)\",\n        test_output => join( '', @test_output ),\n        prereqs     => ($meta && ref $meta) ? $meta->{prereqs} : undef,\n    );\n    my $tdir = $self->get_report_dir();\n    croak \"Could not locate $tdir\" unless (-d $tdir);\n    my $report = (length $author)\n        ? File::Spec->catfile($tdir, join('.' => $self->author, $dist, 'log', 'json'))\n        : File::Spec->catfile($tdir, join('.' =>                $dist, 'log', 'json'));\n    open my $OUT, '>', $report or croak \"Unable to open $report for writing\";\n    say $OUT encode_json( {\n        %CTCC_args,\n        'distversion' => $self->distversion,\n        'dist'        => $self->distname,   # string like: Mason-Tidy\n    } );\n    close $OUT or croak \"Unable to close $report after writing\";\n\n    return;\n}\n\n\n=head1 BUGS AND SUPPORT\n\nPlease report any bugs by mail to C<bug-CPAN-cpanminus-reporter-RetainReports@rt.cpan.org>\nor through the web interface at L<http://rt.cpan.org>.\n\n=head1 AUTHOR\n", "func_src_after": "=back\n\n=cut\n\nsub make_report {\n    my ($self, $resource, $dist, $result, @test_output) = @_;\n\n    if ( index($dist, 'Local-') == 0 ) {\n        print \"'Local::' namespace is reserved. Skipping resource '$resource'\\n\"\n          unless $self->quiet;\n        return;\n    }\n    return unless $self->parse_uri($resource);\n\n    my $author = $self->author;\n\n    my $cpanm_version = $self->{_cpanminus_version} || 'unknown cpanm version';\n    my $meta = $self->get_meta_for( $dist );\n    my %CTCC_args = (\n        author      => $self->author || '',\n        distname    => $dist,   # string like: Mason-Tidy-2.57\n        grade       => $result,\n        via         => \"App::cpanminus::reporter $App::cpanminus::reporter::VERSION ($cpanm_version)\",\n        test_output => join( '', @test_output ),\n        prereqs     => ($meta && ref $meta) ? $meta->{prereqs} : undef,\n    );\n    my $tdir = $self->get_report_dir();\n    croak \"Could not locate $tdir\" unless (-d $tdir);\n    my $report = (length $author)\n        ? File::Spec->catfile($tdir, join('.' => $self->author, $dist, 'log', 'json'))\n        : File::Spec->catfile($tdir, join('.' =>                $dist, 'log', 'json'));\n    open my $OUT, '>', $report or croak \"Unable to open $report for writing\";\n    say $OUT encode_json( {\n        %CTCC_args,\n        'distversion' => $self->distversion,\n        'dist'        => $self->distname,   # string like: Mason-Tidy\n    } );\n    close $OUT or croak \"Unable to close $report after writing\";\n\n    return;\n}\n\n\n=head1 BUGS AND SUPPORT\n\nPlease report any bugs by mail to C<bug-CPAN-cpanminus-reporter-<EMAIL>>\nor through the web interface at L<http://rt.cpan.org>.\n\n=head1 AUTHOR\n", "line_changes": {"deleted": [{"line_no": 46, "char_start": 1527, "char_end": 1618, "line": "Please report any bugs by mail to C<bug-CPAN-cpanminus-reporter-RetainReports@rt.cpan.org>\n"}], "added": [{"line_no": 47, "char_start": 1527, "char_end": 1600, "line": "Please report any bugs by mail to C<bug-CPAN-cpanminus-reporter-<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 1527, "char_end": 1618, "chars": "Please report any bugs by mail to C<bug-CPAN-cpanminus-reporter-RetainReports@rt.cpan.org>\n"}], "added": [{"char_start": 1527, "char_end": 1600, "chars": "Please report any bugs by mail to C<bug-CPAN-cpanminus-reporter-<EMAIL>>\n"}]}}
{"func_name": 6821, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package Graphics::Color::Types;\n$Graphics::Color::Types::VERSION = '0.31';\nuse MooseX::Types -declare => [qw(\n    Number360OrLess NumberOneOrLess\n)];\n\nuse MooseX::Types::Moose qw(Num);\n\nsubtype Number360OrLess,\n    as Num,\n    where { $_ <= 360 && $_ >= 0 },\n    message { \"This number ($_) is not less than or equal to 360!\" };\n\nsubtype NumberOneOrLess,\n    as Num,\n    where { $_ <= 1 && $_ >= 0 },\n    message { \"This number ($_) is not less or equal to one!\" };\n\n1;\n\n__END__\n\n=pod\n\n=head1 NAME\n\nGraphics::Color::Types\n\n=head1 VERSION\n\nversion 0.31\n\n=head1 AUTHOR\n\nCory G Watson <gphat@cpan.org>\n\n=head1 COPYRIGHT AND LICENSE\n\nThis software is copyright (c) 2014 by Cold Hard Code, LLC.\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n=cut\n", "func_src_after": "package Graphics::Color::Types;\n$Graphics::Color::Types::VERSION = '0.31';\nuse MooseX::Types -declare => [qw(\n    Number360OrLess NumberOneOrLess\n)];\n\nuse MooseX::Types::Moose qw(Num);\n\nsubtype Number360OrLess,\n    as Num,\n    where { $_ <= 360 && $_ >= 0 },\n    message { \"This number ($_) is not less than or equal to 360!\" };\n\nsubtype NumberOneOrLess,\n    as Num,\n    where { $_ <= 1 && $_ >= 0 },\n    message { \"This number ($_) is not less or equal to one!\" };\n\n1;\n\n__END__\n\n=pod\n\n=head1 NAME\n\nGraphics::Color::Types\n\n=head1 VERSION\n\nversion 0.31\n\n=head1 AUTHOR\n\nCory G Watson <<EMAIL>>\n\n=head1 COPYRIGHT AND LICENSE\n\nThis software is copyright (c) 2014 by Cold Hard Code, LLC.\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n=cut\n", "line_changes": {"deleted": [{"line_no": 35, "char_start": 568, "char_end": 599, "line": "Cory G Watson <gphat@cpan.org>\n"}], "added": [{"line_no": 36, "char_start": 568, "char_end": 592, "line": "Cory G Watson <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 568, "char_end": 599, "chars": "Cory G Watson <gphat@cpan.org>\n"}], "added": [{"char_start": 568, "char_end": 592, "chars": "Cory G Watson <<EMAIL>>\n"}]}}
{"func_name": 6825, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        \"addSupporter: ledger_entity_id required\";\n\nmy $campbellId;\nlives_ok { $campbellId = $sp->addSupporter({ ledger_entity_id => \"Campbell-Peter\" }); }\n         \"addSupporter: add works for minimal acceptable settings\";\n\nok( (looks_like_number($campbellId) and $campbellId > 0),\n   \"addSupporter: add works for minimal acceptable settings\");\n\ndies_ok  { $sp->addSupporter({ public_ack => 1, ledger_entity_id => \"Whitman-Dick\" }) }\n         \"addSupporter: display_name required\";\n\nmy $drapperId;\nlives_ok { $drapperId = $sp->addSupporter({ display_name => \"Donald Drapper\",\n                               public_ack => 1, ledger_entity_id => \"Whitman-Dick\" }); }\n         \"addSupporter: public_ack set to true with a display_name given\";\n\nok( (looks_like_number($drapperId) and $drapperId > $campbellId),\n   \"addSupporter: add works with public_ack set to true and a display_name given\");\n\nmy $olsonId;\n\nlives_ok { $olsonId = $sp->addSupporter({ display_name => \"Peggy Olson\",\n                                          public_ack => 0, ledger_entity_id => \"Olson-Margaret\",\n                                          email_address => 'olson@example.net',\n                                          email_address_type => 'home' }); }\n         \"addSupporter: succeeds with email address\";\n\nok( (looks_like_number($olsonId) and $olsonId > $drapperId),\n   \"addSupporter: add succeeded with email address added.\");\n\nmy $val = $sp->dbh()->selectall_hashref(\"SELECT donor_id, email_address_id \" .\n                                        \"FROM donor_email_address_mapping  \" .\n                                        \"WHERE donor_id = \" . $sp->dbh->quote($olsonId, 'SQL_INTEGER'),\n                                        'donor_id');\n\nok((defined $val and defined $val->{$olsonId}{email_address_id} and $val->{$olsonId}{email_address_id} > 0),\n   \"addSupporter: email address mapping is created on addSupporter() w/ email address included\");\n\nmy $olsonFirstEmailId = $val->{$olsonId}{email_address_id};\n\nmy $sterlingId;\nlives_ok { $sterlingId = $sp->addSupporter({ display_name => \"Roger Sterling\",\n                                  ledger_entity_id => \"Sterling-Roger\",\n                                  email_address => 'sterlingjr@example.com',\n                                  email_address_type => 'home' }) }\n         \"addSupporter: succeeds with no public_ack setting specified...\";\n\nok( (looks_like_number($sterlingId) and $sterlingId > $olsonId),\n   \"addSupporter: ... and return value is sane.\");", "func_src_after": "        \"addSupporter: ledger_entity_id required\";\n\nmy $campbellId;\nlives_ok { $campbellId = $sp->addSupporter({ ledger_entity_id => \"Campbell-Peter\" }); }\n         \"addSupporter: add works for minimal acceptable settings\";\n\nok( (looks_like_number($campbellId) and $campbellId > 0),\n   \"addSupporter: add works for minimal acceptable settings\");\n\ndies_ok  { $sp->addSupporter({ public_ack => 1, ledger_entity_id => \"Whitman-Dick\" }) }\n         \"addSupporter: display_name required\";\n\nmy $drapperId;\nlives_ok { $drapperId = $sp->addSupporter({ display_name => \"Donald Drapper\",\n                               public_ack => 1, ledger_entity_id => \"Whitman-Dick\" }); }\n         \"addSupporter: public_ack set to true with a display_name given\";\n\nok( (looks_like_number($drapperId) and $drapperId > $campbellId),\n   \"addSupporter: add works with public_ack set to true and a display_name given\");\n\nmy $olsonId;\n\nlives_ok { $olsonId = $sp->addSupporter({ display_name => \"Peggy Olson\",\n                                          public_ack => 0, ledger_entity_id => \"Olson-Margaret\",\n                                          email_address => '<EMAIL>',\n                                          email_address_type => 'home' }); }\n         \"addSupporter: succeeds with email address\";\n\nok( (looks_like_number($olsonId) and $olsonId > $drapperId),\n   \"addSupporter: add succeeded with email address added.\");\n\nmy $val = $sp->dbh()->selectall_hashref(\"SELECT donor_id, email_address_id \" .\n                                        \"FROM donor_email_address_mapping  \" .\n                                        \"WHERE donor_id = \" . $sp->dbh->quote($olsonId, 'SQL_INTEGER'),\n                                        'donor_id');\n\nok((defined $val and defined $val->{$olsonId}{email_address_id} and $val->{$olsonId}{email_address_id} > 0),\n   \"addSupporter: email address mapping is created on addSupporter() w/ email address included\");\n\nmy $olsonFirstEmailId = $val->{$olsonId}{email_address_id};\n\nmy $sterlingId;\nlives_ok { $sterlingId = $sp->addSupporter({ display_name => \"Roger Sterling\",\n                                  ledger_entity_id => \"Sterling-Roger\",\n                                  email_address => '<EMAIL>',\n                                  email_address_type => 'home' }) }\n         \"addSupporter: succeeds with no public_ack setting specified...\";\n\nok( (looks_like_number($sterlingId) and $sterlingId > $olsonId),\n   \"addSupporter: ... and return value is sane.\");", "line_changes": {"deleted": [{"line_no": 25, "char_start": 1077, "char_end": 1157, "line": "                                          email_address => 'olson@example.net',\n"}, {"line_no": 46, "char_start": 2154, "char_end": 2231, "line": "                                  email_address => 'sterlingjr@example.com',\n"}], "added": [{"line_no": 26, "char_start": 1077, "char_end": 1147, "line": "                                          email_address => '<EMAIL>',\n"}, {"line_no": 47, "char_start": 2154, "char_end": 2216, "line": "                                  email_address => '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 1077, "char_end": 1157, "chars": "                                          email_address => 'olson@example.net',\n"}, {"char_start": 2154, "char_end": 2231, "chars": "                                  email_address => 'sterlingjr@example.com',\n"}], "added": [{"char_start": 1077, "char_end": 1147, "chars": "                                          email_address => '<EMAIL>',\n"}, {"char_start": 2154, "char_end": 2216, "chars": "                                  email_address => '<EMAIL>',\n"}]}}
{"func_name": 6860, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "[\"Ukiyoe\"] = \"LM:921/96%\",\n[\"Dankhealz\"] = \"RM:633/69%\",\n[\"Jung\"] = \"UB:317/36%EM:933/93%\",\n[\"Gnoll\"] = \"CM:52/1%\",\n[\"Slyce\"] = \"EM:888/88%\",\n[\"Stitchs\"] = \"EM:907/92%\",\n[\"Magebro\"] = \"UB:307/39%RM:619/68%\",\n[\"Worminfested\"] = \"LM:1000/98%\",\n[\"Maharg\"] = \"EB:573/88%EM:744/90%\",\n[\"Selador\"] = \"EM:866/88%\",\n[\"Monteige\"] = \"RM:577/57%\",\n[\"Knaisguy\"] = \"CB:43/3%LM:969/98%\",\n[\"Salacious\"] = \"EB:652/82%LM:950/95%\",\n[\"Trenbologna\"] = \"CM:66/10%\",\n[\"Popz\"] = \"UM:21/27%\",\n[\"Brewek\"] = \"EM:872/91%\",\n[\"Glondo\"] = \"EM:930/94%\",\n[\"Husk\"] = \"LM:937/95%\",\n[\"Magdalena\"] = \"EM:695/82%\",\n[\"Nofep\"] = \"EM:865/85%\",\n[\"Salgat\"] = \"RB:467/64%RM:597/66%\",\n[\"Crihten\"] = \"SM:1032/99%\",\n[\"Pukefeast\"] = \"RM:721/68%\",\n[\"Secretsauce\"] = \"RB:482/67%EM:806/86%\",\n[\"Squizzler\"] = \"LM:944/95%\",\n[\"Lanparty\"] = \"RB:411/53%EM:831/86%\",\n[\"Yababa\"] = \"CM:52/1%\",\n[\"Daves\"] = \"CM:61/9%\",\n[\"Sternos\"] = \"EM:858/89%\",\n[\"Dxm\"] = \"EB:670/87%LM:995/98%\",\n[\"Solrac\"] = \"EB:646/82%LM:957/96%\",\n[\"Bezer\"] = \"EM:784/83%\",\n[\"Adox\"] = \"UM:406/41%\",\n[\"Krethuul\"] = \"CB:80/9%RM:644/58%\",\n[\"Taargus\"] = \"CM:77/6%\",\n[\"Tzuyu\"] = \"EM:594/82%\",\n[\"Acrimon\"] = \"EM:793/76%\",\n[\"Billskie\"] = \"LM:926/96%\",\n[\"Aub\"] = \"LM:952/96%\",\n[\"Soulstring\"] = \"EM:911/92%\",\n[\"Honeyb\"] = \"LM:932/96%\",\n[\"Shocko\"] = \"RB:367/50%EM:827/86%\",\n[\"Ghostfcekila\"] = \"UT:98/38%RB:443/59%RM:687/71%\",\n[\"Droopie\"] = \"RM:651/61%\",\n[\"Casmaster\"] = \"RM:287/67%\",\n[\"Mercurwedge\"] = \"RM:655/64%\",\n[\"Zahzee\"] = \"EM:815/83%\",\n[\"Cbot\"] = \"RM:451/52%\",\n[\"Smacktastic\"] = \"LM:974/97%\",\n[\"Yrgg\"] = \"RB:488/62%LM:989/98%\",", "func_src_after": "[\"Ukiyoe\"] = \"LM:921/96%\",\n[\"Dankhealz\"] = \"RM:633/69%\",\n[\"Jung\"] = \"UB:317/36%EM:933/93%\",\n[\"Gnoll\"] = \"CM:52/1%\",\n[\"Slyce\"] = \"EM:888/88%\",\n[\"Stitchs\"] = \"EM:907/92%\",\n[\"Magebro\"] = \"UB:307/39%RM:619/68%\",\n[\"Worminfested\"] = \"LM:1000/98%\",\n[\"Maharg\"] = \"EB:573/88%EM:744/90%\",\n[\"Selador\"] = \"EM:866/88%\",\n[\"Monteige\"] = \"RM:577/57%\",\n[\"Knaisguy\"] = \"CB:43/3%LM:969/98%\",\n[\"Salacious\"] = \"EB:652/82%LM:950/95%\",\n[\"Trenbologna\"] = \"CM:66/10%\",\n[\"Popz\"] = \"UM:21/27%\",\n[\"Brewek\"] = \"EM:872/91%\",\n[\"Glondo\"] = \"EM:930/94%\",\n[\"Husk\"] = \"LM:937/95%\",\n[\"Magdalena\"] = \"EM:695/82%\",\n[\"Nofep\"] = \"EM:865/85%\",\n[\"Salgat\"] = \"RB:467/64%RM:597/66%\",\n[\"Crihten\"] = \"SM:1032/99%\",\n[\"Pukefeast\"] = \"RM:721/68%\",\n[\"Secretsauce\"] = \"RB:482/67%EM:806/86%\",\n[\"Squizzler\"] = \"LM:944/95%\",\n[\"Lanparty\"] = \"RB:411/53%EM:831/86%\",\n[\"Yababa\"] = \"CM:52/1%\",\n[\"Daves\"] = \"CM:61/9%\",\n[\"Sternos\"] = \"EM:858/89%\",\n[\"Dxm\"] = \"EB:670/87%LM:995/98%\",\n[\"Solrac\"] = \"EB:646/82%LM:957/96%\",\n[\"Bezer\"] = \"EM:784/83%\",\n[\"Adox\"] = \"UM:406/41%\",\n[\"Krethuul\"] = \"CB:80/9%RM:644/58%\",\n[\"Taargus\"] = \"CM:77/6%\",\n[\"Tzuyu\"] = \"EM:594/82%\",\n[\"Acrimon\"] = \"EM:793/76%\",\n[\"Billskie\"] = \"LM:926/96%\",\n[\"Aub\"] = \"LM:952/96%\",\n[\"Soulstring\"] = \"EM:911/92%\",\n[\"Honeyb\"] = \"LM:932/96%\",\n[\"Shocko\"] = \"RB:367/50%EM:827/86%\",\n[\"Ghostfcekila\"] = \"UT:98/38%RB:443/59%RM:687/71%\",\n[\"Droopie\"] = \"RM:651/61%\",\n[\"Casmaster\"] = \"RM:287/67%\",\n[\"Mercurwedge\"] = \"RM:655/64%\",\n[\"Zahzee\"] = \"EM:815/83%\",\n[\"Cbot\"] = \"RM:451/52%\",\n[\"Smacktastic\"] = \"LM:974/97%\",\n[\"Yrgg\"] = \"RB:488/62%LM:989/98%\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6866, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "-- |   Accounts\n-- |     Patrik Karlsson:secret - Valid credentials\n-- |   Statistics\n-- |_    Perfomed 60023 guesses in 467 seconds, average tps: 138\n--\n-- @args http-form-brute.path identifies the page that contains the form\n--       (default: \"/\"). The script analyses the content of this page to\n--       determine the form destination, method, and fields. If argument\n--       passvar is specified then the form detection is not performed and\n--       the path argument is instead used as the form submission destination\n--       (the form action). Use the other arguments to define the rest of\n--       the form manually as necessary.\n-- @args http-form-brute.method sets the HTTP method (default: \"POST\")\n-- @args http-form-brute.hostname sets the host header in case of virtual\n--       hosting\n-- @args http-form-brute.uservar (optional) sets the form field name that\n--       holds the username used to authenticate.\n-- @args http-form-brute.passvar sets the http-variable name that holds the\n--       password used to authenticate. If this argument is set then the form\n--       detection is not performed. Use the other arguments to define\n--       the form manually.\n-- @args http-form-brute.onsuccess (optional) sets the message/pattern\n--       to expect on successful authentication\n-- @args http-form-brute.onfailure (optional) sets the message/pattern\n--       to expect on unsuccessful authentication\n\n--\n-- Version 0.5\n-- Created 07/30/2010 - v0.1 - created by Patrik Karlsson <patrik@cqure.net>\n-- Revised 05/23/2011 - v0.2 - changed so that uservar is optional\n-- Revised 06/05/2011 - v0.3 - major re-write, added onsuccess, onfailure and\n--                             support for redirects\n-- Revised 08/12/2014 - v0.4 - added support for GET method\n-- Revised 08/14/2014 - v0.5 - major revision\n--                           - added support for submitting to a different URL\n--                             than where the form resides\n--                           - added detection of form action method\n--                           - improved effectiveness of detection logic and\n--                             patterns\n--                           - added debug messages for inspection of detection\n--                             results\n--                           - added retry capability\n--\n\nauthor = \"Patrik Karlsson, nnposter\"\nlicense = \"Same as Nmap--See http://nmap.org/book/man-legal.html\"\ncategories = {\"intrusive\", \"brute\"}\n\n\nportrule = shortport.port_or_service( {80, 443}, {\"http\", \"https\"}, \"tcp\", \"open\")", "func_src_after": "-- |   Accounts\n-- |     Patrik Karlsson:secret - Valid credentials\n-- |   Statistics\n-- |_    Perfomed 60023 guesses in 467 seconds, average tps: 138\n--\n-- @args http-form-brute.path identifies the page that contains the form\n--       (default: \"/\"). The script analyses the content of this page to\n--       determine the form destination, method, and fields. If argument\n--       passvar is specified then the form detection is not performed and\n--       the path argument is instead used as the form submission destination\n--       (the form action). Use the other arguments to define the rest of\n--       the form manually as necessary.\n-- @args http-form-brute.method sets the HTTP method (default: \"POST\")\n-- @args http-form-brute.hostname sets the host header in case of virtual\n--       hosting\n-- @args http-form-brute.uservar (optional) sets the form field name that\n--       holds the username used to authenticate.\n-- @args http-form-brute.passvar sets the http-variable name that holds the\n--       password used to authenticate. If this argument is set then the form\n--       detection is not performed. Use the other arguments to define\n--       the form manually.\n-- @args http-form-brute.onsuccess (optional) sets the message/pattern\n--       to expect on successful authentication\n-- @args http-form-brute.onfailure (optional) sets the message/pattern\n--       to expect on unsuccessful authentication\n\n--\n-- Version 0.5\n-- Created 07/30/2010 - v0.1 - created by Patrik Karlsson <<EMAIL>>\n-- Revised 05/23/2011 - v0.2 - changed so that uservar is optional\n-- Revised 06/05/2011 - v0.3 - major re-write, added onsuccess, onfailure and\n--                             support for redirects\n-- Revised 08/12/2014 - v0.4 - added support for GET method\n-- Revised 08/14/2014 - v0.5 - major revision\n--                           - added support for submitting to a different URL\n--                             than where the form resides\n--                           - added detection of form action method\n--                           - improved effectiveness of detection logic and\n--                             patterns\n--                           - added debug messages for inspection of detection\n--                             results\n--                           - added retry capability\n--\n\nauthor = \"Patrik Karlsson, nnposter\"\nlicense = \"Same as Nmap--See http://nmap.org/book/man-legal.html\"\ncategories = {\"intrusive\", \"brute\"}\n\n\nportrule = shortport.port_or_service( {80, 443}, {\"http\", \"https\"}, \"tcp\", \"open\")", "line_changes": {"deleted": [{"line_no": 29, "char_start": 1439, "char_end": 1516, "line": "-- Created 07/30/2010 - v0.1 - created by Patrik Karlsson <patrik@cqure.net>\n"}], "added": [{"line_no": 30, "char_start": 1439, "char_end": 1507, "line": "-- Created 07/30/2010 - v0.1 - created by Patrik Karlsson <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 1439, "char_end": 1516, "chars": "-- Created 07/30/2010 - v0.1 - created by Patrik Karlsson <patrik@cqure.net>\n"}], "added": [{"char_start": 1439, "char_end": 1507, "chars": "-- Created 07/30/2010 - v0.1 - created by Patrik Karlsson <<EMAIL>>\n"}]}}
{"func_name": 6876, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "local helpers = require \"spec.helpers\"\nlocal cjson = require \"cjson\"\nlocal client = require \"resty.websocket.client\"\n\nlocal PLUGIN_NAME = \"connections-quota\"\nlocal auth_key    = \"kong\"\nlocal auth_key2   = \"godzilla\"\nlocal redis_host  = helpers.redis_host\nlocal redis_port  = 6379\nlocal strategy    = \"postgres\"\n\ndescribe(\"Websockets [#\" .. strategy .. \"]\", function()\n  local proxy_client\n\n  lazy_setup(function()\n    local bp = helpers.get_db_utils(strategy, {\n      \"routes\",\n      \"services\",\n      \"plugins\",\n      \"consumers\",\n      \"keyauth_credentials\",\n    }, { PLUGIN_NAME })\n\n    local service = bp.services:insert {\n      name = \"ws\",\n      path = \"/ws\",\n    }\n\n    bp.routes:insert {\n      protocols   = { \"http\" },\n      paths       = { \"/up-ws\" },\n      service     = service,\n      strip_path  = true,\n    }\n\n    local consumer = bp.consumers:insert {\n      username = \"bob\"\n    }\n\n    bp.keyauth_credentials:insert {\n      key      = auth_key,\n      consumer = { id = consumer.id },\n    }\n\n    local consumer2 = bp.consumers:insert {\n      username = \"go\"\n    }\n\n    bp.keyauth_credentials:insert {\n      key      = auth_key2,", "func_src_after": "local helpers = require \"spec.helpers\"\nlocal cjson = require \"cjson\"\nlocal client = require \"resty.websocket.client\"\n\nlocal PLUGIN_NAME = \"connections-quota\"\nlocal auth_key    = \"kong\"\nlocal auth_key2   = \"godzilla\"\nlocal redis_host  = helpers.redis_host\nlocal redis_port  = 6379\nlocal strategy    = \"postgres\"\n\ndescribe(\"Websockets [#\" .. strategy .. \"]\", function()\n  local proxy_client\n\n  lazy_setup(function()\n    local bp = helpers.get_db_utils(strategy, {\n      \"routes\",\n      \"services\",\n      \"plugins\",\n      \"consumers\",\n      \"keyauth_credentials\",\n    }, { PLUGIN_NAME })\n\n    local service = bp.services:insert {\n      name = \"ws\",\n      path = \"/ws\",\n    }\n\n    bp.routes:insert {\n      protocols   = { \"http\" },\n      paths       = { \"/up-ws\" },\n      service     = service,\n      strip_path  = true,\n    }\n\n    local consumer = bp.consumers:insert {\n      username = \"bob\"\n    }\n\n    bp.keyauth_credentials:insert {\n      key      = auth_key,\n      consumer = { id = consumer.id },\n    }\n\n    local consumer2 = bp.consumers:insert {\n      username = \"go\"\n    }\n\n    bp.keyauth_credentials:insert {\n      key      = auth_key2,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 6910, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "--[[\n  MailSlurp API\n \n  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository\n \n  The version of the OpenAPI document: 6.5.2\n  Contact: contact@mailslurp.dev\n  Generated by: https://openapi-generator.tech\n]]\n\n--[[\nUnit tests for maislurp-client-lua.api.template_controller_api\nAutomatically generated by openapi-generator (https://openapi-generator.tech)\nPlease update as you see appropriate\n]]\ndescribe(\"template_controller_api\", function()\n  local maislurp-client-lua_template_controller_api = require \"maislurp-client-lua.api.template_controller_api\"\n  -- unit tests for create_template\n  describe(\"create_template test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for delete_template\n  describe(\"delete_template test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for get_all_templates\n  describe(\"get_all_templates test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for get_template\n  describe(\"get_template test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for get_templates\n  describe(\"get_templates test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)", "func_src_after": "--[[\n  MailSlurp API\n \n  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository\n \n  The version of the OpenAPI document: 6.5.2\n  Contact: <EMAIL>\n  Generated by: https://openapi-generator.tech\n]]\n\n--[[\nUnit tests for maislurp-client-lua.api.template_controller_api\nAutomatically generated by openapi-generator (https://openapi-generator.tech)\nPlease update as you see appropriate\n]]\ndescribe(\"template_controller_api\", function()\n  local maislurp-client-lua_template_controller_api = require \"maislurp-client-lua.api.template_controller_api\"\n  -- unit tests for create_template\n  describe(\"create_template test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for delete_template\n  describe(\"delete_template test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for get_all_templates\n  describe(\"get_all_templates test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for get_template\n  describe(\"get_template test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)\n  end)\n\n  -- unit tests for get_templates\n  describe(\"get_templates test\", function()\n    it(\"should work\", function()\n      -- TODO assertion here: http://olivinelabs.com/busted/#asserts\n    end)", "line_changes": {"deleted": [{"line_no": 7, "char_start": 542, "char_end": 575, "line": "  Contact: contact@mailslurp.dev\n"}], "added": [{"line_no": 8, "char_start": 542, "char_end": 561, "line": "  Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 542, "char_end": 575, "chars": "  Contact: contact@mailslurp.dev\n"}], "added": [{"char_start": 542, "char_end": 561, "chars": "  Contact: <EMAIL>\n"}]}}
{"func_name": 6937, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t\t[Output]   0x0020:   0000 0000 0001 fe80 0000 0000 0000 0000 \n\t\t\t\t[Output]   0x0030:   0000 0000 1236 0400 0401 0008 0000 \n\t\t\t\t[Output] \n\t\t\t\t[Output] 0.10011 19072\n\t\t\t\t[Output] 0.10002 18944\n\t\t\t\t[Output] 0.10002 18944\n\t\t\t\t[Output] 0.10002 18944\n\t\t]]--\n\t\t\n\t\tlocal type = proc:waitFor(\"INFO: Detected an IPv(%d) address.\")\n\t\tassert.are.same(6, tonumber(type))\n\t\t\n\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1234\", str)\n\t\t\n\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1235\", str)\n\t\t\n\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1236\", str)\n\t\t\n\t\t-- ignore first measurement\n\t\tproc:waitFor(\"0%.(%S+) (%S+)\")\n\t\tproc:waitFor(\"0%.(%S+) (%S+)\")\n\n\t\tlocal ts1, rate1 = proc:waitFor(\"(%S+) (%S+)\")\n\t\tlocal ts2, rate2 = proc:waitFor(\"(%S+) (%S+)\")\n\t\tts1, ts2 = tonumber(ts1), tonumber(ts2)\n\t\trate1, rate2 = tonumber(rate1), tonumber(rate2)\n\t\tassert.rel_range(ts1, 0.1, 5)\n\t\tassert.rel_range(rate1, 19000, 5)\n\t\tassert.rel_range(ts2, 0.1, 5)\n\t\tassert.rel_range(rate2, 19000, 5)\n\n\t\tproc:kill()\n\tend)\n\nend)\n\n\n", "func_src_after": "\t\t\t\t[Output]   0x0020:   0000 0000 0001 fe80 0000 0000 0000 0000 \n\t\t\t\t[Output]   0x0030:   0000 0000 1236 0400 0401 0008 0000 \n\t\t\t\t[Output] \n\t\t\t\t[Output] 0.10011 19072\n\t\t\t\t[Output] 0.10002 18944\n\t\t\t\t[Output] 0.10002 18944\n\t\t\t\t[Output] 0.10002 18944\n\t\t]]--\n\t\t\n\t\tlocal type = proc:waitFor(\"INFO: Detected an IPv(%d) address.\")\n\t\tassert.are.same(6, tonumber(type))\n\t\t\n\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n\t\tassert.are.same(\"<IP-Address>\", str)\n\t\t\n\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n\t\tassert.are.same(\"<IP-Address>\", str)\n\t\t\n\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n\t\tassert.are.same(\"<IP-Address>\", str)\n\t\t\n\t\t-- ignore first measurement\n\t\tproc:waitFor(\"0%.(%S+) (%S+)\")\n\t\tproc:waitFor(\"0%.(%S+) (%S+)\")\n\n\t\tlocal ts1, rate1 = proc:waitFor(\"(%S+) (%S+)\")\n\t\tlocal ts2, rate2 = proc:waitFor(\"(%S+) (%S+)\")\n\t\tts1, ts2 = tonumber(ts1), tonumber(ts2)\n\t\trate1, rate2 = tonumber(rate1), tonumber(rate2)\n\t\tassert.rel_range(ts1, 0.1, 5)\n\t\tassert.rel_range(rate1, 19000, 5)\n\t\tassert.rel_range(ts2, 0.1, 5)\n\t\tassert.rel_range(rate2, 19000, 5)\n\n\t\tproc:kill()\n\tend)\n\nend)\n\n\n", "line_changes": {"deleted": [{"line_no": 13, "char_start": 365, "char_end": 494, "line": "\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"line_no": 15, "char_start": 467, "char_end": 533, "line": "\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1234\", str)\n"}, {"line_no": 18, "char_start": 509, "char_end": 638, "line": "\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"line_no": 20, "char_start": 611, "char_end": 677, "line": "\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1235\", str)\n"}, {"line_no": 23, "char_start": 653, "char_end": 782, "line": "\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"line_no": 25, "char_start": 755, "char_end": 821, "line": "\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1236\", str)\n"}], "added": [{"line_no": 14, "char_start": 365, "char_end": 467, "line": "\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"line_no": 16, "char_start": 467, "char_end": 506, "line": "\t\tassert.are.same(\"<IP-Address>\", str)\n"}, {"line_no": 19, "char_start": 509, "char_end": 611, "line": "\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"line_no": 21, "char_start": 611, "char_end": 650, "line": "\t\tassert.are.same(\"<IP-Address>\", str)\n"}, {"line_no": 24, "char_start": 653, "char_end": 755, "line": "\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"line_no": 26, "char_start": 755, "char_end": 794, "line": "\t\tassert.are.same(\"<IP-Address>\", str)\n"}]}, "char_changes": {"deleted": [{"char_start": 365, "char_end": 494, "chars": "\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"char_start": 467, "char_end": 533, "chars": "\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1234\", str)\n"}, {"char_start": 509, "char_end": 638, "chars": "\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"char_start": 611, "char_end": 677, "chars": "\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1235\", str)\n"}, {"char_start": 653, "char_end": 782, "chars": "\t\tlocal str = proc:waitFor(\"IP6 fd06:0000:0000:0000:0000:0000:0000:0001 > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"char_start": 755, "char_end": 821, "chars": "\t\tassert.are.same(\"fe80:0000:0000:0000:0000:0000:0000:1236\", str)\n"}], "added": [{"char_start": 365, "char_end": 467, "chars": "\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"char_start": 467, "char_end": 506, "chars": "\t\tassert.are.same(\"<IP-Address>\", str)\n"}, {"char_start": 509, "char_end": 611, "chars": "\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"char_start": 611, "char_end": 650, "chars": "\t\tassert.are.same(\"<IP-Address>\", str)\n"}, {"char_start": 653, "char_end": 755, "chars": "\t\tlocal str = proc:waitFor(\"IP6 <IP-Address> > (%S+) ver 6 tc 0 fl 0 len 8 next 0x11 %(UDP%) ttl 64\")\n"}, {"char_start": 755, "char_end": 794, "chars": "\t\tassert.are.same(\"<IP-Address>\", str)\n"}]}}
{"func_name": 6952, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      local conf, err = conf_loader(nil, {\n        database = \"mysql\"\n      })\n      assert.equal(\"database has an invalid value: 'mysql' (postgres, cassandra, off)\", err)\n      assert.is_nil(conf)\n\n      conf, err = conf_loader(nil, {\n        cassandra_consistency = \"FOUR\"\n      })\n      assert.equal(\"cassandra_consistency has an invalid value: 'FOUR'\"\n                 .. \" (ALL, EACH_QUORUM, QUORUM, LOCAL_QUORUM, ONE, TWO,\"\n                 .. \" THREE, LOCAL_ONE)\", err)\n      assert.is_nil(conf)\n    end)\n    it(\"enforces listen addresses format\", function()\n      local conf, err = conf_loader(nil, {\n        admin_listen = \"127.0.0.1\"\n      })\n      assert.is_nil(conf)\n      assert.equal(\"admin_listen must be of form: [off] | <ip>:<port> [ssl] [http2] [proxy_protocol] [transparent], [... next entry ...]\", err)\n\n      conf, err = conf_loader(nil, {\n        proxy_listen = \"127.0.0.1\"\n      })\n      assert.is_nil(conf)\n      assert.equal(\"proxy_listen must be of form: [off] | <ip>:<port> [ssl] [http2] [proxy_protocol] [transparent], [... next entry ...]\", err)\n    end)\n    it(\"errors when dns_resolver is not a list in ipv4/6[:port] format\", function()\n      local conf, err = conf_loader(nil, {\n        dns_resolver = \"1.2.3.4:53;4.3.2.1\" -- ; as separator\n      })\n      assert.equal(\"dns_resolver must be a comma separated list in the form of IPv4/6 or IPv4/6:port, got '1.2.3.4:53;4.3.2.1'\", err)\n      assert.is_nil(conf)\n\n      conf, err = conf_loader(nil, {\n        dns_resolver = \"8.8.8.8:53\"\n      })\n      assert.is_nil(err)\n      assert.is_table(conf)\n\n      conf, err = conf_loader(nil, {\n        dns_resolver = \"[::1]:53\"\n      })\n      assert.is_nil(err)\n      assert.is_table(conf)\n\n      conf, err = conf_loader(nil, {\n        dns_resolver = \"8.8.8.8,1.2.3.4:53,::1,[::1]:53\"\n      })\n      assert.is_nil(err)", "func_src_after": "      local conf, err = conf_loader(nil, {\n        database = \"mysql\"\n      })\n      assert.equal(\"database has an invalid value: 'mysql' (postgres, cassandra, off)\", err)\n      assert.is_nil(conf)\n\n      conf, err = conf_loader(nil, {\n        cassandra_consistency = \"FOUR\"\n      })\n      assert.equal(\"cassandra_consistency has an invalid value: 'FOUR'\"\n                 .. \" (ALL, EACH_QUORUM, QUORUM, LOCAL_QUORUM, ONE, TWO,\"\n                 .. \" THREE, LOCAL_ONE)\", err)\n      assert.is_nil(conf)\n    end)\n    it(\"enforces listen addresses format\", function()\n      local conf, err = conf_loader(nil, {\n        admin_listen = \"<IP-Address>\"\n      })\n      assert.is_nil(conf)\n      assert.equal(\"admin_listen must be of form: [off] | <ip>:<port> [ssl] [http2] [proxy_protocol] [transparent], [... next entry ...]\", err)\n\n      conf, err = conf_loader(nil, {\n        proxy_listen = \"<IP-Address>\"\n      })\n      assert.is_nil(conf)\n      assert.equal(\"proxy_listen must be of form: [off] | <ip>:<port> [ssl] [http2] [proxy_protocol] [transparent], [... next entry ...]\", err)\n    end)\n    it(\"errors when dns_resolver is not a list in ipv4/6[:port] format\", function()\n      local conf, err = conf_loader(nil, {\n        dns_resolver = \"<IP-Address>:53;<IP-Address>\" -- ; as separator\n      })\n      assert.equal(\"dns_resolver must be a comma separated list in the form of IPv4/6 or IPv4/6:port, got '<IP-Address>:53;<IP-Address>'\", err)\n      assert.is_nil(conf)\n\n      conf, err = conf_loader(nil, {\n        dns_resolver = \"<IP-Address>:53\"\n      })\n      assert.is_nil(err)\n      assert.is_table(conf)\n\n      conf, err = conf_loader(nil, {\n        dns_resolver = \"[<IP-Address>]:53\"\n      })\n      assert.is_nil(err)\n      assert.is_table(conf)\n\n      conf, err = conf_loader(nil, {\n        dns_resolver = \"<IP-Address>,<IP-Address>:53,<IP-Address>,[<IP-Address>]:53\"\n      })\n      assert.is_nil(err)", "line_changes": {"deleted": [{"line_no": 17, "char_start": 609, "char_end": 644, "line": "        admin_listen = \"127.0.0.1\"\n"}, {"line_no": 24, "char_start": 864, "char_end": 899, "line": "        proxy_listen = \"127.0.0.1\"\n"}, {"line_no": 32, "char_start": 1217, "char_end": 1279, "line": "        dns_resolver = \"1.2.3.4:53;4.3.2.1\" -- ; as separator\n"}, {"line_no": 35, "char_start": 1298, "char_end": 1432, "line": "      assert.equal(\"dns_resolver must be a comma separated list in the form of IPv4/6 or IPv4/6:port, got '1.2.3.4:53;4.3.2.1'\", err)\n"}, {"line_no": 40, "char_start": 1506, "char_end": 1542, "line": "        dns_resolver = \"8.8.8.8:53\"\n"}, {"line_no": 47, "char_start": 1647, "char_end": 1681, "line": "        dns_resolver = \"[::1]:53\"\n"}, {"line_no": 54, "char_start": 1790, "char_end": 1847, "line": "        dns_resolver = \"8.8.8.8,1.2.3.4:53,::1,[::1]:53\"\n"}], "added": [{"line_no": 18, "char_start": 609, "char_end": 647, "line": "        admin_listen = \"<IP-Address>\"\n"}, {"line_no": 25, "char_start": 864, "char_end": 902, "line": "        proxy_listen = \"<IP-Address>\"\n"}, {"line_no": 33, "char_start": 1217, "char_end": 1289, "line": "        dns_resolver = \"<IP-Address>:53;<IP-Address>\" -- ; as separator\n"}, {"line_no": 36, "char_start": 1298, "char_end": 1442, "line": "      assert.equal(\"dns_resolver must be a comma separated list in the form of IPv4/6 or IPv4/6:port, got '<IP-Address>:53;<IP-Address>'\", err)\n"}, {"line_no": 41, "char_start": 1506, "char_end": 1547, "line": "        dns_resolver = \"<IP-Address>:53\"\n"}, {"line_no": 48, "char_start": 1647, "char_end": 1690, "line": "        dns_resolver = \"[<IP-Address>]:53\"\n"}, {"line_no": 55, "char_start": 1790, "char_end": 1875, "line": "        dns_resolver = \"<IP-Address>,<IP-Address>:53,<IP-Address>,[<IP-Address>]:53\"\n"}]}, "char_changes": {"deleted": [{"char_start": 609, "char_end": 644, "chars": "        admin_listen = \"127.0.0.1\"\n"}, {"char_start": 864, "char_end": 899, "chars": "        proxy_listen = \"127.0.0.1\"\n"}, {"char_start": 1217, "char_end": 1279, "chars": "        dns_resolver = \"1.2.3.4:53;4.3.2.1\" -- ; as separator\n"}, {"char_start": 1298, "char_end": 1432, "chars": "      assert.equal(\"dns_resolver must be a comma separated list in the form of IPv4/6 or IPv4/6:port, got '1.2.3.4:53;4.3.2.1'\", err)\n"}, {"char_start": 1506, "char_end": 1542, "chars": "        dns_resolver = \"8.8.8.8:53\"\n"}, {"char_start": 1647, "char_end": 1681, "chars": "        dns_resolver = \"[::1]:53\"\n"}, {"char_start": 1790, "char_end": 1847, "chars": "        dns_resolver = \"8.8.8.8,1.2.3.4:53,::1,[::1]:53\"\n"}], "added": [{"char_start": 609, "char_end": 647, "chars": "        admin_listen = \"<IP-Address>\"\n"}, {"char_start": 864, "char_end": 902, "chars": "        proxy_listen = \"<IP-Address>\"\n"}, {"char_start": 1217, "char_end": 1289, "chars": "        dns_resolver = \"<IP-Address>:53;<IP-Address>\" -- ; as separator\n"}, {"char_start": 1298, "char_end": 1442, "chars": "      assert.equal(\"dns_resolver must be a comma separated list in the form of IPv4/6 or IPv4/6:port, got '<IP-Address>:53;<IP-Address>'\", err)\n"}, {"char_start": 1506, "char_end": 1547, "chars": "        dns_resolver = \"<IP-Address>:53\"\n"}, {"char_start": 1647, "char_end": 1690, "chars": "        dns_resolver = \"[<IP-Address>]:53\"\n"}, {"char_start": 1790, "char_end": 1875, "chars": "        dns_resolver = \"<IP-Address>,<IP-Address>:53,<IP-Address>,[<IP-Address>]:53\"\n"}]}}
{"func_name": 6960, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "module RoutingTableSpec where\n\nimport BEncode\nimport Control.Applicative (liftA2)\nimport Control.Monad\nimport qualified DHT.Distance as D\nimport DHT.Node (Node(..))\nimport DHT.NodeID (NodeID(..))\nimport DHT.Routing.Table\nimport qualified Data.ByteString as B\nimport qualified Data.ByteString.Char8 as C\nimport qualified Data.ByteString.Lazy as BL\nimport qualified Data.ByteString.Lazy.Char8 as BLC\nimport Data.List ((\\\\), sortOn)\nimport qualified Data.Map.Strict as M\nimport Network.Socket\nimport Prelude hiding (insert)\nimport System.Exit\nimport Test.HUnit hiding (Node)\nimport Test.Hspec\nimport Test.Hspec.QuickCheck\nimport Test.QuickCheck\n\nspec :: Spec\nspec = do\n  describe \"DHT Routing Table\" $ do\n    it \"insert and find a node\" $ do testInsertFindNode\n    it \"insert nodes into right buckets\" $ do testInsertNodesIntoBuckets\n    it \"should find the closest nodes\" $ do testFindClosestNodes1\n    it \"should find the closest nodes\" $ do testFindClosestNodes2\n    prop \"find closests nodes\" $ propFindClosestNodes\n\n-- Unit tests\nhostAddr = tupleToHostAddress (127, 0, 0, 1)\n\nhostPort = 1 :: PortNumber\n\nbuildNode nodeID = Node nodeID 42 (tupleToHostAddress (127, 0, 0, 1))\n\ntestInsertFindNode =\n  assertEqual \"insert and find a node in a routing table\" expected res\n  where\n    expected = Just node\n    res = findNode tableWithNode nodeID\n    tableWithNode = insert (emptyTable tableID) node\n    nodeID = NodeID $ C.pack \"12345678901234567890\"\n    node = Node nodeID hostPort hostAddr\n    tableID = NodeID $ C.pack \"abcdefghijklmnopqrst\"\n\ntestInsertNodesIntoBuckets =", "func_src_after": "module RoutingTableSpec where\n\nimport BEncode\nimport Control.Applicative (liftA2)\nimport Control.Monad\nimport qualified DHT.Distance as D\nimport DHT.Node (Node(..))\nimport DHT.NodeID (NodeID(..))\nimport DHT.Routing.Table\nimport qualified Data.ByteString as B\nimport qualified Data.ByteString.Char8 as C\nimport qualified Data.ByteString.Lazy as BL\nimport qualified Data.ByteString.Lazy.Char8 as BLC\nimport Data.List ((\\\\), sortOn)\nimport qualified Data.Map.Strict as M\nimport Network.Socket\nimport Prelude hiding (insert)\nimport System.Exit\nimport Test.HUnit hiding (Node)\nimport Test.Hspec\nimport Test.Hspec.QuickCheck\nimport Test.QuickCheck\n\nspec :: Spec\nspec = do\n  describe \"DHT Routing Table\" $ do\n    it \"insert and find a node\" $ do testInsertFindNode\n    it \"insert nodes into right buckets\" $ do testInsertNodesIntoBuckets\n    it \"should find the closest nodes\" $ do testFindClosestNodes1\n    it \"should find the closest nodes\" $ do testFindClosestNodes2\n    prop \"find closests nodes\" $ propFindClosestNodes\n\n-- Unit tests\nhostAddr = tupleToHostAddress (<IP-Address>)\n\nhostPort = 1 :: PortNumber\n\nbuildNode nodeID = Node nodeID 42 (tupleToHostAddress (<IP-Address>))\n\ntestInsertFindNode =\n  assertEqual \"insert and find a node in a routing table\" expected res\n  where\n    expected = Just node\n    res = findNode tableWithNode nodeID\n    tableWithNode = insert (emptyTable tableID) node\n    nodeID = NodeID $ C.pack \"12345678901234567890\"\n    node = Node nodeID hostPort hostAddr\n    tableID = NodeID $ C.pack \"abcdefghijklmnopqrst\"\n\ntestInsertNodesIntoBuckets =", "line_changes": {"deleted": [{"line_no": 34, "char_start": 1032, "char_end": 1077, "line": "hostAddr = tupleToHostAddress (127, 0, 0, 1)\n"}, {"line_no": 39, "char_start": 1106, "char_end": 1176, "line": "buildNode nodeID = Node nodeID 42 (tupleToHostAddress (127, 0, 0, 1))\n"}], "added": [{"line_no": 35, "char_start": 1032, "char_end": 1077, "line": "hostAddr = tupleToHostAddress (<IP-Address>)\n"}, {"line_no": 40, "char_start": 1106, "char_end": 1176, "line": "buildNode nodeID = Node nodeID 42 (tupleToHostAddress (<IP-Address>))\n"}]}, "char_changes": {"deleted": [{"char_start": 1032, "char_end": 1077, "chars": "hostAddr = tupleToHostAddress (127, 0, 0, 1)\n"}, {"char_start": 1106, "char_end": 1176, "chars": "buildNode nodeID = Node nodeID 42 (tupleToHostAddress (127, 0, 0, 1))\n"}], "added": [{"char_start": 1032, "char_end": 1077, "chars": "hostAddr = tupleToHostAddress (<IP-Address>)\n"}, {"char_start": 1106, "char_end": 1176, "chars": "buildNode nodeID = Node nodeID 42 (tupleToHostAddress (<IP-Address>))\n"}]}}
{"func_name": 6973, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{-# LANGUAGE AllowAmbiguousTypes    #-}\n{-# LANGUAGE ConstraintKinds        #-}\n{-# LANGUAGE DeriveGeneric          #-}\n{-# LANGUAGE DeriveTraversable      #-}\n{-# LANGUAGE EmptyCase              #-}\n{-# LANGUAGE FlexibleContexts       #-}\n{-# LANGUAGE FlexibleInstances      #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE GADTs                  #-}\n{-# LANGUAGE InstanceSigs           #-}\n{-# LANGUAGE KindSignatures         #-}\n{-# LANGUAGE LambdaCase             #-}\n{-# LANGUAGE MultiParamTypeClasses  #-}\n{-# LANGUAGE RankNTypes             #-}\n{-# LANGUAGE ScopedTypeVariables    #-}\n{-# LANGUAGE StandaloneDeriving     #-}\n{-# LANGUAGE TypeApplications       #-}\n{-# LANGUAGE TypeFamilyDependencies #-}\n{-# LANGUAGE TypeInType             #-}\n{-# LANGUAGE TypeOperators          #-}\n{-# LANGUAGE UndecidableInstances   #-}\n{-# LANGUAGE ViewPatterns           #-}\n\n-- |\n-- Module      : Data.Type.Functor.Product\n-- Copyright   : (c) Justin Le 2018\n-- License     : BSD3\n--\n-- Maintainer  : justin@jle.im\n-- Stability   : experimental\n-- Portability : non-portable\n--\n-- Generalized functor products based on lifted 'Foldable's.\n--\n-- For example, @'Rec' f '[a,b,c]@ from /vinyl/ contains an @f a@, @f b@,\n-- and @f c@.\n--\n-- @'PMaybe' f ('Just a)@ contains an @f a@ and @'PMaybe' f 'Nothing@\n-- contains nothing.\n--\n-- Also provide data types for \"indexing\" into each foldable.\n\nmodule Data.Type.Functor.Product (\n  -- * Classes\n    FProd(..), Shape\n  , PureProd(..), pureShape\n  , PureProdC(..), ReifyConstraintProd(..)\n  , AllConstrainedProd\n  -- ** Functions\n  , indexProd, mapProd, foldMapProd, hmap, zipProd", "func_src_after": "{-# LANGUAGE AllowAmbiguousTypes    #-}\n{-# LANGUAGE ConstraintKinds        #-}\n{-# LANGUAGE DeriveGeneric          #-}\n{-# LANGUAGE DeriveTraversable      #-}\n{-# LANGUAGE EmptyCase              #-}\n{-# LANGUAGE FlexibleContexts       #-}\n{-# LANGUAGE FlexibleInstances      #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE GADTs                  #-}\n{-# LANGUAGE InstanceSigs           #-}\n{-# LANGUAGE KindSignatures         #-}\n{-# LANGUAGE LambdaCase             #-}\n{-# LANGUAGE MultiParamTypeClasses  #-}\n{-# LANGUAGE RankNTypes             #-}\n{-# LANGUAGE ScopedTypeVariables    #-}\n{-# LANGUAGE StandaloneDeriving     #-}\n{-# LANGUAGE TypeApplications       #-}\n{-# LANGUAGE TypeFamilyDependencies #-}\n{-# LANGUAGE TypeInType             #-}\n{-# LANGUAGE TypeOperators          #-}\n{-# LANGUAGE UndecidableInstances   #-}\n{-# LANGUAGE ViewPatterns           #-}\n\n-- |\n-- Module      : Data.Type.Functor.Product\n-- Copyright   : (c) Justin Le 2018\n-- License     : BSD3\n--\n-- Maintainer  : <EMAIL>\n-- Stability   : experimental\n-- Portability : non-portable\n--\n-- Generalized functor products based on lifted 'Foldable's.\n--\n-- For example, @'Rec' f '[a,b,c]@ from /vinyl/ contains an @f a@, @f b@,\n-- and @f c@.\n--\n-- @'PMaybe' f ('Just a)@ contains an @f a@ and @'PMaybe' f 'Nothing@\n-- contains nothing.\n--\n-- Also provide data types for \"indexing\" into each foldable.\n\nmodule Data.Type.Functor.Product (\n  -- * Classes\n    FProd(..), Shape\n  , PureProd(..), pureShape\n  , PureProdC(..), ReifyConstraintProd(..)\n  , AllConstrainedProd\n  -- ** Functions\n  , indexProd, mapProd, foldMapProd, hmap, zipProd", "line_changes": {"deleted": [{"line_no": 29, "char_start": 990, "char_end": 1021, "line": "-- Maintainer  : justin@jle.im\n"}], "added": [{"line_no": 30, "char_start": 990, "char_end": 1015, "line": "-- Maintainer  : <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 990, "char_end": 1021, "chars": "-- Maintainer  : justin@jle.im\n"}], "added": [{"char_start": 990, "char_end": 1015, "chars": "-- Maintainer  : <EMAIL>\n"}]}}
{"func_name": 6997, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{-# LANGUAGE ExistentialQuantification #-}\n\n-----------------------------------------------------------------------------\n-- |\n-- Module      :  Control.Consensus\n-- Copyright   :  (c) Phil Hargett 2015\n-- License     :  MIT (see LICENSE file)\n--\n-- Maintainer  :  phil@haphazardhouse.net\n-- Stability   :  experimental\n-- Portability :  non-portable (uses STM)\n--\n--\n-----------------------------------------------------------------------------\n\nmodule Control.Consensus.Paxos (\n\n  leadBasicPaxosBallot,\n  followBasicPaxosBallot,\n\n  paxos,\n\n  onPrepare,\n  onPropose,\n  onAccept,\n\n  get,\n  set,\n  load,\n  save,\n  io,\n  safely,\n\n  mkMemberId,\n  newInstance,\n\n  isMajority,\n  chooseDecree,\n\n  module Control.Consensus.Paxos.Types\n\n) where\n\n-- local imports\nimport Control.Consensus.Paxos.Types\n\n-- external imports\n\nimport Control.Concurrent.STM\n", "func_src_after": "{-# LANGUAGE ExistentialQuantification #-}\n\n-----------------------------------------------------------------------------\n-- |\n-- Module      :  Control.Consensus\n-- Copyright   :  (c) Phil Hargett 2015\n-- License     :  MIT (see LICENSE file)\n--\n-- Maintainer  :  <EMAIL>\n-- Stability   :  experimental\n-- Portability :  non-portable (uses STM)\n--\n--\n-----------------------------------------------------------------------------\n\nmodule Control.Consensus.Paxos (\n\n  leadBasicPaxosBallot,\n  followBasicPaxosBallot,\n\n  paxos,\n\n  onPrepare,\n  onPropose,\n  onAccept,\n\n  get,\n  set,\n  load,\n  save,\n  io,\n  safely,\n\n  mkMemberId,\n  newInstance,\n\n  isMajority,\n  chooseDecree,\n\n  module Control.Consensus.Paxos.Types\n\n) where\n\n-- local imports\nimport Control.Consensus.Paxos.Types\n\n-- external imports\n\nimport Control.Concurrent.STM\n", "line_changes": {"deleted": [{"line_no": 9, "char_start": 247, "char_end": 289, "line": "-- Maintainer  :  phil@haphazardhouse.net\n"}], "added": [{"line_no": 10, "char_start": 247, "char_end": 273, "line": "-- Maintainer  :  <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 247, "char_end": 289, "chars": "-- Maintainer  :  phil@haphazardhouse.net\n"}], "added": [{"char_start": 247, "char_end": 273, "chars": "-- Maintainer  :  <EMAIL>\n"}]}}
{"func_name": 7022, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "-- |\n-- Module      : MonusWeightedSearch.Examples.Viterbi\n-- Copyright   : (c) Donnacha Oisín Kidney 2021\n-- Maintainer  : mail@doisinkidney.com\n-- Stability   : experimental\n-- Portability : non-portable\n--\n-- An implementation of the Viterbi algorithm using the 'Heap' monad.\n--\n-- This algorithm follows almost exactly the\n-- <https://en.wikipedia.org/wiki/Viterbi_algorithm#Example example given on Wikipedia>.\n--\n-- This actually implements the /lazy/ Viterbi algorithm, since the heap\n-- prioritises likely results.\n\nmodule MonusWeightedSearch.Examples.Viterbi where\n\nimport Control.Monad.Heap\nimport Data.Monus.Prob\nimport Control.Monad.Writer\nimport Data.Maybe\n\n-- $setup\n-- >>> import Data.Bifunctor (first)\n-- >>> :set -XTypeApplications\n\n-- | A heap of probabilities; similar to a probability monad, but prioritises\n-- likely outcomes.\ntype Viterbi = Heap Prob\n\n-- | The possible observations.\ndata Obs = Normal | Cold | Dizzy deriving (Show, Eq)\n\n-- | The possible hidden states.\ndata States = Healthy | Fever deriving (Show, Eq)\n\n-- | Then initial states (i.e. the estimated fever rate in the population).\nstart :: Viterbi States\nstart = fromList [(Healthy, 0.6), (Fever, 0.4)]\n\n-- | The transition function: how likely is a healthy person to be healthy on\n-- the following day? How likely is someone with a fever today to have one\n-- tomorrow?\ntrans :: States -> Viterbi States\ntrans Healthy = fromList [(Healthy, 0.7), (Fever, 0.3)]\ntrans Fever   = fromList [(Healthy, 0.4), (Fever, 0.6)]\n\n-- | Given the hidden state, what is the likelihood of the various observations.\nemit :: States -> Viterbi Obs\nemit Healthy = fromList [(Normal, 0.5), (Cold, 0.4), (Dizzy, 0.1)]", "func_src_after": "-- |\n-- Module      : MonusWeightedSearch.Examples.Viterbi\n-- Copyright   : (c) Donnacha Oisín Kidney 2021\n-- Maintainer  : <EMAIL>\n-- Stability   : experimental\n-- Portability : non-portable\n--\n-- An implementation of the Viterbi algorithm using the 'Heap' monad.\n--\n-- This algorithm follows almost exactly the\n-- <https://en.wikipedia.org/wiki/Viterbi_algorithm#Example example given on Wikipedia>.\n--\n-- This actually implements the /lazy/ Viterbi algorithm, since the heap\n-- prioritises likely results.\n\nmodule MonusWeightedSearch.Examples.Viterbi where\n\nimport Control.Monad.Heap\nimport Data.Monus.Prob\nimport Control.Monad.Writer\nimport Data.Maybe\n\n-- $setup\n-- >>> import Data.Bifunctor (first)\n-- >>> :set -XTypeApplications\n\n-- | A heap of probabilities; similar to a probability monad, but prioritises\n-- likely outcomes.\ntype Viterbi = Heap Prob\n\n-- | The possible observations.\ndata Obs = Normal | Cold | Dizzy deriving (Show, Eq)\n\n-- | The possible hidden states.\ndata States = Healthy | Fever deriving (Show, Eq)\n\n-- | Then initial states (i.e. the estimated fever rate in the population).\nstart :: Viterbi States\nstart = fromList [(Healthy, 0.6), (Fever, 0.4)]\n\n-- | The transition function: how likely is a healthy person to be healthy on\n-- the following day? How likely is someone with a fever today to have one\n-- tomorrow?\ntrans :: States -> Viterbi States\ntrans Healthy = fromList [(Healthy, 0.7), (Fever, 0.3)]\ntrans Fever   = fromList [(Healthy, 0.4), (Fever, 0.6)]\n\n-- | Given the hidden state, what is the likelihood of the various observations.\nemit :: States -> Viterbi Obs\nemit Healthy = fromList [(Normal, 0.5), (Cold, 0.4), (Dizzy, 0.1)]", "line_changes": {"deleted": [{"line_no": 4, "char_start": 107, "char_end": 146, "line": "-- Maintainer  : mail@doisinkidney.com\n"}], "added": [{"line_no": 5, "char_start": 107, "char_end": 132, "line": "-- Maintainer  : <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 107, "char_end": 146, "chars": "-- Maintainer  : mail@doisinkidney.com\n"}], "added": [{"char_start": 107, "char_end": 132, "chars": "-- Maintainer  : <EMAIL>\n"}]}}
{"func_name": 7048, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  takeMVar mv >>= \\case\n    Left e -> assertFailure $ msg ++ \": got failure result: \" ++ show e\n    Right v -> return v\n  where\n    handler e = assertFailure $ msg ++ \": exception thrown: \" ++ show e\n\nrunBlock :: PactQueue -> TestBlockDb -> TimeSpan Micros -> String -> IO PayloadWithOutputs\nrunBlock q bdb timeOffset msg = do\n  ph <- getParentTestBlockDb bdb cid\n  let blockTime = add timeOffset $ _bct $ _blockCreationTime ph\n  nb <- forSuccess (msg <> \": newblock\") $\n        newBlock noMiner (ParentHeader ph) q\n  forM_ (chainIds testVersion) $ \\c -> do\n    let o | c == cid = nb\n          | otherwise = emptyPayload\n    addTestBlockDb bdb (Nonce 0) (\\_ _ -> blockTime) c o\n  nextH <- getParentTestBlockDb bdb cid\n  forSuccess \"newBlockAndValidate: validate\" $\n       validateBlock nextH (payloadWithOutputsToPayloadData nb) q\n\n\nnewBlockAndValidate :: IO (IORef MemPoolAccess) -> IO (PactQueue,TestBlockDb) -> TestTree\nnewBlockAndValidate refIO reqIO = testCase \"newBlockAndValidate\" $ do\n  (q,bdb) <- reqIO\n  setOneShotMempool refIO goldenMemPool\n  void $ runBlock q bdb second \"newBlockAndValidate\"\n\n\ngetHistory :: IO (IORef MemPoolAccess) -> IO (PactQueue,TestBlockDb) -> TestTree\ngetHistory refIO reqIO = testCase \"getHistory\" $ do\n  (q,bdb) <- reqIO\n  setOneShotMempool refIO goldenMemPool\n  void $ runBlock q bdb second \"getHistory\"\n  h <- getParentTestBlockDb bdb cid\n  mv <- pactBlockTxHistory h (Domain' (UserTables \"coin_coin-table\")) q\n\n  (BlockTxHistory hist prevBals) <- forSuccess \"getHistory\" (return mv)\n  -- just check first one here\n  assertEqual \"check first entry of history\"\n    (Just [TxLog \"coin_coin-table\" \"sender00\"\n      (object\n       [ \"guard\" .= object\n         [ \"pred\" .= (\"keys-all\" :: T.Text)\n         , \"keys\" .=\n           [\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\" :: T.Text]\n         ]\n       , \"balance\" .= (Number 99999900.0)\n       ])])\n    (M.lookup 10 hist)\n  -- and transaction txids", "func_src_after": "  takeMVar mv >>= \\case\n    Left e -> assertFailure $ msg ++ \": got failure result: \" ++ show e\n    Right v -> return v\n  where\n    handler e = assertFailure $ msg ++ \": exception thrown: \" ++ show e\n\nrunBlock :: PactQueue -> TestBlockDb -> TimeSpan Micros -> String -> IO PayloadWithOutputs\nrunBlock q bdb timeOffset msg = do\n  ph <- getParentTestBlockDb bdb cid\n  let blockTime = add timeOffset $ _bct $ _blockCreationTime ph\n  nb <- forSuccess (msg <> \": newblock\") $\n        newBlock noMiner (ParentHeader ph) q\n  forM_ (chainIds testVersion) $ \\c -> do\n    let o | c == cid = nb\n          | otherwise = emptyPayload\n    addTestBlockDb bdb (Nonce 0) (\\_ _ -> blockTime) c o\n  nextH <- getParentTestBlockDb bdb cid\n  forSuccess \"newBlockAndValidate: validate\" $\n       validateBlock nextH (payloadWithOutputsToPayloadData nb) q\n\n\nnewBlockAndValidate :: IO (IORef MemPoolAccess) -> IO (PactQueue,TestBlockDb) -> TestTree\nnewBlockAndValidate refIO reqIO = testCase \"newBlockAndValidate\" $ do\n  (q,bdb) <- reqIO\n  setOneShotMempool refIO goldenMemPool\n  void $ runBlock q bdb second \"newBlockAndValidate\"\n\n\ngetHistory :: IO (IORef MemPoolAccess) -> IO (PactQueue,TestBlockDb) -> TestTree\ngetHistory refIO reqIO = testCase \"getHistory\" $ do\n  (q,bdb) <- reqIO\n  setOneShotMempool refIO goldenMemPool\n  void $ runBlock q bdb second \"getHistory\"\n  h <- getParentTestBlockDb bdb cid\n  mv <- pactBlockTxHistory h (Domain' (UserTables \"coin_coin-table\")) q\n\n  (BlockTxHistory hist prevBals) <- forSuccess \"getHistory\" (return mv)\n  -- just check first one here\n  assertEqual \"check first entry of history\"\n    (Just [TxLog \"coin_coin-table\" \"sender00\"\n      (object\n       [ \"guard\" .= object\n         [ \"pred\" .= (\"keys-all\" :: T.Text)\n         , \"keys\" .=\n           [\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\" :: T.Text]\n         ]\n       , \"balance\" .= (Number 99999900.0)\n       ])])\n    (M.lookup 10 hist)\n  -- and transaction txids", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7058, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "-- |\n-- Module      : AOC.Run.Interactive\n-- Copyright   : (c) Justin Le 2018\n-- License     : BSD3\n--\n-- Maintainer  : justin@jle.im\n-- Stability   : experimental\n-- Portability : non-portable\n--\n-- Versions of loaders and runners meant to be used in GHCI.\n--\n\nmodule AOC.Run.Interactive (\n  -- * Fetch and Run\n  -- ** Return Answers\n    execSolution\n  , execSolutionWith\n  , testSolution\n  , viewPrompt\n  , waitForPrompt\n  , submitSolution\n  -- ** No Answers\n  , execSolution_\n  , execSolutionWith_\n  , testSolution_\n  , viewPrompt_\n  , waitForPrompt_\n  , submitSolution_\n  -- * Load Inputs\n  , loadInput\n  , loadParseInput\n  , loadTests\n  , loadParseTests\n  -- * Util\n  , mkSpec\n  ) where\n\nimport           AOC.Challenge\nimport           AOC.Run\nimport           AOC.Run.Config\nimport           AOC.Run.Load\nimport           AOC.Solver\nimport           AOC.Util\nimport           Advent\nimport           Control.Monad.Except\nimport           Data.Bifunctor\nimport           Data.Text            (Text)\n\n-- | Run the solution indicated by the challenge spec on the official\n-- puzzle input.  Get answer as result.", "func_src_after": "-- |\n-- Module      : AOC.Run.Interactive\n-- Copyright   : (c) Justin Le 2018\n-- License     : BSD3\n--\n-- Maintainer  : <EMAIL>\n-- Stability   : experimental\n-- Portability : non-portable\n--\n-- Versions of loaders and runners meant to be used in GHCI.\n--\n\nmodule AOC.Run.Interactive (\n  -- * Fetch and Run\n  -- ** Return Answers\n    execSolution\n  , execSolutionWith\n  , testSolution\n  , viewPrompt\n  , waitForPrompt\n  , submitSolution\n  -- ** No Answers\n  , execSolution_\n  , execSolutionWith_\n  , testSolution_\n  , viewPrompt_\n  , waitForPrompt_\n  , submitSolution_\n  -- * Load Inputs\n  , loadInput\n  , loadParseInput\n  , loadTests\n  , loadParseTests\n  -- * Util\n  , mkSpec\n  ) where\n\nimport           AOC.Challenge\nimport           AOC.Run\nimport           AOC.Run.Config\nimport           AOC.Run.Load\nimport           AOC.Solver\nimport           AOC.Util\nimport           Advent\nimport           Control.Monad.Except\nimport           Data.Bifunctor\nimport           Data.Text            (Text)\n\n-- | Run the solution indicated by the challenge spec on the official\n-- puzzle input.  Get answer as result.", "line_changes": {"deleted": [{"line_no": 6, "char_start": 103, "char_end": 134, "line": "-- Maintainer  : justin@jle.im\n"}], "added": [{"line_no": 7, "char_start": 103, "char_end": 128, "line": "-- Maintainer  : <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 103, "char_end": 134, "chars": "-- Maintainer  : justin@jle.im\n"}], "added": [{"char_start": 103, "char_end": 128, "chars": "-- Maintainer  : <EMAIL>\n"}]}}
{"func_name": 7059, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{-# LANGUAGE CPP, ForeignFunctionInterface #-}\n-----------------------------------------------------------------------------\n-- |\n-- Module      :  Distribution.Client.Win32SelfUpgrade\n-- Copyright   :  (c) Duncan Coutts 2008\n-- License     :  BSD-like\n--\n-- Maintainer  :  cabal-devel@haskell.org\n-- Stability   :  provisional\n-- Portability :  portable\n--\n-- Support for self-upgrading executables on Windows platforms.\n-----------------------------------------------------------------------------\nmodule Distribution.Client.Win32SelfUpgrade (\n-- * Explanation\n--\n-- | Windows inherited a design choice from DOS that while initially innocuous\n-- has rather unfortunate consequences. It maintains the invariant that every\n-- open file has a corresponding name on disk. One positive consequence of this\n-- is that an executable can always find its own executable file. The downside\n-- is that a program cannot be deleted or upgraded while it is running without\n-- hideous workarounds. This module implements one such hideous workaround.\n--\n-- The basic idea is:\n--\n-- * Move our own exe file to a new name\n-- * Copy a new exe file to the previous name\n-- * Run the new exe file, passing our own PID and new path\n-- * Wait for the new process to start\n-- * Close the new exe file\n-- * Exit old process\n--\n-- Then in the new process:\n--\n-- * Inform the old process that we've started\n-- * Wait for the old process to die\n-- * Delete the old exe file\n-- * Exit new process\n--\n\n    possibleSelfUpgrade,\n    deleteOldExeFile,\n  ) where\n\nimport Distribution.Client.Compat.Prelude hiding (log)\nimport Prelude ()\n\n#ifdef mingw32_HOST_OS\n\nimport qualified System.Win32 as Win32", "func_src_after": "{-# LANGUAGE CPP, ForeignFunctionInterface #-}\n-----------------------------------------------------------------------------\n-- |\n-- Module      :  Distribution.Client.Win32SelfUpgrade\n-- Copyright   :  (c) Duncan Coutts 2008\n-- License     :  BSD-like\n--\n-- Maintainer  :  <EMAIL>\n-- Stability   :  provisional\n-- Portability :  portable\n--\n-- Support for self-upgrading executables on Windows platforms.\n-----------------------------------------------------------------------------\nmodule Distribution.Client.Win32SelfUpgrade (\n-- * Explanation\n--\n-- | Windows inherited a design choice from DOS that while initially innocuous\n-- has rather unfortunate consequences. It maintains the invariant that every\n-- open file has a corresponding name on disk. One positive consequence of this\n-- is that an executable can always find its own executable file. The downside\n-- is that a program cannot be deleted or upgraded while it is running without\n-- hideous workarounds. This module implements one such hideous workaround.\n--\n-- The basic idea is:\n--\n-- * Move our own exe file to a new name\n-- * Copy a new exe file to the previous name\n-- * Run the new exe file, passing our own PID and new path\n-- * Wait for the new process to start\n-- * Close the new exe file\n-- * Exit old process\n--\n-- Then in the new process:\n--\n-- * Inform the old process that we've started\n-- * Wait for the old process to die\n-- * Delete the old exe file\n-- * Exit new process\n--\n\n    possibleSelfUpgrade,\n    deleteOldExeFile,\n  ) where\n\nimport Distribution.Client.Compat.Prelude hiding (log)\nimport Prelude ()\n\n#ifdef mingw32_HOST_OS\n\nimport qualified System.Win32 as Win32", "line_changes": {"deleted": [{"line_no": 8, "char_start": 256, "char_end": 298, "line": "-- Maintainer  :  cabal-devel@haskell.org\n"}], "added": [{"line_no": 9, "char_start": 256, "char_end": 282, "line": "-- Maintainer  :  <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 256, "char_end": 298, "chars": "-- Maintainer  :  cabal-devel@haskell.org\n"}], "added": [{"char_start": 256, "char_end": 282, "chars": "-- Maintainer  :  <EMAIL>\n"}]}}
{"func_name": 7069, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html><head>\n<!-- This document was created from RTF source by rtftohtml  -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf8\">\n<title>Hlapec Jernej in njegova pravica</title>\n<link rev=\"made\" href=\"mailto:Miran.Hladnik@ff.uni-lj.si\">\n\n</head><body>\n\n <br> \n<a href=\"leposl.html\">Nazaj k leposlovju</a><p>\n \n<b>Ivan Cankar</b><p>\n<h1>Hlapec Jernej in njegova pravica</h1>\n                               I<p>\nTo povest vam pripovedujem, kakor se je po resnici vršila z vsemi svojimi\nnekrščanskimi krivicami in z vso svojo veliko žalostjo. Nobene laži ni\nzraven, nič lepih besed in nobene hinavščine. Obstrmeli so ljudje na\nBetajnovi in so plahi povesili glave, zakaj vzdignilo se je na hribu in je\nstopilo v dolino kakor črna smrt. Velika in tiha senca je stopila v dolino:\nglava teman oblak, noge silne jagnedi na loki; svetla kosa, na rami sloneča pa\nse bleščala tja do Ljubljane.<p>\n                               *<p>\nStarega Sitarja so pokopali; Bog mu daj nebesa, blag človek je bil. Zvon je\nodzvonil, župnik se je preoblekel, pogrebci so se napotili v krčmo. Sedli so\nza dolgo mizo pri Stržinarju, vsi črno oblečeni, resni in zamišljeni,\nženske objokane; hlapec Jernej, dolg, star in siv, kakor je bil, je sedel na\nklop pod oknom; otrl si je čelo z rdečim robcem in je zavzdihnil.<p>\n\"Vsi pojdemo; jaz, mislim, bom prvi stopil v njegovo gaz!\"<p>\nPa je rekel mladi Sitar:<p>\n\"No, Jernej, ti pa sediš tam široko in ošabno, kakor gospodar! Kdo je\ndedoval, ti ali jaz? Prvo besedo si zinil, prvi nisi!\"<p>\nJernej se je veselo nasmehnil in je veselo pogledal.<p>\n\"Zmerom si bil norčav in poreden, pa tak ostaneš, Tone! Meni pa se prav in\ndobro zdi, da te ni potrla bridkost - moškim vino, solze babam!\"<p>\nIn je točil in je vzdignil kozarec, toda nihče ga ni vzdignil z\nnjim.<p>\nJernej je postavil kozarec na mizo, še preden se ga je dotaknil z ustnicami.\nGledal je osupel gospodarja in družino in je videl same čemerne\nobraze.<p>\n\"No, kaj?\"<p>\nLeglo mu je na srce kakor težek mraz. Ne iz ust ne iz oči ni bilo\nodgovora.<p>\n\"No, kaj? Ali sem zašel med mešetarje in cigane, da me gledate in nič ne\ngovorite? Ali sedim z našo družino ali z iblajtarji, ki snujejo, kako bi me\nukanili?\"<p>\nSitar pa je rekel:<p>\n\"Ne zmerjaj na, hlapec, z mešetarji, cigani in iblajtarji! Še preden si ga\npokusil, si pijan!\"<p>\nTrikrat se je ozrl Jernej po družini, od obraza do obraza; nato je prijel", "func_src_after": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html><head>\n<!-- This document was created from RTF source by rtftohtml  -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf8\">\n<title>Hlapec Jernej in njegova pravica</title>\n<link rev=\"made\" href=\"mailto:<EMAIL>\">\n\n</head><body>\n\n <br> \n<a href=\"leposl.html\">Nazaj k leposlovju</a><p>\n \n<b>Ivan Cankar</b><p>\n<h1>Hlapec Jernej in njegova pravica</h1>\n                               I<p>\nTo povest vam pripovedujem, kakor se je po resnici vršila z vsemi svojimi\nnekrščanskimi krivicami in z vso svojo veliko žalostjo. Nobene laži ni\nzraven, nič lepih besed in nobene hinavščine. Obstrmeli so ljudje na\nBetajnovi in so plahi povesili glave, zakaj vzdignilo se je na hribu in je\nstopilo v dolino kakor črna smrt. Velika in tiha senca je stopila v dolino:\nglava teman oblak, noge silne jagnedi na loki; svetla kosa, na rami sloneča pa\nse bleščala tja do Ljubljane.<p>\n                               *<p>\nStarega Sitarja so pokopali; Bog mu daj nebesa, blag človek je bil. Zvon je\nodzvonil, župnik se je preoblekel, pogrebci so se napotili v krčmo. Sedli so\nza dolgo mizo pri Stržinarju, vsi črno oblečeni, resni in zamišljeni,\nženske objokane; hlapec Jernej, dolg, star in siv, kakor je bil, je sedel na\nklop pod oknom; otrl si je čelo z rdečim robcem in je zavzdihnil.<p>\n\"Vsi pojdemo; jaz, mislim, bom prvi stopil v njegovo gaz!\"<p>\nPa je rekel mladi Sitar:<p>\n\"No, Jernej, ti pa sediš tam široko in ošabno, kakor gospodar! Kdo je\ndedoval, ti ali jaz? Prvo besedo si zinil, prvi nisi!\"<p>\nJernej se je veselo nasmehnil in je veselo pogledal.<p>\n\"Zmerom si bil norčav in poreden, pa tak ostaneš, Tone! Meni pa se prav in\ndobro zdi, da te ni potrla bridkost - moškim vino, solze babam!\"<p>\nIn je točil in je vzdignil kozarec, toda nihče ga ni vzdignil z\nnjim.<p>\nJernej je postavil kozarec na mizo, še preden se ga je dotaknil z ustnicami.\nGledal je osupel gospodarja in družino in je videl same čemerne\nobraze.<p>\n\"No, kaj?\"<p>\nLeglo mu je na srce kakor težek mraz. Ne iz ust ne iz oči ni bilo\nodgovora.<p>\n\"No, kaj? Ali sem zašel med mešetarje in cigane, da me gledate in nič ne\ngovorite? Ali sedim z našo družino ali z iblajtarji, ki snujejo, kako bi me\nukanili?\"<p>\nSitar pa je rekel:<p>\n\"Ne zmerjaj na, hlapec, z mešetarji, cigani in iblajtarji! Še preden si ga\npokusil, si pijan!\"<p>\nTrikrat se je ozrl Jernej po družini, od obraza do obraza; nato je prijel", "line_changes": {"deleted": [{"line_no": 6, "char_start": 256, "char_end": 315, "line": "<link rev=\"made\" href=\"mailto:Miran.Hladnik@ff.uni-lj.si\">\n"}], "added": [{"line_no": 7, "char_start": 256, "char_end": 296, "line": "<link rev=\"made\" href=\"mailto:<EMAIL>\">\n"}]}, "char_changes": {"deleted": [{"char_start": 256, "char_end": 315, "chars": "<link rev=\"made\" href=\"mailto:Miran.Hladnik@ff.uni-lj.si\">\n"}], "added": [{"char_start": 256, "char_end": 296, "chars": "<link rev=\"made\" href=\"mailto:<EMAIL>\">\n"}]}}
{"func_name": 7083, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  <li><code class=\"highlighter-rouge\">kibana-6.2.4-linux-x86_64/config/kibana.yml</code></li>\n  <li>원격 호스트에서 실행하는 경우 : <code class=\"highlighter-rouge\">server.host: \"0.0.0.0\"</code> 수정</li>\n  <li>Elasticsearch url 확인 : <code class=\"highlighter-rouge\">elasticsearch.url: \"http://localhost:9200\"</code></li>\n</ul>\n\n<p><br /></p>\n<h2>샘플 데이터 로드</h2>\n<hr />\n<ul>\n  <li><a href=\"https://raw.githubusercontent.com/elastic/elasticsearch/master/docs/src/test/resources/accounts.json\">데이터 집합</a>을 <code class=\"highlighter-rouge\">accounts.json</code>으로 저장</li>\n  <li><a href=\"https://download.elastic.co/demos/kibana/gettingstarted/shakespeare.json\">Shakespeare 테스트 데이터</a>를 <code class=\"highlighter-rouge\">shakespeare.json</code>으로 저장</li>\n  <li><a href=\"https://download.elastic.co/demos/kibana/gettingstarted/logs.jsonl.gz\">임의로 생성된 테스트 로그 파일</a>을 다운 받은 후 아래 명령으로 압축 해제\n    <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ gunzip logs.jsonl.gz\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><br /></p>\n<h3>맵핑 설정</h3>\n<ul>\n  <li>맵핑은 인덱스 문서를 여러 논리적 그룹으로 나누고 필드의 특성을 지정</li>\n  <li>예를 들어 필드의 검색 가능성 또는 토큰화 여부(별개의 단어로 분리되는지)</li>\n</ul>\n\n<p>accounts 데이터는 맵핑 설정이 필요 없음.\nShakespeare 데이터에 대한 맵핑 설정</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ curl -H 'Content-Type: application/json' -XPUT http://localhost:9200/shakespeare -d '\n{\n \"mappings\" : {\n  \"_default_\" : {\n   \"properties\" : {\n    \"speaker\" : {\"type\": \"string\", \"index\" : \"not_analyzed\" },\n    \"play_name\" : {\"type\": \"string\", \"index\" : \"not_analyzed\" },\n    \"line_id\" : { \"type\" : \"integer\" },\n    \"speech_number\" : { \"type\" : \"integer\" }\n   }\n  }\n }\n}\n';\n</code></pre></div></div>\n<ul>\n  <li>speaker, play_name 필드는 분석되지 않는 문자열로 필드에 여러 단어가 있더라도 하나의 단위로 처리</li>\n  <li>line_id, speech_number 필드는 정수</li>\n</ul>\n\n<p>로그 데이터 집합에서는 geo_point 유형을 적용하여 로그의 위도/경도 쌍을 지리적 위치로 레이블하는 맵핑 추가</p>\n<ul>\n  <li>동일하게 파일 이름을 바꿔서 2015-05-18, 2015-05-19, 2015-05-20에 적용</li>\n</ul>", "func_src_after": "  <li><code class=\"highlighter-rouge\">kibana-6.2.4-linux-x86_64/config/kibana.yml</code></li>\n  <li>원격 호스트에서 실행하는 경우 : <code class=\"highlighter-rouge\">server.host: \"<IP-Address>\"</code> 수정</li>\n  <li>Elasticsearch url 확인 : <code class=\"highlighter-rouge\">elasticsearch.url: \"http://localhost:9200\"</code></li>\n</ul>\n\n<p><br /></p>\n<h2>샘플 데이터 로드</h2>\n<hr />\n<ul>\n  <li><a href=\"https://raw.githubusercontent.com/elastic/elasticsearch/master/docs/src/test/resources/accounts.json\">데이터 집합</a>을 <code class=\"highlighter-rouge\">accounts.json</code>으로 저장</li>\n  <li><a href=\"https://download.elastic.co/demos/kibana/gettingstarted/shakespeare.json\">Shakespeare 테스트 데이터</a>를 <code class=\"highlighter-rouge\">shakespeare.json</code>으로 저장</li>\n  <li><a href=\"https://download.elastic.co/demos/kibana/gettingstarted/logs.jsonl.gz\">임의로 생성된 테스트 로그 파일</a>을 다운 받은 후 아래 명령으로 압축 해제\n    <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ gunzip logs.jsonl.gz\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><br /></p>\n<h3>맵핑 설정</h3>\n<ul>\n  <li>맵핑은 인덱스 문서를 여러 논리적 그룹으로 나누고 필드의 특성을 지정</li>\n  <li>예를 들어 필드의 검색 가능성 또는 토큰화 여부(별개의 단어로 분리되는지)</li>\n</ul>\n\n<p>accounts 데이터는 맵핑 설정이 필요 없음.\nShakespeare 데이터에 대한 맵핑 설정</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ curl -H 'Content-Type: application/json' -XPUT http://localhost:9200/shakespeare -d '\n{\n \"mappings\" : {\n  \"_default_\" : {\n   \"properties\" : {\n    \"speaker\" : {\"type\": \"string\", \"index\" : \"not_analyzed\" },\n    \"play_name\" : {\"type\": \"string\", \"index\" : \"not_analyzed\" },\n    \"line_id\" : { \"type\" : \"integer\" },\n    \"speech_number\" : { \"type\" : \"integer\" }\n   }\n  }\n }\n}\n';\n</code></pre></div></div>\n<ul>\n  <li>speaker, play_name 필드는 분석되지 않는 문자열로 필드에 여러 단어가 있더라도 하나의 단위로 처리</li>\n  <li>line_id, speech_number 필드는 정수</li>\n</ul>\n\n<p>로그 데이터 집합에서는 geo_point 유형을 적용하여 로그의 위도/경도 쌍을 지리적 위치로 레이블하는 맵핑 추가</p>\n<ul>\n  <li>동일하게 파일 이름을 바꿔서 2015-05-18, 2015-05-19, 2015-05-20에 적용</li>\n</ul>", "line_changes": {"deleted": [{"line_no": 2, "char_start": 94, "char_end": 189, "line": "  <li>원격 호스트에서 실행하는 경우 : <code class=\"highlighter-rouge\">server.host: \"0.0.0.0\"</code> 수정</li>\n"}], "added": [{"line_no": 3, "char_start": 94, "char_end": 194, "line": "  <li>원격 호스트에서 실행하는 경우 : <code class=\"highlighter-rouge\">server.host: \"<IP-Address>\"</code> 수정</li>\n"}]}, "char_changes": {"deleted": [{"char_start": 94, "char_end": 189, "chars": "  <li>원격 호스트에서 실행하는 경우 : <code class=\"highlighter-rouge\">server.host: \"0.0.0.0\"</code> 수정</li>\n"}], "added": [{"char_start": 94, "char_end": 194, "chars": "  <li>원격 호스트에서 실행하는 경우 : <code class=\"highlighter-rouge\">server.host: \"<IP-Address>\"</code> 수정</li>\n"}]}}
{"func_name": 7120, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>JSDoc: Source: index.js</title>\n\n    <script src=\"scripts/prettify/prettify.js\"> </script>\n    <script src=\"scripts/prettify/lang-css.js\"> </script>\n    <!--[if lt IE 9]>\n      <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n    <![endif]-->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"styles/prettify-tomorrow.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"styles/jsdoc-default.css\">\n</head>\n\n<body>\n\n<div id=\"main\">\n\n    <h1 class=\"page-title\">Source: index.js</h1>\n\n    \n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @file Please, A Promise Helper Library.\n * @version v2.0.4\n * @author Adam Mill &lt;hismajesty@theroyalwhee.com>\n * @copyright Copyright 2019-2021 Adam Mill\n * @license Apache-2.0\n */\n\n/**\n * Imports.\n * @ignore\n */\nconst setTimeoutLib=setTimeout;\n\n/**\n * The isPromise method examines a value to determine if it is a Promise.\n * Does a ducktype check. Use instanceof only an instance check is desired.\n * @param  {any}  value The value to examine.\n * @returns {boolean}  True if Promise, false if not.\n */\nfunction isPromise(value) {\n  return !!(", "func_src_after": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>JSDoc: Source: index.js</title>\n\n    <script src=\"scripts/prettify/prettify.js\"> </script>\n    <script src=\"scripts/prettify/lang-css.js\"> </script>\n    <!--[if lt IE 9]>\n      <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n    <![endif]-->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"styles/prettify-tomorrow.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"styles/jsdoc-default.css\">\n</head>\n\n<body>\n\n<div id=\"main\">\n\n    <h1 class=\"page-title\">Source: index.js</h1>\n\n    \n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @file Please, A Promise Helper Library.\n * @version v2.0.4\n * @author Adam Mill &lt;<EMAIL>>\n * @copyright Copyright 2019-2021 Adam Mill\n * @license Apache-2.0\n */\n\n/**\n * Imports.\n * @ignore\n */\nconst setTimeoutLib=setTimeout;\n\n/**\n * The isPromise method examines a value to determine if it is a Promise.\n * Does a ducktype check. Use instanceof only an instance check is desired.\n * @param  {any}  value The value to examine.\n * @returns {boolean}  True if Promise, false if not.\n */\nfunction isPromise(value) {\n  return !!(", "line_changes": {"deleted": [{"line_no": 32, "char_start": 752, "char_end": 806, "line": " * @author Adam Mill &lt;hismajesty@theroyalwhee.com>\n"}], "added": [{"line_no": 33, "char_start": 752, "char_end": 786, "line": " * @author Adam Mill &lt;<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 752, "char_end": 806, "chars": " * @author Adam Mill &lt;hismajesty@theroyalwhee.com>\n"}], "added": [{"char_start": 752, "char_end": 786, "chars": " * @author Adam Mill &lt;<EMAIL>>\n"}]}}
{"func_name": 7137, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<!-- =================================== -->\n<!-- Project: Nicole's Portfolio Website -->\n<!-- Author: Max Ratajczak               -->\n<!-- =================================== -->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>NR | Contact</title>\n\t\t<meta name=\"author\" content=\"Max Ratajczak\">\n\t\t<meta name=\"description\" content=\"Nicole Ratajczak Contact\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n\t\t<!-- Animate.css, see https://animate.style/ -->\n\t\t<link rel=\"stylesheet\" href=\"/node_modules/animate.css/animate.min.css\"/>\n\t\t<!-- Stylesheets -->\n\t\t<link rel=\"stylesheet\" href=\"/assets/stylesheets/scrollbar.css\">\n        <link rel=\"stylesheet\" href=\"/assets/stylesheets/main.css\">\n        <link rel=\"stylesheet\" href=\"/assets/stylesheets/contact.css\">\n\t\t<!-- Favicon -->\n\t\t<link rel=\"icon\" type=\"image/x-icon\" href=\"/assets/favicon/favicon.png\"/>\n\t</head>\n\n\t<body>\n\t\t<header class=\"animate__animated animate__fadeIn\">\n\t\t\t<h1><a id=\"home-link\" href=\"/\">Nicole Ratajczak</a></h1>\n\t\t\t<ul id=\"nav-links\">\n\t\t\t\t<li><a href=\"/\">Projects</a></li>\n\t\t\t\t<li><a href=\"/about/\">About</a></li>\n\t\t\t\t<li><a href=\"/contact/\" style=\"color: black;\">Contact</a></li>\n\t\t\t</ul>\n\t\t</header>\n\n\t\t<main>\n            <div class=\"main-content animate__animated animate__fadeIn\">\n                <div id=\"info\">\n                    <h1>Contact</h1><br><br>\n                    <h2>You can contact me via email, LinkedIn or by the form below.</h2>\n                    <br><br><br><br>\n                    <div class=\"flex\">\n                        <div style=\"margin-right: 2vw;\">\n                            <h3 id=\"emailTitle\">EMAIL</h3>\n                            <span title=\"Copy to clipboard\" data-clipboard-text=\"ratajczaknicole@gmail.com\" id=\"emailCpyBtn\">ratajczaknicole@gmail.com</span>\n                        </div>\n                        <div>\n                            <h3>LINKEDIN</h3>\n                            <a href=\"https://www.linkedin.com/in/nicole-ratajczak-3a9225141/\" target=\"_blank\" title=\"Redirect to LinkedIn\"><span>Nicole Ratajczak</span></a>                        </div>\n                    </div>\n\t\t\t\t\t<br><br><br><br>", "func_src_after": "<!-- =================================== -->\n<!-- Project: Nicole's Portfolio Website -->\n<!-- Author: Max Ratajczak               -->\n<!-- =================================== -->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>NR | Contact</title>\n\t\t<meta name=\"author\" content=\"Max Ratajczak\">\n\t\t<meta name=\"description\" content=\"Nicole Ratajczak Contact\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n\t\t<!-- Animate.css, see https://animate.style/ -->\n\t\t<link rel=\"stylesheet\" href=\"/node_modules/animate.css/animate.min.css\"/>\n\t\t<!-- Stylesheets -->\n\t\t<link rel=\"stylesheet\" href=\"/assets/stylesheets/scrollbar.css\">\n        <link rel=\"stylesheet\" href=\"/assets/stylesheets/main.css\">\n        <link rel=\"stylesheet\" href=\"/assets/stylesheets/contact.css\">\n\t\t<!-- Favicon -->\n\t\t<link rel=\"icon\" type=\"image/x-icon\" href=\"/assets/favicon/favicon.png\"/>\n\t</head>\n\n\t<body>\n\t\t<header class=\"animate__animated animate__fadeIn\">\n\t\t\t<h1><a id=\"home-link\" href=\"/\">Nicole Ratajczak</a></h1>\n\t\t\t<ul id=\"nav-links\">\n\t\t\t\t<li><a href=\"/\">Projects</a></li>\n\t\t\t\t<li><a href=\"/about/\">About</a></li>\n\t\t\t\t<li><a href=\"/contact/\" style=\"color: black;\">Contact</a></li>\n\t\t\t</ul>\n\t\t</header>\n\n\t\t<main>\n            <div class=\"main-content animate__animated animate__fadeIn\">\n                <div id=\"info\">\n                    <h1>Contact</h1><br><br>\n                    <h2>You can contact me via email, LinkedIn or by the form below.</h2>\n                    <br><br><br><br>\n                    <div class=\"flex\">\n                        <div style=\"margin-right: 2vw;\">\n                            <h3 id=\"emailTitle\">EMAIL</h3>\n                            <span title=\"Copy to clipboard\" data-clipboard-text=\"<EMAIL>\" id=\"emailCpyBtn\"><EMAIL></span>\n                        </div>\n                        <div>\n                            <h3>LINKEDIN</h3>\n                            <a href=\"https://www.linkedin.com/in/nicole-ratajczak-3a9225141/\" target=\"_blank\" title=\"Redirect to LinkedIn\"><span>Nicole Ratajczak</span></a>                        </div>\n                    </div>\n\t\t\t\t\t<br><br><br><br>", "line_changes": {"deleted": [{"line_no": 44, "char_start": 1675, "char_end": 1833, "line": "                            <span title=\"Copy to clipboard\" data-clipboard-text=\"ratajczaknicole@gmail.com\" id=\"emailCpyBtn\">ratajczaknicole@gmail.com</span>\n"}], "added": [{"line_no": 45, "char_start": 1675, "char_end": 1797, "line": "                            <span title=\"Copy to clipboard\" data-clipboard-text=\"<EMAIL>\" id=\"emailCpyBtn\"><EMAIL></span>\n"}]}, "char_changes": {"deleted": [{"char_start": 1675, "char_end": 1833, "chars": "                            <span title=\"Copy to clipboard\" data-clipboard-text=\"ratajczaknicole@gmail.com\" id=\"emailCpyBtn\">ratajczaknicole@gmail.com</span>\n"}], "added": [{"char_start": 1675, "char_end": 1797, "chars": "                            <span title=\"Copy to clipboard\" data-clipboard-text=\"<EMAIL>\" id=\"emailCpyBtn\"><EMAIL></span>\n"}]}}
{"func_name": 7196, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\nHTTP Host: static.ak.fbcdn.net\nGenerated: May 4th 2010 9:54:59 AM PDT\nMachine: 10.16.139.105\nLocale: nu_ll\nPath: css/67hn1an3qloogsg0.pkg.css\n*/\n\n.UIProfileBox_Box{padding-bottom:15px;position:relative;overflow:hidden}\n.UIProfileBox_Header{background:#eceff5;border-top:1px solid #94a3c4;margin:0;padding:5px 8px;position:relative;overflow:hidden}\n.UIProfileBox_Title{font-size:11px;float:left}\n.UIProfileBox_EditLink{font-size:13px;float:right;display:block;font-weight:normal}\n.UIProfileBox_EditLink a{display:block;background:url(/rsrc.php/z4BZ9/hash/d0p9bnvk.gif) 0 -36px no-repeat;width:18px;height:18px}\n.UIProfileBox_EditLink a:hover{text-decoration:none;background-position:left top}\n.UIProfileBox_SubHeader{background:white;border-bottom:1px solid #eceff5;color:#444;font-weight:normal;overflow:hidden;margin:0;padding:2px 8px}\n.UIProfileBox_Subtitle{float:left}\n.UIProfileBox_ActionLink{float:right;font-size:11px}\n.UIProfileBox_Content{overflow:hidden;padding:10px 8px 0 8px}\n.UIProfileBox_ContentNoPadding{padding:0}\n.UIProfileBox_BoxNoPadding{padding:0}\n.profile .admins ul{margin:0;padding:0}\n.profile .admins ul{margin:0;padding:0}\n.profile .admins li{color:#3b5998;list-style:square;margin:0 0 0 1.5em}\n.profile .admins li span{color:#000}\n#event .actionspro{padding:10px 0}\n.guestlist .gueststatus_box{border-bottom:1px solid #d8dfea;padding-bottom:2px}\n.guestlist .gueststatus_box .gueststatus{float:left}\n.guestlist .gueststatus_box .see_all{float:right}\n.guestlist .guests{margin:8px 0 0}\n#event .info_table{margin-bottom:10px}\n#event .info_table td{vertical-align:top;padding:1px 0}\n#event .info_table td.label{width:100px;color:#808080}\n#event .event_left_column_boxes{border-left:1px solid #d8dfea;clear:left;border-bottom:1px solid #94a3c4}\n#event .other_info ul{padding:0;margin:0}\n#event .other_info li{margin:0 0 0 1.5em}\n#event .event_profile_information{padding:5px 8px 8px 8px}\n.event_profile_title{background:transparent url(/rsrc.php/z7KX9/hash/dqzv8mc1.gif) no-repeat left 1px;border-bottom:1px solid #eee;color:#808080;margin:0 0 10px 10px;padding:0 0 15px 22px}\n.event_profile_title h3{padding-bottom:2px;font-size:14px}\n#event .report_footer_actions{padding:20px 10px}\n.rsvp_status_text{color:#808080;font-weight:bold;margin:0 0 5px}\n.rsvp_get_tickets_link{margin:8px 0 0 5px}\n#rsvp_form div.rsvp_option{padding:2px 0 3px 4px}\n#rsvp_form .inputradio{margin-right:5px}\n#rsvp_form label{color:#000;font-weight:normal}\n#rsvp_form #rsvp{margin:8px 0 0 2px}\n#event .share_section{background:white;padding:0 10px 10px 0;float:left}\n.profileTable{margin:0;padding:0}\n.profileTable td{vertical-align:top;font-size:11px;line-height:13px;margin:0;padding:1px 0 1px 0}\n.profileTable .label{width:120px;color:#808080}\n.profilebox .profileTable{margin-left:0}", "func_src_after": "/*\nHTTP Host: static.ak.fbcdn.net\nGenerated: May 4th 2010 9:54:59 AM PDT\nMachine: <IP-Address>\nLocale: nu_ll\nPath: css/67hn1an3qloogsg0.pkg.css\n*/\n\n.UIProfileBox_Box{padding-bottom:15px;position:relative;overflow:hidden}\n.UIProfileBox_Header{background:#eceff5;border-top:1px solid #94a3c4;margin:0;padding:5px 8px;position:relative;overflow:hidden}\n.UIProfileBox_Title{font-size:11px;float:left}\n.UIProfileBox_EditLink{font-size:13px;float:right;display:block;font-weight:normal}\n.UIProfileBox_EditLink a{display:block;background:url(/rsrc.php/z4BZ9/hash/d0p9bnvk.gif) 0 -36px no-repeat;width:18px;height:18px}\n.UIProfileBox_EditLink a:hover{text-decoration:none;background-position:left top}\n.UIProfileBox_SubHeader{background:white;border-bottom:1px solid #eceff5;color:#444;font-weight:normal;overflow:hidden;margin:0;padding:2px 8px}\n.UIProfileBox_Subtitle{float:left}\n.UIProfileBox_ActionLink{float:right;font-size:11px}\n.UIProfileBox_Content{overflow:hidden;padding:10px 8px 0 8px}\n.UIProfileBox_ContentNoPadding{padding:0}\n.UIProfileBox_BoxNoPadding{padding:0}\n.profile .admins ul{margin:0;padding:0}\n.profile .admins ul{margin:0;padding:0}\n.profile .admins li{color:#3b5998;list-style:square;margin:0 0 0 1.5em}\n.profile .admins li span{color:#000}\n#event .actionspro{padding:10px 0}\n.guestlist .gueststatus_box{border-bottom:1px solid #d8dfea;padding-bottom:2px}\n.guestlist .gueststatus_box .gueststatus{float:left}\n.guestlist .gueststatus_box .see_all{float:right}\n.guestlist .guests{margin:8px 0 0}\n#event .info_table{margin-bottom:10px}\n#event .info_table td{vertical-align:top;padding:1px 0}\n#event .info_table td.label{width:100px;color:#808080}\n#event .event_left_column_boxes{border-left:1px solid #d8dfea;clear:left;border-bottom:1px solid #94a3c4}\n#event .other_info ul{padding:0;margin:0}\n#event .other_info li{margin:0 0 0 1.5em}\n#event .event_profile_information{padding:5px 8px 8px 8px}\n.event_profile_title{background:transparent url(/rsrc.php/z7KX9/hash/dqzv8mc1.gif) no-repeat left 1px;border-bottom:1px solid #eee;color:#808080;margin:0 0 10px 10px;padding:0 0 15px 22px}\n.event_profile_title h3{padding-bottom:2px;font-size:14px}\n#event .report_footer_actions{padding:20px 10px}\n.rsvp_status_text{color:#808080;font-weight:bold;margin:0 0 5px}\n.rsvp_get_tickets_link{margin:8px 0 0 5px}\n#rsvp_form div.rsvp_option{padding:2px 0 3px 4px}\n#rsvp_form .inputradio{margin-right:5px}\n#rsvp_form label{color:#000;font-weight:normal}\n#rsvp_form #rsvp{margin:8px 0 0 2px}\n#event .share_section{background:white;padding:0 10px 10px 0;float:left}\n.profileTable{margin:0;padding:0}\n.profileTable td{vertical-align:top;font-size:11px;line-height:13px;margin:0;padding:1px 0 1px 0}\n.profileTable .label{width:120px;color:#808080}\n.profilebox .profileTable{margin-left:0}", "line_changes": {"deleted": [{"line_no": 4, "char_start": 73, "char_end": 96, "line": "Machine: 10.16.139.105\n"}], "added": [{"line_no": 5, "char_start": 73, "char_end": 95, "line": "Machine: <IP-Address>\n"}]}, "char_changes": {"deleted": [{"char_start": 73, "char_end": 96, "chars": "Machine: 10.16.139.105\n"}], "added": [{"char_start": 73, "char_end": 95, "chars": "Machine: <IP-Address>\n"}]}}
{"func_name": 7198, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\nTemplate Name: Adminox Dashboard\nAuthor: CoderThemes\nEmail: coderthemes@gmail.com\nFile: Menu\n*/\n/* =============\n  == Components List==\n\n   - Email\n   - Maps\n   - About Us\n   - Contact Us\n   - Member List\n   - Timeline\n   - Pages (Common)\n   - Countdown\n   - FAQ\n   - Pricing\n   - Account Pages\n   - Maintenance\n   - Lightbox\n   - File Manager\n   - Slider\n   - Tickets\n   - Companies\n   - Treeview\n   - Sitemap\n   - Profile\n   - Search Result\n   - Task Board\n\n============= */\n/* =============\n   Email\n============= */\n.inbox-leftbar {\n  width: 240px;\n  float: left;\n  padding: 10px 20px 20px 10px;\n}\n.inbox-rightbar {\n  margin-left: 250px;\n}\n.message-list {\n  display: block;\n  padding-left: 0;\n}\n.message-list li {\n  position: relative;", "func_src_after": "/*\nTemplate Name: Adminox Dashboard\nAuthor: CoderThemes\nEmail: <EMAIL>\nFile: Menu\n*/\n/* =============\n  == Components List==\n\n   - Email\n   - Maps\n   - About Us\n   - Contact Us\n   - Member List\n   - Timeline\n   - Pages (Common)\n   - Countdown\n   - FAQ\n   - Pricing\n   - Account Pages\n   - Maintenance\n   - Lightbox\n   - File Manager\n   - Slider\n   - Tickets\n   - Companies\n   - Treeview\n   - Sitemap\n   - Profile\n   - Search Result\n   - Task Board\n\n============= */\n/* =============\n   Email\n============= */\n.inbox-leftbar {\n  width: 240px;\n  float: left;\n  padding: 10px 20px 20px 10px;\n}\n.inbox-rightbar {\n  margin-left: 250px;\n}\n.message-list {\n  display: block;\n  padding-left: 0;\n}\n.message-list li {\n  position: relative;", "line_changes": {"deleted": [{"line_no": 4, "char_start": 56, "char_end": 85, "line": "Email: coderthemes@gmail.com\n"}], "added": [{"line_no": 5, "char_start": 56, "char_end": 71, "line": "Email: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 56, "char_end": 85, "chars": "Email: coderthemes@gmail.com\n"}], "added": [{"char_start": 56, "char_end": 71, "chars": "Email: <EMAIL>\n"}]}}
{"func_name": 7232, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  padding-top: .35em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-jieyin\"][data-tone]:not([data-tone=\"0\"]):before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-yunmu\"][data-tone]:not([data-tone=\"0\"]):before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"jieyin-yunmu\"][data-tone]:not([data-tone=\"0\"]):before {\n  margin-top: .65em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-jieyin-yunmu\"][data-tone]:not([data-tone=\"0\"]):before {\n  margin-top: .55em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu\"][data-tone][data-tone=\"0\"]:before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"jieyin\"][data-tone][data-tone=\"0\"]:before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"yunmu\"][data-tone][data-tone=\"0\"]:before {\n  margin-top: .3em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-jieyin-yunmu\"][data-tone=\"0\"]:before {\n  margin-top: -.5em;\n}\n\n/*!\n *  Font Awesome 3.2.1\n *  the iconic font designed for Bootstrap\n *  ------------------------------------------------------------------------------\n *  The full suite of pictographic icons, examples, and documentation can be\n *  found at http://fontawesome.io.  Stay up to date on Twitter at\n *  http://twitter.com/fontawesome.\n *\n *  License\n *  ------------------------------------------------------------------------------\n *  - The Font Awesome font is licensed under SIL OFL 1.1 -\n *    http://scripts.sil.org/OFL\n *  - Font Awesome CSS, LESS, and SASS files are licensed under MIT License -\n *    http://opensource.org/licenses/mit-license.html\n *  - Font Awesome documentation licensed under CC BY 3.0 -\n *    http://creativecommons.org/licenses/by/3.0/\n *  - Attribution is no longer required in Font Awesome 3.0, but much appreciated:\n *    \"Font Awesome by Dave Gandy - http://fontawesome.io\"\n *\n *  Author - Dave Gandy\n *  ------------------------------------------------------------------------------\n *  Email: dave@fontawesome.io\n *  Twitter: http://twitter.com/davegandy\n *  Work: Lead Product Designer @ Kyruus - http://kyruus.com\n */\n/* FONT PATH\n * -------------------------- */", "func_src_after": "  padding-top: .35em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-jieyin\"][data-tone]:not([data-tone=\"0\"]):before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-yunmu\"][data-tone]:not([data-tone=\"0\"]):before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"jieyin-yunmu\"][data-tone]:not([data-tone=\"0\"]):before {\n  margin-top: .65em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-jieyin-yunmu\"][data-tone]:not([data-tone=\"0\"]):before {\n  margin-top: .55em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu\"][data-tone][data-tone=\"0\"]:before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"jieyin\"][data-tone][data-tone=\"0\"]:before,\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"yunmu\"][data-tone][data-tone=\"0\"]:before {\n  margin-top: .3em;\n}\n\nspan.han-js-zhuyin-rendered span.zi[data-zy][data-form=\"shengmu-jieyin-yunmu\"][data-tone=\"0\"]:before {\n  margin-top: -.5em;\n}\n\n/*!\n *  Font Awesome 3.2.1\n *  the iconic font designed for Bootstrap\n *  ------------------------------------------------------------------------------\n *  The full suite of pictographic icons, examples, and documentation can be\n *  found at http://fontawesome.io.  Stay up to date on Twitter at\n *  http://twitter.com/fontawesome.\n *\n *  License\n *  ------------------------------------------------------------------------------\n *  - The Font Awesome font is licensed under SIL OFL 1.1 -\n *    http://scripts.sil.org/OFL\n *  - Font Awesome CSS, LESS, and SASS files are licensed under MIT License -\n *    http://opensource.org/licenses/mit-license.html\n *  - Font Awesome documentation licensed under CC BY 3.0 -\n *    http://creativecommons.org/licenses/by/3.0/\n *  - Attribution is no longer required in Font Awesome 3.0, but much appreciated:\n *    \"Font Awesome by Dave Gandy - http://fontawesome.io\"\n *\n *  Author - Dave Gandy\n *  ------------------------------------------------------------------------------\n *  Email: <EMAIL>\n *  Twitter: http://twitter.com/davegandy\n *  Work: Lead Product Designer @ Kyruus - http://kyruus.com\n */\n/* FONT PATH\n * -------------------------- */", "line_changes": {"deleted": [{"line_no": 45, "char_start": 1996, "char_end": 2027, "line": " *  Email: dave@fontawesome.io\n"}], "added": [{"line_no": 46, "char_start": 1996, "char_end": 2015, "line": " *  Email: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 1996, "char_end": 2027, "chars": " *  Email: dave@fontawesome.io\n"}], "added": [{"char_start": 1996, "char_end": 2015, "chars": " *  Email: <EMAIL>\n"}]}}
{"func_name": 7301, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# Impacket - Collection of Python classes for working with network protocols.\n#\n# SECUREAUTH LABS. Copyright (C) 2021 SecureAuth Corporation. All rights reserved.\n#\n# This software is provided under a slightly modified version\n# of the Apache Software License. See the accompanying LICENSE file\n# for more information.\n#\nimport pytest\nimport unittest\nfrom tests import RemoteTestCase\n\nfrom impacket import nmb\nfrom impacket.structure import hexdump\n\n\n@pytest.mark.remote\nclass NMBTests(RemoteTestCase, unittest.TestCase):\n\n    def setUp(self):\n        super(NMBTests, self).setUp()\n        self.set_transport_config()\n\n    def create_connection(self):\n        pass\n\n    def test_encodedecodename(self):\n        name = 'THISISAVERYLONGLONGNAME'\n        encoded = nmb.encode_name(name, nmb.TYPE_SERVER, None)\n        hexdump(encoded)\n        decoded = nmb.decode_name(encoded)\n        hexdump(bytearray(decoded[1], 'utf-8'))\n\n        #self.assertEqual(nmb.TYPE_SERVER, decoded[0])\n        self.assertEqual(name[:15], decoded[1].strip())\n\n        # ToDo: Fix the scope functionality\n        #namescope = 'MYNAME'\n        #encoded = nmb.encode_name(namescope,nmb.TYPE_SERVER,'SCOPE')\n        #hexdump(encoded)\n        #decoded = nmb.decode_name(encoded)\n        #hexdump(decoded)\n\n        #self.assertEqual(nmb.TYPE_SERVER, decoded[0])\n        #self.assertEqual(namescope[:15], decoded[1].strip())\n\n    def test_getnetbiosname(self):\n        n = nmb.NetBIOS()\n        res = n.getnetbiosname(self.machine)\n        print(repr(res))", "func_src_after": "# Impacket - Collection of Python classes for working with network protocols.\n#\n# SECUREAUTH LABS. Copyright (C) 2021 SecureAuth Corporation. All rights reserved.\n#\n# This software is provided under a slightly modified version\n# of the Apache Software License. See the accompanying LICENSE file\n# for more information.\n#\nimport pytest\nimport unittest\nfrom tests import RemoteTestCase\n\nfrom impacket import nmb\nfrom impacket.structure import hexdump\n\n\n@pytest.mark.remote\nclass NMBTests(RemoteTestCase, unittest.TestCase):\n\n    def setUp(self):\n        super(NMBTests, self).setUp()\n        self.set_transport_config()\n\n    def create_connection(self):\n        pass\n\n    def test_encodedecodename(self):\n        name = 'THISISAVERYLONGLONGNAME'\n        encoded = nmb.encode_name(name, nmb.TYPE_SERVER, None)\n        hexdump(encoded)\n        decoded = nmb.decode_name(encoded)\n        hexdump(bytearray(decoded[1], 'utf-8'))\n\n        #self.assertEqual(nmb.TYPE_SERVER, decoded[0])\n        self.assertEqual(name[:15], decoded[1].strip())\n\n        # ToDo: Fix the scope functionality\n        #namescope = 'MYNAME'\n        #encoded = nmb.encode_name(namescope,nmb.TYPE_SERVER,'SCOPE')\n        #hexdump(encoded)\n        #decoded = nmb.decode_name(encoded)\n        #hexdump(decoded)\n\n        #self.assertEqual(nmb.TYPE_SERVER, decoded[0])\n        #self.assertEqual(namescope[:15], decoded[1].strip())\n\n    def test_getnetbiosname(self):\n        n = nmb.NetBIOS()\n        res = n.getnetbiosname(self.machine)\n        print(repr(res))", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7334, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        self.assertEqual(tmpl.version, copy.version)\n        self.assertEqual(id(tmpl.nsmap), id(copy.nsmap))\n        self.assertNotEqual(id(tmpl.subordinates), id(copy.subordinates))\n        self.assertEqual(len(tmpl.subordinates), len(copy.subordinates))\n        self.assertEqual(tmpl.subordinates[0], copy.subordinates[0])\n\n    def test_subordinate_apply(self):\n        # Construct a main template\n        elem = xmlutil.TemplateElement('test')\n        main = xmlutil.MainTemplate(elem, 3)\n\n        # Construct a subordinate template with applicable minimum version\n        subordinate = xmlutil.SubordinateTemplate(elem, 2)\n        self.assertEqual(subordinate.apply(main), True)\n\n        # Construct a subordinate template with equal minimum version\n        subordinate = xmlutil.SubordinateTemplate(elem, 3)\n        self.assertEqual(subordinate.apply(main), True)\n\n        # Construct a subordinate template with inapplicable minimum version\n        subordinate = xmlutil.SubordinateTemplate(elem, 4)\n        self.assertEqual(subordinate.apply(main), False)\n\n        # Construct a subordinate template with applicable version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 2, 4)\n        self.assertEqual(subordinate.apply(main), True)\n\n        # Construct a subordinate template with low version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 1, 2)\n        self.assertEqual(subordinate.apply(main), False)\n\n        # Construct a subordinate template with high version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 4, 5)\n        self.assertEqual(subordinate.apply(main), False)\n\n        # Construct a subordinate template with matching version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 3, 3)\n        self.assertEqual(subordinate.apply(main), True)\n\n    def test__serialize(self):\n        # Our test object to serialize\n        obj = {\n            'test': {\n                'name': 'foobar',\n                'values': [1, 2, 3, 4],\n                'attrs': {\n                    'a': 1,\n                    'b': 2,\n                    'c': 3,\n                    'd': 4,", "func_src_after": "        self.assertEqual(tmpl.version, copy.version)\n        self.assertEqual(id(tmpl.nsmap), id(copy.nsmap))\n        self.assertNotEqual(id(tmpl.subordinates), id(copy.subordinates))\n        self.assertEqual(len(tmpl.subordinates), len(copy.subordinates))\n        self.assertEqual(tmpl.subordinates[0], copy.subordinates[0])\n\n    def test_subordinate_apply(self):\n        # Construct a main template\n        elem = xmlutil.TemplateElement('test')\n        main = xmlutil.MainTemplate(elem, 3)\n\n        # Construct a subordinate template with applicable minimum version\n        subordinate = xmlutil.SubordinateTemplate(elem, 2)\n        self.assertEqual(subordinate.apply(main), True)\n\n        # Construct a subordinate template with equal minimum version\n        subordinate = xmlutil.SubordinateTemplate(elem, 3)\n        self.assertEqual(subordinate.apply(main), True)\n\n        # Construct a subordinate template with inapplicable minimum version\n        subordinate = xmlutil.SubordinateTemplate(elem, 4)\n        self.assertEqual(subordinate.apply(main), False)\n\n        # Construct a subordinate template with applicable version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 2, 4)\n        self.assertEqual(subordinate.apply(main), True)\n\n        # Construct a subordinate template with low version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 1, 2)\n        self.assertEqual(subordinate.apply(main), False)\n\n        # Construct a subordinate template with high version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 4, 5)\n        self.assertEqual(subordinate.apply(main), False)\n\n        # Construct a subordinate template with matching version range\n        subordinate = xmlutil.SubordinateTemplate(elem, 3, 3)\n        self.assertEqual(subordinate.apply(main), True)\n\n    def test__serialize(self):\n        # Our test object to serialize\n        obj = {\n            'test': {\n                'name': 'foobar',\n                'values': [1, 2, 3, 4],\n                'attrs': {\n                    'a': 1,\n                    'b': 2,\n                    'c': 3,\n                    'd': 4,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7389, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Jul 26 23:19:19 2016\n\n@author: Ben\n\"\"\"\n\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Jun 10 08:22:12 2016\n\n@author: Ben\n\"\"\"\n\nfrom AeroComBAT.Structures import MaterialLib, Laminate, XSect\nfrom AeroComBAT.Aerodynamics import Airfoil\nimport numpy as np\n\n# ADD MATERIALS TO THE MATERIAL LIBRARY\n# =====================================\n# Create a material library object\nmatLib = MaterialLib()\nmatLib.addMat(1,'A-286','iso',[29.1e3,29.1e3/(11.1e3*2)-1,0.1],.005)\n\n\n\n# NACA 2412 BOX BEAM\n# ==================\n# Now let's mesh a NACA2412 box beam. We will use the last of the supported\n# meshing routines for this. This is the less restrictive than the 'rectBox'\n# routine, and has different laminate mesh interfaces. This time we will also\n# make a slightly more interesting mesh using unbalanced and unsymetric\n# laminates. First let's initialize the airfoil shape:\n# Initialize a chord length of four inches\n# Initialize the non-dimesional locations for the airfoil points to be\n# generated:\na = 0.91\nb = 0.75\nr = 0.437*2/3\nxdim3 = [a,b,r]\nn_i_1 = [1]\nm_i_1 = [1]\nlam1 = Laminate(n_i_1, m_i_1, matLib)\n# Organize the laminates into an array\nlaminates_Lay3 = [lam1]\naf3 = Airfoil(1.,name='NACA2412')\n# Create the cross-section object and mesh it\nxsect_Lay3 = XSect(4,af3,xdim3,laminates_Lay3,matLib,typeXSect='rectHole',nelem=40)\n# Run the cross-sectional analysis. Since this is an airfoil and for this,\n# symmetric airfoils the AC is at the 1/c chord, we will put the reference axis", "func_src_after": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Jul 26 23:19:19 2016\n\n@author: Ben\n\"\"\"\n\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Jun 10 08:22:12 2016\n\n@author: Ben\n\"\"\"\n\nfrom AeroComBAT.Structures import MaterialLib, Laminate, XSect\nfrom AeroComBAT.Aerodynamics import Airfoil\nimport numpy as np\n\n# ADD MATERIALS TO THE MATERIAL LIBRARY\n# =====================================\n# Create a material library object\nmatLib = MaterialLib()\nmatLib.addMat(1,'A-286','iso',[29.1e3,29.1e3/(11.1e3*2)-1,0.1],.005)\n\n\n\n# NACA 2412 BOX BEAM\n# ==================\n# Now let's mesh a NACA2412 box beam. We will use the last of the supported\n# meshing routines for this. This is the less restrictive than the 'rectBox'\n# routine, and has different laminate mesh interfaces. This time we will also\n# make a slightly more interesting mesh using unbalanced and unsymetric\n# laminates. First let's initialize the airfoil shape:\n# Initialize a chord length of four inches\n# Initialize the non-dimesional locations for the airfoil points to be\n# generated:\na = 0.91\nb = 0.75\nr = 0.437*2/3\nxdim3 = [a,b,r]\nn_i_1 = [1]\nm_i_1 = [1]\nlam1 = Laminate(n_i_1, m_i_1, matLib)\n# Organize the laminates into an array\nlaminates_Lay3 = [lam1]\naf3 = Airfoil(1.,name='NACA2412')\n# Create the cross-section object and mesh it\nxsect_Lay3 = XSect(4,af3,xdim3,laminates_Lay3,matLib,typeXSect='rectHole',nelem=40)\n# Run the cross-sectional analysis. Since this is an airfoil and for this,\n# symmetric airfoils the AC is at the 1/c chord, we will put the reference axis", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7452, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\"\"\"djhome URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/1.9/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.conf.urls import url, include\n    2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))\n\"\"\"\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\nfrom django.contrib.auth.models import User\nfrom django.urls import path\nfrom rest_framework import routers, serializers, viewsets\nfrom rest_framework_jwt.views import obtain_jwt_token, refresh_jwt_token, verify_jwt_token\n#from rest_framework.authtoken import views\nfrom ios.views import InputViewSet, OutputViewSet, io, IOsView, DeviceViewSet\nfrom schedules.views import ScheduleViewSet, OnetimeScheduleViewSet\nfrom schedules.views import times\n#from ios.views import index\n\n\n# Serializers define the API representation.\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ('url', 'username', 'email', 'is_staff')\n\n\n# ViewSets define the view behavior.\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n\n# Routers provide an easy way of automatically determining the URL conf.\nrouter = routers.DefaultRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'devices', DeviceViewSet)\nrouter.register(r'inputs', InputViewSet)\nrouter.register(r'outputs', OutputViewSet)\nrouter.register(r'schedules', ScheduleViewSet)\nrouter.register(r'onetimeschedules', OnetimeScheduleViewSet)\n\n# Wire up our API using automatic URL routing.", "func_src_after": "\"\"\"djhome URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/1.9/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.conf.urls import url, include\n    2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))\n\"\"\"\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\nfrom django.contrib.auth.models import User\nfrom django.urls import path\nfrom rest_framework import routers, serializers, viewsets\nfrom rest_framework_jwt.views import obtain_jwt_token, refresh_jwt_token, verify_jwt_token\n#from rest_framework.authtoken import views\nfrom ios.views import InputViewSet, OutputViewSet, io, IOsView, DeviceViewSet\nfrom schedules.views import ScheduleViewSet, OnetimeScheduleViewSet\nfrom schedules.views import times\n#from ios.views import index\n\n\n# Serializers define the API representation.\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ('url', 'username', 'email', 'is_staff')\n\n\n# ViewSets define the view behavior.\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n\n# Routers provide an easy way of automatically determining the URL conf.\nrouter = routers.DefaultRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'devices', DeviceViewSet)\nrouter.register(r'inputs', InputViewSet)\nrouter.register(r'outputs', OutputViewSet)\nrouter.register(r'schedules', ScheduleViewSet)\nrouter.register(r'onetimeschedules', OnetimeScheduleViewSet)\n\n# Wire up our API using automatic URL routing.", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7467, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    \"genre\": [\n      \"Adventure\",\n      \" Documentary\"\n    ],\n    \"imdb_score\": 7.4,\n    \"name\": \"Chang : A Drama of the Wilderness\"\n  },\n  {\n    \"99popularity\": 81.0,\n    \"director\": \"William Friedkin\",\n    \"genre\": [\n      \"Horror\"\n    ],\n    \"imdb_score\": 8.1,\n    \"name\": \"The Exorcist\"\n  },\n  {\n    \"99popularity\": 86.0,\n    \"director\": \"Orson Welles\",\n    \"genre\": [\n      \"Drama\",\n      \" Mystery\"\n    ],\n    \"imdb_score\": 8.6,\n    \"name\": \"Citizen Kane\"\n  },\n  {\n    \"99popularity\": 81.0,\n    \"director\": \"James Cameron\",\n    \"genre\": [\n      \"Action\",\n      \" Sci-Fi\",\n      \" Thriller\"\n    ],\n    \"imdb_score\": 8.1,\n    \"name\": \"The Terminator\"\n  },\n  {\n    \"99popularity\": 81.0,\n    \"director\": \"Roman Polanski\",\n    \"genre\": [\n      \"Drama\",\n      \" Horror\",\n      \" Mystery\"\n    ],\n    \"imdb_score\": 8.1,\n    \"name\": \"Rosemarys Baby\"\n  },\n  {\n    \"99popularity\": 81.0,", "func_src_after": "    \"genre\": [\n      \"Adventure\",\n      \" Documentary\"\n    ],\n    \"imdb_score\": 7.4,\n    \"name\": \"Chang : A Drama of the Wilderness\"\n  },\n  {\n    \"99popularity\": 81.0,\n    \"director\": \"William Friedkin\",\n    \"genre\": [\n      \"Horror\"\n    ],\n    \"imdb_score\": 8.1,\n    \"name\": \"The Exorcist\"\n  },\n  {\n    \"99popularity\": 86.0,\n    \"director\": \"Orson Welles\",\n    \"genre\": [\n      \"Drama\",\n      \" Mystery\"\n    ],\n    \"imdb_score\": 8.6,\n    \"name\": \"Citizen Kane\"\n  },\n  {\n    \"99popularity\": 81.0,\n    \"director\": \"James Cameron\",\n    \"genre\": [\n      \"Action\",\n      \" Sci-Fi\",\n      \" Thriller\"\n    ],\n    \"imdb_score\": 8.1,\n    \"name\": \"The Terminator\"\n  },\n  {\n    \"99popularity\": 81.0,\n    \"director\": \"Roman Polanski\",\n    \"genre\": [\n      \"Drama\",\n      \" Horror\",\n      \" Mystery\"\n    ],\n    \"imdb_score\": 8.1,\n    \"name\": \"Rosemarys Baby\"\n  },\n  {\n    \"99popularity\": 81.0,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7751, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    virtual void GetMouseFlipXY( int&, int& )           zCall( 0x004D3290 );\r\n    virtual void ProcessInputEvents()                   zCall( 0x004D3140 );\r\n  };\r\n\r\n} // namespace Gothic_II_Classic\r\n\r\n#endif // __ZINPUT__WIN32_H__VER2__", "func_src_after": "    virtual void GetMouseFlipXY( int&, int& )           zCall( 0x004D3290 );\r\n    virtual void ProcessInputEvents()                   zCall( 0x004D3140 );\r\n  };\r\n\r\n} // namespace Gothic_II_Classic\r\n\r\n#endif // __ZINPUT__WIN32_H__VER2__", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7831, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//\n//     Generated by class-dump 3.5 (64 bit).\n//\n//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.\n//\n\n#import \"SBLayoutElementViewController.h\"\n\n#import \"FBSceneMonitorDelegate.h\"\n\n@class FBSSceneSettingsDiffInspector, FBScene, FBSceneMonitor, NSCountedSet, NSString, SBAppView, SBApplication, UIApplicationSceneClientSettingsDiffInspector;\n\n@interface SBAppContainerViewController : SBLayoutElementViewController <FBSceneMonitorDelegate>\n{\n    SBApplication *_application;\t// 48 = 0x30\n    NSString *_sceneIdentifier;\t// 56 = 0x38\n    FBScene *_scene;\t// 64 = 0x40\n    FBSceneMonitor *_monitor;\t// 72 = 0x48\n    FBSSceneSettingsDiffInspector *_settingsInspector;\t// 80 = 0x50\n    FBSSceneSettingsDiffInspector *_effectiveSettingsInspector;\t// 88 = 0x58\n    UIApplicationSceneClientSettingsDiffInspector *_clientSettingsInspector;\t// 96 = 0x60\n    NSCountedSet *_sideSwitcherHiddenRequesters;\t// 104 = 0x68\n}\n\n@property(copy, nonatomic) NSString *sceneIdentifier; // @synthesize sceneIdentifier=_sceneIdentifier;\n@property(retain, nonatomic) SBApplication *application; // @synthesize application=_application;\n- (void).cxx_destruct;\t// IMP=0x000000010038fd9c\n- (void)sceneMonitor:(id)arg1 pairingStatusDidChangeForExternalSceneIDs:(id)arg2;\t// IMP=0x000000010038fc10\n- (void)sceneMonitor:(id)arg1 sceneClientSettingsDidChangeWithDiff:(id)arg2 transitionContext:(id)arg3;\t// IMP=0x000000010038fbc4\n- (void)sceneMonitor:(id)arg1 effectiveSceneSettingsDidChangeWithDiff:(id)arg2 previousSettings:(id)arg3;\t// IMP=0x000000010038fb78\n- (void)sceneMonitor:(id)arg1 sceneSettingsDidChangeWithDiff:(id)arg2 previousSettings:(id)arg3;\t// IMP=0x000000010038fb2c\n- (void)sceneMonitor:(id)arg1 sceneWasCreated:(id)arg2;\t// IMP=0x000000010038fb1c\n- (void)_updateSideSwitcherGrabber;\t// IMP=0x000000010038fa30\n- (void)viewWillLayoutSubviews;\t// IMP=0x000000010038f9e0\n- (void)loadView;\t// IMP=0x000000010038f978\n- (void)_layoutTransitionDidEnd;\t// IMP=0x000000010038f96c\n- (void)_invalidateSceneDerivedObjects;\t// IMP=0x000000010038f8e4\n- (void)_configureWithScene:(id)arg1;\t// IMP=0x000000010038f1a8\n- (void)_updateEffectiveLayoutElementVisibility;\t// IMP=0x000000010038f0b8\n- (_Bool)isSideSwitcherGrabberHidden;\t// IMP=0x000000010038f088\n- (void)setSideSwitcherGrabberHidden:(_Bool)arg1 forRequester:(id)arg2;\t// IMP=0x000000010038ef94\n- (id)snapshotView;\t// IMP=0x000000010038ef40\n- (void)prepareForReuse;\t// IMP=0x000000010038ed7c\n- (_Bool)supportsReuse;\t// IMP=0x000000010038ed74\n- (void)configureWithEntity:(id)arg1 forElement:(id)arg2 layoutState:(id)arg3;\t// IMP=0x000000010038e210\n@property(readonly, nonatomic) long long displayMode;\n- (void)setDisplayMode:(long long)arg1 options:(unsigned long long)arg2 withAnimationFactory:(id)arg3 completion:(CDUnknownBlockType)arg4;\t// IMP=0x000000010038e0c4\n@property(readonly, nonatomic) SBAppView *appView;\n- (id)view;\t// IMP=0x000000010038e03c\n@property(readonly, copy) NSString *description;", "func_src_after": "//\n//     Generated by class-dump 3.5 (64 bit).\n//\n//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.\n//\n\n#import \"SBLayoutElementViewController.h\"\n\n#import \"FBSceneMonitorDelegate.h\"\n\n@class FBSSceneSettingsDiffInspector, FBScene, FBSceneMonitor, NSCountedSet, NSString, SBAppView, SBApplication, UIApplicationSceneClientSettingsDiffInspector;\n\n@interface SBAppContainerViewController : SBLayoutElementViewController <FBSceneMonitorDelegate>\n{\n    SBApplication *_application;\t// 48 = 0x30\n    NSString *_sceneIdentifier;\t// 56 = 0x38\n    FBScene *_scene;\t// 64 = 0x40\n    FBSceneMonitor *_monitor;\t// 72 = 0x48\n    FBSSceneSettingsDiffInspector *_settingsInspector;\t// 80 = 0x50\n    FBSSceneSettingsDiffInspector *_effectiveSettingsInspector;\t// 88 = 0x58\n    UIApplicationSceneClientSettingsDiffInspector *_clientSettingsInspector;\t// 96 = 0x60\n    NSCountedSet *_sideSwitcherHiddenRequesters;\t// 104 = 0x68\n}\n\n@property(copy, nonatomic) NSString *sceneIdentifier; // @synthesize sceneIdentifier=_sceneIdentifier;\n@property(retain, nonatomic) SBApplication *application; // @synthesize application=_application;\n- (void).cxx_destruct;\t// IMP=0x000000010038fd9c\n- (void)sceneMonitor:(id)arg1 pairingStatusDidChangeForExternalSceneIDs:(id)arg2;\t// IMP=0x000000010038fc10\n- (void)sceneMonitor:(id)arg1 sceneClientSettingsDidChangeWithDiff:(id)arg2 transitionContext:(id)arg3;\t// IMP=0x000000010038fbc4\n- (void)sceneMonitor:(id)arg1 effectiveSceneSettingsDidChangeWithDiff:(id)arg2 previousSettings:(id)arg3;\t// IMP=0x000000010038fb78\n- (void)sceneMonitor:(id)arg1 sceneSettingsDidChangeWithDiff:(id)arg2 previousSettings:(id)arg3;\t// IMP=0x000000010038fb2c\n- (void)sceneMonitor:(id)arg1 sceneWasCreated:(id)arg2;\t// IMP=0x000000010038fb1c\n- (void)_updateSideSwitcherGrabber;\t// IMP=0x000000010038fa30\n- (void)viewWillLayoutSubviews;\t// IMP=0x000000010038f9e0\n- (void)loadView;\t// IMP=0x000000010038f978\n- (void)_layoutTransitionDidEnd;\t// IMP=0x000000010038f96c\n- (void)_invalidateSceneDerivedObjects;\t// IMP=0x000000010038f8e4\n- (void)_configureWithScene:(id)arg1;\t// IMP=0x000000010038f1a8\n- (void)_updateEffectiveLayoutElementVisibility;\t// IMP=0x000000010038f0b8\n- (_Bool)isSideSwitcherGrabberHidden;\t// IMP=0x000000010038f088\n- (void)setSideSwitcherGrabberHidden:(_Bool)arg1 forRequester:(id)arg2;\t// IMP=0x000000010038ef94\n- (id)snapshotView;\t// IMP=0x000000010038ef40\n- (void)prepareForReuse;\t// IMP=0x000000010038ed7c\n- (_Bool)supportsReuse;\t// IMP=0x000000010038ed74\n- (void)configureWithEntity:(id)arg1 forElement:(id)arg2 layoutState:(id)arg3;\t// IMP=0x000000010038e210\n@property(readonly, nonatomic) long long displayMode;\n- (void)setDisplayMode:(long long)arg1 options:(unsigned long long)arg2 withAnimationFactory:(id)arg3 completion:(CDUnknownBlockType)arg4;\t// IMP=0x000000010038e0c4\n@property(readonly, nonatomic) SBAppView *appView;\n- (id)view;\t// IMP=0x000000010038e03c\n@property(readonly, copy) NSString *description;", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7888, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* $Id: tif_strip.c,v 1.1 2009-07-27 21:27:50 dave Exp $ */\n\n/*\n * Copyright (c) 1991-1997 Sam Leffler\n * Copyright (c) 1991-1997 Silicon Graphics, Inc.\n *\n * Permission to use, copy, modify, distribute, and sell this software and \n * its documentation for any purpose is hereby granted without fee, provided\n * that (i) the above copyright notices and this permission notice appear in\n * all copies of the software and related documentation, and (ii) the names of\n * Sam Leffler and Silicon Graphics may not be used in any advertising or\n * publicity relating to the software without the specific, prior written\n * permission of Sam Leffler and Silicon Graphics.\n * \n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n * \n * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n * OF THIS SOFTWARE.\n */\n\n/*\n * TIFF Library.\n *\n * Strip-organized Image Support Routines.\n */\n#include \"tiffiop.h\"\n\nstatic uint32\nsummarize(TIFF* tif, size_t summand1, size_t summand2, const char* where)\n{\n\t/*\n\t * XXX: We are using casting to uint32 here, bacause sizeof(size_t)\n\t * may be larger than sizeof(uint32) on 64-bit architectures.\n\t */\n\tuint32\tbytes = summand1 + summand2;\n\n\tif (bytes - summand1 != summand2) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Integer overflow in %s\", where);\n\t\tbytes = 0;\n\t}\n\n\treturn (bytes);\n}\n", "func_src_after": "/* $Id: tif_strip.c,v 1.1 2009-07-27 21:27:50 dave Exp $ */\n\n/*\n * Copyright (c) 1991-1997 Sam Leffler\n * Copyright (c) 1991-1997 Silicon Graphics, Inc.\n *\n * Permission to use, copy, modify, distribute, and sell this software and \n * its documentation for any purpose is hereby granted without fee, provided\n * that (i) the above copyright notices and this permission notice appear in\n * all copies of the software and related documentation, and (ii) the names of\n * Sam Leffler and Silicon Graphics may not be used in any advertising or\n * publicity relating to the software without the specific, prior written\n * permission of Sam Leffler and Silicon Graphics.\n * \n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n * \n * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n * OF THIS SOFTWARE.\n */\n\n/*\n * TIFF Library.\n *\n * Strip-organized Image Support Routines.\n */\n#include \"tiffiop.h\"\n\nstatic uint32\nsummarize(TIFF* tif, size_t summand1, size_t summand2, const char* where)\n{\n\t/*\n\t * XXX: We are using casting to uint32 here, bacause sizeof(size_t)\n\t * may be larger than sizeof(uint32) on 64-bit architectures.\n\t */\n\tuint32\tbytes = summand1 + summand2;\n\n\tif (bytes - summand1 != summand2) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Integer overflow in %s\", where);\n\t\tbytes = 0;\n\t}\n\n\treturn (bytes);\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 7979, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    };\r\n\r\n    public Result authUsuario (String email, String password) {\r\n\r\n        Result result_find = this.findUsuario_byEmail(email);\r\n        Result result\r\n                = new Result(false, null, \"El email y la contraseña no coinciden con la base de datos\");\r\n\r\n        if (result_find.isSuccess()) {\r\n\r\n            String hpassword = Hasher.MD5(password);\r\n            Usuario usuario = (Usuario)result_find.getResult();\r\n            if (hpassword.equals(usuario.getPassword())) {\r\n                //usuario.setPassword(null);\r\n                result = new Result(true, usuario, \"Se autenticó al usuario correctamente\");\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public Result addUsuario (Usuario usuario) {\r\n        Session session = db.session();\r\n        StatementResult result =\r\n                session.run(addQuery, Values.parameters(\r\n                        \"nombre\", usuario.getNombre(),\r\n                        \"apellido\", usuario.getApellido(),\r\n                        \"dni\", usuario.getDni(),\r\n                        \"email\", usuario.getEmail(),\r\n                        \"password\", usuario.getPassword()));\r\n\r\n        int nodesCreated = result.consume().counters().nodesCreated();\r\n        System.out.format(\"nodesCreated: %d\", nodesCreated);\r\n\r\n        session.close();\r\n\r\n\r\n        if (nodesCreated > 1) {\r\n            return new Result(true, usuario, \"Se creó el usuario satisfactoriamente\");\r\n        }else {\r\n            return new Result(false, null, \"No se pudo crear al usuario\");\r\n        }\r\n    }\r\n}\r\n", "func_src_after": "    };\r\n\r\n    public Result authUsuario (String email, String password) {\r\n\r\n        Result result_find = this.findUsuario_byEmail(email);\r\n        Result result\r\n                = new Result(false, null, \"El email y la contraseña no coinciden con la base de datos\");\r\n\r\n        if (result_find.isSuccess()) {\r\n\r\n            String hpassword = Hasher.MD5(password);\r\n            Usuario usuario = (Usuario)result_find.getResult();\r\n            if (hpassword.equals(usuario.getPassword())) {\r\n                //usuario.setPassword(null);\r\n                result = new Result(true, usuario, \"Se autenticó al usuario correctamente\");\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public Result addUsuario (Usuario usuario) {\r\n        Session session = db.session();\r\n        StatementResult result =\r\n                session.run(addQuery, Values.parameters(\r\n                        \"nombre\", usuario.getNombre(),\r\n                        \"apellido\", usuario.getApellido(),\r\n                        \"dni\", usuario.getDni(),\r\n                        \"email\", usuario.getEmail(),\r\n                        \"password\", usuario.getPassword()));\r\n\r\n        int nodesCreated = result.consume().counters().nodesCreated();\r\n        System.out.format(\"nodesCreated: %d\", nodesCreated);\r\n\r\n        session.close();\r\n\r\n\r\n        if (nodesCreated > 1) {\r\n            return new Result(true, usuario, \"Se creó el usuario satisfactoriamente\");\r\n        }else {\r\n            return new Result(false, null, \"No se pudo crear al usuario\");\r\n        }\r\n    }\r\n}\r\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 8103, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\tif (hash < 0) {\r\n\t\t\thash = Math.abs(hash);\r\n\t\t}\r\n\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/**\r\n\t * 根据哈希值以及数组或者队列的长度, 计算应该落在哪里\r\n\t *\r\n\t * @param hash\r\n\t * @param length\r\n\t * @return index下标\r\n\t */\r\n\tpublic static int indexFor(int hash, int length) {\r\n\t\tif (length % 2 == 0) {//leng是偶数的情况\r\n\t\t\treturn hash & (length - 1);\r\n\t\t}\r\n\r\n\t\treturn (hash & 0x7FFFFFFF) % length;\r\n\t}\r\n\r\n\t/**\r\n\t * 使用FNV1_32_HASH算法计算服务器的Hash值\r\n\t * https://blog.csdn.net/u010558660/article/details/52767218\r\n\t */\r\n\tpublic static int fnvHash(String str) {\r\n\t\tfinal int p = 16777619;\r\n\t\tint hash = (int) 2166136261L;\r\n\t\tfor (int i = 0; i < str.length(); i++) {\r\n\t\t\thash = (hash ^ str.charAt(i)) * p;\r\n\t\t}\r\n\t\thash += hash << 13;\r\n\t\thash ^= hash >> 7;\r\n\t\thash += hash << 3;\r\n\t\thash ^= hash >> 17;\r\n\t\thash += hash << 5;\r\n\r\n\t\t// 如果算出来的值为负数则取其绝对值\r\n\t\tif (hash < 0) {\r\n\t\t\thash = Math.abs(hash);\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n}\r\n", "func_src_after": "\t\tif (hash < 0) {\r\n\t\t\thash = Math.abs(hash);\r\n\t\t}\r\n\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/**\r\n\t * 根据哈希值以及数组或者队列的长度, 计算应该落在哪里\r\n\t *\r\n\t * @param hash\r\n\t * @param length\r\n\t * @return index下标\r\n\t */\r\n\tpublic static int indexFor(int hash, int length) {\r\n\t\tif (length % 2 == 0) {//leng是偶数的情况\r\n\t\t\treturn hash & (length - 1);\r\n\t\t}\r\n\r\n\t\treturn (hash & 0x7FFFFFFF) % length;\r\n\t}\r\n\r\n\t/**\r\n\t * 使用FNV1_32_HASH算法计算服务器的Hash值\r\n\t * https://blog.csdn.net/u010558660/article/details/52767218\r\n\t */\r\n\tpublic static int fnvHash(String str) {\r\n\t\tfinal int p = 16777619;\r\n\t\tint hash = (int) 2166136261L;\r\n\t\tfor (int i = 0; i < str.length(); i++) {\r\n\t\t\thash = (hash ^ str.charAt(i)) * p;\r\n\t\t}\r\n\t\thash += hash << 13;\r\n\t\thash ^= hash >> 7;\r\n\t\thash += hash << 3;\r\n\t\thash ^= hash >> 17;\r\n\t\thash += hash << 5;\r\n\r\n\t\t// 如果算出来的值为负数则取其绝对值\r\n\t\tif (hash < 0) {\r\n\t\t\thash = Math.abs(hash);\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n}\r\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 8341, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import React from 'react';\nimport { mount } from 'enzyme';\nimport { Provider } from 'react-redux';\nimport MockStore from 'redux-mock-store';\nimport { spy, stub } from 'sinon';\nimport { MemoryRouter } from 'react-router-dom';\n\nimport { PinboardPane } from 'components/common/preview-pane/panes';\nimport StaticSocialGraphContainer from 'containers/pinboard-admin-page/static-social-graph-container';\nimport SocialGraph from 'components/common/animated-social-graph/social-graph';\nimport {\n  ListWidget,\n  OneLineListWidget,\n  TitleWidget,\n  NewWidgetWrapper,\n} from 'components/common/preview-pane/widgets';\nimport styles from 'components/common/preview-pane/panes/pinboard-pane.sass';\n\n\ndescribe('PinboardPane component', function () {\n  it('should render correctly', function () {\n    const store = MockStore()({\n      pinboardAdminPage: {\n        graphData: {\n          data: {},\n          requesting: false,\n        },\n      },\n    });\n\n    const recentOfficers = [\n      {\n        count: 2,\n        id: 5200,\n        name: 'Thomas Connor',\n        radarAxes: [\n          {\n            axis: 'Use of Force Reports',\n            value: 64.3694,\n          },\n          {\n            axis: 'Officer Allegations',\n            value: 99.8056,\n          },\n          {\n            axis: 'Civilian Allegations',\n            value: 99.9778,\n          },\n\n        ],", "func_src_after": "import React from 'react';\nimport { mount } from 'enzyme';\nimport { Provider } from 'react-redux';\nimport MockStore from 'redux-mock-store';\nimport { spy, stub } from 'sinon';\nimport { MemoryRouter } from 'react-router-dom';\n\nimport { PinboardPane } from 'components/common/preview-pane/panes';\nimport StaticSocialGraphContainer from 'containers/pinboard-admin-page/static-social-graph-container';\nimport SocialGraph from 'components/common/animated-social-graph/social-graph';\nimport {\n  ListWidget,\n  OneLineListWidget,\n  TitleWidget,\n  NewWidgetWrapper,\n} from 'components/common/preview-pane/widgets';\nimport styles from 'components/common/preview-pane/panes/pinboard-pane.sass';\n\n\ndescribe('PinboardPane component', function () {\n  it('should render correctly', function () {\n    const store = MockStore()({\n      pinboardAdminPage: {\n        graphData: {\n          data: {},\n          requesting: false,\n        },\n      },\n    });\n\n    const recentOfficers = [\n      {\n        count: 2,\n        id: 5200,\n        name: 'Thomas Connor',\n        radarAxes: [\n          {\n            axis: 'Use of Force Reports',\n            value: 64.3694,\n          },\n          {\n            axis: 'Officer Allegations',\n            value: 99.8056,\n          },\n          {\n            axis: 'Civilian Allegations',\n            value: 99.9778,\n          },\n\n        ],", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 8353, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\tname: name,\n\t\temail: email,\n\t\tpassword: pwd,\n\t\taddress: add\n\t}\n\t$.ajax({\n\t\turl: baseurl + \"/reg\",\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Cache-Control': null,\n\t\t\t'X-Requested-With': null,\n\t\t},\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tdata: JSON.stringify(payload),\n\t\tsuccess: function (result) {\n\t\t\tconsole.log(\"sucessfully register\")\n\t\t\t// console.log(result);\n\t\t\tif (result.status == true) {\n\t\t\t\talertify.notify(result.msg, 'success', 5, function () {\n\t\t\t\t\tconsole.log('dismissed');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\twindow.location.href = \"./newlogin.html\"\n\t\t\t\t\t}, 2000)\n\t\t\t\t});\n\n\t\t\t}\n\t\t\t// here do the validation \n\t\t}\n\t});\n}\n\nfunction login() {\n\tlet name = document.getElementById(\"lname\").value;\n\tlet pwd = document.getElementById(\"lpwd\").value;\n\tlet payload = {\n\t\tName: name,\n\t\tPwd: pwd\n\t}\n\t$.ajax({\n\t\turl: baseurl + \"/login\",\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Cache-Control': null,\n\t\t\t'X-Requested-With': null,\n\t\t},\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tdata: JSON.stringify(payload),\n\t\tsuccess: function (result) {", "func_src_after": "\t\tname: name,\n\t\temail: email,\n\t\tpassword: pwd,\n\t\taddress: add\n\t}\n\t$.ajax({\n\t\turl: baseurl + \"/reg\",\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Cache-Control': null,\n\t\t\t'X-Requested-With': null,\n\t\t},\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tdata: JSON.stringify(payload),\n\t\tsuccess: function (result) {\n\t\t\tconsole.log(\"sucessfully register\")\n\t\t\t// console.log(result);\n\t\t\tif (result.status == true) {\n\t\t\t\talertify.notify(result.msg, 'success', 5, function () {\n\t\t\t\t\tconsole.log('dismissed');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\twindow.location.href = \"./newlogin.html\"\n\t\t\t\t\t}, 2000)\n\t\t\t\t});\n\n\t\t\t}\n\t\t\t// here do the validation \n\t\t}\n\t});\n}\n\nfunction login() {\n\tlet name = document.getElementById(\"lname\").value;\n\tlet pwd = document.getElementById(\"lpwd\").value;\n\tlet payload = {\n\t\tName: name,\n\t\tPwd: pwd\n\t}\n\t$.ajax({\n\t\turl: baseurl + \"/login\",\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Cache-Control': null,\n\t\t\t'X-Requested-With': null,\n\t\t},\n\t\tdataType: 'json',\n\t\tcontentType: 'application/json',\n\t\tdata: JSON.stringify(payload),\n\t\tsuccess: function (result) {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 8373, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      var messageObject = {\n        'clientId': clientId,\n        'username': username,\n        'content': message,\n        'date': Date.now()\n      };\n      WebSocketService.send(destination, {}, JSON.stringify(messageObject));\n    }\n  }\n\n  function setUsername(user) {\n    console.log(user);\n    if (angular.isDefined(user)) {\n      vm.username = user;\n\n      // ToDo nur so eine Idee, könnte auch weg ... landet nicht in der Queue\n      vm.messages = [];\n      pushWelcomeMessage();\n    }\n  }\n\n  function generateUUID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  function pushRegisterMessage() {\n    // ToDo nur so eine Idee, könnte auch weg ... landet nicht in der Queue\n    vm.messages.push({\n      'clientId': clientId,\n      'username': vm.chatSettings.botname,\n      'content': 'Wie möchteste heißn?',\n      'date': Date.now(),\n      'systemMsg': true\n    });\n  }\n\n  function pushWelcomeMessage() {\n    // ToDo nur so eine Idee, könnte auch weg ... landet nicht in der Queue\n    vm.messages.push({\n      'clientId': clientId,\n      'username': vm.chatSettings.botname,\n      'content': 'Welcome ' + vm.username + ' ...',\n      'date': Date.now(),\n      'systemMsg': true", "func_src_after": "      var messageObject = {\n        'clientId': clientId,\n        'username': username,\n        'content': message,\n        'date': Date.now()\n      };\n      WebSocketService.send(destination, {}, JSON.stringify(messageObject));\n    }\n  }\n\n  function setUsername(user) {\n    console.log(user);\n    if (angular.isDefined(user)) {\n      vm.username = user;\n\n      // ToDo nur so eine Idee, könnte auch weg ... landet nicht in der Queue\n      vm.messages = [];\n      pushWelcomeMessage();\n    }\n  }\n\n  function generateUUID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  function pushRegisterMessage() {\n    // ToDo nur so eine Idee, könnte auch weg ... landet nicht in der Queue\n    vm.messages.push({\n      'clientId': clientId,\n      'username': vm.chatSettings.botname,\n      'content': 'Wie möchteste heißn?',\n      'date': Date.now(),\n      'systemMsg': true\n    });\n  }\n\n  function pushWelcomeMessage() {\n    // ToDo nur so eine Idee, könnte auch weg ... landet nicht in der Queue\n    vm.messages.push({\n      'clientId': clientId,\n      'username': vm.chatSettings.botname,\n      'content': 'Welcome ' + vm.username + ' ...',\n      'date': Date.now(),\n      'systemMsg': true", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 8454, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      data.SSHPublicKeys.reduce((ids, key) => {\n        if (key.Status === 'Active') return [...ids, key.SSHPublicKeyId]\n        return ids\n      }, [])\n    )\n}\n\n/**\n * Retrievs the public SSH key of the user and key\n *\n * @param {string} userName User name\n * @param {string} keyID Key ID\n * @returns {Promise<string>} Resolves with the public SSH key\n */\nfunction getSSHPublicKey(userName, keyID) {\n  return IAM.getSSHPublicKey({\n    Encoding: 'SSH',\n    UserName: userName,\n    SSHPublicKeyId: keyID\n  })\n    .promise()\n    .then(data => data.SSHPublicKey.SSHPublicKeyBody)\n}\n\n/**\n * Retrievs the public SSH keys of the user\n *\n * @param {string} userName User name\n * @returns {Promise<Array>} Resolves with the public SSH keys\n */\nfunction getSSHPublicKeys(userName) {\n  return getSSHPublicKeyIDs(userName).then(keyIDs => {\n    return Promise.all(keyIDs.map(keyID => getSSHPublicKey(userName, keyID)))\n  })\n}\n\n/**\n * Retrievs the public SSH keys of the group users\n *\n * @param {string} group User group\n * @returns {Promise<Array>} Resolves with the public SSH keys\n */\nfunction getGroupSSHPublicKeys(group) {\n  return getGroupUsers(group)\n    .then(users => {\n      // eslint-disable-next-line no-console\n      console.log('Users:', JSON.stringify(users))\n      return Promise.all(users.map(userName => getSSHPublicKeys(userName)))\n    })\n    .then(keySets =>", "func_src_after": "      data.SSHPublicKeys.reduce((ids, key) => {\n        if (key.Status === 'Active') return [...ids, key.SSHPublicKeyId]\n        return ids\n      }, [])\n    )\n}\n\n/**\n * Retrievs the public SSH key of the user and key\n *\n * @param {string} userName User name\n * @param {string} keyID Key ID\n * @returns {Promise<string>} Resolves with the public SSH key\n */\nfunction getSSHPublicKey(userName, keyID) {\n  return IAM.getSSHPublicKey({\n    Encoding: 'SSH',\n    UserName: userName,\n    SSHPublicKeyId: keyID\n  })\n    .promise()\n    .then(data => data.SSHPublicKey.SSHPublicKeyBody)\n}\n\n/**\n * Retrievs the public SSH keys of the user\n *\n * @param {string} userName User name\n * @returns {Promise<Array>} Resolves with the public SSH keys\n */\nfunction getSSHPublicKeys(userName) {\n  return getSSHPublicKeyIDs(userName).then(keyIDs => {\n    return Promise.all(keyIDs.map(keyID => getSSHPublicKey(userName, keyID)))\n  })\n}\n\n/**\n * Retrievs the public SSH keys of the group users\n *\n * @param {string} group User group\n * @returns {Promise<Array>} Resolves with the public SSH keys\n */\nfunction getGroupSSHPublicKeys(group) {\n  return getGroupUsers(group)\n    .then(users => {\n      // eslint-disable-next-line no-console\n      console.log('Users:', JSON.stringify(users))\n      return Promise.all(users.map(userName => getSSHPublicKeys(userName)))\n    })\n    .then(keySets =>", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 8821, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\ndeclare(strict_types=1);\n\nnamespace snuze\\Persistence\\MySQL;\n\nuse \\snuze\\Persistence\\Interfaces\\StorageProviderInterface;\n\n/**\n * This is the MySQL storage provider class. It provides the functionality\n * required for Snuze to talk to a MySQL database via PDO.\n *\n * If you want to develop your own Snuze storage provider, looking here is a\n * good place to start. Your storage provider needs to:\n *\n *  * Extend AbstractStorageProvider\n *  * Implement StorageProviderInterface and its methods\n *  * Establish communication with, write to, and read from the storage facility\n *\n * *****************************************************************************\n * This file is part of Snuze, a PHP client for the Reddit API.\n * Copyright 2019 Shaun Cummiskey <shaun@shaunc.com> <https://shaunc.com/>\n * Repository: <https://github.com/snuze/snuze/>\n * Documentation: <https://snuze.shaunc.com/>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass StorageProvider extends \\snuze\\Persistence\\AbstractStorageProvider implements StorageProviderInterface\n{\n\n    /**\n     * PHP extensions required by this storage provider\n     */\n    const REQUIRED_EXTS = ['pdo_mysql'];\n\n    /**\n     * The directory containing .sql DDL files that define the base MySQL\n     * schema and the inter-version patches.\n     *\n     * This is specific to the MySQL storage provider. If implementing your", "func_src_after": "<?php\n\ndeclare(strict_types=1);\n\nnamespace snuze\\Persistence\\MySQL;\n\nuse \\snuze\\Persistence\\Interfaces\\StorageProviderInterface;\n\n/**\n * This is the MySQL storage provider class. It provides the functionality\n * required for Snuze to talk to a MySQL database via PDO.\n *\n * If you want to develop your own Snuze storage provider, looking here is a\n * good place to start. Your storage provider needs to:\n *\n *  * Extend AbstractStorageProvider\n *  * Implement StorageProviderInterface and its methods\n *  * Establish communication with, write to, and read from the storage facility\n *\n * *****************************************************************************\n * This file is part of Snuze, a PHP client for the Reddit API.\n * Copyright 2019 Shaun Cummiskey <<EMAIL>> <https://shaunc.com/>\n * Repository: <https://github.com/snuze/snuze/>\n * Documentation: <https://snuze.shaunc.com/>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass StorageProvider extends \\snuze\\Persistence\\AbstractStorageProvider implements StorageProviderInterface\n{\n\n    /**\n     * PHP extensions required by this storage provider\n     */\n    const REQUIRED_EXTS = ['pdo_mysql'];\n\n    /**\n     * The directory containing .sql DDL files that define the base MySQL\n     * schema and the inter-version patches.\n     *\n     * This is specific to the MySQL storage provider. If implementing your", "line_changes": {"deleted": [{"line_no": 22, "char_start": 730, "char_end": 805, "line": " * Copyright 2019 Shaun Cummiskey <shaun@shaunc.com> <https://shaunc.com/>\n"}], "added": [{"line_no": 23, "char_start": 730, "char_end": 796, "line": " * Copyright 2019 Shaun Cummiskey <<EMAIL>> <https://shaunc.com/>\n"}]}, "char_changes": {"deleted": [{"char_start": 730, "char_end": 805, "chars": " * Copyright 2019 Shaun Cummiskey <shaun@shaunc.com> <https://shaunc.com/>\n"}], "added": [{"char_start": 730, "char_end": 796, "chars": " * Copyright 2019 Shaun Cummiskey <<EMAIL>> <https://shaunc.com/>\n"}]}}
{"func_name": 8910, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nnamespace App\\Models;\n\nuse CodeIgniter\\Model;\n\nclass admin_penjadwalansidang_ta_model extends Model\n{\n    protected $table = 'penjadwalan_sidang_ta';\n    protected $primaryKey = 'id_jadwal_ta';\n    protected $allowedFields = ['tanggal_sidang_ta', 'tempat_sidang_ta', 'penguji_1', 'penguji_2', 'status_penjadwalan_kaprodi_ta', 'jam_sidang_ta'];\n\n\n\n\n\n    // -----------------------------SIDANG TUGAS AKHIR PENJADWALAN---------------------\n    public function get_jadwalsidangta1($data = false)\n    {\n        if ($data == false) { // $where = \"acara_sidang='sidang tugas akhir'\";\n            return $this->db->table('penjadwalan_sidang_ta')\n                ->join('bimbingan_ta', 'bimbingan_ta.id_bimbingan_ta = penjadwalan_sidang_ta.id_bimbingan_ta')\n                ->join('seminar_proposal', 'seminar_proposal.id_seminar = bimbingan_ta.id_seminar')\n                ->join('penjadwalan_sidang', 'penjadwalan_sidang.id_jadwal = seminar_proposal.id_jadwal')\n                ->join('bimbingan', 'bimbingan.id_bimbingan = penjadwalan_sidang.id_bimbingan')\n                ->join('pengajuan_judul', 'pengajuan_judul.id_pengajuan = bimbingan.id_pengajuan')\n                ->join('mahasiswa', 'mahasiswa.id_mhs = pengajuan_judul.id_mhs')\n                ->join('data_akademik', 'data_akademik.id_dataakademik = mahasiswa.id_dataakademik')\n                // --------------tidak memerlukan dosen penguji-------\n                // --------------karena penguji =null(belum di inputkan oleh kaprodi)-------\n                ->where(['status_penjadwalan_kaprodi_ta' => 'belum terjadwal'])\n                ->where(['data_akademik.status' => 'aktif'])\n                ->get()->getResultArray();\n        }\n        return $this->db->table('penjadwalan_sidang_ta')\n            ->join('bimbingan_ta', 'bimbingan_ta.id_bimbingan_ta = penjadwalan_sidang_ta.id_bimbingan_ta')\n            ->join('seminar_proposal', 'seminar_proposal.id_seminar = bimbingan_ta.id_seminar')\n            ->join('penjadwalan_sidang', 'penjadwalan_sidang.id_jadwal = seminar_proposal.id_jadwal')\n            ->join('bimbingan', 'bimbingan.id_bimbingan = penjadwalan_sidang.id_bimbingan')\n            ->join('pengajuan_judul', 'pengajuan_judul.id_pengajuan = bimbingan.id_pengajuan')\n            ->join('mahasiswa', 'mahasiswa.id_mhs = pengajuan_judul.id_mhs')\n\n            // =======penguji1======\n            // ->join('dosen_penguji', 'dosen_penguji.id_dosenpenguji = penjadwalan_sidang_ta.penguji_1')\n            // ->join('dosen_tugasakhir', 'dosen_tugasakhir.id_dosenta = dosen_penguji.id_dosenta')\n            // ->join('dosen', 'dosen.id_dosen = dosen_tugasakhir.id_dosen')\n\n            ->where(['id_jadwal_ta' => $data])\n\n            ->get()->getResultArray();", "func_src_after": "<?php\n\nnamespace App\\Models;\n\nuse CodeIgniter\\Model;\n\nclass admin_penjadwalansidang_ta_model extends Model\n{\n    protected $table = 'penjadwalan_sidang_ta';\n    protected $primaryKey = 'id_jadwal_ta';\n    protected $allowedFields = ['tanggal_sidang_ta', 'tempat_sidang_ta', 'penguji_1', 'penguji_2', 'status_penjadwalan_kaprodi_ta', 'jam_sidang_ta'];\n\n\n\n\n\n    // -----------------------------SIDANG TUGAS AKHIR PENJADWALAN---------------------\n    public function get_jadwalsidangta1($data = false)\n    {\n        if ($data == false) { // $where = \"acara_sidang='sidang tugas akhir'\";\n            return $this->db->table('penjadwalan_sidang_ta')\n                ->join('bimbingan_ta', 'bimbingan_ta.id_bimbingan_ta = penjadwalan_sidang_ta.id_bimbingan_ta')\n                ->join('seminar_proposal', 'seminar_proposal.id_seminar = bimbingan_ta.id_seminar')\n                ->join('penjadwalan_sidang', 'penjadwalan_sidang.id_jadwal = seminar_proposal.id_jadwal')\n                ->join('bimbingan', 'bimbingan.id_bimbingan = penjadwalan_sidang.id_bimbingan')\n                ->join('pengajuan_judul', 'pengajuan_judul.id_pengajuan = bimbingan.id_pengajuan')\n                ->join('mahasiswa', 'mahasiswa.id_mhs = pengajuan_judul.id_mhs')\n                ->join('data_akademik', 'data_akademik.id_dataakademik = mahasiswa.id_dataakademik')\n                // --------------tidak memerlukan dosen penguji-------\n                // --------------karena penguji =null(belum di inputkan oleh kaprodi)-------\n                ->where(['status_penjadwalan_kaprodi_ta' => 'belum terjadwal'])\n                ->where(['data_akademik.status' => 'aktif'])\n                ->get()->getResultArray();\n        }\n        return $this->db->table('penjadwalan_sidang_ta')\n            ->join('bimbingan_ta', 'bimbingan_ta.id_bimbingan_ta = penjadwalan_sidang_ta.id_bimbingan_ta')\n            ->join('seminar_proposal', 'seminar_proposal.id_seminar = bimbingan_ta.id_seminar')\n            ->join('penjadwalan_sidang', 'penjadwalan_sidang.id_jadwal = seminar_proposal.id_jadwal')\n            ->join('bimbingan', 'bimbingan.id_bimbingan = penjadwalan_sidang.id_bimbingan')\n            ->join('pengajuan_judul', 'pengajuan_judul.id_pengajuan = bimbingan.id_pengajuan')\n            ->join('mahasiswa', 'mahasiswa.id_mhs = pengajuan_judul.id_mhs')\n\n            // =======penguji1======\n            // ->join('dosen_penguji', 'dosen_penguji.id_dosenpenguji = penjadwalan_sidang_ta.penguji_1')\n            // ->join('dosen_tugasakhir', 'dosen_tugasakhir.id_dosenta = dosen_penguji.id_dosenta')\n            // ->join('dosen', 'dosen.id_dosen = dosen_tugasakhir.id_dosen')\n\n            ->where(['id_jadwal_ta' => $data])\n\n            ->get()->getResultArray();", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 8978, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<?php\n\nnamespace App\\Http\\Controllers\\backend;\n\nuse App\\models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Intervention\\Image\\Facades\\Image;\nuse DB;\nuse File;\nclass users extends backendController\n{\n    public function __construct(User $model)\n    {\n        parent::__construct($model);\n    }\n    //\n    public function index() {\n\n        $users = User::paginate(30);\n        return view('back_end.users.index',compact('users'));\n    }\n   \n    public function create() {\n        return view('back_end.users.create');\n\n    }\n\n    public function store(Request $request){\n        $request->validate([\n            'name' =>  'required|max:200',\n            'phone' => 'required|string',\n            'email' => 'required|max:500',\n            'password' => 'required|max:500',\n            'image' => 'image|mimes:jpeg,png,jpg,gif|',\n            'address'=> 'required|string|max:500',\n            \n        ]);\n\n        $user = new User() ;\n\n\n        if(!is_null($request->image))\n        {\n            $originalImage= $request->file('image');\n            $ext = $originalImage->getClientOriginalExtension();\n            $image ='cover_image' . '_' . time().  '.' . $ext;\n            $thumbnailImage = Image::make($originalImage);\n            $thumbnailImage->save(public_path('uploads/user/'. $image)); \n            $thumbnailImage->resize(150,150);", "func_src_after": "<?php\n\nnamespace App\\Http\\Controllers\\backend;\n\nuse App\\models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Intervention\\Image\\Facades\\Image;\nuse DB;\nuse File;\nclass users extends backendController\n{\n    public function __construct(User $model)\n    {\n        parent::__construct($model);\n    }\n    //\n    public function index() {\n\n        $users = User::paginate(30);\n        return view('back_end.users.index',compact('users'));\n    }\n   \n    public function create() {\n        return view('back_end.users.create');\n\n    }\n\n    public function store(Request $request){\n        $request->validate([\n            'name' =>  'required|max:200',\n            'phone' => 'required|string',\n            'email' => 'required|max:500',\n            'password' => 'required|max:500',\n            'image' => 'image|mimes:jpeg,png,jpg,gif|',\n            'address'=> 'required|string|max:500',\n            \n        ]);\n\n        $user = new User() ;\n\n\n        if(!is_null($request->image))\n        {\n            $originalImage= $request->file('image');\n            $ext = $originalImage->getClientOriginalExtension();\n            $image ='cover_image' . '_' . time().  '.' . $ext;\n            $thumbnailImage = Image::make($originalImage);\n            $thumbnailImage->save(public_path('uploads/user/'. $image)); \n            $thumbnailImage->resize(150,150);", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9024, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    when '--getplurks'\n      getplurks = arg.to_i\n    when '--username'\n      username = arg.to_s\n    when '--private'\n      private = true\n    when '--mine'\n      mine = true\n    when '--responded'\n      responded = true\n    when '--delete'\n      deleteplurk = arg.to_s\n    when '--alerthistory'\n      alerthistory = true\n    when '--addplurk'\n      addplurk = arg.to_s\n    when '--addresponse'\n      addresponse = arg.to_s\n    when '--plurk_id'\n      plurk_id = arg.to_s\n    when '--qual'\n      qualifier = arg.to_s\n    when '--delresponse'\n      delresponse = arg.to_s\n    when '--outfile'\n      outfilename = arg.to_s\n    when '--logout'\n      logout = true\n    when '--fullname'\n      full_name = arg.to_s\n    when '--gender'\n      gender = arg.to_s\n    when '--dateofbirth'\n      date_of_birth = arg.to_s\n    when '--email'\n      email = arg.to_s\n  end\nend\n\nif register\n  loginname = username\nend\n\nif (do_login and loginname and not password) or (register and not password)\n  password = get_password(\"Enter password for #{loginname}: \")\nend\n\nputs \"Debug level is \" + $debug.to_s if $debug > 0\n\n###", "func_src_after": "    when '--getplurks'\n      getplurks = arg.to_i\n    when '--username'\n      username = arg.to_s\n    when '--private'\n      private = true\n    when '--mine'\n      mine = true\n    when '--responded'\n      responded = true\n    when '--delete'\n      deleteplurk = arg.to_s\n    when '--alerthistory'\n      alerthistory = true\n    when '--addplurk'\n      addplurk = arg.to_s\n    when '--addresponse'\n      addresponse = arg.to_s\n    when '--plurk_id'\n      plurk_id = arg.to_s\n    when '--qual'\n      qualifier = arg.to_s\n    when '--delresponse'\n      delresponse = arg.to_s\n    when '--outfile'\n      outfilename = arg.to_s\n    when '--logout'\n      logout = true\n    when '--fullname'\n      full_name = arg.to_s\n    when '--gender'\n      gender = arg.to_s\n    when '--dateofbirth'\n      date_of_birth = arg.to_s\n    when '--email'\n      email = arg.to_s\n  end\nend\n\nif register\n  loginname = username\nend\n\nif (do_login and loginname and not password) or (register and not password)\n  password = get_password(\"Enter password for #{loginname}: \")\nend\n\nputs \"Debug level is \" + $debug.to_s if $debug > 0\n\n###", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9077, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            text \"SPEAK YOUR MIND.\"\n          }\n        }\n      }\n    }\n\n\n    row(class: 'white-container small-12 medium-6 medium-centered large-6 large-centered') {\n      row(class: 'kevin-bio white-container__small') {\n        div(class: 'small-4 medium-3 large-2 columns') {\n          image_tag('kevin-bio.jpg')\n        }\n        div(class: 'small-8 medium-8 large-10 columns') {\n          h2 {\n            text \"Join mymntr Neuroscientist and Brain Guide, \"\n            text \"Dr. Kevin Weiner, as he explores the superpowers of super minds. \"\n            a \"BIO\", class: 'link-copy', \"data-reveal-id\" => \"bioModal-5\"\n          }\n          modal('bioModal-5', 'Dr. Kevin Weiner', 'kevin-bio.jpg') {\n            \"Kevin is a neuroscientist at Stanford University. Kevin has been scanning\nbrains since he was 19. He received his undergraduate degree from Princeton University in\nPsychology and Neuroscience. While at Princeton, he also studied poetry with Linda Gregg.\nHe received his PhD at Stanford University. Kevin is straight outta the Pine Barrens\n(home of the Jersey Devil) in the back woods of New Jersey. Growing up with 15 dogs and\n30 cats, Kevin often thinks that animals are smarter than we think! He is your brain\nguide!\"\n          }\n        }\n      }\n    }\n\n\n    row(class: 'white-container__small medium-11 medium-centered') {\n      column('small-12 mobile-padding') {\n        h1 \"The brain you have is not the brain you are stuck with!\"\n      }\n    }\n\n\n    row(class: 'medium-11 medium-centered mobile-padding') {\n      column('small-12 medium-7 large-7') {\n        div(class: 'flex-video small-margin') {\n          div(id: \"lorne_player\")\n        }\n        div {\n          a \"Lorne Lanning\", class: 'link-copy__small', \"data-reveal-id\" => \"bioModal-1\"\n          p \"Gaming Guru\", class: 'body-caption'\n        }\n        modal('bioModal-1', 'Lorne Lanning', 'kevin-and-lorne.jpg') {\n          \"Lorne is the creator of Oddworld, one of the breakthrough narrative game", "func_src_after": "            text \"SPEAK YOUR MIND.\"\n          }\n        }\n      }\n    }\n\n\n    row(class: 'white-container small-12 medium-6 medium-centered large-6 large-centered') {\n      row(class: 'kevin-bio white-container__small') {\n        div(class: 'small-4 medium-3 large-2 columns') {\n          image_tag('kevin-bio.jpg')\n        }\n        div(class: 'small-8 medium-8 large-10 columns') {\n          h2 {\n            text \"Join mymntr Neuroscientist and Brain Guide, \"\n            text \"Dr. Kevin Weiner, as he explores the superpowers of super minds. \"\n            a \"BIO\", class: 'link-copy', \"data-reveal-id\" => \"bioModal-5\"\n          }\n          modal('bioModal-5', 'Dr. Kevin Weiner', 'kevin-bio.jpg') {\n            \"Kevin is a neuroscientist at Stanford University. Kevin has been scanning\nbrains since he was 19. He received his undergraduate degree from Princeton University in\nPsychology and Neuroscience. While at Princeton, he also studied poetry with Linda Gregg.\nHe received his PhD at Stanford University. Kevin is straight outta the Pine Barrens\n(home of the Jersey Devil) in the back woods of New Jersey. Growing up with 15 dogs and\n30 cats, Kevin often thinks that animals are smarter than we think! He is your brain\nguide!\"\n          }\n        }\n      }\n    }\n\n\n    row(class: 'white-container__small medium-11 medium-centered') {\n      column('small-12 mobile-padding') {\n        h1 \"The brain you have is not the brain you are stuck with!\"\n      }\n    }\n\n\n    row(class: 'medium-11 medium-centered mobile-padding') {\n      column('small-12 medium-7 large-7') {\n        div(class: 'flex-video small-margin') {\n          div(id: \"lorne_player\")\n        }\n        div {\n          a \"Lorne Lanning\", class: 'link-copy__small', \"data-reveal-id\" => \"bioModal-1\"\n          p \"Gaming Guru\", class: 'body-caption'\n        }\n        modal('bioModal-1', 'Lorne Lanning', 'kevin-and-lorne.jpg') {\n          \"Lorne is the creator of Oddworld, one of the breakthrough narrative game", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9115, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    assert carl.follows?(mat)\n    assert mat.followed_by?(carl)\n    assert mat.follows?(carl)\n    assert carl.followed_by?(mat)\n    assert camilo.follows?(carl)\n    assert !carl.follows?(camilo)\n\n    assert_raise Socialization::ArgumentError do\n      john.like!(travolta) # Can't like a Celeb\n    end\n\n    assert_raise Socialization::ArgumentError do\n      john.follow!(kill_bill) # Can't follow a movie\n    end\n\n    # You can even follow or like yourself if your ego is that big.\n    assert john.follow!(john)\n    assert john.like!(john)\n\n    comment = john.comments.create(:body => \"I think Tami and Carl would like this movie!\", :movie_id => pulp.id)\n    comment.mention!(tami)\n    comment.mention!(carl)\n    assert comment.mentions?(carl)\n    assert carl.mentioned_by?(comment)\n    assert comment.mentions?(tami)\n    assert tami.mentioned_by?(comment)\n  end\n\n  def seed\n    @@users    = {}\n    @@celebs   = {}\n    @@movies   = {}\n    @@comments = {}\n\n    @@users[:john]       = User.create :name => 'John Doe'\n    @@users[:jane]       = User.create :name => 'Jane Doe'\n    @@users[:mat]        = User.create :name => 'Mat'\n    @@users[:carl]       = User.create :name => 'Carl'\n    @@users[:camilo]     = User.create :name => 'Camilo'\n    @@users[:tami]       = User.create :name => 'Tami'\n\n    @@movies[:pulp]      = Movie.create :name => 'Pulp Fiction'\n    @@movies[:reservoir] = Movie.create :name => 'Reservoir Dogs'\n    @@movies[:kill_bill] = Movie.create :name => 'Kill Bill'\n\n    @@celebs[:willis]    = Celebrity.create :name => 'Bruce Willis'\n    @@celebs[:travolta]  = Celebrity.create :name => 'John Travolta'\n    @@celebs[:jackson]   = Celebrity.create :name => 'Samuel L. Jackson'\n  end", "func_src_after": "\n    assert carl.follows?(mat)\n    assert mat.followed_by?(carl)\n    assert mat.follows?(carl)\n    assert carl.followed_by?(mat)\n    assert camilo.follows?(carl)\n    assert !carl.follows?(camilo)\n\n    assert_raise Socialization::ArgumentError do\n      john.like!(travolta) # Can't like a Celeb\n    end\n\n    assert_raise Socialization::ArgumentError do\n      john.follow!(kill_bill) # Can't follow a movie\n    end\n\n    # You can even follow or like yourself if your ego is that big.\n    assert john.follow!(john)\n    assert john.like!(john)\n\n    comment = john.comments.create(:body => \"I think Tami and Carl would like this movie!\", :movie_id => pulp.id)\n    comment.mention!(tami)\n    comment.mention!(carl)\n    assert comment.mentions?(carl)\n    assert carl.mentioned_by?(comment)\n    assert comment.mentions?(tami)\n    assert tami.mentioned_by?(comment)\n  end\n\n  def seed\n    @@users    = {}\n    @@celebs   = {}\n    @@movies   = {}\n    @@comments = {}\n\n    @@users[:john]       = User.create :name => 'John Doe'\n    @@users[:jane]       = User.create :name => 'Jane Doe'\n    @@users[:mat]        = User.create :name => 'Mat'\n    @@users[:carl]       = User.create :name => 'Carl'\n    @@users[:camilo]     = User.create :name => 'Camilo'\n    @@users[:tami]       = User.create :name => 'Tami'\n\n    @@movies[:pulp]      = Movie.create :name => 'Pulp Fiction'\n    @@movies[:reservoir] = Movie.create :name => 'Reservoir Dogs'\n    @@movies[:kill_bill] = Movie.create :name => 'Kill Bill'\n\n    @@celebs[:willis]    = Celebrity.create :name => 'Bruce Willis'\n    @@celebs[:travolta]  = Celebrity.create :name => 'John Travolta'\n    @@celebs[:jackson]   = Celebrity.create :name => 'Samuel L. Jackson'\n  end", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9145, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require 'spec_helper'\n\ndescribe Questionaire do\n\n  let(:the_class) do\n    unless Object.const_defined?(\"ExampleQuestionaire\")\n      class ExampleQuestionaire < Questionaire\n        set_table_name \"pss_questionaires\" # allow to run spec\n        TITLE = \"title\"\n        NAME = \"name\"\n        AUTHOR = \"author\"\n        DESCRIPTION = \"description\"\n        FIELDS = [ \"Field1\", \"Field2\" ],\n        SELECTIONS = [ \"Option1\", \"Option2\" ]\n        SELECTION_STARTS = 1\n        attr_accessor :field_1\n        attr_accessor :field_2\n      end\n    end\n    ExampleQuestionaire\n  end\n  let(:the_object) { the_class.new(:identity => Identity.create) }\n\n  context \"when required constants set\" do\n    subject { the_object }\n\n    context \"before save\" do\n      after { subject.save }\n\n      it { subject.should_receive(:correct_empty_fields) }\n    end\n\n    its(:title) { should == ExampleQuestionaire::TITLE }\n\n    its(:name) { should == ExampleQuestionaire::NAME }\n\n    its(:author) { should == ExampleQuestionaire::AUTHOR }\n\n    its(:description) { should == ExampleQuestionaire::DESCRIPTION }\n\n    its(:fields) { should == ExampleQuestionaire::FIELDS }\n\n    its(:selections) { should == ExampleQuestionaire::SELECTIONS }\n\n    its(:selection_starts) { should == ExampleQuestionaire::SELECTION_STARTS }\n\n    its(:selection_options) { should == [[\"1. Option1\", 1], [\"2. Option2\", 2]] }\n  end\n\n  context \"when required constants not set\" do", "func_src_after": "require 'spec_helper'\n\ndescribe Questionaire do\n\n  let(:the_class) do\n    unless Object.const_defined?(\"ExampleQuestionaire\")\n      class ExampleQuestionaire < Questionaire\n        set_table_name \"pss_questionaires\" # allow to run spec\n        TITLE = \"title\"\n        NAME = \"name\"\n        AUTHOR = \"author\"\n        DESCRIPTION = \"description\"\n        FIELDS = [ \"Field1\", \"Field2\" ],\n        SELECTIONS = [ \"Option1\", \"Option2\" ]\n        SELECTION_STARTS = 1\n        attr_accessor :field_1\n        attr_accessor :field_2\n      end\n    end\n    ExampleQuestionaire\n  end\n  let(:the_object) { the_class.new(:identity => Identity.create) }\n\n  context \"when required constants set\" do\n    subject { the_object }\n\n    context \"before save\" do\n      after { subject.save }\n\n      it { subject.should_receive(:correct_empty_fields) }\n    end\n\n    its(:title) { should == ExampleQuestionaire::TITLE }\n\n    its(:name) { should == ExampleQuestionaire::NAME }\n\n    its(:author) { should == ExampleQuestionaire::AUTHOR }\n\n    its(:description) { should == ExampleQuestionaire::DESCRIPTION }\n\n    its(:fields) { should == ExampleQuestionaire::FIELDS }\n\n    its(:selections) { should == ExampleQuestionaire::SELECTIONS }\n\n    its(:selection_starts) { should == ExampleQuestionaire::SELECTION_STARTS }\n\n    its(:selection_options) { should == [[\"1. Option1\", 1], [\"2. Option2\", 2]] }\n  end\n\n  context \"when required constants not set\" do", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9155, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\nclass LocalScraper::CLI\n\ndef  call\n\n  puts \"Welcome to Business Scraper!\"\n\n  make_businesses\n  list_local_businesses\n  get_business_number\n  #add_attributes_to_businesses\n\n\nend\n\ndef make_businesses\nLocalScraper::Scraper.scrape_businesses\n\n@businesses = LocalScraper::Business.all\n\nend\n\ndef list_local_businesses\n#list each busines with a number\nputs \"Choose a local busines to see it's details\"\n@businesses.each_with_index { |busines, index|\n\nputs \"#{index +1}. #{busines.name}\"\n}\n#binding.pry\nend\n\ndef get_business_number\n\n  puts\"Which busines number do you need details for\"\n chosen_business = gets.strip.to_i\n show_business_details_for(chosen_business) if valid_input(chosen_business, @businesses)\n\n  end\n\ndef valid_input(input,data)\n  input.to_i <= data.length && input.to_i >0\n\nend\n\ndef show_business_details_for(chosen_business)\nchosen_business = @businesses[chosen_business -1]\nputs \"Here are the details for #{chosen_business.name}\"\nputs chosen_business.details\nend", "func_src_after": "\nclass LocalScraper::CLI\n\ndef  call\n\n  puts \"Welcome to Business Scraper!\"\n\n  make_businesses\n  list_local_businesses\n  get_business_number\n  #add_attributes_to_businesses\n\n\nend\n\ndef make_businesses\nLocalScraper::Scraper.scrape_businesses\n\n@businesses = LocalScraper::Business.all\n\nend\n\ndef list_local_businesses\n#list each busines with a number\nputs \"Choose a local busines to see it's details\"\n@businesses.each_with_index { |busines, index|\n\nputs \"#{index +1}. #{busines.name}\"\n}\n#binding.pry\nend\n\ndef get_business_number\n\n  puts\"Which busines number do you need details for\"\n chosen_business = gets.strip.to_i\n show_business_details_for(chosen_business) if valid_input(chosen_business, @businesses)\n\n  end\n\ndef valid_input(input,data)\n  input.to_i <= data.length && input.to_i >0\n\nend\n\ndef show_business_details_for(chosen_business)\nchosen_business = @businesses[chosen_business -1]\nputs \"Here are the details for #{chosen_business.name}\"\nputs chosen_business.details\nend", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9156, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      RestClient::Resource.new('https://api.twitch.tv/kraken')\n    end\n\n    def headers\n      {\n        'Accept' => 'application/vnd.twitchtv.v5+json',\n        'Client-ID' => ENV['TWITCH_CLIENT_ID']\n      }\n    end\n  end\nend\n", "func_src_after": "      RestClient::Resource.new('https://api.twitch.tv/kraken')\n    end\n\n    def headers\n      {\n        'Accept' => 'application/vnd.twitchtv.v5+json',\n        'Client-ID' => ENV['TWITCH_CLIENT_ID']\n      }\n    end\n  end\nend\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9204, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "require 'unit_test_helper'\n\nclass RepeatingInvoiceTest < Test::Unit::TestCase\n  include TestHelper\n\n  def setup\n    @client = Xeroizer::OAuth2Application.new(CLIENT_ID, CLIENT_SECRET)\n    mock_api('RepeatingInvoices')\n  end\n\n  context \"GET\" do\n\n    should \"have return repeating invoices\" do\n      repeating_invoices = @client.RepeatingInvoice.all(page: 1)\n\n      assert_equal 1, repeating_invoices.size\n\n      repeating_invoice = repeating_invoices.first\n\n      assert_equal \"PowerDirect\", repeating_invoice.contact_name\n      assert_equal BigDecimal(90), repeating_invoice.total\n      assert_equal true, repeating_invoice.accounts_payable?\n\n      schedule = repeating_invoice.schedule\n\n      assert_equal 1, schedule.period\n      assert_equal 'MONTHLY', schedule.unit\n      assert_equal 10, schedule.due_date\n      assert_equal 'OFFOLLOWINGMONTH', schedule.due_date_type\n      assert_equal Date.new(2013,1,21), schedule.start_date\n      assert_equal Date.new(2014,3,23), schedule.next_scheduled_date\n    end\n\n  end\n\nend\n", "func_src_after": "require 'unit_test_helper'\n\nclass RepeatingInvoiceTest < Test::Unit::TestCase\n  include TestHelper\n\n  def setup\n    @client = Xeroizer::OAuth2Application.new(CLIENT_ID, CLIENT_SECRET)\n    mock_api('RepeatingInvoices')\n  end\n\n  context \"GET\" do\n\n    should \"have return repeating invoices\" do\n      repeating_invoices = @client.RepeatingInvoice.all(page: 1)\n\n      assert_equal 1, repeating_invoices.size\n\n      repeating_invoice = repeating_invoices.first\n\n      assert_equal \"PowerDirect\", repeating_invoice.contact_name\n      assert_equal BigDecimal(90), repeating_invoice.total\n      assert_equal true, repeating_invoice.accounts_payable?\n\n      schedule = repeating_invoice.schedule\n\n      assert_equal 1, schedule.period\n      assert_equal 'MONTHLY', schedule.unit\n      assert_equal 10, schedule.due_date\n      assert_equal 'OFFOLLOWINGMONTH', schedule.due_date_type\n      assert_equal Date.new(2013,1,21), schedule.start_date\n      assert_equal Date.new(2014,3,23), schedule.next_scheduled_date\n    end\n\n  end\n\nend\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9214, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# frozen_string_literal: true\n\nrequire 'slack-ruby-client'\n\nmodule Dokata\n  module Logger\n    # slack通知をまとめてる。\n    class SlackNotifier\n      def initialize(config)\n        @config = config\n      end\n\n      # infoに相当するslack通知\n      def good_message(message)\n        post_message(message, :good, :info)\n      end\n\n      # warnに相当するslack通知\n      def warn_message(message, exception = nil)\n        message_with_exception = get_message_with_exception(message, exception)\n        post_message(message_with_exception, :warning, :warn)\n      end\n\n      # errorに相当するslack通知\n      def danger_message(message, exception = nil)\n        message_with_exception = get_message_with_exception(message, exception)\n        post_message(message_with_exception, :danger, :error)\n      end\n\n      private\n\n      def get_message_with_exception(message, exception = nil)\n        if exception.present? && exception.backtrace.present?\n          %W[\n            #{message}\n            #{exception.inspect}\n            #{exception.backtrace.join(\"\\n\")}\n          ].join(\"\\n\")\n        else\n          message\n        end\n      end\n\n      def post_message(message, color, logger_level)\n        if @config[:channel].present? && is_logging?(logger_level, @config[:level])\n          options = {\n            channel: @config[:channel],\n            username: @config[:username],\n            icon_url: @config[:icon_url],\n            attachments: [{ color: color, title: @config[:title], text: message }]", "func_src_after": "# frozen_string_literal: true\n\nrequire 'slack-ruby-client'\n\nmodule Dokata\n  module Logger\n    # slack通知をまとめてる。\n    class SlackNotifier\n      def initialize(config)\n        @config = config\n      end\n\n      # infoに相当するslack通知\n      def good_message(message)\n        post_message(message, :good, :info)\n      end\n\n      # warnに相当するslack通知\n      def warn_message(message, exception = nil)\n        message_with_exception = get_message_with_exception(message, exception)\n        post_message(message_with_exception, :warning, :warn)\n      end\n\n      # errorに相当するslack通知\n      def danger_message(message, exception = nil)\n        message_with_exception = get_message_with_exception(message, exception)\n        post_message(message_with_exception, :danger, :error)\n      end\n\n      private\n\n      def get_message_with_exception(message, exception = nil)\n        if exception.present? && exception.backtrace.present?\n          %W[\n            #{message}\n            #{exception.inspect}\n            #{exception.backtrace.join(\"\\n\")}\n          ].join(\"\\n\")\n        else\n          message\n        end\n      end\n\n      def post_message(message, color, logger_level)\n        if @config[:channel].present? && is_logging?(logger_level, @config[:level])\n          options = {\n            channel: @config[:channel],\n            username: @config[:username],\n            icon_url: @config[:icon_url],\n            attachments: [{ color: color, title: @config[:title], text: message }]", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9219, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  @stylist = Stylist.find(id)\n  @stylist.update({:name => name})\n  erb(:stylist)\nend\n\nget('/clients') do\n  @all_stylists = Stylist.all\n  @all_clients = Client.all\n  erb(:client_list)\nend\n\npost('/clients') do\n  @all_stylists = Stylist.all\n  @all_clients = Client.all\n  new_client = Client.new({:id => nil, :name => params.fetch('new_client'), :stylist_id => params.fetch('list_id').to_i})\n  new_client.save\n  @all_clients = Client.all\n  erb(:client_list)\nend\n\nget('/client_info/:id') do\n  @all_clients = Client.all\n  client_id = params.fetch('id').to_i\n  @client = Client.find(client_id)\n  stylist_id = @client.stylist_id.to_i\n  @stylist = Stylist.find(stylist_id)\n  erb(:client)\nend\n\ndelete('/client_info/:id') do\n  client_id = params.fetch('id').to_i\n  @client = Client.find(client_id)\n  @client.delete_client\n  @all_clients = Client.all\n  erb(:client_list)\nend\n\npatch('/client_info/:id') do\n  name = params.fetch('name')\n  @client = Client.find(params.fetch(\"id\").to_i())\n  @client.update(:name => name)\n  stylist_id = @client.stylist_id.to_i\n  @stylist = Stylist.find(stylist_id)\n  erb(:client)\n\nend\n", "func_src_after": "  @stylist = Stylist.find(id)\n  @stylist.update({:name => name})\n  erb(:stylist)\nend\n\nget('/clients') do\n  @all_stylists = Stylist.all\n  @all_clients = Client.all\n  erb(:client_list)\nend\n\npost('/clients') do\n  @all_stylists = Stylist.all\n  @all_clients = Client.all\n  new_client = Client.new({:id => nil, :name => params.fetch('new_client'), :stylist_id => params.fetch('list_id').to_i})\n  new_client.save\n  @all_clients = Client.all\n  erb(:client_list)\nend\n\nget('/client_info/:id') do\n  @all_clients = Client.all\n  client_id = params.fetch('id').to_i\n  @client = Client.find(client_id)\n  stylist_id = @client.stylist_id.to_i\n  @stylist = Stylist.find(stylist_id)\n  erb(:client)\nend\n\ndelete('/client_info/:id') do\n  client_id = params.fetch('id').to_i\n  @client = Client.find(client_id)\n  @client.delete_client\n  @all_clients = Client.all\n  erb(:client_list)\nend\n\npatch('/client_info/:id') do\n  name = params.fetch('name')\n  @client = Client.find(params.fetch(\"id\").to_i())\n  @client.update(:name => name)\n  stylist_id = @client.stylist_id.to_i\n  @stylist = Stylist.find(stylist_id)\n  erb(:client)\n\nend\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9316, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.18\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.17\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.16\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.15\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.14\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.13\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.12\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",", "func_src_after": "      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.18\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.17\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.16\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.15\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"ufw\", \">= 0.6.1\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.14\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.13\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",\n    :version=>\"0.0.12\",\n    :dependencies=>\n     [[\"mysql\", \">= 1.2.0\"],\n      [\"database\", \">= 1.0.0\"],\n      [\"apache2\", \">= 0.0.0\"]]},\n   {:name=>\"zabbix\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9321, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Pod::Spec.new do |s|\n  s.name             = 'ParseLiveQuery'\n  s.version          = '2.7.1'\n  s.license          =  { :type => 'BSD' }\n  s.summary          = 'Allows for subscriptions to queries in conjunction with parse-server.'\n  s.homepage         = 'http://parseplatform.org'\n  s.social_media_url = 'https://twitter.com/ParsePlatform'\n  s.authors          = { 'Parse Community' => 'info@parseplatform.org', 'Richard Ross' => 'richardross@fb.com', 'Nikita Lutsenko' => 'nlutsenko@me.com', 'Florent Vilmart' => 'florent@flovilmart.com' }\n\n  s.source       = { :git => 'https://github.com/ParsePlatform/ParseLiveQuery-iOS-OSX.git', :tag => s.version.to_s }\n\n  s.requires_arc = true\n\n  s.platform = :ios, :osx, :tvos\n  s.swift_version = '5.0'\n  s.cocoapods_version = '>= 1.4'\n\n  s.ios.deployment_target = '8.0'\n  s.tvos.deployment_target = '10.0'\n  s.osx.deployment_target = '10.12'\n\n  s.source_files = 'Sources/ParseLiveQuery/**/*.{swift,h}'\n  s.module_name = 'ParseLiveQuery'\n\n  s.dependency 'Parse', '~> 1.18.0'\n  s.dependency 'Bolts-Swift', '~> 1.5.0'\n  s.dependency 'Starscream', '3.1.0'\n\nend\n", "func_src_after": "Pod::Spec.new do |s|\n  s.name             = 'ParseLiveQuery'\n  s.version          = '2.7.1'\n  s.license          =  { :type => 'BSD' }\n  s.summary          = 'Allows for subscriptions to queries in conjunction with parse-server.'\n  s.homepage         = 'http://parseplatform.org'\n  s.social_media_url = 'https://twitter.com/ParsePlatform'\n  s.authors          = { 'Parse Community' => '<EMAIL>', 'Richard Ross' => '<EMAIL>', 'Nikita Lutsenko' => '<EMAIL>', 'Florent Vilmart' => '<EMAIL>' }\n\n  s.source       = { :git => 'https://github.com/ParsePlatform/ParseLiveQuery-iOS-OSX.git', :tag => s.version.to_s }\n\n  s.requires_arc = true\n\n  s.platform = :ios, :osx, :tvos\n  s.swift_version = '5.0'\n  s.cocoapods_version = '>= 1.4'\n\n  s.ios.deployment_target = '8.0'\n  s.tvos.deployment_target = '10.0'\n  s.osx.deployment_target = '10.12'\n\n  s.source_files = 'Sources/ParseLiveQuery/**/*.{swift,h}'\n  s.module_name = 'ParseLiveQuery'\n\n  s.dependency 'Parse', '~> 1.18.0'\n  s.dependency 'Bolts-Swift', '~> 1.5.0'\n  s.dependency 'Starscream', '3.1.0'\n\nend\n", "line_changes": {"deleted": [{"line_no": 8, "char_start": 339, "char_end": 540, "line": "  s.authors          = { 'Parse Community' => 'info@parseplatform.org', 'Richard Ross' => 'richardross@fb.com', 'Nikita Lutsenko' => 'nlutsenko@me.com', 'Florent Vilmart' => 'florent@flovilmart.com' }\n"}], "added": [{"line_no": 9, "char_start": 339, "char_end": 490, "line": "  s.authors          = { 'Parse Community' => '<EMAIL>', 'Richard Ross' => '<EMAIL>', 'Nikita Lutsenko' => '<EMAIL>', 'Florent Vilmart' => '<EMAIL>' }\n"}]}, "char_changes": {"deleted": [{"char_start": 339, "char_end": 540, "chars": "  s.authors          = { 'Parse Community' => 'info@parseplatform.org', 'Richard Ross' => 'richardross@fb.com', 'Nikita Lutsenko' => 'nlutsenko@me.com', 'Florent Vilmart' => 'florent@flovilmart.com' }\n"}], "added": [{"char_start": 339, "char_end": 490, "chars": "  s.authors          = { 'Parse Community' => '<EMAIL>', 'Richard Ross' => '<EMAIL>', 'Nikita Lutsenko' => '<EMAIL>', 'Florent Vilmart' => '<EMAIL>' }\n"}]}}
{"func_name": 9350, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\tenvEtcdBin             = \"TEST_ASSET_ETCD\"\n\tenvKubectlBin          = \"TEST_ASSET_KUBECTL\"\n\tenvKubebuilderPath     = \"KUBEBUILDER_ASSETS\"\n\tenvStartTimeout        = \"KUBEBUILDER_CONTROLPLANE_START_TIMEOUT\"\n\tenvStopTimeout         = \"KUBEBUILDER_CONTROLPLANE_STOP_TIMEOUT\"\n\tenvAttachOutput        = \"KUBEBUILDER_ATTACH_CONTROL_PLANE_OUTPUT\"\n\tdefaultKubebuilderPath = \"/usr/local/kubebuilder/bin\"\n\tStartTimeout           = 60\n\tStopTimeout            = 60\n\n\tdefaultKubebuilderControlPlaneStartTimeout = 20 * time.Second\n\tdefaultKubebuilderControlPlaneStopTimeout  = 20 * time.Second\n)\n\n// Default binary path for test framework\nfunc defaultAssetPath(binary string) string {\n\tassetPath := os.Getenv(envKubebuilderPath)\n\tif assetPath == \"\" {\n\t\tassetPath = defaultKubebuilderPath\n\t}\n\treturn filepath.Join(assetPath, binary)\n\n}\n\n// DefaultKubeAPIServerFlags are default flags necessary to bring up apiserver.\nvar DefaultKubeAPIServerFlags = []string{\n\t// Allow tests to run offline, by preventing API server from attempting to\n\t// use default route to determine its --advertise-address\n\t\"--advertise-address=127.0.0.1\",\n\t\"--etcd-servers={{ if .EtcdURL }}{{ .EtcdURL.String }}{{ end }}\",\n\t\"--cert-dir={{ .CertDir }}\",\n\t\"--insecure-port={{ if .URL }}{{ .URL.Port }}{{ end }}\",\n\t\"--insecure-bind-address={{ if .URL }}{{ .URL.Hostname }}{{ end }}\",\n\t\"--secure-port={{ if .SecurePort }}{{ .SecurePort }}{{ end }}\",\n\t\"--admission-control=AlwaysAdmit\",\n\t\"--service-cluster-ip-range=10.0.0.0/24\",\n}\n\n// Environment creates a Kubernetes test environment that will start / stop the Kubernetes control plane and\n// install extension APIs\ntype Environment struct {\n\t// ControlPlane is the ControlPlane including the apiserver and etcd\n\tControlPlane integration.ControlPlane\n\n\t// Config can be used to talk to the apiserver.  It's automatically\n\t// populated if not set using the standard controller-runtime config\n\t// loading.\n\tConfig *rest.Config\n\n\t// CRDInstallOptions are the options for installing CRDs.", "func_src_after": "\tenvEtcdBin             = \"TEST_ASSET_ETCD\"\n\tenvKubectlBin          = \"TEST_ASSET_KUBECTL\"\n\tenvKubebuilderPath     = \"KUBEBUILDER_ASSETS\"\n\tenvStartTimeout        = \"KUBEBUILDER_CONTROLPLANE_START_TIMEOUT\"\n\tenvStopTimeout         = \"KUBEBUILDER_CONTROLPLANE_STOP_TIMEOUT\"\n\tenvAttachOutput        = \"KUBEBUILDER_ATTACH_CONTROL_PLANE_OUTPUT\"\n\tdefaultKubebuilderPath = \"/usr/local/kubebuilder/bin\"\n\tStartTimeout           = 60\n\tStopTimeout            = 60\n\n\tdefaultKubebuilderControlPlaneStartTimeout = 20 * time.Second\n\tdefaultKubebuilderControlPlaneStopTimeout  = 20 * time.Second\n)\n\n// Default binary path for test framework\nfunc defaultAssetPath(binary string) string {\n\tassetPath := os.Getenv(envKubebuilderPath)\n\tif assetPath == \"\" {\n\t\tassetPath = defaultKubebuilderPath\n\t}\n\treturn filepath.Join(assetPath, binary)\n\n}\n\n// DefaultKubeAPIServerFlags are default flags necessary to bring up apiserver.\nvar DefaultKubeAPIServerFlags = []string{\n\t// Allow tests to run offline, by preventing API server from attempting to\n\t// use default route to determine its --advertise-address\n\t\"--advertise-address=127.0.0.1\",\n\t\"--etcd-servers={{ if .EtcdURL }}{{ .EtcdURL.String }}{{ end }}\",\n\t\"--cert-dir={{ .CertDir }}\",\n\t\"--insecure-port={{ if .URL }}{{ .URL.Port }}{{ end }}\",\n\t\"--insecure-bind-address={{ if .URL }}{{ .URL.Hostname }}{{ end }}\",\n\t\"--secure-port={{ if .SecurePort }}{{ .SecurePort }}{{ end }}\",\n\t\"--admission-control=AlwaysAdmit\",\n\t\"--service-cluster-ip-range=<IP-Address>/24\",\n}\n\n// Environment creates a Kubernetes test environment that will start / stop the Kubernetes control plane and\n// install extension APIs\ntype Environment struct {\n\t// ControlPlane is the ControlPlane including the apiserver and etcd\n\tControlPlane integration.ControlPlane\n\n\t// Config can be used to talk to the apiserver.  It's automatically\n\t// populated if not set using the standard controller-runtime config\n\t// loading.\n\tConfig *rest.Config\n\n\t// CRDInstallOptions are the options for installing CRDs.", "line_changes": {"deleted": [{"line_no": 36, "char_start": 1438, "char_end": 1481, "line": "\t\"--service-cluster-ip-range=10.0.0.0/24\",\n"}], "added": [{"line_no": 37, "char_start": 1438, "char_end": 1485, "line": "\t\"--service-cluster-ip-range=<IP-Address>/24\",\n"}]}, "char_changes": {"deleted": [{"char_start": 1438, "char_end": 1481, "chars": "\t\"--service-cluster-ip-range=10.0.0.0/24\",\n"}], "added": [{"char_start": 1438, "char_end": 1485, "chars": "\t\"--service-cluster-ip-range=<IP-Address>/24\",\n"}]}}
{"func_name": 9358, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package state\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/docker/docker/api/types/network\"\n\t\"github.com/docker/docker/api/types\"\n\t\"github.com/docker/docker/client\"\n)\n\nvar (\n\tContainers *containerList\n\tNetworks   *networkList\n)\n\nfunc dockerContainerInspect(ctx context.Context, containerID string) (types.ContainerJSON, error) {\n\tif len(containerID) == 0 {\n\t\treturn types.ContainerJSON{}, fmt.Errorf(\"empty containerID argument\")\n\t}\n\n\tcli, ok := ctx.Value(\"client\").(*client.Client)\n\tif !ok {\n\t\treturn types.ContainerJSON{}, fmt.Errorf(\"could not get docker client from context\")\n\t}\n\n\tcontainerInspect, err := cli.ContainerInspect(ctx, containerID)\n\tif err != nil {\n\t\treturn types.ContainerJSON{}, fmt.Errorf(\"could not inspect container: %v\", err)\n\t}\n\n\treturn containerInspect, nil\n}\n\nfunc dockerContainerInspectAndNetworkEndpoint(ctx context.Context, containerID, networkID string) (types.ContainerJSON, *network.EndpointSettings, error) {\n\tcontainerInspect, err := dockerContainerInspect(ctx, containerID)\n\tif err != nil {\n\t\treturn types.ContainerJSON{}, &network.EndpointSettings{}, err\n\t}\n\n\tfor _, networkEndpoint := range containerInspect.NetworkSettings.Networks {\n\t\tif networkEndpoint.NetworkID == networkID {\n\t\t\treturn containerInspect, networkEndpoint, nil\n\t\t}\n\t}\n\n\treturn types.ContainerJSON{}, &network.EndpointSettings{},\n\t\tfmt.Errorf(\"container is not attached to network: containerID:%s containerName:%s networkID:%s\",\n\t\t\tcontainerID, containerInspect.Name, networkID)\n}", "func_src_after": "package state\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/docker/docker/api/types/network\"\n\t\"github.com/docker/docker/api/types\"\n\t\"github.com/docker/docker/client\"\n)\n\nvar (\n\tContainers *containerList\n\tNetworks   *networkList\n)\n\nfunc dockerContainerInspect(ctx context.Context, containerID string) (types.ContainerJSON, error) {\n\tif len(containerID) == 0 {\n\t\treturn types.ContainerJSON{}, fmt.Errorf(\"empty containerID argument\")\n\t}\n\n\tcli, ok := ctx.Value(\"client\").(*client.Client)\n\tif !ok {\n\t\treturn types.ContainerJSON{}, fmt.Errorf(\"could not get docker client from context\")\n\t}\n\n\tcontainerInspect, err := cli.ContainerInspect(ctx, containerID)\n\tif err != nil {\n\t\treturn types.ContainerJSON{}, fmt.Errorf(\"could not inspect container: %v\", err)\n\t}\n\n\treturn containerInspect, nil\n}\n\nfunc dockerContainerInspectAndNetworkEndpoint(ctx context.Context, containerID, networkID string) (types.ContainerJSON, *network.EndpointSettings, error) {\n\tcontainerInspect, err := dockerContainerInspect(ctx, containerID)\n\tif err != nil {\n\t\treturn types.ContainerJSON{}, &network.EndpointSettings{}, err\n\t}\n\n\tfor _, networkEndpoint := range containerInspect.NetworkSettings.Networks {\n\t\tif networkEndpoint.NetworkID == networkID {\n\t\t\treturn containerInspect, networkEndpoint, nil\n\t\t}\n\t}\n\n\treturn types.ContainerJSON{}, &network.EndpointSettings{},\n\t\tfmt.Errorf(\"container is not attached to network: containerID:%s containerName:%s networkID:%s\",\n\t\t\tcontainerID, containerInspect.Name, networkID)\n}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9359, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package readfds\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\n\t\"github.com/wxio/godna/pb/extensions/store\"\n\t_ \"github.com/wxio/godna/pb/extensions/store\"\n\n\t\"github.com/golang/protobuf/proto\"\n\t\"github.com/golang/protobuf/protoc-gen-go/descriptor\"\n)\n\ntype readfds struct {\n\tSrcDir string `opts:\"mode=arg\" help:\"source directory of file descriptor sets or '-' for stdin\"`\n}\n\nfunc New() *readfds {\n\treturn &readfds{}\n}\n\nfunc (cmd *readfds) Run() error {\n\tvar buf []byte\n\tvar err error\n\tif cmd.SrcDir == \"-\" {\n\t\tbuf, err = ioutil.ReadAll(os.Stdin)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t} else {\n\t\twalkCollect := func(path string, info os.FileInfo, err error) error {\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tif !info.Mode().IsRegular() {\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\tif bb, er := ioutil.ReadFile(path); er != nil {\n\t\t\t\treturn er\n\t\t\t} else {\n\t\t\t\tbuf = append(buf, bb...)\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif err := filepath.Walk(cmd.SrcDir, walkCollect); err != nil {\n\t\t\treturn err\n\t\t}\n\t}", "func_src_after": "package readfds\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\n\t\"github.com/wxio/godna/pb/extensions/store\"\n\t_ \"github.com/wxio/godna/pb/extensions/store\"\n\n\t\"github.com/golang/protobuf/proto\"\n\t\"github.com/golang/protobuf/protoc-gen-go/descriptor\"\n)\n\ntype readfds struct {\n\tSrcDir string `opts:\"mode=arg\" help:\"source directory of file descriptor sets or '-' for stdin\"`\n}\n\nfunc New() *readfds {\n\treturn &readfds{}\n}\n\nfunc (cmd *readfds) Run() error {\n\tvar buf []byte\n\tvar err error\n\tif cmd.SrcDir == \"-\" {\n\t\tbuf, err = ioutil.ReadAll(os.Stdin)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t} else {\n\t\twalkCollect := func(path string, info os.FileInfo, err error) error {\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tif !info.Mode().IsRegular() {\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\tif bb, er := ioutil.ReadFile(path); er != nil {\n\t\t\t\treturn er\n\t\t\t} else {\n\t\t\t\tbuf = append(buf, bb...)\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif err := filepath.Walk(cmd.SrcDir, walkCollect); err != nil {\n\t\t\treturn err\n\t\t}\n\t}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9361, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package jiracmd\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/coryb/figtree\"\n\t\"github.com/coryb/oreo\"\n\n\t\"github.com/go-jira/jira\"\n\t\"github.com/go-jira/jira/jiracli\"\n\t\"github.com/go-jira/jira/jiradata\"\n\tkingpin \"gopkg.in/alecthomas/kingpin.v2\"\n)\n\ntype TransitionOptions struct {\n\tjiracli.CommonOptions `yaml:\",inline\" json:\",inline\" figtree:\",inline\"`\n\tProject               string            `yaml:\"project,omitempty\" json:\"project,omitempty\"`\n\tOverrides             map[string]string `yaml:\"overrides,omitempty\" json:\"overrides,omitempty\"`\n\tTransition            string            `yaml:\"transition,omitempty\" json:\"transition,omitempty\"`\n\tIssue                 string            `yaml:\"issue,omitempty\" json:\"issue,omitempty\"`\n\tResolution            string            `yaml:\"resolution,omitempty\" json:\"resolution,omitempty\"`\n}\n\nfunc CmdTransitionRegistry(transition string) *jiracli.CommandRegistryEntry {\n\topts := TransitionOptions{\n\t\tCommonOptions: jiracli.CommonOptions{\n\t\t\tTemplate: figtree.NewStringOption(\"transition\"),\n\t\t},\n\t\tOverrides: map[string]string{},\n\t}\n\n\thelp := \"Transition issue to given state\"\n\tif transition != \"\" {\n\t\thelp = fmt.Sprintf(\"Transition issue to %s state\", transition)\n\t\topts.SkipEditing = figtree.NewBoolOption(true)\n\t}\n\n\treturn &jiracli.CommandRegistryEntry{\n\t\thelp,\n\t\tfunc(fig *figtree.FigTree, cmd *kingpin.CmdClause) error {\n\t\t\tjiracli.LoadConfigs(cmd, fig, &opts)\n\t\t\tif opts.Transition == \"\" {\n\t\t\t\topts.Transition = transition\n\t\t\t}\n\t\t\treturn CmdTransitionUsage(cmd, &opts)\n\t\t},\n\t\tfunc(o *oreo.Client, globals *jiracli.GlobalOptions) error {\n\t\t\topts.Issue = jiracli.FormatIssue(opts.Issue, opts.Project)\n\t\t\treturn CmdTransition(o, globals, &opts)", "func_src_after": "package jiracmd\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/coryb/figtree\"\n\t\"github.com/coryb/oreo\"\n\n\t\"github.com/go-jira/jira\"\n\t\"github.com/go-jira/jira/jiracli\"\n\t\"github.com/go-jira/jira/jiradata\"\n\tkingpin \"gopkg.in/alecthomas/kingpin.v2\"\n)\n\ntype TransitionOptions struct {\n\tjiracli.CommonOptions `yaml:\",inline\" json:\",inline\" figtree:\",inline\"`\n\tProject               string            `yaml:\"project,omitempty\" json:\"project,omitempty\"`\n\tOverrides             map[string]string `yaml:\"overrides,omitempty\" json:\"overrides,omitempty\"`\n\tTransition            string            `yaml:\"transition,omitempty\" json:\"transition,omitempty\"`\n\tIssue                 string            `yaml:\"issue,omitempty\" json:\"issue,omitempty\"`\n\tResolution            string            `yaml:\"resolution,omitempty\" json:\"resolution,omitempty\"`\n}\n\nfunc CmdTransitionRegistry(transition string) *jiracli.CommandRegistryEntry {\n\topts := TransitionOptions{\n\t\tCommonOptions: jiracli.CommonOptions{\n\t\t\tTemplate: figtree.NewStringOption(\"transition\"),\n\t\t},\n\t\tOverrides: map[string]string{},\n\t}\n\n\thelp := \"Transition issue to given state\"\n\tif transition != \"\" {\n\t\thelp = fmt.Sprintf(\"Transition issue to %s state\", transition)\n\t\topts.SkipEditing = figtree.NewBoolOption(true)\n\t}\n\n\treturn &jiracli.CommandRegistryEntry{\n\t\thelp,\n\t\tfunc(fig *figtree.FigTree, cmd *kingpin.CmdClause) error {\n\t\t\tjiracli.LoadConfigs(cmd, fig, &opts)\n\t\t\tif opts.Transition == \"\" {\n\t\t\t\topts.Transition = transition\n\t\t\t}\n\t\t\treturn CmdTransitionUsage(cmd, &opts)\n\t\t},\n\t\tfunc(o *oreo.Client, globals *jiracli.GlobalOptions) error {\n\t\t\topts.Issue = jiracli.FormatIssue(opts.Issue, opts.Project)\n\t\t\treturn CmdTransition(o, globals, &opts)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9363, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2020 The jackal Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage log\n\nimport (\n\t\"os\"\n\t\"strings\"\n\t\"sync\"\n\n\t\"github.com/jackal-xmpp/runqueue/v2\"\n\t\"github.com/ortuman/jackal/pkg/cluster/instance\"\n\t\"github.com/prometheus/client_golang/prometheus\"\n)\n\n// Level represents log level type.\ntype Level int\n\nconst (\n\t// DebugLevel represents DEBUG log level.\n\tDebugLevel Level = iota\n\n\t// InfoLevel represents INFO log level.\n\tInfoLevel\n\n\t// WarningLevel represents WARNING log level.\n\tWarningLevel\n\n\t// ErrorLevel represents ERROR log level.\n\tErrorLevel\n\n\t// FatalLevel represents FATAL log level.\n\tFatalLevel\n\n\t// OffLevel represents a disabled logger log level.\n\tOffLevel\n)\n\n// String returns logger's level string representation.", "func_src_after": "// Copyright 2020 The jackal Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage log\n\nimport (\n\t\"os\"\n\t\"strings\"\n\t\"sync\"\n\n\t\"github.com/jackal-xmpp/runqueue/v2\"\n\t\"github.com/ortuman/jackal/pkg/cluster/instance\"\n\t\"github.com/prometheus/client_golang/prometheus\"\n)\n\n// Level represents log level type.\ntype Level int\n\nconst (\n\t// DebugLevel represents DEBUG log level.\n\tDebugLevel Level = iota\n\n\t// InfoLevel represents INFO log level.\n\tInfoLevel\n\n\t// WarningLevel represents WARNING log level.\n\tWarningLevel\n\n\t// ErrorLevel represents ERROR log level.\n\tErrorLevel\n\n\t// FatalLevel represents FATAL log level.\n\tFatalLevel\n\n\t// OffLevel represents a disabled logger log level.\n\tOffLevel\n)\n\n// String returns logger's level string representation.", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9370, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package iot\n\nimport (\n    \"encoding/xml\"\n\n    \"github.com/bububa/opentaobao/model\"\n)\n\n/* \n点播url APIResponse\ntaobao.ailab.aicloud.top.device.control.playurl\n\n点播url\n*/\ntype TaobaoAilabAicloudTopDeviceControlPlayurlAPIResponse struct {\n    model.CommonResponse\n    TaobaoAilabAicloudTopDeviceControlPlayurlResponse\n}\n\ntype TaobaoAilabAicloudTopDeviceControlPlayurlResponse struct {\n    XMLName xml.Name `xml:\"ailab_aicloud_top_device_control_playurl_response\"`\n\tRequestId     string         `json:\"request_id,omitempty\" xml:\"request_id,omitempty\"`         // 平台颁发的每次请求访问的唯一标识\n\n    // 业务请求是否成功\n    \n    Model   bool `json:\"model,omitempty\" xml:\"model,omitempty\"`\n\n    \n    // msgCode\n    \n    MsgCode   string `json:\"msg_code,omitempty\" xml:\"msg_code,omitempty\"`\n\n    \n    // msgInfo\n    \n    MsgInfo   string `json:\"msg_info,omitempty\" xml:\"msg_info,omitempty\"`\n\n    \n    // 网络请求是否成功\n    \n    IsSuccess   bool `json:\"is_success,omitempty\" xml:\"is_success,omitempty\"`\n\n    \n}\n", "func_src_after": "package iot\n\nimport (\n    \"encoding/xml\"\n\n    \"github.com/bububa/opentaobao/model\"\n)\n\n/* \n点播url APIResponse\ntaobao.ailab.aicloud.top.device.control.playurl\n\n点播url\n*/\ntype TaobaoAilabAicloudTopDeviceControlPlayurlAPIResponse struct {\n    model.CommonResponse\n    TaobaoAilabAicloudTopDeviceControlPlayurlResponse\n}\n\ntype TaobaoAilabAicloudTopDeviceControlPlayurlResponse struct {\n    XMLName xml.Name `xml:\"ailab_aicloud_top_device_control_playurl_response\"`\n\tRequestId     string         `json:\"request_id,omitempty\" xml:\"request_id,omitempty\"`         // 平台颁发的每次请求访问的唯一标识\n\n    // 业务请求是否成功\n    \n    Model   bool `json:\"model,omitempty\" xml:\"model,omitempty\"`\n\n    \n    // msgCode\n    \n    MsgCode   string `json:\"msg_code,omitempty\" xml:\"msg_code,omitempty\"`\n\n    \n    // msgInfo\n    \n    MsgInfo   string `json:\"msg_info,omitempty\" xml:\"msg_info,omitempty\"`\n\n    \n    // 网络请求是否成功\n    \n    IsSuccess   bool `json:\"is_success,omitempty\" xml:\"is_success,omitempty\"`\n\n    \n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9384, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package orchestrator\n\nimport (\n\t\"context\"\n\n\t\"github.com/stackrox/rox/pkg/logging\"\n\t\"github.com/stackrox/rox/sensor/common/orchestrator\"\n\t\"k8s.io/client-go/informers\"\n\t\"k8s.io/client-go/kubernetes\"\n\tcoreV1Listers \"k8s.io/client-go/listers/core/v1\"\n)\n\nvar (\n\tlog = logging.LoggerForModule()\n)\n\ntype kubernetesOrchestrator struct {\n\tclient     kubernetes.Interface\n\tnodeLister coreV1Listers.NodeLister\n}\n\n// New returns a new kubernetes orchestrator client.\nfunc New(kubernetes kubernetes.Interface) orchestrator.Orchestrator {\n\tsif := informers.NewSharedInformerFactory(kubernetes, 0)\n\tnodeLister := sif.Core().V1().Nodes().Lister()\n\tsif.Start(context.Background().Done())\n\n\treturn &kubernetesOrchestrator{\n\t\tclient:     kubernetes,\n\t\tnodeLister: nodeLister,\n\t}\n}\n\nfunc (k *kubernetesOrchestrator) GetNodeScrapeConfig(nodeName string) (*orchestrator.NodeScrapeConfig, error) {\n\tnode, err := k.nodeLister.Get(nodeName)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\t_, isMasterNode := node.GetLabels()[\"node-role.kubernetes.io/master\"]\n\n\treturn &orchestrator.NodeScrapeConfig{\n\t\tContainerRuntimeVersion: node.Status.NodeInfo.ContainerRuntimeVersion,\n\t\tIsMasterNode:            isMasterNode,\n\t}, nil\n}\n", "func_src_after": "package orchestrator\n\nimport (\n\t\"context\"\n\n\t\"github.com/stackrox/rox/pkg/logging\"\n\t\"github.com/stackrox/rox/sensor/common/orchestrator\"\n\t\"k8s.io/client-go/informers\"\n\t\"k8s.io/client-go/kubernetes\"\n\tcoreV1Listers \"k8s.io/client-go/listers/core/v1\"\n)\n\nvar (\n\tlog = logging.LoggerForModule()\n)\n\ntype kubernetesOrchestrator struct {\n\tclient     kubernetes.Interface\n\tnodeLister coreV1Listers.NodeLister\n}\n\n// New returns a new kubernetes orchestrator client.\nfunc New(kubernetes kubernetes.Interface) orchestrator.Orchestrator {\n\tsif := informers.NewSharedInformerFactory(kubernetes, 0)\n\tnodeLister := sif.Core().V1().Nodes().Lister()\n\tsif.Start(context.Background().Done())\n\n\treturn &kubernetesOrchestrator{\n\t\tclient:     kubernetes,\n\t\tnodeLister: nodeLister,\n\t}\n}\n\nfunc (k *kubernetesOrchestrator) GetNodeScrapeConfig(nodeName string) (*orchestrator.NodeScrapeConfig, error) {\n\tnode, err := k.nodeLister.Get(nodeName)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\t_, isMasterNode := node.GetLabels()[\"node-role.kubernetes.io/master\"]\n\n\treturn &orchestrator.NodeScrapeConfig{\n\t\tContainerRuntimeVersion: node.Status.NodeInfo.ContainerRuntimeVersion,\n\t\tIsMasterNode:            isMasterNode,\n\t}, nil\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9386, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\tassert.NoError(t, err)\n\trequire.True(t, pub1.EqualsTo(pub2))\n\n\t_, err = PublicKeyFromString(\"inv\")\n\tassert.Error(t, err)\n}\n\nfunc TestMarshalingEmptyPublicKey(t *testing.T) {\n\tpb1 := PublicKey{}\n\n\tjs, err := json.Marshal(pb1)\n\tassert.Error(t, err)\n\tvar pb2 PublicKey\n\terr = json.Unmarshal(js, &pb2)\n\tassert.Error(t, err)\n\n\tbs, err := pb1.MarshalCBOR()\n\tassert.Error(t, err)\n\n\tvar pb3 PublicKey\n\terr = pb3.UnmarshalCBOR(bs)\n\tassert.Error(t, err)\n}\n\nfunc TestPublicKeyToAddress(t *testing.T) {\n\taddr, err := AddressFromString(\"fc617c7591b3a1db27281497ce9d57f76faef212\")\n\tassert.NoError(t, err)\n\tpub, err := PublicKeyFromString(\"ccd169a31a7bfa611480072137f77efd8c1cfb0f811957972d15bab4e8c8998ade29d99b03815d3873e57d21e67ce210480270ca0b77698de0623ab1e6a241bd05a00a2e3a5b319c99fa1b9ecb6f53564e4c53dbb8a2b6b46315bf258208f614\")\n\tassert.NoError(t, err)\n\tassert.Equal(t, pub.Address(), addr)\n}\n", "func_src_after": "\tassert.NoError(t, err)\n\trequire.True(t, pub1.EqualsTo(pub2))\n\n\t_, err = PublicKeyFromString(\"inv\")\n\tassert.Error(t, err)\n}\n\nfunc TestMarshalingEmptyPublicKey(t *testing.T) {\n\tpb1 := PublicKey{}\n\n\tjs, err := json.Marshal(pb1)\n\tassert.Error(t, err)\n\tvar pb2 PublicKey\n\terr = json.Unmarshal(js, &pb2)\n\tassert.Error(t, err)\n\n\tbs, err := pb1.MarshalCBOR()\n\tassert.Error(t, err)\n\n\tvar pb3 PublicKey\n\terr = pb3.UnmarshalCBOR(bs)\n\tassert.Error(t, err)\n}\n\nfunc TestPublicKeyToAddress(t *testing.T) {\n\taddr, err := AddressFromString(\"fc617c7591b3a1db27281497ce9d57f76faef212\")\n\tassert.NoError(t, err)\n\tpub, err := PublicKeyFromString(\"ccd169a31a7bfa611480072137f77efd8c1cfb0f811957972d15bab4e8c8998ade29d99b03815d3873e57d21e67ce210480270ca0b77698de0623ab1e6a241bd05a00a2e3a5b319c99fa1b9ecb6f53564e4c53dbb8a2b6b46315bf258208f614\")\n\tassert.NoError(t, err)\n\tassert.Equal(t, pub.Address(), addr)\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9394, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n\tpassword, ok := u.User.Password()\n\tif !ok {\n\t\treturn nil, ErrNoAccessToken\n\t}\n\n\tcl := bitbucket.NewBasicAuth(u.User.Username(), password)\n\n\tcfg := &Config{}\n\t// set owner, repo and path in repo\n\tcfg.Owner = u.Host\n\tpe := strings.Split(strings.Trim(u.Path, \"/\"), \"/\")\n\tif len(pe) < 1 {\n\t\treturn nil, ErrInvalidRepo\n\t}\n\tcfg.Repo = pe[0]\n\tif len(pe) > 1 {\n\t\tcfg.Path = strings.Join(pe[1:], \"/\")\n\t}\n\tcfg.Ref = u.Fragment\n\n\tbi, err := WithInstance(cl, cfg)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn bi, nil\n}\n\nfunc WithInstance(client *bitbucket.Client, config *Config) (source.Driver, error) {\n\tbi := &Bitbucket{\n\t\tclient:     client,\n\t\tconfig:     config,\n\t\tmigrations: source.NewMigrations(),\n\t}\n\n\tif err := bi.readDirectory(); err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn bi, nil\n}\n\nfunc (b *Bitbucket) readDirectory() error {\n\tb.ensureFields()\n\n\tfOpt := &bitbucket.RepositoryFilesOptions{\n\t\tOwner:    b.config.Owner,\n\t\tRepoSlug: b.config.Repo,\n\t\tRef:      b.config.Ref,", "func_src_after": "\n\tpassword, ok := u.User.Password()\n\tif !ok {\n\t\treturn nil, ErrNoAccessToken\n\t}\n\n\tcl := bitbucket.NewBasicAuth(u.User.Username(), password)\n\n\tcfg := &Config{}\n\t// set owner, repo and path in repo\n\tcfg.Owner = u.Host\n\tpe := strings.Split(strings.Trim(u.Path, \"/\"), \"/\")\n\tif len(pe) < 1 {\n\t\treturn nil, ErrInvalidRepo\n\t}\n\tcfg.Repo = pe[0]\n\tif len(pe) > 1 {\n\t\tcfg.Path = strings.Join(pe[1:], \"/\")\n\t}\n\tcfg.Ref = u.Fragment\n\n\tbi, err := WithInstance(cl, cfg)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn bi, nil\n}\n\nfunc WithInstance(client *bitbucket.Client, config *Config) (source.Driver, error) {\n\tbi := &Bitbucket{\n\t\tclient:     client,\n\t\tconfig:     config,\n\t\tmigrations: source.NewMigrations(),\n\t}\n\n\tif err := bi.readDirectory(); err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn bi, nil\n}\n\nfunc (b *Bitbucket) readDirectory() error {\n\tb.ensureFields()\n\n\tfOpt := &bitbucket.RepositoryFilesOptions{\n\t\tOwner:    b.config.Owner,\n\t\tRepoSlug: b.config.Repo,\n\t\tRef:      b.config.Ref,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9407, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package job\n\nimport (\n\tlog \"github.com/sirupsen/logrus\"\n\tapiv1 \"k8s.io/api/batch/v1\"\n)\n\n/*\nCopyright 2020 Crunchy Data Solutions, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// handleLoadUpdate is responsible for handling updates to load jobs\nfunc (c *Controller) handleLoadUpdate(job *apiv1.Job) error {\n\tlog.Debugf(\"jobController onUpdate load job case\")\n\tlog.Debugf(\"got a load job status=%d\", job.Status.Succeeded)\n\n\tif isJobSuccessful(job) {\n\t\tlog.Debugf(\"load job succeeded=%d\", job.Status.Succeeded)\n\t}\n\treturn nil\n}\n", "func_src_after": "package job\n\nimport (\n\tlog \"github.com/sirupsen/logrus\"\n\tapiv1 \"k8s.io/api/batch/v1\"\n)\n\n/*\nCopyright 2020 Crunchy Data Solutions, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// handleLoadUpdate is responsible for handling updates to load jobs\nfunc (c *Controller) handleLoadUpdate(job *apiv1.Job) error {\n\tlog.Debugf(\"jobController onUpdate load job case\")\n\tlog.Debugf(\"got a load job status=%d\", job.Status.Succeeded)\n\n\tif isJobSuccessful(job) {\n\t\tlog.Debugf(\"load job succeeded=%d\", job.Status.Succeeded)\n\t}\n\treturn nil\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9427, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\n\t\"github.com/gophergala2016/Pulse/LogPulse/api\"\n\t\"github.com/gophergala2016/Pulse/LogPulse/config\"\n\t\"github.com/gophergala2016/Pulse/LogPulse/email\"\n\t\"github.com/gophergala2016/Pulse/LogPulse/file\"\n\t\"github.com/gophergala2016/Pulse/pulse\"\n)\n\nvar (\n\trunAPI      bool\n\toutputFile  string\n\tbuffStrings []string\n\tlogList     []string\n)\n\nfunc init() {\n\tflag.BoolVar(&runAPI, \"api\", false, \"Turn on API mode\")\n\tflag.Parse()\n\n\tdefer func() {\n\t\tif r := recover(); r != nil {\n\t\t\tfmt.Println(r)\n\t\t\tos.Exit(0)\n\t\t}\n\t}()\n\n\tcfg, err := config.Load()\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"main.init: Could not load the config.\\n %v\", err))\n\t}\n\n\tlogList = cfg.LogList\n\toutputFile = cfg.OutputFile\n}\n\nfunc main() {\n\tdefer func() {\n\t\tif r := recover(); r != nil {\n\t\t\tfmt.Println(r)\n\t\t\tos.Exit(0)\n\t\t}\n\t}()\n", "func_src_after": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\n\t\"github.com/gophergala2016/Pulse/LogPulse/api\"\n\t\"github.com/gophergala2016/Pulse/LogPulse/config\"\n\t\"github.com/gophergala2016/Pulse/LogPulse/email\"\n\t\"github.com/gophergala2016/Pulse/LogPulse/file\"\n\t\"github.com/gophergala2016/Pulse/pulse\"\n)\n\nvar (\n\trunAPI      bool\n\toutputFile  string\n\tbuffStrings []string\n\tlogList     []string\n)\n\nfunc init() {\n\tflag.BoolVar(&runAPI, \"api\", false, \"Turn on API mode\")\n\tflag.Parse()\n\n\tdefer func() {\n\t\tif r := recover(); r != nil {\n\t\t\tfmt.Println(r)\n\t\t\tos.Exit(0)\n\t\t}\n\t}()\n\n\tcfg, err := config.Load()\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"main.init: Could not load the config.\\n %v\", err))\n\t}\n\n\tlogList = cfg.LogList\n\toutputFile = cfg.OutputFile\n}\n\nfunc main() {\n\tdefer func() {\n\t\tif r := recover(); r != nil {\n\t\t\tfmt.Println(r)\n\t\t\tos.Exit(0)\n\t\t}\n\t}()\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9436, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package fs\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\n\t\"github.com/badjware/gitlabfs/git\"\n\t\"github.com/badjware/gitlabfs/gitlab\"\n\n\t\"github.com/hanwen/go-fuse/v2/fs\"\n\t\"github.com/hanwen/go-fuse/v2/fuse\"\n)\n\nconst (\n\tstaticInodeStart = uint64(int(^(uint(0))>>1)) + 1\n)\n\ntype staticNode interface {\n\tfs.InodeEmbedder\n\tIno() uint64\n\tMode() uint32\n}\n\ntype FSParam struct {\n\tGit    git.GitClonerPuller\n\tGitlab gitlab.GitlabFetcher\n\n\tRootGroupIds []int\n\tUserIds      []int\n\n\tstaticInoChan chan uint64\n}\n\ntype rootNode struct {\n\tfs.Inode\n\tparam        *FSParam\n\trootGroupIds []int\n\tuserIds      []int\n}\n\nvar _ = (fs.NodeOnAdder)((*rootNode)(nil))\n\nfunc (n *rootNode) OnAdd(ctx context.Context) {\n\tgroupsInode := n.NewPersistentInode(\n\t\tctx,\n\t\tnewGroupsNode(\n\t\t\tn.rootGroupIds,", "func_src_after": "package fs\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\n\t\"github.com/badjware/gitlabfs/git\"\n\t\"github.com/badjware/gitlabfs/gitlab\"\n\n\t\"github.com/hanwen/go-fuse/v2/fs\"\n\t\"github.com/hanwen/go-fuse/v2/fuse\"\n)\n\nconst (\n\tstaticInodeStart = uint64(int(^(uint(0))>>1)) + 1\n)\n\ntype staticNode interface {\n\tfs.InodeEmbedder\n\tIno() uint64\n\tMode() uint32\n}\n\ntype FSParam struct {\n\tGit    git.GitClonerPuller\n\tGitlab gitlab.GitlabFetcher\n\n\tRootGroupIds []int\n\tUserIds      []int\n\n\tstaticInoChan chan uint64\n}\n\ntype rootNode struct {\n\tfs.Inode\n\tparam        *FSParam\n\trootGroupIds []int\n\tuserIds      []int\n}\n\nvar _ = (fs.NodeOnAdder)((*rootNode)(nil))\n\nfunc (n *rootNode) OnAdd(ctx context.Context) {\n\tgroupsInode := n.NewPersistentInode(\n\t\tctx,\n\t\tnewGroupsNode(\n\t\t\tn.rootGroupIds,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9437, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package bench\n\nimport (\n\t\"github.com/antonito/gfile/internal/utils\"\n\t\"github.com/antonito/gfile/pkg/session/bench\"\n\t\"github.com/antonito/gfile/pkg/session/common\"\n\tlog \"github.com/sirupsen/logrus\"\n\t\"gopkg.in/urfave/cli.v1\"\n)\n\nfunc handler(c *cli.Context) error {\n\tisMaster := c.Bool(\"master\")\n\n\tconf := bench.Config{\n\t\tMaster: isMaster,\n\t\tConfiguration: common.Configuration{\n\t\t\tOnCompletion: func() {\n\t\t\t},\n\t\t},\n\t}\n\n\tcustomSTUN := c.String(\"stun\")\n\tif customSTUN != \"\" {\n\t\tif err := utils.ParseSTUN(customSTUN); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tconf.STUN = customSTUN\n\t}\n\n\tsess := bench.NewWith(conf)\n\treturn sess.Start()\n}\n\n// New creates the command\nfunc New() cli.Command {\n\tlog.Traceln(\"Installing 'bench' command\")\n\treturn cli.Command{\n\t\tName:    \"bench\",\n\t\tAliases: []string{\"b\"},\n\t\tUsage:   \"Benchmark the connexion\",\n\t\tAction:  handler,\n\t\tFlags: []cli.Flag{\n\t\t\tcli.BoolFlag{\n\t\t\t\tName:  \"master, m\",\n\t\t\t\tUsage: \"Is creating the SDP offer?\",\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:  \"stun\",\n\t\t\t\tUsage: \"Use a specific STUN server (ex: --stun stun.l.google.com:19302)\",\n\t\t\t},", "func_src_after": "package bench\n\nimport (\n\t\"github.com/antonito/gfile/internal/utils\"\n\t\"github.com/antonito/gfile/pkg/session/bench\"\n\t\"github.com/antonito/gfile/pkg/session/common\"\n\tlog \"github.com/sirupsen/logrus\"\n\t\"gopkg.in/urfave/cli.v1\"\n)\n\nfunc handler(c *cli.Context) error {\n\tisMaster := c.Bool(\"master\")\n\n\tconf := bench.Config{\n\t\tMaster: isMaster,\n\t\tConfiguration: common.Configuration{\n\t\t\tOnCompletion: func() {\n\t\t\t},\n\t\t},\n\t}\n\n\tcustomSTUN := c.String(\"stun\")\n\tif customSTUN != \"\" {\n\t\tif err := utils.ParseSTUN(customSTUN); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tconf.STUN = customSTUN\n\t}\n\n\tsess := bench.NewWith(conf)\n\treturn sess.Start()\n}\n\n// New creates the command\nfunc New() cli.Command {\n\tlog.Traceln(\"Installing 'bench' command\")\n\treturn cli.Command{\n\t\tName:    \"bench\",\n\t\tAliases: []string{\"b\"},\n\t\tUsage:   \"Benchmark the connexion\",\n\t\tAction:  handler,\n\t\tFlags: []cli.Flag{\n\t\t\tcli.BoolFlag{\n\t\t\t\tName:  \"master, m\",\n\t\t\t\tUsage: \"Is creating the SDP offer?\",\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:  \"stun\",\n\t\t\t\tUsage: \"Use a specific STUN server (ex: --stun stun.l.google.com:19302)\",\n\t\t\t},", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9475, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2017 Cisco Systems, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage cf_etcd\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/Sirupsen/logrus\"\n\tetcdclient \"github.com/coreos/etcd/client\"\n\t\"golang.org/x/net/context\"\n)\n\ntype HandleNodeFunc func(*string, *etcdclient.Node) error\n\ntype CfEtcdWatcher struct {\n\tkey         string\n\tetcdKeysApi etcdclient.KeysAPI\n\tsynced      bool\n\terr         error\n\tlog         *logrus.Logger\n\tdelayOnErr  time.Duration\n\n\tnodeHandler func(*string, *etcdclient.Node) error\n}\n\nfunc NewEtcdWatcher(kapi etcdclient.KeysAPI, key string,\n\tf HandleNodeFunc, log *logrus.Logger) *CfEtcdWatcher {\n\treturn &CfEtcdWatcher{key: key, etcdKeysApi: kapi, synced: false,\n\t\tlog: log, delayOnErr: 10 * time.Second, nodeHandler: f}\n}\n\nfunc (w *CfEtcdWatcher) Run(stopCh <-chan struct{}) {\n\tctx, cancelFunc := context.WithCancel(context.Background())\n\tcancelled := false\n\n\t// monitor stop channel\n\tgo func() {", "func_src_after": "// Copyright 2017 Cisco Systems, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage cf_etcd\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/Sirupsen/logrus\"\n\tetcdclient \"github.com/coreos/etcd/client\"\n\t\"golang.org/x/net/context\"\n)\n\ntype HandleNodeFunc func(*string, *etcdclient.Node) error\n\ntype CfEtcdWatcher struct {\n\tkey         string\n\tetcdKeysApi etcdclient.KeysAPI\n\tsynced      bool\n\terr         error\n\tlog         *logrus.Logger\n\tdelayOnErr  time.Duration\n\n\tnodeHandler func(*string, *etcdclient.Node) error\n}\n\nfunc NewEtcdWatcher(kapi etcdclient.KeysAPI, key string,\n\tf HandleNodeFunc, log *logrus.Logger) *CfEtcdWatcher {\n\treturn &CfEtcdWatcher{key: key, etcdKeysApi: kapi, synced: false,\n\t\tlog: log, delayOnErr: 10 * time.Second, nodeHandler: f}\n}\n\nfunc (w *CfEtcdWatcher) Run(stopCh <-chan struct{}) {\n\tctx, cancelFunc := context.WithCancel(context.Background())\n\tcancelled := false\n\n\t// monitor stop channel\n\tgo func() {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9482, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2015 The Azul3D Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage debug\n\nimport \"github.com/slimsag/gfx\"\n\n// shaderChecker is like the checker type, but for a gfx.Shader. It implicitly\n// invokes the Check method of the underlying context after each function call\n// is made.\ntype shaderChecker struct {\n\ts   gfx.Shader\n\tctx gfx.Context\n}\n\n// Compile implements the gfx.Shader interface.\nfunc (s *shaderChecker) Compile(src string) bool {\n\tsuccess := s.s.Compile(src)\n\ts.ctx.Check()\n\treturn success\n}\n\n// InfoLog implements the gfx.Shader interface.\nfunc (s *shaderChecker) InfoLog() string {\n\tinfoLog := s.s.InfoLog()\n\ts.ctx.Check()\n\treturn infoLog\n}\n\n// Delete implements the gfx.Object interface.\nfunc (s *shaderChecker) Delete() {\n\ts.s.Delete()\n\ts.ctx.Check()\n}\n\n// Object implements the gfx.Object interface.\nfunc (s *shaderChecker) Object() interface{} {\n\treturn s.s.Object()\n}\n", "func_src_after": "// Copyright 2015 The Azul3D Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage debug\n\nimport \"github.com/slimsag/gfx\"\n\n// shaderChecker is like the checker type, but for a gfx.Shader. It implicitly\n// invokes the Check method of the underlying context after each function call\n// is made.\ntype shaderChecker struct {\n\ts   gfx.Shader\n\tctx gfx.Context\n}\n\n// Compile implements the gfx.Shader interface.\nfunc (s *shaderChecker) Compile(src string) bool {\n\tsuccess := s.s.Compile(src)\n\ts.ctx.Check()\n\treturn success\n}\n\n// InfoLog implements the gfx.Shader interface.\nfunc (s *shaderChecker) InfoLog() string {\n\tinfoLog := s.s.InfoLog()\n\ts.ctx.Check()\n\treturn infoLog\n}\n\n// Delete implements the gfx.Object interface.\nfunc (s *shaderChecker) Delete() {\n\ts.s.Delete()\n\ts.ctx.Check()\n}\n\n// Object implements the gfx.Object interface.\nfunc (s *shaderChecker) Object() interface{} {\n\treturn s.s.Object()\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9494, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright (c) Jeevanandam M. (https://github.com/jeevatkm)\n// go-aah/security source code and usage is governed by a MIT style\n// license that can be found in the LICENSE file.\n\npackage authz\n\nimport \"strings\"\n\n//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\n// Package methods\n//___________________________________\n\n// NewAuthorizationInfo method creates an `AuthorizationInfo`\n// instance with zero values. Use the returned instance to add roles and\n// permissions for the Subject (aka User).\nfunc NewAuthorizationInfo() *AuthorizationInfo {\n\treturn &AuthorizationInfo{\n\t\troles:       make(parts, 0),\n\t\tpermissions: make([]*Permission, 0),\n\t}\n}\n\n//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\n// AuthorizationInfo\n//___________________________________\n\n// AuthorizationInfo struct holds the information of Subject authorization.\n// It performs authorization (access control) operations for any given Subject\n// (aka 'application user').\n//\n// Note that you can add and evaluate Permissions using string and instance.\n// aah framework by default implementations do String-to-Permission conversion.\n//\n// These string methods do forego type-safety for the benefit of convenience and\n// simplicity, so you should choose which ones to use based on your preferences\n// and needs.\ntype AuthorizationInfo struct {\n\troles       parts\n\tpermissions []*Permission\n}\n\n// AddRole method assigns a multiple-role to those associated with the account.\nfunc (a *AuthorizationInfo) AddRole(roles ...string) *AuthorizationInfo {\n\ta.roles = append(a.roles, roles...)\n\treturn a\n}\n\n// AddPermission method assigns a permission to those directly associated with\n// the account.\nfunc (a *AuthorizationInfo) AddPermission(permissions ...*Permission) *AuthorizationInfo {", "func_src_after": "// Copyright (c) Jeevanandam M. (https://github.com/jeevatkm)\n// go-aah/security source code and usage is governed by a MIT style\n// license that can be found in the LICENSE file.\n\npackage authz\n\nimport \"strings\"\n\n//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\n// Package methods\n//___________________________________\n\n// NewAuthorizationInfo method creates an `AuthorizationInfo`\n// instance with zero values. Use the returned instance to add roles and\n// permissions for the Subject (aka User).\nfunc NewAuthorizationInfo() *AuthorizationInfo {\n\treturn &AuthorizationInfo{\n\t\troles:       make(parts, 0),\n\t\tpermissions: make([]*Permission, 0),\n\t}\n}\n\n//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\n// AuthorizationInfo\n//___________________________________\n\n// AuthorizationInfo struct holds the information of Subject authorization.\n// It performs authorization (access control) operations for any given Subject\n// (aka 'application user').\n//\n// Note that you can add and evaluate Permissions using string and instance.\n// aah framework by default implementations do String-to-Permission conversion.\n//\n// These string methods do forego type-safety for the benefit of convenience and\n// simplicity, so you should choose which ones to use based on your preferences\n// and needs.\ntype AuthorizationInfo struct {\n\troles       parts\n\tpermissions []*Permission\n}\n\n// AddRole method assigns a multiple-role to those associated with the account.\nfunc (a *AuthorizationInfo) AddRole(roles ...string) *AuthorizationInfo {\n\ta.roles = append(a.roles, roles...)\n\treturn a\n}\n\n// AddPermission method assigns a permission to those directly associated with\n// the account.\nfunc (a *AuthorizationInfo) AddPermission(permissions ...*Permission) *AuthorizationInfo {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9532, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright 2016-2018 Dgraph Labs, Inc. and Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage tok\n\nimport (\n\t\"encoding/binary\"\n\t\"plugin\"\n\t\"strings\"\n\t\"time\"\n\n\tfarm \"github.com/dgryski/go-farm\"\n\tgeom \"github.com/twpayne/go-geom\"\n\n\t\"github.com/dgraph-io/dgraph/types\"\n\t\"github.com/dgraph-io/dgraph/x\"\n)\n\n// Tokenizer defines what a tokenizer must provide.\ntype Tokenizer interface {\n\n\t// Name is name of tokenizer. This should be unique.\n\tName() string\n\n\t// Type returns the string representation of the typeID that we care about.\n\tType() string\n\n\t// Tokens return tokens for a given value. The tokens shouldn't be encoded\n\t// with the byte identifier.\n\tTokens(value interface{}) ([]string, error)\n\n\t// Identifier returns the prefix byte for this token type. This should be\n\t// unique. The range 0x80 to 0xff (inclusive) is reserved for user-provided\n\t// custom tokenizers.\n\tIdentifier() byte\n\n\t// IsSortable returns true if the tokenizer can be used for sorting/ordering.", "func_src_after": "/*\n * Copyright 2016-2018 Dgraph Labs, Inc. and Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage tok\n\nimport (\n\t\"encoding/binary\"\n\t\"plugin\"\n\t\"strings\"\n\t\"time\"\n\n\tfarm \"github.com/dgryski/go-farm\"\n\tgeom \"github.com/twpayne/go-geom\"\n\n\t\"github.com/dgraph-io/dgraph/types\"\n\t\"github.com/dgraph-io/dgraph/x\"\n)\n\n// Tokenizer defines what a tokenizer must provide.\ntype Tokenizer interface {\n\n\t// Name is name of tokenizer. This should be unique.\n\tName() string\n\n\t// Type returns the string representation of the typeID that we care about.\n\tType() string\n\n\t// Tokens return tokens for a given value. The tokens shouldn't be encoded\n\t// with the byte identifier.\n\tTokens(value interface{}) ([]string, error)\n\n\t// Identifier returns the prefix byte for this token type. This should be\n\t// unique. The range 0x80 to 0xff (inclusive) is reserved for user-provided\n\t// custom tokenizers.\n\tIdentifier() byte\n\n\t// IsSortable returns true if the tokenizer can be used for sorting/ordering.", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9535, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package configuration\n\nimport (\n\t\"testing\"\n\n\t\"github.com/containous/traefik/tls\"\n\t\"github.com/containous/traefik/types\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_parseEntryPointsConfiguration(t *testing.T) {\n\ttestCases := []struct {\n\t\tname           string\n\t\tvalue          string\n\t\texpectedResult map[string]string\n\t}{\n\t\t{\n\t\t\tname: \"all parameters\",\n\t\t\tvalue: \"Name:foo \" +\n\t\t\t\t\"Address::8000 \" +\n\t\t\t\t\"TLS:goo,gii \" +\n\t\t\t\t\"TLS \" +\n\t\t\t\t\"TLS.MinVersion:VersionTLS11 \" +\n\t\t\t\t\"TLS.CipherSuites:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA \" +\n\t\t\t\t\"CA:car \" +\n\t\t\t\t\"CA.Optional:true \" +\n\t\t\t\t\"Redirect.EntryPoint:https \" +\n\t\t\t\t\"Redirect.Regex:http://localhost/(.*) \" +\n\t\t\t\t\"Redirect.Replacement:http://mydomain/$1 \" +\n\t\t\t\t\"Redirect.Permanent:true \" +\n\t\t\t\t\"Compress:true \" +\n\t\t\t\t\"ProxyProtocol.TrustedIPs:192.168.0.1 \" +\n\t\t\t\t\"ForwardedHeaders.TrustedIPs:10.0.0.3/24,20.0.0.3/24 \" +\n\t\t\t\t\"Auth.Basic.Users:test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/,test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0 \" +\n\t\t\t\t\"Auth.Digest.Users:test:traefik:a2688e031edb4be6a3797f3882655c05,test2:traefik:518845800f9e2bfb1f1f740ec24f074e \" +\n\t\t\t\t\"Auth.HeaderField:X-WebAuth-User \" +\n\t\t\t\t\"Auth.Forward.Address:https://authserver.com/auth \" +\n\t\t\t\t\"Auth.Forward.TrustForwardHeader:true \" +\n\t\t\t\t\"Auth.Forward.TLS.CA:path/to/local.crt \" +\n\t\t\t\t\"Auth.Forward.TLS.CAOptional:true \" +\n\t\t\t\t\"Auth.Forward.TLS.Cert:path/to/foo.cert \" +\n\t\t\t\t\"Auth.Forward.TLS.Key:path/to/foo.key \" +\n\t\t\t\t\"Auth.Forward.TLS.InsecureSkipVerify:true \" +\n\t\t\t\t\"WhiteListSourceRange:10.42.0.0/16,152.89.1.33/32,afed:be44::/16 \" +\n\t\t\t\t\"whiteList.sourceRange:10.42.0.0/16,152.89.1.33/32,afed:be44::/16 \" +\n\t\t\t\t\"whiteList.useXForwardedFor:true \",\n\t\t\texpectedResult: map[string]string{\n\t\t\t\t\"address\":                             \":8000\",\n\t\t\t\t\"auth_basic_users\":                    \"test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/,test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0\",", "func_src_after": "package configuration\n\nimport (\n\t\"testing\"\n\n\t\"github.com/containous/traefik/tls\"\n\t\"github.com/containous/traefik/types\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_parseEntryPointsConfiguration(t *testing.T) {\n\ttestCases := []struct {\n\t\tname           string\n\t\tvalue          string\n\t\texpectedResult map[string]string\n\t}{\n\t\t{\n\t\t\tname: \"all parameters\",\n\t\t\tvalue: \"Name:foo \" +\n\t\t\t\t\"Address::8000 \" +\n\t\t\t\t\"TLS:goo,gii \" +\n\t\t\t\t\"TLS \" +\n\t\t\t\t\"TLS.MinVersion:VersionTLS11 \" +\n\t\t\t\t\"TLS.CipherSuites:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA \" +\n\t\t\t\t\"CA:car \" +\n\t\t\t\t\"CA.Optional:true \" +\n\t\t\t\t\"Redirect.EntryPoint:https \" +\n\t\t\t\t\"Redirect.Regex:http://localhost/(.*) \" +\n\t\t\t\t\"Redirect.Replacement:http://mydomain/$1 \" +\n\t\t\t\t\"Redirect.Permanent:true \" +\n\t\t\t\t\"Compress:true \" +\n\t\t\t\t\"ProxyProtocol.TrustedIPs:192.168.0.1 \" +\n\t\t\t\t\"ForwardedHeaders.TrustedIPs:10.0.0.3/24,20.0.0.3/24 \" +\n\t\t\t\t\"Auth.Basic.Users:test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/,test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0 \" +\n\t\t\t\t\"Auth.Digest.Users:test:traefik:a2688e031edb4be6a3797f3882655c05,test2:traefik:518845800f9e2bfb1f1f740ec24f074e \" +\n\t\t\t\t\"Auth.HeaderField:X-WebAuth-User \" +\n\t\t\t\t\"Auth.Forward.Address:https://authserver.com/auth \" +\n\t\t\t\t\"Auth.Forward.TrustForwardHeader:true \" +\n\t\t\t\t\"Auth.Forward.TLS.CA:path/to/local.crt \" +\n\t\t\t\t\"Auth.Forward.TLS.CAOptional:true \" +\n\t\t\t\t\"Auth.Forward.TLS.Cert:path/to/foo.cert \" +\n\t\t\t\t\"Auth.Forward.TLS.Key:path/to/foo.key \" +\n\t\t\t\t\"Auth.Forward.TLS.InsecureSkipVerify:true \" +\n\t\t\t\t\"WhiteListSourceRange:<IP-Address>/16,<IP-Address>/32,afed:be44::/16 \" +\n\t\t\t\t\"whiteList.sourceRange:<IP-Address>/16,<IP-Address>/32,afed:be44::/16 \" +\n\t\t\t\t\"whiteList.useXForwardedFor:true \",\n\t\t\texpectedResult: map[string]string{\n\t\t\t\t\"address\":                             \":8000\",\n\t\t\t\t\"auth_basic_users\":                    \"test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/,test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0\",", "line_changes": {"deleted": [{"line_no": 45, "char_start": 1672, "char_end": 1745, "line": "\t\t\t\t\"WhiteListSourceRange:10.42.0.0/16,152.89.1.33/32,afed:be44::/16 \" +\n"}, {"line_no": 46, "char_start": 1672, "char_end": 1746, "line": "\t\t\t\t\"whiteList.sourceRange:10.42.0.0/16,152.89.1.33/32,afed:be44::/16 \" +\n"}], "added": [{"line_no": 47, "char_start": 1672, "char_end": 1749, "line": "\t\t\t\t\"WhiteListSourceRange:<IP-Address>/16,<IP-Address>/32,afed:be44::/16 \" +\n"}, {"line_no": 48, "char_start": 1749, "char_end": 1827, "line": "\t\t\t\t\"whiteList.sourceRange:<IP-Address>/16,<IP-Address>/32,afed:be44::/16 \" +\n"}]}, "char_changes": {"deleted": [{"char_start": 1672, "char_end": 1745, "chars": "\t\t\t\t\"WhiteListSourceRange:10.42.0.0/16,152.89.1.33/32,afed:be44::/16 \" +\n"}, {"char_start": 1672, "char_end": 1746, "chars": "\t\t\t\t\"whiteList.sourceRange:10.42.0.0/16,152.89.1.33/32,afed:be44::/16 \" +\n"}], "added": [{"char_start": 1672, "char_end": 1749, "chars": "\t\t\t\t\"WhiteListSourceRange:<IP-Address>/16,<IP-Address>/32,afed:be44::/16 \" +\n"}, {"char_start": 1749, "char_end": 1827, "chars": "\t\t\t\t\"whiteList.sourceRange:<IP-Address>/16,<IP-Address>/32,afed:be44::/16 \" +\n"}]}}
{"func_name": 9540, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Code generated by MockGen. DO NOT EDIT.\n// Source: github.com/gardener/test-infra/pkg/tm-bot/github (interfaces: Client)\n\n// Package mock_github is a generated GoMock package.\npackage mock_github\n\nimport (\n\tjson \"encoding/json\"\n\tgithub \"github.com/gardener/test-infra/pkg/tm-bot/github\"\n\tghval \"github.com/gardener/test-infra/pkg/tm-bot/github/ghval\"\n\tgomock \"github.com/golang/mock/gomock\"\n\tgithub0 \"github.com/google/go-github/v27/github\"\n\treflect \"reflect\"\n)\n\n// MockClient is a mock of Client interface\ntype MockClient struct {\n\tctrl     *gomock.Controller\n\trecorder *MockClientMockRecorder\n}\n\n// MockClientMockRecorder is the mock recorder for MockClient\ntype MockClientMockRecorder struct {\n\tmock *MockClient\n}\n\n// NewMockClient creates a new mock instance\nfunc NewMockClient(ctrl *gomock.Controller) *MockClient {\n\tmock := &MockClient{ctrl: ctrl}\n\tmock.recorder = &MockClientMockRecorder{mock}\n\treturn mock\n}\n\n// EXPECT returns an object that allows the caller to indicate expected use\nfunc (m *MockClient) EXPECT() *MockClientMockRecorder {\n\treturn m.recorder\n}\n\n// Client mocks base method\nfunc (m *MockClient) Client() *github0.Client {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Client\")\n\tret0, _ := ret[0].(*github0.Client)\n\treturn ret0\n}\n\n// Client indicates an expected call of Client\nfunc (mr *MockClientMockRecorder) Client() *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Client\", reflect.TypeOf((*MockClient)(nil).Client))", "func_src_after": "// Code generated by MockGen. DO NOT EDIT.\n// Source: github.com/gardener/test-infra/pkg/tm-bot/github (interfaces: Client)\n\n// Package mock_github is a generated GoMock package.\npackage mock_github\n\nimport (\n\tjson \"encoding/json\"\n\tgithub \"github.com/gardener/test-infra/pkg/tm-bot/github\"\n\tghval \"github.com/gardener/test-infra/pkg/tm-bot/github/ghval\"\n\tgomock \"github.com/golang/mock/gomock\"\n\tgithub0 \"github.com/google/go-github/v27/github\"\n\treflect \"reflect\"\n)\n\n// MockClient is a mock of Client interface\ntype MockClient struct {\n\tctrl     *gomock.Controller\n\trecorder *MockClientMockRecorder\n}\n\n// MockClientMockRecorder is the mock recorder for MockClient\ntype MockClientMockRecorder struct {\n\tmock *MockClient\n}\n\n// NewMockClient creates a new mock instance\nfunc NewMockClient(ctrl *gomock.Controller) *MockClient {\n\tmock := &MockClient{ctrl: ctrl}\n\tmock.recorder = &MockClientMockRecorder{mock}\n\treturn mock\n}\n\n// EXPECT returns an object that allows the caller to indicate expected use\nfunc (m *MockClient) EXPECT() *MockClientMockRecorder {\n\treturn m.recorder\n}\n\n// Client mocks base method\nfunc (m *MockClient) Client() *github0.Client {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Client\")\n\tret0, _ := ret[0].(*github0.Client)\n\treturn ret0\n}\n\n// Client indicates an expected call of Client\nfunc (mr *MockClientMockRecorder) Client() *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Client\", reflect.TypeOf((*MockClient)(nil).Client))", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9563, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package fragment\n\nimport (\n\t\"go/token\"\n\n\t\"github.com/dave/jennifer/jen\"\n)\n\nconst DSTPATH = \"github.com/dave/dst\"\n\ntype Part interface{}\n\nvar Info = map[string][]Part{\n\t/*\n\t\t// A Field represents a Field declaration list in a struct type,\n\t\t// a method list in an interface type, or a parameter/result declaration\n\t\t// in a signature.\n\t\t// Field.Names is nil for unnamed parameters (parameter lists which only contain types)\n\t\t// and embedded struct fields. In the latter case, the field name is the type name.\n\t\t//\n\t\ttype Field struct {\n\t\t\tDoc     *CommentGroup // associated documentation; or nil\n\t\t\tNames   []*Ident      // field/method/parameter names; or nil\n\t\t\tType    Expr          // field/method/parameter type\n\t\t\tTag     *BasicLit     // field tag; or nil\n\t\t\tComment *CommentGroup // line comments; or nil\n\t\t}\n\t*/\n\t\"Field\": {\n\t\tDecoration{\n\t\t\tName: \"Start\",\n\t\t},\n\t\tList{\n\t\t\tName:      \"Names\",\n\t\t\tField:     Field{\"Names\"},\n\t\t\tElem:      Type{\"Ident\", true},\n\t\t\tSeparator: token.COMMA,\n\t\t},\n\t\tDecoration{\n\t\t\tName: \"Names\",\n\t\t},\n\t\tNode{\n\t\t\tName:  \"Type\",\n\t\t\tField: Field{\"Type\"},\n\t\t\tType:  Type{\"Expr\", false},\n\t\t},\n\t\tDecoration{\n\t\t\tName: \"Type\",\n\t\t\tUse:  Expr(func(n *jen.Statement) *jen.Statement { return n.Dot(\"Tag\").Op(\"!=\").Nil() }),\n\t\t},", "func_src_after": "package fragment\n\nimport (\n\t\"go/token\"\n\n\t\"github.com/dave/jennifer/jen\"\n)\n\nconst DSTPATH = \"github.com/dave/dst\"\n\ntype Part interface{}\n\nvar Info = map[string][]Part{\n\t/*\n\t\t// A Field represents a Field declaration list in a struct type,\n\t\t// a method list in an interface type, or a parameter/result declaration\n\t\t// in a signature.\n\t\t// Field.Names is nil for unnamed parameters (parameter lists which only contain types)\n\t\t// and embedded struct fields. In the latter case, the field name is the type name.\n\t\t//\n\t\ttype Field struct {\n\t\t\tDoc     *CommentGroup // associated documentation; or nil\n\t\t\tNames   []*Ident      // field/method/parameter names; or nil\n\t\t\tType    Expr          // field/method/parameter type\n\t\t\tTag     *BasicLit     // field tag; or nil\n\t\t\tComment *CommentGroup // line comments; or nil\n\t\t}\n\t*/\n\t\"Field\": {\n\t\tDecoration{\n\t\t\tName: \"Start\",\n\t\t},\n\t\tList{\n\t\t\tName:      \"Names\",\n\t\t\tField:     Field{\"Names\"},\n\t\t\tElem:      Type{\"Ident\", true},\n\t\t\tSeparator: token.COMMA,\n\t\t},\n\t\tDecoration{\n\t\t\tName: \"Names\",\n\t\t},\n\t\tNode{\n\t\t\tName:  \"Type\",\n\t\t\tField: Field{\"Type\"},\n\t\t\tType:  Type{\"Expr\", false},\n\t\t},\n\t\tDecoration{\n\t\t\tName: \"Type\",\n\t\t\tUse:  Expr(func(n *jen.Statement) *jen.Statement { return n.Dot(\"Tag\").Op(\"!=\").Nil() }),\n\t\t},", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9565, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package rnn\n\nimport (\n\t\"bytes\"\n\t\"encoding/gob\"\n\t\"log\"\n\t\"math\"\n\t\"math/rand\"\n\t\"time\"\n\n\t\"github.com/gonum/matrix/mat64\"\n\t\"github.com/kelseyhightower/envconfig\"\n)\n\n// RNN represents the neural network\n// This RNNs parameters are the three mat64rices whh, wxh, why.\n// hprev is the last known hidden vector, which is actually the memory of the RNN\n// bh, and by are the biais vectors respectivly for the hidden layer and the output layer\ntype RNN struct {\n\twhh *mat64.Dense // size is hiddenDimension * hiddenDimension\n\twxh *mat64.Dense //\n\twhy *mat64.Dense //\n\t// This is the last known hidden vector that represents the memory of the RNN\n\t// This is used only for training\n\thprev  []float64\n\tbh     []float64 // This is the biais\n\tby     []float64 // This is the biais\n\tconfig neuralNetConfig\n}\n\ntype bkp struct {\n\tWhh *mat64.Dense // size is hiddenDimension * hiddenDimension\n\tWxh *mat64.Dense //\n\tWhy *mat64.Dense //\n\t// This is the last known hidden vector that represents the memory of the RNN\n\t// This is used only for training\n\tHprev  []float64\n\tBh     []float64 // This is the biais\n\tBy     []float64 // This is the biais\n\tConfig neuralNetConfig\n}\n\n// GobDecode the rnn for restoring\nfunc (rnn *RNN) GobDecode(b []byte) error {\n\tinput := bytes.NewBuffer(b)\n\tdec := gob.NewDecoder(input) // Will read from network.\n\n\tvar backup bkp\n\terr := dec.Decode(&backup)\n\trnn.bh = make([]float64, len(backup.Bh))", "func_src_after": "package rnn\n\nimport (\n\t\"bytes\"\n\t\"encoding/gob\"\n\t\"log\"\n\t\"math\"\n\t\"math/rand\"\n\t\"time\"\n\n\t\"github.com/gonum/matrix/mat64\"\n\t\"github.com/kelseyhightower/envconfig\"\n)\n\n// RNN represents the neural network\n// This RNNs parameters are the three mat64rices whh, wxh, why.\n// hprev is the last known hidden vector, which is actually the memory of the RNN\n// bh, and by are the biais vectors respectivly for the hidden layer and the output layer\ntype RNN struct {\n\twhh *mat64.Dense // size is hiddenDimension * hiddenDimension\n\twxh *mat64.Dense //\n\twhy *mat64.Dense //\n\t// This is the last known hidden vector that represents the memory of the RNN\n\t// This is used only for training\n\thprev  []float64\n\tbh     []float64 // This is the biais\n\tby     []float64 // This is the biais\n\tconfig neuralNetConfig\n}\n\ntype bkp struct {\n\tWhh *mat64.Dense // size is hiddenDimension * hiddenDimension\n\tWxh *mat64.Dense //\n\tWhy *mat64.Dense //\n\t// This is the last known hidden vector that represents the memory of the RNN\n\t// This is used only for training\n\tHprev  []float64\n\tBh     []float64 // This is the biais\n\tBy     []float64 // This is the biais\n\tConfig neuralNetConfig\n}\n\n// GobDecode the rnn for restoring\nfunc (rnn *RNN) GobDecode(b []byte) error {\n\tinput := bytes.NewBuffer(b)\n\tdec := gob.NewDecoder(input) // Will read from network.\n\n\tvar backup bkp\n\terr := dec.Decode(&backup)\n\trnn.bh = make([]float64, len(backup.Bh))", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9573, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package cloud\n\nimport (\n\t\"context\"\n\t\"testing\"\n\n\t\"github.com/evergreen-ci/birch\"\n\t\"github.com/evergreen-ci/evergreen\"\n\t\"github.com/evergreen-ci/evergreen/model/distro\"\n\t\"github.com/evergreen-ci/evergreen/model/host\"\n\t\"github.com/stretchr/testify/suite\"\n\t\"github.com/vmware/govmomi/vim25/types\"\n)\n\ntype VSphereSuite struct {\n\tclient   vsphereClient\n\tmanager  *vsphereManager\n\tdistro   distro.Distro\n\thostOpts host.CreateOptions\n\tsuite.Suite\n}\n\nfunc TestVSphereSuite(t *testing.T) {\n\tsuite.Run(t, new(VSphereSuite))\n}\n\nfunc (s *VSphereSuite) SetupTest() {\n\ts.client = &vsphereClientMock{\n\t\tisActive: true,\n\t}\n\ts.manager = &vsphereManager{\n\t\tclient: s.client,\n\t}\n\ts.distro = distro.Distro{\n\t\tId:                   \"host\",\n\t\tProvider:             evergreen.ProviderNameVsphere,\n\t\tProviderSettingsList: []*birch.Document{birch.NewDocument(birch.EC.String(\"template\", \"macos-1012\"))},\n\t}\n\ts.hostOpts = host.CreateOptions{}\n}\n\nfunc (s *VSphereSuite) TestValidateSettings() {\n\t// all settings are provided\n\tsettingsOk := &vsphereSettings{\n\t\tTemplate:     \"macos-1012\",\n\t\tDatastore:    \"1TB_SSD\",\n\t\tResourcePool: \"XSERVE_Cluster\",\n\t\tNumCPUs:      2,\n\t\tMemoryMB:     2048,\n\t}", "func_src_after": "package cloud\n\nimport (\n\t\"context\"\n\t\"testing\"\n\n\t\"github.com/evergreen-ci/birch\"\n\t\"github.com/evergreen-ci/evergreen\"\n\t\"github.com/evergreen-ci/evergreen/model/distro\"\n\t\"github.com/evergreen-ci/evergreen/model/host\"\n\t\"github.com/stretchr/testify/suite\"\n\t\"github.com/vmware/govmomi/vim25/types\"\n)\n\ntype VSphereSuite struct {\n\tclient   vsphereClient\n\tmanager  *vsphereManager\n\tdistro   distro.Distro\n\thostOpts host.CreateOptions\n\tsuite.Suite\n}\n\nfunc TestVSphereSuite(t *testing.T) {\n\tsuite.Run(t, new(VSphereSuite))\n}\n\nfunc (s *VSphereSuite) SetupTest() {\n\ts.client = &vsphereClientMock{\n\t\tisActive: true,\n\t}\n\ts.manager = &vsphereManager{\n\t\tclient: s.client,\n\t}\n\ts.distro = distro.Distro{\n\t\tId:                   \"host\",\n\t\tProvider:             evergreen.ProviderNameVsphere,\n\t\tProviderSettingsList: []*birch.Document{birch.NewDocument(birch.EC.String(\"template\", \"macos-1012\"))},\n\t}\n\ts.hostOpts = host.CreateOptions{}\n}\n\nfunc (s *VSphereSuite) TestValidateSettings() {\n\t// all settings are provided\n\tsettingsOk := &vsphereSettings{\n\t\tTemplate:     \"macos-1012\",\n\t\tDatastore:    \"1TB_SSD\",\n\t\tResourcePool: \"XSERVE_Cluster\",\n\t\tNumCPUs:      2,\n\t\tMemoryMB:     2048,\n\t}", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9648, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.25.0\n// \tprotoc        v3.10.0\n// source: internal/protobufs/topic/domain.proto\n\npackage topic\n\nimport (\n\tproto \"github.com/golang/protobuf/proto\"\n\treply \"github.com/mrdulin/grpc-go-cnode/internal/protobufs/reply\"\n\tshared \"github.com/mrdulin/grpc-go-cnode/internal/protobufs/shared\"\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n\n// This is a compile-time assertion that a sufficiently up-to-date version\n// of the legacy proto package is being used.\nconst _ = proto.ProtoPackageIsVersion4\n\ntype Tab int32\n\nconst (\n\tTab_share Tab = 0\n\tTab_ask   Tab = 1\n\tTab_good  Tab = 2\n\tTab_job   Tab = 3\n)\n\n// Enum value maps for Tab.\nvar (\n\tTab_name = map[int32]string{\n\t\t0: \"share\",\n\t\t1: \"ask\",\n\t\t2: \"good\",\n\t\t3: \"job\",\n\t}\n\tTab_value = map[string]int32{\n\t\t\"share\": 0,\n\t\t\"ask\":   1,\n\t\t\"good\":  2,", "func_src_after": "// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.25.0\n// \tprotoc        v3.10.0\n// source: internal/protobufs/topic/domain.proto\n\npackage topic\n\nimport (\n\tproto \"github.com/golang/protobuf/proto\"\n\treply \"github.com/mrdulin/grpc-go-cnode/internal/protobufs/reply\"\n\tshared \"github.com/mrdulin/grpc-go-cnode/internal/protobufs/shared\"\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n\n// This is a compile-time assertion that a sufficiently up-to-date version\n// of the legacy proto package is being used.\nconst _ = proto.ProtoPackageIsVersion4\n\ntype Tab int32\n\nconst (\n\tTab_share Tab = 0\n\tTab_ask   Tab = 1\n\tTab_good  Tab = 2\n\tTab_job   Tab = 3\n)\n\n// Enum value maps for Tab.\nvar (\n\tTab_name = map[int32]string{\n\t\t0: \"share\",\n\t\t1: \"ask\",\n\t\t2: \"good\",\n\t\t3: \"job\",\n\t}\n\tTab_value = map[string]int32{\n\t\t\"share\": 0,\n\t\t\"ask\":   1,\n\t\t\"good\":  2,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 9808, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                        \"hab-sup run --bind test:service.group1 test2:service.group2\",\n                        \"BIND\" => [\"test:service.group1\", \"test2:service.group2\"]);\n\n        assert_cli_cmd!(should_handle_bind_flag_with_arguments,\n                        \"hab-sup run --bind test:service.group1 test:service.group2 -- core/redis\",\n                        \"BIND\" => [\"test:service.group1\", \"test:service.group2\"],\n                        \"PKG_IDENT_OR_ARTIFACT\" => \"core/redis\");\n\n        #[test]\n        fn local_gossip_mode_and_listen_gossip_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --listen-gossip 1.1.1.1:1111 --local-gossip-mode\".split_whitespace()\n                                                                              .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n\n        #[test]\n        fn local_gossip_mode_and_peer_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --peer 1.1.1.1:1111 --local-gossip-mode\".split_whitespace()\n                                                                     .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n\n        #[test]\n        fn local_gossip_mode_and_peer_watch_file_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --local-gossip-mode --peer-watch-file foobar\".split_whitespace()\n                                                                          .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n\n        #[test]\n        fn peer_watch_file_and_peer_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --peer 1.1.1.1:1111 --peer-watch-file foobar\".split_whitespace()\n                                                                          .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n    }\n}\n", "func_src_after": "                        \"hab-sup run --bind test:service.group1 test2:service.group2\",\n                        \"BIND\" => [\"test:service.group1\", \"test2:service.group2\"]);\n\n        assert_cli_cmd!(should_handle_bind_flag_with_arguments,\n                        \"hab-sup run --bind test:service.group1 test:service.group2 -- core/redis\",\n                        \"BIND\" => [\"test:service.group1\", \"test:service.group2\"],\n                        \"PKG_IDENT_OR_ARTIFACT\" => \"core/redis\");\n\n        #[test]\n        fn local_gossip_mode_and_listen_gossip_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --listen-gossip <IP-Address>:1111 --local-gossip-mode\".split_whitespace()\n                                                                              .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n\n        #[test]\n        fn local_gossip_mode_and_peer_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --peer <IP-Address>:1111 --local-gossip-mode\".split_whitespace()\n                                                                     .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n\n        #[test]\n        fn local_gossip_mode_and_peer_watch_file_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --local-gossip-mode --peer-watch-file foobar\".split_whitespace()\n                                                                          .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n\n        #[test]\n        fn peer_watch_file_and_peer_are_mutually_exclusive() {\n            let cmd_vec: Vec<&str> =\n                \"hab-sup run --peer <IP-Address>:1111 --peer-watch-file foobar\".split_whitespace()\n                                                                          .collect();\n            assert!(cli().get_matches_from_safe(cmd_vec).is_err());\n        }\n    }\n}\n", "line_changes": {"deleted": [{"line_no": 12, "char_start": 612, "char_end": 710, "line": "                \"hab-sup run --listen-gossip 1.1.1.1:1111 --local-gossip-mode\".split_whitespace()\n"}, {"line_no": 21, "char_start": 1002, "char_end": 1091, "line": "                \"hab-sup run --peer 1.1.1.1:1111 --local-gossip-mode\".split_whitespace()\n"}, {"line_no": 38, "char_start": 1760, "char_end": 1854, "line": "                \"hab-sup run --peer 1.1.1.1:1111 --peer-watch-file foobar\".split_whitespace()\n"}], "added": [{"line_no": 13, "char_start": 612, "char_end": 715, "line": "                \"hab-sup run --listen-gossip <IP-Address>:1111 --local-gossip-mode\".split_whitespace()\n"}, {"line_no": 22, "char_start": 1002, "char_end": 1096, "line": "                \"hab-sup run --peer <IP-Address>:1111 --local-gossip-mode\".split_whitespace()\n"}, {"line_no": 39, "char_start": 1760, "char_end": 1859, "line": "                \"hab-sup run --peer <IP-Address>:1111 --peer-watch-file foobar\".split_whitespace()\n"}]}, "char_changes": {"deleted": [{"char_start": 612, "char_end": 710, "chars": "                \"hab-sup run --listen-gossip 1.1.1.1:1111 --local-gossip-mode\".split_whitespace()\n"}, {"char_start": 1002, "char_end": 1091, "chars": "                \"hab-sup run --peer 1.1.1.1:1111 --local-gossip-mode\".split_whitespace()\n"}, {"char_start": 1760, "char_end": 1854, "chars": "                \"hab-sup run --peer 1.1.1.1:1111 --peer-watch-file foobar\".split_whitespace()\n"}], "added": [{"char_start": 612, "char_end": 715, "chars": "                \"hab-sup run --listen-gossip <IP-Address>:1111 --local-gossip-mode\".split_whitespace()\n"}, {"char_start": 1002, "char_end": 1096, "chars": "                \"hab-sup run --peer <IP-Address>:1111 --local-gossip-mode\".split_whitespace()\n"}, {"char_start": 1760, "char_end": 1859, "chars": "                \"hab-sup run --peer <IP-Address>:1111 --peer-watch-file foobar\".split_whitespace()\n"}]}}
{"func_name": 10000, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright (c) 2012-2020 MIRACL UK Ltd.\n *\n * This file is part of MIRACL Core\n * (see https://github.com/miracl/core).\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* Dilithium API high-level functions.  Constant time where it matters. Slow (spends nearly all of its time running SHA3) but small.\n\nNote that the Matrix A is calculated on-the-fly to keep memory requirement minimal\nBut this makes all stages much slower\nNote that \n1. Matrix A can just be generated randomly for Key generation (without using SHA3 which is very slow)\n2. A precalculated A can be included in the public key, for use by signature and verification (which blows up public key size)\n3. Precalculating A for signature calculation means that the A does not have to re-calculated for each attempt to find a good signature\n\nMight be simpler to wait for hardware support for SHA3!\n\n   M.Scott 30/09/2021\n*/\n\nuse crate::rand::RAND;\nuse crate::sha3;\nuse crate::sha3::SHA3;\n\n//use std::process;\n\n//q= 8380417\nconst LGN: usize = 8;\nconst DEGREE: usize = 1<<LGN;\nconst PRIME: i32 = 0x7fe001;\nconst D: usize = 13;\nconst TD: usize = 23-D;\nconst WC: usize = 49;\nconst LG: usize = 19;\nconst GAMMA1: i32 = 1<<LG;\nconst RR: i32 = 32;\nconst GAMMA2: i32 = (PRIME-1)/RR;", "func_src_after": "/*\n * Copyright (c) 2012-2020 MIRACL UK Ltd.\n *\n * This file is part of MIRACL Core\n * (see https://github.com/miracl/core).\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* Dilithium API high-level functions.  Constant time where it matters. Slow (spends nearly all of its time running SHA3) but small.\n\nNote that the Matrix A is calculated on-the-fly to keep memory requirement minimal\nBut this makes all stages much slower\nNote that \n1. Matrix A can just be generated randomly for Key generation (without using SHA3 which is very slow)\n2. A precalculated A can be included in the public key, for use by signature and verification (which blows up public key size)\n3. Precalculating A for signature calculation means that the A does not have to re-calculated for each attempt to find a good signature\n\nMight be simpler to wait for hardware support for SHA3!\n\n   M.Scott 30/09/2021\n*/\n\nuse crate::rand::RAND;\nuse crate::sha3;\nuse crate::sha3::SHA3;\n\n//use std::process;\n\n//q= 8380417\nconst LGN: usize = 8;\nconst DEGREE: usize = 1<<LGN;\nconst PRIME: i32 = 0x7fe001;\nconst D: usize = 13;\nconst TD: usize = 23-D;\nconst WC: usize = 49;\nconst LG: usize = 19;\nconst GAMMA1: i32 = 1<<LG;\nconst RR: i32 = 32;\nconst GAMMA2: i32 = (PRIME-1)/RR;", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 10562, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\nvoid\nLaDfaNode::luaExportResolverMembers(lua::LuaState* luaState) {\n\tluaState->setMemberString(\"name\", m_name);\n\tluaState->setMemberInteger(\"resolver\", m_resolver->m_masterIndex);\n\tluaState->setMemberInteger(\"production\", m_production->m_masterIndex);\n\tluaState->setMemberInteger(\"resolverElse\", getTransitionIndex (m_resolverElse));\n\tluaState->setMemberBoolean(\"hasChainedResolver\", ((LaDfaNode*) m_resolverElse)->m_resolver != NULL);\n}\n\nvoid\nLaDfaNode::luaExport(lua::LuaState* luaState) {\n\tASSERT(!(m_flags & LaDfaNodeFlag_Leaf));\n\n\tif (m_resolver) {\n\t\tluaState->createTable(0, 3);\n\t\tluaExportResolverMembers(luaState);\n\t\treturn;\n\t}\n\n\tsize_t childrenCount = m_transitionArray.getCount();\n\tASSERT(childrenCount);\n\n\tluaState->createTable(0, 2);\n\n\tluaState->createTable(childrenCount);\n\n\tNode* defaultProduction = m_production;\n\n\tfor (size_t i = 0; i < childrenCount; i++) {\n\t\tLaDfaNode* child = m_transitionArray[i];\n\n\t\tif ((child->m_token->m_flags & SymbolNodeFlag_AnyToken) && !defaultProduction)\n\t\t\tdefaultProduction = child->m_production;\n\n\t\tluaState->createTable(0, 4);\n\t\tluaState->getGlobalArrayElement(\"TokenTable\", child->m_token->m_index + 1);\n\t\tluaState->setMember(\"token\");\n\n\t\tif (child->m_resolver)\n\t\t\tchild->luaExportResolverMembers(luaState);\n\t\telse\n\t\t\tluaState->setMemberInteger(\"production\", getTransitionIndex(child));\n\n\t\tluaState->setArrayElement(i + 1);\n\t}\n\n\tluaState->setMember(\"transitionTable\");\n\n\tif (defaultProduction)", "func_src_after": "\nvoid\nLaDfaNode::luaExportResolverMembers(lua::LuaState* luaState) {\n\tluaState->setMemberString(\"name\", m_name);\n\tluaState->setMemberInteger(\"resolver\", m_resolver->m_masterIndex);\n\tluaState->setMemberInteger(\"production\", m_production->m_masterIndex);\n\tluaState->setMemberInteger(\"resolverElse\", getTransitionIndex (m_resolverElse));\n\tluaState->setMemberBoolean(\"hasChainedResolver\", ((LaDfaNode*) m_resolverElse)->m_resolver != NULL);\n}\n\nvoid\nLaDfaNode::luaExport(lua::LuaState* luaState) {\n\tASSERT(!(m_flags & LaDfaNodeFlag_Leaf));\n\n\tif (m_resolver) {\n\t\tluaState->createTable(0, 3);\n\t\tluaExportResolverMembers(luaState);\n\t\treturn;\n\t}\n\n\tsize_t childrenCount = m_transitionArray.getCount();\n\tASSERT(childrenCount);\n\n\tluaState->createTable(0, 2);\n\n\tluaState->createTable(childrenCount);\n\n\tNode* defaultProduction = m_production;\n\n\tfor (size_t i = 0; i < childrenCount; i++) {\n\t\tLaDfaNode* child = m_transitionArray[i];\n\n\t\tif ((child->m_token->m_flags & SymbolNodeFlag_AnyToken) && !defaultProduction)\n\t\t\tdefaultProduction = child->m_production;\n\n\t\tluaState->createTable(0, 4);\n\t\tluaState->getGlobalArrayElement(\"TokenTable\", child->m_token->m_index + 1);\n\t\tluaState->setMember(\"token\");\n\n\t\tif (child->m_resolver)\n\t\t\tchild->luaExportResolverMembers(luaState);\n\t\telse\n\t\t\tluaState->setMemberInteger(\"production\", getTransitionIndex(child));\n\n\t\tluaState->setArrayElement(i + 1);\n\t}\n\n\tluaState->setMember(\"transitionTable\");\n\n\tif (defaultProduction)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 10627, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* Operating Systems Project 1\n * Alex Slanski, Owen Stenson, Zac Wimer\n */\n\n#include \"SJF.hpp\"\n\n//Constructor\nSJF::SJF() : Algo() {\n    \n    //No process is running to start\n    ProcessRunning = false;\n    \n    //No context switches have occured\n    FinishContextSwitch = 0;\n}\n\n//Destructor\nSJF::~SJF() {}\n\n//Returns true if the ready queue is empty\nbool SJF::queueEmpty() const {\n    return !Queued.size();\n}\n\n//Returns a string representing the current ready queue\nconst std::ostringstream* SJF::getQ() const {\n    \n    //Create the ostringstream to be returned\n    std::ostringstream *ret = new std::ostringstream();\n    \n    //Start construction\n    *ret << \"[Q\";\n    \n    //If there are processes in the queue\n    if (Queued.size()) {\n        \n        //For each process in the queue\n        for(std::list<Process*>::const_iterator\n            i = Queued.begin(); i != Queued.end(); i++)\n            \n            //If the first process in the queue is running, skip it\n            //Otherwise, add the process ID of the next ready process\n            *ret << \" \" << (*i)->getProcID();\n    }\n    \n    //If there are no non-running processes in the queue, say so\n    if (!Queued.size())\n        *ret << \" empty\";\n    \n    //Finish construction the ostringstream", "func_src_after": "/* Operating Systems Project 1\n * Alex Slanski, Owen Stenson, Zac Wimer\n */\n\n#include \"SJF.hpp\"\n\n//Constructor\nSJF::SJF() : Algo() {\n    \n    //No process is running to start\n    ProcessRunning = false;\n    \n    //No context switches have occured\n    FinishContextSwitch = 0;\n}\n\n//Destructor\nSJF::~SJF() {}\n\n//Returns true if the ready queue is empty\nbool SJF::queueEmpty() const {\n    return !Queued.size();\n}\n\n//Returns a string representing the current ready queue\nconst std::ostringstream* SJF::getQ() const {\n    \n    //Create the ostringstream to be returned\n    std::ostringstream *ret = new std::ostringstream();\n    \n    //Start construction\n    *ret << \"[Q\";\n    \n    //If there are processes in the queue\n    if (Queued.size()) {\n        \n        //For each process in the queue\n        for(std::list<Process*>::const_iterator\n            i = Queued.begin(); i != Queued.end(); i++)\n            \n            //If the first process in the queue is running, skip it\n            //Otherwise, add the process ID of the next ready process\n            *ret << \" \" << (*i)->getProcID();\n    }\n    \n    //If there are no non-running processes in the queue, say so\n    if (!Queued.size())\n        *ret << \" empty\";\n    \n    //Finish construction the ostringstream", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 10777, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿/*\n * Copyright (c) 2014-2021 GraphDefined GmbH\n * This file is part of WWCP OICP <https://github.com/OpenChargingCloud/WWCP_OICP>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#region Usings\n\nusing System;\n\n#endregion\n\nnamespace cloud.charging.open.protocols.OICPv2_3\n{\n\n    /// <summary>\n    /// Extentions methods for EVSE status types.\n    /// </summary>\n    public static class EVSEStatusTypesExtentions\n    {\n\n        #region Parse   (Text)\n\n        /// <summary>\n        /// Parses the given text-representation of an EVSE status type.\n        /// </summary>\n        /// <param name=\"Text\">A text-representation of an EVSE status type.</param>\n        public static EVSEStatusTypes Parse(String Text)\n        {\n\n            if (TryParse(Text, out EVSEStatusTypes evseStatusType))\n                return evseStatusType;\n\n            throw new ArgumentException(\"Undefined EVSE status type '\" + Text + \"'!\");\n\n        }\n\n        #endregion\n", "func_src_after": "﻿/*\n * Copyright (c) 2014-2021 GraphDefined GmbH\n * This file is part of WWCP OICP <https://github.com/OpenChargingCloud/WWCP_OICP>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#region Usings\n\nusing System;\n\n#endregion\n\nnamespace cloud.charging.open.protocols.OICPv2_3\n{\n\n    /// <summary>\n    /// Extentions methods for EVSE status types.\n    /// </summary>\n    public static class EVSEStatusTypesExtentions\n    {\n\n        #region Parse   (Text)\n\n        /// <summary>\n        /// Parses the given text-representation of an EVSE status type.\n        /// </summary>\n        /// <param name=\"Text\">A text-representation of an EVSE status type.</param>\n        public static EVSEStatusTypes Parse(String Text)\n        {\n\n            if (TryParse(Text, out EVSEStatusTypes evseStatusType))\n                return evseStatusType;\n\n            throw new ArgumentException(\"Undefined EVSE status type '\" + Text + \"'!\");\n\n        }\n\n        #endregion\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11030, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  \n  @js.native\n  sealed trait `to-be-reviewed` extends IconGlyph\n  @scala.inline\n  def `to-be-reviewed`: `to-be-reviewed` = \"to-be-reviewed\".asInstanceOf[`to-be-reviewed`]\n  \n  @js.native\n  sealed trait `toaster-down` extends IconGlyph\n  @scala.inline\n  def `toaster-down`: `toaster-down` = \"toaster-down\".asInstanceOf[`toaster-down`]\n  \n  @js.native\n  sealed trait `toaster-top` extends IconGlyph\n  @scala.inline\n  def `toaster-top`: `toaster-top` = \"toaster-top\".asInstanceOf[`toaster-top`]\n  \n  @js.native\n  sealed trait `toaster-up` extends IconGlyph\n  @scala.inline\n  def `toaster-up`: `toaster-up` = \"toaster-up\".asInstanceOf[`toaster-up`]\n  \n  @js.native\n  sealed trait `tools-opportunity` extends IconGlyph\n  @scala.inline\n  def `tools-opportunity`: `tools-opportunity` = \"tools-opportunity\".asInstanceOf[`tools-opportunity`]\n  \n  @js.native\n  sealed trait top extends PopperPlacement\n  @scala.inline\n  def top: top = \"top\".asInstanceOf[top]\n  \n  @js.native\n  sealed trait `top-end` extends PopperPlacement\n  @scala.inline\n  def `top-end`: `top-end` = \"top-end\".asInstanceOf[`top-end`]\n  \n  @js.native\n  sealed trait `top-start` extends PopperPlacement\n  @scala.inline\n  def `top-start`: `top-start` = \"top-start\".asInstanceOf[`top-start`]\n  \n  @js.native\n  sealed trait transparent extends ButtonOptions\n  @scala.inline\n  def transparent: transparent = \"transparent\".asInstanceOf[transparent]\n  \n  @js.native\n  sealed trait `travel-expense` extends IconGlyph\n  @scala.inline\n  def `travel-expense`: `travel-expense` = \"travel-expense\".asInstanceOf[`travel-expense`]", "func_src_after": "  \n  @js.native\n  sealed trait `to-be-reviewed` extends IconGlyph\n  @scala.inline\n  def `to-be-reviewed`: `to-be-reviewed` = \"to-be-reviewed\".asInstanceOf[`to-be-reviewed`]\n  \n  @js.native\n  sealed trait `toaster-down` extends IconGlyph\n  @scala.inline\n  def `toaster-down`: `toaster-down` = \"toaster-down\".asInstanceOf[`toaster-down`]\n  \n  @js.native\n  sealed trait `toaster-top` extends IconGlyph\n  @scala.inline\n  def `toaster-top`: `toaster-top` = \"toaster-top\".asInstanceOf[`toaster-top`]\n  \n  @js.native\n  sealed trait `toaster-up` extends IconGlyph\n  @scala.inline\n  def `toaster-up`: `toaster-up` = \"toaster-up\".asInstanceOf[`toaster-up`]\n  \n  @js.native\n  sealed trait `tools-opportunity` extends IconGlyph\n  @scala.inline\n  def `tools-opportunity`: `tools-opportunity` = \"tools-opportunity\".asInstanceOf[`tools-opportunity`]\n  \n  @js.native\n  sealed trait top extends PopperPlacement\n  @scala.inline\n  def top: top = \"top\".asInstanceOf[top]\n  \n  @js.native\n  sealed trait `top-end` extends PopperPlacement\n  @scala.inline\n  def `top-end`: `top-end` = \"top-end\".asInstanceOf[`top-end`]\n  \n  @js.native\n  sealed trait `top-start` extends PopperPlacement\n  @scala.inline\n  def `top-start`: `top-start` = \"top-start\".asInstanceOf[`top-start`]\n  \n  @js.native\n  sealed trait transparent extends ButtonOptions\n  @scala.inline\n  def transparent: transparent = \"transparent\".asInstanceOf[transparent]\n  \n  @js.native\n  sealed trait `travel-expense` extends IconGlyph\n  @scala.inline\n  def `travel-expense`: `travel-expense` = \"travel-expense\".asInstanceOf[`travel-expense`]", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11093, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Copyright (C) 2017 Christopher Batey and Dogan Narinc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.scassandra.server.priming.prepared\n\nimport org.scassandra.codec.datatype.Varchar\nimport org.scassandra.codec.messages._\nimport org.scassandra.codec.{ Execute, Prepare, Prepared, ProtocolVersion }\nimport org.scassandra.server.actors.priming.PrimeQueryStoreActor._\nimport org.scassandra.server.priming.Defaulter\nimport scodec.bits.ByteVector\n\ntrait PreparedStoreLookup {\n  def apply(prepare: Prepare, id: Int): Option[Prime]\n  def apply(queryText: String, execute: Execute)(implicit protocolVersion: ProtocolVersion): Option[Prime]\n}\n\nobject PreparedStoreLookup {\n  def defaultPrepared(prepare: Prepare, id: Int): Prime = {\n    val numberOfParameters = prepare.query.toCharArray.count(_ == '?')\n    val variableTypes = (0 until numberOfParameters)\n      .map(num => ColumnSpecWithoutTable(num.toString, Varchar).asInstanceOf[ColumnSpec]).toList\n\n    val metadata = PreparedMetadata(\n      keyspace = Some(\"keyspace\"),\n      table = Some(\"table\"),\n      columnSpec = variableTypes)\n\n    Reply(Prepared(ByteVector(id), metadata, NoRowMetadata))\n  }\n}\n\ntrait PreparedStore[I <: PreparedPrimeIncoming] extends PreparedStoreLookup {\n  protected var primes: Map[PrimeCriteria, I] = Map()\n\n  def primeCriteria(prime: I): PrimeCriteria\n\n  def record(prime: I): PrimeAddResult = {", "func_src_after": "/*\n * Copyright (C) 2017 Christopher Batey and Dogan Narinc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.scassandra.server.priming.prepared\n\nimport org.scassandra.codec.datatype.Varchar\nimport org.scassandra.codec.messages._\nimport org.scassandra.codec.{ Execute, Prepare, Prepared, ProtocolVersion }\nimport org.scassandra.server.actors.priming.PrimeQueryStoreActor._\nimport org.scassandra.server.priming.Defaulter\nimport scodec.bits.ByteVector\n\ntrait PreparedStoreLookup {\n  def apply(prepare: Prepare, id: Int): Option[Prime]\n  def apply(queryText: String, execute: Execute)(implicit protocolVersion: ProtocolVersion): Option[Prime]\n}\n\nobject PreparedStoreLookup {\n  def defaultPrepared(prepare: Prepare, id: Int): Prime = {\n    val numberOfParameters = prepare.query.toCharArray.count(_ == '?')\n    val variableTypes = (0 until numberOfParameters)\n      .map(num => ColumnSpecWithoutTable(num.toString, Varchar).asInstanceOf[ColumnSpec]).toList\n\n    val metadata = PreparedMetadata(\n      keyspace = Some(\"keyspace\"),\n      table = Some(\"table\"),\n      columnSpec = variableTypes)\n\n    Reply(Prepared(ByteVector(id), metadata, NoRowMetadata))\n  }\n}\n\ntrait PreparedStore[I <: PreparedPrimeIncoming] extends PreparedStoreLookup {\n  protected var primes: Map[PrimeCriteria, I] = Map()\n\n  def primeCriteria(prime: I): PrimeCriteria\n\n  def record(prime: I): PrimeAddResult = {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11157, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "package com.mapbox.navigation.core.accounts\n\nimport android.content.Context\nimport android.text.format.DateUtils\nimport com.mapbox.android.accounts.navigation.sku.v1.MauSku\nimport com.mapbox.android.accounts.navigation.sku.v1.SkuGenerator\nimport com.mapbox.android.accounts.v1.AccountsConstants.MAPBOX_SHARED_PREFERENCES\nimport com.mapbox.android.accounts.v1.MapboxAccounts\nimport com.mapbox.navigation.base.accounts.SkuTokenProvider\nimport java.lang.IllegalStateException\n\n// TODO: make the class internal\nclass MapboxNavigationAccounts private constructor() : SkuTokenProvider {\n\n    companion object {\n        private const val SKU_KEY = \"sku\"\n        private const val MAU_TIMER_EXPIRE_THRESHOLD = 1\n        private const val TIMER_EXPIRE_AFTER = DateUtils.HOUR_IN_MILLIS / 1000\n        private var skuGenerator: SkuGenerator? = null\n        private var INSTANCE: MapboxNavigationAccounts? = null\n        private var skuToken: String = \"\"\n\n        @JvmStatic\n        fun getInstance(context: Context): MapboxNavigationAccounts =\n            INSTANCE\n                ?: synchronized(this) {\n                    MapboxNavigationAccounts().also { mapboxNavigationAccount ->\n                        INSTANCE = mapboxNavigationAccount\n                        init(context)\n                    }\n                }\n\n        private fun init(context: Context) {\n            val preferences =\n                context.getSharedPreferences(MAPBOX_SHARED_PREFERENCES, Context.MODE_PRIVATE)\n            skuGenerator = when (Billing.getInstance(context).getBillingType()) {\n                Billing.BillingModel.MAU -> MauSku(\n                    preferences,\n                    TIMER_EXPIRE_AFTER * MAU_TIMER_EXPIRE_THRESHOLD,\n                    context.applicationContext.packageName\n                )\n                Billing.BillingModel.NO_SKU -> null\n            }\n        }\n    }\n\n    @Synchronized\n    override fun obtainUrlWithSkuToken(resourceUrl: String, querySize: Int): String {\n        return skuGenerator?.let { generator ->\n            skuToken = generator.generateToken()", "func_src_after": "package com.mapbox.navigation.core.accounts\n\nimport android.content.Context\nimport android.text.format.DateUtils\nimport com.mapbox.android.accounts.navigation.sku.v1.MauSku\nimport com.mapbox.android.accounts.navigation.sku.v1.SkuGenerator\nimport com.mapbox.android.accounts.v1.AccountsConstants.MAPBOX_SHARED_PREFERENCES\nimport com.mapbox.android.accounts.v1.MapboxAccounts\nimport com.mapbox.navigation.base.accounts.SkuTokenProvider\nimport java.lang.IllegalStateException\n\n// TODO: make the class internal\nclass MapboxNavigationAccounts private constructor() : SkuTokenProvider {\n\n    companion object {\n        private const val SKU_KEY = \"sku\"\n        private const val MAU_TIMER_EXPIRE_THRESHOLD = 1\n        private const val TIMER_EXPIRE_AFTER = DateUtils.HOUR_IN_MILLIS / 1000\n        private var skuGenerator: SkuGenerator? = null\n        private var INSTANCE: MapboxNavigationAccounts? = null\n        private var skuToken: String = \"\"\n\n        @JvmStatic\n        fun getInstance(context: Context): MapboxNavigationAccounts =\n            INSTANCE\n                ?: synchronized(this) {\n                    MapboxNavigationAccounts().also { mapboxNavigationAccount ->\n                        INSTANCE = mapboxNavigationAccount\n                        init(context)\n                    }\n                }\n\n        private fun init(context: Context) {\n            val preferences =\n                context.getSharedPreferences(MAPBOX_SHARED_PREFERENCES, Context.MODE_PRIVATE)\n            skuGenerator = when (Billing.getInstance(context).getBillingType()) {\n                Billing.BillingModel.MAU -> MauSku(\n                    preferences,\n                    TIMER_EXPIRE_AFTER * MAU_TIMER_EXPIRE_THRESHOLD,\n                    context.applicationContext.packageName\n                )\n                Billing.BillingModel.NO_SKU -> null\n            }\n        }\n    }\n\n    @Synchronized\n    override fun obtainUrlWithSkuToken(resourceUrl: String, querySize: Int): String {\n        return skuGenerator?.let { generator ->\n            skuToken = generator.generateToken()", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11243, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n  // /// Loader for getting entries.\n  // ///\n  // /// [eventId]: ID of the event to read.\n  // /// [length]: Number of cases to read.\n  // /// [target]: Target id.\n  // static Future<List<IPath>> initEvent(\n  //     {@required String eventId, int length = 100, String target = \"event\"}) {\n  //   eventId = eventId?.applyTags();\n  //   return Future.wait<IPath>([\n  //     FirestoreDocument.listen(\"$target/$eventId\").joinAt(\n  //         prefix: \"user\",\n  //         builder: (doc) {\n  //           return FirestoreDocument.listen(\"user/${doc.getString(\"user\")}\");\n  //         }),\n  //     FirestoreCollection.listen(\"$target/$eventId/entry\").joinAt(\n  //         key: \"uid\",\n  //         builder: (col) {\n  //           return FirestoreCollection.listen(\"user?${target}Joinedby=$eventId\",\n  //               query: col.length <= 0\n  //                   ? FirestoreQuery.empty()\n  //                   : FirestoreQuery.inArray(\"uid\", col.map((e) => e.uid)));\n  //         })\n  //   ]);\n  // }\n\n  // /// Timeline collection to use for each user's timeline (profile, etc.).\n  // ///\n  // /// [context]: Build Context.\n  // /// [userId]: ID of the user to read.\n  // static IDataCollection readUserTimeline(BuildContext context,\n  //     {@required String userId}) {\n  //   userId = userId?.applyTags();\n  //   return context.watch(\"timeline?user=$userId\");\n  // }\n\n  // /// Widget for loading the next of the user timeline collection.\n  // ///\n  // /// [userId]: ID of the user to read.\n  // /// [label]: Button label.\n  // static LoadNext loadNextUserTimeline(\n  //     {@required String userId, @required String label}) {\n  //   userId = userId?.applyTags();\n  //   return LoadNext(\n  //     path: \"timeline?user=$userId\",\n  //     label: label,\n  //   );\n  // }\n\n  // /// Loader for retrieving user timeline collection.", "func_src_after": "\n  // /// Loader for getting entries.\n  // ///\n  // /// [eventId]: ID of the event to read.\n  // /// [length]: Number of cases to read.\n  // /// [target]: Target id.\n  // static Future<List<IPath>> initEvent(\n  //     {@required String eventId, int length = 100, String target = \"event\"}) {\n  //   eventId = eventId?.applyTags();\n  //   return Future.wait<IPath>([\n  //     FirestoreDocument.listen(\"$target/$eventId\").joinAt(\n  //         prefix: \"user\",\n  //         builder: (doc) {\n  //           return FirestoreDocument.listen(\"user/${doc.getString(\"user\")}\");\n  //         }),\n  //     FirestoreCollection.listen(\"$target/$eventId/entry\").joinAt(\n  //         key: \"uid\",\n  //         builder: (col) {\n  //           return FirestoreCollection.listen(\"user?${target}Joinedby=$eventId\",\n  //               query: col.length <= 0\n  //                   ? FirestoreQuery.empty()\n  //                   : FirestoreQuery.inArray(\"uid\", col.map((e) => e.uid)));\n  //         })\n  //   ]);\n  // }\n\n  // /// Timeline collection to use for each user's timeline (profile, etc.).\n  // ///\n  // /// [context]: Build Context.\n  // /// [userId]: ID of the user to read.\n  // static IDataCollection readUserTimeline(BuildContext context,\n  //     {@required String userId}) {\n  //   userId = userId?.applyTags();\n  //   return context.watch(\"timeline?user=$userId\");\n  // }\n\n  // /// Widget for loading the next of the user timeline collection.\n  // ///\n  // /// [userId]: ID of the user to read.\n  // /// [label]: Button label.\n  // static LoadNext loadNextUserTimeline(\n  //     {@required String userId, @required String label}) {\n  //   userId = userId?.applyTags();\n  //   return LoadNext(\n  //     path: \"timeline?user=$userId\",\n  //     label: label,\n  //   );\n  // }\n\n  // /// Loader for retrieving user timeline collection.", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11292, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      ],\n    );\n  }\n\n  Drawer _getMailAccountDrawerr() {\n    Text Myemail = new Text(\n        email,\n      style: TextStyle(fontWeight: FontWeight.w500, fontSize: 15.0),\n    );\n\n    Text Myname = new Text(\n      name,\n      style: TextStyle(fontWeight: FontWeight.w500, fontSize: 15.0),\n    );\n\n    return Drawer(\n        child: Column(\n      children: <Widget>[\n        UserAccountsDrawerHeader(\n          decoration: BoxDecoration(color: Color(0xFF0D6374)),\n          //Color(0xFFFA5D00)),\n          accountName: Myname,\n          accountEmail: Myemail,\n          currentAccountPicture:\n          CircleAvatar(\n            backgroundImage: NetworkImage(\n              imageUrl,\n            ),\n            radius: 60,\n            backgroundColor: Colors.transparent,\n          ),\n          /*Icon(\n            Icons.account_circle,\n            size: 50.0,\n            color: Colors.white,\n          ),*/\n        ),\n        Expanded(\n          flex: 2,\n          child: ListView.builder(\n              padding: EdgeInsets.only(top:0.0),\n              itemCount: drawerText.length,\n              itemBuilder: (context, position) {\n                return ListTile(\n                  leading: drawerIcons[position],\n                  title: Text(drawerText[position][0],\n                      style: TextStyle(fontSize: 15.0)),\n                  onTap: () {\n                    if((drawerText[position][0]) != \"Déconnecter\")\n                    {this.setState(() {", "func_src_after": "      ],\n    );\n  }\n\n  Drawer _getMailAccountDrawerr() {\n    Text Myemail = new Text(\n        email,\n      style: TextStyle(fontWeight: FontWeight.w500, fontSize: 15.0),\n    );\n\n    Text Myname = new Text(\n      name,\n      style: TextStyle(fontWeight: FontWeight.w500, fontSize: 15.0),\n    );\n\n    return Drawer(\n        child: Column(\n      children: <Widget>[\n        UserAccountsDrawerHeader(\n          decoration: BoxDecoration(color: Color(0xFF0D6374)),\n          //Color(0xFFFA5D00)),\n          accountName: Myname,\n          accountEmail: Myemail,\n          currentAccountPicture:\n          CircleAvatar(\n            backgroundImage: NetworkImage(\n              imageUrl,\n            ),\n            radius: 60,\n            backgroundColor: Colors.transparent,\n          ),\n          /*Icon(\n            Icons.account_circle,\n            size: 50.0,\n            color: Colors.white,\n          ),*/\n        ),\n        Expanded(\n          flex: 2,\n          child: ListView.builder(\n              padding: EdgeInsets.only(top:0.0),\n              itemCount: drawerText.length,\n              itemBuilder: (context, position) {\n                return ListTile(\n                  leading: drawerIcons[position],\n                  title: Text(drawerText[position][0],\n                      style: TextStyle(fontSize: 15.0)),\n                  onTap: () {\n                    if((drawerText[position][0]) != \"Déconnecter\")\n                    {this.setState(() {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11302, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# Debug\n#\n\necho ${DISTANCE_CM}\necho ${ADA_2302_TEMP}\necho ${ADA_2302_HUMID}\necho ${BMP085_TEMP}\necho ${BMP085_PRESS}\necho ${BMP085_ALT}\necho ${BMP085_SLPRESS}\necho ${WATER1_TEMP}\necho ${WATER2_TEMP}\n\necho \"Current lake level: ${LAKE_LEVEL_M}\"\n\n#\n# databse insert\n#\n\n# provided you have created an influxdb we would write to it here\ncurl -i -XPOST 'http://192.168.79.10:8086/write?db=sensors' --data-binary 'rf_distance,host='$(hostname)' value='${DISTANCE_CM}' '${DISTANCE_EPOCH}'\na2302_temp,host='$(hostname)',type=temp,unit=c value='${ADA_2302_TEMP}' '${A2302_EPOCH}'\na2302_humid,host='$(hostname)',type=humid value='${ADA_2302_HUMID}' '${A2302_EPOCH}'\nbmp085_temp,host='$(hostname)',type=temp,unit=c value='${BMP085_TEMP}' '${BMP085_EPOCH}'\nbmp085_press,host='$(hostname)',type=ps value='${BMP085_PRESS}' '${BMP085_EPOCH}'\nbmp085_alt,host='$(hostname)',type=alt,unit=m value='${BMP085_ALT}' '${BMP085_EPOCH}'\nbmp085_slpress,host='$(hostname)',type=ps value='${BMP085_SLPRESS}' '${BMP085_EPOCH}'\nlake_temp_1,host='$(hostname)',type=temp,unit=c value='${WATER1_TEMP}' '${WATER1_EPOCH}'\nlake_temp_2,host='$(hostname)',type=temp,unit=c value='${WATER2_TEMP}' '${WATER2_EPOCH}'\nlake_level,host='$(hostname)',type=alt,unit=m value='${LAKE_LEVEL_M}' '${DISTANCE_EPOCH}''\n\nexit 0\n", "func_src_after": "# Debug\n#\n\necho ${DISTANCE_CM}\necho ${ADA_2302_TEMP}\necho ${ADA_2302_HUMID}\necho ${BMP085_TEMP}\necho ${BMP085_PRESS}\necho ${BMP085_ALT}\necho ${BMP085_SLPRESS}\necho ${WATER1_TEMP}\necho ${WATER2_TEMP}\n\necho \"Current lake level: ${LAKE_LEVEL_M}\"\n\n#\n# databse insert\n#\n\n# provided you have created an influxdb we would write to it here\ncurl -i -XPOST 'http://<IP-Address>:8086/write?db=sensors' --data-binary 'rf_distance,host='$(hostname)' value='${DISTANCE_CM}' '${DISTANCE_EPOCH}'\na2302_temp,host='$(hostname)',type=temp,unit=c value='${ADA_2302_TEMP}' '${A2302_EPOCH}'\na2302_humid,host='$(hostname)',type=humid value='${ADA_2302_HUMID}' '${A2302_EPOCH}'\nbmp085_temp,host='$(hostname)',type=temp,unit=c value='${BMP085_TEMP}' '${BMP085_EPOCH}'\nbmp085_press,host='$(hostname)',type=ps value='${BMP085_PRESS}' '${BMP085_EPOCH}'\nbmp085_alt,host='$(hostname)',type=alt,unit=m value='${BMP085_ALT}' '${BMP085_EPOCH}'\nbmp085_slpress,host='$(hostname)',type=ps value='${BMP085_SLPRESS}' '${BMP085_EPOCH}'\nlake_temp_1,host='$(hostname)',type=temp,unit=c value='${WATER1_TEMP}' '${WATER1_EPOCH}'\nlake_temp_2,host='$(hostname)',type=temp,unit=c value='${WATER2_TEMP}' '${WATER2_EPOCH}'\nlake_level,host='$(hostname)',type=alt,unit=m value='${LAKE_LEVEL_M}' '${DISTANCE_EPOCH}''\n\nexit 0\n", "line_changes": {"deleted": [{"line_no": 21, "char_start": 332, "char_end": 481, "line": "curl -i -XPOST 'http://192.168.79.10:8086/write?db=sensors' --data-binary 'rf_distance,host='$(hostname)' value='${DISTANCE_CM}' '${DISTANCE_EPOCH}'\n"}], "added": [{"line_no": 22, "char_start": 332, "char_end": 480, "line": "curl -i -XPOST 'http://<IP-Address>:8086/write?db=sensors' --data-binary 'rf_distance,host='$(hostname)' value='${DISTANCE_CM}' '${DISTANCE_EPOCH}'\n"}]}, "char_changes": {"deleted": [{"char_start": 332, "char_end": 481, "chars": "curl -i -XPOST 'http://192.168.79.10:8086/write?db=sensors' --data-binary 'rf_distance,host='$(hostname)' value='${DISTANCE_CM}' '${DISTANCE_EPOCH}'\n"}], "added": [{"char_start": 332, "char_end": 480, "chars": "curl -i -XPOST 'http://<IP-Address>:8086/write?db=sensors' --data-binary 'rf_distance,host='$(hostname)' value='${DISTANCE_CM}' '${DISTANCE_EPOCH}'\n"}]}}
{"func_name": 11327, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/bin/sh\n\ngroupadd -r ${U_NAME} -g ${U_GID}\nuseradd --uid ${U_UID} \\\n\t--gid ${U_NAME} \\\n\t--create-home \\\n\t--home-dir /home/${U_NAME} \\\n\t--shell /bin/bash ${U_NAME} \\\n\t--password ${U_PASSWDHASH}\n\nusermod -a -G wx-sudoers ${U_NAME}\nusermod -a -G docker ${U_NAME}\n\nservice ssh start\n\ncat > /supervisord.conf << EOF\n[unix_http_server]\nfile = /var/run/supervisord.sock\n\n[supervisord]\nnodaemon=true\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisorctl]\nserverurl=unix:///var/run/supervisord.sock\n\n[program:code-server]\ncommand=su - $U_NAME -c '/usr/local/code-server/code-server --auth none'\nEOF\n\nrm /var/run/supervisord.sock\nsupervisord -c /supervisord.conf\n", "func_src_after": "#!/bin/sh\n\ngroupadd -r ${U_NAME} -g ${U_GID}\nuseradd --uid ${U_UID} \\\n\t--gid ${U_NAME} \\\n\t--create-home \\\n\t--home-dir /home/${U_NAME} \\\n\t--shell /bin/bash ${U_NAME} \\\n\t--password ${U_PASSWDHASH}\n\nusermod -a -G wx-sudoers ${U_NAME}\nusermod -a -G docker ${U_NAME}\n\nservice ssh start\n\ncat > /supervisord.conf << EOF\n[unix_http_server]\nfile = /var/run/supervisord.sock\n\n[supervisord]\nnodaemon=true\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisorctl]\nserverurl=unix:///var/run/supervisord.sock\n\n[program:code-server]\ncommand=su - $U_NAME -c '/usr/local/code-server/code-server --auth none'\nEOF\n\nrm /var/run/supervisord.sock\nsupervisord -c /supervisord.conf\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11338, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/bin/bash\n\necho \"Please give the domain name: \"\n\nread domain\n\ndir=${domain}\n\nmkdir ${dir}\n\n# Generate an RSA key\nopenssl genrsa -out \"${dir}/${domain}.key\" 4096\n\n# Generate Certificate Signing Request\nopenssl req -new -key \"${dir}/${domain}.key\" -out \"${dir}/${domain}.csr\"\n\necho \"Please give the domain names, separated by space: \"\necho \"(example: *.test.net test.net)\"\n\nread domains\n\ncat > \"${dir}/${domain}.extensions.cnf\" <<EOL\nbasicConstraints=CA:FALSE\nsubjectAltName=@my_subject_alt_names\nsubjectKeyIdentifier = hash\n\n[ my_subject_alt_names ]\nEOL\n\n# source: https://gist.github.com/syzdek/6086792\nRE_IPV4=\"((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\"\nRE_IPV6=\"([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|\"                    # TEST: 1:2:3:4:5:6:7:8\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,7}:|\"                         # TEST: 1::                              1:2:3:4:5:6:7::\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|\"         # TEST: 1::8             1:2:3:4:5:6::8  1:2:3:4:5:6::8\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|\"  # TEST: 1::7:8           1:2:3:4:5::7:8  1:2:3:4:5::8\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|\"  # TEST: 1::6:7:8         1:2:3:4::6:7:8  1:2:3:4::8\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"  # TEST: 1::5:6:7:8       1:2:3::5:6:7:8  1:2:3::8\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|\"  # TEST: 1::4:5:6:7:8     1:2::4:5:6:7:8  1:2::8\nRE_IPV6=\"${RE_IPV6}[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|\"       # TEST: 1::3:4:5:6:7:8   1::3:4:5:6:7:8  1::8\nRE_IPV6=\"${RE_IPV6}:((:[0-9a-fA-F]{1,4}){1,7}|:)|\"                     # TEST: ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8 ::8       ::\nRE_IPV6=\"${RE_IPV6}fe08:(:[0-9a-fA-F]{1,4}){2,2}%[0-9a-zA-Z]{1,}|\"     # TEST: fe08::7:8%eth0      fe08::7:8%1                                      (link-local IPv6 addresses with zone index)\nRE_IPV6=\"${RE_IPV6}::(ffff(:0{1,4}){0,1}:){0,1}${RE_IPV4}|\"            # TEST: ::255.255.255.255   ::ffff:255.255.255.255  ::ffff:0:255.255.255.255 (IPv4-mapped IPv6 addresses and IPv4-translated addresses)\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}:${RE_IPV4}\"                # TEST: 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33                        (IPv4-Embedded IPv6 Address)\n\nipCounter=1\ndnsCounter=1\nfor d in $domains; do\n    if [[ $d =~ ^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$ ]] || [[ $d =~ $RE_IPV6 ]]; then\n        echo \"IP.${ipCounter} = ${d}\" >> \"${dir}/${domain}.extensions.cnf\"\n        ipCounter=$((ipCounter+1))", "func_src_after": "#!/bin/bash\n\necho \"Please give the domain name: \"\n\nread domain\n\ndir=${domain}\n\nmkdir ${dir}\n\n# Generate an RSA key\nopenssl genrsa -out \"${dir}/${domain}.key\" 4096\n\n# Generate Certificate Signing Request\nopenssl req -new -key \"${dir}/${domain}.key\" -out \"${dir}/${domain}.csr\"\n\necho \"Please give the domain names, separated by space: \"\necho \"(example: *.test.net test.net)\"\n\nread domains\n\ncat > \"${dir}/${domain}.extensions.cnf\" <<EOL\nbasicConstraints=CA:FALSE\nsubjectAltName=@my_subject_alt_names\nsubjectKeyIdentifier = hash\n\n[ my_subject_alt_names ]\nEOL\n\n# source: https://gist.github.com/syzdek/6086792\nRE_IPV4=\"((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\"\nRE_IPV6=\"([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|\"                    # TEST: <IP-Address>\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,7}:|\"                         # TEST: <IP-Address>                              <IP-Address>\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|\"         # TEST: <IP-Address>             <IP-Address>  <IP-Address>\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|\"  # TEST: <IP-Address>           <IP-Address>  <IP-Address>\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|\"  # TEST: <IP-Address>         <IP-Address>  <IP-Address>\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"  # TEST: <IP-Address>       <IP-Address>  <IP-Address>\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|\"  # TEST: <IP-Address>     <IP-Address>  <IP-Address>\nRE_IPV6=\"${RE_IPV6}[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|\"       # TEST: <IP-Address>   <IP-Address>  <IP-Address>\nRE_IPV6=\"${RE_IPV6}:((:[0-9a-fA-F]{1,4}){1,7}|:)|\"                     # TEST: <IP-Address>  <IP-Address>       ::\nRE_IPV6=\"${RE_IPV6}fe08:(:[0-9a-fA-F]{1,4}){2,2}%[0-9a-zA-Z]{1,}|\"     # TEST: <IP-Address>%eth0      <IP-Address>%1                                      (link-local IPv6 addresses with zone index)\nRE_IPV6=\"${RE_IPV6}::(ffff(:0{1,4}){0,1}:){0,1}${RE_IPV4}|\"            # TEST: <IP-Address>   :<IP-Address>  <IP-Address> (IPv4-mapped IPv6 addresses and IPv4-translated addresses)\nRE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}:${RE_IPV4}\"                # TEST: <IP-Address>  <IP-Address>                        (IPv4-Embedded IPv6 Address)\n\nipCounter=1\ndnsCounter=1\nfor d in $domains; do\n    if [[ $d =~ ^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$ ]] || [[ $d =~ $RE_IPV6 ]]; then\n        echo \"IP.${ipCounter} = ${d}\" >> \"${dir}/${domain}.extensions.cnf\"\n        ipCounter=$((ipCounter+1))", "line_changes": {"deleted": [{"line_no": 32, "char_start": 705, "char_end": 800, "line": "RE_IPV6=\"([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|\"                    # TEST: 1:2:3:4:5:6:7:8\n"}, {"line_no": 34, "char_start": 797, "char_end": 925, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,7}:|\"                         # TEST: 1::                              1:2:3:4:5:6:7::\n"}, {"line_no": 36, "char_start": 931, "char_end": 1058, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|\"         # TEST: 1::8             1:2:3:4:5:6::8  1:2:3:4:5:6::8\n"}, {"line_no": 37, "char_start": 931, "char_end": 1056, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|\"  # TEST: 1::7:8           1:2:3:4:5::7:8  1:2:3:4:5::8\n"}, {"line_no": 38, "char_start": 931, "char_end": 1054, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|\"  # TEST: 1::6:7:8         1:2:3:4::6:7:8  1:2:3:4::8\n"}, {"line_no": 39, "char_start": 931, "char_end": 1052, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"  # TEST: 1::5:6:7:8       1:2:3::5:6:7:8  1:2:3::8\n"}, {"line_no": 40, "char_start": 931, "char_end": 1050, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|\"  # TEST: 1::4:5:6:7:8     1:2::4:5:6:7:8  1:2::8\n"}, {"line_no": 41, "char_start": 931, "char_end": 1048, "line": "RE_IPV6=\"${RE_IPV6}[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|\"       # TEST: 1::3:4:5:6:7:8   1::3:4:5:6:7:8  1::8\n"}, {"line_no": 48, "char_start": 1687, "char_end": 1812, "line": "RE_IPV6=\"${RE_IPV6}:((:[0-9a-fA-F]{1,4}){1,7}|:)|\"                     # TEST: ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8 ::8       ::\n"}, {"line_no": 50, "char_start": 1802, "char_end": 1994, "line": "RE_IPV6=\"${RE_IPV6}fe08:(:[0-9a-fA-F]{1,4}){2,2}%[0-9a-zA-Z]{1,}|\"     # TEST: fe08::7:8%eth0      fe08::7:8%1                                      (link-local IPv6 addresses with zone index)\n"}, {"line_no": 52, "char_start": 2000, "char_end": 2207, "line": "RE_IPV6=\"${RE_IPV6}::(ffff(:0{1,4}){0,1}:){0,1}${RE_IPV4}|\"            # TEST: ::255.255.255.255   ::ffff:255.255.255.255  ::ffff:0:255.255.255.255 (IPv4-mapped IPv6 addresses and IPv4-translated addresses)\n"}, {"line_no": 54, "char_start": 2181, "char_end": 2358, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}:${RE_IPV4}\"                # TEST: 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33                        (IPv4-Embedded IPv6 Address)\n"}], "added": [{"line_no": 33, "char_start": 705, "char_end": 797, "line": "RE_IPV6=\"([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|\"                    # TEST: <IP-Address>\n"}, {"line_no": 35, "char_start": 797, "char_end": 931, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,7}:|\"                         # TEST: <IP-Address>                              <IP-Address>\n"}, {"line_no": 42, "char_start": 931, "char_end": 1062, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|\"         # TEST: <IP-Address>             <IP-Address>  <IP-Address>\n"}, {"line_no": 43, "char_start": 1062, "char_end": 1191, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|\"  # TEST: <IP-Address>           <IP-Address>  <IP-Address>\n"}, {"line_no": 44, "char_start": 1191, "char_end": 1318, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|\"  # TEST: <IP-Address>         <IP-Address>  <IP-Address>\n"}, {"line_no": 45, "char_start": 1318, "char_end": 1443, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"  # TEST: <IP-Address>       <IP-Address>  <IP-Address>\n"}, {"line_no": 46, "char_start": 1443, "char_end": 1566, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|\"  # TEST: <IP-Address>     <IP-Address>  <IP-Address>\n"}, {"line_no": 47, "char_start": 1566, "char_end": 1687, "line": "RE_IPV6=\"${RE_IPV6}[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|\"       # TEST: <IP-Address>   <IP-Address>  <IP-Address>\n"}, {"line_no": 49, "char_start": 1687, "char_end": 1802, "line": "RE_IPV6=\"${RE_IPV6}:((:[0-9a-fA-F]{1,4}){1,7}|:)|\"                     # TEST: <IP-Address>  <IP-Address>       ::\n"}, {"line_no": 51, "char_start": 1802, "char_end": 2000, "line": "RE_IPV6=\"${RE_IPV6}fe08:(:[0-9a-fA-F]{1,4}){2,2}%[0-9a-zA-Z]{1,}|\"     # TEST: <IP-Address>%eth0      <IP-Address>%1                                      (link-local IPv6 addresses with zone index)\n"}, {"line_no": 53, "char_start": 2000, "char_end": 2181, "line": "RE_IPV6=\"${RE_IPV6}::(ffff(:0{1,4}){0,1}:){0,1}${RE_IPV4}|\"            # TEST: <IP-Address>   :<IP-Address>  <IP-Address> (IPv4-mapped IPv6 addresses and IPv4-translated addresses)\n"}, {"line_no": 55, "char_start": 2181, "char_end": 2339, "line": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}:${RE_IPV4}\"                # TEST: <IP-Address>  <IP-Address>                        (IPv4-Embedded IPv6 Address)\n"}]}, "char_changes": {"deleted": [{"char_start": 705, "char_end": 800, "chars": "RE_IPV6=\"([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|\"                    # TEST: 1:2:3:4:5:6:7:8\n"}, {"char_start": 797, "char_end": 925, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,7}:|\"                         # TEST: 1::                              1:2:3:4:5:6:7::\n"}, {"char_start": 931, "char_end": 1058, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|\"         # TEST: 1::8             1:2:3:4:5:6::8  1:2:3:4:5:6::8\n"}, {"char_start": 931, "char_end": 1056, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|\"  # TEST: 1::7:8           1:2:3:4:5::7:8  1:2:3:4:5::8\n"}, {"char_start": 931, "char_end": 1054, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|\"  # TEST: 1::6:7:8         1:2:3:4::6:7:8  1:2:3:4::8\n"}, {"char_start": 931, "char_end": 1052, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"  # TEST: 1::5:6:7:8       1:2:3::5:6:7:8  1:2:3::8\n"}, {"char_start": 931, "char_end": 1050, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|\"  # TEST: 1::4:5:6:7:8     1:2::4:5:6:7:8  1:2::8\n"}, {"char_start": 931, "char_end": 1048, "chars": "RE_IPV6=\"${RE_IPV6}[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|\"       # TEST: 1::3:4:5:6:7:8   1::3:4:5:6:7:8  1::8\n"}, {"char_start": 1687, "char_end": 1812, "chars": "RE_IPV6=\"${RE_IPV6}:((:[0-9a-fA-F]{1,4}){1,7}|:)|\"                     # TEST: ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8 ::8       ::\n"}, {"char_start": 1802, "char_end": 1994, "chars": "RE_IPV6=\"${RE_IPV6}fe08:(:[0-9a-fA-F]{1,4}){2,2}%[0-9a-zA-Z]{1,}|\"     # TEST: fe08::7:8%eth0      fe08::7:8%1                                      (link-local IPv6 addresses with zone index)\n"}, {"char_start": 2000, "char_end": 2207, "chars": "RE_IPV6=\"${RE_IPV6}::(ffff(:0{1,4}){0,1}:){0,1}${RE_IPV4}|\"            # TEST: ::255.255.255.255   ::ffff:255.255.255.255  ::ffff:0:255.255.255.255 (IPv4-mapped IPv6 addresses and IPv4-translated addresses)\n"}, {"char_start": 2181, "char_end": 2358, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}:${RE_IPV4}\"                # TEST: 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33                        (IPv4-Embedded IPv6 Address)\n"}], "added": [{"char_start": 705, "char_end": 797, "chars": "RE_IPV6=\"([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|\"                    # TEST: <IP-Address>\n"}, {"char_start": 797, "char_end": 931, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,7}:|\"                         # TEST: <IP-Address>                              <IP-Address>\n"}, {"char_start": 931, "char_end": 1062, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|\"         # TEST: <IP-Address>             <IP-Address>  <IP-Address>\n"}, {"char_start": 1062, "char_end": 1191, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|\"  # TEST: <IP-Address>           <IP-Address>  <IP-Address>\n"}, {"char_start": 1191, "char_end": 1318, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|\"  # TEST: <IP-Address>         <IP-Address>  <IP-Address>\n"}, {"char_start": 1318, "char_end": 1443, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"  # TEST: <IP-Address>       <IP-Address>  <IP-Address>\n"}, {"char_start": 1443, "char_end": 1566, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|\"  # TEST: <IP-Address>     <IP-Address>  <IP-Address>\n"}, {"char_start": 1566, "char_end": 1687, "chars": "RE_IPV6=\"${RE_IPV6}[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|\"       # TEST: <IP-Address>   <IP-Address>  <IP-Address>\n"}, {"char_start": 1687, "char_end": 1802, "chars": "RE_IPV6=\"${RE_IPV6}:((:[0-9a-fA-F]{1,4}){1,7}|:)|\"                     # TEST: <IP-Address>  <IP-Address>       ::\n"}, {"char_start": 1802, "char_end": 2000, "chars": "RE_IPV6=\"${RE_IPV6}fe08:(:[0-9a-fA-F]{1,4}){2,2}%[0-9a-zA-Z]{1,}|\"     # TEST: <IP-Address>%eth0      <IP-Address>%1                                      (link-local IPv6 addresses with zone index)\n"}, {"char_start": 2000, "char_end": 2181, "chars": "RE_IPV6=\"${RE_IPV6}::(ffff(:0{1,4}){0,1}:){0,1}${RE_IPV4}|\"            # TEST: <IP-Address>   :<IP-Address>  <IP-Address> (IPv4-mapped IPv6 addresses and IPv4-translated addresses)\n"}, {"char_start": 2181, "char_end": 2339, "chars": "RE_IPV6=\"${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}:${RE_IPV4}\"                # TEST: <IP-Address>  <IP-Address>                        (IPv4-Embedded IPv6 Address)\n"}]}}
{"func_name": 11351, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#!/bin/bash\n\nAWS_URL=\"http://169.254.169.254/latest/dynamic/instance-identity/document\"\n\nAZURE_REGION_URL=\"http://169.254.169.254/metadata/instance/compute/location?api-version=2017-08-01&format=text\"\nAZURE_FD_URL=\"http://169.254.169.254/metadata/instance/compute/platformFaultDomain?api-version=2017-04-02&format=text\"\n\nGCP_METADATA_URL=\"http://metadata.google.internal/computeMetadata/v1/instance/zone\"\n\n\nfunction aws() {\n    METADATA=\"$(curl -f -m3 $AWS_URL 2>/dev/null)\"\n    rc=$?\n    if [ $rc -ne 0 ]; then\n        echo \"unable to fetch aws region/zone. URL $AWS_URL. Ret code $rc\" >&2\n        exit 1\n    fi\n    REGION=$(echo $METADATA | grep -Po \"\\\"region\\\"\\s+:\\s+\\\"(.*?)\\\"\" | cut -f2 -d: | tr -d ' \\\"')\n    ZONE=$(echo $METADATA | grep -Po \"\\\"availabilityZone\\\"\\s+:\\s+\\\"(.*?)\\\"\" | cut -f2 -d: | tr -d ' \\\"')\n    echo \"{\\\"fault_domain\\\":{\\\"region\\\":{\\\"name\\\": \\\"aws/$REGION\\\"},\\\"zone\\\":{\\\"name\\\": \\\"aws/$ZONE\\\"}}}\"\n}\n\nfunction azure() {\n    REGION=$(curl -f -m3 -H Metadata:true \"$AZURE_REGION_URL\" 2>/dev/null)\n    rc=$?\n    if [ $rc -ne 0 ]; then\n      echo \"unable to fetch azure region. URL $AZURE_REGION_URL. Ret code $rc\" >&2\n      exit 1\n    fi\n\n    FAULT_DOMAIN=$(curl -f -m3 -H Metadata:true \"$AZURE_FD_URL\" 2>/dev/null)\n    rc=$?\n    if [ $rc -ne 0 ]; then\n      echo \"unable to fetch azure fault domain. URL $AZURE_FD_URL. Ret code $rc\" >&2\n      exit 1\n    fi\n\n    echo \"{\\\"fault_domain\\\":{\\\"region\\\":{\\\"name\\\": \\\"azure/$REGION\\\"},\\\"zone\\\":{\\\"name\\\": \\\"azure/$FAULT_DOMAIN\\\"}}}\"\n}\n\nfunction gcp() {\n    BODY=$(curl -f -m3 -H \"Metadata-Flavor: Google\" \"$GCP_METADATA_URL\" 2>/dev/null)\n    rc=$?\n    if [ $rc -ne 0 ]; then\n      echo \"unable to fetch gcp metadata. URL $GCP_METADATA_URL. Ret code $rc\" >&2\n      exit 1\n    fi\n\n    ZONE=$(echo \"$BODY\" | sed 's@^projects/.*/zones/\\(.*\\)$@\\1@')\n    REGION=$(echo \"$ZONE\" | sed 's@\\(.*-.*\\)-.*@\\1@')", "func_src_after": "#!/bin/bash\n\nAWS_URL=\"http://<IP-Address>/latest/dynamic/instance-identity/document\"\n\nAZURE_REGION_URL=\"http://<IP-Address>/metadata/instance/compute/location?api-version=2017-08-01&format=text\"\nAZURE_FD_URL=\"http://<IP-Address>/metadata/instance/compute/platformFaultDomain?api-version=2017-04-02&format=text\"\n\nGCP_METADATA_URL=\"http://metadata.google.internal/computeMetadata/v1/instance/zone\"\n\n\nfunction aws() {\n    METADATA=\"$(curl -f -m3 $AWS_URL 2>/dev/null)\"\n    rc=$?\n    if [ $rc -ne 0 ]; then\n        echo \"unable to fetch aws region/zone. URL $AWS_URL. Ret code $rc\" >&2\n        exit 1\n    fi\n    REGION=$(echo $METADATA | grep -Po \"\\\"region\\\"\\s+:\\s+\\\"(.*?)\\\"\" | cut -f2 -d: | tr -d ' \\\"')\n    ZONE=$(echo $METADATA | grep -Po \"\\\"availabilityZone\\\"\\s+:\\s+\\\"(.*?)\\\"\" | cut -f2 -d: | tr -d ' \\\"')\n    echo \"{\\\"fault_domain\\\":{\\\"region\\\":{\\\"name\\\": \\\"aws/$REGION\\\"},\\\"zone\\\":{\\\"name\\\": \\\"aws/$ZONE\\\"}}}\"\n}\n\nfunction azure() {\n    REGION=$(curl -f -m3 -H Metadata:true \"$AZURE_REGION_URL\" 2>/dev/null)\n    rc=$?\n    if [ $rc -ne 0 ]; then\n      echo \"unable to fetch azure region. URL $AZURE_REGION_URL. Ret code $rc\" >&2\n      exit 1\n    fi\n\n    FAULT_DOMAIN=$(curl -f -m3 -H Metadata:true \"$AZURE_FD_URL\" 2>/dev/null)\n    rc=$?\n    if [ $rc -ne 0 ]; then\n      echo \"unable to fetch azure fault domain. URL $AZURE_FD_URL. Ret code $rc\" >&2\n      exit 1\n    fi\n\n    echo \"{\\\"fault_domain\\\":{\\\"region\\\":{\\\"name\\\": \\\"azure/$REGION\\\"},\\\"zone\\\":{\\\"name\\\": \\\"azure/$FAULT_DOMAIN\\\"}}}\"\n}\n\nfunction gcp() {\n    BODY=$(curl -f -m3 -H \"Metadata-Flavor: Google\" \"$GCP_METADATA_URL\" 2>/dev/null)\n    rc=$?\n    if [ $rc -ne 0 ]; then\n      echo \"unable to fetch gcp metadata. URL $GCP_METADATA_URL. Ret code $rc\" >&2\n      exit 1\n    fi\n\n    ZONE=$(echo \"$BODY\" | sed 's@^projects/.*/zones/\\(.*\\)$@\\1@')\n    REGION=$(echo \"$ZONE\" | sed 's@\\(.*-.*\\)-.*@\\1@')", "line_changes": {"deleted": [{"line_no": 3, "char_start": 13, "char_end": 88, "line": "AWS_URL=\"http://169.254.169.254/latest/dynamic/instance-identity/document\"\n"}, {"line_no": 6, "char_start": 86, "char_end": 198, "line": "AZURE_REGION_URL=\"http://169.254.169.254/metadata/instance/compute/location?api-version=2017-08-01&format=text\"\n"}, {"line_no": 8, "char_start": 195, "char_end": 314, "line": "AZURE_FD_URL=\"http://169.254.169.254/metadata/instance/compute/platformFaultDomain?api-version=2017-04-02&format=text\"\n"}], "added": [{"line_no": 4, "char_start": 13, "char_end": 85, "line": "AWS_URL=\"http://<IP-Address>/latest/dynamic/instance-identity/document\"\n"}, {"line_no": 7, "char_start": 86, "char_end": 195, "line": "AZURE_REGION_URL=\"http://<IP-Address>/metadata/instance/compute/location?api-version=2017-08-01&format=text\"\n"}, {"line_no": 9, "char_start": 195, "char_end": 311, "line": "AZURE_FD_URL=\"http://<IP-Address>/metadata/instance/compute/platformFaultDomain?api-version=2017-04-02&format=text\"\n"}]}, "char_changes": {"deleted": [{"char_start": 13, "char_end": 88, "chars": "AWS_URL=\"http://169.254.169.254/latest/dynamic/instance-identity/document\"\n"}, {"char_start": 86, "char_end": 198, "chars": "AZURE_REGION_URL=\"http://169.254.169.254/metadata/instance/compute/location?api-version=2017-08-01&format=text\"\n"}, {"char_start": 195, "char_end": 314, "chars": "AZURE_FD_URL=\"http://169.254.169.254/metadata/instance/compute/platformFaultDomain?api-version=2017-04-02&format=text\"\n"}], "added": [{"char_start": 13, "char_end": 85, "chars": "AWS_URL=\"http://<IP-Address>/latest/dynamic/instance-identity/document\"\n"}, {"char_start": 86, "char_end": 195, "chars": "AZURE_REGION_URL=\"http://<IP-Address>/metadata/instance/compute/location?api-version=2017-08-01&format=text\"\n"}, {"char_start": 195, "char_end": 311, "chars": "AZURE_FD_URL=\"http://<IP-Address>/metadata/instance/compute/platformFaultDomain?api-version=2017-04-02&format=text\"\n"}]}}
{"func_name": 11361, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    sed -i \"s/127.0.1.1.*$CURRENT_HOSTNAME/127.0.1.1\\t$NEW_HOSTNAME/g\" /etc/hosts\n    reboot\n  fi \n}\n\ndo_config\n", "func_src_after": "    sed -i \"s/<IP-Address>*$CURRENT_HOSTNAME/<IP-Address>\\t$NEW_HOSTNAME/g\" /etc/hosts\n    reboot\n  fi \n}\n\ndo_config\n", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 82, "line": "    sed -i \"s/127.0.1.1.*$CURRENT_HOSTNAME/127.0.1.1\\t$NEW_HOSTNAME/g\" /etc/hosts\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 87, "line": "    sed -i \"s/<IP-Address>*$CURRENT_HOSTNAME/<IP-Address>\\t$NEW_HOSTNAME/g\" /etc/hosts\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 82, "chars": "    sed -i \"s/127.0.1.1.*$CURRENT_HOSTNAME/127.0.1.1\\t$NEW_HOSTNAME/g\" /etc/hosts\n"}], "added": [{"char_start": 0, "char_end": 87, "chars": "    sed -i \"s/<IP-Address>*$CURRENT_HOSTNAME/<IP-Address>\\t$NEW_HOSTNAME/g\" /etc/hosts\n"}]}}
{"func_name": 11484, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        end\n        local key = ('%s|%p'):format(infer.type, infer.source)\n        if mark[key] then\n            infers[i] = infers[#infers]\n            infers[#infers] = nil\n        else\n            mark[key] = true\n        end\n    end\nend\n\nfunction m.searchInfer(status, obj)\n    while obj.type == 'paren' do\n        obj = obj.exp\n    end\n    obj = m.getObjectValue(obj) or obj\n\n    local cache, makeCache\n    if status.interface.cache then\n        cache, makeCache = status.interface.cache(obj, 'infer')\n    end\n    if cache then\n        for i = 1, #cache do\n            status.results[#status.results+1] = cache[i]\n        end\n        return\n    end\n\n    if DEVELOP then\n        status.cache.clock = status.cache.clock or osClock()\n    end\n\n    local checked = m.inferCheckLiteral(status, obj)\n                 or m.inferCheckUnary(status, obj)\n                 or m.inferCheckBinary(status, obj)\n                 or m.inferCheckLibraryTypes(status, obj)\n                 or m.inferCheckLibrary(status, obj)\n                 or m.inferCheckLibraryReturn(status, obj)\n    if checked then\n        m.cleanInfers(status.results)\n        if makeCache then\n            makeCache(status.results)\n        end\n        return\n    end\n\n    m.inferByLibraryArg(status, obj)\n    m.inferByDef(status, obj)\n    m.inferBySet(status, obj)\n    m.inferByCall(status, obj)", "func_src_after": "        end\n        local key = ('%s|%p'):format(infer.type, infer.source)\n        if mark[key] then\n            infers[i] = infers[#infers]\n            infers[#infers] = nil\n        else\n            mark[key] = true\n        end\n    end\nend\n\nfunction m.searchInfer(status, obj)\n    while obj.type == 'paren' do\n        obj = obj.exp\n    end\n    obj = m.getObjectValue(obj) or obj\n\n    local cache, makeCache\n    if status.interface.cache then\n        cache, makeCache = status.interface.cache(obj, 'infer')\n    end\n    if cache then\n        for i = 1, #cache do\n            status.results[#status.results+1] = cache[i]\n        end\n        return\n    end\n\n    if DEVELOP then\n        status.cache.clock = status.cache.clock or osClock()\n    end\n\n    local checked = m.inferCheckLiteral(status, obj)\n                 or m.inferCheckUnary(status, obj)\n                 or m.inferCheckBinary(status, obj)\n                 or m.inferCheckLibraryTypes(status, obj)\n                 or m.inferCheckLibrary(status, obj)\n                 or m.inferCheckLibraryReturn(status, obj)\n    if checked then\n        m.cleanInfers(status.results)\n        if makeCache then\n            makeCache(status.results)\n        end\n        return\n    end\n\n    m.inferByLibraryArg(status, obj)\n    m.inferByDef(status, obj)\n    m.inferBySet(status, obj)\n    m.inferByCall(status, obj)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11530, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "[\"Tuckor\"] = \"LT:775/97%SB:808/99%EM:905/93%\",\n[\"Eggywar\"] = \"LT:785/98%\",\n[\"Icechill\"] = \"ET:739/94%EB:623/94%EM:834/88%\",\n[\"Lerts\"] = \"LT:781/98%SB:811/99%SM:1007/99%\",\n[\"Gforce\"] = \"LT:775/97%LB:777/98%SM:1077/99%\",\n[\"Ghostie\"] = \"LT:783/98%SB:798/99%LM:953/96%\",\n[\"Henessey\"] = \"LT:742/95%LB:750/96%LM:930/96%\",\n[\"Raedorai\"] = \"ST:869/99%SB:823/99%LM:977/98%\",\n[\"Paper\"] = \"ET:731/94%EB:683/88%EM:797/85%\",\n[\"Gunji\"] = \"ET:708/91%EB:730/92%EM:841/89%\",\n[\"Phreq\"] = \"ET:663/90%LB:604/96%LM:921/96%\",\n[\"Fps\"] = \"LT:764/97%LB:784/98%LM:972/98%\",\n[\"Usainjob\"] = \"LT:790/98%SB:799/99%LM:854/98%\",\n[\"Sága\"] = \"LT:783/98%LB:772/97%LM:970/98%\",\n[\"Porkbutt\"] = \"LT:769/97%LB:798/98%SM:1009/99%\",\n[\"Hpscat\"] = \"ST:793/99%SB:837/99%LM:895/98%\",\n[\"Mohamed\"] = \"LT:779/98%LB:764/96%EM:912/94%\",\n[\"Itsgood\"] = \"ST:832/99%SB:840/99%SM:1037/99%\",\n[\"Cit\"] = \"ST:804/99%LB:753/97%EM:837/92%\",\n[\"Imola\"] = \"LT:757/96%SB:831/99%SM:1020/99%\",\n[\"Desert\"] = \"ST:843/99%SB:829/99%SM:1041/99%\",\n[\"Lightcraft\"] = \"ET:724/93%LB:795/98%SM:999/99%\",\n[\"Fightman\"] = \"ST:866/99%SB:830/99%SM:983/99%\",\n[\"Cdx\"] = \"ST:795/99%SB:836/99%SM:1028/99%\",\n[\"Rebar\"] = \"LT:756/96%EB:750/94%LM:848/97%\",\n[\"Guyenne\"] = \"ET:688/90%LB:760/96%LM:874/98%\",\n[\"Lamoot\"] = \"ET:731/93%EB:740/93%LM:797/96%\",\n[\"Shecky\"] = \"ET:686/92%SB:837/99%SM:1060/99%\",\n[\"Wicks\"] = \"LT:769/97%LB:782/98%EM:815/87%\",\n[\"Kurthos\"] = \"ET:741/94%EB:742/94%SM:1025/99%\",\n[\"Auraphex\"] = \"LT:749/95%EB:578/92%EM:764/89%\",\n[\"Hombremacho\"] = \"ET:719/92%EB:719/91%EM:567/86%\",\n[\"Burnitall\"] = \"LT:746/95%EB:675/87%EM:861/90%\",\n[\"Liime\"] = \"ST:792/99%SB:821/99%LM:909/97%\",\n[\"Skrewed\"] = \"ET:742/94%LB:769/96%EM:894/91%\",\n[\"Fatherquad\"] = \"ET:741/94%LB:737/98%EM:900/94%\",\n[\"Autohax\"] = \"ET:643/86%LB:779/98%EM:387/85%\",\n[\"Raelz\"] = \"ET:703/91%EB:744/94%EM:840/87%\",\n[\"Dirtay\"] = \"LT:764/96%LB:750/95%LM:943/96%\",\n[\"Tyrele\"] = \"LT:761/96%LB:751/95%EM:881/90%\",\n[\"Kitchenhelp\"] = \"LT:741/95%LB:785/98%LM:957/97%\",\n[\"Vtecgodx\"] = \"ST:781/99%LB:647/97%LM:956/97%\",\n[\"Chogan\"] = \"ST:807/99%SB:792/99%LM:988/98%\",\n[\"Xist\"] = \"LT:757/96%LB:726/95%EM:794/85%\",\n[\"Fattdabs\"] = \"LT:787/98%SB:862/99%SM:1104/99%\",\n[\"Bigdumper\"] = \"ST:617/99%SB:867/99%SM:1028/99%\",\n[\"Sevatariòn\"] = \"ET:280/85%EB:710/90%EM:472/81%\",\n[\"Éolo\"] = \"ET:711/92%RB:501/68%EM:706/76%\",\n[\"Waynecarr\"] = \"LT:760/96%LB:753/95%LM:850/97%\",\n[\"Lexing\"] = \"LT:835/97%LB:709/95%EM:596/89%\",", "func_src_after": "[\"Tuckor\"] = \"LT:775/97%SB:808/99%EM:905/93%\",\n[\"Eggywar\"] = \"LT:785/98%\",\n[\"Icechill\"] = \"ET:739/94%EB:623/94%EM:834/88%\",\n[\"Lerts\"] = \"LT:781/98%SB:811/99%SM:1007/99%\",\n[\"Gforce\"] = \"LT:775/97%LB:777/98%SM:1077/99%\",\n[\"Ghostie\"] = \"LT:783/98%SB:798/99%LM:953/96%\",\n[\"Henessey\"] = \"LT:742/95%LB:750/96%LM:930/96%\",\n[\"Raedorai\"] = \"ST:869/99%SB:823/99%LM:977/98%\",\n[\"Paper\"] = \"ET:731/94%EB:683/88%EM:797/85%\",\n[\"Gunji\"] = \"ET:708/91%EB:730/92%EM:841/89%\",\n[\"Phreq\"] = \"ET:663/90%LB:604/96%LM:921/96%\",\n[\"Fps\"] = \"LT:764/97%LB:784/98%LM:972/98%\",\n[\"Usainjob\"] = \"LT:790/98%SB:799/99%LM:854/98%\",\n[\"Sága\"] = \"LT:783/98%LB:772/97%LM:970/98%\",\n[\"Porkbutt\"] = \"LT:769/97%LB:798/98%SM:1009/99%\",\n[\"Hpscat\"] = \"ST:793/99%SB:837/99%LM:895/98%\",\n[\"Mohamed\"] = \"LT:779/98%LB:764/96%EM:912/94%\",\n[\"Itsgood\"] = \"ST:832/99%SB:840/99%SM:1037/99%\",\n[\"Cit\"] = \"ST:804/99%LB:753/97%EM:837/92%\",\n[\"Imola\"] = \"LT:757/96%SB:831/99%SM:1020/99%\",\n[\"Desert\"] = \"ST:843/99%SB:829/99%SM:1041/99%\",\n[\"Lightcraft\"] = \"ET:724/93%LB:795/98%SM:999/99%\",\n[\"Fightman\"] = \"ST:866/99%SB:830/99%SM:983/99%\",\n[\"Cdx\"] = \"ST:795/99%SB:836/99%SM:1028/99%\",\n[\"Rebar\"] = \"LT:756/96%EB:750/94%LM:848/97%\",\n[\"Guyenne\"] = \"ET:688/90%LB:760/96%LM:874/98%\",\n[\"Lamoot\"] = \"ET:731/93%EB:740/93%LM:797/96%\",\n[\"Shecky\"] = \"ET:686/92%SB:837/99%SM:1060/99%\",\n[\"Wicks\"] = \"LT:769/97%LB:782/98%EM:815/87%\",\n[\"Kurthos\"] = \"ET:741/94%EB:742/94%SM:1025/99%\",\n[\"Auraphex\"] = \"LT:749/95%EB:578/92%EM:764/89%\",\n[\"Hombremacho\"] = \"ET:719/92%EB:719/91%EM:567/86%\",\n[\"Burnitall\"] = \"LT:746/95%EB:675/87%EM:861/90%\",\n[\"Liime\"] = \"ST:792/99%SB:821/99%LM:909/97%\",\n[\"Skrewed\"] = \"ET:742/94%LB:769/96%EM:894/91%\",\n[\"Fatherquad\"] = \"ET:741/94%LB:737/98%EM:900/94%\",\n[\"Autohax\"] = \"ET:643/86%LB:779/98%EM:387/85%\",\n[\"Raelz\"] = \"ET:703/91%EB:744/94%EM:840/87%\",\n[\"Dirtay\"] = \"LT:764/96%LB:750/95%LM:943/96%\",\n[\"Tyrele\"] = \"LT:761/96%LB:751/95%EM:881/90%\",\n[\"Kitchenhelp\"] = \"LT:741/95%LB:785/98%LM:957/97%\",\n[\"Vtecgodx\"] = \"ST:781/99%LB:647/97%LM:956/97%\",\n[\"Chogan\"] = \"ST:807/99%SB:792/99%LM:988/98%\",\n[\"Xist\"] = \"LT:757/96%LB:726/95%EM:794/85%\",\n[\"Fattdabs\"] = \"LT:787/98%SB:862/99%SM:1104/99%\",\n[\"Bigdumper\"] = \"ST:617/99%SB:867/99%SM:1028/99%\",\n[\"Sevatariòn\"] = \"ET:280/85%EB:710/90%EM:472/81%\",\n[\"Éolo\"] = \"ET:711/92%RB:501/68%EM:706/76%\",\n[\"Waynecarr\"] = \"LT:760/96%LB:753/95%LM:850/97%\",\n[\"Lexing\"] = \"LT:835/97%LB:709/95%EM:596/89%\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11631, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "-- Attribute of status object\nstat             = (mkrb \"stat\")             :: JSValue -> String\nerr              = (mkrb \"err\")              :: JSValue -> JSValue\nmsg              = (mkrb \"msg\")              :: JSValue -> String\ncode             = (mkrb \"code\")             :: JSValue -> String\n\n-- Attributes of Group object\ndisplay_name     = (mkrb \"display_name\")     :: JSValue -> String\nmailing_list     = (mkrb \"mailing_list\")     :: JSValue -> String\nurl              = (mkrb \"url\")              :: JSValue -> String\n\n-- Attributes of User object\nusername         = (mkrb \"username\")         :: JSValue -> String\nfirst_name       = (mkrb \"first_name\")       :: JSValue -> String\nlast_name        = (mkrb \"last_name\")        :: JSValue -> String\nfullname         = (mkrb \"fullname\")         :: JSValue -> String\nemail            = (mkrb \"email\")            :: JSValue -> String\n\n-- Attributes of ReviewRequest object\nsubmitter        = (mkrb \"submitter\")        :: JSValue -> JSValue\ntime_added       = (mkrb \"time_added\")       :: JSValue -> String\nstatus           = (mkrb \"status\")           :: JSValue -> String\nchangenum        = (mkrb \"changenum\")        :: JSValue -> Integer\n\n-- Attributes of ReviewRequestDraft object\nreview_request   = (mkrb \"review_request\")   :: JSValue -> JSValue\nreview_requests  = (mkrb \"review_requests\")  :: JSValue -> [JSValue]\ntesting_done     = (mkrb \"testing_done\")     :: JSValue -> String\n\n-- Attributes of Review\nuser             = (mkrb \"user\")             :: JSValue -> JSValue\nusers            = (mkrb \"users\")            :: JSValue -> [JSValue]\nship_it          = (mkrb \"ship_it\")          :: JSValue -> Bool\nbody_top         = (mkrb \"body_top\")         :: JSValue -> String\nbody_bottom      = (mkrb \"body_bottom\")      :: JSValue -> String\ncomments         = (mkrb \"comments\")         :: JSValue -> JSValue\n\n-- Attributes of Repository object\npath             = (mkrb \"path\")             :: JSValue -> String\ntool             = (mkrb \"tool\")             :: JSValue -> String\n\n-- Attributes of Comment object\nfilediff         = (mkrb \"filediff\")         :: JSValue -> JSValue\ninterfilediff    = (mkrb \"interfilediff\")    :: JSValue -> JSValue\nfirst_line       = (mkrb \"first_line\")       :: JSValue -> Integer\nlast_line        = (mkrb \"last_line\")        :: JSValue -> Integer\nnum_lines        = (mkrb \"num_lines\")        :: JSValue -> Integer\n\n-- Attributes of Comment object\ncaption          = (mkrb \"caption\")          :: JSValue -> String", "func_src_after": "-- Attribute of status object\nstat             = (mkrb \"stat\")             :: JSValue -> String\nerr              = (mkrb \"err\")              :: JSValue -> JSValue\nmsg              = (mkrb \"msg\")              :: JSValue -> String\ncode             = (mkrb \"code\")             :: JSValue -> String\n\n-- Attributes of Group object\ndisplay_name     = (mkrb \"display_name\")     :: JSValue -> String\nmailing_list     = (mkrb \"mailing_list\")     :: JSValue -> String\nurl              = (mkrb \"url\")              :: JSValue -> String\n\n-- Attributes of User object\nusername         = (mkrb \"username\")         :: JSValue -> String\nfirst_name       = (mkrb \"first_name\")       :: JSValue -> String\nlast_name        = (mkrb \"last_name\")        :: JSValue -> String\nfullname         = (mkrb \"fullname\")         :: JSValue -> String\nemail            = (mkrb \"email\")            :: JSValue -> String\n\n-- Attributes of ReviewRequest object\nsubmitter        = (mkrb \"submitter\")        :: JSValue -> JSValue\ntime_added       = (mkrb \"time_added\")       :: JSValue -> String\nstatus           = (mkrb \"status\")           :: JSValue -> String\nchangenum        = (mkrb \"changenum\")        :: JSValue -> Integer\n\n-- Attributes of ReviewRequestDraft object\nreview_request   = (mkrb \"review_request\")   :: JSValue -> JSValue\nreview_requests  = (mkrb \"review_requests\")  :: JSValue -> [JSValue]\ntesting_done     = (mkrb \"testing_done\")     :: JSValue -> String\n\n-- Attributes of Review\nuser             = (mkrb \"user\")             :: JSValue -> JSValue\nusers            = (mkrb \"users\")            :: JSValue -> [JSValue]\nship_it          = (mkrb \"ship_it\")          :: JSValue -> Bool\nbody_top         = (mkrb \"body_top\")         :: JSValue -> String\nbody_bottom      = (mkrb \"body_bottom\")      :: JSValue -> String\ncomments         = (mkrb \"comments\")         :: JSValue -> JSValue\n\n-- Attributes of Repository object\npath             = (mkrb \"path\")             :: JSValue -> String\ntool             = (mkrb \"tool\")             :: JSValue -> String\n\n-- Attributes of Comment object\nfilediff         = (mkrb \"filediff\")         :: JSValue -> JSValue\ninterfilediff    = (mkrb \"interfilediff\")    :: JSValue -> JSValue\nfirst_line       = (mkrb \"first_line\")       :: JSValue -> Integer\nlast_line        = (mkrb \"last_line\")        :: JSValue -> Integer\nnum_lines        = (mkrb \"num_lines\")        :: JSValue -> Integer\n\n-- Attributes of Comment object\ncaption          = (mkrb \"caption\")          :: JSValue -> String", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11678, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                        fillColor: {\n                            linearGradient: {\n                                x1: 0,\n                                y1: 0,\n                                x2: 0,\n                                y2: 1\n                            },\n                            stops: [\n                                [0, Highcharts.getOptions().colors[0]],\n                                [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n                            ]\n                        },\n                        marker: {\n                            radius: 2\n                        },\n                        lineWidth: 1,\n                        states: {\n                            hover: {\n                                lineWidth: 1\n                            }\n                        },\n                        threshold: null\n                    }\n                },\n                series: [{\n                    type: 'area',\n                    name: '访问量',\n                    data: data\n                }]\n            });\n        });\n    </script>\n    <script type=\"text/javascript\" async>\n        var data = getCookie('start');\n        if(null == data || data != \"1\"){\n            window.location.href = \"{% getDC request %}/default.html\";\n        }\n    </script>\n{% endblock %}\n", "func_src_after": "                        fillColor: {\n                            linearGradient: {\n                                x1: 0,\n                                y1: 0,\n                                x2: 0,\n                                y2: 1\n                            },\n                            stops: [\n                                [0, Highcharts.getOptions().colors[0]],\n                                [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n                            ]\n                        },\n                        marker: {\n                            radius: 2\n                        },\n                        lineWidth: 1,\n                        states: {\n                            hover: {\n                                lineWidth: 1\n                            }\n                        },\n                        threshold: null\n                    }\n                },\n                series: [{\n                    type: 'area',\n                    name: '访问量',\n                    data: data\n                }]\n            });\n        });\n    </script>\n    <script type=\"text/javascript\" async>\n        var data = getCookie('start');\n        if(null == data || data != \"1\"){\n            window.location.href = \"{% getDC request %}/default.html\";\n        }\n    </script>\n{% endblock %}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11720, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t<p>Lolly has helped me to learn visualizations such as someone's excessive mind chatter or negative vibes to enter into a big black cauldron instead of allowing those vibes be absorbed into my own being. It has helped me to protect myself and harness my own physical, mental & emotional energies. She also deepened my understanding of cord cutting through ceremony and visual techniques. I now feel more in charge of my healing progress and can now share this deep wisdom with others who may suffer from emotional/energetic wounds. It seems that the universe brought Lolly & I together at a time where we both were seeking female friendship with someone who was deeply rooted in Love. Thank you for bringing deep joy, feminine wisdom &&love into my life. Namaste.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Tina Ulrich</li>\n\t\t\t\t\t<li>West Haven</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>\n\t\t<p>Where I have reached is because of your effort, I have moved 50% in my journey because of you, you remain a role model and a kind, caring, supportive and a loving person in my life and family.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Anena Kevin Okumu</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>\n\t\t<p>you helped to reflect back to me the way that i was judging myself as being either not enough or too much. our session helped bring awareness to how silly my fears and self-judgments are, which allows me to be less attached to these judgments, laugh at them, release them, notice them instead of feeling like they are the truth and move on with my day. you also helped me to feel more comfortable in my own skin, to feel normal, to love myself, my family and my friends even deeper. Thank you.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Jackie Ryan</li>\n\t\t\t\t\t<li>Harmony House, West Haven</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>\n\t\t<p>You helped me understand moon energy, although the euphoria of MDMA probably had a lot to do with it haha. I also felt that I was able to confront some conflict in myself relating to gender roles. I appreciated having you as a female friend, especially in a town where so much emphasis is placed on sexuality.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Adrian </li>\n\t\t\t\t\t<li>New Boston</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t\n\t\t<li>\n\t\t\t<p>You helped provide guidance as I considered entering into the social work profession. Also, your facebook posts always cause me to self-reflect on areas of improvement. They help to keep me accountable to myself and who I want to be.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Apryl</li>\n\t\t\t\t\t<li>Austin, TX; Mental Health Policy</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>", "func_src_after": "\t\t<p>Lolly has helped me to learn visualizations such as someone's excessive mind chatter or negative vibes to enter into a big black cauldron instead of allowing those vibes be absorbed into my own being. It has helped me to protect myself and harness my own physical, mental & emotional energies. She also deepened my understanding of cord cutting through ceremony and visual techniques. I now feel more in charge of my healing progress and can now share this deep wisdom with others who may suffer from emotional/energetic wounds. It seems that the universe brought Lolly & I together at a time where we both were seeking female friendship with someone who was deeply rooted in Love. Thank you for bringing deep joy, feminine wisdom &&love into my life. Namaste.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Tina Ulrich</li>\n\t\t\t\t\t<li>West Haven</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>\n\t\t<p>Where I have reached is because of your effort, I have moved 50% in my journey because of you, you remain a role model and a kind, caring, supportive and a loving person in my life and family.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Anena Kevin Okumu</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>\n\t\t<p>you helped to reflect back to me the way that i was judging myself as being either not enough or too much. our session helped bring awareness to how silly my fears and self-judgments are, which allows me to be less attached to these judgments, laugh at them, release them, notice them instead of feeling like they are the truth and move on with my day. you also helped me to feel more comfortable in my own skin, to feel normal, to love myself, my family and my friends even deeper. Thank you.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Jackie Ryan</li>\n\t\t\t\t\t<li>Harmony House, West Haven</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>\n\t\t<p>You helped me understand moon energy, although the euphoria of MDMA probably had a lot to do with it haha. I also felt that I was able to confront some conflict in myself relating to gender roles. I appreciated having you as a female friend, especially in a town where so much emphasis is placed on sexuality.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Adrian </li>\n\t\t\t\t\t<li>New Boston</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t\n\t\t<li>\n\t\t\t<p>You helped provide guidance as I considered entering into the social work profession. Also, your facebook posts always cause me to self-reflect on areas of improvement. They help to keep me accountable to myself and who I want to be.</p>\n\t\t\t<div class=\"cd-author\">\n\t\t\t\t<!--<img src=\"img/avatar-1.jpg\" alt=\"Author image\">-->\n\t\t\t\t<ul class=\"cd-author-info\">\n\t\t\t\t\t<li>Apryl</li>\n\t\t\t\t\t<li>Austin, TX; Mental Health Policy</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</li>\n\t\t<li>", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11859, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": ";\n; jidctint.asm - accurate integer IDCT (MMX)\n;\n; Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB\n;\n; Based on the x86 SIMD extension for IJG JPEG library\n; Copyright (C) 1999-2006, MIYASAKA Masaru.\n; For conditions of distribution and use, see copyright notice in jsimdext.inc\n;\n; This file should be assembled with NASM (Netwide Assembler),\n; can *not* be assembled with Microsoft's MASM or any compatible\n; assembler (including Borland's Turbo Assembler).\n; NASM is available from http://nasm.sourceforge.net/ or\n; http://sourceforge.net/project/showfiles.php?group_id=6208\n;\n; This file contains a slow-but-accurate integer implementation of the\n; inverse DCT (Discrete Cosine Transform). The following code is based\n; directly on the IJG's original jidctint.c; see the jidctint.c for\n; more details.\n;\n; [TAB8]\n\n%include \"jsimdext.inc\"\n%include \"jdct.inc\"\n\n; --------------------------------------------------------------------------\n\n%define CONST_BITS      13\n%define PASS1_BITS      2\n\n%define DESCALE_P1      (CONST_BITS-PASS1_BITS)\n%define DESCALE_P2      (CONST_BITS+PASS1_BITS+3)\n\n%if CONST_BITS == 13\nF_0_298 equ      2446           ; FIX(0.298631336)\nF_0_390 equ      3196           ; FIX(0.390180644)\nF_0_541 equ      4433           ; FIX(0.541196100)\nF_0_765 equ      6270           ; FIX(0.765366865)\nF_0_899 equ      7373           ; FIX(0.899976223)\nF_1_175 equ      9633           ; FIX(1.175875602)\nF_1_501 equ     12299           ; FIX(1.501321110)\nF_1_847 equ     15137           ; FIX(1.847759065)\nF_1_961 equ     16069           ; FIX(1.961570560)\nF_2_053 equ     16819           ; FIX(2.053119869)\nF_2_562 equ     20995           ; FIX(2.562915447)\nF_3_072 equ     25172           ; FIX(3.072711026)\n%else\n; NASM cannot do compile-time arithmetic on floating-point constants.\n%define DESCALE(x,n)  (((x)+(1<<((n)-1)))>>(n))\nF_0_298 equ     DESCALE( 320652955,30-CONST_BITS)       ; FIX(0.298631336)", "func_src_after": ";\n; jidctint.asm - accurate integer IDCT (MMX)\n;\n; Copyright 2009 Pierre Ossman <<EMAIL>> for Cendio AB\n;\n; Based on the x86 SIMD extension for IJG JPEG library\n; Copyright (C) 1999-2006, MIYASAKA Masaru.\n; For conditions of distribution and use, see copyright notice in jsimdext.inc\n;\n; This file should be assembled with NASM (Netwide Assembler),\n; can *not* be assembled with Microsoft's MASM or any compatible\n; assembler (including Borland's Turbo Assembler).\n; NASM is available from http://nasm.sourceforge.net/ or\n; http://sourceforge.net/project/showfiles.php?group_id=6208\n;\n; This file contains a slow-but-accurate integer implementation of the\n; inverse DCT (Discrete Cosine Transform). The following code is based\n; directly on the IJG's original jidctint.c; see the jidctint.c for\n; more details.\n;\n; [TAB8]\n\n%include \"jsimdext.inc\"\n%include \"jdct.inc\"\n\n; --------------------------------------------------------------------------\n\n%define CONST_BITS      13\n%define PASS1_BITS      2\n\n%define DESCALE_P1      (CONST_BITS-PASS1_BITS)\n%define DESCALE_P2      (CONST_BITS+PASS1_BITS+3)\n\n%if CONST_BITS == 13\nF_0_298 equ      2446           ; FIX(0.298631336)\nF_0_390 equ      3196           ; FIX(0.390180644)\nF_0_541 equ      4433           ; FIX(0.541196100)\nF_0_765 equ      6270           ; FIX(0.765366865)\nF_0_899 equ      7373           ; FIX(0.899976223)\nF_1_175 equ      9633           ; FIX(1.175875602)\nF_1_501 equ     12299           ; FIX(1.501321110)\nF_1_847 equ     15137           ; FIX(1.847759065)\nF_1_961 equ     16069           ; FIX(1.961570560)\nF_2_053 equ     16819           ; FIX(2.053119869)\nF_2_562 equ     20995           ; FIX(2.562915447)\nF_3_072 equ     25172           ; FIX(3.072711026)\n%else\n; NASM cannot do compile-time arithmetic on floating-point constants.\n%define DESCALE(x,n)  (((x)+(1<<((n)-1)))>>(n))\nF_0_298 equ     DESCALE( 320652955,30-CONST_BITS)       ; FIX(0.298631336)", "line_changes": {"deleted": [{"line_no": 4, "char_start": 49, "char_end": 113, "line": "; Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB\n"}], "added": [{"line_no": 5, "char_start": 49, "char_end": 104, "line": "; Copyright 2009 Pierre Ossman <<EMAIL>> for Cendio AB\n"}]}, "char_changes": {"deleted": [{"char_start": 49, "char_end": 113, "chars": "; Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB\n"}], "added": [{"char_start": 49, "char_end": 104, "chars": "; Copyright 2009 Pierre Ossman <<EMAIL>> for Cendio AB\n"}]}}
{"func_name": 11870, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  mov ecx, local_file_descriptor_size\n  externfunc mem.alloc\n  mov dword[edi+file_descriptor.op_table], our_op_table\n  pop dword[edi+file_descriptor.fs_descriptor]\n  xor edx, edx\n  mov [edi+local_file_descriptor.pos], edx\n  mov ebx, edi\n  retn\n\n;                                           -----------------------------------\n;                                                                     cell info\n;==============================================================================\n\nsection .c_info\ndb 0, 0, 1, 'a'\ndd str_cellname\ndd str_author\ndd str_copyrights\nstr_cellname:\tdd \"Seaborgium - simple ramdisk\"\nstr_author:\tdd 'Phil \"Indigo\" Frost (daboy@xgs.dhs.org)'\nstr_copyrights:\tdd 'Copyright 2001 by Phil Frost; distributed under the BSD license'\n\n;                                           -----------------------------------\n;                                                                          data\n;==============================================================================\n\nsection .data\nalign 4\n\nglobal p_disk\t; for fs_test\np_disk:\tdd 0\t; pointer to the disk's RAM chunk\n\nour_file_descriptor: istruc local_file_descriptor\n  at local_file_descriptor.global\n    istruc file_descriptor\n      at file_descriptor.op_table,\tdd our_op_table\n    iend\n  at local_file_descriptor.pos,\tdd 0\t\t; position in the file\niend\n\nour_op_table: istruc file_op_table\nat file_op_table.close,\t\tdd __error\nat file_op_table.read,\t\tdd __read\nat file_op_table.write,\t\tdd __write\nat file_op_table.raw_read,\tdd __raw_read\nat file_op_table.raw_write,\tdd __raw_write\nat file_op_table.seek_cur,\tdd __error\nat file_op_table.seek_start,\tdd __error\nat file_op_table.seek_end,\tdd __error\nat file_op_table.read_fork,\tdd __error", "func_src_after": "  mov ecx, local_file_descriptor_size\n  externfunc mem.alloc\n  mov dword[edi+file_descriptor.op_table], our_op_table\n  pop dword[edi+file_descriptor.fs_descriptor]\n  xor edx, edx\n  mov [edi+local_file_descriptor.pos], edx\n  mov ebx, edi\n  retn\n\n;                                           -----------------------------------\n;                                                                     cell info\n;==============================================================================\n\nsection .c_info\ndb 0, 0, 1, 'a'\ndd str_cellname\ndd str_author\ndd str_copyrights\nstr_cellname:\tdd \"Seaborgium - simple ramdisk\"\nstr_author:\tdd 'Phil \"Indigo\" Frost (<EMAIL>)'\nstr_copyrights:\tdd 'Copyright 2001 by Phil Frost; distributed under the BSD license'\n\n;                                           -----------------------------------\n;                                                                          data\n;==============================================================================\n\nsection .data\nalign 4\n\nglobal p_disk\t; for fs_test\np_disk:\tdd 0\t; pointer to the disk's RAM chunk\n\nour_file_descriptor: istruc local_file_descriptor\n  at local_file_descriptor.global\n    istruc file_descriptor\n      at file_descriptor.op_table,\tdd our_op_table\n    iend\n  at local_file_descriptor.pos,\tdd 0\t\t; position in the file\niend\n\nour_op_table: istruc file_op_table\nat file_op_table.close,\t\tdd __error\nat file_op_table.read,\t\tdd __read\nat file_op_table.write,\t\tdd __write\nat file_op_table.raw_read,\tdd __raw_read\nat file_op_table.raw_write,\tdd __raw_write\nat file_op_table.seek_cur,\tdd __error\nat file_op_table.seek_start,\tdd __error\nat file_op_table.seek_end,\tdd __error\nat file_op_table.read_fork,\tdd __error", "line_changes": {"deleted": [{"line_no": 20, "char_start": 613, "char_end": 670, "line": "str_author:\tdd 'Phil \"Indigo\" Frost (daboy@xgs.dhs.org)'\n"}], "added": [{"line_no": 21, "char_start": 613, "char_end": 660, "line": "str_author:\tdd 'Phil \"Indigo\" Frost (<EMAIL>)'\n"}]}, "char_changes": {"deleted": [{"char_start": 613, "char_end": 670, "chars": "str_author:\tdd 'Phil \"Indigo\" Frost (daboy@xgs.dhs.org)'\n"}], "added": [{"char_start": 613, "char_end": 660, "chars": "str_author:\tdd 'Phil \"Indigo\" Frost (<EMAIL>)'\n"}]}}
{"func_name": 11912, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\tmov si, help_text_2\n\tcall os_print_string\n\tcall next_screen_delay\n\n\tmov si, help_text_3\n\tcall os_print_string\n\tcall next_screen_delay\n\n\tret\n\n\n; SI = message, AX = size (bytes)\nprint_buffer_size:\n\tcall os_print_string\n\tmov bx, ax\n\tcall os_int_to_string\n\tmov si, ax\n\tcall os_print_string\n\tmov si, help_text_bytes\n\tcall os_print_string\n\tcmp bx, 1\n\tje .onebyte\n\n\tmov ah, 0x0E\n\tmov al, 's'\n\tmov bh, 0\n\tint 10h\n\n.onebyte:\n\tcall os_print_newline\n\tret\n\nnext_screen_delay:\n\tcall os_print_newline\n\tmov si, help_text_wait\n\tcall os_print_string\n\tcall os_wait_for_key\n\tcall clear_text_area\n\tret\n\nhelp_text_1:\n  db 'yotta: a nano clone for MikeOS', 13, 10\n  db 'Version 1.03x10^25', 13, 10\n  db 'Copyright (C) Joshua Beck 2015', 13, 10\n  db 'Licenced under the GNU GPL v3', 13, 10\n  db 'Email: zerokelvinkeyboard@gmail.com', 13, 10\n  db 13, 10\n  db 'Memory Usage', 13, 10\n  db '============', 13, 10\n  db 'Total: 65536 bytes', 13, 10, 0", "func_src_after": "\tmov si, help_text_2\n\tcall os_print_string\n\tcall next_screen_delay\n\n\tmov si, help_text_3\n\tcall os_print_string\n\tcall next_screen_delay\n\n\tret\n\n\n; SI = message, AX = size (bytes)\nprint_buffer_size:\n\tcall os_print_string\n\tmov bx, ax\n\tcall os_int_to_string\n\tmov si, ax\n\tcall os_print_string\n\tmov si, help_text_bytes\n\tcall os_print_string\n\tcmp bx, 1\n\tje .onebyte\n\n\tmov ah, 0x0E\n\tmov al, 's'\n\tmov bh, 0\n\tint 10h\n\n.onebyte:\n\tcall os_print_newline\n\tret\n\nnext_screen_delay:\n\tcall os_print_newline\n\tmov si, help_text_wait\n\tcall os_print_string\n\tcall os_wait_for_key\n\tcall clear_text_area\n\tret\n\nhelp_text_1:\n  db 'yotta: a nano clone for MikeOS', 13, 10\n  db 'Version 1.03x10^25', 13, 10\n  db 'Copyright (C) Joshua Beck 2015', 13, 10\n  db 'Licenced under the GNU GPL v3', 13, 10\n  db 'Email: <EMAIL>', 13, 10\n  db 13, 10\n  db 'Memory Usage', 13, 10\n  db '============', 13, 10\n  db 'Total: 65536 bytes', 13, 10, 0", "line_changes": {"deleted": [{"line_no": 46, "char_start": 768, "char_end": 819, "line": "  db 'Email: zerokelvinkeyboard@gmail.com', 13, 10\n"}], "added": [{"line_no": 47, "char_start": 768, "char_end": 798, "line": "  db 'Email: <EMAIL>', 13, 10\n"}]}, "char_changes": {"deleted": [{"char_start": 768, "char_end": 819, "chars": "  db 'Email: zerokelvinkeyboard@gmail.com', 13, 10\n"}], "added": [{"char_start": 768, "char_end": 798, "chars": "  db 'Email: <EMAIL>', 13, 10\n"}]}}
{"func_name": 11930, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": ";*****************************************************************************\n;* dct-32.asm: x86_32 transform and zigzag\n;*****************************************************************************\n;* Copyright (C) 2003-2017 x264 project\n;*\n;* Authors: Loren Merritt <lorenm@u.washington.edu>\n;*          Holger Lubitz <holger@lubitz.org>\n;*          Laurent Aimar <fenrir@via.ecp.fr>\n;*          Min Chen <chenm001.163.com>\n;*          Christian Heine <sennindemokrit@gmx.net>\n;*\n;* This program is free software; you can redistribute it and/or modify\n;* it under the terms of the GNU General Public License as published by\n;* the Free Software Foundation; either version 2 of the License, or\n;* (at your option) any later version.\n;*\n;* This program is distributed in the hope that it will be useful,\n;* but WITHOUT ANY WARRANTY; without even the implied warranty of\n;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n;* GNU General Public License for more details.\n;*\n;* You should have received a copy of the GNU General Public License\n;* along with this program; if not, write to the Free Software\n;* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02111, USA.\n;*\n;* This program is also available under a commercial proprietary license.\n;* For more information, contact us at licensing@x264.com.\n;*****************************************************************************\n\n%include \"x86inc.asm\"\n%include \"x86util.asm\"\n\nSECTION .text\n\ncextern pd_32\ncextern pw_pixel_max\ncextern pw_2\ncextern pw_m2\ncextern pw_32\ncextern hsub_mul\n\n%macro SPILL_SHUFFLE 3-* ; ptr, list of regs, list of memory offsets\n    %xdefine %%base %1\n    %rep %0/2\n    %xdefine %%tmp m%2\n    %rotate %0/2\n    mova [%%base + %2*16], %%tmp\n    %rotate 1-%0/2\n    %endrep\n%endmacro", "func_src_after": ";*****************************************************************************\n;* dct-32.asm: x86_32 transform and zigzag\n;*****************************************************************************\n;* Copyright (C) 2003-2017 x264 project\n;*\n;* Authors: Loren Merritt <<EMAIL>>\n;*          Holger Lubitz <<EMAIL>>\n;*          Laurent Aimar <<EMAIL>>\n;*          Min Chen <<EMAIL>>\n;*          Christian Heine <<EMAIL>>\n;*\n;* This program is free software; you can redistribute it and/or modify\n;* it under the terms of the GNU General Public License as published by\n;* the Free Software Foundation; either version 2 of the License, or\n;* (at your option) any later version.\n;*\n;* This program is distributed in the hope that it will be useful,\n;* but WITHOUT ANY WARRANTY; without even the implied warranty of\n;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n;* GNU General Public License for more details.\n;*\n;* You should have received a copy of the GNU General Public License\n;* along with this program; if not, write to the Free Software\n;* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02111, USA.\n;*\n;* This program is also available under a commercial proprietary license.\n;* For more information, contact us at <EMAIL>.\n;*****************************************************************************\n\n%include \"x86inc.asm\"\n%include \"x86util.asm\"\n\nSECTION .text\n\ncextern pd_32\ncextern pw_pixel_max\ncextern pw_2\ncextern pw_m2\ncextern pw_32\ncextern hsub_mul\n\n%macro SPILL_SHUFFLE 3-* ; ptr, list of regs, list of memory offsets\n    %xdefine %%base %1\n    %rep %0/2\n    %xdefine %%tmp m%2\n    %rotate %0/2\n    mova [%%base + %2*16], %%tmp\n    %rotate 1-%0/2\n    %endrep\n%endmacro", "line_changes": {"deleted": [{"line_no": 6, "char_start": 244, "char_end": 296, "line": ";* Authors: Loren Merritt <lorenm@u.washington.edu>\n"}, {"line_no": 7, "char_start": 244, "char_end": 290, "line": ";*          Holger Lubitz <holger@lubitz.org>\n"}, {"line_no": 8, "char_start": 244, "char_end": 290, "line": ";*          Laurent Aimar <fenrir@via.ecp.fr>\n"}, {"line_no": 9, "char_start": 244, "char_end": 284, "line": ";*          Min Chen <chenm001.163.com>\n"}, {"line_no": 10, "char_start": 244, "char_end": 297, "line": ";*          Christian Heine <sennindemokrit@gmx.net>\n"}, {"line_no": 32, "char_start": 1215, "char_end": 1274, "line": ";* For more information, contact us at licensing@x264.com.\n"}], "added": [{"line_no": 11, "char_start": 244, "char_end": 280, "line": ";* Authors: Loren Merritt <<EMAIL>>\n"}, {"line_no": 12, "char_start": 280, "char_end": 316, "line": ";*          Holger Lubitz <<EMAIL>>\n"}, {"line_no": 13, "char_start": 316, "char_end": 352, "line": ";*          Laurent Aimar <<EMAIL>>\n"}, {"line_no": 14, "char_start": 352, "char_end": 383, "line": ";*          Min Chen <<EMAIL>>\n"}, {"line_no": 15, "char_start": 383, "char_end": 421, "line": ";*          Christian Heine <<EMAIL>>\n"}, {"line_no": 33, "char_start": 1215, "char_end": 1263, "line": ";* For more information, contact us at <EMAIL>.\n"}]}, "char_changes": {"deleted": [{"char_start": 244, "char_end": 296, "chars": ";* Authors: Loren Merritt <lorenm@u.washington.edu>\n"}, {"char_start": 244, "char_end": 290, "chars": ";*          Holger Lubitz <holger@lubitz.org>\n"}, {"char_start": 244, "char_end": 290, "chars": ";*          Laurent Aimar <fenrir@via.ecp.fr>\n"}, {"char_start": 244, "char_end": 284, "chars": ";*          Min Chen <chenm001.163.com>\n"}, {"char_start": 244, "char_end": 297, "chars": ";*          Christian Heine <sennindemokrit@gmx.net>\n"}, {"char_start": 1215, "char_end": 1274, "chars": ";* For more information, contact us at licensing@x264.com.\n"}], "added": [{"char_start": 244, "char_end": 280, "chars": ";* Authors: Loren Merritt <<EMAIL>>\n"}, {"char_start": 280, "char_end": 316, "chars": ";*          Holger Lubitz <<EMAIL>>\n"}, {"char_start": 316, "char_end": 352, "chars": ";*          Laurent Aimar <<EMAIL>>\n"}, {"char_start": 352, "char_end": 383, "chars": ";*          Min Chen <<EMAIL>>\n"}, {"char_start": 383, "char_end": 421, "chars": ";*          Christian Heine <<EMAIL>>\n"}, {"char_start": 1215, "char_end": 1263, "chars": ";* For more information, contact us at <EMAIL>.\n"}]}}
{"func_name": 11948, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#=##############################################################################################\nFilename: post_plot_lift_moment_distribution.jl\nAuthor: Ryan Anderson\nContact: rymanderson@gmail.com\nREADME: `<: PostAction` function plots the lift distribution of all lifting surfaces at the specified steps\n=###############################################################################################\n\n\n\"\"\"\n    post_plot_lift_moment_distribution(aircraft, parameters, step_range, step_symbol) <: PostAction\n\n# Arguments\n\n* `aircraft::Aircraft`: aircraft system struct\n* `parameters <: Parameters`: inherits from the `Parameters` type; object containing data required by `<: Action` functions\n* `step_range::AbstractArray`: range of simulation times\n* `step_symbol::String`: defines the step, e.g. `alpha` or `time`\n\n# Modifies:\n\n* `aircraft::Aircraft`\n* `parameters <: Parameters`\n\n# Returns:\n\n* `flag::Bool`: true if an action experiences errors\n* saves plots in `parameters.plot_directory`\n\n`parameters <: Parameters` requires the following elements:\n\n* `surfacenames::Vector{String}`: names of each lifting surface to be shown in the legend\n* `cfs::Vector{Vector{Array{Float64,2}}}`: [i][j]th element is an array of size (3,nspanwisepanels) of force coefficients cd, cy, cl corresponding to the ith step, jth lifting surface\n* `cms::Vector{Vector{Array{Float64,2}}}`: [i][j]th element is an array of size (3,nspanwisepanels) of moment coefficients cmx, cmy, cmz corresponding to the ith step, jth lifting surface\n* `plot_directory::String`: path to the folder where plots will be saved\n* `plot_base_name::String`: first part of saved figure file names\n* `plot_extension::String`: extension of saved figure file names\n* `plotstepi::Vector{Int}`: which steps at which to plot\n\n\"\"\"\n# * `cl_ylim::Vector{Float64}`: y axis limits for ploting c_l\n# * `cd_ylim::Vector{Float64}`: y axis limits for ploting c_d\n# * `cy_ylim::Vector{Float64}`: y axis limits for ploting c_y\n\nfunction post_plot_lift_moment_distribution(aircraft, parameters, step_range, step_symbol)\n\n    flags = Vector{Bool}(undef,length(step_range))\n    for stepi = 1:length(step_range) # loop over all steps\n        # run existing plot function\n        flags[stepi] = plot_lift_moment_distribution(aircraft, parameters, nothing, nothing, step_range, stepi, step_symbol)\n    end # loop over all steps", "func_src_after": "#=##############################################################################################\nFilename: post_plot_lift_moment_distribution.jl\nAuthor: Ryan Anderson\nContact: <EMAIL>\nREADME: `<: PostAction` function plots the lift distribution of all lifting surfaces at the specified steps\n=###############################################################################################\n\n\n\"\"\"\n    post_plot_lift_moment_distribution(aircraft, parameters, step_range, step_symbol) <: PostAction\n\n# Arguments\n\n* `aircraft::Aircraft`: aircraft system struct\n* `parameters <: Parameters`: inherits from the `Parameters` type; object containing data required by `<: Action` functions\n* `step_range::AbstractArray`: range of simulation times\n* `step_symbol::String`: defines the step, e.g. `alpha` or `time`\n\n# Modifies:\n\n* `aircraft::Aircraft`\n* `parameters <: Parameters`\n\n# Returns:\n\n* `flag::Bool`: true if an action experiences errors\n* saves plots in `parameters.plot_directory`\n\n`parameters <: Parameters` requires the following elements:\n\n* `surfacenames::Vector{String}`: names of each lifting surface to be shown in the legend\n* `cfs::Vector{Vector{Array{Float64,2}}}`: [i][j]th element is an array of size (3,nspanwisepanels) of force coefficients cd, cy, cl corresponding to the ith step, jth lifting surface\n* `cms::Vector{Vector{Array{Float64,2}}}`: [i][j]th element is an array of size (3,nspanwisepanels) of moment coefficients cmx, cmy, cmz corresponding to the ith step, jth lifting surface\n* `plot_directory::String`: path to the folder where plots will be saved\n* `plot_base_name::String`: first part of saved figure file names\n* `plot_extension::String`: extension of saved figure file names\n* `plotstepi::Vector{Int}`: which steps at which to plot\n\n\"\"\"\n# * `cl_ylim::Vector{Float64}`: y axis limits for ploting c_l\n# * `cd_ylim::Vector{Float64}`: y axis limits for ploting c_d\n# * `cy_ylim::Vector{Float64}`: y axis limits for ploting c_y\n\nfunction post_plot_lift_moment_distribution(aircraft, parameters, step_range, step_symbol)\n\n    flags = Vector{Bool}(undef,length(step_range))\n    for stepi = 1:length(step_range) # loop over all steps\n        # run existing plot function\n        flags[stepi] = plot_lift_moment_distribution(aircraft, parameters, nothing, nothing, step_range, stepi, step_symbol)\n    end # loop over all steps", "line_changes": {"deleted": [{"line_no": 4, "char_start": 167, "char_end": 198, "line": "Contact: rymanderson@gmail.com\n"}], "added": [{"line_no": 5, "char_start": 167, "char_end": 184, "line": "Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 167, "char_end": 198, "chars": "Contact: rymanderson@gmail.com\n"}], "added": [{"char_start": 167, "char_end": 184, "chars": "Contact: <EMAIL>\n"}]}}
{"func_name": 11955, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "function __init__cifar100()\n    DEPNAME = \"CIFAR100\"\n\n    register(DataDep(\n        DEPNAME,\n        \"\"\"\n        Dataset: The CIFAR-100 dataset\n        Authors: Alex Krizhevsky, Vinod Nair, Geoffrey Hinton\n        Website: https://www.cs.toronto.edu/~kriz/cifar.html\n        Reference: https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf\n\n        [Krizhevsky, 2009]\n            Alex Krizhevsky.\n            \"Learning Multiple Layers of Features from Tiny Images\",\n            Tech Report, 2009.\n\n        The CIFAR-100 dataset is a labeled subsets of the 80\n        million tiny images dataset. It consists of 60000\n        32x32 colour images in 100 classes. Specifically, it\n        has 100 classes containing 600 images each. There are\n        500 training images and 100 testing images per class.\n        The 100 classes in the CIFAR-100 are grouped into 20\n        superclasses. Each image comes with a \"fine\" label\n        (the class to which it belongs) and a \"coarse\" label\n        (the superclass to which it belongs).\n\n        The compressed archive file that contains the\n        complete dataset is available for download at the\n        offical website linked above; specifically the binary\n        version for C programs. Note that using the data\n        responsibly and respecting copyright remains your\n        responsibility. The authors of CIFAR-10 aren't really\n        explicit about any terms of use, so please read the\n        website to make sure you want to download the\n        dataset.\n        \"\"\",\n        \"https://www.cs.toronto.edu/~kriz/cifar-100-binary.tar.gz\",\n        \"58a81ae192c23a4be8b1804d68e518ed807d710a4eb253b1f2a199162a40d8ec\",\n        post_fetch_method = file -> (run(BinDeps.unpack_cmd(file, dirname(file), \".gz\", \".tar\")); rm(file))\n    ))\nend\n\n\n\"\"\"\n    CIFAR100(; Tx=Float32, split=:train, dir=nothing)\n    CIFAR100([Tx, split])\n\nThe CIFAR100 dataset is a labeled subsets of the 80\nmillion tiny images dataset. It consists of 60000\n32x32 colour images in 10 classes, with 6000 images", "func_src_after": "function __init__cifar100()\n    DEPNAME = \"CIFAR100\"\n\n    register(DataDep(\n        DEPNAME,\n        \"\"\"\n        Dataset: The CIFAR-100 dataset\n        Authors: Alex Krizhevsky, Vinod Nair, Geoffrey Hinton\n        Website: https://www.cs.toronto.edu/~kriz/cifar.html\n        Reference: https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf\n\n        [Krizhevsky, 2009]\n            Alex Krizhevsky.\n            \"Learning Multiple Layers of Features from Tiny Images\",\n            Tech Report, 2009.\n\n        The CIFAR-100 dataset is a labeled subsets of the 80\n        million tiny images dataset. It consists of 60000\n        32x32 colour images in 100 classes. Specifically, it\n        has 100 classes containing 600 images each. There are\n        500 training images and 100 testing images per class.\n        The 100 classes in the CIFAR-100 are grouped into 20\n        superclasses. Each image comes with a \"fine\" label\n        (the class to which it belongs) and a \"coarse\" label\n        (the superclass to which it belongs).\n\n        The compressed archive file that contains the\n        complete dataset is available for download at the\n        offical website linked above; specifically the binary\n        version for C programs. Note that using the data\n        responsibly and respecting copyright remains your\n        responsibility. The authors of CIFAR-10 aren't really\n        explicit about any terms of use, so please read the\n        website to make sure you want to download the\n        dataset.\n        \"\"\",\n        \"https://www.cs.toronto.edu/~kriz/cifar-100-binary.tar.gz\",\n        \"58a81ae192c23a4be8b1804d68e518ed807d710a4eb253b1f2a199162a40d8ec\",\n        post_fetch_method = file -> (run(BinDeps.unpack_cmd(file, dirname(file), \".gz\", \".tar\")); rm(file))\n    ))\nend\n\n\n\"\"\"\n    CIFAR100(; Tx=Float32, split=:train, dir=nothing)\n    CIFAR100([Tx, split])\n\nThe CIFAR100 dataset is a labeled subsets of the 80\nmillion tiny images dataset. It consists of 60000\n32x32 colour images in 10 classes, with 6000 images", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 11977, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "#######################################################\n\"\"\"\nCopyright 2021 Alliance for Sustainable Energy and other\nNAERM Project Developers. See the top-level COPYRIGHT file for details.\n\nAuthor: Surya Chandan Dhulipala\nEmail: suryachandan.dhulipala@nrel.gov\n\"\"\"\n# November 2021\n# EGRET --> SIIP Linkage Module\n# EGRET JSON --> CSV files formatted according to SIIP Tabular Data Parser Requirements --> SIIP PSY System\n#######################################################\nmodule EGRET2SIIP\n#################################################################################\n# Exports\n#################################################################################\nexport parse_EGRET_JSON\nexport parse_tabular_data\nexport EGRET_TO_PSY\n#################################################################################\n# Imports\n#################################################################################\nimport JSON\nimport DataFrames\nimport CSV\nimport Dates\nimport PowerSystems\n#################################################################################\n# Includes\n#################################################################################\ninclude(\"parsers/egret_json_to_csv.jl\")\ninclude(\"main/parse_tabular_data.jl\")\ninclude(\"main/egret_to_psy.jl\")\nend\n", "func_src_after": "#######################################################\n\"\"\"\nCopyright 2021 Alliance for Sustainable Energy and other\nNAERM Project Developers. See the top-level COPYRIGHT file for details.\n\nAuthor: Surya Chandan Dhulipala\nEmail: <EMAIL>\n\"\"\"\n# November 2021\n# EGRET --> SIIP Linkage Module\n# EGRET JSON --> CSV files formatted according to SIIP Tabular Data Parser Requirements --> SIIP PSY System\n#######################################################\nmodule EGRET2SIIP\n#################################################################################\n# Exports\n#################################################################################\nexport parse_EGRET_JSON\nexport parse_tabular_data\nexport EGRET_TO_PSY\n#################################################################################\n# Imports\n#################################################################################\nimport JSON\nimport DataFrames\nimport CSV\nimport Dates\nimport PowerSystems\n#################################################################################\n# Includes\n#################################################################################\ninclude(\"parsers/egret_json_to_csv.jl\")\ninclude(\"main/parse_tabular_data.jl\")\ninclude(\"main/egret_to_psy.jl\")\nend\n", "line_changes": {"deleted": [{"line_no": 7, "char_start": 222, "char_end": 261, "line": "Email: suryachandan.dhulipala@nrel.gov\n"}], "added": [{"line_no": 8, "char_start": 222, "char_end": 237, "line": "Email: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 222, "char_end": 261, "chars": "Email: suryachandan.dhulipala@nrel.gov\n"}], "added": [{"char_start": 222, "char_end": 237, "chars": "Email: <EMAIL>\n"}]}}
{"func_name": 11998, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  )\n  \"\"\"\n  y = sobols_function(x; a=7.0, b=0.05)\n\n\n  Parameters\n  ----------\n  x is a vector with three components with numbers between 0 and 1. They are scaled to -pi:pi before \n  they are used in the function expression.\n  a = 7.0 as suggested by Sobol & Levitan (1999)\n  b = 0.05 as suggested by Sobol & Levitan (1999)\n\n  Returns\n  -------\n  Returns function output for the function\n      f(x) = sin(x[1]) + a*sin(x[2])^2 + b*x[3]^4*sin(x[1]).\n  \n  Comments\n  --------\n  Numerical values from Smith (2014) are\n      |   x1    |   x2    |    x3   |    x4   |   x5    |   x6   \n    -------------------------------------------------------------\n    μ | 5.60e-2 | 2.77e-1 |  1.76e0 |  1.19e0 | 3.50e-2 | 9.90e-2\n    σ | 3.84e-2 | 1.90e-1 |  1.68e0 |  1.13e0 | 3.74e-2 | 2.38e-2\n    -------------------------------------------------------------\n\n  References\n  ----------\n  The code is presented on the algorithm presented by Smith in the book \"Uncertainty Quantification: \n  Theory, Implementation, and Applications\" page 331-334.\n  \n  Author\n  ------\n  Christian Haargaard Olsen <christianhaargaard@gmail.com>\n  \"\"\"\n\n  # scale parameters to interval -pi:pi\n  y = (\n    (abs(4*x[1]-2.0)+a1)/(1.0+a1)*\n    (abs(4*x[2]-2.0)+a2)/(1.0+a2)*\n    (abs(4*x[3]-2.0)+a3)/(1.0+a3)*\n    (abs(4*x[4]-2.0)+a4)/(1.0+a4)*\n    (abs(4*x[5]-2.0)+a5)/(1.0+a5)*\n    (abs(4*x[6]-2.0)+a6)/(1.0+a6)\n    )\n  #return [y,y] # To test the tools for function returning more than one output eg. time-dependent\n  return y\nend\nend\n", "func_src_after": "  )\n  \"\"\"\n  y = sobols_function(x; a=7.0, b=0.05)\n\n\n  Parameters\n  ----------\n  x is a vector with three components with numbers between 0 and 1. They are scaled to -pi:pi before \n  they are used in the function expression.\n  a = 7.0 as suggested by Sobol & Levitan (1999)\n  b = 0.05 as suggested by Sobol & Levitan (1999)\n\n  Returns\n  -------\n  Returns function output for the function\n      f(x) = sin(x[1]) + a*sin(x[2])^2 + b*x[3]^4*sin(x[1]).\n  \n  Comments\n  --------\n  Numerical values from Smith (2014) are\n      |   x1    |   x2    |    x3   |    x4   |   x5    |   x6   \n    -------------------------------------------------------------\n    μ | 5.60e-2 | 2.77e-1 |  1.76e0 |  1.19e0 | 3.50e-2 | 9.90e-2\n    σ | 3.84e-2 | 1.90e-1 |  1.68e0 |  1.13e0 | 3.74e-2 | 2.38e-2\n    -------------------------------------------------------------\n\n  References\n  ----------\n  The code is presented on the algorithm presented by Smith in the book \"Uncertainty Quantification: \n  Theory, Implementation, and Applications\" page 331-334.\n  \n  Author\n  ------\n  Christian Haargaard Olsen <<EMAIL>>\n  \"\"\"\n\n  # scale parameters to interval -pi:pi\n  y = (\n    (abs(4*x[1]-2.0)+a1)/(1.0+a1)*\n    (abs(4*x[2]-2.0)+a2)/(1.0+a2)*\n    (abs(4*x[3]-2.0)+a3)/(1.0+a3)*\n    (abs(4*x[4]-2.0)+a4)/(1.0+a4)*\n    (abs(4*x[5]-2.0)+a5)/(1.0+a5)*\n    (abs(4*x[6]-2.0)+a6)/(1.0+a6)\n    )\n  #return [y,y] # To test the tools for function returning more than one output eg. time-dependent\n  return y\nend\nend\n", "line_changes": {"deleted": [{"line_no": 34, "char_start": 1052, "char_end": 1111, "line": "  Christian Haargaard Olsen <christianhaargaard@gmail.com>\n"}], "added": [{"line_no": 35, "char_start": 1052, "char_end": 1090, "line": "  Christian Haargaard Olsen <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 1052, "char_end": 1111, "chars": "  Christian Haargaard Olsen <christianhaargaard@gmail.com>\n"}], "added": [{"char_start": 1052, "char_end": 1090, "chars": "  Christian Haargaard Olsen <<EMAIL>>\n"}]}}
{"func_name": 12013, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# FWI on the 2D Overthrust model using spectral projected gradient descent\n# Author: mlouboutin3@gatech.edu\n# Date: February 2021\n#\nusing Distributed\n@everywhere using DrWatson\n@everywhere @quickactivate :TimeProbeSeismic\n\n# Load starting model\n~isfile(datadir(\"models\", \"overthrust_model.h5\")) && run(`curl -L ftp://slim.gatech.edu/data/SoftwareRelease/WaveformInversion.jl/2DFWI/overthrust_model_2D.h5 --create-dirs -o $(datadir(\"models\", \"overthrust_model.h5\"))`)\nn, d, o, m0, m = h5read(datadir(\"models\", \"overthrust_model.h5\"), \"n\", \"d\", \"o\", \"m0\", \"m\")\nmodel0 = Model((n[1], n[2]), (d[1], d[2]), (o[1], o[2]), m0)\n\n# Bound constraints\nv0 = sqrt.(1f0 ./ model0.m)\nvmin = ones(Float32,model0.n) .* 1.3f0\nvmax = ones(Float32,model0.n) .* 6.5f0\nvmin[:, 1:21] .= v0[:, 1:21]   # keep water column fixed\nvmax[:, 1:21] .= v0[:, 1:21]\n\n# Slowness squared [s^2/km^2]\nmmin = vec((1f0 ./ vmax).^2)\nmmax = vec((1f0 ./ vmin).^2)\n\n# Load data and create data vector\n~isfile(datadir(\"data\", \"overthrust_2D.segy\")) && run(`curl -L ftp://slim.gatech.edu/data/SoftwareRelease/WaveformInversion.jl/2DFWI/overthrust_2D.segy --create-dirs -o $(datadir(\"data\", \"overthrust_2D.segy\"))`)\n\nblock = segy_read(datadir(\"data\", \"overthrust_2D.segy\"))\nd_obs = judiVector(block)\n\n# Set up wavelet and source vector\nsrc_geometry = Geometry(block; key = \"source\", segy_depth_key = \"SourceDepth\")\nwavelet = ricker_wavelet(src_geometry.t[1], src_geometry.dt[1], 0.008f0) # 8 Hz wavelet\nq = judiVector(src_geometry, wavelet)\nq_dist = generate_distribution(q)\n\n########################################### FWI ####################################################\n\n# Optimization parameters\nfevals = 20\nbatchsize = 20\nfvals = []\ng_const = 0\nfrequencies = Array{Any}(undef, batchsize)\n\n# Objective function for library\nfunction objective_function(x, ps; dft=false)\n    Base.flush(stdout)\n    model0.m .= x;\n", "func_src_after": "# FWI on the 2D Overthrust model using spectral projected gradient descent\n# Author: <EMAIL>\n# Date: February 2021\n#\nusing Distributed\n@everywhere using DrWatson\n@everywhere @quickactivate :TimeProbeSeismic\n\n# Load starting model\n~isfile(datadir(\"models\", \"overthrust_model.h5\")) && run(`curl -L ftp://slim.gatech.edu/data/SoftwareRelease/WaveformInversion.jl/2DFWI/overthrust_model_2D.h5 --create-dirs -o $(datadir(\"models\", \"overthrust_model.h5\"))`)\nn, d, o, m0, m = h5read(datadir(\"models\", \"overthrust_model.h5\"), \"n\", \"d\", \"o\", \"m0\", \"m\")\nmodel0 = Model((n[1], n[2]), (d[1], d[2]), (o[1], o[2]), m0)\n\n# Bound constraints\nv0 = sqrt.(1f0 ./ model0.m)\nvmin = ones(Float32,model0.n) .* 1.3f0\nvmax = ones(Float32,model0.n) .* 6.5f0\nvmin[:, 1:21] .= v0[:, 1:21]   # keep water column fixed\nvmax[:, 1:21] .= v0[:, 1:21]\n\n# Slowness squared [s^2/km^2]\nmmin = vec((1f0 ./ vmax).^2)\nmmax = vec((1f0 ./ vmin).^2)\n\n# Load data and create data vector\n~isfile(datadir(\"data\", \"overthrust_2D.segy\")) && run(`curl -L ftp://slim.gatech.edu/data/SoftwareRelease/WaveformInversion.jl/2DFWI/overthrust_2D.segy --create-dirs -o $(datadir(\"data\", \"overthrust_2D.segy\"))`)\n\nblock = segy_read(datadir(\"data\", \"overthrust_2D.segy\"))\nd_obs = judiVector(block)\n\n# Set up wavelet and source vector\nsrc_geometry = Geometry(block; key = \"source\", segy_depth_key = \"SourceDepth\")\nwavelet = ricker_wavelet(src_geometry.t[1], src_geometry.dt[1], 0.008f0) # 8 Hz wavelet\nq = judiVector(src_geometry, wavelet)\nq_dist = generate_distribution(q)\n\n########################################### FWI ####################################################\n\n# Optimization parameters\nfevals = 20\nbatchsize = 20\nfvals = []\ng_const = 0\nfrequencies = Array{Any}(undef, batchsize)\n\n# Objective function for library\nfunction objective_function(x, ps; dft=false)\n    Base.flush(stdout)\n    model0.m .= x;\n", "line_changes": {"deleted": [{"line_no": 2, "char_start": 75, "char_end": 108, "line": "# Author: mlouboutin3@gatech.edu\n"}], "added": [{"line_no": 3, "char_start": 75, "char_end": 93, "line": "# Author: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 75, "char_end": 108, "chars": "# Author: mlouboutin3@gatech.edu\n"}], "added": [{"char_start": 75, "char_end": 93, "chars": "# Author: <EMAIL>\n"}]}}
{"func_name": 12030, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            dfx[:zval]=0.0\n            dfx[:pval]=0.0\n            dfx[:model] = replace(string(m),\"i\",\"\")\n            dfx[:ranef]=string(r)\n            dfx[:modelType]=\"GLMM\"\n            sdf = vcat(sdf,dfx)\n            g = dx[Symbol(\"covglm\"*k)]\n            dfx = coefDF(g,false)\n            dfx[:model] = replace(string(m),\"i\",\"\")\n                dfx[:ranef] = string(r)\n            dfx[:modelType] = \"RanCov\"  \n            dfx = dfx[findin(dfx[:parameter],filter(x->contains(x,string(r)) ,Array(dfx[:parameter]))),:]\n            dfx[:parameter] = map(x-> replace(x,string(r)*\": \",\"\"),dfx[:parameter])\n            sdf = vcat(sdf,dfx)                    \n        end\n    end\n    return sdf\nend        \n#dx = runModels(root,modelsDict) \n#dfx = consolidateResults(modelsDict, dx)      \n#save_dfx(root,dfx)   #writetable(root*\"/campaign.csv\", dfx)  \n\n#dx = runModels(root,modelsDict) \n#dfx = consolidateResults(modelsDict, dx)      \n#save_dfx(root,dfx)   #writetable(root*\"/campaign.csv\", dfx)  \n    \n    \n    \n # ***************************************************************************************************************************   \n    \n    \n    \n    \n#function distributeDataset()\n#    #jmod_fname = root*\"/dfd_model.json\"\n#    #mod_fname\n#    #ppp=\"/mnt/resource/analytics/models/\"; run(`ls $ppp`)\n#    ips = [\"10.63.36.22\",\"10.63.36.23\"]\n#    for ip in ips\n#            cmd=`scp $root/dfd_model.* $ip:$root/`\n#            println(cmd)\n#            run(cmd)\n#        #run(`ssh $ip mkdir $root`)\n#        #run(`scp $root/dfd_model.* $ip:$root/`)\n#    end\n#end    \n#addprocs([(\"iriadmin@10.63.36.22\", 1), (\"iriadmin@10.63.36.23\", 1)])\n#addprocs(2)\n        \n        ", "func_src_after": "            dfx[:zval]=0.0\n            dfx[:pval]=0.0\n            dfx[:model] = replace(string(m),\"i\",\"\")\n            dfx[:ranef]=string(r)\n            dfx[:modelType]=\"GLMM\"\n            sdf = vcat(sdf,dfx)\n            g = dx[Symbol(\"covglm\"*k)]\n            dfx = coefDF(g,false)\n            dfx[:model] = replace(string(m),\"i\",\"\")\n                dfx[:ranef] = string(r)\n            dfx[:modelType] = \"RanCov\"  \n            dfx = dfx[findin(dfx[:parameter],filter(x->contains(x,string(r)) ,Array(dfx[:parameter]))),:]\n            dfx[:parameter] = map(x-> replace(x,string(r)*\": \",\"\"),dfx[:parameter])\n            sdf = vcat(sdf,dfx)                    \n        end\n    end\n    return sdf\nend        \n#dx = runModels(root,modelsDict) \n#dfx = consolidateResults(modelsDict, dx)      \n#save_dfx(root,dfx)   #writetable(root*\"/campaign.csv\", dfx)  \n\n#dx = runModels(root,modelsDict) \n#dfx = consolidateResults(modelsDict, dx)      \n#save_dfx(root,dfx)   #writetable(root*\"/campaign.csv\", dfx)  \n    \n    \n    \n # ***************************************************************************************************************************   \n    \n    \n    \n    \n#function distributeDataset()\n#    #jmod_fname = root*\"/dfd_model.json\"\n#    #mod_fname\n#    #ppp=\"/mnt/resource/analytics/models/\"; run(`ls $ppp`)\n#    ips = [\"<IP-Address>\",\"<IP-Address>\"]\n#    for ip in ips\n#            cmd=`scp $root/dfd_model.* $ip:$root/`\n#            println(cmd)\n#            run(cmd)\n#        #run(`ssh $ip mkdir $root`)\n#        #run(`scp $root/dfd_model.* $ip:$root/`)\n#    end\n#end    \n#addprocs([(\"iriadmin@10.63.36.22\", 1), (\"iriadmin@10.63.36.23\", 1)])\n#addprocs(2)\n        \n        ", "line_changes": {"deleted": [{"line_no": 38, "char_start": 1306, "char_end": 1347, "line": "#    ips = [\"10.63.36.22\",\"10.63.36.23\"]\n"}], "added": [{"line_no": 39, "char_start": 1306, "char_end": 1349, "line": "#    ips = [\"<IP-Address>\",\"<IP-Address>\"]\n"}]}, "char_changes": {"deleted": [{"char_start": 1306, "char_end": 1347, "chars": "#    ips = [\"10.63.36.22\",\"10.63.36.23\"]\n"}], "added": [{"char_start": 1306, "char_end": 1349, "chars": "#    ips = [\"<IP-Address>\",\"<IP-Address>\"]\n"}]}}
{"func_name": 12046, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "###############\n# H-OBCA: Hierarchical Optimization-based Collision Avoidance - a path planner for autonomous parking\n# Copyright (C) 2018\n# Alexander LINIGER [liniger@control.ee.ethz.ch; Automatic Control Lab, ETH Zurich]\n# Xiaojing ZHANG [xiaojing.zhang@berkeley.edu; MPC Lab, UC Berkeley]\n# Atsushi SAKAI [atsushisakai@global.komatsu; Komatsu Ltd / MPC Lab]\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# \n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n###############\n# The paper describing the theory can be found here:\n# \tX. Zhang, A. Liniger and F. Borrelli; \"Optimization-Based Collision Avoidance\"; Technical Report, 2017, [https://arxiv.org/abs/1711.03449]\n#   X. Zhang, A. Liniger, A. Sakai and F. Borrelli; \"Autonomous  Parking  using  Optimization-Based  Collision  Avoidance\"; Technical Report, 2018 [add URL]\n###############\n\n###############\n# function plots trajectory\n###############\n\n\nfunction plotTraj(xp,up,N,ego,L,nOb,vOb,lOb,disp_title,plotNumb)\n\n\t# obcenter1 = [(ob1[1]+ob1[3])/2-ob1[3];\n\t#             \t (ob1[2]+ob1[4])/2-ob1[4]]\n\t#\n\t# obcenter2 = [(ob2[1]+ob2[3])/2-ob2[3];\n\t#              (ob2[2]+ob2[4])/2-ob2[4]]\n\t#\n\t# obcenter3 = [(ob3[1]+ob3[3])/2-ob3[3];\n\t#              (ob3[2]+ob3[4])/2-ob3[4]]\n\n    W_ev = ego[2]+ego[4]\n\tL_ev = ego[1]+ego[3]\n\n\t# W_tv1 = ob1[2]+ob1[4]\n\t# L_tv1 = ob1[1]+ob1[3]\n\t#\n\t# W_tv2 = ob2[2]+ob2[4]\n\t# L_tv2 = ob2[1]+ob2[3]\n\t#", "func_src_after": "###############\n# H-OBCA: Hierarchical Optimization-based Collision Avoidance - a path planner for autonomous parking\n# Copyright (C) 2018\n# Alexander LINIGER [<EMAIL>; Automatic Control Lab, ETH Zurich]\n# Xiaojing ZHANG [<EMAIL>; MPC Lab, UC Berkeley]\n# Atsushi SAKAI [<EMAIL>; Komatsu Ltd / MPC Lab]\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# \n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n###############\n# The paper describing the theory can be found here:\n# \tX. Zhang, A. Liniger and F. Borrelli; \"Optimization-Based Collision Avoidance\"; Technical Report, 2017, [https://arxiv.org/abs/1711.03449]\n#   X. Zhang, A. Liniger, A. Sakai and F. Borrelli; \"Autonomous  Parking  using  Optimization-Based  Collision  Avoidance\"; Technical Report, 2018 [add URL]\n###############\n\n###############\n# function plots trajectory\n###############\n\n\nfunction plotTraj(xp,up,N,ego,L,nOb,vOb,lOb,disp_title,plotNumb)\n\n\t# obcenter1 = [(ob1[1]+ob1[3])/2-ob1[3];\n\t#             \t (ob1[2]+ob1[4])/2-ob1[4]]\n\t#\n\t# obcenter2 = [(ob2[1]+ob2[3])/2-ob2[3];\n\t#              (ob2[2]+ob2[4])/2-ob2[4]]\n\t#\n\t# obcenter3 = [(ob3[1]+ob3[3])/2-ob3[3];\n\t#              (ob3[2]+ob3[4])/2-ob3[4]]\n\n    W_ev = ego[2]+ego[4]\n\tL_ev = ego[1]+ego[3]\n\n\t# W_tv1 = ob1[2]+ob1[4]\n\t# L_tv1 = ob1[1]+ob1[3]\n\t#\n\t# W_tv2 = ob2[2]+ob2[4]\n\t# L_tv2 = ob2[1]+ob2[3]\n\t#", "line_changes": {"deleted": [{"line_no": 4, "char_start": 139, "char_end": 223, "line": "# Alexander LINIGER [liniger@control.ee.ethz.ch; Automatic Control Lab, ETH Zurich]\n"}, {"line_no": 6, "char_start": 204, "char_end": 273, "line": "# Xiaojing ZHANG [xiaojing.zhang@berkeley.edu; MPC Lab, UC Berkeley]\n"}, {"line_no": 7, "char_start": 204, "char_end": 273, "line": "# Atsushi SAKAI [atsushisakai@global.komatsu; Komatsu Ltd / MPC Lab]\n"}], "added": [{"line_no": 5, "char_start": 139, "char_end": 204, "line": "# Alexander LINIGER [<EMAIL>; Automatic Control Lab, ETH Zurich]\n"}, {"line_no": 8, "char_start": 204, "char_end": 253, "line": "# Xiaojing ZHANG [<EMAIL>; MPC Lab, UC Berkeley]\n"}, {"line_no": 9, "char_start": 253, "char_end": 302, "line": "# Atsushi SAKAI [<EMAIL>; Komatsu Ltd / MPC Lab]\n"}]}, "char_changes": {"deleted": [{"char_start": 139, "char_end": 223, "chars": "# Alexander LINIGER [liniger@control.ee.ethz.ch; Automatic Control Lab, ETH Zurich]\n"}, {"char_start": 204, "char_end": 273, "chars": "# Xiaojing ZHANG [xiaojing.zhang@berkeley.edu; MPC Lab, UC Berkeley]\n"}, {"char_start": 204, "char_end": 273, "chars": "# Atsushi SAKAI [atsushisakai@global.komatsu; Komatsu Ltd / MPC Lab]\n"}], "added": [{"char_start": 139, "char_end": 204, "chars": "# Alexander LINIGER [<EMAIL>; Automatic Control Lab, ETH Zurich]\n"}, {"char_start": 204, "char_end": 253, "chars": "# Xiaojing ZHANG [<EMAIL>; MPC Lab, UC Berkeley]\n"}, {"char_start": 253, "char_end": 302, "chars": "# Atsushi SAKAI [<EMAIL>; Komatsu Ltd / MPC Lab]\n"}]}}
{"func_name": 12077, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "       [System.String] - One string for each token.\n       [PSObject] - If the GroupLines switch is used, the function outputs custom objects with a Tokens property.  The Tokens property is an array of strings.\n    .NOTES\n       Author:  Dave Wyatt\n       Email :  dlwyatt115@gmail.com\n       Date  :  07-Dec-2013\n    #>\n\n    #requires -Version 2\n\n    [CmdletBinding()]\n    [OutputType([System.String])]\n    param (\n        [Parameter(Mandatory = $true, Position = 0, ValueFromPipeline = $true)]\n        [AllowEmptyString()]\n        [System.String[]]\n        $String,\n\n        [ValidateNotNull()]\n        [System.String[]]\n        $Delimiter = @(\"`t\",' '),\n\n        [ValidateNotNull()]\n        [System.String[]]\n        $Qualifier = @('\"', \"'\"),\n\n        [ValidateNotNull()]\n        [System.String[]]\n        $Escape = @(),\n\n        [ValidateNotNull()]\n        [System.String]\n        $LineDelimiter = \"`r`n\",\n\n        [Switch]\n        $NoDoubleQualifier,\n\n        [Switch]\n        $Span,\n\n        [Switch]\n        $GroupLines,\n\n        [Switch]\n        $IgnoreConsecutiveDelimiters\n    )\n\n    begin\n    {\n        $currentToken = New-Object System.Text.StringBuilder", "func_src_after": "       [System.String] - One string for each token.\n       [PSObject] - If the GroupLines switch is used, the function outputs custom objects with a Tokens property.  The Tokens property is an array of strings.\n    .NOTES\n       Author:  Dave Wyatt\n       Email :  <EMAIL>\n       Date  :  07-Dec-2013\n    #>\n\n    #requires -Version 2\n\n    [CmdletBinding()]\n    [OutputType([System.String])]\n    param (\n        [Parameter(Mandatory = $true, Position = 0, ValueFromPipeline = $true)]\n        [AllowEmptyString()]\n        [System.String[]]\n        $String,\n\n        [ValidateNotNull()]\n        [System.String[]]\n        $Delimiter = @(\"`t\",' '),\n\n        [ValidateNotNull()]\n        [System.String[]]\n        $Qualifier = @('\"', \"'\"),\n\n        [ValidateNotNull()]\n        [System.String[]]\n        $Escape = @(),\n\n        [ValidateNotNull()]\n        [System.String]\n        $LineDelimiter = \"`r`n\",\n\n        [Switch]\n        $NoDoubleQualifier,\n\n        [Switch]\n        $Span,\n\n        [Switch]\n        $GroupLines,\n\n        [Switch]\n        $IgnoreConsecutiveDelimiters\n    )\n\n    begin\n    {\n        $currentToken = New-Object System.Text.StringBuilder", "line_changes": {"deleted": [{"line_no": 5, "char_start": 249, "char_end": 286, "line": "       Email :  dlwyatt115@gmail.com\n"}], "added": [{"line_no": 6, "char_start": 249, "char_end": 273, "line": "       Email :  <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 249, "char_end": 286, "chars": "       Email :  dlwyatt115@gmail.com\n"}], "added": [{"char_start": 249, "char_end": 273, "chars": "       Email :  <EMAIL>\n"}]}}
{"func_name": 12115, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Import-Module (Join-Path (Split-Path $script:MyInvocation.MyCommand.Path) \"Microsoft.PowerApps.Administration.PowerShell.Samples.psm1\") -Force\n\n#\n# Scenario tests\n#\n\nfunction RunTests\n{\n    param\n    (\n        [Parameter(Mandatory = $false)]\n        [string]$EnvironmentDisplayName = \"Test Environment\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$EndPoint = \"prod\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$TenantAdminName = \"tenant admin account\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$TenantAdminPassword = \"tenant admin password\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$EnvironmentAdminName = \"environment admin account\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$EnvironmentAdminPassword = \"environment admin password\"\n    )\n\n    <# login with user name and password #>\n    $Password = ConvertTo-SecureString $TenantAdminPassword -AsPlainText -Force\n    Add-PowerAppsAccount -Endpoint $EndPoint -Username $TenantAdminName -Password $Password\n\n    $StartTime = Get-Date\n    Write-Host \"`r`n`r`nTests started at $StartTime.`r`nThe tests will run about 5 minutes.`r`n\"\n    \n    # 1. Clean test policies\n    # 2. Create an empty test policy for ALLEnvironments with policy dispay name dng environment type\n    # 3. Add test connectors.\n    # 4. Add the same connector to all groups test.\n    # 5. Get all policies\n    # 6. Update test policy for ALLEnvironments\n    # 7. Remove policy AllEnvironments\n    AllEnvironmentsPolicyTests -EnvironmentDisplayName $EnvironmentDisplayName\n\n    # 1. Clean test policies\n    # 2. Create test policy for OnlyEnvironments\n    # 3. Change EnvironmentType from OnlyEnvironments to ExceptEnvironments\n    # 4. Remove the test policy\n    ChangeOnlyToExceptEnvironmentsPolicyTests -EnvironmentDisplayName $EnvironmentDisplayName", "func_src_after": "Import-Module (Join-Path (Split-Path $script:MyInvocation.MyCommand.Path) \"Microsoft.PowerApps.Administration.PowerShell.Samples.psm1\") -Force\n\n#\n# Scenario tests\n#\n\nfunction RunTests\n{\n    param\n    (\n        [Parameter(Mandatory = $false)]\n        [string]$EnvironmentDisplayName = \"Test Environment\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$EndPoint = \"prod\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$TenantAdminName = \"tenant admin account\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$TenantAdminPassword = \"tenant admin password\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$EnvironmentAdminName = \"environment admin account\",\n\n        [Parameter(Mandatory = $false)]\n        [string]$EnvironmentAdminPassword = \"environment admin password\"\n    )\n\n    <# login with user name and password #>\n    $Password = ConvertTo-SecureString $TenantAdminPassword -AsPlainText -Force\n    Add-PowerAppsAccount -Endpoint $EndPoint -Username $TenantAdminName -Password $Password\n\n    $StartTime = Get-Date\n    Write-Host \"`r`n`r`nTests started at $StartTime.`r`nThe tests will run about 5 minutes.`r`n\"\n    \n    # 1. Clean test policies\n    # 2. Create an empty test policy for ALLEnvironments with policy dispay name dng environment type\n    # 3. Add test connectors.\n    # 4. Add the same connector to all groups test.\n    # 5. Get all policies\n    # 6. Update test policy for ALLEnvironments\n    # 7. Remove policy AllEnvironments\n    AllEnvironmentsPolicyTests -EnvironmentDisplayName $EnvironmentDisplayName\n\n    # 1. Clean test policies\n    # 2. Create test policy for OnlyEnvironments\n    # 3. Change EnvironmentType from OnlyEnvironments to ExceptEnvironments\n    # 4. Remove the test policy\n    ChangeOnlyToExceptEnvironmentsPolicyTests -EnvironmentDisplayName $EnvironmentDisplayName", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12127, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "function ConvertTo-Subnet {\n    <#\n    .SYNOPSIS\n        Convert a start and end IP address to the closest matching subnet.\n    .DESCRIPTION\n        ConvertTo-Subnet attempts to convert a starting and ending IP address from a range to the closest subnet.\n    .EXAMPLE\n        ConvertTo-Subnet -Start 0.0.0.0 -End 255.255.255.255\n    .EXAMPLE\n        ConvertTo-Subnet -Start 192.168.0.1 -End 192.168.0.129\n    .EXAMPLE\n        ConvertTo-Subnet 10.0.0.23/24\n    .EXAMPLE\n        ConvertTo-Subnet 10.0.0.23 255.255.255.0\n    #>\n\n    [CmdletBinding(DefaultParameterSetName = 'FromIPAndMask')]\n    [OutputType('Indented.Net.IP.Subnet')]\n    param (\n        # Any IP address in the subnet.\n        [Parameter(Mandatory, Position = 1, ParameterSetName = 'FromIPAndMask')]\n        [String]$IPAddress,\n\n        # A subnet mask.\n        [Parameter(Position = 2, ParameterSetName = 'FromIPAndMask')]\n        [String]$SubnetMask,\n\n        # The first IP address from a range.\n        [Parameter(Mandatory, ParameterSetName = 'FromStartAndEnd')]\n        [IPAddress]$Start,\n\n        # The last IP address from a range.\n        [Parameter(Mandatory, ParameterSetName = 'FromStartAndEnd')]\n        [IPAddress]$End\n    )\n\n    if ($pscmdlet.ParameterSetName -eq 'FromIPAndMask') {\n        try {\n            $network = ConvertToNetwork @psboundparameters\n        } catch {\n            $pscmdlet.ThrowTerminatingError($_)\n        }\n    } elseif ($pscmdlet.ParameterSetName -eq 'FromStartAndEnd') {\n        if ($Start -eq $End) {\n            $MaskLength = 32\n        } else {\n            $DecimalStart = ConvertTo-DecimalIP $Start\n            $DecimalEnd = ConvertTo-DecimalIP $End\n\n            if ($DecimalEnd -lt $DecimalStart) {", "func_src_after": "function ConvertTo-Subnet {\n    <#\n    .SYNOPSIS\n        Convert a start and end IP address to the closest matching subnet.\n    .DESCRIPTION\n        ConvertTo-Subnet attempts to convert a starting and ending IP address from a range to the closest subnet.\n    .EXAMPLE\n        ConvertTo-Subnet -Start <IP-Address> -End <IP-Address>\n    .EXAMPLE\n        ConvertTo-Subnet -Start <IP-Address> -End <IP-Address>\n    .EXAMPLE\n        ConvertTo-Subnet <IP-Address>/24\n    .EXAMPLE\n        ConvertTo-Subnet <IP-Address> <IP-Address>\n    #>\n\n    [CmdletBinding(DefaultParameterSetName = 'FromIPAndMask')]\n    [OutputType('Indented.Net.IP.Subnet')]\n    param (\n        # Any IP address in the subnet.\n        [Parameter(Mandatory, Position = 1, ParameterSetName = 'FromIPAndMask')]\n        [String]$IPAddress,\n\n        # A subnet mask.\n        [Parameter(Position = 2, ParameterSetName = 'FromIPAndMask')]\n        [String]$SubnetMask,\n\n        # The first IP address from a range.\n        [Parameter(Mandatory, ParameterSetName = 'FromStartAndEnd')]\n        [IPAddress]$Start,\n\n        # The last IP address from a range.\n        [Parameter(Mandatory, ParameterSetName = 'FromStartAndEnd')]\n        [IPAddress]$End\n    )\n\n    if ($pscmdlet.ParameterSetName -eq 'FromIPAndMask') {\n        try {\n            $network = ConvertToNetwork @psboundparameters\n        } catch {\n            $pscmdlet.ThrowTerminatingError($_)\n        }\n    } elseif ($pscmdlet.ParameterSetName -eq 'FromStartAndEnd') {\n        if ($Start -eq $End) {\n            $MaskLength = 32\n        } else {\n            $DecimalStart = ConvertTo-DecimalIP $Start\n            $DecimalEnd = ConvertTo-DecimalIP $End\n\n            if ($DecimalEnd -lt $DecimalStart) {", "line_changes": {"deleted": [{"line_no": 8, "char_start": 268, "char_end": 329, "line": "        ConvertTo-Subnet -Start 0.0.0.0 -End 255.255.255.255\n"}, {"line_no": 11, "char_start": 344, "char_end": 407, "line": "        ConvertTo-Subnet -Start 192.168.0.1 -End 192.168.0.129\n"}, {"line_no": 14, "char_start": 420, "char_end": 458, "line": "        ConvertTo-Subnet 10.0.0.23/24\n"}, {"line_no": 17, "char_start": 474, "char_end": 523, "line": "        ConvertTo-Subnet 10.0.0.23 255.255.255.0\n"}], "added": [{"line_no": 9, "char_start": 268, "char_end": 331, "line": "        ConvertTo-Subnet -Start <IP-Address> -End <IP-Address>\n"}, {"line_no": 12, "char_start": 344, "char_end": 407, "line": "        ConvertTo-Subnet -Start <IP-Address> -End <IP-Address>\n"}, {"line_no": 15, "char_start": 420, "char_end": 461, "line": "        ConvertTo-Subnet <IP-Address>/24\n"}, {"line_no": 18, "char_start": 474, "char_end": 525, "line": "        ConvertTo-Subnet <IP-Address> <IP-Address>\n"}]}, "char_changes": {"deleted": [{"char_start": 268, "char_end": 329, "chars": "        ConvertTo-Subnet -Start 0.0.0.0 -End 255.255.255.255\n"}, {"char_start": 344, "char_end": 407, "chars": "        ConvertTo-Subnet -Start 192.168.0.1 -End 192.168.0.129\n"}, {"char_start": 420, "char_end": 458, "chars": "        ConvertTo-Subnet 10.0.0.23/24\n"}, {"char_start": 474, "char_end": 523, "chars": "        ConvertTo-Subnet 10.0.0.23 255.255.255.0\n"}], "added": [{"char_start": 268, "char_end": 331, "chars": "        ConvertTo-Subnet -Start <IP-Address> -End <IP-Address>\n"}, {"char_start": 344, "char_end": 407, "chars": "        ConvertTo-Subnet -Start <IP-Address> -End <IP-Address>\n"}, {"char_start": 420, "char_end": 461, "chars": "        ConvertTo-Subnet <IP-Address>/24\n"}, {"char_start": 474, "char_end": 525, "chars": "        ConvertTo-Subnet <IP-Address> <IP-Address>\n"}]}}
{"func_name": 12134, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<#\r\n.SYNOPSIS\r\n  Short description\r\n.DESCRIPTION\r\n.EXAMPLE\r\n  PS C:\\> *conversu <tab>\r\n  PS C:\\> Get-tsharkConversUDP\r\n\r\n\r\n\r\n  Here we are demonstrating a fast way to invoke this function.  Simply typing \"*conversu\" and then pressing the Tab key should result in the full function name.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_NoFilter = Get-tsharkConversUDP -Pcap .\\myTest.pcap\r\n\r\n  UDP Conversations\r\n\r\n  Filter:<No Filter>\r\n\r\n\r\n  PS C:\\> $Convers_NoFilter | ft *\r\n\r\n  IP1                Dir IP2                  <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                  -------- ------- -------- ------- --------- -------- ------------- --------\r\n  10.30.40.5:53850   <-> 10.44.29.235:3389    2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n  10.44.29.220:5353  <-> 224.0.0.251:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n  10.44.29.235:137   <-> 10.44.29.255:137     0        0       33       3036    33        3036     10.834146000  61.0343\r\n  10.44.41.184:1900  <-> 239.255.255.250:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n  10.44.41.203:1900  <-> 239.255.255.250:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n  10.44.29.235:54532 <-> 239.255.255.250:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n  10.44.46.222:1900  <-> 239.255.255.250:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n  10.44.46.228:1900  <-> 239.255.255.250:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n  10.44.46.250:1900  <-> 239.255.255.250:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n  10.44.46.218:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n  10.44.46.251:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n  10.44.46.223:1900  <-> 239.255.255.250:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n  10.44.46.221:1900  <-> 239.255.255.250:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n  10.44.29.235:56458 <-> 172.217.9.141:443    0        0       6        7098    6         7098     11.624875000  3.9998\r\n  10.44.29.235:137   <-> 151.101.65.7:137     0        0       6        552     6         552      12.858969000  3.2651\r\n  10.44.29.235:137   <-> 40.89.244.232:137    0        0       6        552     6         552      17.134275000  35.1924\r\n  10.44.29.235:137   <-> 52.141.221.14:137    0        0       6        552     6         552      19.220760000  14.8727\r\n  10.44.29.235:137   <-> 40.89.244.234:137    0        0       6        552     6         552      20.178889000  9.3514\r\n  10.44.29.235:137   <-> 104.28.23.242:137    0        0       6        552     6         552      22.022590000  3.1135\r\n  10.44.29.235:137   <-> 104.31.76.155:137    0        0       6        552     6         552      34.180877000  4.4677\r\n  10.44.29.235:137   <-> 192.0.78.22:137      0        0       6        552     6         552      39.204785000  8.5632\r\n  10.44.29.235:137   <-> 192.0.73.2:137       0        0       6        552     6         552      40.205910000  3.0012\r\n  10.44.29.235:137   <-> 199.232.9.7:137      0        0       6        552     6         552      71.204363000  8.3979\r\n  10.44.29.235:54160 <-> 239.255.255.250:1900 0        0       4        860     4         860      6.654986000   3.0028\r\n  10.44.29.235:61273 <-> 10.9.8.7:53          2        190     2        158     4         348      11.556787000  0.1144\r\n\r", "func_src_after": "<#\r\n.SYNOPSIS\r\n  Short description\r\n.DESCRIPTION\r\n.EXAMPLE\r\n  PS C:\\> *conversu <tab>\r\n  PS C:\\> Get-tsharkConversUDP\r\n\r\n\r\n\r\n  Here we are demonstrating a fast way to invoke this function.  Simply typing \"*conversu\" and then pressing the Tab key should result in the full function name.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_NoFilter = Get-tsharkConversUDP -Pcap .\\myTest.pcap\r\n\r\n  UDP Conversations\r\n\r\n  Filter:<No Filter>\r\n\r\n\r\n  PS C:\\> $Convers_NoFilter | ft *\r\n\r\n  IP1                Dir IP2                  <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                  -------- ------- -------- ------- --------- -------- ------------- --------\r\n  <IP-Address>:53850   <-> <IP-Address>:3389    2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n  <IP-Address>:5353  <-> <IP-Address>:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n  <IP-Address>:137   <-> <IP-Address>:137     0        0       33       3036    33        3036     10.834146000  61.0343\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n  <IP-Address>:54532 <-> <IP-Address>:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n  <IP-Address>:56458 <-> <IP-Address>:443    0        0       6        7098    6         7098     11.624875000  3.9998\r\n  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      12.858969000  3.2651\r\n  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      17.134275000  35.1924\r\n  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      19.220760000  14.8727\r\n  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      20.178889000  9.3514\r\n  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      22.022590000  3.1135\r\n  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      34.180877000  4.4677\r\n  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      39.204785000  8.5632\r\n  <IP-Address>:137   <-> <IP-Address>:137       0        0       6        552     6         552      40.205910000  3.0012\r\n  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      71.204363000  8.3979\r\n  <IP-Address>:54160 <-> <IP-Address>:1900 0        0       4        860     4         860      6.654986000   3.0028\r\n  <IP-Address>:61273 <-> <IP-Address>:53          2        190     2        158     4         348      11.556787000  0.1144\r\n\r", "line_changes": {"deleted": [{"line_no": 25, "char_start": 707, "char_end": 829, "line": "  10.30.40.5:53850   <-> 10.44.29.235:3389    2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"line_no": 27, "char_start": 831, "char_end": 953, "line": "  10.44.29.220:5353  <-> 224.0.0.251:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"line_no": 29, "char_start": 954, "char_end": 1076, "line": "  10.44.29.235:137   <-> 10.44.29.255:137     0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"line_no": 31, "char_start": 1076, "char_end": 1198, "line": "  10.44.41.184:1900  <-> 239.255.255.250:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"line_no": 33, "char_start": 1195, "char_end": 1317, "line": "  10.44.41.203:1900  <-> 239.255.255.250:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"line_no": 35, "char_start": 1314, "char_end": 1436, "line": "  10.44.29.235:54532 <-> 239.255.255.250:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"line_no": 37, "char_start": 1433, "char_end": 1555, "line": "  10.44.46.222:1900  <-> 239.255.255.250:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"line_no": 39, "char_start": 1552, "char_end": 1674, "line": "  10.44.46.228:1900  <-> 239.255.255.250:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"line_no": 41, "char_start": 1671, "char_end": 1793, "line": "  10.44.46.250:1900  <-> 239.255.255.250:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"line_no": 43, "char_start": 1790, "char_end": 1912, "line": "  10.44.46.218:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"line_no": 45, "char_start": 1909, "char_end": 2031, "line": "  10.44.46.251:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"line_no": 47, "char_start": 2028, "char_end": 2150, "line": "  10.44.46.223:1900  <-> 239.255.255.250:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"line_no": 49, "char_start": 2147, "char_end": 2269, "line": "  10.44.46.221:1900  <-> 239.255.255.250:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"line_no": 51, "char_start": 2266, "char_end": 2387, "line": "  10.44.29.235:56458 <-> 172.217.9.141:443    0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"line_no": 53, "char_start": 2386, "char_end": 2507, "line": "  10.44.29.235:137   <-> 151.101.65.7:137     0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"line_no": 55, "char_start": 2507, "char_end": 2629, "line": "  10.44.29.235:137   <-> 40.89.244.232:137    0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"line_no": 57, "char_start": 2628, "char_end": 2750, "line": "  10.44.29.235:137   <-> 52.141.221.14:137    0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"line_no": 59, "char_start": 2749, "char_end": 2870, "line": "  10.44.29.235:137   <-> 40.89.244.234:137    0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"line_no": 61, "char_start": 2869, "char_end": 2990, "line": "  10.44.29.235:137   <-> 104.28.23.242:137    0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"line_no": 63, "char_start": 2989, "char_end": 3110, "line": "  10.44.29.235:137   <-> 104.31.76.155:137    0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"line_no": 65, "char_start": 3109, "char_end": 3230, "line": "  10.44.29.235:137   <-> 192.0.78.22:137      0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"line_no": 67, "char_start": 3231, "char_end": 3352, "line": "  10.44.29.235:137   <-> 192.0.73.2:137       0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"line_no": 69, "char_start": 3354, "char_end": 3475, "line": "  10.44.29.235:137   <-> 199.232.9.7:137      0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"line_no": 71, "char_start": 3476, "char_end": 3597, "line": "  10.44.29.235:54160 <-> 239.255.255.250:1900 0        0       4        860     4         860      6.654986000   3.0028\r\n"}, {"line_no": 73, "char_start": 3594, "char_end": 3715, "line": "  10.44.29.235:61273 <-> 10.9.8.7:53          2        190     2        158     4         348      11.556787000  0.1144\r\n"}], "added": [{"line_no": 26, "char_start": 707, "char_end": 831, "line": "  <IP-Address>:53850   <-> <IP-Address>:3389    2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"line_no": 28, "char_start": 831, "char_end": 954, "line": "  <IP-Address>:5353  <-> <IP-Address>:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"line_no": 30, "char_start": 954, "char_end": 1076, "line": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"line_no": 32, "char_start": 1076, "char_end": 1195, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"line_no": 34, "char_start": 1195, "char_end": 1314, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"line_no": 36, "char_start": 1314, "char_end": 1433, "line": "  <IP-Address>:54532 <-> <IP-Address>:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"line_no": 38, "char_start": 1433, "char_end": 1552, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"line_no": 40, "char_start": 1552, "char_end": 1671, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"line_no": 42, "char_start": 1671, "char_end": 1790, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"line_no": 44, "char_start": 1790, "char_end": 1909, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"line_no": 46, "char_start": 1909, "char_end": 2028, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"line_no": 48, "char_start": 2028, "char_end": 2147, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"line_no": 50, "char_start": 2147, "char_end": 2266, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"line_no": 52, "char_start": 2266, "char_end": 2386, "line": "  <IP-Address>:56458 <-> <IP-Address>:443    0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"line_no": 54, "char_start": 2386, "char_end": 2507, "line": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"line_no": 56, "char_start": 2507, "char_end": 2628, "line": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"line_no": 58, "char_start": 2628, "char_end": 2749, "line": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"line_no": 60, "char_start": 2749, "char_end": 2869, "line": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"line_no": 62, "char_start": 2869, "char_end": 2989, "line": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"line_no": 64, "char_start": 2989, "char_end": 3109, "line": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"line_no": 66, "char_start": 3109, "char_end": 3231, "line": "  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"line_no": 68, "char_start": 3231, "char_end": 3354, "line": "  <IP-Address>:137   <-> <IP-Address>:137       0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"line_no": 70, "char_start": 3354, "char_end": 3476, "line": "  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"line_no": 72, "char_start": 3476, "char_end": 3594, "line": "  <IP-Address>:54160 <-> <IP-Address>:1900 0        0       4        860     4         860      6.654986000   3.0028\r\n"}, {"line_no": 74, "char_start": 3594, "char_end": 3719, "line": "  <IP-Address>:61273 <-> <IP-Address>:53          2        190     2        158     4         348      11.556787000  0.1144\r\n"}]}, "char_changes": {"deleted": [{"char_start": 707, "char_end": 829, "chars": "  10.30.40.5:53850   <-> 10.44.29.235:3389    2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"char_start": 831, "char_end": 953, "chars": "  10.44.29.220:5353  <-> 224.0.0.251:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"char_start": 954, "char_end": 1076, "chars": "  10.44.29.235:137   <-> 10.44.29.255:137     0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"char_start": 1076, "char_end": 1198, "chars": "  10.44.41.184:1900  <-> 239.255.255.250:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"char_start": 1195, "char_end": 1317, "chars": "  10.44.41.203:1900  <-> 239.255.255.250:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"char_start": 1314, "char_end": 1436, "chars": "  10.44.29.235:54532 <-> 239.255.255.250:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"char_start": 1433, "char_end": 1555, "chars": "  10.44.46.222:1900  <-> 239.255.255.250:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"char_start": 1552, "char_end": 1674, "chars": "  10.44.46.228:1900  <-> 239.255.255.250:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"char_start": 1671, "char_end": 1793, "chars": "  10.44.46.250:1900  <-> 239.255.255.250:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"char_start": 1790, "char_end": 1912, "chars": "  10.44.46.218:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"char_start": 1909, "char_end": 2031, "chars": "  10.44.46.251:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"char_start": 2028, "char_end": 2150, "chars": "  10.44.46.223:1900  <-> 239.255.255.250:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"char_start": 2147, "char_end": 2269, "chars": "  10.44.46.221:1900  <-> 239.255.255.250:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"char_start": 2266, "char_end": 2387, "chars": "  10.44.29.235:56458 <-> 172.217.9.141:443    0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"char_start": 2386, "char_end": 2507, "chars": "  10.44.29.235:137   <-> 151.101.65.7:137     0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"char_start": 2507, "char_end": 2629, "chars": "  10.44.29.235:137   <-> 40.89.244.232:137    0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"char_start": 2628, "char_end": 2750, "chars": "  10.44.29.235:137   <-> 52.141.221.14:137    0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"char_start": 2749, "char_end": 2870, "chars": "  10.44.29.235:137   <-> 40.89.244.234:137    0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"char_start": 2869, "char_end": 2990, "chars": "  10.44.29.235:137   <-> 104.28.23.242:137    0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"char_start": 2989, "char_end": 3110, "chars": "  10.44.29.235:137   <-> 104.31.76.155:137    0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"char_start": 3109, "char_end": 3230, "chars": "  10.44.29.235:137   <-> 192.0.78.22:137      0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"char_start": 3231, "char_end": 3352, "chars": "  10.44.29.235:137   <-> 192.0.73.2:137       0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"char_start": 3354, "char_end": 3475, "chars": "  10.44.29.235:137   <-> 199.232.9.7:137      0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"char_start": 3476, "char_end": 3597, "chars": "  10.44.29.235:54160 <-> 239.255.255.250:1900 0        0       4        860     4         860      6.654986000   3.0028\r\n"}, {"char_start": 3594, "char_end": 3715, "chars": "  10.44.29.235:61273 <-> 10.9.8.7:53          2        190     2        158     4         348      11.556787000  0.1144\r\n"}], "added": [{"char_start": 707, "char_end": 831, "chars": "  <IP-Address>:53850   <-> <IP-Address>:3389    2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"char_start": 831, "char_end": 954, "chars": "  <IP-Address>:5353  <-> <IP-Address>:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"char_start": 954, "char_end": 1076, "chars": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"char_start": 1076, "char_end": 1195, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"char_start": 1195, "char_end": 1314, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"char_start": 1314, "char_end": 1433, "chars": "  <IP-Address>:54532 <-> <IP-Address>:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"char_start": 1433, "char_end": 1552, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"char_start": 1552, "char_end": 1671, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"char_start": 1671, "char_end": 1790, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"char_start": 1790, "char_end": 1909, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"char_start": 1909, "char_end": 2028, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"char_start": 2028, "char_end": 2147, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"char_start": 2147, "char_end": 2266, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"char_start": 2266, "char_end": 2386, "chars": "  <IP-Address>:56458 <-> <IP-Address>:443    0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"char_start": 2386, "char_end": 2507, "chars": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"char_start": 2507, "char_end": 2628, "chars": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"char_start": 2628, "char_end": 2749, "chars": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"char_start": 2749, "char_end": 2869, "chars": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"char_start": 2869, "char_end": 2989, "chars": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"char_start": 2989, "char_end": 3109, "chars": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"char_start": 3109, "char_end": 3231, "chars": "  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"char_start": 3231, "char_end": 3354, "chars": "  <IP-Address>:137   <-> <IP-Address>:137       0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"char_start": 3354, "char_end": 3476, "chars": "  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"char_start": 3476, "char_end": 3594, "chars": "  <IP-Address>:54160 <-> <IP-Address>:1900 0        0       4        860     4         860      6.654986000   3.0028\r\n"}, {"char_start": 3594, "char_end": 3719, "chars": "  <IP-Address>:61273 <-> <IP-Address>:53          2        190     2        158     4         348      11.556787000  0.1144\r\n"}]}}
{"func_name": 12135, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\r\n\r\n  Here we run the function by simplying referencing a packet capture.  The output consists of UDP Conversations found in the capture and statistical information concerning those conversations.  In this capture we see multicast, public, and private IP addresses.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_PublicIP = Get-tsharkConversUDP -Pcap .\\myTest.pcap -FilterSet PublicIP\r\n\r\n  UDP Conversations containing Public IP Addresses and excluding Multicast\r\n\r\n  Filter:( !(ip.src==10.0.0.0/8) && !(ip.src==172.16.0.0/12) && !(ip.src==192.168.0.0/16) ) || ( !(ip.dst==10.0.0.0/8) && !(ip.dst==172.16.0.0/12) && !(ip.dst==192.168.0.0/16) )  &&  !(ip.addr==224.0.0.0/4)\r\n\r\n\r\n  PS C:\\> $Convers_PublicIP | ft *\r\n\r\n  IP1                Dir IP2                 <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                 -------- ------- -------- ------- --------- -------- ------------- --------\r\n  10.44.29.235:56458 <-> 172.217.9.141:443   0        0       6        7098    6         7098     11.624875000  3.9998\r\n  10.44.29.235:137   <-> 151.101.65.7:137    0        0       6        552     6         552      12.858969000  3.2651\r\n  10.44.29.235:137   <-> 40.89.244.232:137   0        0       6        552     6         552      17.134275000  35.1924\r\n  10.44.29.235:137   <-> 52.141.221.14:137   0        0       6        552     6         552      19.220760000  14.8727\r\n  10.44.29.235:137   <-> 40.89.244.234:137   0        0       6        552     6         552      20.178889000  9.3514\r\n  10.44.29.235:137   <-> 104.28.23.242:137   0        0       6        552     6         552      22.022590000  3.1135\r\n  10.44.29.235:137   <-> 104.31.76.155:137   0        0       6        552     6         552      34.180877000  4.4677\r\n  10.44.29.235:137   <-> 192.0.78.22:137     0        0       6        552     6         552      39.204785000  8.5632\r\n  10.44.29.235:137   <-> 192.0.73.2:137      0        0       6        552     6         552      40.205910000  3.0012\r\n  10.44.29.235:137   <-> 199.232.9.7:137     0        0       6        552     6         552      71.204363000  8.3979\r\n  10.44.29.235:137   <-> 151.101.194.110:137 0        0       3        276     3         276      53.891931000  3.0058\r\n\r\n  \r\n\r\n  Here we run the function by referencing a packet capture and specifying \"-FilterSet PublicIP\".  The output consists of UDP Conversations found in the capture where a Public IP address is part of the conversation.  This Filter Set excludes Multicast addresses.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_PvtIpOnly = Get-tsharkConversUDP -Pcap .\\myTest.pcap -FilterSet PrivateIPOnly\r\n\r\n  UDP Conversations containing Private IP Addresses (RFC1918) Only\r\n\r\n  Filter:(ip.src==10.0.0.0/8 || ip.src==172.16.0.0/12 || ip.src==192.168.0.0/16) && (ip.dst==10.0.0.0/8 || ip.dst==172.16.0.0/12 || ip.dst==192.168.0.0/16) && !(ip.addr==224.0.0.0/4)\r\n\r\n\r\n  PS C:\\> $Convers_PvtIpOnly | ft *\r\n\r\n  IP1                Dir IP2                 <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                 -------- ------- -------- ------- --------- -------- ------------- --------\r\n  10.30.40.5:53850   <-> 10.44.29.235:3389   2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n  10.44.29.235:137   <-> 10.44.29.255:137    0        0       33       3036    33        3036     10.834146000  61.0343\r\n  10.44.29.235:61273 <-> 10.9.8.7:53         2        190     2        158     4         348      11.556787000  0.1144\r\n  10.44.29.235:56457 <-> 10.9.8.7:53         2        382     2        160     4         542      11.578695000  0.1154\r\n  10.44.29.235:60547 <-> 10.9.8.7:53         2        398     2        168     4         566      12.196560000  0.1154\r\n  10.44.29.235:56513 <-> 10.9.8.7:53         2        344     2        160     4         504      16.948500000  0.1156\r", "func_src_after": "\r\n\r\n  Here we run the function by simplying referencing a packet capture.  The output consists of UDP Conversations found in the capture and statistical information concerning those conversations.  In this capture we see multicast, public, and private IP addresses.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_PublicIP = Get-tsharkConversUDP -Pcap .\\myTest.pcap -FilterSet PublicIP\r\n\r\n  UDP Conversations containing Public IP Addresses and excluding Multicast\r\n\r\n  Filter:( !(ip.src==<IP-Address>/8) && !(ip.src==<IP-Address>/12) && !(ip.src==<IP-Address>/16) ) || ( !(ip.dst==<IP-Address>/8) && !(ip.dst==<IP-Address>/12) && !(ip.dst==<IP-Address>/16) )  &&  !(ip.addr==<IP-Address>/4)\r\n\r\n\r\n  PS C:\\> $Convers_PublicIP | ft *\r\n\r\n  IP1                Dir IP2                 <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                 -------- ------- -------- ------- --------- -------- ------------- --------\r\n  <IP-Address>:56458 <-> <IP-Address>:443   0        0       6        7098    6         7098     11.624875000  3.9998\r\n  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      12.858969000  3.2651\r\n  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      17.134275000  35.1924\r\n  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      19.220760000  14.8727\r\n  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      20.178889000  9.3514\r\n  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      22.022590000  3.1135\r\n  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      34.180877000  4.4677\r\n  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      39.204785000  8.5632\r\n  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      40.205910000  3.0012\r\n  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      71.204363000  8.3979\r\n  <IP-Address>:137   <-> <IP-Address>:137 0        0       3        276     3         276      53.891931000  3.0058\r\n\r\n  \r\n\r\n  Here we run the function by referencing a packet capture and specifying \"-FilterSet PublicIP\".  The output consists of UDP Conversations found in the capture where a Public IP address is part of the conversation.  This Filter Set excludes Multicast addresses.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_PvtIpOnly = Get-tsharkConversUDP -Pcap .\\myTest.pcap -FilterSet PrivateIPOnly\r\n\r\n  UDP Conversations containing Private IP Addresses (RFC1918) Only\r\n\r\n  Filter:(ip.src==<IP-Address>/8 || ip.src==<IP-Address>/12 || ip.src==<IP-Address>/16) && (ip.dst==<IP-Address>/8 || ip.dst==<IP-Address>/12 || ip.dst==<IP-Address>.<IP-Address>/16) && !(ip.addr==<IP-Address>/4)\r\n\r\n\r\n  PS C:\\> $Convers_PvtIpOnly | ft *\r\n\r\n  IP1                Dir IP2                 <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                 -------- ------- -------- ------- --------- -------- ------------- --------\r\n  <IP-Address>:53850   <-> <IP-Address>:3389   2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n  <IP-Address>:137   <-> <IP-Address>:137    0        0       33       3036    33        3036     10.834146000  61.0343\r\n  <IP-Address>:61273 <-> <IP-Address>:53         2        190     2        158     4         348      11.556787000  0.1144\r\n  <IP-Address>:56457 <-> <IP-Address>:53         2        382     2        160     4         542      11.578695000  0.1154\r\n  <IP-Address>:60547 <-> <IP-Address>:53         2        398     2        168     4         566      12.196560000  0.1154\r\n  <IP-Address>:56513 <-> <IP-Address>:53         2        344     2        160     4         504      16.948500000  0.1156\r", "line_changes": {"deleted": [{"line_no": 10, "char_start": 451, "char_end": 659, "line": "  Filter:( !(ip.src==10.0.0.0/8) && !(ip.src==172.16.0.0/12) && !(ip.src==192.168.0.0/16) ) || ( !(ip.dst==10.0.0.0/8) && !(ip.dst==172.16.0.0/12) && !(ip.dst==192.168.0.0/16) )  &&  !(ip.addr==224.0.0.0/4)\r\n"}, {"line_no": 18, "char_start": 962, "char_end": 1082, "line": "  10.44.29.235:56458 <-> 172.217.9.141:443   0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"line_no": 20, "char_start": 1081, "char_end": 1201, "line": "  10.44.29.235:137   <-> 151.101.65.7:137    0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"line_no": 22, "char_start": 1201, "char_end": 1322, "line": "  10.44.29.235:137   <-> 40.89.244.232:137   0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"line_no": 24, "char_start": 1321, "char_end": 1442, "line": "  10.44.29.235:137   <-> 52.141.221.14:137   0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"line_no": 26, "char_start": 1441, "char_end": 1561, "line": "  10.44.29.235:137   <-> 40.89.244.234:137   0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"line_no": 28, "char_start": 1560, "char_end": 1680, "line": "  10.44.29.235:137   <-> 104.28.23.242:137   0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"line_no": 30, "char_start": 1679, "char_end": 1799, "line": "  10.44.29.235:137   <-> 104.31.76.155:137   0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"line_no": 32, "char_start": 1798, "char_end": 1918, "line": "  10.44.29.235:137   <-> 192.0.78.22:137     0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"line_no": 34, "char_start": 1919, "char_end": 2039, "line": "  10.44.29.235:137   <-> 192.0.73.2:137      0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"line_no": 36, "char_start": 2041, "char_end": 2161, "line": "  10.44.29.235:137   <-> 199.232.9.7:137     0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"line_no": 38, "char_start": 2162, "char_end": 2282, "line": "  10.44.29.235:137   <-> 151.101.194.110:137 0        0       3        276     3         276      53.891931000  3.0058\r\n"}, {"line_no": 50, "char_start": 2732, "char_end": 2916, "line": "  Filter:(ip.src==10.0.0.0/8 || ip.src==172.16.0.0/12 || ip.src==192.168.0.0/16) && (ip.dst==10.0.0.0/8 || ip.dst==172.16.0.0/12 || ip.dst==192.168.0.0/16) && !(ip.addr==224.0.0.0/4)\r\n"}, {"line_no": 58, "char_start": 3233, "char_end": 3354, "line": "  10.30.40.5:53850   <-> 10.44.29.235:3389   2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"line_no": 60, "char_start": 3356, "char_end": 3477, "line": "  10.44.29.235:137   <-> 10.44.29.255:137    0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"line_no": 62, "char_start": 3477, "char_end": 3597, "line": "  10.44.29.235:61273 <-> 10.9.8.7:53         2        190     2        158     4         348      11.556787000  0.1144\r\n"}, {"line_no": 64, "char_start": 3601, "char_end": 3721, "line": "  10.44.29.235:56457 <-> 10.9.8.7:53         2        382     2        160     4         542      11.578695000  0.1154\r\n"}, {"line_no": 66, "char_start": 3725, "char_end": 3845, "line": "  10.44.29.235:60547 <-> 10.9.8.7:53         2        398     2        168     4         566      12.196560000  0.1154\r\n"}, {"line_no": 68, "char_start": 3849, "char_end": 3968, "line": "  10.44.29.235:56513 <-> 10.9.8.7:53         2        344     2        160     4         504      16.948500000  0.1156\r"}], "added": [{"line_no": 11, "char_start": 451, "char_end": 676, "line": "  Filter:( !(ip.src==<IP-Address>/8) && !(ip.src==<IP-Address>/12) && !(ip.src==<IP-Address>/16) ) || ( !(ip.dst==<IP-Address>/8) && !(ip.dst==<IP-Address>/12) && !(ip.dst==<IP-Address>/16) )  &&  !(ip.addr==<IP-Address>/4)\r\n"}, {"line_no": 19, "char_start": 962, "char_end": 1081, "line": "  <IP-Address>:56458 <-> <IP-Address>:443   0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"line_no": 21, "char_start": 1081, "char_end": 1201, "line": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"line_no": 23, "char_start": 1201, "char_end": 1321, "line": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"line_no": 25, "char_start": 1321, "char_end": 1441, "line": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"line_no": 27, "char_start": 1441, "char_end": 1560, "line": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"line_no": 29, "char_start": 1560, "char_end": 1679, "line": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"line_no": 31, "char_start": 1679, "char_end": 1798, "line": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"line_no": 33, "char_start": 1798, "char_end": 1919, "line": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"line_no": 35, "char_start": 1919, "char_end": 2041, "line": "  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"line_no": 37, "char_start": 2041, "char_end": 2162, "line": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"line_no": 39, "char_start": 2162, "char_end": 2279, "line": "  <IP-Address>:137   <-> <IP-Address>:137 0        0       3        276     3         276      53.891931000  3.0058\r\n"}, {"line_no": 51, "char_start": 2732, "char_end": 2946, "line": "  Filter:(ip.src==<IP-Address>/8 || ip.src==<IP-Address>/12 || ip.src==<IP-Address>/16) && (ip.dst==<IP-Address>/8 || ip.dst==<IP-Address>/12 || ip.dst==<IP-Address>.<IP-Address>/16) && !(ip.addr==<IP-Address>/4)\r\n"}, {"line_no": 59, "char_start": 3233, "char_end": 3356, "line": "  <IP-Address>:53850   <-> <IP-Address>:3389   2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"line_no": 61, "char_start": 3356, "char_end": 3477, "line": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"line_no": 63, "char_start": 3477, "char_end": 3601, "line": "  <IP-Address>:61273 <-> <IP-Address>:53         2        190     2        158     4         348      11.556787000  0.1144\r\n"}, {"line_no": 65, "char_start": 3601, "char_end": 3725, "line": "  <IP-Address>:56457 <-> <IP-Address>:53         2        382     2        160     4         542      11.578695000  0.1154\r\n"}, {"line_no": 67, "char_start": 3725, "char_end": 3849, "line": "  <IP-Address>:60547 <-> <IP-Address>:53         2        398     2        168     4         566      12.196560000  0.1154\r\n"}, {"line_no": 69, "char_start": 3849, "char_end": 3972, "line": "  <IP-Address>:56513 <-> <IP-Address>:53         2        344     2        160     4         504      16.948500000  0.1156\r"}]}, "char_changes": {"deleted": [{"char_start": 451, "char_end": 659, "chars": "  Filter:( !(ip.src==10.0.0.0/8) && !(ip.src==172.16.0.0/12) && !(ip.src==192.168.0.0/16) ) || ( !(ip.dst==10.0.0.0/8) && !(ip.dst==172.16.0.0/12) && !(ip.dst==192.168.0.0/16) )  &&  !(ip.addr==224.0.0.0/4)\r\n"}, {"char_start": 962, "char_end": 1082, "chars": "  10.44.29.235:56458 <-> 172.217.9.141:443   0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"char_start": 1081, "char_end": 1201, "chars": "  10.44.29.235:137   <-> 151.101.65.7:137    0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"char_start": 1201, "char_end": 1322, "chars": "  10.44.29.235:137   <-> 40.89.244.232:137   0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"char_start": 1321, "char_end": 1442, "chars": "  10.44.29.235:137   <-> 52.141.221.14:137   0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"char_start": 1441, "char_end": 1561, "chars": "  10.44.29.235:137   <-> 40.89.244.234:137   0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"char_start": 1560, "char_end": 1680, "chars": "  10.44.29.235:137   <-> 104.28.23.242:137   0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"char_start": 1679, "char_end": 1799, "chars": "  10.44.29.235:137   <-> 104.31.76.155:137   0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"char_start": 1798, "char_end": 1918, "chars": "  10.44.29.235:137   <-> 192.0.78.22:137     0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"char_start": 1919, "char_end": 2039, "chars": "  10.44.29.235:137   <-> 192.0.73.2:137      0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"char_start": 2041, "char_end": 2161, "chars": "  10.44.29.235:137   <-> 199.232.9.7:137     0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"char_start": 2162, "char_end": 2282, "chars": "  10.44.29.235:137   <-> 151.101.194.110:137 0        0       3        276     3         276      53.891931000  3.0058\r\n"}, {"char_start": 2732, "char_end": 2916, "chars": "  Filter:(ip.src==10.0.0.0/8 || ip.src==172.16.0.0/12 || ip.src==192.168.0.0/16) && (ip.dst==10.0.0.0/8 || ip.dst==172.16.0.0/12 || ip.dst==192.168.0.0/16) && !(ip.addr==224.0.0.0/4)\r\n"}, {"char_start": 3233, "char_end": 3354, "chars": "  10.30.40.5:53850   <-> 10.44.29.235:3389   2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"char_start": 3356, "char_end": 3477, "chars": "  10.44.29.235:137   <-> 10.44.29.255:137    0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"char_start": 3477, "char_end": 3597, "chars": "  10.44.29.235:61273 <-> 10.9.8.7:53         2        190     2        158     4         348      11.556787000  0.1144\r\n"}, {"char_start": 3601, "char_end": 3721, "chars": "  10.44.29.235:56457 <-> 10.9.8.7:53         2        382     2        160     4         542      11.578695000  0.1154\r\n"}, {"char_start": 3725, "char_end": 3845, "chars": "  10.44.29.235:60547 <-> 10.9.8.7:53         2        398     2        168     4         566      12.196560000  0.1154\r\n"}, {"char_start": 3849, "char_end": 3968, "chars": "  10.44.29.235:56513 <-> 10.9.8.7:53         2        344     2        160     4         504      16.948500000  0.1156\r"}], "added": [{"char_start": 451, "char_end": 676, "chars": "  Filter:( !(ip.src==<IP-Address>/8) && !(ip.src==<IP-Address>/12) && !(ip.src==<IP-Address>/16) ) || ( !(ip.dst==<IP-Address>/8) && !(ip.dst==<IP-Address>/12) && !(ip.dst==<IP-Address>/16) )  &&  !(ip.addr==<IP-Address>/4)\r\n"}, {"char_start": 962, "char_end": 1081, "chars": "  <IP-Address>:56458 <-> <IP-Address>:443   0        0       6        7098    6         7098     11.624875000  3.9998\r\n"}, {"char_start": 1081, "char_end": 1201, "chars": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       6        552     6         552      12.858969000  3.2651\r\n"}, {"char_start": 1201, "char_end": 1321, "chars": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      17.134275000  35.1924\r\n"}, {"char_start": 1321, "char_end": 1441, "chars": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      19.220760000  14.8727\r\n"}, {"char_start": 1441, "char_end": 1560, "chars": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      20.178889000  9.3514\r\n"}, {"char_start": 1560, "char_end": 1679, "chars": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      22.022590000  3.1135\r\n"}, {"char_start": 1679, "char_end": 1798, "chars": "  <IP-Address>:137   <-> <IP-Address>:137   0        0       6        552     6         552      34.180877000  4.4677\r\n"}, {"char_start": 1798, "char_end": 1919, "chars": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      39.204785000  8.5632\r\n"}, {"char_start": 1919, "char_end": 2041, "chars": "  <IP-Address>:137   <-> <IP-Address>:137      0        0       6        552     6         552      40.205910000  3.0012\r\n"}, {"char_start": 2041, "char_end": 2162, "chars": "  <IP-Address>:137   <-> <IP-Address>:137     0        0       6        552     6         552      71.204363000  8.3979\r\n"}, {"char_start": 2162, "char_end": 2279, "chars": "  <IP-Address>:137   <-> <IP-Address>:137 0        0       3        276     3         276      53.891931000  3.0058\r\n"}, {"char_start": 2732, "char_end": 2946, "chars": "  Filter:(ip.src==<IP-Address>/8 || ip.src==<IP-Address>/12 || ip.src==<IP-Address>/16) && (ip.dst==<IP-Address>/8 || ip.dst==<IP-Address>/12 || ip.dst==<IP-Address>.<IP-Address>/16) && !(ip.addr==<IP-Address>/4)\r\n"}, {"char_start": 3233, "char_end": 3356, "chars": "  <IP-Address>:53850   <-> <IP-Address>:3389   2918     2938246 836      65363   3754      3003609  0.118788000   94.2128\r\n"}, {"char_start": 3356, "char_end": 3477, "chars": "  <IP-Address>:137   <-> <IP-Address>:137    0        0       33       3036    33        3036     10.834146000  61.0343\r\n"}, {"char_start": 3477, "char_end": 3601, "chars": "  <IP-Address>:61273 <-> <IP-Address>:53         2        190     2        158     4         348      11.556787000  0.1144\r\n"}, {"char_start": 3601, "char_end": 3725, "chars": "  <IP-Address>:56457 <-> <IP-Address>:53         2        382     2        160     4         542      11.578695000  0.1154\r\n"}, {"char_start": 3725, "char_end": 3849, "chars": "  <IP-Address>:60547 <-> <IP-Address>:53         2        398     2        168     4         566      12.196560000  0.1154\r\n"}, {"char_start": 3849, "char_end": 3972, "chars": "  <IP-Address>:56513 <-> <IP-Address>:53         2        344     2        160     4         504      16.948500000  0.1156\r"}]}}
{"func_name": 12138, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "<#\nCopyright (c) 2018 Dell EMC Corporation\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n#>\n\n<#\n.SYNOPSIS\n    Edit device discovery job in OpenManage Enterprise\n.DESCRIPTION\n    This is used to onboard devices into OpenManage Enterprise. Specify a list of IP Addresses or hostnames. You can also specify a subnet. Wildcards are supported as well.\n.PARAMETER Name\n    Name of the discovery job\n.PARAMETER Hosts\n    Array of IP Addresses, Subnets or Hosts\n    Valid Format:\n    10.35.0.0\n    10.36.0.0-10.36.0.255\n    10.37.0.0/24\n    2607:f2b1:f083:135::5500/118\n    2607:f2b1:f083:135::a500-2607:f2b1:f083:135::a600\n    hostname.domain.tld\n    hostname\n    2607:f2b1:f083:139::22a\n    Invalid IP Range Format:\n    10.35.0.*\n    10.36.0.0-255\n    10.35.0.0/255.255.255.0\n.PARAMETER DiscoveryUserName\n    Discovery user name. The iDRAC user for server discovery.\n.PARAMETER DiscoveryPassword\n    Discovery password. The iDRAC user's password for server discovery.\n.PARAMETER Email\n    Email upon completion\n.PARAMETER Schedule\n    Determines when the discovery job will be executed. (Default=\"RunNow\", \"RunLater\")\n.PARAMETER ScheduleCron\n    Cron string to schedule discovery job at a later time. Uses UTC time. Used with -Schedule \"RunLater\"\n    Example: Every Sunday at 12:00AM UTC: '0 0 0 ? * sun *'\n.PARAMETER Mode", "func_src_after": "<#\nCopyright (c) 2018 Dell EMC Corporation\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n#>\n\n<#\n.SYNOPSIS\n    Edit device discovery job in OpenManage Enterprise\n.DESCRIPTION\n    This is used to onboard devices into OpenManage Enterprise. Specify a list of IP Addresses or hostnames. You can also specify a subnet. Wildcards are supported as well.\n.PARAMETER Name\n    Name of the discovery job\n.PARAMETER Hosts\n    Array of IP Addresses, Subnets or Hosts\n    Valid Format:\n    <IP-Address>\n    <IP-Address>-<IP-Address>\n    <IP-Address>/24\n    <IP-Address>/118\n    <IP-Address>-<IP-Address>00\n    hostname.domain.tld\n    hostname\n    <IP-Address>\n    Invalid IP Range Format:\n    <IP-Address>.*\n    <IP-Address>-255\n    <IP-Address>/<IP-Address>.<IP-Address>\n.PARAMETER DiscoveryUserName\n    Discovery user name. The iDRAC user for server discovery.\n.PARAMETER DiscoveryPassword\n    Discovery password. The iDRAC user's password for server discovery.\n.PARAMETER Email\n    Email upon completion\n.PARAMETER Schedule\n    Determines when the discovery job will be executed. (Default=\"RunNow\", \"RunLater\")\n.PARAMETER ScheduleCron\n    Cron string to schedule discovery job at a later time. Uses UTC time. Used with -Schedule \"RunLater\"\n    Example: Every Sunday at 12:00AM UTC: '0 0 0 ? * sun *'\n.PARAMETER Mode", "line_changes": {"deleted": [{"line_no": 27, "char_start": 953, "char_end": 967, "line": "    10.35.0.0\n"}, {"line_no": 28, "char_start": 953, "char_end": 979, "line": "    10.36.0.0-10.36.0.255\n"}, {"line_no": 29, "char_start": 953, "char_end": 970, "line": "    10.37.0.0/24\n"}, {"line_no": 30, "char_start": 953, "char_end": 986, "line": "    2607:f2b1:f083:135::5500/118\n"}, {"line_no": 31, "char_start": 953, "char_end": 1007, "line": "    2607:f2b1:f083:135::a500-2607:f2b1:f083:135::a600\n"}, {"line_no": 39, "char_start": 1110, "char_end": 1138, "line": "    2607:f2b1:f083:139::22a\n"}, {"line_no": 42, "char_start": 1156, "char_end": 1170, "line": "    10.35.0.*\n"}, {"line_no": 43, "char_start": 1156, "char_end": 1174, "line": "    10.36.0.0-255\n"}, {"line_no": 44, "char_start": 1156, "char_end": 1184, "line": "    10.35.0.0/255.255.255.0\n"}], "added": [{"line_no": 32, "char_start": 953, "char_end": 970, "line": "    <IP-Address>\n"}, {"line_no": 33, "char_start": 970, "char_end": 1000, "line": "    <IP-Address>-<IP-Address>\n"}, {"line_no": 34, "char_start": 1000, "char_end": 1020, "line": "    <IP-Address>/24\n"}, {"line_no": 35, "char_start": 1020, "char_end": 1041, "line": "    <IP-Address>/118\n"}, {"line_no": 36, "char_start": 1041, "char_end": 1073, "line": "    <IP-Address>-<IP-Address>00\n"}, {"line_no": 40, "char_start": 1110, "char_end": 1127, "line": "    <IP-Address>\n"}, {"line_no": 45, "char_start": 1156, "char_end": 1175, "line": "    <IP-Address>.*\n"}, {"line_no": 46, "char_start": 1175, "char_end": 1196, "line": "    <IP-Address>-255\n"}, {"line_no": 47, "char_start": 1196, "char_end": 1239, "line": "    <IP-Address>/<IP-Address>.<IP-Address>\n"}]}, "char_changes": {"deleted": [{"char_start": 953, "char_end": 967, "chars": "    10.35.0.0\n"}, {"char_start": 953, "char_end": 979, "chars": "    10.36.0.0-10.36.0.255\n"}, {"char_start": 953, "char_end": 970, "chars": "    10.37.0.0/24\n"}, {"char_start": 953, "char_end": 986, "chars": "    2607:f2b1:f083:135::5500/118\n"}, {"char_start": 953, "char_end": 1007, "chars": "    2607:f2b1:f083:135::a500-2607:f2b1:f083:135::a600\n"}, {"char_start": 1110, "char_end": 1138, "chars": "    2607:f2b1:f083:139::22a\n"}, {"char_start": 1156, "char_end": 1170, "chars": "    10.35.0.*\n"}, {"char_start": 1156, "char_end": 1174, "chars": "    10.36.0.0-255\n"}, {"char_start": 1156, "char_end": 1184, "chars": "    10.35.0.0/255.255.255.0\n"}], "added": [{"char_start": 953, "char_end": 970, "chars": "    <IP-Address>\n"}, {"char_start": 970, "char_end": 1000, "chars": "    <IP-Address>-<IP-Address>\n"}, {"char_start": 1000, "char_end": 1020, "chars": "    <IP-Address>/24\n"}, {"char_start": 1020, "char_end": 1041, "chars": "    <IP-Address>/118\n"}, {"char_start": 1041, "char_end": 1073, "chars": "    <IP-Address>-<IP-Address>00\n"}, {"char_start": 1110, "char_end": 1127, "chars": "    <IP-Address>\n"}, {"char_start": 1156, "char_end": 1175, "chars": "    <IP-Address>.*\n"}, {"char_start": 1175, "char_end": 1196, "chars": "    <IP-Address>-255\n"}, {"char_start": 1196, "char_end": 1239, "chars": "    <IP-Address>/<IP-Address>.<IP-Address>\n"}]}}
{"func_name": 12161, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# https://docs.microsoft.com/en-us/powershell/module/dnsserver/add-dnsserverconditionalforwarderzone?view=winserver2012r2-ps\nWrite-Output '================================================================'\nWrite-Output ' Get environmentName, application variables from aws meta-data'\nWrite-Output '================================================================'\n\n# Get the instance id from ec2 meta data\n$instanceid = Invoke-RestMethod \"http://169.254.169.254/latest/meta-data/instance-id\"\n\n# Get the environment name and application from this instance's environment-name and application tag values\n$environmentNameTag = Get-EC2Tag -Filter @(\n        @{\n            name=\"resource-id\"\n            values=\"$instanceid\"\n        }\n        @{\n            name=\"key\"\n            values=\"environment-name\"\n        }\n    )\n$EnvironmentName = $environmentNameTag.Value\nWrite-Output \"EnvironmentName: $EnvironmentName\"\n\n$environmentTag = Get-EC2Tag -Filter @(\n        @{\n            name=\"resource-id\"\n            values=\"$instanceid\"\n        }\n        @{\n            name=\"key\"\n            values=\"environment\"\n        }\n    )\n$Environment = $environmentTag.Value\nWrite-Output \"Environment: $Environment\"\n\nWrite-Output '================================================================'\nWrite-Output ' Get DNS Server 1st IP for ActiveDirectory'\nWrite-Output '================================================================'\n$Directory = Get-DsDirectory\n$Directory\n\n$DNSIPAddrs = $Directory.DnsIpAddrs\nWrite-Output \"DNSIPAddrs: $DNSIPAddrs\"\n\n$DNSIPAddr1 = $DNSIPAddrs[0]\nWrite-Output \"DNSIPAddr1: $DNSIPAddr1\"\n\n$ADDNSServerIP  = $DNSIPAddr1 #\"10.162.35.251\"\n\nWrite-Output '================================================================'", "func_src_after": "# https://docs.microsoft.com/en-us/powershell/module/dnsserver/add-dnsserverconditionalforwarderzone?view=winserver2012r2-ps\nWrite-Output '================================================================'\nWrite-Output ' Get environmentName, application variables from aws meta-data'\nWrite-Output '================================================================'\n\n# Get the instance id from ec2 meta data\n$instanceid = Invoke-RestMethod \"http://<IP-Address>/latest/meta-data/instance-id\"\n\n# Get the environment name and application from this instance's environment-name and application tag values\n$environmentNameTag = Get-EC2Tag -Filter @(\n        @{\n            name=\"resource-id\"\n            values=\"$instanceid\"\n        }\n        @{\n            name=\"key\"\n            values=\"environment-name\"\n        }\n    )\n$EnvironmentName = $environmentNameTag.Value\nWrite-Output \"EnvironmentName: $EnvironmentName\"\n\n$environmentTag = Get-EC2Tag -Filter @(\n        @{\n            name=\"resource-id\"\n            values=\"$instanceid\"\n        }\n        @{\n            name=\"key\"\n            values=\"environment\"\n        }\n    )\n$Environment = $environmentTag.Value\nWrite-Output \"Environment: $Environment\"\n\nWrite-Output '================================================================'\nWrite-Output ' Get DNS Server 1st IP for ActiveDirectory'\nWrite-Output '================================================================'\n$Directory = Get-DsDirectory\n$Directory\n\n$DNSIPAddrs = $Directory.DnsIpAddrs\nWrite-Output \"DNSIPAddrs: $DNSIPAddrs\"\n\n$DNSIPAddr1 = $DNSIPAddrs[0]\nWrite-Output \"DNSIPAddr1: $DNSIPAddr1\"\n\n$ADDNSServerIP  = $DNSIPAddr1 #\"<IP-Address>\"\n\nWrite-Output '================================================================'", "line_changes": {"deleted": [{"line_no": 7, "char_start": 405, "char_end": 491, "line": "$instanceid = Invoke-RestMethod \"http://169.254.169.254/latest/meta-data/instance-id\"\n"}, {"line_no": 49, "char_start": 1600, "char_end": 1647, "line": "$ADDNSServerIP  = $DNSIPAddr1 #\"10.162.35.251\"\n"}], "added": [{"line_no": 8, "char_start": 405, "char_end": 488, "line": "$instanceid = Invoke-RestMethod \"http://<IP-Address>/latest/meta-data/instance-id\"\n"}, {"line_no": 50, "char_start": 1600, "char_end": 1646, "line": "$ADDNSServerIP  = $DNSIPAddr1 #\"<IP-Address>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 405, "char_end": 491, "chars": "$instanceid = Invoke-RestMethod \"http://169.254.169.254/latest/meta-data/instance-id\"\n"}, {"char_start": 1600, "char_end": 1647, "chars": "$ADDNSServerIP  = $DNSIPAddr1 #\"10.162.35.251\"\n"}], "added": [{"char_start": 405, "char_end": 488, "chars": "$instanceid = Invoke-RestMethod \"http://<IP-Address>/latest/meta-data/instance-id\"\n"}, {"char_start": 1600, "char_end": 1646, "chars": "$ADDNSServerIP  = $DNSIPAddr1 #\"<IP-Address>\"\n"}]}}
{"func_name": 12176, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "*\n*> \\par References:\n*  ================\n*>\n*> \\verbatim\n*>\n*> [1] A. A. Anda and H. Park: Fast plane rotations with dynamic scaling.\n*>     SIAM J. matrix Anal. Appl., Vol. 15 (1994), pp. 162-174.\n*> [2] P. P. M. De Rijk: A one-sided Jacobi algorithm for computing the\n*>     singular value decomposition on a vector computer.\n*>     SIAM J. Sci. Stat. Comp., Vol. 10 (1998), pp. 359-371.\n*> [3] J. Demmel and K. Veselic: Jacobi method is more accurate than QR.\n*> [4] Z. Drmac: Implementation of Jacobi rotations for accurate singular\n*>     value computation in floating point arithmetic.\n*>     SIAM J. Sci. Comp., Vol. 18 (1997), pp. 1200-1222.\n*> [5] Z. Drmac and K. Veselic: New fast and accurate Jacobi SVD algorithm I.\n*>     SIAM J. Matrix Anal. Appl. Vol. 35, No. 2 (2008), pp. 1322-1342.\n*>     LAPACK Working note 169.\n*> [6] Z. Drmac and K. Veselic: New fast and accurate Jacobi SVD algorithm II.\n*>     SIAM J. Matrix Anal. Appl. Vol. 35, No. 2 (2008), pp. 1343-1362.\n*>     LAPACK Working note 170.\n*> [7] Z. Drmac: SIGMA - mathematical software library for accurate SVD, PSV,\n*>     QSVD, (H,K)-SVD computations.\n*>     Department of Mathematics, University of Zagreb, 2008.\n*> \\endverbatim\n*\n*>  \\par Bugs, examples and comments:\n*   =================================\n*>\n*> \\verbatim\n*>  ===========================\n*>  Please report all bugs and send interesting test examples and comments to\n*>  drmac@math.hr. Thank you.\n*> \\endverbatim\n*>\n*  =====================================================================\n      SUBROUTINE DGESVJ( JOBA, JOBU, JOBV, M, N, A, LDA, SVA, MV, V,\n     $                   LDV, WORK, LWORK, INFO )\n*\n*  -- LAPACK computational routine (version 3.7.0) --\n*  -- LAPACK is a software package provided by Univ. of Tennessee,    --\n*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--\n*     December 2016\n*\n*     .. Scalar Arguments ..\n      INTEGER            INFO, LDA, LDV, LWORK, M, MV, N\n      CHARACTER*1        JOBA, JOBU, JOBV\n*     ..\n*     .. Array Arguments ..\n      DOUBLE PRECISION   A( LDA, * ), SVA( N ), V( LDV, * ),", "func_src_after": "*\n*> \\par References:\n*  ================\n*>\n*> \\verbatim\n*>\n*> [1] A. A. Anda and H. Park: Fast plane rotations with dynamic scaling.\n*>     SIAM J. matrix Anal. Appl., Vol. 15 (1994), pp. 162-174.\n*> [2] P. P. M. De Rijk: A one-sided Jacobi algorithm for computing the\n*>     singular value decomposition on a vector computer.\n*>     SIAM J. Sci. Stat. Comp., Vol. 10 (1998), pp. 359-371.\n*> [3] J. Demmel and K. Veselic: Jacobi method is more accurate than QR.\n*> [4] Z. Drmac: Implementation of Jacobi rotations for accurate singular\n*>     value computation in floating point arithmetic.\n*>     SIAM J. Sci. Comp., Vol. 18 (1997), pp. 1200-1222.\n*> [5] Z. Drmac and K. Veselic: New fast and accurate Jacobi SVD algorithm I.\n*>     SIAM J. Matrix Anal. Appl. Vol. 35, No. 2 (2008), pp. 1322-1342.\n*>     LAPACK Working note 169.\n*> [6] Z. Drmac and K. Veselic: New fast and accurate Jacobi SVD algorithm II.\n*>     SIAM J. Matrix Anal. Appl. Vol. 35, No. 2 (2008), pp. 1343-1362.\n*>     LAPACK Working note 170.\n*> [7] Z. Drmac: SIGMA - mathematical software library for accurate SVD, PSV,\n*>     QSVD, (H,K)-SVD computations.\n*>     Department of Mathematics, University of Zagreb, 2008.\n*> \\endverbatim\n*\n*>  \\par Bugs, examples and comments:\n*   =================================\n*>\n*> \\verbatim\n*>  ===========================\n*>  Please report all bugs and send interesting test examples and comments to\n*>  <EMAIL>. Thank you.\n*> \\endverbatim\n*>\n*  =====================================================================\n      SUBROUTINE DGESVJ( JOBA, JOBU, JOBV, M, N, A, LDA, SVA, MV, V,\n     $                   LDV, WORK, LWORK, INFO )\n*\n*  -- LAPACK computational routine (version 3.7.0) --\n*  -- LAPACK is a software package provided by Univ. of Tennessee,    --\n*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--\n*     December 2016\n*\n*     .. Scalar Arguments ..\n      INTEGER            INFO, LDA, LDV, LWORK, M, MV, N\n      CHARACTER*1        JOBA, JOBU, JOBV\n*     ..\n*     .. Array Arguments ..\n      DOUBLE PRECISION   A( LDA, * ), SVA( N ), V( LDV, * ),", "line_changes": {"deleted": [{"line_no": 33, "char_start": 1413, "char_end": 1443, "line": "*>  drmac@math.hr. Thank you.\n"}], "added": [{"line_no": 34, "char_start": 1413, "char_end": 1437, "line": "*>  <EMAIL>. Thank you.\n"}]}, "char_changes": {"deleted": [{"char_start": 1413, "char_end": 1443, "chars": "*>  drmac@math.hr. Thank you.\n"}], "added": [{"char_start": 1413, "char_end": 1437, "chars": "*>  <EMAIL>. Thank you.\n"}]}}
{"func_name": 12178, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "C***********************************************************************\nC    Module: plt_set.f \nC \nC    Copyright (C) 1996 Harold Youngren, Mark Drela \nC \nC    This library is free software; you can redistribute it and/or\nC    modify it under the terms of the GNU Library General Public\nC    License as published by the Free Software Foundation; either\nC    version 2 of the License, or (at your option) any later version.\nC\nC    This library is distributed in the hope that it will be useful,\nC    but WITHOUT ANY WARRANTY; without even the implied warranty of\nC    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nC    Library General Public License for more details.\nC\nC    You should have received a copy of the GNU Library General Public\nC    License along with this library; if not, write to the Free\nC    Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\nC \nC    Report problems to:    guppy@maine.com \nC                        or drela@mit.edu  \nC***********************************************************************\nC\nC***********************************************************************\nC --- Xplot11 internal processing routines \nC\nC     Version 4.46 11/28/01\nC\nC     Note:  These are plot-handling routines intended only\nC            for internal use, including handling the replot buffer,\nC            internal plot calls and clipping and zooming (the \"set_xxx\" \nC            routines).  Not intended for general consumption.\nC***********************************************************************\n\n      subroutine set_pen(ipen)\nC...Sets current pen width in pixels\n      include 'pltlib.inc'\n      LST_PEN = ipen\n      if(LGW_GEN) call gw_pen(ipen)\n      if(LPS_GEN) call ps_pen(ipen)\n      return\n      end\n\n\n      subroutine set_pat(ipat)\nC...Sets current line pattern as integer bit pattern\n      include 'pltlib.inc'\n      LST_PAT = ipat\n      if(LGW_GEN) call gw_linepattern(ipat)\n      if(LPS_GEN) call ps_linepattern(ipat)", "func_src_after": "C***********************************************************************\nC    Module: plt_set.f \nC \nC    Copyright (C) 1996 Harold Youngren, Mark Drela \nC \nC    This library is free software; you can redistribute it and/or\nC    modify it under the terms of the GNU Library General Public\nC    License as published by the Free Software Foundation; either\nC    version 2 of the License, or (at your option) any later version.\nC\nC    This library is distributed in the hope that it will be useful,\nC    but WITHOUT ANY WARRANTY; without even the implied warranty of\nC    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nC    Library General Public License for more details.\nC\nC    You should have received a copy of the GNU Library General Public\nC    License along with this library; if not, write to the Free\nC    Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\nC \nC    Report problems to:    <EMAIL> \nC                        or <EMAIL>  \nC***********************************************************************\nC\nC***********************************************************************\nC --- Xplot11 internal processing routines \nC\nC     Version 4.46 11/28/01\nC\nC     Note:  These are plot-handling routines intended only\nC            for internal use, including handling the replot buffer,\nC            internal plot calls and clipping and zooming (the \"set_xxx\" \nC            routines).  Not intended for general consumption.\nC***********************************************************************\n\n      subroutine set_pen(ipen)\nC...Sets current pen width in pixels\n      include 'pltlib.inc'\n      LST_PEN = ipen\n      if(LGW_GEN) call gw_pen(ipen)\n      if(LPS_GEN) call ps_pen(ipen)\n      return\n      end\n\n\n      subroutine set_pat(ipat)\nC...Sets current line pattern as integer bit pattern\n      include 'pltlib.inc'\n      LST_PAT = ipat\n      if(LGW_GEN) call gw_linepattern(ipat)\n      if(LPS_GEN) call ps_linepattern(ipat)", "line_changes": {"deleted": [{"line_no": 20, "char_start": 900, "char_end": 945, "line": "C    Report problems to:    guppy@maine.com \n"}, {"line_no": 22, "char_start": 937, "char_end": 981, "line": "C                        or drela@mit.edu  \n"}], "added": [{"line_no": 21, "char_start": 900, "char_end": 937, "line": "C    Report problems to:    <EMAIL> \n"}, {"line_no": 23, "char_start": 937, "char_end": 975, "line": "C                        or <EMAIL>  \n"}]}, "char_changes": {"deleted": [{"char_start": 900, "char_end": 945, "chars": "C    Report problems to:    guppy@maine.com \n"}, {"char_start": 937, "char_end": 981, "chars": "C                        or drela@mit.edu  \n"}], "added": [{"char_start": 900, "char_end": 937, "chars": "C    Report problems to:    <EMAIL> \n"}, {"char_start": 937, "char_end": 975, "chars": "C                        or <EMAIL>  \n"}]}}
{"func_name": 12181, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "   END IF\n   IF (PRESENT(RCNTRL_U)) THEN\n     WHERE(RCNTRL_U(:) > 0) RCNTRL(:) = RCNTRL_U(:)\n   END IF\n\n   CALL cbmz_sorgam_Rosenbrock(VAR, FIX, RCONST, TIN,TOUT,   &\n         ATOL,RTOL,               &\n         RCNTRL,ICNTRL,RSTATUS,ISTATUS,IERR)\n\n   STEPMIN = RCNTRL(ihexit)\n   ! if optional parameters are given for output they to return information\n   IF (PRESENT(ISTATUS_U)) ISTATUS_U(:) = ISTATUS(:)\n   IF (PRESENT(RSTATUS_U)) RSTATUS_U(:) = RSTATUS(:)\n   IF (PRESENT(IERR_U))    IERR_U       = IERR\n\nEND SUBROUTINE  cbmz_sorgam_INTEGRATE\n\n!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSUBROUTINE  cbmz_sorgam_Rosenbrock(Y, FIX, RCONST, Tstart,Tend, &\n           AbsTol,RelTol,            &\n           RCNTRL,ICNTRL,RSTATUS,ISTATUS,IERR)\n!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n!\n!    Solves the system y'=F(t,y) using a Rosenbrock method defined by:\n!\n!     G = 1/(H*gamma(1)) - Jac(t0,Y0)\n!     T_i = t0 + Alpha(i)*H\n!     Y_i = Y0 + \\sum_{j=1}^{i-1} A(i,j)*K_j\n!     G * K_i = Fun( T_i, Y_i ) + \\sum_{j=1}^S C(i,j)/H * K_j +\n!         gamma(i)*dF/dT(t0, Y0)\n!     Y1 = Y0 + \\sum_{j=1}^S M(j)*K_j\n!\n!    For details on Rosenbrock methods and their implementation consult:\n!      E. Hairer and G. Wanner\n!      \"Solving ODEs II. Stiff and differential-algebraic problems\".\n!      Springer series in computational mathematics, Springer-Verlag, 1996.\n!    The codes contained in the book inspired this implementation.\n!\n!    (C)  Adrian Sandu, August 2004\n!    Virginia Polytechnic Institute and State University\n!    Contact: sandu@cs.vt.edu\n!    This implementation is part of KPP - the Kinetic PreProcessor\n!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n!\n!~~~>   INPUT ARGUMENTS:\n!\n!-     Y(NVAR)    = vector of initial conditions (at T=Tstart)\n!-    [Tstart,Tend]  = time range of integration\n!     (if Tstart>Tend the integration is performed backwards in time)\n!-    RelTol, AbsTol = user precribed accuracy", "func_src_after": "   END IF\n   IF (PRESENT(RCNTRL_U)) THEN\n     WHERE(RCNTRL_U(:) > 0) RCNTRL(:) = RCNTRL_U(:)\n   END IF\n\n   CALL cbmz_sorgam_Rosenbrock(VAR, FIX, RCONST, TIN,TOUT,   &\n         ATOL,RTOL,               &\n         RCNTRL,ICNTRL,RSTATUS,ISTATUS,IERR)\n\n   STEPMIN = RCNTRL(ihexit)\n   ! if optional parameters are given for output they to return information\n   IF (PRESENT(ISTATUS_U)) ISTATUS_U(:) = ISTATUS(:)\n   IF (PRESENT(RSTATUS_U)) RSTATUS_U(:) = RSTATUS(:)\n   IF (PRESENT(IERR_U))    IERR_U       = IERR\n\nEND SUBROUTINE  cbmz_sorgam_INTEGRATE\n\n!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSUBROUTINE  cbmz_sorgam_Rosenbrock(Y, FIX, RCONST, Tstart,Tend, &\n           AbsTol,RelTol,            &\n           RCNTRL,ICNTRL,RSTATUS,ISTATUS,IERR)\n!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n!\n!    Solves the system y'=F(t,y) using a Rosenbrock method defined by:\n!\n!     G = 1/(H*gamma(1)) - Jac(t0,Y0)\n!     T_i = t0 + Alpha(i)*H\n!     Y_i = Y0 + \\sum_{j=1}^{i-1} A(i,j)*K_j\n!     G * K_i = Fun( T_i, Y_i ) + \\sum_{j=1}^S C(i,j)/H * K_j +\n!         gamma(i)*dF/dT(t0, Y0)\n!     Y1 = Y0 + \\sum_{j=1}^S M(j)*K_j\n!\n!    For details on Rosenbrock methods and their implementation consult:\n!      E. Hairer and G. Wanner\n!      \"Solving ODEs II. Stiff and differential-algebraic problems\".\n!      Springer series in computational mathematics, Springer-Verlag, 1996.\n!    The codes contained in the book inspired this implementation.\n!\n!    (C)  Adrian Sandu, August 2004\n!    Virginia Polytechnic Institute and State University\n!    Contact: <EMAIL>\n!    This implementation is part of KPP - the Kinetic PreProcessor\n!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n!\n!~~~>   INPUT ARGUMENTS:\n!\n!-     Y(NVAR)    = vector of initial conditions (at T=Tstart)\n!-    [Tstart,Tend]  = time range of integration\n!     (if Tstart>Tend the integration is performed backwards in time)\n!-    RelTol, AbsTol = user precribed accuracy", "line_changes": {"deleted": [{"line_no": 41, "char_start": 1576, "char_end": 1606, "line": "!    Contact: sandu@cs.vt.edu\n"}], "added": [{"line_no": 42, "char_start": 1576, "char_end": 1598, "line": "!    Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 1576, "char_end": 1606, "chars": "!    Contact: sandu@cs.vt.edu\n"}], "added": [{"char_start": 1576, "char_end": 1598, "chars": "!    Contact: <EMAIL>\n"}]}}
{"func_name": 12182, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "! ###############################################################################################################################\n! Begin MIT license text.                                                                                    \n! _______________________________________________________________________________________________________\n                                                                                                         \n! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n                                                                                                         \n! Permission is hereby granted, free of charge, to any person obtaining a copy of this software and      \n! associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n! without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n! copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to   \n! the following conditions:                                                                              \n                                                                                                         \n! The above copyright notice and this permission notice shall be included in all copies or substantial   \n! portions of the Software and documentation.                                                                              \n                                                                                                         \n! THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS                                \n! OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                            \n! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                            \n! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                 \n! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                          \n! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                              \n! THE SOFTWARE.                                                                                          \n! _______________________________________________________________________________________________________\n                                                                                                        \n! End MIT license text.                                                                                      \n\n   MODULE OFP2_Interface\n\n   INTERFACE\n\n      SUBROUTINE OFP2 ( JVEC, WHAT, SC_OUT_REQ, ZERO_GEN_STIFF, FEMAP_SET_ID, ITG, OT4_GROW )\n\n\n      USE PENTIUM_II_KIND, ONLY       :  BYTE, LONG, DOUBLE\n      USE IOUNT1, ONLY                :  WRT_ERR, WRT_LOG, ERR, F04, F06, OT4\n\n      USE SCONTR, ONLY                :  BLNK_SUB_NAM, FATAL_ERR, GROUT_SPCF_BIT, GROUT_MPCF_BIT, GROUT_GPFO_BIT, IBIT, INT_SC_NUM,&\n                                         MELGP, MOGEL, NGRID, NDOFF, NDOFG, NDOFM, NDOFN, NDOFS, NDOFSA, NTERM_GMN,                &\n                                         NTERM_HMN, NTERM_KFS, NTERM_KFSD, NTERM_LMN, NTERM_MFS, NTERM_QS, SOL_NAME\n\n      USE TIMDAT, ONLY                :  TSEC\n      USE SUBR_BEGEND_LEVELS, ONLY    :  OFP2_BEGEND\n      USE CONSTANTS_1, ONLY           :  ZERO, ONE\n      USE DOF_TABLES, ONLY            :  TDOF, TDOF_ROW_START, TDOFI\n      USE EIGEN_MATRICES_1, ONLY      :  EIGEN_VAL, GEN_MASS, MEFFMASS, MPFACTOR_N6\n      USE MODEL_STUF, ONLY            :  ANY_SPCF_OUTPUT, ANY_MPCF_OUTPUT, GRID, GRID_ID, GROUT, MEFFMASS_CALC, MPFACTOR_CALC\n      USE PARAMS, ONLY                :  AUTOSPC_SPCF, EPSIL, MEFMCORD, OTMSKIP, POST\n\n      USE NONLINEAR_PARAMS, ONLY      :  LOAD_ISTEP\n      USE SPARSE_MATRICES, ONLY       :  I_GMN  , J_GMN  , GMN    , I_GMNt  , J_GMNt , GMNt   , I_HMN, J_HMN, HMN,                 &", "func_src_after": "! ###############################################################################################################################\n! Begin MIT license text.                                                                                    \n! _______________________________________________________________________________________________________\n                                                                                                         \n! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n                                                                                                         \n! Permission is hereby granted, free of charge, to any person obtaining a copy of this software and      \n! associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n! without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n! copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to   \n! the following conditions:                                                                              \n                                                                                                         \n! The above copyright notice and this permission notice shall be included in all copies or substantial   \n! portions of the Software and documentation.                                                                              \n                                                                                                         \n! THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS                                \n! OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                            \n! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                            \n! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                 \n! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                          \n! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                              \n! THE SOFTWARE.                                                                                          \n! _______________________________________________________________________________________________________\n                                                                                                        \n! End MIT license text.                                                                                      \n\n   MODULE OFP2_Interface\n\n   INTERFACE\n\n      SUBROUTINE OFP2 ( JVEC, WHAT, SC_OUT_REQ, ZERO_GEN_STIFF, FEMAP_SET_ID, ITG, OT4_GROW )\n\n\n      USE PENTIUM_II_KIND, ONLY       :  BYTE, LONG, DOUBLE\n      USE IOUNT1, ONLY                :  WRT_ERR, WRT_LOG, ERR, F04, F06, OT4\n\n      USE SCONTR, ONLY                :  BLNK_SUB_NAM, FATAL_ERR, GROUT_SPCF_BIT, GROUT_MPCF_BIT, GROUT_GPFO_BIT, IBIT, INT_SC_NUM,&\n                                         MELGP, MOGEL, NGRID, NDOFF, NDOFG, NDOFM, NDOFN, NDOFS, NDOFSA, NTERM_GMN,                &\n                                         NTERM_HMN, NTERM_KFS, NTERM_KFSD, NTERM_LMN, NTERM_MFS, NTERM_QS, SOL_NAME\n\n      USE TIMDAT, ONLY                :  TSEC\n      USE SUBR_BEGEND_LEVELS, ONLY    :  OFP2_BEGEND\n      USE CONSTANTS_1, ONLY           :  ZERO, ONE\n      USE DOF_TABLES, ONLY            :  TDOF, TDOF_ROW_START, TDOFI\n      USE EIGEN_MATRICES_1, ONLY      :  EIGEN_VAL, GEN_MASS, MEFFMASS, MPFACTOR_N6\n      USE MODEL_STUF, ONLY            :  ANY_SPCF_OUTPUT, ANY_MPCF_OUTPUT, GRID, GRID_ID, GROUT, MEFFMASS_CALC, MPFACTOR_CALC\n      USE PARAMS, ONLY                :  AUTOSPC_SPCF, EPSIL, MEFMCORD, OTMSKIP, POST\n\n      USE NONLINEAR_PARAMS, ONLY      :  LOAD_ISTEP\n      USE SPARSE_MATRICES, ONLY       :  I_GMN  , J_GMN  , GMN    , I_GMNt  , J_GMNt , GMNt   , I_HMN, J_HMN, HMN,                 &", "line_changes": {"deleted": [{"line_no": 5, "char_start": 452, "char_end": 558, "line": "! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n"}], "added": [{"line_no": 6, "char_start": 452, "char_end": 547, "line": "! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n"}]}, "char_changes": {"deleted": [{"char_start": 452, "char_end": 558, "chars": "! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n"}], "added": [{"char_start": 452, "char_end": 547, "chars": "! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n"}]}}
{"func_name": 12185, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "! ##################################################################################################################################\n! Begin MIT license text.                                                                                    \n! _______________________________________________________________________________________________________\n                                                                                                         \n! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n                                                                                                         \n! Permission is hereby granted, free of charge, to any person obtaining a copy of this software and      \n! associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n! without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n! copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to   \n! the following conditions:                                                                              \n                                                                                                         \n! The above copyright notice and this permission notice shall be included in all copies or substantial   \n! portions of the Software and documentation.                                                                              \n                                                                                                         \n! THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS                                \n! OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                            \n! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                            \n! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                 \n! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                          \n! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                              \n! THE SOFTWARE.                                                                                          \n! _______________________________________________________________________________________________________\n                                                                                                        \n! End MIT license text.                                                                                      \n\n      SUBROUTINE NET_CG_LOADS_LTM\n \n! Merges matrices to get the net CG Loads Transformation Matrix (LTM):\n\n!            CG_LTM   = MCG(-1)*TR6_CG'*| MRRcb  MRN  0RR |     6x(2R+N)\n\n! For a description of Craig-Bamptom analyses, see Appendix D to the MYSTRAN User's Referance Manual\n\n \n      USE PENTIUM_II_KIND, ONLY       :  BYTE, LONG, DOUBLE\n      USE IOUNT1, ONLY                :  WRT_ERR, WRT_LOG, ERR, F04, F06\n      USE SCONTR, ONLY                :  BLNK_SUB_NAM, FATAL_ERR, NDOFR, NTERM_MRRcbn, NTERM_MRN, NTERM_CG_LTM, NUM_CB_DOFS\n      USE TIMDAT, ONLY                :  TSEC\n      USE CONSTANTS_1, ONLY           :  ONE\n      USE PARAMS, ONLY                :  PRTCGLTM, WTMASS\n      USE RIGID_BODY_DISP_MATS, ONLY  :  TR6_CG, TR6_0\n      USE MODEL_STUF, ONLY            :  MCG\n      USE OUTPUT4_MATRICES, ONLY      :  RBM0\n      USE SPARSE_MATRICES, ONLY       :  SYM_MRN   , SYM_MRRcbn, SYM_CG_LTM  \n      USE SPARSE_MATRICES, ONLY       :  I_MRRcbn  , J_MRRcbn  , MRRcbn   ,  I_MRN      , J_MRN      , MRN      ,                  &\n                                         I_CG_LTM  , J_CG_LTM  , CG_LTM   \n\n      USE SCRATCH_MATRICES, ONLY      :  I_CRS1, J_CRS1, CRS1, I_CRS2, J_CRS2, CRS2, I_CCS1, J_CCS1, CCS1\n", "func_src_after": "! ##################################################################################################################################\n! Begin MIT license text.                                                                                    \n! _______________________________________________________________________________________________________\n                                                                                                         \n! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n                                                                                                         \n! Permission is hereby granted, free of charge, to any person obtaining a copy of this software and      \n! associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n! without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n! copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to   \n! the following conditions:                                                                              \n                                                                                                         \n! The above copyright notice and this permission notice shall be included in all copies or substantial   \n! portions of the Software and documentation.                                                                              \n                                                                                                         \n! THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS                                \n! OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                            \n! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                            \n! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                 \n! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                          \n! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                              \n! THE SOFTWARE.                                                                                          \n! _______________________________________________________________________________________________________\n                                                                                                        \n! End MIT license text.                                                                                      \n\n      SUBROUTINE NET_CG_LOADS_LTM\n \n! Merges matrices to get the net CG Loads Transformation Matrix (LTM):\n\n!            CG_LTM   = MCG(-1)*TR6_CG'*| MRRcb  MRN  0RR |     6x(2R+N)\n\n! For a description of Craig-Bamptom analyses, see Appendix D to the MYSTRAN User's Referance Manual\n\n \n      USE PENTIUM_II_KIND, ONLY       :  BYTE, LONG, DOUBLE\n      USE IOUNT1, ONLY                :  WRT_ERR, WRT_LOG, ERR, F04, F06\n      USE SCONTR, ONLY                :  BLNK_SUB_NAM, FATAL_ERR, NDOFR, NTERM_MRRcbn, NTERM_MRN, NTERM_CG_LTM, NUM_CB_DOFS\n      USE TIMDAT, ONLY                :  TSEC\n      USE CONSTANTS_1, ONLY           :  ONE\n      USE PARAMS, ONLY                :  PRTCGLTM, WTMASS\n      USE RIGID_BODY_DISP_MATS, ONLY  :  TR6_CG, TR6_0\n      USE MODEL_STUF, ONLY            :  MCG\n      USE OUTPUT4_MATRICES, ONLY      :  RBM0\n      USE SPARSE_MATRICES, ONLY       :  SYM_MRN   , SYM_MRRcbn, SYM_CG_LTM  \n      USE SPARSE_MATRICES, ONLY       :  I_MRRcbn  , J_MRRcbn  , MRRcbn   ,  I_MRN      , J_MRN      , MRN      ,                  &\n                                         I_CG_LTM  , J_CG_LTM  , CG_LTM   \n\n      USE SCRATCH_MATRICES, ONLY      :  I_CRS1, J_CRS1, CRS1, I_CRS2, J_CRS2, CRS2, I_CCS1, J_CCS1, CCS1\n", "line_changes": {"deleted": [{"line_no": 5, "char_start": 455, "char_end": 561, "line": "! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n"}], "added": [{"line_no": 6, "char_start": 455, "char_end": 550, "line": "! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n"}]}, "char_changes": {"deleted": [{"char_start": 455, "char_end": 561, "chars": "! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n"}], "added": [{"char_start": 455, "char_end": 550, "chars": "! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n"}]}}
{"func_name": 12217, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "subroutine rdiwe(lunmd     ,lundia    ,error     ,nrrec     ,mdfrec    , &\n               & dt        ,itiwei    ,tinciw    ,kmxt      ,kmxdt     , &\n               & nfreqs    ,npiwe     ,filiwe    ,gdp       )\n!----- GPL ---------------------------------------------------------------------\n!                                                                               \n!  Copyright (C)  Stichting Deltares, 2011-2016.                                \n!                                                                               \n!  This program is free software: you can redistribute it and/or modify         \n!  it under the terms of the GNU General Public License as published by         \n!  the Free Software Foundation version 3.                                      \n!                                                                               \n!  This program is distributed in the hope that it will be useful,              \n!  but WITHOUT ANY WARRANTY; without even the implied warranty of               \n!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                \n!  GNU General Public License for more details.                                 \n!                                                                               \n!  You should have received a copy of the GNU General Public License            \n!  along with this program.  If not, see <http://www.gnu.org/licenses/>.        \n!                                                                               \n!  contact: delft3d.support@deltares.nl                                         \n!  Stichting Deltares                                                           \n!  P.O. Box 177                                                                 \n!  2600 MH Delft, The Netherlands                                               \n!                                                                               \n!  All indications and logos of, and references to, \"Delft3D\" and \"Deltares\"    \n!  are registered trademarks of Stichting Deltares, and remain the property of  \n!  Stichting Deltares. All rights reserved.                                     \n!                                                                               \n!-------------------------------------------------------------------------------\n!  $Id: rdiwe.f90 5717 2016-01-12 11:35:24Z mourits $\n!  $HeadURL: https://svn.oss.deltares.nl/repos/delft3d/tags/6686/src/engines_gpl/flow2d3d/packages/io/src/input/rdiwe.f90 $\n!!--description-----------------------------------------------------------------\n!\n!    Function: - Reads the information of the attribute file\n!                dimension for Internal Wave Energy\n! Method used:\n!\n!!--pseudo code and references--------------------------------------------------\n! NONE\n!!--declarations----------------------------------------------------------------\n    use precision\n    use dfparall\n    use globaldata\n    !\n    implicit none\n    !\n    type(globdat),target :: gdp\n    !\n    ! The following list of pointer parameters is used to point inside the gdp structure\n    !", "func_src_after": "subroutine rdiwe(lunmd     ,lundia    ,error     ,nrrec     ,mdfrec    , &\n               & dt        ,itiwei    ,tinciw    ,kmxt      ,kmxdt     , &\n               & nfreqs    ,npiwe     ,filiwe    ,gdp       )\n!----- GPL ---------------------------------------------------------------------\n!                                                                               \n!  Copyright (C)  Stichting Deltares, 2011-2016.                                \n!                                                                               \n!  This program is free software: you can redistribute it and/or modify         \n!  it under the terms of the GNU General Public License as published by         \n!  the Free Software Foundation version 3.                                      \n!                                                                               \n!  This program is distributed in the hope that it will be useful,              \n!  but WITHOUT ANY WARRANTY; without even the implied warranty of               \n!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                \n!  GNU General Public License for more details.                                 \n!                                                                               \n!  You should have received a copy of the GNU General Public License            \n!  along with this program.  If not, see <http://www.gnu.org/licenses/>.        \n!                                                                               \n!  contact: <EMAIL>                                         \n!  Stichting Deltares                                                           \n!  P.O. Box 177                                                                 \n!  2600 MH Delft, The Netherlands                                               \n!                                                                               \n!  All indications and logos of, and references to, \"Delft3D\" and \"Deltares\"    \n!  are registered trademarks of Stichting Deltares, and remain the property of  \n!  Stichting Deltares. All rights reserved.                                     \n!                                                                               \n!-------------------------------------------------------------------------------\n!  $Id: rdiwe.f90 5717 2016-01-12 11:35:24Z mourits $\n!  $HeadURL: https://svn.oss.deltares.nl/repos/delft3d/tags/6686/src/engines_gpl/flow2d3d/packages/io/src/input/rdiwe.f90 $\n!!--description-----------------------------------------------------------------\n!\n!    Function: - Reads the information of the attribute file\n!                dimension for Internal Wave Energy\n! Method used:\n!\n!!--pseudo code and references--------------------------------------------------\n! NONE\n!!--declarations----------------------------------------------------------------\n    use precision\n    use dfparall\n    use globaldata\n    !\n    implicit none\n    !\n    type(globdat),target :: gdp\n    !\n    ! The following list of pointer parameters is used to point inside the gdp structure\n    !", "line_changes": {"deleted": [{"line_no": 20, "char_start": 1508, "char_end": 1589, "line": "!  contact: delft3d.support@deltares.nl                                         \n"}], "added": [{"line_no": 21, "char_start": 1508, "char_end": 1569, "line": "!  contact: <EMAIL>                                         \n"}]}, "char_changes": {"deleted": [{"char_start": 1508, "char_end": 1589, "chars": "!  contact: delft3d.support@deltares.nl                                         \n"}], "added": [{"char_start": 1508, "char_end": 1569, "chars": "!  contact: <EMAIL>                                         \n"}]}}
{"func_name": 12228, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "! HJ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n! HJ X\n! HJ X   libAtoms+QUIP: atomistic simulation library\n! HJ X\n! HJ X   Portions of this code were written by\n! HJ X     Albert Bartok-Partay, Silvia Cereda, Gabor Csanyi, James Kermode,\n! HJ X     Ivan Solt, Wojciech Szlachta, Csilla Varnai, Steven Winfield.\n! HJ X\n! HJ X   Copyright 2006-2010.\n! HJ X\n! HJ X   These portions of the source code are released under the GNU General\n! HJ X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html\n! HJ X\n! HJ X   If you would like to license the source code under different terms,\n! HJ X   please contact Gabor Csanyi, gabor@csanyi.net\n! HJ X\n! HJ X   Portions of this code were written by Noam Bernstein as part of\n! HJ X   his employment for the U.S. Government, and are not subject\n! HJ X   to copyright in the USA.\n! HJ X\n! HJ X\n! HJ X   When using this software, please cite the following reference:\n! HJ X\n! HJ X   http://www.libatoms.org\n! HJ X\n! HJ X  Additional contributions by\n! HJ X    Alessio Comisso, Chiara Gattinoni, and Gianpietro Moras\n! HJ X\n! HJ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n!XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n!X\n!X     Learn-on-the-fly (LOTF) hybrid molecular dynamics code\n!X\n!X     When using this software, the following should be referenced:\n!X\n!X     Gabor Csanyi, Tristan Albaret, Mike C. Payne and Alessandro De Vita\n!X     \"Learn on the fly\": a hybrid classical and quantum-mechanical\n!X         molecular dynamics simulation\n!X     Physical Review Letters 93 p. 175503 (2004) >>PDF [626 KB]\n!X\n!X     Gabor Csanyi, T. Albaret, G. Moras, M. C. Payne, A. De Vita\n!X     Multiscale hybrid simulation methods for material systems\n!X     J. Phys. Cond. Mat. 17 R691-R703 Topical Review (2005)\n!X\n!X\n!XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n!XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nprogram bulktest", "func_src_after": "! HJ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n! HJ X\n! HJ X   libAtoms+QUIP: atomistic simulation library\n! HJ X\n! HJ X   Portions of this code were written by\n! HJ X     Albert Bartok-Partay, Silvia Cereda, Gabor Csanyi, James Kermode,\n! HJ X     Ivan Solt, Wojciech Szlachta, Csilla Varnai, Steven Winfield.\n! HJ X\n! HJ X   Copyright 2006-2010.\n! HJ X\n! HJ X   These portions of the source code are released under the GNU General\n! HJ X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html\n! HJ X\n! HJ X   If you would like to license the source code under different terms,\n! HJ X   please contact Gabor Csanyi, <EMAIL>\n! HJ X\n! HJ X   Portions of this code were written by Noam Bernstein as part of\n! HJ X   his employment for the U.S. Government, and are not subject\n! HJ X   to copyright in the USA.\n! HJ X\n! HJ X\n! HJ X   When using this software, please cite the following reference:\n! HJ X\n! HJ X   http://www.libatoms.org\n! HJ X\n! HJ X  Additional contributions by\n! HJ X    Alessio Comisso, Chiara Gattinoni, and Gianpietro Moras\n! HJ X\n! HJ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n!XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n!X\n!X     Learn-on-the-fly (LOTF) hybrid molecular dynamics code\n!X\n!X     When using this software, the following should be referenced:\n!X\n!X     Gabor Csanyi, Tristan Albaret, Mike C. Payne and Alessandro De Vita\n!X     \"Learn on the fly\": a hybrid classical and quantum-mechanical\n!X         molecular dynamics simulation\n!X     Physical Review Letters 93 p. 175503 (2004) >>PDF [626 KB]\n!X\n!X     Gabor Csanyi, T. Albaret, G. Moras, M. C. Payne, A. De Vita\n!X     Multiscale hybrid simulation methods for material systems\n!X     J. Phys. Cond. Mat. 17 R691-R703 Topical Review (2005)\n!X\n!X\n!XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n!XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nprogram bulktest", "line_changes": {"deleted": [{"line_no": 15, "char_start": 625, "char_end": 680, "line": "! HJ X   please contact Gabor Csanyi, gabor@csanyi.net\n"}], "added": [{"line_no": 16, "char_start": 625, "char_end": 671, "line": "! HJ X   please contact Gabor Csanyi, <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 625, "char_end": 680, "chars": "! HJ X   please contact Gabor Csanyi, gabor@csanyi.net\n"}], "added": [{"char_start": 625, "char_end": 671, "chars": "! HJ X   please contact Gabor Csanyi, <EMAIL>\n"}]}}
{"func_name": 12245, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "! ##################################################################################################################################\n! Begin MIT license text.                                                                                    \n! _______________________________________________________________________________________________________\n                                                                                                         \n! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n                                                                                                         \n! Permission is hereby granted, free of charge, to any person obtaining a copy of this software and      \n! associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n! without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n! copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to   \n! the following conditions:                                                                              \n                                                                                                         \n! The above copyright notice and this permission notice shall be included in all copies or substantial   \n! portions of the Software and documentation.                                                                              \n                                                                                                         \n! THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS                                \n! OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                            \n! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                            \n! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                 \n! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                          \n! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                              \n! THE SOFTWARE.                                                                                          \n! _______________________________________________________________________________________________________\n                                                                                                      \n! End MIT license text.                                                                                      \n \n      SUBROUTINE ELMGM1 ( INT_ELEM_ID, WRITE_WARN )\n \n! Calculates and checks some elem geometry for ROD, BAR, BEAM, triangles and provides a transformation matrix (TE) to transform the\n! element stiffness matrix in the element system to the basic coordinate system. Calculates grid point coords in local coord system.\n  \n      USE PENTIUM_II_KIND, ONLY       :  BYTE, LONG, DOUBLE\n      USE IOUNT1, ONLY                :  WRT_ERR, WRT_LOG, ERR, F04, F06\n      USE SCONTR, ONLY                :  BLNK_SUB_NAM, MELGP, MOFFSET, NCORD, FATAL_ERR\n      USE TIMDAT, ONLY                :  TSEC\n      USE SUBR_BEGEND_LEVELS, ONLY    :  ELMGM1_BEGEND\n      USE CONSTANTS_1, ONLY           :  ZERO, ONE\n      USE DEBUG_PARAMETERS, ONLY      :  DEBUG\n      USE PARAMS, ONLY                :  EPSIL\n      USE MODEL_STUF, ONLY            :  BGRID, CAN_ELEM_TYPE_OFFSET, CORD, EID, ELEM_LEN_12, ELEM_LEN_AB, ELGP,NUM_EMG_FATAL_ERRS,&\n                                         EOFF, GRID, OFFDIS, OFFDIS_O, OFFDIS_B, OFFDIS_G, RCORD, TE, TE_IDENT, TYPE, XEB, XEL\n \n      USE ELMGM1_USE_IFs\n\n      IMPLICIT NONE\n \n      CHARACTER( 1*BYTE)              :: ID(3)              ! Used in deciding whether TE_IDENT = 'Y' or 'N'\n      CHARACTER( 5*BYTE)              :: SORT_ORDER         ! Order in which the VX(i) have been sorted in subr CALC_VEC_SORT_ORDER\n      CHARACTER(LEN=LEN(BLNK_SUB_NAM)):: SUBR_NAME = 'ELMGM1'\n      CHARACTER(LEN=*), INTENT(IN)    :: WRITE_WARN         ! If 'Y\" write warning messages, otherwise do not", "func_src_after": "! ##################################################################################################################################\n! Begin MIT license text.                                                                                    \n! _______________________________________________________________________________________________________\n                                                                                                         \n! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n                                                                                                         \n! Permission is hereby granted, free of charge, to any person obtaining a copy of this software and      \n! associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n! without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n! copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to   \n! the following conditions:                                                                              \n                                                                                                         \n! The above copyright notice and this permission notice shall be included in all copies or substantial   \n! portions of the Software and documentation.                                                                              \n                                                                                                         \n! THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS                                \n! OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                            \n! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                            \n! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                 \n! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                          \n! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                              \n! THE SOFTWARE.                                                                                          \n! _______________________________________________________________________________________________________\n                                                                                                      \n! End MIT license text.                                                                                      \n \n      SUBROUTINE ELMGM1 ( INT_ELEM_ID, WRITE_WARN )\n \n! Calculates and checks some elem geometry for ROD, BAR, BEAM, triangles and provides a transformation matrix (TE) to transform the\n! element stiffness matrix in the element system to the basic coordinate system. Calculates grid point coords in local coord system.\n  \n      USE PENTIUM_II_KIND, ONLY       :  BYTE, LONG, DOUBLE\n      USE IOUNT1, ONLY                :  WRT_ERR, WRT_LOG, ERR, F04, F06\n      USE SCONTR, ONLY                :  BLNK_SUB_NAM, MELGP, MOFFSET, NCORD, FATAL_ERR\n      USE TIMDAT, ONLY                :  TSEC\n      USE SUBR_BEGEND_LEVELS, ONLY    :  ELMGM1_BEGEND\n      USE CONSTANTS_1, ONLY           :  ZERO, ONE\n      USE DEBUG_PARAMETERS, ONLY      :  DEBUG\n      USE PARAMS, ONLY                :  EPSIL\n      USE MODEL_STUF, ONLY            :  BGRID, CAN_ELEM_TYPE_OFFSET, CORD, EID, ELEM_LEN_12, ELEM_LEN_AB, ELGP,NUM_EMG_FATAL_ERRS,&\n                                         EOFF, GRID, OFFDIS, OFFDIS_O, OFFDIS_B, OFFDIS_G, RCORD, TE, TE_IDENT, TYPE, XEB, XEL\n \n      USE ELMGM1_USE_IFs\n\n      IMPLICIT NONE\n \n      CHARACTER( 1*BYTE)              :: ID(3)              ! Used in deciding whether TE_IDENT = 'Y' or 'N'\n      CHARACTER( 5*BYTE)              :: SORT_ORDER         ! Order in which the VX(i) have been sorted in subr CALC_VEC_SORT_ORDER\n      CHARACTER(LEN=LEN(BLNK_SUB_NAM)):: SUBR_NAME = 'ELMGM1'\n      CHARACTER(LEN=*), INTENT(IN)    :: WRITE_WARN         ! If 'Y\" write warning messages, otherwise do not", "line_changes": {"deleted": [{"line_no": 5, "char_start": 455, "char_end": 561, "line": "! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n"}], "added": [{"line_no": 6, "char_start": 455, "char_end": 550, "line": "! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n"}]}, "char_changes": {"deleted": [{"char_start": 455, "char_end": 561, "chars": "! Copyright 2019 Dr William R Case, Jr (dbcase29@gmail.com)                                              \n"}], "added": [{"char_start": 455, "char_end": 550, "chars": "! Copyright 2019 Dr William R Case, Jr (<EMAIL>)                                              \n"}]}}
{"func_name": 12273, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "subroutine findnm_kcs (xp    , yp    , x     , y     , mlb   , mub   , &\n                     & nlb   , nub   , mmax  , nmax  , mp    , np    , &\n                     & rmp   , rnp   , kcs   , inside, spher ,dearthrad)\n!----- GPL ---------------------------------------------------------------------\n!                                                                               \n!  Copyright (C)  Stichting Deltares, 2011-2016.                                \n!                                                                               \n!  This program is free software: you can redistribute it and/or modify         \n!  it under the terms of the GNU General Public License as published by         \n!  the Free Software Foundation version 3.                                      \n!                                                                               \n!  This program is distributed in the hope that it will be useful,              \n!  but WITHOUT ANY WARRANTY; without even the implied warranty of               \n!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                \n!  GNU General Public License for more details.                                 \n!                                                                               \n!  You should have received a copy of the GNU General Public License            \n!  along with this program.  If not, see <http://www.gnu.org/licenses/>.        \n!                                                                               \n!  contact: delft3d.support@deltares.nl                                         \n!  Stichting Deltares                                                           \n!  P.O. Box 177                                                                 \n!  2600 MH Delft, The Netherlands                                               \n!                                                                               \n!  All indications and logos of, and references to, \"Delft3D\" and \"Deltares\"    \n!  are registered trademarks of Stichting Deltares, and remain the property of  \n!  Stichting Deltares. All rights reserved.                                     \n!                                                                               \n!-------------------------------------------------------------------------------\n!  $Id: findnm_kcs.f90 5717 2016-01-12 11:35:24Z mourits $\n!  $HeadURL: https://svn.oss.deltares.nl/repos/delft3d/tags/6686/src/engines_gpl/flow2d3d/packages/io/src/output/findnm_kcs.f90 $\n!!--description-----------------------------------------------------------------\n!\n!    Function: - Locate a point in a curvilinear mesh\n! Method used:\n!\n!!--pseudo code and references--------------------------------------------------\n! NONE\n!!--declarations----------------------------------------------------------------\n    use precision\n    !\n    implicit none\n!\n! Global variables\n!\n    integer                              ,intent(in)    :: mmax\n    integer                              ,intent(in)    :: nmax\n    integer                              ,intent(in)    :: mlb       ! lower bound M grid co-ordinate\n    integer                              ,intent(in)    :: mub       ! upper bound M grid co-ordinate\n    integer                              ,intent(in)    :: nlb       ! lwoer bound N grid co-ordinate", "func_src_after": "subroutine findnm_kcs (xp    , yp    , x     , y     , mlb   , mub   , &\n                     & nlb   , nub   , mmax  , nmax  , mp    , np    , &\n                     & rmp   , rnp   , kcs   , inside, spher ,dearthrad)\n!----- GPL ---------------------------------------------------------------------\n!                                                                               \n!  Copyright (C)  Stichting Deltares, 2011-2016.                                \n!                                                                               \n!  This program is free software: you can redistribute it and/or modify         \n!  it under the terms of the GNU General Public License as published by         \n!  the Free Software Foundation version 3.                                      \n!                                                                               \n!  This program is distributed in the hope that it will be useful,              \n!  but WITHOUT ANY WARRANTY; without even the implied warranty of               \n!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                \n!  GNU General Public License for more details.                                 \n!                                                                               \n!  You should have received a copy of the GNU General Public License            \n!  along with this program.  If not, see <http://www.gnu.org/licenses/>.        \n!                                                                               \n!  contact: <EMAIL>                                         \n!  Stichting Deltares                                                           \n!  P.O. Box 177                                                                 \n!  2600 MH Delft, The Netherlands                                               \n!                                                                               \n!  All indications and logos of, and references to, \"Delft3D\" and \"Deltares\"    \n!  are registered trademarks of Stichting Deltares, and remain the property of  \n!  Stichting Deltares. All rights reserved.                                     \n!                                                                               \n!-------------------------------------------------------------------------------\n!  $Id: findnm_kcs.f90 5717 2016-01-12 11:35:24Z mourits $\n!  $HeadURL: https://svn.oss.deltares.nl/repos/delft3d/tags/6686/src/engines_gpl/flow2d3d/packages/io/src/output/findnm_kcs.f90 $\n!!--description-----------------------------------------------------------------\n!\n!    Function: - Locate a point in a curvilinear mesh\n! Method used:\n!\n!!--pseudo code and references--------------------------------------------------\n! NONE\n!!--declarations----------------------------------------------------------------\n    use precision\n    !\n    implicit none\n!\n! Global variables\n!\n    integer                              ,intent(in)    :: mmax\n    integer                              ,intent(in)    :: nmax\n    integer                              ,intent(in)    :: mlb       ! lower bound M grid co-ordinate\n    integer                              ,intent(in)    :: mub       ! upper bound M grid co-ordinate\n    integer                              ,intent(in)    :: nlb       ! lwoer bound N grid co-ordinate", "line_changes": {"deleted": [{"line_no": 20, "char_start": 1515, "char_end": 1596, "line": "!  contact: delft3d.support@deltares.nl                                         \n"}], "added": [{"line_no": 21, "char_start": 1515, "char_end": 1576, "line": "!  contact: <EMAIL>                                         \n"}]}, "char_changes": {"deleted": [{"char_start": 1515, "char_end": 1596, "chars": "!  contact: delft3d.support@deltares.nl                                         \n"}], "added": [{"char_start": 1515, "char_end": 1576, "chars": "!  contact: <EMAIL>                                         \n"}]}}
{"func_name": 12275, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "! <module_mc_wind_winds.for - A component of the City-scale\n!                 Chemistry Transport Model EPISODE-CityChem>\n!*****************************************************************************!\n!* \n!* EPISODE - An urban-scale air quality model\n!* ========================================== \n!* Copyright (C) 2018  NILU - Norwegian Institute for Air Research\n!*                     Instituttveien 18\n!*                     PO Box 100\n!*                     NO-2027 Kjeller\n!*                     Norway\n!*\n!*                     Contact persons: Gabriela Sousa Santos - gss@nilu.no\n!*                                      Paul Hamer - pdh@nilu.no\n!*\n!* Unless explicitly acquired and licensed from Licensor under another license,\n!* the contents of this file are subject to the Reciprocal Public License (\"RPL\")\n!* Version 1.5, https://opensource.org/licenses/RPL-1.5 or subsequent versions as\n!* allowed by the RPL, and You may not copy or use this file in either source code\n!* or executable form, except in compliance with the terms and conditions of the RPL. \n!*\n!* All software distributed under the RPL is provided strictly on an \"AS IS\" basis, \n!* WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY \n!* DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF\n!* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT.\n!* See the RPL for specific language governing rights and limitations under the RPL.\n!*\n!* ========================================== \n!* The dispersion model EPISODE (Grønskei et. al., 1993; Larssen et al., 1994;\n!* Walker et al., 1992, 1999; Slørdal et al., 2003, 2008) is an Eulerian grid model \n!* with embedded subgrid models for calculations of pollutant concentrations resulting \n!* from different types of sources (area-, line- and point sources). EPISODE solves the \n!* time dependent advection/-diffusion equation on a 3 dimensional grid. \n!* Finite difference numerical methods are applied to integrate the solution forward in time. \n!* It also includes extensions as the implementation of a simplified EMEP photochemistry \n!* scheme for urban areas (Walker et al. 2004) and a scheme for Secondary Organic Aerosol \n!* implemented by Håvard Slørdal\n!*\n!* Grønskei, K.E., Walker, S.E., Gram, F. (1993) Evaluation of a model for hourly spatial\n!*    concentrations distributions. Atmos. Environ., 27B, 105-120.\n!* Larssen, S., Grønskei, K.E., Gram, F., Hagen, L.O., Walker, S.E. (1994) Verification of \n!*    urban scale time-dependent dispersion model with sub-grid elements in Oslo, Norway. \n!*    In: Air poll. modelling and its appl. X. New York, Plenum Press.\n!* Slørdal, L.H., McInnes, H., Krognes, T. (2008): The Air Quality Information System AirQUIS. \n!*    Info. Techn. Environ. Eng., 1, 40-47, 2008.\n!* Slørdal, L.H., Walker, S.-E., Solberg, S. (2003) The Urban Air Dispersion Model EPISODE \n!*    applied in AirQUIS. Technical Description. NILU TR 12/2003. ISBN 82-425-1522-0.\n!* Walker, S.E., Grønskei, K.E. (1992) Spredningsberegninger for on-line overvåking i Grenland. \n!*    Programbeskrivelse og brukerveiledning. Lillestrøm, \n!*    Norwegian Institute for Air Research (NILU OR 55/92).", "func_src_after": "! <module_mc_wind_winds.for - A component of the City-scale\n!                 Chemistry Transport Model EPISODE-CityChem>\n!*****************************************************************************!\n!* \n!* EPISODE - An urban-scale air quality model\n!* ========================================== \n!* Copyright (C) 2018  NILU - Norwegian Institute for Air Research\n!*                     Instituttveien 18\n!*                     PO Box 100\n!*                     NO-2027 Kjeller\n!*                     Norway\n!*\n!*                     Contact persons: Gabriela Sousa Santos - <EMAIL>\n!*                                      Paul Hamer - <EMAIL>\n!*\n!* Unless explicitly acquired and licensed from Licensor under another license,\n!* the contents of this file are subject to the Reciprocal Public License (\"RPL\")\n!* Version 1.5, https://opensource.org/licenses/RPL-1.5 or subsequent versions as\n!* allowed by the RPL, and You may not copy or use this file in either source code\n!* or executable form, except in compliance with the terms and conditions of the RPL. \n!*\n!* All software distributed under the RPL is provided strictly on an \"AS IS\" basis, \n!* WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY \n!* DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF\n!* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT.\n!* See the RPL for specific language governing rights and limitations under the RPL.\n!*\n!* ========================================== \n!* The dispersion model EPISODE (Grønskei et. al., 1993; Larssen et al., 1994;\n!* Walker et al., 1992, 1999; Slørdal et al., 2003, 2008) is an Eulerian grid model \n!* with embedded subgrid models for calculations of pollutant concentrations resulting \n!* from different types of sources (area-, line- and point sources). EPISODE solves the \n!* time dependent advection/-diffusion equation on a 3 dimensional grid. \n!* Finite difference numerical methods are applied to integrate the solution forward in time. \n!* It also includes extensions as the implementation of a simplified EMEP photochemistry \n!* scheme for urban areas (Walker et al. 2004) and a scheme for Secondary Organic Aerosol \n!* implemented by Håvard Slørdal\n!*\n!* Grønskei, K.E., Walker, S.E., Gram, F. (1993) Evaluation of a model for hourly spatial\n!*    concentrations distributions. Atmos. Environ., 27B, 105-120.\n!* Larssen, S., Grønskei, K.E., Gram, F., Hagen, L.O., Walker, S.E. (1994) Verification of \n!*    urban scale time-dependent dispersion model with sub-grid elements in Oslo, Norway. \n!*    In: Air poll. modelling and its appl. X. New York, Plenum Press.\n!* Slørdal, L.H., McInnes, H., Krognes, T. (2008): The Air Quality Information System AirQUIS. \n!*    Info. Techn. Environ. Eng., 1, 40-47, 2008.\n!* Slørdal, L.H., Walker, S.-E., Solberg, S. (2003) The Urban Air Dispersion Model EPISODE \n!*    applied in AirQUIS. Technical Description. NILU TR 12/2003. ISBN 82-425-1522-0.\n!* Walker, S.E., Grønskei, K.E. (1992) Spredningsberegninger for on-line overvåking i Grenland. \n!*    Programbeskrivelse og brukerveiledning. Lillestrøm, \n!*    Norwegian Institute for Air Research (NILU OR 55/92).", "line_changes": {"deleted": [{"line_no": 13, "char_start": 513, "char_end": 589, "line": "!*                     Contact persons: Gabriela Sousa Santos - gss@nilu.no\n"}, {"line_no": 15, "char_start": 585, "char_end": 650, "line": "!*                                      Paul Hamer - pdh@nilu.no\n"}], "added": [{"line_no": 14, "char_start": 513, "char_end": 585, "line": "!*                     Contact persons: Gabriela Sousa Santos - <EMAIL>\n"}, {"line_no": 16, "char_start": 585, "char_end": 646, "line": "!*                                      Paul Hamer - <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 513, "char_end": 589, "chars": "!*                     Contact persons: Gabriela Sousa Santos - gss@nilu.no\n"}, {"char_start": 585, "char_end": 650, "chars": "!*                                      Paul Hamer - pdh@nilu.no\n"}], "added": [{"char_start": 513, "char_end": 585, "chars": "!*                     Contact persons: Gabriela Sousa Santos - <EMAIL>\n"}, {"char_start": 585, "char_end": 646, "chars": "!*                                      Paul Hamer - <EMAIL>\n"}]}}
{"func_name": 12307, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "object InfoForm: TInfoForm\n  Left = 0\n  Top = 0\n  BorderIcons = [biSystemMenu]\n  BorderStyle = bsSingle\n  Caption = 'Iris Model Editor - Information'\n  ClientHeight = 330\n  ClientWidth = 614\n  Color = clWhite\n  Font.Charset = DEFAULT_CHARSET\n  Font.Color = clWindowText\n  Font.Height = -11\n  Font.Name = 'Tahoma'\n  Font.Style = []\n  OldCreateOrder = False\n  PixelsPerInch = 96\n  TextHeight = 13\n  object Image1: TImage\n    Left = 8\n    Top = 8\n    Width = 229\n    Height = 300\n    AutoSize = True\n    Picture.Data = {\n      0A544A504547496D616765AF630000FFD8FFE000104A46494600010101025802\n      580000FFE1179F4578696600004D4D002A000000080007011200030000000100\n      010000011A00050000000100000062011B0005000000010000006A0128000300\n      00000100020000013100020000001B0000007201320002000000140000008D87\n      69000400000001000000A1000000CB0000025800000001000002580000000141\n      646F62652050686F746F73686F702043532057696E646F777300323030363A30\n      343A30372030313A34383A3439000003A001000300000001FFFF0000A0020004\n      0000000100000317A0030004000000010000040D000000000006010300030000\n      000100060000011A00050000000100000119011B000500000001000001210128\n      0003000000010002000002010004000000010000012902020004000000010000\n      166E0000000000000048000000010000004800000001FFD8FFE000104A464946\n      00010100000100010000FFDB004300080606070605080707070909080A0C140D\n      0C0B0B0C1912130F141D1A1F1E1D1A1C1C20242E2720222C231C1C2837292C30\n      313434341F27393D38323C2E333432FFDB0043010909090C0B0C180D0D183221\n      1C21323232323232323232323232323232323232323232323232323232323232\n      3232323232323232323232323232323232323232FFC000110800C40095030122\n      00021101031101FFC4001F000001050101010101010000000000000000010203\n      0405060708090A0BFFC400B5100002010303020403050504040000017D010203\n      00041105122131410613516107227114328191A1082342B1C11552D1F0243362\n      7282090A161718191A25262728292A3435363738393A434445464748494A5354\n      55565758595A636465666768696A737475767778797A838485868788898A9293\n      9495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8\n      C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1F2F3F4F5F6F7F8F9FAFF\n      C4001F0100030101010101010101010000000000000102030405060708090A0B\n      FFC400B511000201020404030407050404000102770001020311040521310612\n      41510761711322328108144291A1B1C109233352F0156272D10A162434E125F1", "func_src_after": "object InfoForm: TInfoForm\n  Left = 0\n  Top = 0\n  BorderIcons = [biSystemMenu]\n  BorderStyle = bsSingle\n  Caption = 'Iris Model Editor - Information'\n  ClientHeight = 330\n  ClientWidth = 614\n  Color = clWhite\n  Font.Charset = DEFAULT_CHARSET\n  Font.Color = clWindowText\n  Font.Height = -11\n  Font.Name = 'Tahoma'\n  Font.Style = []\n  OldCreateOrder = False\n  PixelsPerInch = 96\n  TextHeight = 13\n  object Image1: TImage\n    Left = 8\n    Top = 8\n    Width = 229\n    Height = 300\n    AutoSize = True\n    Picture.Data = {\n      0A544A504547496D616765AF630000FFD8FFE000104A46494600010101025802\n      580000FFE1179F4578696600004D4D002A000000080007011200030000000100\n      010000011A00050000000100000062011B0005000000010000006A0128000300\n      00000100020000013100020000001B0000007201320002000000140000008D87\n      69000400000001000000A1000000CB0000025800000001000002580000000141\n      646F62652050686F746F73686F702043532057696E646F777300323030363A30\n      343A30372030313A34383A3439000003A001000300000001FFFF0000A0020004\n      0000000100000317A0030004000000010000040D000000000006010300030000\n      000100060000011A00050000000100000119011B000500000001000001210128\n      0003000000010002000002010004000000010000012902020004000000010000\n      166E0000000000000048000000010000004800000001FFD8FFE000104A464946\n      00010100000100010000FFDB004300080606070605080707070909080A0C140D\n      0C0B0B0C1912130F141D1A1F1E1D1A1C1C20242E2720222C231C1C2837292C30\n      313434341F27393D38323C2E333432FFDB0043010909090C0B0C180D0D183221\n      1C21323232323232323232323232323232323232323232323232323232323232\n      3232323232323232323232323232323232323232FFC000110800C40095030122\n      00021101031101FFC4001F000001050101010101010000000000000000010203\n      0405060708090A0BFFC400B5100002010303020403050504040000017D010203\n      00041105122131410613516107227114328191A1082342B1C11552D1F0243362\n      7282090A161718191A25262728292A3435363738393A434445464748494A5354\n      55565758595A636465666768696A737475767778797A838485868788898A9293\n      9495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8\n      C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1F2F3F4F5F6F7F8F9FAFF\n      C4001F0100030101010101010101010000000000000102030405060708090A0B\n      FFC400B511000201020404030407050404000102770001020311040521310612\n      41510761711322328108144291A1B1C109233352F0156272D10A162434E125F1", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12311, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{\r\n     Hi Kai.  I read your message about 360x256x256 and saw you were using\r\nTweak.  This is message 1/2 which includes Pascal versions of Twkuser.c\r\nand Tweak2c.  Thought they might be helpful to you.\r\n\r\nMaurice L. Marvin\r\nmaurice@cs.pdx.edu\r\n}\r\n\r\n{$I-}\r\nUNIT TWKUSER;\r\n\r\n{=========================================================================\r\n  TWKUSER.PAS is a Borland Pascal 7.0 compatible unit for using Robert\r\n  Schmidt's TWEAK generated files.\r\n\r\n  Ported to Pascal from Robert Schmidt's original C code.\r\n\r\n  Donated to public domain.\r\n\r\n  Maurice L. Marvin\r\n  maurice@cs.pdx.edu\r\n ==========================================================================}\r\n\r\nINTERFACE\r\n\r\n CONST\r\n\r\n    { xxxxADDR defines the base port number used to access VGA\r\n      component xxxx, and is defined for xxxx =\r\n           ATTRCON    -   Attribute Controller\r\n           MISC       -   Miscellaneous Register\r\n           VGAENABLE  -   VGA Enable Register\r\n           SEQ        -   Sequencer\r\n           GRACON     -   Graphics Controller\r\n           CRTC       -   Cathode Ray Tube Controller\r\n           STATUS     -   Status Register }\r\n\r\n    ATTRCON_ADDR        = $3C0;\r\n    MISC_ADDR           = $3C2;\r\n    VGAENABLE_ADDR      = $3C3;\r\n    SEQ_ADDR            = $3C4;\r\n    GRACON_ADDR         = $3CE;\r\n    CRTC_ADDR           = $3D4;\r\n    STATUS_ADDR         = $3DA;\r\n\r\n TYPE\r\n\r\n    Register = RECORD\r\n                  port   : WORD;\r", "func_src_after": "{\r\n     Hi Kai.  I read your message about 360x256x256 and saw you were using\r\nTweak.  This is message 1/2 which includes Pascal versions of Twkuser.c\r\nand Tweak2c.  Thought they might be helpful to you.\r\n\r\nMaurice L. Marvin\r\n<EMAIL>\r\n}\r\n\r\n{$I-}\r\nUNIT TWKUSER;\r\n\r\n{=========================================================================\r\n  TWKUSER.PAS is a Borland Pascal 7.0 compatible unit for using Robert\r\n  Schmidt's TWEAK generated files.\r\n\r\n  Ported to Pascal from Robert Schmidt's original C code.\r\n\r\n  Donated to public domain.\r\n\r\n  Maurice L. Marvin\r\n  <EMAIL>\r\n ==========================================================================}\r\n\r\nINTERFACE\r\n\r\n CONST\r\n\r\n    { xxxxADDR defines the base port number used to access VGA\r\n      component xxxx, and is defined for xxxx =\r\n           ATTRCON    -   Attribute Controller\r\n           MISC       -   Miscellaneous Register\r\n           VGAENABLE  -   VGA Enable Register\r\n           SEQ        -   Sequencer\r\n           GRACON     -   Graphics Controller\r\n           CRTC       -   Cathode Ray Tube Controller\r\n           STATUS     -   Status Register }\r\n\r\n    ATTRCON_ADDR        = $3C0;\r\n    MISC_ADDR           = $3C2;\r\n    VGAENABLE_ADDR      = $3C3;\r\n    SEQ_ADDR            = $3C4;\r\n    GRACON_ADDR         = $3CE;\r\n    CRTC_ADDR           = $3D4;\r\n    STATUS_ADDR         = $3DA;\r\n\r\n TYPE\r\n\r\n    Register = RECORD\r\n                  port   : WORD;\r", "line_changes": {"deleted": [{"line_no": 7, "char_start": 226, "char_end": 246, "line": "maurice@cs.pdx.edu\r\n"}, {"line_no": 23, "char_start": 563, "char_end": 585, "line": "  maurice@cs.pdx.edu\r\n"}], "added": [{"line_no": 8, "char_start": 226, "char_end": 235, "line": "<EMAIL>\r\n"}, {"line_no": 24, "char_start": 563, "char_end": 574, "line": "  <EMAIL>\r\n"}]}, "char_changes": {"deleted": [{"char_start": 226, "char_end": 246, "chars": "maurice@cs.pdx.edu\r\n"}, {"char_start": 563, "char_end": 585, "chars": "  maurice@cs.pdx.edu\r\n"}], "added": [{"char_start": 226, "char_end": 235, "chars": "<EMAIL>\r\n"}, {"char_start": 563, "char_end": 574, "chars": "  <EMAIL>\r\n"}]}}
{"func_name": 12333, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{*!\n * Fano Web Framework (https://fanoframework.github.io)\n *\n * @link      https://github.com/fanoframework/fano\n * @copyright Copyright (c) 2018 - 2021 Zamrony P. Juhara\n * @license   https://github.com/fanoframework/fano/blob/master/LICENSE (MIT)\n *}\nunit CgiFcgiGatewayAppImpl;\n\ninterface\n\n{$MODE OBJFPC}\n{$H+}\n\nuses\n\n    RunnableIntf,\n    AppIntf;\n\ntype\n\n    (*!-----------------------------------------------\n     * web application that implements IWebApplication\n     * and run as ordinary CGI application or FastCGI application\n     * based how application is invoked.\n     *\n     * @author Zamrony P. Juhara <zamronypj@yahoo.com>\n     *-----------------------------------------------*)\n    TCgiFcgiGatewayApplication = class(TInterfacedObject, IWebApplication)\n    private\n        fCgiApp : IWebApplication;\n        fFcgiApp : IWebApplication;\n\n        function isRunAsFastCgi() : boolean;\n    public\n        (*!-----------------------------------------------\n         * constructor\n         *------------------------------------------------\n         * @param cgiAppInst instance CGI Application\n         * @param fcgiAppInst instance FastCGI application\n         *-----------------------------------------------*)\n        constructor create(\n            const cgiAppInst : IWebApplication;\n            const fcgiAppInst : IWebApplication\n        );\n        destructor destroy(); override;\n        function run() : IRunnable;\n\n    end;\n", "func_src_after": "{*!\n * Fano Web Framework (https://fanoframework.github.io)\n *\n * @link      https://github.com/fanoframework/fano\n * @copyright Copyright (c) 2018 - 2021 Zamrony P. Juhara\n * @license   https://github.com/fanoframework/fano/blob/master/LICENSE (MIT)\n *}\nunit CgiFcgiGatewayAppImpl;\n\ninterface\n\n{$MODE OBJFPC}\n{$H+}\n\nuses\n\n    RunnableIntf,\n    AppIntf;\n\ntype\n\n    (*!-----------------------------------------------\n     * web application that implements IWebApplication\n     * and run as ordinary CGI application or FastCGI application\n     * based how application is invoked.\n     *\n     * @author Zamrony P. Juhara <<EMAIL>>\n     *-----------------------------------------------*)\n    TCgiFcgiGatewayApplication = class(TInterfacedObject, IWebApplication)\n    private\n        fCgiApp : IWebApplication;\n        fFcgiApp : IWebApplication;\n\n        function isRunAsFastCgi() : boolean;\n    public\n        (*!-----------------------------------------------\n         * constructor\n         *------------------------------------------------\n         * @param cgiAppInst instance CGI Application\n         * @param fcgiAppInst instance FastCGI application\n         *-----------------------------------------------*)\n        constructor create(\n            const cgiAppInst : IWebApplication;\n            const fcgiAppInst : IWebApplication\n        );\n        destructor destroy(); override;\n        function run() : IRunnable;\n\n    end;\n", "line_changes": {"deleted": [{"line_no": 27, "char_start": 585, "char_end": 640, "line": "     * @author Zamrony P. Juhara <zamronypj@yahoo.com>\n"}], "added": [{"line_no": 28, "char_start": 585, "char_end": 628, "line": "     * @author Zamrony P. Juhara <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 585, "char_end": 640, "chars": "     * @author Zamrony P. Juhara <zamronypj@yahoo.com>\n"}], "added": [{"char_start": 585, "char_end": 628, "chars": "     * @author Zamrony P. Juhara <<EMAIL>>\n"}]}}
{"func_name": 12359, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{******************************************************************************}\r\n{                                                                              }\r\n{            Indy (Internet Direct) - Internet Protocols Simplified            }\r\n{                                                                              }\r\n{            https://www.indyproject.org/                                      }\r\n{            https://gitter.im/IndySockets/Indy                                }\r\n{                                                                              }\r\n{******************************************************************************}\r\n{                                                                              }\r\n{  This file is part of the Indy (Internet Direct) project, and is offered     }\r\n{  under the dual-licensing agreement described on the Indy website.           }\r\n{  (https://www.indyproject.org/license/)                                      }\r\n{                                                                              }\r\n{  Copyright:                                                                  }\r\n{   (c) 1993-2020, Chad Z. Hower and the Indy Pit Crew. All rights reserved.   }\r\n{                                                                              }\r\n{******************************************************************************}\r\n{                                                                              }\r\n{        Originally written by: Fabian S. Biehn                                }\r\n{                               fbiehn@aagon.com (German & English)            }\r\n{                                                                              }\r\n{        Contributers:                                                         }\r\n{                               Here could be your name                        }\r\n{                                                                              }\r\n{******************************************************************************}\r\n\r\n// This File is auto generated!\r\n// Any change to this file should be made in the\r\n// corresponding unit in the folder \"intermediate\"!\r\n\r\n// Generation date: 28.10.2020 15:24:33\r\n\r\nunit IdOpenSSLHeaders_dh;\r\n\r\ninterface\r\n\r\n// Headers for OpenSSL 1.1.1\r\n// dh.h\r\n\r\n{$i IdCompilerDefines.inc}\r\n\r\nuses\r\n  IdCTypes,\r\n  IdGlobal,\r\n  IdOpenSSLConsts,\r\n  IdOpenSSLHeaders_ossl_typ,\r\n  IdOpenSSLHeaders_evp;\r\n\r\nconst\r\n  OPENSSL_DH_MAX_MODULUS_BITS      = 10000;\r", "func_src_after": "{******************************************************************************}\r\n{                                                                              }\r\n{            Indy (Internet Direct) - Internet Protocols Simplified            }\r\n{                                                                              }\r\n{            https://www.indyproject.org/                                      }\r\n{            https://gitter.im/IndySockets/Indy                                }\r\n{                                                                              }\r\n{******************************************************************************}\r\n{                                                                              }\r\n{  This file is part of the Indy (Internet Direct) project, and is offered     }\r\n{  under the dual-licensing agreement described on the Indy website.           }\r\n{  (https://www.indyproject.org/license/)                                      }\r\n{                                                                              }\r\n{  Copyright:                                                                  }\r\n{   (c) 1993-2020, Chad Z. Hower and the Indy Pit Crew. All rights reserved.   }\r\n{                                                                              }\r\n{******************************************************************************}\r\n{                                                                              }\r\n{        Originally written by: Fabian S. Biehn                                }\r\n{                               <EMAIL> (German & English)            }\r\n{                                                                              }\r\n{        Contributers:                                                         }\r\n{                               Here could be your name                        }\r\n{                                                                              }\r\n{******************************************************************************}\r\n\r\n// This File is auto generated!\r\n// Any change to this file should be made in the\r\n// corresponding unit in the folder \"intermediate\"!\r\n\r\n// Generation date: 28.10.2020 15:24:33\r\n\r\nunit IdOpenSSLHeaders_dh;\r\n\r\ninterface\r\n\r\n// Headers for OpenSSL 1.1.1\r\n// dh.h\r\n\r\n{$i IdCompilerDefines.inc}\r\n\r\nuses\r\n  IdCTypes,\r\n  IdGlobal,\r\n  IdOpenSSLConsts,\r\n  IdOpenSSLHeaders_ossl_typ,\r\n  IdOpenSSLHeaders_evp;\r\n\r\nconst\r\n  OPENSSL_DH_MAX_MODULUS_BITS      = 10000;\r", "line_changes": {"deleted": [{"line_no": 20, "char_start": 1558, "char_end": 1640, "line": "{                               fbiehn@aagon.com (German & English)            }\r\n"}], "added": [{"line_no": 21, "char_start": 1558, "char_end": 1631, "line": "{                               <EMAIL> (German & English)            }\r\n"}]}, "char_changes": {"deleted": [{"char_start": 1558, "char_end": 1640, "chars": "{                               fbiehn@aagon.com (German & English)            }\r\n"}], "added": [{"char_start": 1558, "char_end": 1631, "chars": "{                               <EMAIL> (German & English)            }\r\n"}]}}
{"func_name": 12360, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "procedure TForm1.FormDestroy(Sender: TObject);\nbegin\n  if Assigned(FMMDBReader) then\n    FreeAndNil(FMMDBReader);\nend;\n\nprocedure TForm1.ReadMMDB(const Filename: String);\nvar\n  LLines: TStrings;\n  LDictItem: TPair<string, string>;\n  I: Integer;\n  fs: TFormatSettings;\n\n{$IFDEF DEBUG_IP}\nconst\n  DEBUG_IPv4 = '8.8.4.4';\n  DEBUG_IPv6 = '2001:4860:4860::8844';\n{$ENDIF}\n\n  function FormatIPCountryNode(node: TMMDBIteratorNode<TMMDBIPCountryInfo>): String;\n  var\n    netAddress: TMMDBIPAddress;\n    rawAddress: TBytes;\n    bitLength: Integer;\n    i, h: Integer;\n  begin\n    rawAddress := node.Start.GetAddressBytes;\n    bitLength := Length(rawAddress) * 8;\n    i := node.Prefix;\n    while i < bitLength do\n    begin\n      h := 8 - (i mod 8);\n      rawAddress[i shr 3] :=\n        (rawAddress[i shr 3] shr h) shl h;\n      i := ((i shr 3) shl 3) + 8;\n    end;\n    netAddress := TMMDBIPAddress.Create(rawAddress);\n    Result := Format('%s/%d,%s,%s,%s,%s,%s,%s',\n      [netAddress.ToString, node.Prefix,\n       node.Data.Continent.code, IntToStr(node.Data.Continent.GeonameId),\n       node.Data.Country.ISOCode, IntToStr(node.Data.Country.GeonameId),\n       node.Data.RegisteredCountry.ISOCode, IntToStr(node.Data.RegisteredCountry.GeonameId)]);\n  end;\n\n  function FormatIPCountryCityNode(node: TMMDBIteratorNode<TMMDBIPCountryCityInfoEx>): String;\n  var\n    netAddress: TMMDBIPAddress;\n    rawAddress: TBytes;\n    bitLength: Integer;\n    i, h: Integer;", "func_src_after": "procedure TForm1.FormDestroy(Sender: TObject);\nbegin\n  if Assigned(FMMDBReader) then\n    FreeAndNil(FMMDBReader);\nend;\n\nprocedure TForm1.ReadMMDB(const Filename: String);\nvar\n  LLines: TStrings;\n  LDictItem: TPair<string, string>;\n  I: Integer;\n  fs: TFormatSettings;\n\n{$IFDEF DEBUG_IP}\nconst\n  DEBUG_IPv4 = '<IP-Address>';\n  DEBUG_IPv6 = '<IP-Address>';\n{$ENDIF}\n\n  function FormatIPCountryNode(node: TMMDBIteratorNode<TMMDBIPCountryInfo>): String;\n  var\n    netAddress: TMMDBIPAddress;\n    rawAddress: TBytes;\n    bitLength: Integer;\n    i, h: Integer;\n  begin\n    rawAddress := node.Start.GetAddressBytes;\n    bitLength := Length(rawAddress) * 8;\n    i := node.Prefix;\n    while i < bitLength do\n    begin\n      h := 8 - (i mod 8);\n      rawAddress[i shr 3] :=\n        (rawAddress[i shr 3] shr h) shl h;\n      i := ((i shr 3) shl 3) + 8;\n    end;\n    netAddress := TMMDBIPAddress.Create(rawAddress);\n    Result := Format('%s/%d,%s,%s,%s,%s,%s,%s',\n      [netAddress.ToString, node.Prefix,\n       node.Data.Continent.code, IntToStr(node.Data.Continent.GeonameId),\n       node.Data.Country.ISOCode, IntToStr(node.Data.Country.GeonameId),\n       node.Data.RegisteredCountry.ISOCode, IntToStr(node.Data.RegisteredCountry.GeonameId)]);\n  end;\n\n  function FormatIPCountryCityNode(node: TMMDBIteratorNode<TMMDBIPCountryCityInfoEx>): String;\n  var\n    netAddress: TMMDBIPAddress;\n    rawAddress: TBytes;\n    bitLength: Integer;\n    i, h: Integer;", "line_changes": {"deleted": [{"line_no": 16, "char_start": 293, "char_end": 319, "line": "  DEBUG_IPv4 = '8.8.4.4';\n"}, {"line_no": 17, "char_start": 293, "char_end": 332, "line": "  DEBUG_IPv6 = '2001:4860:4860::8844';\n"}], "added": [{"line_no": 18, "char_start": 293, "char_end": 324, "line": "  DEBUG_IPv4 = '<IP-Address>';\n"}, {"line_no": 19, "char_start": 324, "char_end": 355, "line": "  DEBUG_IPv6 = '<IP-Address>';\n"}]}, "char_changes": {"deleted": [{"char_start": 293, "char_end": 319, "chars": "  DEBUG_IPv4 = '8.8.4.4';\n"}, {"char_start": 293, "char_end": 332, "chars": "  DEBUG_IPv6 = '2001:4860:4860::8844';\n"}], "added": [{"char_start": 293, "char_end": 324, "chars": "  DEBUG_IPv4 = '<IP-Address>';\n"}, {"char_start": 324, "char_end": 355, "chars": "  DEBUG_IPv6 = '<IP-Address>';\n"}]}}
{"func_name": 12362, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "(****************************************************************************\n *\n * Unit: ComCtrls95\n *\n * Components: TPage95Control, TTab95Control, TTab95Sheet\n *\n * Author: Ryan J. Mills\n *\n * Author Email: rmills@freenet.edmonton.ab.ca\n * Code Status: Freeware\n *\n * Additional Codeing: Daniel Parnell,\n *                     Patrick O'Keeffe,\n *                     Dave Lively (Floating Tabs),\n *                     Earl F. Glynn (Rotation Routines),\n *                     Mark Timmings,\n *                     Andrea Sessa,\n *                     Walter Sciancalepore,\n *                     Flemming Gorzelak,\n *                     Richard Chang,\n *                     Juan Pedro Laencina.\n *\n * Disclaimer: THIS SOFTWARE AND THE ACCOMPANYING FILES ARE DISTRIBUTED\n * \"AS IS\" AND WITHOUT WARRANTIES AS TO PERFORMANCE OF MERCHANTABILITY OR\n * ANY OTHER WARRANTIES WHETHER EXPRESSED OR IMPLIED.  Because of the\n * various software environments into which this code may be used, NO\n * WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE IS OFFERED.  Good data\n * processing procedure dictates that any program based on this code be\n * thoroughly tested with non-critical data before relying on it.\n * THE USER MUST ASSUME THE ENTIRE RISK OF USING THE ACCOMPANYING CODE.\n *\n * Comments: This code is being released as freeware.  The author asks\n * that if you modify the code that you email a copy of the new source\n * back to him.\n *\n * Appreciation:  Many thanks to Mark Timmings for his many emails\n * reporting bugs in the controls and for adding his personal touch\n * to the control interface.  I appreciate all your help Mark!\n *\n ****************************************************************************)\n\nunit ComCtrls95;\n\n{Version 2.94, Released 09/21/99}\n\ninterface\n{$D+}\n\n{$ifdef ver90}      //remove this line for explict D2 usage\n  {$Define delphi2} //Create .DCU for D2", "func_src_after": "(****************************************************************************\n *\n * Unit: ComCtrls95\n *\n * Components: TPage95Control, TTab95Control, TTab95Sheet\n *\n * Author: Ryan J. Mills\n *\n * Author Email: <EMAIL>\n * Code Status: Freeware\n *\n * Additional Codeing: Daniel Parnell,\n *                     Patrick O'Keeffe,\n *                     Dave Lively (Floating Tabs),\n *                     Earl F. Glynn (Rotation Routines),\n *                     Mark Timmings,\n *                     Andrea Sessa,\n *                     Walter Sciancalepore,\n *                     Flemming Gorzelak,\n *                     Richard Chang,\n *                     Juan Pedro Laencina.\n *\n * Disclaimer: THIS SOFTWARE AND THE ACCOMPANYING FILES ARE DISTRIBUTED\n * \"AS IS\" AND WITHOUT WARRANTIES AS TO PERFORMANCE OF MERCHANTABILITY OR\n * ANY OTHER WARRANTIES WHETHER EXPRESSED OR IMPLIED.  Because of the\n * various software environments into which this code may be used, NO\n * WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE IS OFFERED.  Good data\n * processing procedure dictates that any program based on this code be\n * thoroughly tested with non-critical data before relying on it.\n * THE USER MUST ASSUME THE ENTIRE RISK OF USING THE ACCOMPANYING CODE.\n *\n * Comments: This code is being released as freeware.  The author asks\n * that if you modify the code that you email a copy of the new source\n * back to him.\n *\n * Appreciation:  Many thanks to Mark Timmings for his many emails\n * reporting bugs in the controls and for adding his personal touch\n * to the control interface.  I appreciate all your help Mark!\n *\n ****************************************************************************)\n\nunit ComCtrls95;\n\n{Version 2.94, Released 09/21/99}\n\ninterface\n{$D+}\n\n{$ifdef ver90}      //remove this line for explict D2 usage\n  {$Define delphi2} //Create .DCU for D2", "line_changes": {"deleted": [{"line_no": 9, "char_start": 193, "char_end": 240, "line": " * Author Email: rmills@freenet.edmonton.ab.ca\n"}], "added": [{"line_no": 10, "char_start": 193, "char_end": 218, "line": " * Author Email: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 193, "char_end": 240, "chars": " * Author Email: rmills@freenet.edmonton.ab.ca\n"}], "added": [{"char_start": 193, "char_end": 218, "chars": " * Author Email: <EMAIL>\n"}]}}
{"func_name": 12364, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{******************************************************************************}\n{                                                                              }\n{       Delphi cross platform socket library                                   }\n{                                                                              }\n{       Copyright (c) 2017 WiNDDRiVER(soulawing@gmail.com)                     }\n{                                                                              }\n{       Homepage: https://github.com/winddriver/Delphi-Cross-Socket            }\n{                                                                              }\n{******************************************************************************}\nunit Z.BSD.kqueue;\n\ninterface\n\nuses\n  Posix.Base, Posix.Time;\n\nconst\n  EVFILT_READ     = -1;\n  EVFILT_WRITE    = -2;\n  EVFILT_AIO      = -3;  { attached to aio requests }\n  EVFILT_VNODE    = -4;  { attached to vnodes }\n  EVFILT_PROC     = -5;  { attached to struct proc }\n  EVFILT_SIGNAL   = -6;  { attached to struct proc }\n  EVFILT_TIMER    = -7;  { timers }\n  EVFILT_NETDEV   = -8;  { network devices }\n  EVFILT_FS       = -9;  { filesystem events }\n\n  EVFILT_SYSCOUNT = 9;\n\n  EV_ADD          = $0001;  { add event to kq }\n  EV_DELETE       = $0002;  { delete event from kq  }\n  EV_ENABLE       = $0004;  { enable event  }\n  EV_DISABLE      = $0008;  { disable event (not reported)  }\n\n{ flags  }\n  EV_ONESHOT      = $0010;  { only report one occurrence  }\n  EV_CLEAR        = $0020;  { clear event state after reporting  }\n  EV_RECEIPT      = $0040;\t{ force EV_ERROR on success, data=0 }\n  EV_DISPATCH     = $0080;  { disable event after reporting }\n  EV_SYSFLAGS     = $F000;  { reserved by system  }\n  EV_FLAG1        = $2000;  { filter-specific flag  }\n\n{ returned values  }\n  EV_EOF          = $8000;  { EOF detected  }\n  EV_ERROR        = $4000;  { error, data contains errno  }\n\n{ data/hint flags for EVFILT_READ|WRITE, shared with userspace   }\n  NOTE_LOWAT      = $0001;  { low water mark  }\n\n{ data/hint flags for EVFILT_VNODE, shared with userspace  }", "func_src_after": "{******************************************************************************}\n{                                                                              }\n{       Delphi cross platform socket library                                   }\n{                                                                              }\n{       Copyright (c) 2017 WiNDDRiVER(<EMAIL>)                     }\n{                                                                              }\n{       Homepage: https://github.com/winddriver/Delphi-Cross-Socket            }\n{                                                                              }\n{******************************************************************************}\nunit Z.BSD.kqueue;\n\ninterface\n\nuses\n  Posix.Base, Posix.Time;\n\nconst\n  EVFILT_READ     = -1;\n  EVFILT_WRITE    = -2;\n  EVFILT_AIO      = -3;  { attached to aio requests }\n  EVFILT_VNODE    = -4;  { attached to vnodes }\n  EVFILT_PROC     = -5;  { attached to struct proc }\n  EVFILT_SIGNAL   = -6;  { attached to struct proc }\n  EVFILT_TIMER    = -7;  { timers }\n  EVFILT_NETDEV   = -8;  { network devices }\n  EVFILT_FS       = -9;  { filesystem events }\n\n  EVFILT_SYSCOUNT = 9;\n\n  EV_ADD          = $0001;  { add event to kq }\n  EV_DELETE       = $0002;  { delete event from kq  }\n  EV_ENABLE       = $0004;  { enable event  }\n  EV_DISABLE      = $0008;  { disable event (not reported)  }\n\n{ flags  }\n  EV_ONESHOT      = $0010;  { only report one occurrence  }\n  EV_CLEAR        = $0020;  { clear event state after reporting  }\n  EV_RECEIPT      = $0040;\t{ force EV_ERROR on success, data=0 }\n  EV_DISPATCH     = $0080;  { disable event after reporting }\n  EV_SYSFLAGS     = $F000;  { reserved by system  }\n  EV_FLAG1        = $2000;  { filter-specific flag  }\n\n{ returned values  }\n  EV_EOF          = $8000;  { EOF detected  }\n  EV_ERROR        = $4000;  { error, data contains errno  }\n\n{ data/hint flags for EVFILT_READ|WRITE, shared with userspace   }\n  NOTE_LOWAT      = $0001;  { low water mark  }\n\n{ data/hint flags for EVFILT_VNODE, shared with userspace  }", "line_changes": {"deleted": [{"line_no": 5, "char_start": 324, "char_end": 405, "line": "{       Copyright (c) 2017 WiNDDRiVER(soulawing@gmail.com)                     }\n"}], "added": [{"line_no": 6, "char_start": 324, "char_end": 393, "line": "{       Copyright (c) 2017 WiNDDRiVER(<EMAIL>)                     }\n"}]}, "char_changes": {"deleted": [{"char_start": 324, "char_end": 405, "chars": "{       Copyright (c) 2017 WiNDDRiVER(soulawing@gmail.com)                     }\n"}], "added": [{"char_start": 324, "char_end": 393, "chars": "{       Copyright (c) 2017 WiNDDRiVER(<EMAIL>)                     }\n"}]}}
{"func_name": 12371, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿{---------------------------------------------------------------------------------\r\n  X-Tend runtime\r\n\r\n  Contributors:\r\n    Vladimir Kustikov (kustikov@sensoft.pro)\r\n    Sergey Arlamenkov (arlamenkov@sensoft.pro)\r\n\r\n  You may retrieve the latest version of this file at the GitHub,\r\n  located at https://github.com/sensoftpro/x-tend.git\r\n ---------------------------------------------------------------------------------\r\n  MIT License\r\n\r\n  Copyright © 2021 Sensoft\r\n\r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n\r\n  The above copyright notice and this permission notice shall be included in all\r\n  copies or substantial portions of the Software.\r\n\r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n  SOFTWARE.\r\n ---------------------------------------------------------------------------------}\r\n\r\nunit uDomain;\r\n\r\ninterface\r\n\r\nuses\r\n  Generics.Collections, uFastClasses, Classes, SyncObjs, uModule, uConsts, uConfiguration, uDefinition,\r\n  uCollection, uEntity, uEntityList, uStorage, uSession, uChangeManager, uSettings, uLogger, uScheduler,\r\n  uTranslator, uJSON;\r\n\r\ntype\r\n  TNotifyProgressEvent = procedure (const AProgress: Integer; const AInfo: string) of object;\r\n  TNotifyErrorEvent = procedure (const ACaption, AText: string) of object;\r\n\r\n  TDomainLock = class\r\n  private\r\n    [Weak] FDomain: TObject;\r\n    [Weak] FCurrentSession: TUserSession;\r", "func_src_after": "﻿{---------------------------------------------------------------------------------\r\n  X-Tend runtime\r\n\r\n  Contributors:\r\n    Vladimir Kustikov (<EMAIL>)\r\n    Sergey Arlamenkov (<EMAIL>)\r\n\r\n  You may retrieve the latest version of this file at the GitHub,\r\n  located at https://github.com/sensoftpro/x-tend.git\r\n ---------------------------------------------------------------------------------\r\n  MIT License\r\n\r\n  Copyright © 2021 Sensoft\r\n\r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n\r\n  The above copyright notice and this permission notice shall be included in all\r\n  copies or substantial portions of the Software.\r\n\r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n  SOFTWARE.\r\n ---------------------------------------------------------------------------------}\r\n\r\nunit uDomain;\r\n\r\ninterface\r\n\r\nuses\r\n  Generics.Collections, uFastClasses, Classes, SyncObjs, uModule, uConsts, uConfiguration, uDefinition,\r\n  uCollection, uEntity, uEntityList, uStorage, uSession, uChangeManager, uSettings, uLogger, uScheduler,\r\n  uTranslator, uJSON;\r\n\r\ntype\r\n  TNotifyProgressEvent = procedure (const AProgress: Integer; const AInfo: string) of object;\r\n  TNotifyErrorEvent = procedure (const ACaption, AText: string) of object;\r\n\r\n  TDomainLock = class\r\n  private\r\n    [Weak] FDomain: TObject;\r\n    [Weak] FCurrentSession: TUserSession;\r", "line_changes": {"deleted": [{"line_no": 5, "char_start": 122, "char_end": 168, "line": "    Vladimir Kustikov (kustikov@sensoft.pro)\r\n"}, {"line_no": 6, "char_start": 122, "char_end": 170, "line": "    Sergey Arlamenkov (arlamenkov@sensoft.pro)\r\n"}], "added": [{"line_no": 7, "char_start": 122, "char_end": 155, "line": "    Vladimir Kustikov (<EMAIL>)\r\n"}, {"line_no": 8, "char_start": 155, "char_end": 188, "line": "    Sergey Arlamenkov (<EMAIL>)\r\n"}]}, "char_changes": {"deleted": [{"char_start": 122, "char_end": 168, "chars": "    Vladimir Kustikov (kustikov@sensoft.pro)\r\n"}, {"char_start": 122, "char_end": 170, "chars": "    Sergey Arlamenkov (arlamenkov@sensoft.pro)\r\n"}], "added": [{"char_start": 122, "char_end": 155, "chars": "    Vladimir Kustikov (<EMAIL>)\r\n"}, {"char_start": 155, "char_end": 188, "chars": "    Sergey Arlamenkov (<EMAIL>)\r\n"}]}}
{"func_name": 12379, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "{*!\n * Fano Web Framework (https://fanoframework.github.io)\n *\n * @link      https://github.com/fanoframework/fano\n * @copyright Copyright (c) 2018 - 2021 Zamrony P. Juhara\n * @license   https://github.com/fanoframework/fano/blob/master/LICENSE (MIT)\n *}\n\nunit VerbTunnellingDispatcherImpl;\n\ninterface\n\n{$MODE OBJFPC}\n\nuses\n\n    EnvironmentIntf,\n    StdInIntf,\n    ResponseIntf,\n    DispatcherIntf,\n    InjectableObjectImpl;\n\ntype\n\n    (*!---------------------------------------------------\n     * decorator dispatcher that wrap environment to allow\n     * HTTP verb to be override (verb tunneling).\n     *\n     * This class is provided so web application running behind\n     * strict policy firewall which only allows GET and POST can\n     * override its HTTP method using header X-Http-Method-Override\n     *\n     * @author Zamrony P. Juhara <zamronypj@yahoo.com>\n     *---------------------------------------------------*)\n    TVerbTunnellingDispatcher = class(TInjectableObject, IDispatcher)\n    private\n        fActualDispatcher : IDispatcher;\n    public\n        constructor create(const actualDispatcher : IDispatcher);\n        destructor destroy(); override;\n\n        (*!-------------------------------------------\n         * dispatch request\n         *--------------------------------------------\n         * @param env CGI environment\n         * @param stdIn STDIN reader\n         * @return response\n         *--------------------------------------------*)\n        function dispatchRequest(\n            const env: ICGIEnvironment;", "func_src_after": "{*!\n * Fano Web Framework (https://fanoframework.github.io)\n *\n * @link      https://github.com/fanoframework/fano\n * @copyright Copyright (c) 2018 - 2021 Zamrony P. Juhara\n * @license   https://github.com/fanoframework/fano/blob/master/LICENSE (MIT)\n *}\n\nunit VerbTunnellingDispatcherImpl;\n\ninterface\n\n{$MODE OBJFPC}\n\nuses\n\n    EnvironmentIntf,\n    StdInIntf,\n    ResponseIntf,\n    DispatcherIntf,\n    InjectableObjectImpl;\n\ntype\n\n    (*!---------------------------------------------------\n     * decorator dispatcher that wrap environment to allow\n     * HTTP verb to be override (verb tunneling).\n     *\n     * This class is provided so web application running behind\n     * strict policy firewall which only allows GET and POST can\n     * override its HTTP method using header X-Http-Method-Override\n     *\n     * @author Zamrony P. Juhara <<EMAIL>>\n     *---------------------------------------------------*)\n    TVerbTunnellingDispatcher = class(TInjectableObject, IDispatcher)\n    private\n        fActualDispatcher : IDispatcher;\n    public\n        constructor create(const actualDispatcher : IDispatcher);\n        destructor destroy(); override;\n\n        (*!-------------------------------------------\n         * dispatch request\n         *--------------------------------------------\n         * @param env CGI environment\n         * @param stdIn STDIN reader\n         * @return response\n         *--------------------------------------------*)\n        function dispatchRequest(\n            const env: ICGIEnvironment;", "line_changes": {"deleted": [{"line_no": 33, "char_start": 811, "char_end": 866, "line": "     * @author Zamrony P. Juhara <zamronypj@yahoo.com>\n"}], "added": [{"line_no": 34, "char_start": 811, "char_end": 854, "line": "     * @author Zamrony P. Juhara <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 811, "char_end": 866, "chars": "     * @author Zamrony P. Juhara <zamronypj@yahoo.com>\n"}], "added": [{"char_start": 811, "char_end": 854, "chars": "     * @author Zamrony P. Juhara <<EMAIL>>\n"}]}}
{"func_name": 12428, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": ";;; $Id: chap2a.scm,v 4.2 2006/11/09 18:51:21 queinnec Exp $\n\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n;;; This file is part of the files that accompany the book:\n;;;     LISP Implantation Semantique Programmation (InterEditions, France)\n;;; By Christian Queinnec <Christian.Queinnec@INRIA.fr>\n;;; Newest version may be retrieved from:\n;;;   (IP 128.93.2.54) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n;;; Check the README file before using this file.\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n\n;;; Excerpts of chapter 2 (Lisp1, Lisp2)\n\n(define (f.evaluate e env fenv)\n  (if (atom? e) \n      (cond ((symbol? e) (lookup e env))\n            ((or (number? e) (string? e) (char? e)\n                 (boolean? e) (vector? e) )\n             e )\n            (else (wrong \"Cannot evaluate\" e)) )\n      (case (car e)\n        ((quote)  (cadr e))\n        ((if)     (if (f.evaluate (cadr e) env fenv)\n                      (f.evaluate (caddr e) env fenv)\n                      (f.evaluate (cadddr e) env fenv) ))\n        ((begin)  (f.eprogn (cdr e) env fenv))\n        ((set!)   (update! (cadr e) \n                           env \n                           (f.evaluate (caddr e) env fenv) ))\n        ((lambda) (f.make-function (cadr e) (cddr e) env fenv))\n        (else     (evaluate-application (car e) \n                                        (f.evlis (cdr e) env fenv)\n                                        env \n                                        fenv )) ) ) )\n\n(define (f.evlis exps env fenv)\n  (if (pair? exps)\n      (cons (f.evaluate (car exps) env fenv)\n            (f.evlis (cdr exps) env fenv) )\n      '() ) )\n\n(define (f.eprogn exps env fenv)\n  (if (pair? exps)\n      (if (pair? (cdr exps))\n          (begin (f.evaluate (car exps) env fenv)\n                 (f.eprogn (cdr exps) env fenv) )\n          (f.evaluate (car exps) env fenv) )\n      empty-begin ) )\n\n(define (f.make-function variables body env fenv)", "func_src_after": ";;; $Id: chap2a.scm,v 4.2 2006/11/09 18:51:21 queinnec Exp $\n\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n;;; This file is part of the files that accompany the book:\n;;;     LISP Implantation Semantique Programmation (InterEditions, France)\n;;; By Christian Queinnec <<EMAIL>>\n;;; Newest version may be retrieved from:\n;;;   (IP <IP-Address>) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n;;; Check the README file before using this file.\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n\n;;; Excerpts of chapter 2 (Lisp1, Lisp2)\n\n(define (f.evaluate e env fenv)\n  (if (atom? e) \n      (cond ((symbol? e) (lookup e env))\n            ((or (number? e) (string? e) (char? e)\n                 (boolean? e) (vector? e) )\n             e )\n            (else (wrong \"Cannot evaluate\" e)) )\n      (case (car e)\n        ((quote)  (cadr e))\n        ((if)     (if (f.evaluate (cadr e) env fenv)\n                      (f.evaluate (caddr e) env fenv)\n                      (f.evaluate (cadddr e) env fenv) ))\n        ((begin)  (f.eprogn (cdr e) env fenv))\n        ((set!)   (update! (cadr e) \n                           env \n                           (f.evaluate (caddr e) env fenv) ))\n        ((lambda) (f.make-function (cadr e) (cddr e) env fenv))\n        (else     (evaluate-application (car e) \n                                        (f.evlis (cdr e) env fenv)\n                                        env \n                                        fenv )) ) ) )\n\n(define (f.evlis exps env fenv)\n  (if (pair? exps)\n      (cons (f.evaluate (car exps) env fenv)\n            (f.evlis (cdr exps) env fenv) )\n      '() ) )\n\n(define (f.eprogn exps env fenv)\n  (if (pair? exps)\n      (if (pair? (cdr exps))\n          (begin (f.evaluate (car exps) env fenv)\n                 (f.eprogn (cdr exps) env fenv) )\n          (f.evaluate (car exps) env fenv) )\n      empty-begin ) )\n\n(define (f.make-function variables body env fenv)", "line_changes": {"deleted": [{"line_no": 6, "char_start": 274, "char_end": 330, "line": ";;; By Christian Queinnec <Christian.Queinnec@INRIA.fr>\n"}, {"line_no": 9, "char_start": 352, "char_end": 428, "line": ";;;   (IP 128.93.2.54) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}], "added": [{"line_no": 7, "char_start": 274, "char_end": 310, "line": ";;; By Christian Queinnec <<EMAIL>>\n"}, {"line_no": 10, "char_start": 352, "char_end": 429, "line": ";;;   (IP <IP-Address>) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}]}, "char_changes": {"deleted": [{"char_start": 274, "char_end": 330, "chars": ";;; By Christian Queinnec <Christian.Queinnec@INRIA.fr>\n"}, {"char_start": 352, "char_end": 428, "chars": ";;;   (IP 128.93.2.54) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}], "added": [{"char_start": 274, "char_end": 310, "chars": ";;; By Christian Queinnec <<EMAIL>>\n"}, {"char_start": 352, "char_end": 429, "chars": ";;;   (IP <IP-Address>) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}]}}
{"func_name": 12449, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t  (gimp-edit-clear effect-layer)\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)\n\t  (gimp-image-set-active-layer image effect-layer ))\n\t(begin\n\t  (gimp-edit-copy drawable)))\n    (define active-layer (car (gimp-image-get-active-layer image)))\n\n    (gimp-selection-grow image glow-radius)\n    (gimp-selection-feather image feather-radius)\n    (gimp-context-set-background glow-color)\n    (gimp-edit-fill active-layer BACKGROUND-FILL)\n    \n    (if (= seperate-layer TRUE)\n\t(begin\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)\n\t  (gimp-edit-clear active-layer)\n\t  (gimp-layer-set-opacity active-layer glow-opacity))\n\t(begin\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)\n\t  (let ((floating-sel (car (gimp-edit-paste active-layer FALSE))))\n\t      (gimp-floating-sel-anchor floating-sel))\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)))\n    \n    (gimp-context-set-gradient old-gradient)\n    (gimp-context-set-background old-bg)\n    (gimp-context-set-foreground old-fg)\n    \n    (if (= keep-selection FALSE)\n\t(gimp-selection-none image))\n    \n    (gimp-image-set-active-layer image drawable)\n    (gimp-image-remove-channel image active-selection)\n    \n;Finish the undo group for the process\n    (gimp-image-undo-group-end image)   \n    \n    (gimp-displays-flush)))\n    ))\n\n(script-fu-register \"FU-glow-selection\"\n\t\t    \"<Image>/Script-Fu/Effects Selection/Glow Selection\"\n\t\t    \"Makes a \\\"glow\\\" around the outside of the current selection.\"\n\t\t    \"Adrian Likins <adrian@gimp.org>\"\n\t\t    \"Adrian Likins\"\n\t\t    \"10/12/97\"\n\t\t    \"*\"\n\t\t    SF-IMAGE \"Image\" 0\n\t\t    SF-DRAWABLE \"Drawable\" 0\n\t\t    SF-VALUE \"Glow Radius\" \"2\"\n\t\t    SF-VALUE \"Feather Radius\" \"10\"", "func_src_after": "\t  (gimp-edit-clear effect-layer)\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)\n\t  (gimp-image-set-active-layer image effect-layer ))\n\t(begin\n\t  (gimp-edit-copy drawable)))\n    (define active-layer (car (gimp-image-get-active-layer image)))\n\n    (gimp-selection-grow image glow-radius)\n    (gimp-selection-feather image feather-radius)\n    (gimp-context-set-background glow-color)\n    (gimp-edit-fill active-layer BACKGROUND-FILL)\n    \n    (if (= seperate-layer TRUE)\n\t(begin\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)\n\t  (gimp-edit-clear active-layer)\n\t  (gimp-layer-set-opacity active-layer glow-opacity))\n\t(begin\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)\n\t  (let ((floating-sel (car (gimp-edit-paste active-layer FALSE))))\n\t      (gimp-floating-sel-anchor floating-sel))\n\t  (gimp-image-select-item image CHANNEL-OP-REPLACE active-selection)))\n    \n    (gimp-context-set-gradient old-gradient)\n    (gimp-context-set-background old-bg)\n    (gimp-context-set-foreground old-fg)\n    \n    (if (= keep-selection FALSE)\n\t(gimp-selection-none image))\n    \n    (gimp-image-set-active-layer image drawable)\n    (gimp-image-remove-channel image active-selection)\n    \n;Finish the undo group for the process\n    (gimp-image-undo-group-end image)   \n    \n    (gimp-displays-flush)))\n    ))\n\n(script-fu-register \"FU-glow-selection\"\n\t\t    \"<Image>/Script-Fu/Effects Selection/Glow Selection\"\n\t\t    \"Makes a \\\"glow\\\" around the outside of the current selection.\"\n\t\t    \"Adrian Likins <EMAIL>>\"\n\t\t    \"Adrian Likins\"\n\t\t    \"10/12/97\"\n\t\t    \"*\"\n\t\t    SF-IMAGE \"Image\" 0\n\t\t    SF-DRAWABLE \"Drawable\" 0\n\t\t    SF-VALUE \"Glow Radius\" \"2\"\n\t\t    SF-VALUE \"Feather Radius\" \"10\"", "line_changes": {"deleted": [{"line_no": 43, "char_start": 1529, "char_end": 1569, "line": "\t\t    \"Adrian Likins <adrian@gimp.org>\"\n"}], "added": [{"line_no": 44, "char_start": 1529, "char_end": 1560, "line": "\t\t    \"Adrian Likins <EMAIL>>\"\n"}]}, "char_changes": {"deleted": [{"char_start": 1529, "char_end": 1569, "chars": "\t\t    \"Adrian Likins <adrian@gimp.org>\"\n"}], "added": [{"char_start": 1529, "char_end": 1560, "chars": "\t\t    \"Adrian Likins <EMAIL>>\"\n"}]}}
{"func_name": 12459, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": ";; Copyright (c) 2005, 2006, 2007, 2012, 2013 Per Bothner\n;; Added \"full\" support for Chicken, Gauche, Guile and SISC.\n;;   Alex Shinn, Copyright (c) 2005.\n;; Modified for Scheme Spheres by Álvaro Castro-Castilla, Copyright (c) 2012.\n;; Support for Guile 2 by Mark H Weaver <mhw@netris.org>, Copyright (c) 2014.\n;; Refactored by Taylan Ulrich Bayırlı/Kammer, Copyright (c) 2014, 2015.\n;;\n;; Permission is hereby granted, free of charge, to any person\n;; obtaining a copy of this software and associated documentation\n;; files (the \"Software\"), to deal in the Software without\n;; restriction, including without limitation the rights to use, copy,\n;; modify, merge, publish, distribute, sublicense, and/or sell copies\n;; of the Software, and to permit persons to whom the Software is\n;; furnished to do so, subject to the following conditions:\n;;\n;; The above copyright notice and this permission notice shall be\n;; included in all copies or substantial portions of the Software.\n;;\n;; THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n;; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n;; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n;; BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n;; ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n;; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n;; SOFTWARE.\n\n;;; Note: to prevent producing massive amounts of code from the macro-expand\n;;; phase (which makes compile times suffer and may hit code size limits in some\n;;; systems), keep macro bodies minimal by delegating work to procedures.\n\n\f\n;;; Grouping\n\n(define (maybe-install-default-runner suite-name)\n  (when (not (test-runner-current))\n    (let ((runner (test-runner-simple))\n          (log-file (string-append suite-name \".srfi64.log\")))\n      (%test-runner-log-file! runner log-file)\n      (test-runner-current runner))))\n\n(define test-begin\n  (case-lambda\n    ((name)\n     (test-begin name #f))\n    ((name count)\n     (maybe-install-default-runner name)\n     (let ((r (test-runner-current)))\n       (let ((skip-list (%test-runner-skip-list r))\n             (skip-save (%test-runner-skip-save r))", "func_src_after": ";; Copyright (c) 2005, 2006, 2007, 2012, 2013 Per Bothner\n;; Added \"full\" support for Chicken, Gauche, Guile and SISC.\n;;   Alex Shinn, Copyright (c) 2005.\n;; Modified for Scheme Spheres by Álvaro Castro-Castilla, Copyright (c) 2012.\n;; Support for Guile 2 by Mark H Weaver <<EMAIL>>, Copyright (c) 2014.\n;; Refactored by Taylan Ulrich Bayırlı/Kammer, Copyright (c) 2014, 2015.\n;;\n;; Permission is hereby granted, free of charge, to any person\n;; obtaining a copy of this software and associated documentation\n;; files (the \"Software\"), to deal in the Software without\n;; restriction, including without limitation the rights to use, copy,\n;; modify, merge, publish, distribute, sublicense, and/or sell copies\n;; of the Software, and to permit persons to whom the Software is\n;; furnished to do so, subject to the following conditions:\n;;\n;; The above copyright notice and this permission notice shall be\n;; included in all copies or substantial portions of the Software.\n;;\n;; THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n;; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n;; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n;; BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n;; ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n;; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n;; SOFTWARE.\n\n;;; Note: to prevent producing massive amounts of code from the macro-expand\n;;; phase (which makes compile times suffer and may hit code size limits in some\n;;; systems), keep macro bodies minimal by delegating work to procedures.\n\n\f\n;;; Grouping\n\n(define (maybe-install-default-runner suite-name)\n  (when (not (test-runner-current))\n    (let ((runner (test-runner-simple))\n          (log-file (string-append suite-name \".srfi64.log\")))\n      (%test-runner-log-file! runner log-file)\n      (test-runner-current runner))))\n\n(define test-begin\n  (case-lambda\n    ((name)\n     (test-begin name #f))\n    ((name count)\n     (maybe-install-default-runner name)\n     (let ((r (test-runner-current)))\n       (let ((skip-list (%test-runner-skip-list r))\n             (skip-save (%test-runner-skip-save r))", "line_changes": {"deleted": [{"line_no": 5, "char_start": 234, "char_end": 312, "line": ";; Support for Guile 2 by Mark H Weaver <mhw@netris.org>, Copyright (c) 2014.\n"}], "added": [{"line_no": 6, "char_start": 234, "char_end": 305, "line": ";; Support for Guile 2 by Mark H Weaver <<EMAIL>>, Copyright (c) 2014.\n"}]}, "char_changes": {"deleted": [{"char_start": 234, "char_end": 312, "chars": ";; Support for Guile 2 by Mark H Weaver <mhw@netris.org>, Copyright (c) 2014.\n"}], "added": [{"char_start": 234, "char_end": 305, "chars": ";; Support for Guile 2 by Mark H Weaver <<EMAIL>>, Copyright (c) 2014.\n"}]}}
{"func_name": 12481, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": ";;; $Id: chap6dd.scm,v 4.0 1995/07/10 06:51:39 queinnec Exp $\n\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n;;; This file is part of the files that accompany the book:\n;;;     LISP Implantation Semantique Programmation (InterEditions, France)\n;;; By Christian Queinnec <Christian.Queinnec@INRIA.fr>\n;;; Newest version may be retrieved from:\n;;;   (IP 128.93.2.54) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n;;; Check the README file before using this file.\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n\n;;; Variant of chap6d.scm where activation frames are allocated before\n;;; evaluation of arguments and where arguments are evaluated from\n;;; left to right.\n\n;;; Load before chap6d.scm\n\n(define (FROM-RIGHT-STORE-ARGUMENT m m* rank)\n  (lambda ()\n    (let* ((v* (m*))\n           (v (m)) )\n      (set-activation-frame-argument! v* rank v)\n      v* ) ) )\n\n(define (FROM-RIGHT-CONS-ARGUMENT m m* arity)\n  (lambda ()\n    (let* ((v* (m*))\n           (v (m)) )\n      (set-activation-frame-argument! \n       v* arity (cons v (activation-frame-argument v* arity)) )\n      v* ) ) )\n\n;;;  Retrofit\n\n(set! CONS-ARGUMENT FROM-RIGHT-CONS-ARGUMENT)\n(set! STORE-ARGUMENT FROM-RIGHT-STORE-ARGUMENT)\n\n;;; Redefine a global variable\n\n(define (meaning e r tail?)\n  (if (atom? e)\n      (if (symbol? e) (meaning-reference e r tail?)\n                      (meaning-quotation e r tail?) )\n      (case (car e)\n        ((quote)  (meaning-quotation (cadr e) r tail?))\n        ((lambda) (meaning-abstraction (cadr e) (cddr e) r tail?))\n        ((if)     (meaning-alternative (cadr e) (caddr e) (cadddr e) r tail?))\n        ((begin)  (meaning-sequence (cdr e) r tail?))\n        ((set!)   (meaning-assignment (cadr e) (caddr e) r tail?))\n        ((redefine) (meaning-redefine (cadr e)))", "func_src_after": ";;; $Id: chap6dd.scm,v 4.0 1995/07/10 06:51:39 queinnec Exp $\n\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n;;; This file is part of the files that accompany the book:\n;;;     LISP Implantation Semantique Programmation (InterEditions, France)\n;;; By Christian Queinnec <<EMAIL>>\n;;; Newest version may be retrieved from:\n;;;   (IP <IP-Address>) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n;;; Check the README file before using this file.\n;;;(((((((((((((((((((((((((((((((( L i S P ))))))))))))))))))))))))))))))))\n\n;;; Variant of chap6d.scm where activation frames are allocated before\n;;; evaluation of arguments and where arguments are evaluated from\n;;; left to right.\n\n;;; Load before chap6d.scm\n\n(define (FROM-RIGHT-STORE-ARGUMENT m m* rank)\n  (lambda ()\n    (let* ((v* (m*))\n           (v (m)) )\n      (set-activation-frame-argument! v* rank v)\n      v* ) ) )\n\n(define (FROM-RIGHT-CONS-ARGUMENT m m* arity)\n  (lambda ()\n    (let* ((v* (m*))\n           (v (m)) )\n      (set-activation-frame-argument! \n       v* arity (cons v (activation-frame-argument v* arity)) )\n      v* ) ) )\n\n;;;  Retrofit\n\n(set! CONS-ARGUMENT FROM-RIGHT-CONS-ARGUMENT)\n(set! STORE-ARGUMENT FROM-RIGHT-STORE-ARGUMENT)\n\n;;; Redefine a global variable\n\n(define (meaning e r tail?)\n  (if (atom? e)\n      (if (symbol? e) (meaning-reference e r tail?)\n                      (meaning-quotation e r tail?) )\n      (case (car e)\n        ((quote)  (meaning-quotation (cadr e) r tail?))\n        ((lambda) (meaning-abstraction (cadr e) (cddr e) r tail?))\n        ((if)     (meaning-alternative (cadr e) (caddr e) (cadddr e) r tail?))\n        ((begin)  (meaning-sequence (cdr e) r tail?))\n        ((set!)   (meaning-assignment (cadr e) (caddr e) r tail?))\n        ((redefine) (meaning-redefine (cadr e)))", "line_changes": {"deleted": [{"line_no": 6, "char_start": 275, "char_end": 331, "line": ";;; By Christian Queinnec <Christian.Queinnec@INRIA.fr>\n"}, {"line_no": 9, "char_start": 353, "char_end": 429, "line": ";;;   (IP 128.93.2.54) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}], "added": [{"line_no": 7, "char_start": 275, "char_end": 311, "line": ";;; By Christian Queinnec <<EMAIL>>\n"}, {"line_no": 10, "char_start": 353, "char_end": 430, "line": ";;;   (IP <IP-Address>) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}]}, "char_changes": {"deleted": [{"char_start": 275, "char_end": 331, "chars": ";;; By Christian Queinnec <Christian.Queinnec@INRIA.fr>\n"}, {"char_start": 353, "char_end": 429, "chars": ";;;   (IP 128.93.2.54) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}], "added": [{"char_start": 275, "char_end": 311, "chars": ";;; By Christian Queinnec <<EMAIL>>\n"}, {"char_start": 353, "char_end": 430, "chars": ";;;   (IP <IP-Address>) ftp.inria.fr:INRIA/Projects/icsla/Books/LiSP*.tar.gz\n"}]}}
{"func_name": 12494, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "; GIMP - The GNU Image Manipulation Program\n; Copyright (C) 1995 Spencer Kimball and Peter Mattis\n;\n; xach effect script\n; Copyright (c) 1997 Adrian Likins\n; aklikins@eos.ncsu.edu\n;\n; based on a idea by Xach Beane <xach@mint.net>\n;\n;\n; This program is free software: you can redistribute it and/or modify\n; it under the terms of the GNU General Public License as published by\n; the Free Software Foundation; either version 3 of the License, or\n; (at your option) any later version.\n;\n; This program is distributed in the hope that it will be useful,\n; but WITHOUT ANY WARRANTY; without even the implied warranty of\n; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n; GNU General Public License for more details.\n;\n; You should have received a copy of the GNU General Public License\n; along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n(define (script-fu-xach-effect image\n                               drawable\n                               hl-offset-x\n                               hl-offset-y\n                               hl-color\n                               hl-opacity-comp\n                               ds-color\n                               ds-opacity\n                               ds-blur\n                               ds-offset-x\n                               ds-offset-y\n                               keep-selection)\n  (let* (\n        (ds-blur (max ds-blur 0))\n        (ds-opacity (min ds-opacity 100))\n        (ds-opacity (max ds-opacity 0))\n        (type (car (gimp-drawable-type-with-alpha drawable)))\n        (image-width (car (gimp-image-width image)))\n        (hl-opacity (list hl-opacity-comp hl-opacity-comp hl-opacity-comp))\n        (image-height (car (gimp-image-height image)))\n        (active-selection 0)\n        (from-selection 0)\n        (theLayer 0)\n        (hl-layer 0)\n        (shadow-layer 0)\n        (mask 0)", "func_src_after": "; GIMP - The GNU Image Manipulation Program\n; Copyright (C) 1995 Spencer Kimball and Peter Mattis\n;\n; xach effect script\n; Copyright (c) 1997 Adrian Likins\n; <EMAIL>\n;\n; based on a idea by Xach Beane <<EMAIL>>\n;\n;\n; This program is free software: you can redistribute it and/or modify\n; it under the terms of the GNU General Public License as published by\n; the Free Software Foundation; either version 3 of the License, or\n; (at your option) any later version.\n;\n; This program is distributed in the hope that it will be useful,\n; but WITHOUT ANY WARRANTY; without even the implied warranty of\n; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n; GNU General Public License for more details.\n;\n; You should have received a copy of the GNU General Public License\n; along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n(define (script-fu-xach-effect image\n                               drawable\n                               hl-offset-x\n                               hl-offset-y\n                               hl-color\n                               hl-opacity-comp\n                               ds-color\n                               ds-opacity\n                               ds-blur\n                               ds-offset-x\n                               ds-offset-y\n                               keep-selection)\n  (let* (\n        (ds-blur (max ds-blur 0))\n        (ds-opacity (min ds-opacity 100))\n        (ds-opacity (max ds-opacity 0))\n        (type (car (gimp-drawable-type-with-alpha drawable)))\n        (image-width (car (gimp-image-width image)))\n        (hl-opacity (list hl-opacity-comp hl-opacity-comp hl-opacity-comp))\n        (image-height (car (gimp-image-height image)))\n        (active-selection 0)\n        (from-selection 0)\n        (theLayer 0)\n        (hl-layer 0)\n        (shadow-layer 0)\n        (mask 0)", "line_changes": {"deleted": [{"line_no": 6, "char_start": 156, "char_end": 180, "line": "; aklikins@eos.ncsu.edu\n"}, {"line_no": 9, "char_start": 168, "char_end": 216, "line": "; based on a idea by Xach Beane <xach@mint.net>\n"}], "added": [{"line_no": 7, "char_start": 156, "char_end": 166, "line": "; <EMAIL>\n"}, {"line_no": 10, "char_start": 168, "char_end": 210, "line": "; based on a idea by Xach Beane <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 156, "char_end": 180, "chars": "; aklikins@eos.ncsu.edu\n"}, {"char_start": 168, "char_end": 216, "chars": "; based on a idea by Xach Beane <xach@mint.net>\n"}], "added": [{"char_start": 156, "char_end": 166, "chars": "; <EMAIL>\n"}, {"char_start": 168, "char_end": 210, "chars": "; based on a idea by Xach Beane <<EMAIL>>\n"}]}}
{"func_name": 12523, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "*! Part of package matrixtools v. 0.24\n*! Support: Niels Henrik Bruun, nhbr@ph.au.dk\n/*\n2017-08-31 >\tWhen the dataset changed it is saved \n2017-07-21 >\tBug in metadata regarding value labels fixed\n*/\n* TODO: Filters such as max filesize\n* TODO: Undgå at ikke gemte tilføjelser slettes med metadata\nprogram define metadata\n\tversion 12.1\n\tsyntax [anything(name=vlst)] [using/], ///\n\t\t\t[SAvein(string) Keep noLog SEarchsubdirs noQuietly ///\n\t\t\tStyle(string) Caption(string) TOp(string) Undertop(string) Bottom(string)]\n\n\tlocal QUIETLY \"quietly\"\n\tif \"`quietly'\" != \"\" local QUIETLY \"\"\n\tif \"`vlst'\" == \"\" local vlst *\n\n\t`QUIETLY' {\n\t\tdisplay \"NoQuietly turned on\"\n\t\tif \"`keep'\" == \"\" {\n\t\t\tif `c(changed)' {\n\t\t\t\ttempfile tmpdata\n\t\t\t\tsave `tmpdata', replace\n\t\t\t\tlocal current_file = `\"`tmpdata'\"'\n\t\t\t}\n\t\t\telse local current_file = subinstr(\"$S_FN\", \"\\\", \"/\", .)\n\t\t}\n\t\tif `\"`using'\"' != \"\" {\n\t\t\tmata: __vd = metadata(`\"`using'\"', `\"`vlst'\"', `=`\"`searchsubdirs'\"' != \"\"')\n\t\t\tmata: __justify = (\"-\", \"-\", \"\", \"-\", \"\", \"-\", \"-\", \"-\", \"-\", \"\")\n\t\t}\n\t\telse {\n\t\t\tlocal current_file = subinstr(\"$S_FN\", \"\\\", \"/\", .)\n\t\t\tunab __vlst : `vlst'\n\t\t\tmata: __vd = nhb_msa_variable_description(`\"`__vlst'\"')\n\t\t\tmata: __justify = (\"-\", \"\", \"-\", \"-\", \"-\", \"-\", \"\")\n\t\t}\n\t\tclear\n\t\tmata: nhb_sae_addvars(strlower(__vd[1,.]), __vd[2..rows(__vd),.])\n\t\tcompress\n\t\tdestring, replace\n\t\tcapture format %15.3f Filesize_kb\n\t\tlabel data \"metadata search. See notes for command and pwd\"\n\t\tnotes: COMMAND: metadata `0'\n\t\tnotes: PWD: `c(pwd)'\n\t\tif `\"`savein'\"' != \"\" quietly {\n\t\t\tlocal __replace 0\n\t\t\tif regexm(`\"`savein'\"', \"^(.+) *, *replace *\") {\n\t\t\t\tlocal __replace = 1", "func_src_after": "*! Part of package matrixtools v. 0.24\n*! Support: Niels Henrik Bruun, <EMAIL>\n/*\n2017-08-31 >\tWhen the dataset changed it is saved \n2017-07-21 >\tBug in metadata regarding value labels fixed\n*/\n* TODO: Filters such as max filesize\n* TODO: Undgå at ikke gemte tilføjelser slettes med metadata\nprogram define metadata\n\tversion 12.1\n\tsyntax [anything(name=vlst)] [using/], ///\n\t\t\t[SAvein(string) Keep noLog SEarchsubdirs noQuietly ///\n\t\t\tStyle(string) Caption(string) TOp(string) Undertop(string) Bottom(string)]\n\n\tlocal QUIETLY \"quietly\"\n\tif \"`quietly'\" != \"\" local QUIETLY \"\"\n\tif \"`vlst'\" == \"\" local vlst *\n\n\t`QUIETLY' {\n\t\tdisplay \"NoQuietly turned on\"\n\t\tif \"`keep'\" == \"\" {\n\t\t\tif `c(changed)' {\n\t\t\t\ttempfile tmpdata\n\t\t\t\tsave `tmpdata', replace\n\t\t\t\tlocal current_file = `\"`tmpdata'\"'\n\t\t\t}\n\t\t\telse local current_file = subinstr(\"$S_FN\", \"\\\", \"/\", .)\n\t\t}\n\t\tif `\"`using'\"' != \"\" {\n\t\t\tmata: __vd = metadata(`\"`using'\"', `\"`vlst'\"', `=`\"`searchsubdirs'\"' != \"\"')\n\t\t\tmata: __justify = (\"-\", \"-\", \"\", \"-\", \"\", \"-\", \"-\", \"-\", \"-\", \"\")\n\t\t}\n\t\telse {\n\t\t\tlocal current_file = subinstr(\"$S_FN\", \"\\\", \"/\", .)\n\t\t\tunab __vlst : `vlst'\n\t\t\tmata: __vd = nhb_msa_variable_description(`\"`__vlst'\"')\n\t\t\tmata: __justify = (\"-\", \"\", \"-\", \"-\", \"-\", \"-\", \"\")\n\t\t}\n\t\tclear\n\t\tmata: nhb_sae_addvars(strlower(__vd[1,.]), __vd[2..rows(__vd),.])\n\t\tcompress\n\t\tdestring, replace\n\t\tcapture format %15.3f Filesize_kb\n\t\tlabel data \"metadata search. See notes for command and pwd\"\n\t\tnotes: COMMAND: metadata `0'\n\t\tnotes: PWD: `c(pwd)'\n\t\tif `\"`savein'\"' != \"\" quietly {\n\t\t\tlocal __replace 0\n\t\t\tif regexm(`\"`savein'\"', \"^(.+) *, *replace *\") {\n\t\t\t\tlocal __replace = 1", "line_changes": {"deleted": [{"line_no": 2, "char_start": 39, "char_end": 85, "line": "*! Support: Niels Henrik Bruun, nhbr@ph.au.dk\n"}], "added": [{"line_no": 3, "char_start": 39, "char_end": 79, "line": "*! Support: Niels Henrik Bruun, <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 39, "char_end": 85, "chars": "*! Support: Niels Henrik Bruun, nhbr@ph.au.dk\n"}], "added": [{"char_start": 39, "char_end": 79, "chars": "*! Support: Niels Henrik Bruun, <EMAIL>\n"}]}}
{"func_name": 12558, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "networking going on... more than I would have expected.\nI thoughit it was going to be mainly net-surfers trying to\nsnag files from far away places. Today, I helped out\na meteorologist at a university who wants to collect\ndoppler radar data on coherent and distribute it via\ncohulip to end users. Another guy, in England, wants\nto run a mail hub in a business. He'd never seen the\n.gtz file extension, due to his dos background, and\ndidn't know exactly how to go about using ftp to get\nfiles from raven. These things seem typical. I get\nso tied up in bits and bytes that I totally forget\nwho it is who must use this stuff.\n\n\tRecently, I got a phone call from a guy\nin Florida who had written a login program that works\nwith the arcnet driver. He wanted to send me a copy,\nso I said great, why not email it. Well, he doesn't\nhave any email services.. So he sent it by snail\nmail. hmmmm... I could be unaware of a whole world of\npeople. \n\nDoes MWC keep any sort of profiles on 'typical' COHERENT \nusers? I wonder, when I post messages to comp.os.coherent, \nwhat proportion of people I am _not_ reaching?\n\n\n-- Randy\n\n\n\n\u0001\u0001\u0001\u0001\n\u0001\u0001\u0001\u0001\nFrom mwc!gateway!wimsey.com!rwsyss!rw Mon Aug 29 01:27:26 1994\nReturn-Path: <mwc!gateway!wimsey.com!rwsyss!rw>\nReceived: from mwc by lepanto.mwc.com with uucp\n\t(Smail3.1.28.1 #3) id m0qf0Bi-0001CCC; Mon, 29 Aug 94 01:27 CDT\nReceived: by mwc.com (smail2.5.3-coh) id AA19293; 29 Aug 94 05:07:34 GMT (Mon)\nReceived: from rci.ripco.com by gateway.mwc.com with smtp\n\t(Smail3.1.28.1 #23) id m0qey8L-00026jC; Sun, 28 Aug 94 23:15 CDT\nReceived: from wolfe.wimsey.com by rci.ripco.com with smtp\n\t(Smail3.1.28.1 #9) id m0qevbG-000JosB; Sun, 28 Aug 94 20:33 CDT\nReceived: from rwsyss by wolfe.wimsey.com with uucp\n\t(Smail3.1.28.1 #9) id m0qevcr-0007XAC; Sun, 28 Aug 94 18:35 PDT\nReceived: by rwsys.wimsey.bc.ca (Smail3.1.28.1 #1)\n\tid m0qevW0-0000yTC; Sun, 28 Aug 94 18:28 PDT\nMessage-Id: <m0qevW0-0000yTC@rwsys.wimsey.bc.ca>\nDate: Sun, 28 Aug 94 18:28 PDT\nFrom: rw@rwsys.wimsey.bc.ca (RW)\nTo: fred@lepanto.mwc.com\nSubject: Re: manual", "func_src_after": "networking going on... more than I would have expected.\nI thoughit it was going to be mainly net-surfers trying to\nsnag files from far away places. Today, I helped out\na meteorologist at a university who wants to collect\ndoppler radar data on coherent and distribute it via\ncohulip to end users. Another guy, in England, wants\nto run a mail hub in a business. He'd never seen the\n.gtz file extension, due to his dos background, and\ndidn't know exactly how to go about using ftp to get\nfiles from raven. These things seem typical. I get\nso tied up in bits and bytes that I totally forget\nwho it is who must use this stuff.\n\n\tRecently, I got a phone call from a guy\nin Florida who had written a login program that works\nwith the arcnet driver. He wanted to send me a copy,\nso I said great, why not email it. Well, he doesn't\nhave any email services.. So he sent it by snail\nmail. hmmmm... I could be unaware of a whole world of\npeople. \n\nDoes MWC keep any sort of profiles on 'typical' COHERENT \nusers? I wonder, when I post messages to comp.os.coherent, \nwhat proportion of people I am _not_ reaching?\n\n\n-- Randy\n\n\n\n\u0001\u0001\u0001\u0001\n\u0001\u0001\u0001\u0001\nFrom mwc!gateway!wimsey.com!rwsyss!rw Mon Aug 29 01:27:26 1994\nReturn-Path: <mwc!gateway!wimsey.com!rwsyss!rw>\nReceived: from mwc by lepanto.mwc.com with uucp\n\t(Smail<IP-Address> #3) id m0qf0Bi-0001CCC; Mon, 29 Aug 94 01:27 CDT\nReceived: by mwc.com (smail2.5.3-coh) id AA19293; 29 Aug 94 05:07:34 GMT (Mon)\nReceived: from rci.ripco.com by gateway.mwc.com with smtp\n\t(Smail<IP-Address> #23) id m0qey8L-00026jC; Sun, 28 Aug 94 23:15 CDT\nReceived: from wolfe.wimsey.com by rci.ripco.com with smtp\n\t(Smail<IP-Address> #9) id m0qevbG-000JosB; Sun, 28 Aug 94 20:33 CDT\nReceived: from rwsyss by wolfe.wimsey.com with uucp\n\t(Smail<IP-Address> #9) id m0qevcr-0007XAC; Sun, 28 Aug 94 18:35 PDT\nReceived: by rwsys.wimsey.bc.ca (Smail<IP-Address> #1)\n\tid m0qevW0-0000yTC; Sun, 28 Aug 94 18:28 PDT\nMessage-Id: <<EMAIL>>\nDate: Sun, 28 Aug 94 18:28 PDT\nFrom: <EMAIL> (RW)\nTo: <EMAIL>\nSubject: Re: manual", "line_changes": {"deleted": [{"line_no": 36, "char_start": 1284, "char_end": 1349, "line": "\t(Smail3.1.28.1 #3) id m0qf0Bi-0001CCC; Mon, 29 Aug 94 01:27 CDT\n"}, {"line_no": 40, "char_start": 1490, "char_end": 1556, "line": "\t(Smail3.1.28.1 #23) id m0qey8L-00026jC; Sun, 28 Aug 94 23:15 CDT\n"}, {"line_no": 43, "char_start": 1619, "char_end": 1684, "line": "\t(Smail3.1.28.1 #9) id m0qevbG-000JosB; Sun, 28 Aug 94 20:33 CDT\n"}, {"line_no": 46, "char_start": 1740, "char_end": 1805, "line": "\t(Smail3.1.28.1 #9) id m0qevcr-0007XAC; Sun, 28 Aug 94 18:35 PDT\n"}, {"line_no": 48, "char_start": 1809, "char_end": 1860, "line": "Received: by rwsys.wimsey.bc.ca (Smail3.1.28.1 #1)\n"}, {"line_no": 51, "char_start": 1910, "char_end": 1959, "line": "Message-Id: <m0qevW0-0000yTC@rwsys.wimsey.bc.ca>\n"}, {"line_no": 54, "char_start": 1963, "char_end": 1996, "line": "From: rw@rwsys.wimsey.bc.ca (RW)\n"}, {"line_no": 55, "char_start": 1963, "char_end": 1988, "line": "To: fred@lepanto.mwc.com\n"}], "added": [{"line_no": 37, "char_start": 1284, "char_end": 1353, "line": "\t(Smail<IP-Address> #3) id m0qf0Bi-0001CCC; Mon, 29 Aug 94 01:27 CDT\n"}, {"line_no": 41, "char_start": 1490, "char_end": 1560, "line": "\t(Smail<IP-Address> #23) id m0qey8L-00026jC; Sun, 28 Aug 94 23:15 CDT\n"}, {"line_no": 44, "char_start": 1619, "char_end": 1688, "line": "\t(Smail<IP-Address> #9) id m0qevbG-000JosB; Sun, 28 Aug 94 20:33 CDT\n"}, {"line_no": 47, "char_start": 1740, "char_end": 1809, "line": "\t(Smail<IP-Address> #9) id m0qevcr-0007XAC; Sun, 28 Aug 94 18:35 PDT\n"}, {"line_no": 49, "char_start": 1809, "char_end": 1864, "line": "Received: by rwsys.wimsey.bc.ca (Smail<IP-Address> #1)\n"}, {"line_no": 52, "char_start": 1910, "char_end": 1932, "line": "Message-Id: <<EMAIL>>\n"}, {"line_no": 56, "char_start": 1963, "char_end": 1982, "line": "From: <EMAIL> (RW)\n"}, {"line_no": 57, "char_start": 1982, "char_end": 1994, "line": "To: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 1284, "char_end": 1349, "chars": "\t(Smail3.1.28.1 #3) id m0qf0Bi-0001CCC; Mon, 29 Aug 94 01:27 CDT\n"}, {"char_start": 1490, "char_end": 1556, "chars": "\t(Smail3.1.28.1 #23) id m0qey8L-00026jC; Sun, 28 Aug 94 23:15 CDT\n"}, {"char_start": 1619, "char_end": 1684, "chars": "\t(Smail3.1.28.1 #9) id m0qevbG-000JosB; Sun, 28 Aug 94 20:33 CDT\n"}, {"char_start": 1740, "char_end": 1805, "chars": "\t(Smail3.1.28.1 #9) id m0qevcr-0007XAC; Sun, 28 Aug 94 18:35 PDT\n"}, {"char_start": 1809, "char_end": 1860, "chars": "Received: by rwsys.wimsey.bc.ca (Smail3.1.28.1 #1)\n"}, {"char_start": 1910, "char_end": 1959, "chars": "Message-Id: <m0qevW0-0000yTC@rwsys.wimsey.bc.ca>\n"}, {"char_start": 1963, "char_end": 1996, "chars": "From: rw@rwsys.wimsey.bc.ca (RW)\n"}, {"char_start": 1963, "char_end": 1988, "chars": "To: fred@lepanto.mwc.com\n"}], "added": [{"char_start": 1284, "char_end": 1353, "chars": "\t(Smail<IP-Address> #3) id m0qf0Bi-0001CCC; Mon, 29 Aug 94 01:27 CDT\n"}, {"char_start": 1490, "char_end": 1560, "chars": "\t(Smail<IP-Address> #23) id m0qey8L-00026jC; Sun, 28 Aug 94 23:15 CDT\n"}, {"char_start": 1619, "char_end": 1688, "chars": "\t(Smail<IP-Address> #9) id m0qevbG-000JosB; Sun, 28 Aug 94 20:33 CDT\n"}, {"char_start": 1740, "char_end": 1809, "chars": "\t(Smail<IP-Address> #9) id m0qevcr-0007XAC; Sun, 28 Aug 94 18:35 PDT\n"}, {"char_start": 1809, "char_end": 1864, "chars": "Received: by rwsys.wimsey.bc.ca (Smail<IP-Address> #1)\n"}, {"char_start": 1910, "char_end": 1932, "chars": "Message-Id: <<EMAIL>>\n"}, {"char_start": 1963, "char_end": 1982, "chars": "From: <EMAIL> (RW)\n"}, {"char_start": 1982, "char_end": 1994, "chars": "To: <EMAIL>\n"}]}}
{"func_name": 12561, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n----------------------cut\nhostname nanguo.cstpl.com.au\nattach asy 0 /dev/asy01fl slip sl0 0 1500 9600 ATDT512692\\r\nip address 203.1.96.1\nroute add 147.132.76.1 sl0\nroute add 147.132.77.3 sl0\nroute add default sl0\nip ttl 32\ntcp mss 1048\ntcp window 1048\ntcp irtt 2000\neol unix\nstart smtp\nstart telunix 23\nstart echo\nstart finger\nstart ftp\n----------------------cut\nThis one is a bit different, its raven. I have had to xxxx the phone number\nbut. I promised jay beavers that I would not divulge it. This one has a\nfloating address, so i have to see it, and type it in,\nNOTE, the line beginning attach is ONE line\n----------------------cut\nhostname nanguo.cstpl.com.au\nattach asy 0 /dev/asy01fl slip sl0 0 1500 9600 AT&F\\r OK ATX0E1V1Q0M3DTxxxxxxxxxx\\r CONNECT \\r UAF-DU-04> show\\sport\\sslip\\r UAF-DU-04> c\\sslip\\r session\n#domain addserver 137.229.10.39\nroute add default sl0\nip ttl 32\ntcp mss 1048\ntcp window 1048\ntcp irtt 2000\neol unix\nstart smtp\nstart telunix 23\nstart echo\nstart finger\nstart ftp\n-----------------------cut\n\nHope thats of some help Fred. My turn :-). Could you ask your service\nprovider if they have a connection point in Meriden CT. please, and if they\nare interested in 'joint ventures'. Failing that, is there a overall\nInternet org in the US. I know, bad english..\n\nbest regards,\nBob\n\n\n-- ", "func_src_after": "\n----------------------cut\nhostname nanguo.cstpl.com.au\nattach asy 0 /dev/asy01fl slip sl0 0 1500 9600 ATDT512692\\r\nip address <IP-Address>\nroute add <IP-Address> sl0\nroute add <IP-Address> sl0\nroute add default sl0\nip ttl 32\ntcp mss 1048\ntcp window 1048\ntcp irtt 2000\neol unix\nstart smtp\nstart telunix 23\nstart echo\nstart finger\nstart ftp\n----------------------cut\nThis one is a bit different, its raven. I have had to xxxx the phone number\nbut. I promised jay beavers that I would not divulge it. This one has a\nfloating address, so i have to see it, and type it in,\nNOTE, the line beginning attach is ONE line\n----------------------cut\nhostname nanguo.cstpl.com.au\nattach asy 0 /dev/asy01fl slip sl0 0 1500 9600 AT&F\\r OK ATX0E1V1Q0M3DTxxxxxxxxxx\\r CONNECT \\r UAF-DU-04> show\\sport\\sslip\\r UAF-DU-04> c\\sslip\\r session\n#domain addserver <IP-Address>\nroute add default sl0\nip ttl 32\ntcp mss 1048\ntcp window 1048\ntcp irtt 2000\neol unix\nstart smtp\nstart telunix 23\nstart echo\nstart finger\nstart ftp\n-----------------------cut\n\nHope thats of some help Fred. My turn :-). Could you ask your service\nprovider if they have a connection point in Meriden CT. please, and if they\nare interested in 'joint ventures'. Failing that, is there a overall\nInternet org in the US. I know, bad english..\n\nbest regards,\nBob\n\n\n-- ", "line_changes": {"deleted": [{"line_no": 5, "char_start": 116, "char_end": 138, "line": "ip address 203.1.96.1\n"}, {"line_no": 6, "char_start": 116, "char_end": 143, "line": "route add 147.132.76.1 sl0\n"}, {"line_no": 7, "char_start": 116, "char_end": 143, "line": "route add 147.132.77.3 sl0\n"}, {"line_no": 30, "char_start": 822, "char_end": 854, "line": "#domain addserver 137.229.10.39\n"}], "added": [{"line_no": 8, "char_start": 116, "char_end": 140, "line": "ip address <IP-Address>\n"}, {"line_no": 9, "char_start": 140, "char_end": 167, "line": "route add <IP-Address> sl0\n"}, {"line_no": 10, "char_start": 167, "char_end": 194, "line": "route add <IP-Address> sl0\n"}, {"line_no": 31, "char_start": 822, "char_end": 853, "line": "#domain addserver <IP-Address>\n"}]}, "char_changes": {"deleted": [{"char_start": 116, "char_end": 138, "chars": "ip address 203.1.96.1\n"}, {"char_start": 116, "char_end": 143, "chars": "route add 147.132.76.1 sl0\n"}, {"char_start": 116, "char_end": 143, "chars": "route add 147.132.77.3 sl0\n"}, {"char_start": 822, "char_end": 854, "chars": "#domain addserver 137.229.10.39\n"}], "added": [{"char_start": 116, "char_end": 140, "chars": "ip address <IP-Address>\n"}, {"char_start": 140, "char_end": 167, "chars": "route add <IP-Address> sl0\n"}, {"char_start": 167, "char_end": 194, "chars": "route add <IP-Address> sl0\n"}, {"char_start": 822, "char_end": 853, "chars": "#domain addserver <IP-Address>\n"}]}}
{"func_name": 12603, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "*! version 1.0, 01Dec2004, John_Hendrickx@yahoo.com\n\n/*\nCalled by -coldiag2- to print the condition indexes\nand variance-decomposition proportions.\nSensitive to linesize, options for compact printing,\nand for suppressing variance-decomposition proportions\nbelow a specified 'fuzz' value.\n*/\n\nprogram define prnt_cx\n\tversion 7\n\tsyntax [,Matname(string) w(integer 12) d(integer 2) Space(integer 1) FUzz(real .3) FOrce Char(string)]\n\n\tif \"`matname'\" == \"\" {\n\t\ttempname Y\n\t\tcapture matrix `Y'=r(cx),r(pi)\n\t\tlocal matname=\"`Y'\"\n\t}\n\t* if `matname' is still empty then something went wrong\n\tif \"`matname'\" == \"\" {\n\t\tdisplay as error \"Use {cmd:print_cx} after coldiag2\"\n\t\tdisplay as error \"Matrix r(cx) and/or matrix r(pi) not found\"\n\t\texit\n\t}\n\n\t* get requisite information\n\tlocal pgwd: set linesize\n\tlocal nrow=rowsof(`matname')\n\tlocal ncol=colsof(`matname')\n\tlocal vnames: colnames `matname'\n\tlocal vnames: subinstr local vnames \"CX \" \"\"\n\n\t* \"fuzz\" replacement character, default \".\"\n\tif \"`char'\" == \"\" {\n\t\tlocal char \".\"\n\t}\n\telse {\n\t\tlocal char=substr(\"`char'\",1,1)\n\t}\n\n\tif \"`force'\" == \"force\" {\n\t\t* print width must be at least 5, function -abbrev- doesn't go any lower\n\t\tlocal w=max(`w',5)\n\t\tlocal orig_vnames \"`vnames'\"\n\t\tlocal vnames\n\t\tforeach nm of local orig_vnames {\n\t\t\tlocal el=abbrev(\"`nm'\",`w')\n\t\t\tlocal vnames=\"`vnames' `el'\"\n\t\t}", "func_src_after": "*! version 1.0, 01Dec2004, <EMAIL>\n\n/*\nCalled by -coldiag2- to print the condition indexes\nand variance-decomposition proportions.\nSensitive to linesize, options for compact printing,\nand for suppressing variance-decomposition proportions\nbelow a specified 'fuzz' value.\n*/\n\nprogram define prnt_cx\n\tversion 7\n\tsyntax [,Matname(string) w(integer 12) d(integer 2) Space(integer 1) FUzz(real .3) FOrce Char(string)]\n\n\tif \"`matname'\" == \"\" {\n\t\ttempname Y\n\t\tcapture matrix `Y'=r(cx),r(pi)\n\t\tlocal matname=\"`Y'\"\n\t}\n\t* if `matname' is still empty then something went wrong\n\tif \"`matname'\" == \"\" {\n\t\tdisplay as error \"Use {cmd:print_cx} after coldiag2\"\n\t\tdisplay as error \"Matrix r(cx) and/or matrix r(pi) not found\"\n\t\texit\n\t}\n\n\t* get requisite information\n\tlocal pgwd: set linesize\n\tlocal nrow=rowsof(`matname')\n\tlocal ncol=colsof(`matname')\n\tlocal vnames: colnames `matname'\n\tlocal vnames: subinstr local vnames \"CX \" \"\"\n\n\t* \"fuzz\" replacement character, default \".\"\n\tif \"`char'\" == \"\" {\n\t\tlocal char \".\"\n\t}\n\telse {\n\t\tlocal char=substr(\"`char'\",1,1)\n\t}\n\n\tif \"`force'\" == \"force\" {\n\t\t* print width must be at least 5, function -abbrev- doesn't go any lower\n\t\tlocal w=max(`w',5)\n\t\tlocal orig_vnames \"`vnames'\"\n\t\tlocal vnames\n\t\tforeach nm of local orig_vnames {\n\t\t\tlocal el=abbrev(\"`nm'\",`w')\n\t\t\tlocal vnames=\"`vnames' `el'\"\n\t\t}", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 52, "line": "*! version 1.0, 01Dec2004, John_Hendrickx@yahoo.com\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 35, "line": "*! version 1.0, 01Dec2004, <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 52, "chars": "*! version 1.0, 01Dec2004, John_Hendrickx@yahoo.com\n"}], "added": [{"char_start": 0, "char_end": 35, "chars": "*! version 1.0, 01Dec2004, <EMAIL>\n"}]}}
{"func_name": 12606, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/* Code for 'Term Premia and Credit Risk in Emerging Markets: The Role of U.S. \nMonetary Policy' by Pavel Solís (pavel.solis@gmail.com), October 2021\n\nThis code uses local projections to estimate the reponse of emerging market bond\nyields to a 1 basis point change in U.S. target, path and LSAP shocks */\n* ==============================================================================\n\n\n* ------------------------------------------------------------------------------\n* Preamble (uses Mac OS directory convention)\n* ------------------------------------------------------------------------------\ncd \"/Users/Pavel/Documents/GitHub/Dissertation/Ch_Synthetic\"\t// update as necessary\nlocal pathmain `c(pwd)'\n\nglobal pathdlfs \"/Users/Pavel/Dropbox/Dissertation/Book-DB-Sync/Ch_Synt-DB/Codes-DB/August-2021\"\nglobal pathdata \"`pathmain'/Data/Analytic\"\nglobal pathcode \"`pathmain'/Codes/Analysis\"\nglobal pathtbls \"`pathmain'/Docs/Tables\"\nglobal pathfigs \"`pathmain'/Docs/Figures\"\ncd $pathdata\n\nglobal file_src  \"$pathdata/dataspillovers.xlsx\"\nglobal file_dta1 \"$pathdlfs/dataspillovers1.dta\"\t\t// original dataset\nglobal file_dta2 \"$pathdlfs/dataspillovers2.dta\"\t\t// cleaned dataset\nglobal file_log  \"$pathtbls/impact_regs\"\nglobal file_tbl  \"$pathtbls/impact_tbls\"\n\n* ------------------------------------------------------------------------------\n* Dataset\n* ------------------------------------------------------------------------------\ndo \"$pathcode/spov_read\"\ndo \"$pathcode/spov_vars\"\nuse $file_dta2, clear\n\n* ------------------------------------------------------------------------------\n* Analysis\n* ------------------------------------------------------------------------------\nlog using $file_log, replace\n// do \"$pathcode/spov_pre\"\ndo \"$pathcode/spov_stats\"\ndo \"$pathcode/spov_combined_rho\"\ndo \"$pathcode/spov_combined_group\"\ndo \"$pathcode/spov_combined_usyc\"\ndo \"$pathcode/spov_combined_group_path\"\ndo \"$pathcode/spov_combined_usyc_path\"\ndo \"$pathcode/spov_combined_nickell\"\ndo \"$pathcode/spov_drivers\"\nlog close\ntranslate $file_log.smcl $file_log.pdf, replace\nerase $file_log.smcl", "func_src_after": "/* Code for 'Term Premia and Credit Risk in Emerging Markets: The Role of U.S. \nMonetary Policy' by Pavel Solís (<EMAIL>), October 2021\n\nThis code uses local projections to estimate the reponse of emerging market bond\nyields to a 1 basis point change in U.S. target, path and LSAP shocks */\n* ==============================================================================\n\n\n* ------------------------------------------------------------------------------\n* Preamble (uses Mac OS directory convention)\n* ------------------------------------------------------------------------------\ncd \"/Users/Pavel/Documents/GitHub/Dissertation/Ch_Synthetic\"\t// update as necessary\nlocal pathmain `c(pwd)'\n\nglobal pathdlfs \"/Users/Pavel/Dropbox/Dissertation/Book-DB-Sync/Ch_Synt-DB/Codes-DB/August-2021\"\nglobal pathdata \"`pathmain'/Data/Analytic\"\nglobal pathcode \"`pathmain'/Codes/Analysis\"\nglobal pathtbls \"`pathmain'/Docs/Tables\"\nglobal pathfigs \"`pathmain'/Docs/Figures\"\ncd $pathdata\n\nglobal file_src  \"$pathdata/dataspillovers.xlsx\"\nglobal file_dta1 \"$pathdlfs/dataspillovers1.dta\"\t\t// original dataset\nglobal file_dta2 \"$pathdlfs/dataspillovers2.dta\"\t\t// cleaned dataset\nglobal file_log  \"$pathtbls/impact_regs\"\nglobal file_tbl  \"$pathtbls/impact_tbls\"\n\n* ------------------------------------------------------------------------------\n* Dataset\n* ------------------------------------------------------------------------------\ndo \"$pathcode/spov_read\"\ndo \"$pathcode/spov_vars\"\nuse $file_dta2, clear\n\n* ------------------------------------------------------------------------------\n* Analysis\n* ------------------------------------------------------------------------------\nlog using $file_log, replace\n// do \"$pathcode/spov_pre\"\ndo \"$pathcode/spov_stats\"\ndo \"$pathcode/spov_combined_rho\"\ndo \"$pathcode/spov_combined_group\"\ndo \"$pathcode/spov_combined_usyc\"\ndo \"$pathcode/spov_combined_group_path\"\ndo \"$pathcode/spov_combined_usyc_path\"\ndo \"$pathcode/spov_combined_nickell\"\ndo \"$pathcode/spov_drivers\"\nlog close\ntranslate $file_log.smcl $file_log.pdf, replace\nerase $file_log.smcl", "line_changes": {"deleted": [{"line_no": 2, "char_start": 80, "char_end": 150, "line": "Monetary Policy' by Pavel Solís (pavel.solis@gmail.com), October 2021\n"}], "added": [{"line_no": 3, "char_start": 80, "char_end": 136, "line": "Monetary Policy' by Pavel Solís (<EMAIL>), October 2021\n"}]}, "char_changes": {"deleted": [{"char_start": 80, "char_end": 150, "chars": "Monetary Policy' by Pavel Solís (pavel.solis@gmail.com), October 2021\n"}], "added": [{"char_start": 80, "char_end": 136, "chars": "Monetary Policy' by Pavel Solís (<EMAIL>), October 2021\n"}]}}
{"func_name": 12610, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        false,\n    )\n    .commit(connection)\n    .unwrap();\n\n    // Source drip header 7 days\n    let drip_header = transfer\n        .drip_header(\n            &event,\n            SourceOrDestination::Source,\n            false,\n            Environment::Test,\n            connection,\n        )\n        .unwrap();\n    let staging_drip_header = transfer\n        .drip_header(\n            &event,\n            SourceOrDestination::Source,\n            false,\n            Environment::Staging,\n            connection,\n        )\n        .unwrap();\n    assert!(!drip_header.contains(\"<a href='mailto:test@tari.com'>test@tari.com</a>\"));\n    assert!(drip_header.contains(\"test@tari.com\"));\n    assert!(!staging_drip_header.contains(\"<a href='mailto:test@tari.com'>test@tari.com</a>\"));\n    assert!(staging_drip_header.contains(\"test@tari.com\"));\n    let drip_header = transfer\n        .drip_header(\n            &event,\n            SourceOrDestination::Destination,\n            false,\n            Environment::Test,\n            connection,\n        )\n        .unwrap();\n    assert!(!drip_header.contains(\"<a href='mailto:bob@miller.com'>Bob M.</a>\"));\n    assert!(drip_header.contains(\"Bob M.\"));\n    assert!(drip_header.contains(\"one week\"));\n\n    // Event is 2 days away (generic messaging)\n    let parameters = EventEditableAttributes {\n        event_start: Some(dates::now().add_days(2).finish()),\n        ..Default::default()\n    };\n    let event = event.update(None, parameters, connection).unwrap();\n    let drip_header = transfer\n        .drip_header(\n            &event,", "func_src_after": "        false,\n    )\n    .commit(connection)\n    .unwrap();\n\n    // Source drip header 7 days\n    let drip_header = transfer\n        .drip_header(\n            &event,\n            SourceOrDestination::Source,\n            false,\n            Environment::Test,\n            connection,\n        )\n        .unwrap();\n    let staging_drip_header = transfer\n        .drip_header(\n            &event,\n            SourceOrDestination::Source,\n            false,\n            Environment::Staging,\n            connection,\n        )\n        .unwrap();\n    assert!(!drip_header.contains(\"<a href='mailto:<EMAIL>'><EMAIL></a>\"));\n    assert!(drip_header.contains(\"<EMAIL>\"));\n    assert!(!staging_drip_header.contains(\"<a href='mailto:<EMAIL>'><EMAIL></a>\"));\n    assert!(staging_drip_header.contains(\"<EMAIL>\"));\n    let drip_header = transfer\n        .drip_header(\n            &event,\n            SourceOrDestination::Destination,\n            false,\n            Environment::Test,\n            connection,\n        )\n        .unwrap();\n    assert!(!drip_header.contains(\"<a href='mailto:<EMAIL>'>Bob M.</a>\"));\n    assert!(drip_header.contains(\"Bob M.\"));\n    assert!(drip_header.contains(\"one week\"));\n\n    // Event is 2 days away (generic messaging)\n    let parameters = EventEditableAttributes {\n        event_start: Some(dates::now().add_days(2).finish()),\n        ..Default::default()\n    };\n    let event = event.update(None, parameters, connection).unwrap();\n    let drip_header = transfer\n        .drip_header(\n            &event,", "line_changes": {"deleted": [{"line_no": 25, "char_start": 539, "char_end": 627, "line": "    assert!(!drip_header.contains(\"<a href='mailto:test@tari.com'>test@tari.com</a>\"));\n"}, {"line_no": 27, "char_start": 615, "char_end": 667, "line": "    assert!(drip_header.contains(\"test@tari.com\"));\n"}, {"line_no": 29, "char_start": 661, "char_end": 757, "line": "    assert!(!staging_drip_header.contains(\"<a href='mailto:test@tari.com'>test@tari.com</a>\"));\n"}, {"line_no": 31, "char_start": 745, "char_end": 805, "line": "    assert!(staging_drip_header.contains(\"test@tari.com\"));\n"}, {"line_no": 42, "char_start": 1021, "char_end": 1103, "line": "    assert!(!drip_header.contains(\"<a href='mailto:bob@miller.com'>Bob M.</a>\"));\n"}], "added": [{"line_no": 26, "char_start": 539, "char_end": 615, "line": "    assert!(!drip_header.contains(\"<a href='mailto:<EMAIL>'><EMAIL></a>\"));\n"}, {"line_no": 28, "char_start": 615, "char_end": 661, "line": "    assert!(drip_header.contains(\"<EMAIL>\"));\n"}, {"line_no": 30, "char_start": 661, "char_end": 745, "line": "    assert!(!staging_drip_header.contains(\"<a href='mailto:<EMAIL>'><EMAIL></a>\"));\n"}, {"line_no": 32, "char_start": 745, "char_end": 799, "line": "    assert!(staging_drip_header.contains(\"<EMAIL>\"));\n"}, {"line_no": 43, "char_start": 1021, "char_end": 1096, "line": "    assert!(!drip_header.contains(\"<a href='mailto:<EMAIL>'>Bob M.</a>\"));\n"}]}, "char_changes": {"deleted": [{"char_start": 539, "char_end": 627, "chars": "    assert!(!drip_header.contains(\"<a href='mailto:test@tari.com'>test@tari.com</a>\"));\n"}, {"char_start": 615, "char_end": 667, "chars": "    assert!(drip_header.contains(\"test@tari.com\"));\n"}, {"char_start": 661, "char_end": 757, "chars": "    assert!(!staging_drip_header.contains(\"<a href='mailto:test@tari.com'>test@tari.com</a>\"));\n"}, {"char_start": 745, "char_end": 805, "chars": "    assert!(staging_drip_header.contains(\"test@tari.com\"));\n"}, {"char_start": 1021, "char_end": 1103, "chars": "    assert!(!drip_header.contains(\"<a href='mailto:bob@miller.com'>Bob M.</a>\"));\n"}], "added": [{"char_start": 539, "char_end": 615, "chars": "    assert!(!drip_header.contains(\"<a href='mailto:<EMAIL>'><EMAIL></a>\"));\n"}, {"char_start": 615, "char_end": 661, "chars": "    assert!(drip_header.contains(\"<EMAIL>\"));\n"}, {"char_start": 661, "char_end": 745, "chars": "    assert!(!staging_drip_header.contains(\"<a href='mailto:<EMAIL>'><EMAIL></a>\"));\n"}, {"char_start": 745, "char_end": 799, "chars": "    assert!(staging_drip_header.contains(\"<EMAIL>\"));\n"}, {"char_start": 1021, "char_end": 1096, "chars": "    assert!(!drip_header.contains(\"<a href='mailto:<EMAIL>'>Bob M.</a>\"));\n"}]}}
{"func_name": 12615, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            false,\n            Environment::Test,\n            connection\n        )\n        .is_err());\n}\n\n#[test]\nfn can_process_drips() {\n    let project = TestProject::new();\n    let connection = project.get_connection();\n    let user = project.create_user().finish();\n    let event = project.create_event().with_ticket_pricing().finish();\n    project\n        .create_order()\n        .for_user(&user)\n        .for_event(&event)\n        .quantity(2)\n        .is_paid()\n        .finish();\n    let tickets = TicketInstance::find_for_user(user.id, connection).unwrap();\n    let ticket = &tickets[0];\n    let ticket2 = &tickets[1];\n    let transfer = Transfer::create(\n        user.id,\n        Uuid::new_v4(),\n        Some(TransferMessageType::Email),\n        Some(\"test@tari.com\".to_string()),\n        false,\n    )\n    .commit(connection)\n    .unwrap();\n    transfer.add_transfer_ticket(ticket.id, connection).unwrap();\n    assert!(transfer.can_process_drips(connection).unwrap());\n\n    // Transfer 2 cannot process drips as it lacks destination details\n    let transfer2 = Transfer::create(user.id, Uuid::new_v4(), None, None, false)\n        .commit(connection)\n        .unwrap();\n    transfer2.add_transfer_ticket(ticket2.id, connection).unwrap();\n    assert!(!transfer2.can_process_drips(connection).unwrap());\n\n    // Event has ended, do not process drip\n    diesel::sql_query(\n        r#\"\n        UPDATE events\n        SET event_start = $1,\n        event_end = $2\n        WHERE id = $3;\n        \"#,", "func_src_after": "            false,\n            Environment::Test,\n            connection\n        )\n        .is_err());\n}\n\n#[test]\nfn can_process_drips() {\n    let project = TestProject::new();\n    let connection = project.get_connection();\n    let user = project.create_user().finish();\n    let event = project.create_event().with_ticket_pricing().finish();\n    project\n        .create_order()\n        .for_user(&user)\n        .for_event(&event)\n        .quantity(2)\n        .is_paid()\n        .finish();\n    let tickets = TicketInstance::find_for_user(user.id, connection).unwrap();\n    let ticket = &tickets[0];\n    let ticket2 = &tickets[1];\n    let transfer = Transfer::create(\n        user.id,\n        Uuid::new_v4(),\n        Some(TransferMessageType::Email),\n        Some(\"<EMAIL>\".to_string()),\n        false,\n    )\n    .commit(connection)\n    .unwrap();\n    transfer.add_transfer_ticket(ticket.id, connection).unwrap();\n    assert!(transfer.can_process_drips(connection).unwrap());\n\n    // Transfer 2 cannot process drips as it lacks destination details\n    let transfer2 = Transfer::create(user.id, Uuid::new_v4(), None, None, false)\n        .commit(connection)\n        .unwrap();\n    transfer2.add_transfer_ticket(ticket2.id, connection).unwrap();\n    assert!(!transfer2.can_process_drips(connection).unwrap());\n\n    // Event has ended, do not process drip\n    diesel::sql_query(\n        r#\"\n        UPDATE events\n        SET event_start = $1,\n        event_end = $2\n        WHERE id = $3;\n        \"#,", "line_changes": {"deleted": [{"line_no": 28, "char_start": 749, "char_end": 792, "line": "        Some(\"test@tari.com\".to_string()),\n"}], "added": [{"line_no": 29, "char_start": 749, "char_end": 786, "line": "        Some(\"<EMAIL>\".to_string()),\n"}]}, "char_changes": {"deleted": [{"char_start": 749, "char_end": 792, "chars": "        Some(\"test@tari.com\".to_string()),\n"}], "added": [{"char_start": 749, "char_end": 786, "chars": "        Some(\"<EMAIL>\".to_string()),\n"}]}}
{"func_name": 12622, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    fn test_username_with_special_characters() {\n        let login = Login {\n            username: \"user#123?<>\".to_string(),\n            password: \"hunter2\".to_string(),\n        };\n        assert!(login.validate().is_err());\n    }\n}\n", "func_src_after": "    fn test_username_with_special_characters() {\n        let login = Login {\n            username: \"user#123?<>\".to_string(),\n            password: \"hunter2\".to_string(),\n        };\n        assert!(login.validate().is_err());\n    }\n}\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12640, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        ),\n    }\n    p.exp_eof()?;\n    Ok(())\n}\n\nfn prep(domain: &str) -> Result<()> {\n    //! TBC\n    //!\n    let ldomain: &str = domain;\n    let cmd_prefix = \"/usr/sbin/realm discover \";\n    let realm_suffix = \"\";\n\n    let discover_command = [cmd_prefix, realm_suffix].join(ldomain);\n    // println!(\"discover_command:{N}\", N = discover_command);\n    let mut p = spawn(&discover_command, Some(30_000))?;\n    match p.process.wait() {\n        Ok(wait::WaitStatus::Exited(_, 0)) => {\n            println!(\"{a1} exited with code 0, all good!\", a1 = discover_command)\n        }\n        Ok(wait::WaitStatus::Exited(_, c)) => {\n            println!(\n                \"Command: {a1} exited with code {c1}.\",\n                a1 = discover_command,\n                c1 = c\n            );\n            println!(\"Output (stdout and stderr): {}\", p.exp_eof()?);\n        }\n        _ => println!(\n            \"{a1} exited with code >0, or it was killed.\",\n            a1 = discover_command\n        ),\n    }\n    p.exp_eof()?;\n    Ok(())\n}\n\n\nfn do_pings() -> PingResult<()> {\n    // $ setcap cap_net_raw+ep $MY_BINARY    # allow binary to send ping packets\n    let mut ping = Ping::new();\n    try!(ping.set_timeout(5.0)); // timeout of 5.0 seconds\n    try!(ping.add_host(\"localhost\")); // fails here if socket can't be created\n    try!(ping.add_host(\"127.0.0.1\"));\n    //    try!(ping.add_host(\"::1\")); // IPv4 / IPv6 addresses OK\n    //    try!(ping.add_host(\"1.2.3.4\"));\n    let responses = try!(ping.send());\n    for resp in responses {\n        if resp.dropped > 0 {\n            println!(\"No response from host: {}\", resp.hostname);", "func_src_after": "        ),\n    }\n    p.exp_eof()?;\n    Ok(())\n}\n\nfn prep(domain: &str) -> Result<()> {\n    //! TBC\n    //!\n    let ldomain: &str = domain;\n    let cmd_prefix = \"/usr/sbin/realm discover \";\n    let realm_suffix = \"\";\n\n    let discover_command = [cmd_prefix, realm_suffix].join(ldomain);\n    // println!(\"discover_command:{N}\", N = discover_command);\n    let mut p = spawn(&discover_command, Some(30_000))?;\n    match p.process.wait() {\n        Ok(wait::WaitStatus::Exited(_, 0)) => {\n            println!(\"{a1} exited with code 0, all good!\", a1 = discover_command)\n        }\n        Ok(wait::WaitStatus::Exited(_, c)) => {\n            println!(\n                \"Command: {a1} exited with code {c1}.\",\n                a1 = discover_command,\n                c1 = c\n            );\n            println!(\"Output (stdout and stderr): {}\", p.exp_eof()?);\n        }\n        _ => println!(\n            \"{a1} exited with code >0, or it was killed.\",\n            a1 = discover_command\n        ),\n    }\n    p.exp_eof()?;\n    Ok(())\n}\n\n\nfn do_pings() -> PingResult<()> {\n    // $ setcap cap_net_raw+ep $MY_BINARY    # allow binary to send ping packets\n    let mut ping = Ping::new();\n    try!(ping.set_timeout(5.0)); // timeout of 5.0 seconds\n    try!(ping.add_host(\"localhost\")); // fails here if socket can't be created\n    try!(ping.add_host(\"<IP-Address>\"));\n    //    try!(ping.add_host(\"<IP-Address>\")); // IPv4 / IPv6 addresses OK\n    //    try!(ping.add_host(\"<IP-Address>\"));\n    let responses = try!(ping.send());\n    for resp in responses {\n        if resp.dropped > 0 {\n            println!(\"No response from host: {}\", resp.hostname);", "line_changes": {"deleted": [{"line_no": 44, "char_start": 1309, "char_end": 1347, "line": "    try!(ping.add_host(\"127.0.0.1\"));\n"}, {"line_no": 46, "char_start": 1350, "char_end": 1416, "line": "    //    try!(ping.add_host(\"::1\")); // IPv4 / IPv6 addresses OK\n"}, {"line_no": 48, "char_start": 1425, "char_end": 1467, "line": "    //    try!(ping.add_host(\"1.2.3.4\"));\n"}], "added": [{"line_no": 45, "char_start": 1309, "char_end": 1350, "line": "    try!(ping.add_host(\"<IP-Address>\"));\n"}, {"line_no": 47, "char_start": 1350, "char_end": 1425, "line": "    //    try!(ping.add_host(\"<IP-Address>\")); // IPv4 / IPv6 addresses OK\n"}, {"line_no": 49, "char_start": 1425, "char_end": 1472, "line": "    //    try!(ping.add_host(\"<IP-Address>\"));\n"}]}, "char_changes": {"deleted": [{"char_start": 1309, "char_end": 1347, "chars": "    try!(ping.add_host(\"127.0.0.1\"));\n"}, {"char_start": 1350, "char_end": 1416, "chars": "    //    try!(ping.add_host(\"::1\")); // IPv4 / IPv6 addresses OK\n"}, {"char_start": 1425, "char_end": 1467, "chars": "    //    try!(ping.add_host(\"1.2.3.4\"));\n"}], "added": [{"char_start": 1309, "char_end": 1350, "chars": "    try!(ping.add_host(\"<IP-Address>\"));\n"}, {"char_start": 1350, "char_end": 1425, "chars": "    //    try!(ping.add_host(\"<IP-Address>\")); // IPv4 / IPv6 addresses OK\n"}, {"char_start": 1425, "char_end": 1472, "chars": "    //    try!(ping.add_host(\"<IP-Address>\"));\n"}]}}
{"func_name": 12643, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        let mut settings = SigningSettings::default();\n        settings.signature_location = SignatureLocation::QueryParams;\n        settings.expires_in = Some(Duration::from_secs(35));\n        let params = SigningParams {\n            access_key: \"AKIDEXAMPLE\",\n            secret_key: \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n            security_token: None,\n            region: \"us-east-1\",\n            service_name: \"service\",\n            date_time: parse_date_time(\"20150830T123600Z\").unwrap(),\n            settings,\n        };\n\n        let original = test_request(\"get-vanilla-query-order-key-case\");\n        let signable = SignableRequest::from(&original);\n        let out = sign(signable, &params).unwrap();\n        assert_eq!(\n            \"f25aea20f8c722ece3b363fc5d60cc91add973f9b64c42ba36fa28d57afe9019\",\n            out.signature\n        );\n\n        let mut signed = original;\n        out.output.apply_to_request(&mut signed);\n\n        let mut expected = test_signed_request_query_params(\"get-vanilla-query-order-key-case\");\n        assert_req_eq!(expected, signed);\n    }\n\n    #[test]\n    fn test_sign_headers_utf8() {\n        let settings = SigningSettings::default();\n        let params = SigningParams {\n            access_key: \"AKIDEXAMPLE\",\n            secret_key: \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n            security_token: None,\n            region: \"us-east-1\",\n            service_name: \"service\",\n            date_time: parse_date_time(\"20150830T123600Z\").unwrap(),\n            settings,\n        };\n\n        let original = http::Request::builder()\n            .uri(\"https://some-endpoint.some-region.amazonaws.com\")\n            .header(\"some-header\", HeaderValue::from_str(\"テスト\").unwrap())\n            .body(\"\")\n            .unwrap();\n        let signable = SignableRequest::from(&original);\n        let out = sign(signable, &params).unwrap();\n        assert_eq!(\n            \"4596b207a7fc6bdf18725369bc0cd7022cf20efbd2c19730549f42d1a403648e\",", "func_src_after": "        let mut settings = SigningSettings::default();\n        settings.signature_location = SignatureLocation::QueryParams;\n        settings.expires_in = Some(Duration::from_secs(35));\n        let params = SigningParams {\n            access_key: \"AKIDEXAMPLE\",\n            secret_key: \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n            security_token: None,\n            region: \"us-east-1\",\n            service_name: \"service\",\n            date_time: parse_date_time(\"20150830T123600Z\").unwrap(),\n            settings,\n        };\n\n        let original = test_request(\"get-vanilla-query-order-key-case\");\n        let signable = SignableRequest::from(&original);\n        let out = sign(signable, &params).unwrap();\n        assert_eq!(\n            \"f25aea20f8c722ece3b363fc5d60cc91add973f9b64c42ba36fa28d57afe9019\",\n            out.signature\n        );\n\n        let mut signed = original;\n        out.output.apply_to_request(&mut signed);\n\n        let mut expected = test_signed_request_query_params(\"get-vanilla-query-order-key-case\");\n        assert_req_eq!(expected, signed);\n    }\n\n    #[test]\n    fn test_sign_headers_utf8() {\n        let settings = SigningSettings::default();\n        let params = SigningParams {\n            access_key: \"AKIDEXAMPLE\",\n            secret_key: \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n            security_token: None,\n            region: \"us-east-1\",\n            service_name: \"service\",\n            date_time: parse_date_time(\"20150830T123600Z\").unwrap(),\n            settings,\n        };\n\n        let original = http::Request::builder()\n            .uri(\"https://some-endpoint.some-region.amazonaws.com\")\n            .header(\"some-header\", HeaderValue::from_str(\"テスト\").unwrap())\n            .body(\"\")\n            .unwrap();\n        let signable = SignableRequest::from(&original);\n        let out = sign(signable, &params).unwrap();\n        assert_eq!(\n            \"4596b207a7fc6bdf18725369bc0cd7022cf20efbd2c19730549f42d1a403648e\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12681, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        .method(Method::Get)\n        .fetch_json()\n        .map(Msg::Replace)\n        .map_err(Msg::OnFetchErr)\n}\n\nfn send() -> impl Future<Item = Msg, Error = Msg> {\n    let url = \"https://infinitea.herokuapp.com/api/contact\";\n\n    let message = Message {\n        name: \"Mark Watney\".into(),\n        email: \"mark@crypt.kk\".into(),\n        message: \"I wanna be like Iron Man\".into(),\n    };\n\n    Request::new(url)\n        .method(Method::Post)\n        .header(\"Content-Type\", \"application/json\")\n        .body_json(&message)\n        .fetch_json()\n        .map(Msg::OnServerResponse)\n        .map_err(Msg::OnFetchErr)\n}\n\n// Setup a default here, for initialization later.\nimpl Default for Model {\n    fn default() -> Self {\n        Self {\n            data: Branch {\n                name: \"Loading...\".into(),\n                commit: Commit {\n                    sha: \"Loading...\".into(),\n                },\n            },\n        }\n    }\n}\n\n// Update\n\n#[derive(Clone)]\nenum Msg {\n    Replace(Branch),\n    GetData,\n    Send,\n    OnServerResponse(ServerResponse),\n    OnFetchErr(JsValue),\n}\n\nfn update(msg: Msg, model: &mut Model) -> Update<Msg> {", "func_src_after": "        .method(Method::Get)\n        .fetch_json()\n        .map(Msg::Replace)\n        .map_err(Msg::OnFetchErr)\n}\n\nfn send() -> impl Future<Item = Msg, Error = Msg> {\n    let url = \"https://infinitea.herokuapp.com/api/contact\";\n\n    let message = Message {\n        name: \"Mark Watney\".into(),\n        email: \"<EMAIL>\".into(),\n        message: \"I wanna be like Iron Man\".into(),\n    };\n\n    Request::new(url)\n        .method(Method::Post)\n        .header(\"Content-Type\", \"application/json\")\n        .body_json(&message)\n        .fetch_json()\n        .map(Msg::OnServerResponse)\n        .map_err(Msg::OnFetchErr)\n}\n\n// Setup a default here, for initialization later.\nimpl Default for Model {\n    fn default() -> Self {\n        Self {\n            data: Branch {\n                name: \"Loading...\".into(),\n                commit: Commit {\n                    sha: \"Loading...\".into(),\n                },\n            },\n        }\n    }\n}\n\n// Update\n\n#[derive(Clone)]\nenum Msg {\n    Replace(Branch),\n    GetData,\n    Send,\n    OnServerResponse(ServerResponse),\n    OnFetchErr(JsValue),\n}\n\nfn update(msg: Msg, model: &mut Model) -> Update<Msg> {", "line_changes": {"deleted": [{"line_no": 12, "char_start": 293, "char_end": 332, "line": "        email: \"mark@crypt.kk\".into(),\n"}], "added": [{"line_no": 13, "char_start": 293, "char_end": 326, "line": "        email: \"<EMAIL>\".into(),\n"}]}, "char_changes": {"deleted": [{"char_start": 293, "char_end": 332, "chars": "        email: \"mark@crypt.kk\".into(),\n"}], "added": [{"char_start": 293, "char_end": 326, "chars": "        email: \"<EMAIL>\".into(),\n"}]}}
{"func_name": 12691, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            let actual: [u8; 32] = hchacha20(\n                &SecretKey::from_slice(&decode(key).unwrap()).unwrap(),\n                &decode(nonce).unwrap(),\n            )\n            .unwrap();\n\n            assert_eq!(&actual, &decode(output_expected).unwrap()[..]);\n        }\n\n        // Testing against Monocypher-generated test vectors\n        // https://github.com/LoupVaillant/Monocypher/tree/master/tests/gen\n        // Pulled at commit: https://github.com/LoupVaillant/Monocypher/commit/39b164a5bf715d1a62689203b059144df76d98e2\n\n        #[test]\n        fn test_case_0() {\n            let key = \"e4e4c4054fe35a75d9c0f679ad8770d8227e68e4c1e68ce67ee88e6be251a207\";\n            let nonce = \"48b3753cff3a6d990163e6b60da1e4e5\";\n            let expected_output =\n                \"d805447c583fd97a07a2b7ab66be621ad0fa32d63d86ac20588da90b87c1907b\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_1() {\n            let key = \"d6a2df78c16c96a52d4fb01ea4ecf70e81ac001b08d6577bd91ce991c4c45c46\";\n            let nonce = \"bc84d5465fc9139bf17042ae7313181f\";\n            let expected_output =\n                \"66d1fd5e89a564b55ccf0c339455449c20dfbc9d17081c85fbb430a157777be9\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_2() {\n            let key = \"7afb217bd1eceeac1e133aaa9edb441fa88ea3ae0eaa06cb9911b6d218570f92\";\n            let nonce = \"4a70a7e992b43e0b18578e892e954c40\";\n            let expected_output =\n                \"41119e28a00a9d3f24b1910495f3058f9db83cbcf12889de84a2fcd7de8dc31b\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_3() {\n            let key = \"a51abdb5a85d300c32f391c45d6ef4db043ddcf4214f24ea6ef6b181071f299a\";\n            let nonce = \"a254a4606ab6a058e0c6fb5598218db7\";\n            let expected_output =\n                \"04c2f31fdcc7013ac7d10ec82e8d3628c9ab23b08bbf95d6d77ad2dec7e865d6\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_4() {\n            let key = \"1deb473f7d04c152e7e857736715dc7b788aca39a3c96a878019e8999c815c57\";\n            let nonce = \"23dbfbde05e6c71f118afc0dedb5b9f8\";\n            let expected_output =", "func_src_after": "            let actual: [u8; 32] = hchacha20(\n                &SecretKey::from_slice(&decode(key).unwrap()).unwrap(),\n                &decode(nonce).unwrap(),\n            )\n            .unwrap();\n\n            assert_eq!(&actual, &decode(output_expected).unwrap()[..]);\n        }\n\n        // Testing against Monocypher-generated test vectors\n        // https://github.com/LoupVaillant/Monocypher/tree/master/tests/gen\n        // Pulled at commit: https://github.com/LoupVaillant/Monocypher/commit/39b164a5bf715d1a62689203b059144df76d98e2\n\n        #[test]\n        fn test_case_0() {\n            let key = \"e4e4c4054fe35a75d9c0f679ad8770d8227e68e4c1e68ce67ee88e6be251a207\";\n            let nonce = \"48b3753cff3a6d990163e6b60da1e4e5\";\n            let expected_output =\n                \"d805447c583fd97a07a2b7ab66be621ad0fa32d63d86ac20588da90b87c1907b\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_1() {\n            let key = \"d6a2df78c16c96a52d4fb01ea4ecf70e81ac001b08d6577bd91ce991c4c45c46\";\n            let nonce = \"bc84d5465fc9139bf17042ae7313181f\";\n            let expected_output =\n                \"66d1fd5e89a564b55ccf0c339455449c20dfbc9d17081c85fbb430a157777be9\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_2() {\n            let key = \"7afb217bd1eceeac1e133aaa9edb441fa88ea3ae0eaa06cb9911b6d218570f92\";\n            let nonce = \"4a70a7e992b43e0b18578e892e954c40\";\n            let expected_output =\n                \"41119e28a00a9d3f24b1910495f3058f9db83cbcf12889de84a2fcd7de8dc31b\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_3() {\n            let key = \"a51abdb5a85d300c32f391c45d6ef4db043ddcf4214f24ea6ef6b181071f299a\";\n            let nonce = \"a254a4606ab6a058e0c6fb5598218db7\";\n            let expected_output =\n                \"04c2f31fdcc7013ac7d10ec82e8d3628c9ab23b08bbf95d6d77ad2dec7e865d6\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_4() {\n            let key = \"1deb473f7d04c152e7e857736715dc7b788aca39a3c96a878019e8999c815c57\";\n            let nonce = \"23dbfbde05e6c71f118afc0dedb5b9f8\";\n            let expected_output =", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12695, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            let nonce = \"7d26e3afc3a88541f6c3f45d71f8a3cc\";\n            let expected_output =\n                \"a02140057f889e7ab36b4a5066e376dff248d13bd8072c384e23bd8fe4bf7047\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_24() {\n            let key = \"31a063ea4aad1b4d00db6f5228e9b9b1561a7f61812b8b79e6af4292580d02ea\";\n            let nonce = \"4f6266d04244303304510272e383eaa5\";\n            let expected_output =\n                \"d610d44b8b3c14c7d3782f73405637fd14b7fada717665a9acbd4df6daa89adc\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_25() {\n            let key = \"1a8ea7099a74bafa3375b210653a0d2f40b15afd725cf5065066be1cb803dc15\";\n            let nonce = \"8865ed8d7cca72dcf2b7c6b5d0d045bf\";\n            let expected_output =\n                \"f10cce296197a056bedbee166183ad6aaa56bdb21c3459296ca54c0bb78317d1\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_26() {\n            let key = \"32b063d3da484ba1843e071b61c49ce7f30ba18a4f7ef2730ecd785494839966\";\n            let nonce = \"f593168e17311913753c59593fc66cb6\";\n            let expected_output =\n                \"f18115a9568724c25184728f563b65b737219cb0df1b3ce19a8bdcbdf7b8b2be\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_27() {\n            let key = \"64c1572251132fc28bf37fd8e96f2327cf7948a1126fd37175a91f483d6b3ad9\";\n            let nonce = \"2308df7e6daa8bf3efde75f80ad72a49\";\n            let expected_output =\n                \"06a24cb90abe94cf3ee8e429d8197bc42bc769fbe81119156274f9692aa017a2\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_28() {\n            let key = \"ae0794009e21ad33fa4141fe5fa79fed12f6a20f51614dc130f45598e92549b1\";\n            let nonce = \"13ed6185724507e7fa5a7e8a75b2c7a3\";\n            let expected_output =\n                \"51d1aec8d64d20e448a377bfa83ccbf71a73a3ad00d062bf6b83c549a7296ef1\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_29() {\n            let key = \"ad700919f36a46ea0ffa680857e30188f8a03c7c4b6c11bc39aececec2668723\";\n            let nonce = \"3682d31887277028e2fd286f2654c681\";\n            let expected_output =", "func_src_after": "            let nonce = \"7d26e3afc3a88541f6c3f45d71f8a3cc\";\n            let expected_output =\n                \"a02140057f889e7ab36b4a5066e376dff248d13bd8072c384e23bd8fe4bf7047\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_24() {\n            let key = \"31a063ea4aad1b4d00db6f5228e9b9b1561a7f61812b8b79e6af4292580d02ea\";\n            let nonce = \"4f6266d04244303304510272e383eaa5\";\n            let expected_output =\n                \"d610d44b8b3c14c7d3782f73405637fd14b7fada717665a9acbd4df6daa89adc\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_25() {\n            let key = \"1a8ea7099a74bafa3375b210653a0d2f40b15afd725cf5065066be1cb803dc15\";\n            let nonce = \"8865ed8d7cca72dcf2b7c6b5d0d045bf\";\n            let expected_output =\n                \"f10cce296197a056bedbee166183ad6aaa56bdb21c3459296ca54c0bb78317d1\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_26() {\n            let key = \"32b063d3da484ba1843e071b61c49ce7f30ba18a4f7ef2730ecd785494839966\";\n            let nonce = \"f593168e17311913753c59593fc66cb6\";\n            let expected_output =\n                \"f18115a9568724c25184728f563b65b737219cb0df1b3ce19a8bdcbdf7b8b2be\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_27() {\n            let key = \"64c1572251132fc28bf37fd8e96f2327cf7948a1126fd37175a91f483d6b3ad9\";\n            let nonce = \"2308df7e6daa8bf3efde75f80ad72a49\";\n            let expected_output =\n                \"06a24cb90abe94cf3ee8e429d8197bc42bc769fbe81119156274f9692aa017a2\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_28() {\n            let key = \"ae0794009e21ad33fa4141fe5fa79fed12f6a20f51614dc130f45598e92549b1\";\n            let nonce = \"13ed6185724507e7fa5a7e8a75b2c7a3\";\n            let expected_output =\n                \"51d1aec8d64d20e448a377bfa83ccbf71a73a3ad00d062bf6b83c549a7296ef1\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_29() {\n            let key = \"ad700919f36a46ea0ffa680857e30188f8a03c7c4b6c11bc39aececec2668723\";\n            let nonce = \"3682d31887277028e2fd286f2654c681\";\n            let expected_output =", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12698, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        fn test_case_42() {\n            let key = \"3bc12887fec8e70db73b4b48dce564d83786aca4c6b7e224163ea928771fde37\";\n            let nonce = \"78c453b35d98deced812fc5685843565\";\n            let expected_output =\n                \"2279b063dab4c73a96abe02175e694662c65d09eb5889234293c7a1f2911e13d\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_43() {\n            let key = \"b73d097601d3558278bd9d7327de5fdaa2b842050b370e837ef811a496169d5f\";\n            let nonce = \"f768878766c08c45561fdc2aad6469c1\";\n            let expected_output =\n                \"a8e85a6ab627f08ad415649a9cf9998f4b1065030f3c844e31c8185036af7558\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_44() {\n            let key = \"1380c3d3f873c7233c541ea4c43824ecd8bf7e11ac8486208fb685218d46736e\";\n            let nonce = \"51103d1fae0e8e368f25480ee7328381\";\n            let expected_output =\n                \"9b84e50804449b594a54240741e21d75d31050d2612f4cbc651fea2f25bd9c1f\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_45() {\n            let key = \"c2f8b252a18a29c44dbfbb62cbe6c3dfd4db55378734d8110b8f20f1d1ada6dd\";\n            let nonce = \"d4da48fb09c06580eb46bbc5ca62bfab\";\n            let expected_output =\n                \"315c3fe1009e438762a72f27e7a68b8ccb2c0b60bf79cb6e48123db0c42d4aeb\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_46() {\n            let key = \"40b184271b73b710d40cb63435042c9b526d1e5c3a77bfc516a2bcb4cc27ecae\";\n            let nonce = \"b3451318590c84e311dd1e876f527d81\";\n            let expected_output =\n                \"cbbde3a3412504c1f684aa273ee691159edc9f44e306360278d63d4ee2f1faa4\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_47() {\n            let key = \"ec81df06c7e426b729aebb02be30c846eb228490df4a0e6c688aaaa6bf05d144\";\n            let nonce = \"28335f2652926bfdfe32dfd789173ba8\";\n            let expected_output =\n                \"522b522e4cf9aa1e80126a446ed7b9665af3e781a3d5afdce43a5fe0cdbd4351\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_48() {\n            let key = \"60fa0114802ee333d7c49ccaad8108db470c882514716592e57aba26bb75049b\";", "func_src_after": "        fn test_case_42() {\n            let key = \"3bc12887fec8e70db73b4b48dce564d83786aca4c6b7e224163ea928771fde37\";\n            let nonce = \"78c453b35d98deced812fc5685843565\";\n            let expected_output =\n                \"2279b063dab4c73a96abe02175e694662c65d09eb5889234293c7a1f2911e13d\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_43() {\n            let key = \"b73d097601d3558278bd9d7327de5fdaa2b842050b370e837ef811a496169d5f\";\n            let nonce = \"f768878766c08c45561fdc2aad6469c1\";\n            let expected_output =\n                \"a8e85a6ab627f08ad415649a9cf9998f4b1065030f3c844e31c8185036af7558\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_44() {\n            let key = \"1380c3d3f873c7233c541ea4c43824ecd8bf7e11ac8486208fb685218d46736e\";\n            let nonce = \"51103d1fae0e8e368f25480ee7328381\";\n            let expected_output =\n                \"9b84e50804449b594a54240741e21d75d31050d2612f4cbc651fea2f25bd9c1f\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_45() {\n            let key = \"c2f8b252a18a29c44dbfbb62cbe6c3dfd4db55378734d8110b8f20f1d1ada6dd\";\n            let nonce = \"d4da48fb09c06580eb46bbc5ca62bfab\";\n            let expected_output =\n                \"315c3fe1009e438762a72f27e7a68b8ccb2c0b60bf79cb6e48123db0c42d4aeb\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_46() {\n            let key = \"40b184271b73b710d40cb63435042c9b526d1e5c3a77bfc516a2bcb4cc27ecae\";\n            let nonce = \"b3451318590c84e311dd1e876f527d81\";\n            let expected_output =\n                \"cbbde3a3412504c1f684aa273ee691159edc9f44e306360278d63d4ee2f1faa4\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_47() {\n            let key = \"ec81df06c7e426b729aebb02be30c846eb228490df4a0e6c688aaaa6bf05d144\";\n            let nonce = \"28335f2652926bfdfe32dfd789173ba8\";\n            let expected_output =\n                \"522b522e4cf9aa1e80126a446ed7b9665af3e781a3d5afdce43a5fe0cdbd4351\";\n            hchacha_test_runner(key, nonce, expected_output);\n        }\n        #[test]\n        fn test_case_48() {\n            let key = \"60fa0114802ee333d7c49ccaad8108db470c882514716592e57aba26bb75049b\";", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12744, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Copyright 2019 The Fuchsia Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nmod inspect;\nmod ping;\n\n#[macro_use]\nextern crate log;\nuse {\n    crate::ping::Ping,\n    fidl_fuchsia_hardware_network, fidl_fuchsia_net_interfaces as fnet_interfaces,\n    fidl_fuchsia_net_interfaces_ext::{self as fnet_interfaces_ext},\n    fuchsia_async as fasync,\n    fuchsia_inspect::Inspector,\n    futures::{pin_mut, FutureExt as _, StreamExt as _},\n    inspect::InspectInfo,\n    net_declare::std_ip,\n    net_types::ScopeableAddress as _,\n    network_manager_core::{address::LifIpAddr, error, hal},\n    std::collections::HashMap,\n};\n\nconst IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"8.8.8.8\");\nconst IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"2001:4860:4860::8888\");\n\n/// `Stats` keeps the monitoring service statistic counters.\n#[derive(Debug, Default, Clone)]\npub struct Stats {\n    /// `events` is the number of events received.\n    pub events: u64,\n    /// `state_updates` is the number of times reachability state has changed.\n    pub state_updates: HashMap<Id, u64>,\n}\n\n// TODO(dpradilla): consider splitting the state in l2 state and l3 state, as there can be multiple\n// L3 networks on the same physical medium.\n/// `State` represents the reachability state.\n#[derive(Debug, Ord, PartialOrd, Eq, PartialEq, Clone, Copy)]\npub enum State {\n    /// State not yet determined.\n    None,\n    /// Interface no longer present.\n    Removed,\n    /// Interface is down.\n    Down,\n    /// Interface is up, no packets seen yet.\n    Up,\n    /// Interface is up, packets seen.\n    LinkLayerUp,", "func_src_after": "// Copyright 2019 The Fuchsia Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nmod inspect;\nmod ping;\n\n#[macro_use]\nextern crate log;\nuse {\n    crate::ping::Ping,\n    fidl_fuchsia_hardware_network, fidl_fuchsia_net_interfaces as fnet_interfaces,\n    fidl_fuchsia_net_interfaces_ext::{self as fnet_interfaces_ext},\n    fuchsia_async as fasync,\n    fuchsia_inspect::Inspector,\n    futures::{pin_mut, FutureExt as _, StreamExt as _},\n    inspect::InspectInfo,\n    net_declare::std_ip,\n    net_types::ScopeableAddress as _,\n    network_manager_core::{address::LifIpAddr, error, hal},\n    std::collections::HashMap,\n};\n\nconst IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"<IP-Address>\");\nconst IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"<IP-Address>\");\n\n/// `Stats` keeps the monitoring service statistic counters.\n#[derive(Debug, Default, Clone)]\npub struct Stats {\n    /// `events` is the number of events received.\n    pub events: u64,\n    /// `state_updates` is the number of times reachability state has changed.\n    pub state_updates: HashMap<Id, u64>,\n}\n\n// TODO(dpradilla): consider splitting the state in l2 state and l3 state, as there can be multiple\n// L3 networks on the same physical medium.\n/// `State` represents the reachability state.\n#[derive(Debug, Ord, PartialOrd, Eq, PartialEq, Clone, Copy)]\npub enum State {\n    /// State not yet determined.\n    None,\n    /// Interface no longer present.\n    Removed,\n    /// Interface is down.\n    Down,\n    /// Interface is up, no packets seen yet.\n    Up,\n    /// Interface is up, packets seen.\n    LinkLayerUp,", "line_changes": {"deleted": [{"line_no": 24, "char_start": 701, "char_end": 788, "line": "const IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"8.8.8.8\");\n"}, {"line_no": 26, "char_start": 793, "char_end": 893, "line": "const IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"2001:4860:4860::8888\");\n"}], "added": [{"line_no": 25, "char_start": 701, "char_end": 793, "line": "const IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"<IP-Address>\");\n"}, {"line_no": 27, "char_start": 793, "char_end": 885, "line": "const IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"<IP-Address>\");\n"}]}, "char_changes": {"deleted": [{"char_start": 701, "char_end": 788, "chars": "const IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"8.8.8.8\");\n"}, {"char_start": 793, "char_end": 893, "chars": "const IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"2001:4860:4860::8888\");\n"}], "added": [{"char_start": 701, "char_end": 793, "chars": "const IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"<IP-Address>\");\n"}, {"char_start": 793, "char_end": 885, "chars": "const IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS: std::net::IpAddr = std_ip!(\"<IP-Address>\");\n"}]}}
{"func_name": 12745, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            if self.gateway_addrs.contains(&addr.ip()) {\n                return self.gateway_response;\n            }\n            if IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS == addr.ip()\n                || IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS == addr.ip()\n            {\n                return self.internet_response;\n            }\n            panic!(\"ping destination address {} is not in the set of gateway URLs ({:?}) or equal to the IPv4/IPv6 internet connectivity check address\", addr, self.gateway_addrs);\n        }\n    }\n\n    #[fasync::run_until_stalled(test)]\n    async fn test_network_layer_state_ipv4() {\n        test_network_layer_state(\n            \"1.2.3.0\",\n            \"1.2.3.4\",\n            \"1.2.3.1\",\n            \"2.2.3.0\",\n            \"2.2.3.1\",\n            LifIpAddr { address: IpAddr::V4(Ipv4Addr::UNSPECIFIED), prefix: 0 },\n            IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS,\n            24,\n        )\n        .await\n    }\n\n    #[fasync::run_until_stalled(test)]\n    async fn test_network_layer_state_ipv6() {\n        test_network_layer_state(\n            \"123::\",\n            \"123::4\",\n            \"123::1\",\n            \"223::\",\n            \"223::1\",\n            LifIpAddr { address: IpAddr::V6(Ipv6Addr::UNSPECIFIED), prefix: 0 },\n            IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS,\n            64,\n        )\n        .await\n    }\n\n    async fn test_network_layer_state(\n        net1: &str,\n        net1_addr: &str,\n        net1_gateway: &str,\n        net2: &str,\n        net2_gateway: &str,\n        unspecified_addr: LifIpAddr,\n        ping_internet_addr: std::net::IpAddr,", "func_src_after": "            if self.gateway_addrs.contains(&addr.ip()) {\n                return self.gateway_response;\n            }\n            if IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS == addr.ip()\n                || IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS == addr.ip()\n            {\n                return self.internet_response;\n            }\n            panic!(\"ping destination address {} is not in the set of gateway URLs ({:?}) or equal to the IPv4/IPv6 internet connectivity check address\", addr, self.gateway_addrs);\n        }\n    }\n\n    #[fasync::run_until_stalled(test)]\n    async fn test_network_layer_state_ipv4() {\n        test_network_layer_state(\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            LifIpAddr { address: IpAddr::V4(Ipv4Addr::UNSPECIFIED), prefix: 0 },\n            IPV4_INTERNET_CONNECTIVITY_CHECK_ADDRESS,\n            24,\n        )\n        .await\n    }\n\n    #[fasync::run_until_stalled(test)]\n    async fn test_network_layer_state_ipv6() {\n        test_network_layer_state(\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            \"<IP-Address>\",\n            LifIpAddr { address: IpAddr::V6(Ipv6Addr::UNSPECIFIED), prefix: 0 },\n            IPV6_INTERNET_CONNECTIVITY_CHECK_ADDRESS,\n            64,\n        )\n        .await\n    }\n\n    async fn test_network_layer_state(\n        net1: &str,\n        net1_addr: &str,\n        net1_gateway: &str,\n        net2: &str,\n        net2_gateway: &str,\n        unspecified_addr: LifIpAddr,\n        ping_internet_addr: std::net::IpAddr,", "line_changes": {"deleted": [{"line_no": 16, "char_start": 651, "char_end": 674, "line": "            \"1.2.3.0\",\n"}, {"line_no": 17, "char_start": 651, "char_end": 674, "line": "            \"1.2.3.4\",\n"}, {"line_no": 18, "char_start": 651, "char_end": 674, "line": "            \"1.2.3.1\",\n"}, {"line_no": 19, "char_start": 651, "char_end": 674, "line": "            \"2.2.3.0\",\n"}, {"line_no": 20, "char_start": 651, "char_end": 674, "line": "            \"2.2.3.1\",\n"}, {"line_no": 36, "char_start": 1094, "char_end": 1115, "line": "            \"123::\",\n"}, {"line_no": 37, "char_start": 1094, "char_end": 1116, "line": "            \"123::4\",\n"}, {"line_no": 38, "char_start": 1094, "char_end": 1116, "line": "            \"123::1\",\n"}, {"line_no": 39, "char_start": 1094, "char_end": 1115, "line": "            \"223::\",\n"}, {"line_no": 40, "char_start": 1094, "char_end": 1116, "line": "            \"223::1\",\n"}], "added": [{"line_no": 21, "char_start": 651, "char_end": 679, "line": "            \"<IP-Address>\",\n"}, {"line_no": 22, "char_start": 679, "char_end": 707, "line": "            \"<IP-Address>\",\n"}, {"line_no": 23, "char_start": 707, "char_end": 735, "line": "            \"<IP-Address>\",\n"}, {"line_no": 24, "char_start": 735, "char_end": 763, "line": "            \"<IP-Address>\",\n"}, {"line_no": 25, "char_start": 763, "char_end": 791, "line": "            \"<IP-Address>\",\n"}, {"line_no": 41, "char_start": 1094, "char_end": 1122, "line": "            \"<IP-Address>\",\n"}, {"line_no": 42, "char_start": 1122, "char_end": 1150, "line": "            \"<IP-Address>\",\n"}, {"line_no": 43, "char_start": 1150, "char_end": 1178, "line": "            \"<IP-Address>\",\n"}, {"line_no": 44, "char_start": 1178, "char_end": 1206, "line": "            \"<IP-Address>\",\n"}, {"line_no": 45, "char_start": 1206, "char_end": 1234, "line": "            \"<IP-Address>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 651, "char_end": 674, "chars": "            \"1.2.3.0\",\n"}, {"char_start": 651, "char_end": 674, "chars": "            \"1.2.3.4\",\n"}, {"char_start": 651, "char_end": 674, "chars": "            \"1.2.3.1\",\n"}, {"char_start": 651, "char_end": 674, "chars": "            \"2.2.3.0\",\n"}, {"char_start": 651, "char_end": 674, "chars": "            \"2.2.3.1\",\n"}, {"char_start": 1094, "char_end": 1115, "chars": "            \"123::\",\n"}, {"char_start": 1094, "char_end": 1116, "chars": "            \"123::4\",\n"}, {"char_start": 1094, "char_end": 1116, "chars": "            \"123::1\",\n"}, {"char_start": 1094, "char_end": 1115, "chars": "            \"223::\",\n"}, {"char_start": 1094, "char_end": 1116, "chars": "            \"223::1\",\n"}], "added": [{"char_start": 651, "char_end": 679, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 679, "char_end": 707, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 707, "char_end": 735, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 735, "char_end": 763, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 763, "char_end": 791, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 1094, "char_end": 1122, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 1122, "char_end": 1150, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 1150, "char_end": 1178, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 1178, "char_end": 1206, "chars": "            \"<IP-Address>\",\n"}, {"char_start": 1206, "char_end": 1234, "chars": "            \"<IP-Address>\",\n"}]}}
{"func_name": 12746, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            State::Up,\n            \"No address\"\n        );\n    }\n\n    #[test]\n    fn test_compute_state() {\n        let properties = fnet_interfaces_ext::Properties {\n            id: ID1.to_u64(),\n            name: ETHERNET_INTERFACE_NAME.to_string(),\n            device_class: fnet_interfaces::DeviceClass::Device(\n                fidl_fuchsia_hardware_network::DeviceClass::Ethernet,\n            ),\n            has_default_ipv4_route: true,\n            has_default_ipv6_route: true,\n            online: true,\n            addresses: vec![\n                fnet_interfaces_ext::Address {\n                    addr: fidl_subnet!(\"1.2.3.4/24\"),\n                    valid_until: fuchsia_zircon::Time::INFINITE.into_nanos(),\n                },\n                fnet_interfaces_ext::Address {\n                    addr: fidl_subnet!(\"123::4/64\"),\n                    valid_until: fuchsia_zircon::Time::INFINITE.into_nanos(),\n                },\n            ],\n        };\n        let route_table = &[\n            hal::Route {\n                gateway: Some(std_ip!(\"1.2.3.1\")),\n                metric: None,\n                port_id: Some(ID1),\n                target: LifIpAddr { address: IpAddr::V4(Ipv4Addr::UNSPECIFIED), prefix: 0 },\n            },\n            hal::Route {\n                gateway: Some(std_ip!(\"123::1\")),\n                metric: None,\n                port_id: Some(ID1),\n                target: LifIpAddr { address: IpAddr::V6(Ipv6Addr::UNSPECIFIED), prefix: 0 },\n            },\n        ];\n        let route_table2 = &[\n            hal::Route {\n                gateway: Some(std_ip!(\"2.2.3.1\")),\n                metric: None,\n                port_id: Some(ID1),\n                target: LifIpAddr { address: IpAddr::V4(Ipv4Addr::UNSPECIFIED), prefix: 0 },\n            },\n            hal::Route {\n                gateway: Some(std_ip!(\"223::1\")),", "func_src_after": "            State::Up,\n            \"No address\"\n        );\n    }\n\n    #[test]\n    fn test_compute_state() {\n        let properties = fnet_interfaces_ext::Properties {\n            id: ID1.to_u64(),\n            name: ETHERNET_INTERFACE_NAME.to_string(),\n            device_class: fnet_interfaces::DeviceClass::Device(\n                fidl_fuchsia_hardware_network::DeviceClass::Ethernet,\n            ),\n            has_default_ipv4_route: true,\n            has_default_ipv6_route: true,\n            online: true,\n            addresses: vec![\n                fnet_interfaces_ext::Address {\n                    addr: fidl_subnet!(\"<IP-Address>/24\"),\n                    valid_until: fuchsia_zircon::Time::INFINITE.into_nanos(),\n                },\n                fnet_interfaces_ext::Address {\n                    addr: fidl_subnet!(\"<IP-Address>/64\"),\n                    valid_until: fuchsia_zircon::Time::INFINITE.into_nanos(),\n                },\n            ],\n        };\n        let route_table = &[\n            hal::Route {\n                gateway: Some(std_ip!(\"<IP-Address>\")),\n                metric: None,\n                port_id: Some(ID1),\n                target: LifIpAddr { address: IpAddr::V4(Ipv4Addr::UNSPECIFIED), prefix: 0 },\n            },\n            hal::Route {\n                gateway: Some(std_ip!(\"<IP-Address>\")),\n                metric: None,\n                port_id: Some(ID1),\n                target: LifIpAddr { address: IpAddr::V6(Ipv6Addr::UNSPECIFIED), prefix: 0 },\n            },\n        ];\n        let route_table2 = &[\n            hal::Route {\n                gateway: Some(std_ip!(\"<IP-Address>\")),\n                metric: None,\n                port_id: Some(ID1),\n                target: LifIpAddr { address: IpAddr::V4(Ipv4Addr::UNSPECIFIED), prefix: 0 },\n            },\n            hal::Route {\n                gateway: Some(std_ip!(\"<IP-Address>\")),", "line_changes": {"deleted": [{"line_no": 19, "char_start": 587, "char_end": 641, "line": "                    addr: fidl_subnet!(\"1.2.3.4/24\"),\n"}, {"line_no": 24, "char_start": 790, "char_end": 843, "line": "                    addr: fidl_subnet!(\"123::4/64\"),\n"}, {"line_no": 32, "char_start": 1026, "char_end": 1077, "line": "                gateway: Some(std_ip!(\"1.2.3.1\")),\n"}, {"line_no": 39, "char_start": 1281, "char_end": 1331, "line": "                gateway: Some(std_ip!(\"123::1\")),\n"}, {"line_no": 48, "char_start": 1577, "char_end": 1628, "line": "                gateway: Some(std_ip!(\"2.2.3.1\")),\n"}, {"line_no": 55, "char_start": 1832, "char_end": 1881, "line": "                gateway: Some(std_ip!(\"223::1\")),"}], "added": [{"line_no": 20, "char_start": 587, "char_end": 646, "line": "                    addr: fidl_subnet!(\"<IP-Address>/24\"),\n"}, {"line_no": 25, "char_start": 790, "char_end": 849, "line": "                    addr: fidl_subnet!(\"<IP-Address>/64\"),\n"}, {"line_no": 33, "char_start": 1026, "char_end": 1082, "line": "                gateway: Some(std_ip!(\"<IP-Address>\")),\n"}, {"line_no": 40, "char_start": 1281, "char_end": 1337, "line": "                gateway: Some(std_ip!(\"<IP-Address>\")),\n"}, {"line_no": 49, "char_start": 1577, "char_end": 1633, "line": "                gateway: Some(std_ip!(\"<IP-Address>\")),\n"}, {"line_no": 56, "char_start": 1832, "char_end": 1887, "line": "                gateway: Some(std_ip!(\"<IP-Address>\")),"}]}, "char_changes": {"deleted": [{"char_start": 587, "char_end": 641, "chars": "                    addr: fidl_subnet!(\"1.2.3.4/24\"),\n"}, {"char_start": 790, "char_end": 843, "chars": "                    addr: fidl_subnet!(\"123::4/64\"),\n"}, {"char_start": 1026, "char_end": 1077, "chars": "                gateway: Some(std_ip!(\"1.2.3.1\")),\n"}, {"char_start": 1281, "char_end": 1331, "chars": "                gateway: Some(std_ip!(\"123::1\")),\n"}, {"char_start": 1577, "char_end": 1628, "chars": "                gateway: Some(std_ip!(\"2.2.3.1\")),\n"}, {"char_start": 1832, "char_end": 1881, "chars": "                gateway: Some(std_ip!(\"223::1\")),"}], "added": [{"char_start": 587, "char_end": 646, "chars": "                    addr: fidl_subnet!(\"<IP-Address>/24\"),\n"}, {"char_start": 790, "char_end": 849, "chars": "                    addr: fidl_subnet!(\"<IP-Address>/64\"),\n"}, {"char_start": 1026, "char_end": 1082, "chars": "                gateway: Some(std_ip!(\"<IP-Address>\")),\n"}, {"char_start": 1281, "char_end": 1337, "chars": "                gateway: Some(std_ip!(\"<IP-Address>\")),\n"}, {"char_start": 1577, "char_end": 1633, "chars": "                gateway: Some(std_ip!(\"<IP-Address>\")),\n"}, {"char_start": 1832, "char_end": 1887, "chars": "                gateway: Some(std_ip!(\"<IP-Address>\")),"}]}}
{"func_name": 12747, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            &fnet_interfaces_ext::Properties { online: false, ..properties.clone() },\n            &[],\n            &FakePing::default(),\n        )\n        .expect(\"error calling compute_state, want Down state\");\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Down, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(\n            &mut exec,\n            &fnet_interfaces_ext::Properties {\n                has_default_ipv4_route: false,\n                has_default_ipv6_route: false,\n                ..properties.clone()\n            },\n            &[],\n            &FakePing::default(),\n        )\n        .expect(\"error calling compute_state, want Local state due to no default routes\");\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Local, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(&mut exec, &properties, route_table2, &FakePing::default())\n            .expect(\n                \"error calling compute_state, want Local state due to no matching default route\",\n            );\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Local, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(\n            &mut exec,\n            &properties,\n            route_table,\n            &mut FakePing {\n                gateway_addrs: [std_ip!(\"1.2.3.1\"), std_ip!(\"123::1\")].iter().cloned().collect(),\n                gateway_response: true,\n                internet_response: false,\n            },\n        )\n        .expect(\"error calling compute_state, want Gateway state\");\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Gateway, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(\n            &mut exec,\n            &properties,", "func_src_after": "            &fnet_interfaces_ext::Properties { online: false, ..properties.clone() },\n            &[],\n            &FakePing::default(),\n        )\n        .expect(\"error calling compute_state, want Down state\");\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Down, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(\n            &mut exec,\n            &fnet_interfaces_ext::Properties {\n                has_default_ipv4_route: false,\n                has_default_ipv6_route: false,\n                ..properties.clone()\n            },\n            &[],\n            &FakePing::default(),\n        )\n        .expect(\"error calling compute_state, want Local state due to no default routes\");\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Local, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(&mut exec, &properties, route_table2, &FakePing::default())\n            .expect(\n                \"error calling compute_state, want Local state due to no matching default route\",\n            );\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Local, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(\n            &mut exec,\n            &properties,\n            route_table,\n            &mut FakePing {\n                gateway_addrs: [std_ip!(\"<IP-Address>\"), std_ip!(\"<IP-Address>\")].iter().cloned().collect(),\n                gateway_response: true,\n                internet_response: false,\n            },\n        )\n        .expect(\"error calling compute_state, want Gateway state\");\n        let want =\n            Some(IpVersions::<StateEvent>::construct(StateEvent { state: State::Gateway, time }));\n        assert_eq!(got, want);\n\n        let got = run_compute_state(\n            &mut exec,\n            &properties,", "line_changes": {"deleted": [{"line_no": 38, "char_start": 1428, "char_end": 1526, "line": "                gateway_addrs: [std_ip!(\"1.2.3.1\"), std_ip!(\"123::1\")].iter().cloned().collect(),\n"}], "added": [{"line_no": 39, "char_start": 1428, "char_end": 1537, "line": "                gateway_addrs: [std_ip!(\"<IP-Address>\"), std_ip!(\"<IP-Address>\")].iter().cloned().collect(),\n"}]}, "char_changes": {"deleted": [{"char_start": 1428, "char_end": 1526, "chars": "                gateway_addrs: [std_ip!(\"1.2.3.1\"), std_ip!(\"123::1\")].iter().cloned().collect(),\n"}], "added": [{"char_start": 1428, "char_end": 1537, "chars": "                gateway_addrs: [std_ip!(\"<IP-Address>\"), std_ip!(\"<IP-Address>\")].iter().cloned().collect(),\n"}]}}
{"func_name": 12753, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * Swaggy Jenkins\n *\n * Jenkins API clients generated from Swagger / Open API specification\n *\n * The version of the OpenAPI document: 1.1.2-pre.0\n * Contact: blah@cliffano.com\n * Generated by: https://openapi-generator.tech\n */\n\n\n\n\n#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]\npub struct FreeStyleBuild {\n    #[serde(rename = \"_class\", skip_serializing_if = \"Option::is_none\")]\n    pub _class: Option<String>,\n    #[serde(rename = \"number\", skip_serializing_if = \"Option::is_none\")]\n    pub number: Option<i32>,\n    #[serde(rename = \"url\", skip_serializing_if = \"Option::is_none\")]\n    pub url: Option<String>,\n    #[serde(rename = \"actions\", skip_serializing_if = \"Option::is_none\")]\n    pub actions: Option<Vec<crate::models::CauseAction>>,\n    #[serde(rename = \"building\", skip_serializing_if = \"Option::is_none\")]\n    pub building: Option<bool>,\n    #[serde(rename = \"description\", skip_serializing_if = \"Option::is_none\")]\n    pub description: Option<String>,\n    #[serde(rename = \"displayName\", skip_serializing_if = \"Option::is_none\")]\n    pub display_name: Option<String>,\n    #[serde(rename = \"duration\", skip_serializing_if = \"Option::is_none\")]\n    pub duration: Option<i32>,\n    #[serde(rename = \"estimatedDuration\", skip_serializing_if = \"Option::is_none\")]\n    pub estimated_duration: Option<i32>,\n    #[serde(rename = \"executor\", skip_serializing_if = \"Option::is_none\")]\n    pub executor: Option<String>,\n    #[serde(rename = \"fullDisplayName\", skip_serializing_if = \"Option::is_none\")]\n    pub full_display_name: Option<String>,\n    #[serde(rename = \"id\", skip_serializing_if = \"Option::is_none\")]\n    pub id: Option<String>,\n    #[serde(rename = \"keepLog\", skip_serializing_if = \"Option::is_none\")]\n    pub keep_log: Option<bool>,\n    #[serde(rename = \"queueId\", skip_serializing_if = \"Option::is_none\")]\n    pub queue_id: Option<i32>,\n    #[serde(rename = \"result\", skip_serializing_if = \"Option::is_none\")]\n    pub result: Option<String>,\n    #[serde(rename = \"timestamp\", skip_serializing_if = \"Option::is_none\")]\n    pub timestamp: Option<i32>,\n    #[serde(rename = \"builtOn\", skip_serializing_if = \"Option::is_none\")]\n    pub built_on: Option<String>,\n    #[serde(rename = \"changeSet\", skip_serializing_if = \"Option::is_none\")]", "func_src_after": "/*\n * Swaggy Jenkins\n *\n * Jenkins API clients generated from Swagger / Open API specification\n *\n * The version of the OpenAPI document: 1.1.2-pre.0\n * Contact: <EMAIL>\n * Generated by: https://openapi-generator.tech\n */\n\n\n\n\n#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]\npub struct FreeStyleBuild {\n    #[serde(rename = \"_class\", skip_serializing_if = \"Option::is_none\")]\n    pub _class: Option<String>,\n    #[serde(rename = \"number\", skip_serializing_if = \"Option::is_none\")]\n    pub number: Option<i32>,\n    #[serde(rename = \"url\", skip_serializing_if = \"Option::is_none\")]\n    pub url: Option<String>,\n    #[serde(rename = \"actions\", skip_serializing_if = \"Option::is_none\")]\n    pub actions: Option<Vec<crate::models::CauseAction>>,\n    #[serde(rename = \"building\", skip_serializing_if = \"Option::is_none\")]\n    pub building: Option<bool>,\n    #[serde(rename = \"description\", skip_serializing_if = \"Option::is_none\")]\n    pub description: Option<String>,\n    #[serde(rename = \"displayName\", skip_serializing_if = \"Option::is_none\")]\n    pub display_name: Option<String>,\n    #[serde(rename = \"duration\", skip_serializing_if = \"Option::is_none\")]\n    pub duration: Option<i32>,\n    #[serde(rename = \"estimatedDuration\", skip_serializing_if = \"Option::is_none\")]\n    pub estimated_duration: Option<i32>,\n    #[serde(rename = \"executor\", skip_serializing_if = \"Option::is_none\")]\n    pub executor: Option<String>,\n    #[serde(rename = \"fullDisplayName\", skip_serializing_if = \"Option::is_none\")]\n    pub full_display_name: Option<String>,\n    #[serde(rename = \"id\", skip_serializing_if = \"Option::is_none\")]\n    pub id: Option<String>,\n    #[serde(rename = \"keepLog\", skip_serializing_if = \"Option::is_none\")]\n    pub keep_log: Option<bool>,\n    #[serde(rename = \"queueId\", skip_serializing_if = \"Option::is_none\")]\n    pub queue_id: Option<i32>,\n    #[serde(rename = \"result\", skip_serializing_if = \"Option::is_none\")]\n    pub result: Option<String>,\n    #[serde(rename = \"timestamp\", skip_serializing_if = \"Option::is_none\")]\n    pub timestamp: Option<i32>,\n    #[serde(rename = \"builtOn\", skip_serializing_if = \"Option::is_none\")]\n    pub built_on: Option<String>,\n    #[serde(rename = \"changeSet\", skip_serializing_if = \"Option::is_none\")]", "line_changes": {"deleted": [{"line_no": 7, "char_start": 150, "char_end": 180, "line": " * Contact: blah@cliffano.com\n"}], "added": [{"line_no": 8, "char_start": 150, "char_end": 170, "line": " * Contact: <EMAIL>\n"}]}, "char_changes": {"deleted": [{"char_start": 150, "char_end": 180, "chars": " * Contact: blah@cliffano.com\n"}], "added": [{"char_start": 150, "char_end": 170, "chars": " * Contact: <EMAIL>\n"}]}}
{"func_name": 12758, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "use async_std::io;\nuse async_std::net::{Shutdown, TcpListener, TcpStream, ToSocketAddrs};\nuse async_std::prelude::*;\nuse async_std::task;\n\nuse hyper::service::{make_service_fn, service_fn};\nuse hyper::{Body, Request, Response, Server, Client};\nuse std::convert::Infallible;\nuse std::net::SocketAddr;\n\nconst SOCKS5_VERSION: u8 = 0x05;\nconst SOCKS5_AUTH_METHOD_NONE: u8 = 0x00;\nconst SOCKS5_CMD_TCP_CONNECT: u8 = 0x01;\nconst SOCKS5_RSV: u8 = 0x00;\nconst SOCKS5_ADDR_TYPE_IPV4: u8 = 0x01;\nconst SOCKS5_ADDR_TYPE_DOMAIN: u8 = 0x03;\nconst SOCKS5_ADDR_TYPE_IPV6: u8 = 0x04;\nconst SOCKS5_REPLY_SUCCEEDED: u8 = 0x00;\n\ntype Result<T> = std::result::Result<T, Box<dyn std::error::Error + Send + Sync>>;\n\nfn main() -> Result<()> {\n  run()\n}\n\nfn run() -> Result<()> {\n  let socks5_fut = socks5_accept_loop(\"127.0.0.1:1186\");\n  println!(\"listening 127.0.0.1:1186\");\n  task::spawn(async {\n    println!(\"listening 127.0.0.1:1187\");\n    http_accept_loop(\"127.0.0.1:1187\");\n  });\n  task::block_on(socks5_fut)\n}\n\nasync fn socks5_accept_loop(addr: impl ToSocketAddrs) -> Result<()> {\n  let listener = TcpListener::bind(addr).await?;\n  let mut incoming = listener.incoming();\n  while let Some(stream) = incoming.next().await {\n    let stream = stream?;\n    println!(\"Accept from {}\", stream.peer_addr()?);\n    spawn_and_log_error(socks5_handle(stream));\n  }\n  Ok(())\n}\n\n#[tokio::main]\nasync fn http_accept_loop(addr: impl ToSocketAddrs) {\n  // We'll bind to 127.0.0.1:3000\n  let addr = SocketAddr::from(([127, 0, 0, 1], 1187));", "func_src_after": "use async_std::io;\nuse async_std::net::{Shutdown, TcpListener, TcpStream, ToSocketAddrs};\nuse async_std::prelude::*;\nuse async_std::task;\n\nuse hyper::service::{make_service_fn, service_fn};\nuse hyper::{Body, Request, Response, Server, Client};\nuse std::convert::Infallible;\nuse std::net::SocketAddr;\n\nconst SOCKS5_VERSION: u8 = 0x05;\nconst SOCKS5_AUTH_METHOD_NONE: u8 = 0x00;\nconst SOCKS5_CMD_TCP_CONNECT: u8 = 0x01;\nconst SOCKS5_RSV: u8 = 0x00;\nconst SOCKS5_ADDR_TYPE_IPV4: u8 = 0x01;\nconst SOCKS5_ADDR_TYPE_DOMAIN: u8 = 0x03;\nconst SOCKS5_ADDR_TYPE_IPV6: u8 = 0x04;\nconst SOCKS5_REPLY_SUCCEEDED: u8 = 0x00;\n\ntype Result<T> = std::result::Result<T, Box<dyn std::error::Error + Send + Sync>>;\n\nfn main() -> Result<()> {\n  run()\n}\n\nfn run() -> Result<()> {\n  let socks5_fut = socks5_accept_loop(\"<IP-Address>:1186\");\n  println!(\"listening <IP-Address>:1186\");\n  task::spawn(async {\n    println!(\"listening <IP-Address>:1187\");\n    http_accept_loop(\"<IP-Address>:1187\");\n  });\n  task::block_on(socks5_fut)\n}\n\nasync fn socks5_accept_loop(addr: impl ToSocketAddrs) -> Result<()> {\n  let listener = TcpListener::bind(addr).await?;\n  let mut incoming = listener.incoming();\n  while let Some(stream) = incoming.next().await {\n    let stream = stream?;\n    println!(\"Accept from {}\", stream.peer_addr()?);\n    spawn_and_log_error(socks5_handle(stream));\n  }\n  Ok(())\n}\n\n#[tokio::main]\nasync fn http_accept_loop(addr: impl ToSocketAddrs) {\n  // We'll bind to <IP-Address>:3000\n  let addr = SocketAddr::from(([<IP-Address>], 1187));", "line_changes": {"deleted": [{"line_no": 27, "char_start": 756, "char_end": 813, "line": "  let socks5_fut = socks5_accept_loop(\"127.0.0.1:1186\");\n"}, {"line_no": 29, "char_start": 816, "char_end": 856, "line": "  println!(\"listening 127.0.0.1:1186\");\n"}, {"line_no": 32, "char_start": 881, "char_end": 923, "line": "    println!(\"listening 127.0.0.1:1187\");\n"}, {"line_no": 34, "char_start": 926, "char_end": 966, "line": "    http_accept_loop(\"127.0.0.1:1187\");\n"}, {"line_no": 53, "char_start": 1431, "char_end": 1465, "line": "  // We'll bind to 127.0.0.1:3000\n"}, {"line_no": 55, "char_start": 1468, "char_end": 1522, "line": "  let addr = SocketAddr::from(([127, 0, 0, 1], 1187));"}], "added": [{"line_no": 28, "char_start": 756, "char_end": 816, "line": "  let socks5_fut = socks5_accept_loop(\"<IP-Address>:1186\");\n"}, {"line_no": 30, "char_start": 816, "char_end": 859, "line": "  println!(\"listening <IP-Address>:1186\");\n"}, {"line_no": 33, "char_start": 881, "char_end": 926, "line": "    println!(\"listening <IP-Address>:1187\");\n"}, {"line_no": 35, "char_start": 926, "char_end": 969, "line": "    http_accept_loop(\"<IP-Address>:1187\");\n"}, {"line_no": 54, "char_start": 1431, "char_end": 1468, "line": "  // We'll bind to <IP-Address>:3000\n"}, {"line_no": 56, "char_start": 1468, "char_end": 1522, "line": "  let addr = SocketAddr::from(([<IP-Address>], 1187));"}]}, "char_changes": {"deleted": [{"char_start": 756, "char_end": 813, "chars": "  let socks5_fut = socks5_accept_loop(\"127.0.0.1:1186\");\n"}, {"char_start": 816, "char_end": 856, "chars": "  println!(\"listening 127.0.0.1:1186\");\n"}, {"char_start": 881, "char_end": 923, "chars": "    println!(\"listening 127.0.0.1:1187\");\n"}, {"char_start": 926, "char_end": 966, "chars": "    http_accept_loop(\"127.0.0.1:1187\");\n"}, {"char_start": 1431, "char_end": 1465, "chars": "  // We'll bind to 127.0.0.1:3000\n"}, {"char_start": 1468, "char_end": 1522, "chars": "  let addr = SocketAddr::from(([127, 0, 0, 1], 1187));"}], "added": [{"char_start": 756, "char_end": 816, "chars": "  let socks5_fut = socks5_accept_loop(\"<IP-Address>:1186\");\n"}, {"char_start": 816, "char_end": 859, "chars": "  println!(\"listening <IP-Address>:1186\");\n"}, {"char_start": 881, "char_end": 926, "chars": "    println!(\"listening <IP-Address>:1187\");\n"}, {"char_start": 926, "char_end": 969, "chars": "    http_accept_loop(\"<IP-Address>:1187\");\n"}, {"char_start": 1431, "char_end": 1468, "chars": "  // We'll bind to <IP-Address>:3000\n"}, {"char_start": 1468, "char_end": 1522, "chars": "  let addr = SocketAddr::from(([<IP-Address>], 1187));"}]}}
{"func_name": 12772, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    let key_pair = ed25519_key_pair();\n    let mut contract = make_sample_contract(&key_pair, &bls_pair);\n    let address = Address::from(&key_pair.public);\n\n    let assert_balance = |contract: &StakingContract, value: u64| {\n        assert_eq!(contract.get_balance(&Address::from(&key_pair.public)), value.try_into().unwrap());\n        assert_eq!(contract.balance, Coin::from_u64_unchecked(value));\n    };\n\n    let make_unpark = |total_cost: u64, fee: u64| -> Transaction {\n        let mut tx = make_outgoing_transaction();\n        tx.recipient = tx.sender.clone();\n        tx.value = Coin::try_from(total_cost - fee).unwrap();\n        tx.fee = Coin::try_from(fee).unwrap();\n        tx.proof = SignatureProof::from(key_pair.public, key_pair.sign(&tx.serialize_content())).serialize_to_vec();\n        tx.data = StakingTransactionType::Unpark.serialize_to_vec();\n        tx\n    };\n\n    // Unpark with invalid value\n    let unpark = make_unpark(2, 2);\n    assert_eq!(contract.check_outgoing_transaction(&unpark, 2), Err(AccountError::InvalidForSender));\n\n    // Invalid type\n    let mut unpark = make_unpark(300_000_000, 2);\n    unpark.data = Vec::new();\n    if let Err(AccountError::InvalidSerialization(_e)) = contract.check_outgoing_transaction(&unpark, 2) {\n        // Ok\n    } else {\n        assert!(false, \"Transaction should have been rejected.\");\n    }\n\n    // Unpark with address that is not staked\n    let priv_key: PrivateKey = Deserialize::deserialize(&mut &hex::decode(\"aa9b15259bf42d3e74efc25a41db8e3223280bffa7ffbe5903a5537ac9b43275\").unwrap()[..]).unwrap();\n    let key_pair2: KeyPair = priv_key.into();\n    let mut unpark = make_unpark(300_000_000, 2);\n    assert_ne!(Address::from(&key_pair2.public), address);\n    unpark.proof = SignatureProof::from(key_pair2.public, key_pair2.sign(&unpark.serialize_content())).serialize_to_vec();\n    assert_eq!(contract.check_outgoing_transaction(&unpark, 2), Err(AccountError::InvalidForSender));\n\n    // Unpark with address that is not parked\n    let unpark = make_unpark(300_000_000, 2);\n    assert_eq!(contract.check_outgoing_transaction(&unpark, 2), Err(AccountError::InvalidForSender));\n\n    // Slash\n    let slash = Inherent {\n        ty: InherentType::Slash,\n        target: Default::default(),\n        value: Coin::ZERO,\n        data: address.serialize_to_vec(),", "func_src_after": "    let key_pair = ed25519_key_pair();\n    let mut contract = make_sample_contract(&key_pair, &bls_pair);\n    let address = Address::from(&key_pair.public);\n\n    let assert_balance = |contract: &StakingContract, value: u64| {\n        assert_eq!(contract.get_balance(&Address::from(&key_pair.public)), value.try_into().unwrap());\n        assert_eq!(contract.balance, Coin::from_u64_unchecked(value));\n    };\n\n    let make_unpark = |total_cost: u64, fee: u64| -> Transaction {\n        let mut tx = make_outgoing_transaction();\n        tx.recipient = tx.sender.clone();\n        tx.value = Coin::try_from(total_cost - fee).unwrap();\n        tx.fee = Coin::try_from(fee).unwrap();\n        tx.proof = SignatureProof::from(key_pair.public, key_pair.sign(&tx.serialize_content())).serialize_to_vec();\n        tx.data = StakingTransactionType::Unpark.serialize_to_vec();\n        tx\n    };\n\n    // Unpark with invalid value\n    let unpark = make_unpark(2, 2);\n    assert_eq!(contract.check_outgoing_transaction(&unpark, 2), Err(AccountError::InvalidForSender));\n\n    // Invalid type\n    let mut unpark = make_unpark(300_000_000, 2);\n    unpark.data = Vec::new();\n    if let Err(AccountError::InvalidSerialization(_e)) = contract.check_outgoing_transaction(&unpark, 2) {\n        // Ok\n    } else {\n        assert!(false, \"Transaction should have been rejected.\");\n    }\n\n    // Unpark with address that is not staked\n    let priv_key: PrivateKey = Deserialize::deserialize(&mut &hex::decode(\"aa9b15259bf42d3e74efc25a41db8e3223280bffa7ffbe5903a5537ac9b43275\").unwrap()[..]).unwrap();\n    let key_pair2: KeyPair = priv_key.into();\n    let mut unpark = make_unpark(300_000_000, 2);\n    assert_ne!(Address::from(&key_pair2.public), address);\n    unpark.proof = SignatureProof::from(key_pair2.public, key_pair2.sign(&unpark.serialize_content())).serialize_to_vec();\n    assert_eq!(contract.check_outgoing_transaction(&unpark, 2), Err(AccountError::InvalidForSender));\n\n    // Unpark with address that is not parked\n    let unpark = make_unpark(300_000_000, 2);\n    assert_eq!(contract.check_outgoing_transaction(&unpark, 2), Err(AccountError::InvalidForSender));\n\n    // Slash\n    let slash = Inherent {\n        ty: InherentType::Slash,\n        target: Default::default(),\n        value: Coin::ZERO,\n        data: address.serialize_to_vec(),", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12776, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "use chrono::{DateTime, Datelike, Local};\nuse serde::{Deserialize, Serialize};\nuse serde_json::Result;\nuse std::env;\nuse std::fs;\n\n#[derive(Serialize, Deserialize, Debug)]\npub struct Person {\n    pub name: String,\n    pub age: u8,\n    pub contact: Contact,\n}\n\n#[derive(Serialize, Deserialize, Debug)]\npub struct Contact {\n    email: String,\n    pub phones: Vec<String>,\n    address: String,\n}\n\n#[test]\nfn test_path() {\n    let home = env::var(\"HOME\").unwrap();\n    let file_name = home + \"/.tgm/settings.json\";\n    let contents = fs::read_to_string(file_name).expect(\"Something went wrong reading the file\");\n    println!(\"{}\", contents);\n}\n\n#[test]\nfn test_json() -> Result<()> {\n    let contact = Contact {\n        email: \"libing.chen@gmail.com\".into(),\n        phones: vec![\"185\".into(), \"186\".into()],\n        address: \"中国杭州\".into(),\n    };\n    let person = Person {\n        name: String::from(\"linux_china\"),\n        age: 40,\n        contact,\n    };\n    let json_text = serde_json::to_string(&person).unwrap();\n    println!(\"{}\", json_text);\n    let person2: Person = serde_json::from_str(json_text.as_str())?;\n    assert_eq!(person.name, person2.name);\n    println!(\"{:?}\", person2);\n\n    Ok(())\n}\n\n#[test]", "func_src_after": "use chrono::{DateTime, Datelike, Local};\nuse serde::{Deserialize, Serialize};\nuse serde_json::Result;\nuse std::env;\nuse std::fs;\n\n#[derive(Serialize, Deserialize, Debug)]\npub struct Person {\n    pub name: String,\n    pub age: u8,\n    pub contact: Contact,\n}\n\n#[derive(Serialize, Deserialize, Debug)]\npub struct Contact {\n    email: String,\n    pub phones: Vec<String>,\n    address: String,\n}\n\n#[test]\nfn test_path() {\n    let home = env::var(\"HOME\").unwrap();\n    let file_name = home + \"/.tgm/settings.json\";\n    let contents = fs::read_to_string(file_name).expect(\"Something went wrong reading the file\");\n    println!(\"{}\", contents);\n}\n\n#[test]\nfn test_json() -> Result<()> {\n    let contact = Contact {\n        email: \"<EMAIL>\".into(),\n        phones: vec![\"185\".into(), \"186\".into()],\n        address: \"中国杭州\".into(),\n    };\n    let person = Person {\n        name: String::from(\"linux_china\"),\n        age: 40,\n        contact,\n    };\n    let json_text = serde_json::to_string(&person).unwrap();\n    println!(\"{}\", json_text);\n    let person2: Person = serde_json::from_str(json_text.as_str())?;\n    assert_eq!(person.name, person2.name);\n    println!(\"{:?}\", person2);\n\n    Ok(())\n}\n\n#[test]", "line_changes": {"deleted": [{"line_no": 32, "char_start": 708, "char_end": 755, "line": "        email: \"libing.chen@gmail.com\".into(),\n"}], "added": [{"line_no": 33, "char_start": 708, "char_end": 741, "line": "        email: \"<EMAIL>\".into(),\n"}]}, "char_changes": {"deleted": [{"char_start": 708, "char_end": 755, "chars": "        email: \"libing.chen@gmail.com\".into(),\n"}], "added": [{"char_start": 708, "char_end": 741, "chars": "        email: \"<EMAIL>\".into(),\n"}]}}
{"func_name": 12779, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    fn test_from_public_key(expected_address: &str, public_key: &EthereumPublicKey) {\n        let address = EthereumAddress::from_public_key(public_key, &EthereumFormat::Standard).unwrap();\n        assert_eq!(expected_address, address.to_string());\n    }\n\n    fn test_from_str(expected_address: &str) {\n        let address = EthereumAddress::from_str(expected_address).unwrap();\n        assert_eq!(expected_address, address.to_string());\n    }\n\n    fn test_to_str(expected_address: &str, address: &EthereumAddress) {\n        assert_eq!(expected_address, address.to_string());\n    }\n\n    mod checksum_address {\n        use super::*;\n\n        const KEYPAIRS: [(&str, &str); 5] = [\n            (\n                \"f89f23eaeac18252fedf81bb8318d3c111d48c19b0680dcf6e0a8d5136caf287\",\n                \"0x9141B7539E7902872095C408BfA294435e2b8c8a\",\n            ),\n            (\n                \"a93701ea343247db13466f6448ffbca658726e2b4a77530db3eca3c9250b4f0d\",\n                \"0xa0967B1F698DC497A694FE955666D1dDd398145C\",\n            ),\n            (\n                \"de61e35e2e5eb9504d52f5042126591d80144d49f74b8ced68f4959a3e8edffd\",\n                \"0xD5d13d1dD277BB9041e560A63ee29c086D370b0A\",\n            ),\n            (\n                \"56f01d5e01b6fd1cc123d8d1eae0d148e00c025b5be2ef624775f7a1b802e9c1\",\n                \"0xc4488ebbE882fa2aF1D466CB2C8ecafE316c067a\",\n            ),\n            (\n                \"363af8b4d3ff22bb0e4ffc2ff198b4b5be0316f8a507ad5fe32f021c3d1ae8ad\",\n                \"0xF9001e6AEE6EA439D713fBbF960EbA76f4770E2B\",\n            ),\n        ];\n\n        #[test]\n        fn from_private_key() {\n            KEYPAIRS.iter().for_each(|(private_key, address)| {\n                let private_key = EthereumPrivateKey::from_str(private_key).unwrap();\n                test_from_private_key(address, &private_key);\n            });\n        }\n\n        #[test]", "func_src_after": "\n    fn test_from_public_key(expected_address: &str, public_key: &EthereumPublicKey) {\n        let address = EthereumAddress::from_public_key(public_key, &EthereumFormat::Standard).unwrap();\n        assert_eq!(expected_address, address.to_string());\n    }\n\n    fn test_from_str(expected_address: &str) {\n        let address = EthereumAddress::from_str(expected_address).unwrap();\n        assert_eq!(expected_address, address.to_string());\n    }\n\n    fn test_to_str(expected_address: &str, address: &EthereumAddress) {\n        assert_eq!(expected_address, address.to_string());\n    }\n\n    mod checksum_address {\n        use super::*;\n\n        const KEYPAIRS: [(&str, &str); 5] = [\n            (\n                \"f89f23eaeac18252fedf81bb8318d3c111d48c19b0680dcf6e0a8d5136caf287\",\n                \"0x9141B7539E7902872095C408BfA294435e2b8c8a\",\n            ),\n            (\n                \"a93701ea343247db13466f6448ffbca658726e2b4a77530db3eca3c9250b4f0d\",\n                \"0xa0967B1F698DC497A694FE955666D1dDd398145C\",\n            ),\n            (\n                \"de61e35e2e5eb9504d52f5042126591d80144d49f74b8ced68f4959a3e8edffd\",\n                \"0xD5d13d1dD277BB9041e560A63ee29c086D370b0A\",\n            ),\n            (\n                \"56f01d5e01b6fd1cc123d8d1eae0d148e00c025b5be2ef624775f7a1b802e9c1\",\n                \"0xc4488ebbE882fa2aF1D466CB2C8ecafE316c067a\",\n            ),\n            (\n                \"363af8b4d3ff22bb0e4ffc2ff198b4b5be0316f8a507ad5fe32f021c3d1ae8ad\",\n                \"0xF9001e6AEE6EA439D713fBbF960EbA76f4770E2B\",\n            ),\n        ];\n\n        #[test]\n        fn from_private_key() {\n            KEYPAIRS.iter().for_each(|(private_key, address)| {\n                let private_key = EthereumPrivateKey::from_str(private_key).unwrap();\n                test_from_private_key(address, &private_key);\n            });\n        }\n\n        #[test]", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12781, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            .executor(fuchsia_hyper::Executor)\n            .serve(make_svc)\n            .unwrap_or_else(|e| panic!(\"HTTP server failed! {:?}\", e));\n        fasync::Task::spawn(server).detach();\n\n        port\n    }\n\n    fn launch_test_server_v6() -> u16 {\n        let addr: SocketAddrV6 = \"[::1]:0\".parse().unwrap();\n        launch_test_server(addr.into())\n    }\n\n    fn launch_test_server_v4() -> u16 {\n        let addr: SocketAddrV4 = \"127.0.0.1:0\".parse().unwrap();\n        launch_test_server(addr.into())\n    }\n\n    /// Asserts that an HTTP request to [::1]:port succeeds.\n    async fn assert_request(port: u16) {\n        let http_client = fuchsia_hyper::new_client();\n        let request_uri = Uri::builder()\n            .scheme(\"http\")\n            .authority(format!(\"[::1]:{:?}\", port).as_str())\n            .path_and_query(\"/\")\n            .build()\n            .unwrap();\n        let response = http_client.get(request_uri).await.unwrap();\n        assert_eq!(response.status(), hyper::StatusCode::OK);\n        let resp_body = response\n            .into_body()\n            .try_fold(Vec::new(), |mut vec, b| async move {\n                vec.extend(b);\n                Ok(vec)\n            })\n            .await\n            .unwrap();\n        assert_eq!(String::from_utf8(resp_body).unwrap().as_str(), TEST_RESPONSE);\n    }\n\n    /// Asserts that an HTTP request to [::1]:port fails.\n    async fn assert_unreachable(port: u16) {\n        let http_client = fuchsia_hyper::new_client();\n        let request_uri = Uri::builder()\n            .scheme(\"http\")\n            .authority(format!(\"[::1]:{:?}\", port).as_str())\n            .path_and_query(\"/\")\n            .build()\n            .unwrap();\n        assert!(http_client.get(request_uri).await.is_err());", "func_src_after": "            .executor(fuchsia_hyper::Executor)\n            .serve(make_svc)\n            .unwrap_or_else(|e| panic!(\"HTTP server failed! {:?}\", e));\n        fasync::Task::spawn(server).detach();\n\n        port\n    }\n\n    fn launch_test_server_v6() -> u16 {\n        let addr: SocketAddrV6 = \"[<IP-Address>]:0\".parse().unwrap();\n        launch_test_server(addr.into())\n    }\n\n    fn launch_test_server_v4() -> u16 {\n        let addr: SocketAddrV4 = \"<IP-Address>:0\".parse().unwrap();\n        launch_test_server(addr.into())\n    }\n\n    /// Asserts that an HTTP request to [<IP-Address>]:port succeeds.\n    async fn assert_request(port: u16) {\n        let http_client = fuchsia_hyper::new_client();\n        let request_uri = Uri::builder()\n            .scheme(\"http\")\n            .authority(format!(\"[<IP-Address>]:{:?}\", port).as_str())\n            .path_and_query(\"/\")\n            .build()\n            .unwrap();\n        let response = http_client.get(request_uri).await.unwrap();\n        assert_eq!(response.status(), hyper::StatusCode::OK);\n        let resp_body = response\n            .into_body()\n            .try_fold(Vec::new(), |mut vec, b| async move {\n                vec.extend(b);\n                Ok(vec)\n            })\n            .await\n            .unwrap();\n        assert_eq!(String::from_utf8(resp_body).unwrap().as_str(), TEST_RESPONSE);\n    }\n\n    /// Asserts that an HTTP request to [<IP-Address>]:port fails.\n    async fn assert_unreachable(port: u16) {\n        let http_client = fuchsia_hyper::new_client();\n        let request_uri = Uri::builder()\n            .scheme(\"http\")\n            .authority(format!(\"[<IP-Address>]:{:?}\", port).as_str())\n            .path_and_query(\"/\")\n            .build()\n            .unwrap();\n        assert!(http_client.get(request_uri).await.is_err());", "line_changes": {"deleted": [{"line_no": 10, "char_start": 255, "char_end": 316, "line": "        let addr: SocketAddrV6 = \"[::1]:0\".parse().unwrap();\n"}, {"line_no": 16, "char_start": 412, "char_end": 477, "line": "        let addr: SocketAddrV4 = \"127.0.0.1:0\".parse().unwrap();\n"}, {"line_no": 21, "char_start": 527, "char_end": 588, "line": "    /// Asserts that an HTTP request to [::1]:port succeeds.\n"}, {"line_no": 27, "char_start": 762, "char_end": 823, "line": "            .authority(format!(\"[::1]:{:?}\", port).as_str())\n"}, {"line_no": 45, "char_start": 1359, "char_end": 1417, "line": "    /// Asserts that an HTTP request to [::1]:port fails.\n"}, {"line_no": 51, "char_start": 1595, "char_end": 1656, "line": "            .authority(format!(\"[::1]:{:?}\", port).as_str())\n"}], "added": [{"line_no": 11, "char_start": 255, "char_end": 325, "line": "        let addr: SocketAddrV6 = \"[<IP-Address>]:0\".parse().unwrap();\n"}, {"line_no": 17, "char_start": 412, "char_end": 480, "line": "        let addr: SocketAddrV4 = \"<IP-Address>:0\".parse().unwrap();\n"}, {"line_no": 22, "char_start": 527, "char_end": 597, "line": "    /// Asserts that an HTTP request to [<IP-Address>]:port succeeds.\n"}, {"line_no": 28, "char_start": 762, "char_end": 832, "line": "            .authority(format!(\"[<IP-Address>]:{:?}\", port).as_str())\n"}, {"line_no": 46, "char_start": 1359, "char_end": 1426, "line": "    /// Asserts that an HTTP request to [<IP-Address>]:port fails.\n"}, {"line_no": 52, "char_start": 1595, "char_end": 1665, "line": "            .authority(format!(\"[<IP-Address>]:{:?}\", port).as_str())\n"}]}, "char_changes": {"deleted": [{"char_start": 255, "char_end": 316, "chars": "        let addr: SocketAddrV6 = \"[::1]:0\".parse().unwrap();\n"}, {"char_start": 412, "char_end": 477, "chars": "        let addr: SocketAddrV4 = \"127.0.0.1:0\".parse().unwrap();\n"}, {"char_start": 527, "char_end": 588, "chars": "    /// Asserts that an HTTP request to [::1]:port succeeds.\n"}, {"char_start": 762, "char_end": 823, "chars": "            .authority(format!(\"[::1]:{:?}\", port).as_str())\n"}, {"char_start": 1359, "char_end": 1417, "chars": "    /// Asserts that an HTTP request to [::1]:port fails.\n"}, {"char_start": 1595, "char_end": 1656, "chars": "            .authority(format!(\"[::1]:{:?}\", port).as_str())\n"}], "added": [{"char_start": 255, "char_end": 325, "chars": "        let addr: SocketAddrV6 = \"[<IP-Address>]:0\".parse().unwrap();\n"}, {"char_start": 412, "char_end": 480, "chars": "        let addr: SocketAddrV4 = \"<IP-Address>:0\".parse().unwrap();\n"}, {"char_start": 527, "char_end": 597, "chars": "    /// Asserts that an HTTP request to [<IP-Address>]:port succeeds.\n"}, {"char_start": 762, "char_end": 832, "chars": "            .authority(format!(\"[<IP-Address>]:{:?}\", port).as_str())\n"}, {"char_start": 1359, "char_end": 1426, "chars": "    /// Asserts that an HTTP request to [<IP-Address>]:port fails.\n"}, {"char_start": 1595, "char_end": 1665, "chars": "            .authority(format!(\"[<IP-Address>]:{:?}\", port).as_str())\n"}]}}
{"func_name": 12785, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        assert_eq!(55.0, gen_specific().dp_sum());\n        assert_eq!(22.0, gen_specific2().dp_sum());\n    }\n\n\n    // ---------------------------\n\n\n    #[test]\n    fn hamming_weight() {\n        let dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 1);\n        let dp = super::DataPoint { ip6: \"2001:db8::2\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 1);\n        let dp = super::DataPoint { ip6: \"2001:db8::1:1:1:1\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 4);\n        let dp = super::DataPoint { ip6: \"2001:db8::1:1:1:1\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(96), 2);\n        let dp = super::DataPoint { ip6: \"2001:db8::3:3:3:3\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 2+2+2+2);\n    }\n\n    #[test]\n    fn ttl_to_start_value() {\n        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 111 } ;\n        dp.ttl_to_start_value();\n        assert_eq!(dp.meta, 128);\n\n        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 59 } ;\n        dp.ttl_to_start_value();\n        assert_eq!(dp.meta, 64);\n\n        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 29 } ;\n        dp.ttl_to_start_value();\n        assert_eq!(dp.meta, 32);\n    }\n\n    #[test]\n    fn ttl_to_path_length() {\n        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 111 } ;\n        dp.ttl_to_path_length();\n        assert_eq!(dp.meta, 17);\n\n        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 59 } ;\n        dp.ttl_to_path_length();\n        assert_eq!(dp.meta, 5);\n\n        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 29 } ;\n        dp.ttl_to_path_length();\n        assert_eq!(dp.meta, 35);", "func_src_after": "        assert_eq!(55.0, gen_specific().dp_sum());\n        assert_eq!(22.0, gen_specific2().dp_sum());\n    }\n\n\n    // ---------------------------\n\n\n    #[test]\n    fn hamming_weight() {\n        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 1);\n        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 1);\n        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 4);\n        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(96), 2);\n        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n        assert_eq!(dp.hamming_weight(64), 2+2+2+2);\n    }\n\n    #[test]\n    fn ttl_to_start_value() {\n        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 111 } ;\n        dp.ttl_to_start_value();\n        assert_eq!(dp.meta, 128);\n\n        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 59 } ;\n        dp.ttl_to_start_value();\n        assert_eq!(dp.meta, 64);\n\n        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 29 } ;\n        dp.ttl_to_start_value();\n        assert_eq!(dp.meta, 32);\n    }\n\n    #[test]\n    fn ttl_to_path_length() {\n        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 111 } ;\n        dp.ttl_to_path_length();\n        assert_eq!(dp.meta, 17);\n\n        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 59 } ;\n        dp.ttl_to_path_length();\n        assert_eq!(dp.meta, 5);\n\n        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 29 } ;\n        dp.ttl_to_path_length();\n        assert_eq!(dp.meta, 35);", "line_changes": {"deleted": [{"line_no": 11, "char_start": 186, "char_end": 270, "line": "        let dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 14, "char_start": 317, "char_end": 401, "line": "        let dp = super::DataPoint { ip6: \"2001:db8::2\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 17, "char_start": 448, "char_end": 538, "line": "        let dp = super::DataPoint { ip6: \"2001:db8::1:1:1:1\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 20, "char_start": 579, "char_end": 669, "line": "        let dp = super::DataPoint { ip6: \"2001:db8::1:1:1:1\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 23, "char_start": 710, "char_end": 800, "line": "        let dp = super::DataPoint { ip6: \"2001:db8::3:3:3:3\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 30, "char_start": 896, "char_end": 987, "line": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 111 } ;\n"}, {"line_no": 35, "char_start": 1056, "char_end": 1146, "line": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 59 } ;\n"}, {"line_no": 40, "char_start": 1214, "char_end": 1304, "line": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 29 } ;\n"}, {"line_no": 48, "char_start": 1420, "char_end": 1511, "line": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 111 } ;\n"}, {"line_no": 53, "char_start": 1579, "char_end": 1669, "line": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 59 } ;\n"}, {"line_no": 58, "char_start": 1736, "char_end": 1826, "line": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 29 } ;\n"}], "added": [{"line_no": 12, "char_start": 186, "char_end": 271, "line": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 15, "char_start": 317, "char_end": 402, "line": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 18, "char_start": 448, "char_end": 533, "line": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 21, "char_start": 579, "char_end": 664, "line": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 24, "char_start": 710, "char_end": 795, "line": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"line_no": 31, "char_start": 896, "char_end": 988, "line": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 111 } ;\n"}, {"line_no": 36, "char_start": 1056, "char_end": 1147, "line": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 59 } ;\n"}, {"line_no": 41, "char_start": 1214, "char_end": 1305, "line": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 29 } ;\n"}, {"line_no": 49, "char_start": 1420, "char_end": 1512, "line": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 111 } ;\n"}, {"line_no": 54, "char_start": 1579, "char_end": 1670, "line": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 59 } ;\n"}, {"line_no": 59, "char_start": 1736, "char_end": 1827, "line": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 29 } ;\n"}]}, "char_changes": {"deleted": [{"char_start": 186, "char_end": 270, "chars": "        let dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 317, "char_end": 401, "chars": "        let dp = super::DataPoint { ip6: \"2001:db8::2\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 448, "char_end": 538, "chars": "        let dp = super::DataPoint { ip6: \"2001:db8::1:1:1:1\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 579, "char_end": 669, "chars": "        let dp = super::DataPoint { ip6: \"2001:db8::1:1:1:1\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 710, "char_end": 800, "chars": "        let dp = super::DataPoint { ip6: \"2001:db8::3:3:3:3\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 896, "char_end": 987, "chars": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 111 } ;\n"}, {"char_start": 1056, "char_end": 1146, "chars": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 59 } ;\n"}, {"char_start": 1214, "char_end": 1304, "chars": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 29 } ;\n"}, {"char_start": 1420, "char_end": 1511, "chars": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 111 } ;\n"}, {"char_start": 1579, "char_end": 1669, "chars": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 59 } ;\n"}, {"char_start": 1736, "char_end": 1826, "chars": "        let mut dp = super::DataPoint { ip6: \"2001:db8::1\".parse().unwrap(), meta: 29 } ;\n"}], "added": [{"char_start": 186, "char_end": 271, "chars": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 317, "char_end": 402, "chars": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 448, "char_end": 533, "chars": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 579, "char_end": 664, "chars": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 710, "char_end": 795, "chars": "        let dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 0 };\n"}, {"char_start": 896, "char_end": 988, "chars": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 111 } ;\n"}, {"char_start": 1056, "char_end": 1147, "chars": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 59 } ;\n"}, {"char_start": 1214, "char_end": 1305, "chars": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 29 } ;\n"}, {"char_start": 1420, "char_end": 1512, "chars": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 111 } ;\n"}, {"char_start": 1579, "char_end": 1670, "chars": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 59 } ;\n"}, {"char_start": 1736, "char_end": 1827, "chars": "        let mut dp = super::DataPoint { ip6: \"<IP-Address>\".parse().unwrap(), meta: 29 } ;\n"}]}}
{"func_name": 12811, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        }\n\n        assert_eq!(\n            DiskInterface::delete_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![5, 7], Some(file_base_path))\n                .unwrap_err(),\n            DiskError::RangeExceedLatestRecord\n        );\n\n        DiskInterface::delete_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![5, 6], Some(file_base_path)).unwrap();\n\n        assert_eq!(\n            DiskInterface::fetch_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![5, 6], Some(file_base_path))\n                .unwrap_err(),\n            DiskError::RangeContainsDeletedRecord,\n        );\n\n        assert_eq!(\n            DiskInterface::get_num_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", Some(file_base_path)).unwrap(),\n            6\n        );\n\n        let rows: Vec<Row> =\n            DiskInterface::fetch_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![2, 5], Some(file_base_path)).unwrap();\n\n        assert_eq!(rows.len(), 3);\n\n        for i in 0..3 {\n            for (attr, val) in aff_table.rows[i + 2].data.iter() {\n                assert_eq!(val.clone(), rows[i].data[attr]);\n            }\n        }\n\n        *aff_table.rows[2].data.get_mut(\"AffName\").unwrap() = \"Leow\".to_string();\n        *aff_table.rows[4].data.get_mut(\"AffEmail\").unwrap() = \"raymond@dee.com\".to_string();\n        *aff_table.rows[4].data.get_mut(\"AffPhoneNum\").unwrap() = \"+886900000015\".to_string();\n        DiskInterface::modify_rows(\n            \"crazyguy\",\n            \"BookerDB\",\n            \"Affiliates\",\n            &vec![2, 5],\n            &aff_table.rows[2..5].iter().cloned().collect(),\n            Some(file_base_path),\n        )\n        .unwrap();\n\n        let rows: Vec<Row> =\n            DiskInterface::fetch_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![2, 5], Some(file_base_path)).unwrap();\n\n        assert_eq!(rows.len(), 3);\n", "func_src_after": "        }\n\n        assert_eq!(\n            DiskInterface::delete_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![5, 7], Some(file_base_path))\n                .unwrap_err(),\n            DiskError::RangeExceedLatestRecord\n        );\n\n        DiskInterface::delete_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![5, 6], Some(file_base_path)).unwrap();\n\n        assert_eq!(\n            DiskInterface::fetch_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![5, 6], Some(file_base_path))\n                .unwrap_err(),\n            DiskError::RangeContainsDeletedRecord,\n        );\n\n        assert_eq!(\n            DiskInterface::get_num_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", Some(file_base_path)).unwrap(),\n            6\n        );\n\n        let rows: Vec<Row> =\n            DiskInterface::fetch_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![2, 5], Some(file_base_path)).unwrap();\n\n        assert_eq!(rows.len(), 3);\n\n        for i in 0..3 {\n            for (attr, val) in aff_table.rows[i + 2].data.iter() {\n                assert_eq!(val.clone(), rows[i].data[attr]);\n            }\n        }\n\n        *aff_table.rows[2].data.get_mut(\"AffName\").unwrap() = \"Leow\".to_string();\n        *aff_table.rows[4].data.get_mut(\"AffEmail\").unwrap() = \"<EMAIL>\".to_string();\n        *aff_table.rows[4].data.get_mut(\"AffPhoneNum\").unwrap() = \"+886900000015\".to_string();\n        DiskInterface::modify_rows(\n            \"crazyguy\",\n            \"BookerDB\",\n            \"Affiliates\",\n            &vec![2, 5],\n            &aff_table.rows[2..5].iter().cloned().collect(),\n            Some(file_base_path),\n        )\n        .unwrap();\n\n        let rows: Vec<Row> =\n            DiskInterface::fetch_rows(\"crazyguy\", \"BookerDB\", \"Affiliates\", &vec![2, 5], Some(file_base_path)).unwrap();\n\n        assert_eq!(rows.len(), 3);\n", "line_changes": {"deleted": [{"line_no": 34, "char_start": 1179, "char_end": 1273, "line": "        *aff_table.rows[4].data.get_mut(\"AffEmail\").unwrap() = \"raymond@dee.com\".to_string();\n"}], "added": [{"line_no": 35, "char_start": 1179, "char_end": 1265, "line": "        *aff_table.rows[4].data.get_mut(\"AffEmail\").unwrap() = \"<EMAIL>\".to_string();\n"}]}, "char_changes": {"deleted": [{"char_start": 1179, "char_end": 1273, "chars": "        *aff_table.rows[4].data.get_mut(\"AffEmail\").unwrap() = \"raymond@dee.com\".to_string();\n"}], "added": [{"char_start": 1179, "char_end": 1265, "chars": "        *aff_table.rows[4].data.get_mut(\"AffEmail\").unwrap() = \"<EMAIL>\".to_string();\n"}]}}
{"func_name": 12821, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "extern crate clap;\n#[macro_use]\nextern crate log;\nextern crate env_logger;\nextern crate futures;\nextern crate network_simulator as netsim;\nextern crate ring;\nextern crate tokio_timer;\n\npub mod blockchain;\n\nuse blockchain::{Chain, Difficulty, PowNode};\nuse clap::{App, Arg};\nuse log::LevelFilter;\nuse netsim::network::Network;\nuse std::cmp::PartialOrd;\nuse std::fmt::Debug;\nuse std::num::ParseIntError;\nuse std::str::FromStr;\nuse std::sync::atomic::{AtomicUsize, Ordering};\nuse std::sync::Arc;\nuse std::time::Duration;\n\nfn main() {\n    // Always print backtrace on panic.\n    ::std::env::set_var(\"RUST_BACKTRACE\", \"1\");\n\n    env_logger::Builder::from_default_env()\n        .default_format_module_path(false)\n        .filter_level(LevelFilter::Info)\n        .init();\n\n    let matches = App::new(\"Proof-of-Work Blockchain Network Simulation\")\n        .version(\"0.1\")\n        .author(\"Pierre L. <pierre.larger@gmail.com>\")\n        .about(\"Simulates a Proof-of-Work blockchain network\")\n        .arg(\n            Arg::with_name(\"number_of_nodes\")\n                .short(\"n\")\n                .long(\"network_size\")\n                .value_name(\"NUMBER_OF_NODES\")\n                .help(\"Defines the size of the network.\")\n                .takes_value(true),\n        )\n        .arg(\n            Arg::with_name(\"initiated_connections_per_node\")\n                .short(\"c\")\n                .long(\"connections\")\n                .value_name(\"INITIATED_CONNECTIONS_PER_NODE\")\n                .takes_value(true),", "func_src_after": "extern crate clap;\n#[macro_use]\nextern crate log;\nextern crate env_logger;\nextern crate futures;\nextern crate network_simulator as netsim;\nextern crate ring;\nextern crate tokio_timer;\n\npub mod blockchain;\n\nuse blockchain::{Chain, Difficulty, PowNode};\nuse clap::{App, Arg};\nuse log::LevelFilter;\nuse netsim::network::Network;\nuse std::cmp::PartialOrd;\nuse std::fmt::Debug;\nuse std::num::ParseIntError;\nuse std::str::FromStr;\nuse std::sync::atomic::{AtomicUsize, Ordering};\nuse std::sync::Arc;\nuse std::time::Duration;\n\nfn main() {\n    // Always print backtrace on panic.\n    ::std::env::set_var(\"RUST_BACKTRACE\", \"1\");\n\n    env_logger::Builder::from_default_env()\n        .default_format_module_path(false)\n        .filter_level(LevelFilter::Info)\n        .init();\n\n    let matches = App::new(\"Proof-of-Work Blockchain Network Simulation\")\n        .version(\"0.1\")\n        .author(\"Pierre L. <<EMAIL>>\")\n        .about(\"Simulates a Proof-of-Work blockchain network\")\n        .arg(\n            Arg::with_name(\"number_of_nodes\")\n                .short(\"n\")\n                .long(\"network_size\")\n                .value_name(\"NUMBER_OF_NODES\")\n                .help(\"Defines the size of the network.\")\n                .takes_value(true),\n        )\n        .arg(\n            Arg::with_name(\"initiated_connections_per_node\")\n                .short(\"c\")\n                .long(\"connections\")\n                .value_name(\"INITIATED_CONNECTIONS_PER_NODE\")\n                .takes_value(true),", "line_changes": {"deleted": [{"line_no": 35, "char_start": 864, "char_end": 919, "line": "        .author(\"Pierre L. <pierre.larger@gmail.com>\")\n"}], "added": [{"line_no": 36, "char_start": 864, "char_end": 903, "line": "        .author(\"Pierre L. <<EMAIL>>\")\n"}]}, "char_changes": {"deleted": [{"char_start": 864, "char_end": 919, "chars": "        .author(\"Pierre L. <pierre.larger@gmail.com>\")\n"}], "added": [{"char_start": 864, "char_end": 903, "chars": "        .author(\"Pierre L. <<EMAIL>>\")\n"}]}}
{"func_name": 12838, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n///\n/// assert_eq!(\"127.0.0.1:8080\".parse(), Ok(socket));\n/// assert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\n/// assert_eq!(socket.port(), 8080);\n/// ```\n#[derive(Copy, Clone, PartialEq, Eq, Hash)]\npub struct SocketAddrV4 {\n    addr: Ipv4Addr,\n    port: u16,\n}\n\nimpl SocketAddrV4 {\n    /// Creates a new socket address from an [IPv4 address] and a port number.\n    ///\n    /// [IPv4 address]: ../../no-std-net/struct.Ipv4Addr.html\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// use no_std_net::{SocketAddrV4, Ipv4Addr};\n    ///\n    /// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n    /// ```\n    pub const fn new(ip: Ipv4Addr, port: u16) -> SocketAddrV4 {\n        SocketAddrV4 {\n            addr: ip,\n            port: port,\n        }\n    }\n\n    /// Returns the IP address associated with this socket address.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// use no_std_net::{SocketAddrV4, Ipv4Addr};\n    ///\n    /// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n    /// assert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\n    /// ```\n    pub const fn ip(&self) -> &Ipv4Addr {\n        &self.addr\n    }\n\n    /// Changes the IP address associated with this socket address.\n    ///\n    /// # Examples\n    ///\n    /// ```", "func_src_after": "/// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n///\n/// assert_eq!(\"<IP-Address>:8080\".parse(), Ok(socket));\n/// assert_eq!(socket.ip(), &Ipv4Addr::new(<IP-Address>));\n/// assert_eq!(socket.port(), 8080);\n/// ```\n#[derive(Copy, Clone, PartialEq, Eq, Hash)]\npub struct SocketAddrV4 {\n    addr: Ipv4Addr,\n    port: u16,\n}\n\nimpl SocketAddrV4 {\n    /// Creates a new socket address from an [IPv4 address] and a port number.\n    ///\n    /// [IPv4 address]: ../../no-std-net/struct.Ipv4Addr.html\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// use no_std_net::{SocketAddrV4, Ipv4Addr};\n    ///\n    /// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n    /// ```\n    pub const fn new(ip: Ipv4Addr, port: u16) -> SocketAddrV4 {\n        SocketAddrV4 {\n            addr: ip,\n            port: port,\n        }\n    }\n\n    /// Returns the IP address associated with this socket address.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// use no_std_net::{SocketAddrV4, Ipv4Addr};\n    ///\n    /// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n    /// assert_eq!(socket.ip(), &Ipv4Addr::new(<IP-Address>));\n    /// ```\n    pub const fn ip(&self) -> &Ipv4Addr {\n        &self.addr\n    }\n\n    /// Changes the IP address associated with this socket address.\n    ///\n    /// # Examples\n    ///\n    /// ```", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 71, "line": "/// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n"}, {"line_no": 4, "char_start": 75, "char_end": 129, "line": "/// assert_eq!(\"127.0.0.1:8080\".parse(), Ok(socket));\n"}, {"line_no": 6, "char_start": 132, "char_end": 191, "line": "/// assert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\n"}, {"line_no": 26, "char_start": 618, "char_end": 693, "line": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n"}, {"line_no": 43, "char_start": 1028, "char_end": 1103, "line": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n"}, {"line_no": 45, "char_start": 1103, "char_end": 1166, "line": "    /// assert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\n"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 71, "line": "/// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n"}, {"line_no": 5, "char_start": 75, "char_end": 132, "line": "/// assert_eq!(\"<IP-Address>:8080\".parse(), Ok(socket));\n"}, {"line_no": 7, "char_start": 132, "char_end": 191, "line": "/// assert_eq!(socket.ip(), &Ipv4Addr::new(<IP-Address>));\n"}, {"line_no": 27, "char_start": 618, "char_end": 693, "line": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n"}, {"line_no": 44, "char_start": 1028, "char_end": 1103, "line": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n"}, {"line_no": 46, "char_start": 1103, "char_end": 1166, "line": "    /// assert_eq!(socket.ip(), &Ipv4Addr::new(<IP-Address>));\n"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 71, "chars": "/// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n"}, {"char_start": 75, "char_end": 129, "chars": "/// assert_eq!(\"127.0.0.1:8080\".parse(), Ok(socket));\n"}, {"char_start": 132, "char_end": 191, "chars": "/// assert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\n"}, {"char_start": 618, "char_end": 693, "chars": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n"}, {"char_start": 1028, "char_end": 1103, "chars": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n"}, {"char_start": 1103, "char_end": 1166, "chars": "    /// assert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\n"}], "added": [{"char_start": 0, "char_end": 71, "chars": "/// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n"}, {"char_start": 75, "char_end": 132, "chars": "/// assert_eq!(\"<IP-Address>:8080\".parse(), Ok(socket));\n"}, {"char_start": 132, "char_end": 191, "chars": "/// assert_eq!(socket.ip(), &Ipv4Addr::new(<IP-Address>));\n"}, {"char_start": 618, "char_end": 693, "chars": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n"}, {"char_start": 1028, "char_end": 1103, "chars": "    /// let socket = SocketAddrV4::new(Ipv4Addr::new(<IP-Address>), 8080);\n"}, {"char_start": 1103, "char_end": 1166, "chars": "    /// assert_eq!(socket.ip(), &Ipv4Addr::new(<IP-Address>));\n"}]}}
{"func_name": 12839, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "// Download package sources from crates.io, validates build manifests and construct LLVM call graphs\n//\n// (c) 2018 - onwards Joseph Hejderup <joseph.hejderup@gmail.com>\n//\n// MIT/APACHE licensed -- check LICENSE files in top dir\nextern crate clap;\nextern crate crates_index;\nextern crate flate2;\nextern crate futures;\nextern crate reqwest;\nextern crate serde_json;\nextern crate tar;\nextern crate tokio_core;\n#[macro_use]\nextern crate lazy_static;\nextern crate glob;\nextern crate ini;\nextern crate rayon;\n\nuse clap::{App, Arg, SubCommand};\nuse crates_index::Index;\nuse flate2::read::GzDecoder;\nuse futures::{stream, Future, Stream};\nuse glob::glob;\nuse ini::Ini;\nuse rayon::prelude::*;\nuse reqwest::r#async::{Client, Decoder};\nuse serde_json::{Error, Value};\nuse tar::Archive;\n\nuse std::fs;\nuse std::fs::File;\nuse std::path::Path;\nuse std::path::PathBuf;\nuse std::process::Command;\n\nstatic CRATES_ROOT: &str = \"https://crates-io.s3-us-west-1.amazonaws.com/crates\";\n\nlazy_static! {\n    static ref CONFIG: Ini = {\n        let dir = env!(\"CARGO_MANIFEST_DIR\");\n        let conf = Ini::load_from_file(format!(\"{0}/{1}\", dir, \"conf.ini\")).unwrap();\n        conf\n    };\n    static ref PRAZI_DIR: String = {\n        CONFIG\n            .section(Some(\"storage\"))\n            .unwrap()\n            .get(\"path\")\n            .unwrap()", "func_src_after": "// Download package sources from crates.io, validates build manifests and construct LLVM call graphs\n//\n// (c) 2018 - onwards Joseph Hejderup <<EMAIL>>\n//\n// MIT/APACHE licensed -- check LICENSE files in top dir\nextern crate clap;\nextern crate crates_index;\nextern crate flate2;\nextern crate futures;\nextern crate reqwest;\nextern crate serde_json;\nextern crate tar;\nextern crate tokio_core;\n#[macro_use]\nextern crate lazy_static;\nextern crate glob;\nextern crate ini;\nextern crate rayon;\n\nuse clap::{App, Arg, SubCommand};\nuse crates_index::Index;\nuse flate2::read::GzDecoder;\nuse futures::{stream, Future, Stream};\nuse glob::glob;\nuse ini::Ini;\nuse rayon::prelude::*;\nuse reqwest::r#async::{Client, Decoder};\nuse serde_json::{Error, Value};\nuse tar::Archive;\n\nuse std::fs;\nuse std::fs::File;\nuse std::path::Path;\nuse std::path::PathBuf;\nuse std::process::Command;\n\nstatic CRATES_ROOT: &str = \"https://crates-io.s3-us-west-1.amazonaws.com/crates\";\n\nlazy_static! {\n    static ref CONFIG: Ini = {\n        let dir = env!(\"CARGO_MANIFEST_DIR\");\n        let conf = Ini::load_from_file(format!(\"{0}/{1}\", dir, \"conf.ini\")).unwrap();\n        conf\n    };\n    static ref PRAZI_DIR: String = {\n        CONFIG\n            .section(Some(\"storage\"))\n            .unwrap()\n            .get(\"path\")\n            .unwrap()", "line_changes": {"deleted": [{"line_no": 3, "char_start": 104, "char_end": 170, "line": "// (c) 2018 - onwards Joseph Hejderup <joseph.hejderup@gmail.com>\n"}], "added": [{"line_no": 4, "char_start": 104, "char_end": 152, "line": "// (c) 2018 - onwards Joseph Hejderup <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 104, "char_end": 170, "chars": "// (c) 2018 - onwards Joseph Hejderup <joseph.hejderup@gmail.com>\n"}], "added": [{"char_start": 104, "char_end": 152, "chars": "// (c) 2018 - onwards Joseph Hejderup <<EMAIL>>\n"}]}}
{"func_name": 12861, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n#[test]\nfn test_hex_deserialization() {\n    let addr = Annotated::<Addr>::from_json(\"\\\"0x2a\\\"\").unwrap();\n    assert_eq!(addr.payload_to_json().unwrap(), \"\\\"0x2a\\\"\");\n    let addr = Annotated::<Addr>::from_json(\"42\").unwrap();\n    assert_eq!(addr.payload_to_json().unwrap(), \"\\\"0x2a\\\"\");\n}\n\n#[test]\nfn test_level() {\n    assert_eq_dbg!(\n        Level::Info,\n        Annotated::<Level>::from_json(\"\\\"log\\\"\").unwrap().0.unwrap()\n    );\n    assert_eq_dbg!(\n        Level::Warning,\n        Annotated::<Level>::from_json(\"30\").unwrap().0.unwrap()\n    );\n    assert_eq_dbg!(\n        Level::Fatal,\n        Annotated::<Level>::from_json(\"\\\"critical\\\"\")\n            .unwrap()\n            .0\n            .unwrap()\n    );\n}\n\n#[test]\nfn test_ip_addr() {\n    assert_eq_dbg!(\n        IpAddr(\"{{auto}}\".into()),\n        Annotated::<IpAddr>::from_json(\"\\\"{{auto}}\\\"\")\n            .unwrap()\n            .0\n            .unwrap()\n    );\n    assert_eq_dbg!(\n        IpAddr(\"127.0.0.1\".into()),\n        Annotated::<IpAddr>::from_json(\"\\\"127.0.0.1\\\"\")\n            .unwrap()\n            .0\n            .unwrap()\n    );\n    assert_eq_dbg!(\n        IpAddr(\"::1\".into()),\n        Annotated::<IpAddr>::from_json(\"\\\"::1\\\"\")\n            .unwrap()\n            .0\n            .unwrap()", "func_src_after": "\n#[test]\nfn test_hex_deserialization() {\n    let addr = Annotated::<Addr>::from_json(\"\\\"0x2a\\\"\").unwrap();\n    assert_eq!(addr.payload_to_json().unwrap(), \"\\\"0x2a\\\"\");\n    let addr = Annotated::<Addr>::from_json(\"42\").unwrap();\n    assert_eq!(addr.payload_to_json().unwrap(), \"\\\"0x2a\\\"\");\n}\n\n#[test]\nfn test_level() {\n    assert_eq_dbg!(\n        Level::Info,\n        Annotated::<Level>::from_json(\"\\\"log\\\"\").unwrap().0.unwrap()\n    );\n    assert_eq_dbg!(\n        Level::Warning,\n        Annotated::<Level>::from_json(\"30\").unwrap().0.unwrap()\n    );\n    assert_eq_dbg!(\n        Level::Fatal,\n        Annotated::<Level>::from_json(\"\\\"critical\\\"\")\n            .unwrap()\n            .0\n            .unwrap()\n    );\n}\n\n#[test]\nfn test_ip_addr() {\n    assert_eq_dbg!(\n        IpAddr(\"{{auto}}\".into()),\n        Annotated::<IpAddr>::from_json(\"\\\"{{auto}}\\\"\")\n            .unwrap()\n            .0\n            .unwrap()\n    );\n    assert_eq_dbg!(\n        IpAddr(\"<IP-Address>\".into()),\n        Annotated::<IpAddr>::from_json(\"\\\"<IP-Address>\\\"\")\n            .unwrap()\n            .0\n            .unwrap()\n    );\n    assert_eq_dbg!(\n        IpAddr(\"<IP-Address>\".into()),\n        Annotated::<IpAddr>::from_json(\"\\\"<IP-Address>\\\"\")\n            .unwrap()\n            .0\n            .unwrap()", "line_changes": {"deleted": [{"line_no": 39, "char_start": 939, "char_end": 975, "line": "        IpAddr(\"127.0.0.1\".into()),\n"}, {"line_no": 41, "char_start": 978, "char_end": 1034, "line": "        Annotated::<IpAddr>::from_json(\"\\\"127.0.0.1\\\"\")\n"}, {"line_no": 48, "char_start": 1123, "char_end": 1153, "line": "        IpAddr(\"::1\".into()),\n"}, {"line_no": 50, "char_start": 1162, "char_end": 1212, "line": "        Annotated::<IpAddr>::from_json(\"\\\"::1\\\"\")\n"}], "added": [{"line_no": 40, "char_start": 939, "char_end": 978, "line": "        IpAddr(\"<IP-Address>\".into()),\n"}, {"line_no": 42, "char_start": 978, "char_end": 1037, "line": "        Annotated::<IpAddr>::from_json(\"\\\"<IP-Address>\\\"\")\n"}, {"line_no": 49, "char_start": 1123, "char_end": 1162, "line": "        IpAddr(\"<IP-Address>\".into()),\n"}, {"line_no": 51, "char_start": 1162, "char_end": 1221, "line": "        Annotated::<IpAddr>::from_json(\"\\\"<IP-Address>\\\"\")\n"}]}, "char_changes": {"deleted": [{"char_start": 939, "char_end": 975, "chars": "        IpAddr(\"127.0.0.1\".into()),\n"}, {"char_start": 978, "char_end": 1034, "chars": "        Annotated::<IpAddr>::from_json(\"\\\"127.0.0.1\\\"\")\n"}, {"char_start": 1123, "char_end": 1153, "chars": "        IpAddr(\"::1\".into()),\n"}, {"char_start": 1162, "char_end": 1212, "chars": "        Annotated::<IpAddr>::from_json(\"\\\"::1\\\"\")\n"}], "added": [{"char_start": 939, "char_end": 978, "chars": "        IpAddr(\"<IP-Address>\".into()),\n"}, {"char_start": 978, "char_end": 1037, "chars": "        Annotated::<IpAddr>::from_json(\"\\\"<IP-Address>\\\"\")\n"}, {"char_start": 1123, "char_end": 1162, "chars": "        IpAddr(\"<IP-Address>\".into()),\n"}, {"char_start": 1162, "char_end": 1221, "chars": "        Annotated::<IpAddr>::from_json(\"\\\"<IP-Address>\\\"\")\n"}]}}
{"func_name": 12862, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            Insert(idx, insert_text) => text.insert_str(idx, &insert_text),\n            Delete(range) => text.replace_range(range, \"\"),\n        }\n    }\n    text\n}\n\nfn main() -> Result<(), Box<dyn Error>> {\n    let mut config = config::Config::default();\n    config\n        .merge(config::File::with_name(\"settings\"))?\n        .merge(config::Environment::with_prefix(\"APP\"))?;\n    let username = config.get_str(\"username\")?;\n    let password = config.get_str(\"password\")?;\n\n    let num_edits_per_session: usize = config.get_int(\"edits_per_session\")?.try_into()?;\n    let progress_filename = config.get_str(\"progress_file\")?;\n\n    let mut api = Api::new(\"https://en.wikipedia.org/w/api.php\")?;\n    api.login(username, password)?;\n\n    api.set_user_agent(format!(\"EnterpriseyBot/redirect-banners-rs/{} (https://en.wikipedia.org/wiki/User:EnterpriseyBot; apersonwiki@gmail.com)\", env!(\"CARGO_PKG_VERSION\")));\n\n    let mut params = make_map(&[\n        (\"action\", \"query\"),\n        (\"list\", \"allpages\"),\n        (\"apnamespace\", /* article */ \"0\"),\n        (\"apfilterredir\", \"redirects\"),\n        (\"aplimit\", \"500\"),\n    ]);\n    if let Some(starting_title) = load_progress(&progress_filename)? {\n        params.insert(\"apfrom\".to_string(), starting_title.trim().to_string());\n    }\n\n    let base_banned_templates = config.get_array(\"banned_templates\")?\n        .into_iter().map(|val| val.into_str().map(|val| format!(\"Template:{}\", val))).collect::<Result<_, _>>()?;\n    let banned_templates = get_template_redirects(&api, base_banned_templates)?;\n\n    let mut edit_list: Vec<(Title, String)> = Vec::new(); // (title, new text)\n    'main_loop: for each_result_set in api.get_query_api_json_limit_iter(&params, None) {\n        let each_result_set = each_result_set?;\n        let pages = each_result_set[\"query\"][\"allpages\"].as_array()\n            .ok_or(BotError::new(format!(\"bad API result: {:?}\", each_result_set)))?;\n        for each_page_obj in pages {\n            let mut title = Title::new(each_page_obj[\"title\"].as_str()\n                .ok_or(BotError::new(format!(\"bad API result (title construction): {:?}\", each_result_set)))?,\n                /* article */ 0);\n            if !check_redirect_age(&api, &title)? {\n                continue;\n            }", "func_src_after": "            Insert(idx, insert_text) => text.insert_str(idx, &insert_text),\n            Delete(range) => text.replace_range(range, \"\"),\n        }\n    }\n    text\n}\n\nfn main() -> Result<(), Box<dyn Error>> {\n    let mut config = config::Config::default();\n    config\n        .merge(config::File::with_name(\"settings\"))?\n        .merge(config::Environment::with_prefix(\"APP\"))?;\n    let username = config.get_str(\"username\")?;\n    let password = config.get_str(\"password\")?;\n\n    let num_edits_per_session: usize = config.get_int(\"edits_per_session\")?.try_into()?;\n    let progress_filename = config.get_str(\"progress_file\")?;\n\n    let mut api = Api::new(\"https://en.wikipedia.org/w/api.php\")?;\n    api.login(username, password)?;\n\n    api.set_user_agent(format!(\"EnterpriseyBot/redirect-banners-rs/{} (https://en.wikipedia.org/wiki/User:EnterpriseyBot; <EMAIL>)\", env!(\"CARGO_PKG_VERSION\")));\n\n    let mut params = make_map(&[\n        (\"action\", \"query\"),\n        (\"list\", \"allpages\"),\n        (\"apnamespace\", /* article */ \"0\"),\n        (\"apfilterredir\", \"redirects\"),\n        (\"aplimit\", \"500\"),\n    ]);\n    if let Some(starting_title) = load_progress(&progress_filename)? {\n        params.insert(\"apfrom\".to_string(), starting_title.trim().to_string());\n    }\n\n    let base_banned_templates = config.get_array(\"banned_templates\")?\n        .into_iter().map(|val| val.into_str().map(|val| format!(\"Template:{}\", val))).collect::<Result<_, _>>()?;\n    let banned_templates = get_template_redirects(&api, base_banned_templates)?;\n\n    let mut edit_list: Vec<(Title, String)> = Vec::new(); // (title, new text)\n    'main_loop: for each_result_set in api.get_query_api_json_limit_iter(&params, None) {\n        let each_result_set = each_result_set?;\n        let pages = each_result_set[\"query\"][\"allpages\"].as_array()\n            .ok_or(BotError::new(format!(\"bad API result: {:?}\", each_result_set)))?;\n        for each_page_obj in pages {\n            let mut title = Title::new(each_page_obj[\"title\"].as_str()\n                .ok_or(BotError::new(format!(\"bad API result (title construction): {:?}\", each_result_set)))?,\n                /* article */ 0);\n            if !check_redirect_age(&api, &title)? {\n                continue;\n            }", "line_changes": {"deleted": [{"line_no": 22, "char_start": 729, "char_end": 905, "line": "    api.set_user_agent(format!(\"EnterpriseyBot/redirect-banners-rs/{} (https://en.wikipedia.org/wiki/User:EnterpriseyBot; apersonwiki@gmail.com)\", env!(\"CARGO_PKG_VERSION\")));\n"}], "added": [{"line_no": 23, "char_start": 729, "char_end": 891, "line": "    api.set_user_agent(format!(\"EnterpriseyBot/redirect-banners-rs/{} (https://en.wikipedia.org/wiki/User:EnterpriseyBot; <EMAIL>)\", env!(\"CARGO_PKG_VERSION\")));\n"}]}, "char_changes": {"deleted": [{"char_start": 729, "char_end": 905, "chars": "    api.set_user_agent(format!(\"EnterpriseyBot/redirect-banners-rs/{} (https://en.wikipedia.org/wiki/User:EnterpriseyBot; apersonwiki@gmail.com)\", env!(\"CARGO_PKG_VERSION\")));\n"}], "added": [{"char_start": 729, "char_end": 891, "chars": "    api.set_user_agent(format!(\"EnterpriseyBot/redirect-banners-rs/{} (https://en.wikipedia.org/wiki/User:EnterpriseyBot; <EMAIL>)\", env!(\"CARGO_PKG_VERSION\")));\n"}]}}
{"func_name": 12867, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Content-Transfer-Encoding: 7bit\nContent-Type: text/plain; charset=utf8\nContent-Disposition: attachment; filename=\"example.c\"\n\nint main() { return 0; }\n--RTxPCn9p31oAAAAAeQxtr1FbXr/i5vW1hFlH9oJqZRMWxRMK1QLjQ4OPqFk9R+0xUb/m--\n\n```\n\n#### Using streaming\n\nA memory-efficient way of building and sending relatively big emails is a using streaming.\n\nSay, you would like to send server access logs in attachments,\nHTML-documents with related media resources or PDFs which may be sourced from external files.\n\nIn examples above we actually allocated formatted emails in memory,\nbut usually we don't want to do same for big emails which size measures in MBytes.\n\n##### Simple string\n\nThe simple example below shows actually sent chunks of streamed message\n(see [format\\_stream.rs](examples/format_stream.rs)).\n\n```rust\nextern crate emailmessage;\nextern crate futures;\nextern crate tokio;\n\nuse emailmessage::Message;\nuse futures::{Future, Stream};\nuse std::str::from_utf8;\nuse tokio::run;\n\nfn main() {\n    let m: Message = Message::builder()\n        .from(\"NoBody <nobody@domain.tld>\".parse().unwrap())\n        .reply_to(\"Yuin <yuin@domain.tld>\".parse().unwrap())\n        .to(\"Hei <hei@domain.tld>\".parse().unwrap())\n        .subject(\"Happy new year\")\n        .body(\"Be happy!\".into());\n\n    let f = m\n        .into_stream()\n        .map(|chunk| {\n            println!(\"CHUNK[[\\n{}]]\", from_utf8(&chunk).unwrap());\n            chunk\n        }).concat2()\n        .map(|message| {\n            println!(\"MESSAGE[[\\n{}]]\", from_utf8(&message).unwrap());", "func_src_after": "Content-Transfer-Encoding: 7bit\nContent-Type: text/plain; charset=utf8\nContent-Disposition: attachment; filename=\"example.c\"\n\nint main() { return 0; }\n--RTxPCn9p31oAAAAAeQxtr1FbXr/i5vW1hFlH9oJqZRMWxRMK1QLjQ4OPqFk9R+0xUb/m--\n\n```\n\n#### Using streaming\n\nA memory-efficient way of building and sending relatively big emails is a using streaming.\n\nSay, you would like to send server access logs in attachments,\nHTML-documents with related media resources or PDFs which may be sourced from external files.\n\nIn examples above we actually allocated formatted emails in memory,\nbut usually we don't want to do same for big emails which size measures in MBytes.\n\n##### Simple string\n\nThe simple example below shows actually sent chunks of streamed message\n(see [format\\_stream.rs](examples/format_stream.rs)).\n\n```rust\nextern crate emailmessage;\nextern crate futures;\nextern crate tokio;\n\nuse emailmessage::Message;\nuse futures::{Future, Stream};\nuse std::str::from_utf8;\nuse tokio::run;\n\nfn main() {\n    let m: Message = Message::builder()\n        .from(\"NoBody <<EMAIL>>\".parse().unwrap())\n        .reply_to(\"Yuin <<EMAIL>>\".parse().unwrap())\n        .to(\"Hei <<EMAIL>>\".parse().unwrap())\n        .subject(\"Happy new year\")\n        .body(\"Be happy!\".into());\n\n    let f = m\n        .into_stream()\n        .map(|chunk| {\n            println!(\"CHUNK[[\\n{}]]\", from_utf8(&chunk).unwrap());\n            chunk\n        }).concat2()\n        .map(|message| {\n            println!(\"MESSAGE[[\\n{}]]\", from_utf8(&message).unwrap());", "line_changes": {"deleted": [{"line_no": 37, "char_start": 1032, "char_end": 1093, "line": "        .from(\"NoBody <nobody@domain.tld>\".parse().unwrap())\n"}, {"line_no": 39, "char_start": 1083, "char_end": 1144, "line": "        .reply_to(\"Yuin <yuin@domain.tld>\".parse().unwrap())\n"}, {"line_no": 41, "char_start": 1136, "char_end": 1189, "line": "        .to(\"Hei <hei@domain.tld>\".parse().unwrap())\n"}], "added": [{"line_no": 38, "char_start": 1032, "char_end": 1083, "line": "        .from(\"NoBody <<EMAIL>>\".parse().unwrap())\n"}, {"line_no": 40, "char_start": 1083, "char_end": 1136, "line": "        .reply_to(\"Yuin <<EMAIL>>\".parse().unwrap())\n"}, {"line_no": 42, "char_start": 1136, "char_end": 1182, "line": "        .to(\"Hei <<EMAIL>>\".parse().unwrap())\n"}]}, "char_changes": {"deleted": [{"char_start": 1032, "char_end": 1093, "chars": "        .from(\"NoBody <nobody@domain.tld>\".parse().unwrap())\n"}, {"char_start": 1083, "char_end": 1144, "chars": "        .reply_to(\"Yuin <yuin@domain.tld>\".parse().unwrap())\n"}, {"char_start": 1136, "char_end": 1189, "chars": "        .to(\"Hei <hei@domain.tld>\".parse().unwrap())\n"}], "added": [{"char_start": 1032, "char_end": 1083, "chars": "        .from(\"NoBody <<EMAIL>>\".parse().unwrap())\n"}, {"char_start": 1083, "char_end": 1136, "chars": "        .reply_to(\"Yuin <<EMAIL>>\".parse().unwrap())\n"}, {"char_start": 1136, "char_end": 1182, "chars": "        .to(\"Hei <<EMAIL>>\".parse().unwrap())\n"}]}}
{"func_name": 12880, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    event_outcome.insert(\"OPEN\", \"Oppened connection. Later can be dropped due to policy settings. Ej: Sonicwall or Firepower have this behavior.\");\n    event_outcome.insert(\"UNKNOWN\", \"Unknow connection state.\");\n    // Intrusion\n    event_outcome.insert(\n        \"DETECTED\",\n        \"The attack has not been prevented and may affect systems\",\n    );\n    event_outcome.insert(\"BLOCKED\", \"The attack was prevented\");\n    event_outcome.insert(\n        \"MONITOR\",\n        \"The attack was not prevented but it does not affect assets\",\n    );\n    event_outcome.insert(\n        \"IMPACTED\",\n        \"The attack has not been prevented and has affected assets\",\n    );\n\n    fields.insert(\n        field_dictionary::EVENT_OUTCOME,\n        FieldType::TextOptions(event_outcome, \"Outcome of the event\"),\n    );\n    FieldSchema {\n        fields,\n        allow_unknown_fields: false,\n        gdpr: None,\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::firewall::FirewallOutcome;\n    use super::protocol::NetworkProtocol;\n    use super::*;\n\n    #[test]\n    fn check_log() {\n        let message = \"<134>Aug 23 20:30:25 OPNsense.localdomain filterlog[21853]: 82,,,0,igb0,match,pass,out,4,0x0,,62,25678,0,DF,17,udp,60,192.168.1.8,8.8.8.8,5074,53,40\";\n        let mut log = SiemLog::new(message.to_owned(), 0, SiemIp::V4(0));\n        log.set_event(SiemEvent::Firewall(FirewallEvent {\n            source_ip: SiemIp::V4(0),\n            destination_ip: SiemIp::V4(10000),\n            source_port: 10000,\n            destination_port: 443,\n            outcome: FirewallOutcome::ALLOW,\n            in_bytes: 0,\n            out_bytes: 0,\n            in_interface: Cow::Borrowed(\"in123\"),\n            out_interface: Cow::Borrowed(\"out123\"),\n            network_protocol: NetworkProtocol::TCP,\n        }));", "func_src_after": "    event_outcome.insert(\"OPEN\", \"Oppened connection. Later can be dropped due to policy settings. Ej: Sonicwall or Firepower have this behavior.\");\n    event_outcome.insert(\"UNKNOWN\", \"Unknow connection state.\");\n    // Intrusion\n    event_outcome.insert(\n        \"DETECTED\",\n        \"The attack has not been prevented and may affect systems\",\n    );\n    event_outcome.insert(\"BLOCKED\", \"The attack was prevented\");\n    event_outcome.insert(\n        \"MONITOR\",\n        \"The attack was not prevented but it does not affect assets\",\n    );\n    event_outcome.insert(\n        \"IMPACTED\",\n        \"The attack has not been prevented and has affected assets\",\n    );\n\n    fields.insert(\n        field_dictionary::EVENT_OUTCOME,\n        FieldType::TextOptions(event_outcome, \"Outcome of the event\"),\n    );\n    FieldSchema {\n        fields,\n        allow_unknown_fields: false,\n        gdpr: None,\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::firewall::FirewallOutcome;\n    use super::protocol::NetworkProtocol;\n    use super::*;\n\n    #[test]\n    fn check_log() {\n        let message = \"<134>Aug 23 20:30:25 OPNsense.localdomain filterlog[21853]: 82,,,0,igb0,match,pass,out,4,0x0,,62,25678,0,DF,17,udp,60,<IP-Address>,<IP-Address>,5074,53,40\";\n        let mut log = SiemLog::new(message.to_owned(), 0, SiemIp::V4(0));\n        log.set_event(SiemEvent::Firewall(FirewallEvent {\n            source_ip: SiemIp::V4(0),\n            destination_ip: SiemIp::V4(10000),\n            source_port: 10000,\n            destination_port: 443,\n            outcome: FirewallOutcome::ALLOW,\n            in_bytes: 0,\n            out_bytes: 0,\n            in_interface: Cow::Borrowed(\"in123\"),\n            out_interface: Cow::Borrowed(\"out123\"),\n            network_protocol: NetworkProtocol::TCP,\n        }));", "line_changes": {"deleted": [{"line_no": 37, "char_start": 1061, "char_end": 1235, "line": "        let message = \"<134>Aug 23 20:30:25 OPNsense.localdomain filterlog[21853]: 82,,,0,igb0,match,pass,out,4,0x0,,62,25678,0,DF,17,udp,60,192.168.1.8,8.8.8.8,5074,53,40\";\n"}], "added": [{"line_no": 38, "char_start": 1061, "char_end": 1241, "line": "        let message = \"<134>Aug 23 20:30:25 OPNsense.localdomain filterlog[21853]: 82,,,0,igb0,match,pass,out,4,0x0,,62,25678,0,DF,17,udp,60,<IP-Address>,<IP-Address>,5074,53,40\";\n"}]}, "char_changes": {"deleted": [{"char_start": 1061, "char_end": 1235, "chars": "        let message = \"<134>Aug 23 20:30:25 OPNsense.localdomain filterlog[21853]: 82,,,0,igb0,match,pass,out,4,0x0,,62,25678,0,DF,17,udp,60,192.168.1.8,8.8.8.8,5074,53,40\";\n"}], "added": [{"char_start": 1061, "char_end": 1241, "chars": "        let message = \"<134>Aug 23 20:30:25 OPNsense.localdomain filterlog[21853]: 82,,,0,igb0,match,pass,out,4,0x0,,62,25678,0,DF,17,udp,60,<IP-Address>,<IP-Address>,5074,53,40\";\n"}]}}
{"func_name": 12881, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                    let builder = resp304\n                        .content_type(mime.as_ref())\n                        .insert_header((\"ETag\", etag.to_string()));\n\n                    return Some(builder.finish());\n                }\n            }\n        }\n        None\n    }\n\n    fn response_from_file(req: HttpRequest, app: &str, name: &str) -> HttpResponse {\n        let name_string = format!(\"test-fixtures/test-server-apps/{}/{}\", app, name);\n        let path = Path::new(&name_string);\n        if let Ok(mut file) = File::open(path) {\n            // Check if we can return NotModified without reading the file content.\n            let if_none_match = req.headers().get(header::IF_NONE_MATCH);\n            let etag = Etag::for_file(&file);\n            let file_name = path\n                .file_name()\n                .unwrap_or_else(|| std::ffi::OsStr::new(\"\"))\n                .to_string_lossy();\n            let mime = mime_type_for(&file_name);\n            if let Some(response) = maybe_not_modified(if_none_match, &etag, &mime) {\n                return response;\n            }\n\n            let mut buf = vec![];\n            if let Err(err) = file.read_to_end(&mut buf) {\n                error!(\"Failed to read {} : {}\", path.to_string_lossy(), err);\n                return HttpResponse::InternalServerError().finish();\n            }\n\n            HttpResponse::Ok()\n                .insert_header((\"ETag\", etag.to_string()))\n                .content_type(mime.as_ref())\n                .body(buf)\n        } else {\n            HttpResponse::NotFound().finish()\n        }\n    }\n\n    static MAC_KEY: &str = \"p7cI80SwX+gmX0G+T938agWAV1eR9wrpCR9JgsoIIlk=\";\n    // This UA is defined in daemon/config.toml.\n    static EXPECTED_UA: &str = \"Mozilla/5.0 (Mobile; rv:84.0) Gecko/84.0 Firefox/84.0 KAIOS/3.0\";\n\n    fn check_ua(req: &HttpRequest) -> bool {\n        match req.headers().get(::actix_web::http::header::USER_AGENT) {\n            Some(value) => match value.to_str() {\n                Ok(ua) => ua == EXPECTED_UA,", "func_src_after": "                    let builder = resp304\n                        .content_type(mime.as_ref())\n                        .insert_header((\"ETag\", etag.to_string()));\n\n                    return Some(builder.finish());\n                }\n            }\n        }\n        None\n    }\n\n    fn response_from_file(req: HttpRequest, app: &str, name: &str) -> HttpResponse {\n        let name_string = format!(\"test-fixtures/test-server-apps/{}/{}\", app, name);\n        let path = Path::new(&name_string);\n        if let Ok(mut file) = File::open(path) {\n            // Check if we can return NotModified without reading the file content.\n            let if_none_match = req.headers().get(header::IF_NONE_MATCH);\n            let etag = Etag::for_file(&file);\n            let file_name = path\n                .file_name()\n                .unwrap_or_else(|| std::ffi::OsStr::new(\"\"))\n                .to_string_lossy();\n            let mime = mime_type_for(&file_name);\n            if let Some(response) = maybe_not_modified(if_none_match, &etag, &mime) {\n                return response;\n            }\n\n            let mut buf = vec![];\n            if let Err(err) = file.read_to_end(&mut buf) {\n                error!(\"Failed to read {} : {}\", path.to_string_lossy(), err);\n                return HttpResponse::InternalServerError().finish();\n            }\n\n            HttpResponse::Ok()\n                .insert_header((\"ETag\", etag.to_string()))\n                .content_type(mime.as_ref())\n                .body(buf)\n        } else {\n            HttpResponse::NotFound().finish()\n        }\n    }\n\n    static MAC_KEY: &str = \"p7cI80SwX+gmX0G+T938agWAV1eR9wrpCR9JgsoIIlk=\";\n    // This UA is defined in daemon/config.toml.\n    static EXPECTED_UA: &str = \"Mozilla/5.0 (Mobile; rv:84.0) Gecko/84.0 Firefox/84.0 KAIOS/3.0\";\n\n    fn check_ua(req: &HttpRequest) -> bool {\n        match req.headers().get(::actix_web::http::header::USER_AGENT) {\n            Some(value) => match value.to_str() {\n                Ok(ua) => ua == EXPECTED_UA,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12920, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n            done();\n        });\n\n        it('should not block any unplanned user identities when blok.id = true and additionalProperties = true', function(done) {\n            event.EventName = 'something something something';\n            event.EventCategory = Types.EventType.Navigation;\n            event.EventAttributes = { keyword2: 'test', foo: 'hi' };\n            event.EventDataType = Types.MessageType.PageEvent;\n            event.UserIdentities = [\n                { Type: 7, Identity: 'email@gmail.com' },\n                { Type: 1, Identity: 'customerid1' },\n                { Type: 4, Identity: 'GoogleId' }\n            ];\n\n            let kitBlocker = new KitBlocker(kitBlockerDataPlan, window.mParticle.getInstance());\n            let transformdEvent = kitBlocker.transformUserIdentities(event);\n\n            transformdEvent.UserIdentities.filter(UI => UI.Type === 1)[0].should.have.property('Identity', 'customerid1');\n            transformdEvent.UserIdentities.filter(UI => UI.Type === 7)[0].should.have.property('Identity', 'email@gmail.com');\n            transformdEvent.UserIdentities.filter(UI => UI.Type === 4)[0].should.have.property('Identity', 'GoogleId');\n\n            done();\n        });\n\n        it('should block user identities when additional properties = false and blok.id = true', function(done) {\n            let userIdentityDataPoint = dataPlan.dtpn.vers.version_document.data_points.find(dataPoint => {\n                return dataPoint.match.type === 'user_identities'\n            });\n\n            userIdentityDataPoint.validator.definition.additionalProperties = false;\n\n            event.EventName = 'something something something';\n            event.EventCategory = Types.EventType.Navigation;\n            event.EventAttributes = { keyword2: 'test', foo: 'hi' };\n            event.EventDataType = Types.MessageType.PageEvent;\n            event.UserIdentities = [\n                { Type: 7, Identity: 'email@gmail.com' },\n                { Type: 1, Identity: 'customerid1' },\n                { Type: 4, Identity: 'GoogleId' }\n            ];\n\n            let kitBlocker = new KitBlocker(kitBlockerDataPlan, window.mParticle.getInstance());\n            let transformdEvent = kitBlocker.transformUserIdentities(event);\n\n            transformdEvent.UserIdentities.find(UI => UI.Type === 1).should.have.property('Identity', 'customerid1');\n            transformdEvent.UserIdentities.find(UI => UI.Type === 7).should.have.property('Identity', 'email@gmail.com');\n            (transformdEvent.UserIdentities.find(UI => UI.Type === 4) === undefined).should.equal(true);\n\n            // reset", "func_src_after": "\n            done();\n        });\n\n        it('should not block any unplanned user identities when blok.id = true and additionalProperties = true', function(done) {\n            event.EventName = 'something something something';\n            event.EventCategory = Types.EventType.Navigation;\n            event.EventAttributes = { keyword2: 'test', foo: 'hi' };\n            event.EventDataType = Types.MessageType.PageEvent;\n            event.UserIdentities = [\n                { Type: 7, Identity: '<EMAIL>' },\n                { Type: 1, Identity: 'customerid1' },\n                { Type: 4, Identity: 'GoogleId' }\n            ];\n\n            let kitBlocker = new KitBlocker(kitBlockerDataPlan, window.mParticle.getInstance());\n            let transformdEvent = kitBlocker.transformUserIdentities(event);\n\n            transformdEvent.UserIdentities.filter(UI => UI.Type === 1)[0].should.have.property('Identity', 'customerid1');\n            transformdEvent.UserIdentities.filter(UI => UI.Type === 7)[0].should.have.property('Identity', '<EMAIL>');\n            transformdEvent.UserIdentities.filter(UI => UI.Type === 4)[0].should.have.property('Identity', 'GoogleId');\n\n            done();\n        });\n\n        it('should block user identities when additional properties = false and blok.id = true', function(done) {\n            let userIdentityDataPoint = dataPlan.dtpn.vers.version_document.data_points.find(dataPoint => {\n                return dataPoint.match.type === 'user_identities'\n            });\n\n            userIdentityDataPoint.validator.definition.additionalProperties = false;\n\n            event.EventName = 'something something something';\n            event.EventCategory = Types.EventType.Navigation;\n            event.EventAttributes = { keyword2: 'test', foo: 'hi' };\n            event.EventDataType = Types.MessageType.PageEvent;\n            event.UserIdentities = [\n                { Type: 7, Identity: '<EMAIL>' },\n                { Type: 1, Identity: 'customerid1' },\n                { Type: 4, Identity: 'GoogleId' }\n            ];\n\n            let kitBlocker = new KitBlocker(kitBlockerDataPlan, window.mParticle.getInstance());\n            let transformdEvent = kitBlocker.transformUserIdentities(event);\n\n            transformdEvent.UserIdentities.find(UI => UI.Type === 1).should.have.property('Identity', 'customerid1');\n            transformdEvent.UserIdentities.find(UI => UI.Type === 7).should.have.property('Identity', '<EMAIL>');\n            (transformdEvent.UserIdentities.find(UI => UI.Type === 4) === undefined).should.equal(true);\n\n            // reset", "line_changes": {"deleted": [{"line_no": 11, "char_start": 458, "char_end": 516, "line": "                { Type: 7, Identity: 'email@gmail.com' },\n"}, {"line_no": 21, "char_start": 926, "char_end": 1053, "line": "            transformdEvent.UserIdentities.filter(UI => UI.Type === 7)[0].should.have.property('Identity', 'email@gmail.com');\n"}, {"line_no": 40, "char_start": 1884, "char_end": 1942, "line": "                { Type: 7, Identity: 'email@gmail.com' },\n"}, {"line_no": 50, "char_start": 2347, "char_end": 2469, "line": "            transformdEvent.UserIdentities.find(UI => UI.Type === 7).should.have.property('Identity', 'email@gmail.com');\n"}], "added": [{"line_no": 12, "char_start": 458, "char_end": 508, "line": "                { Type: 7, Identity: '<EMAIL>' },\n"}, {"line_no": 22, "char_start": 926, "char_end": 1045, "line": "            transformdEvent.UserIdentities.filter(UI => UI.Type === 7)[0].should.have.property('Identity', '<EMAIL>');\n"}, {"line_no": 41, "char_start": 1884, "char_end": 1934, "line": "                { Type: 7, Identity: '<EMAIL>' },\n"}, {"line_no": 51, "char_start": 2347, "char_end": 2461, "line": "            transformdEvent.UserIdentities.find(UI => UI.Type === 7).should.have.property('Identity', '<EMAIL>');\n"}]}, "char_changes": {"deleted": [{"char_start": 458, "char_end": 516, "chars": "                { Type: 7, Identity: 'email@gmail.com' },\n"}, {"char_start": 926, "char_end": 1053, "chars": "            transformdEvent.UserIdentities.filter(UI => UI.Type === 7)[0].should.have.property('Identity', 'email@gmail.com');\n"}, {"char_start": 1884, "char_end": 1942, "chars": "                { Type: 7, Identity: 'email@gmail.com' },\n"}, {"char_start": 2347, "char_end": 2469, "chars": "            transformdEvent.UserIdentities.find(UI => UI.Type === 7).should.have.property('Identity', 'email@gmail.com');\n"}], "added": [{"char_start": 458, "char_end": 508, "chars": "                { Type: 7, Identity: '<EMAIL>' },\n"}, {"char_start": 926, "char_end": 1045, "chars": "            transformdEvent.UserIdentities.filter(UI => UI.Type === 7)[0].should.have.property('Identity', '<EMAIL>');\n"}, {"char_start": 1884, "char_end": 1934, "chars": "                { Type: 7, Identity: '<EMAIL>' },\n"}, {"char_start": 2347, "char_end": 2461, "chars": "            transformdEvent.UserIdentities.find(UI => UI.Type === 7).should.have.property('Identity', '<EMAIL>');\n"}]}}
{"func_name": 12933, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import { EventEmitter } from '@stencil/core';\nimport { EComponentSize } from '../../types';\nimport { EIconName, EOtherIconName } from '../icon/icon.types';\n\nexport enum EInputFieldType {\n\tText = 'text',\n\tNumber = 'number',\n\tPassword = 'password',\n\tDateTime = 'datetime-local',\n\tRadio = 'radio'\n}\n\nexport enum EValidationState {\n\tNone = 'none',\n\tValid = 'valid',\n\tInvalid = 'invalid'\n}\n\nexport interface ITextFieldEvents {\n\t/** Emitted when text field's value changes */\n\ttextChange: EventEmitter<string>;\n\t/** Emitted when text field lost focus */\n\ttextFieldBlur: EventEmitter<string>;\n}\n\nexport interface ITextField {\n\t/** (optional) Text field type */\n\ttype?: EInputFieldType;\n\t/** (optional) Text field label */\n\tlabel?: string;\n\t/** (optional) Text field's icon symbol name */\n\ticon?: EIconName | EOtherIconName;\n\t/** (optional) Text field input name */\n\tinputName?: string;\n\t/** (optional) Text field place holder */\n\tplaceholder?: string;\n\t/** (optional) Text field maximum number of characters required */\n\tmaxLength?: number;\n\t/** (optional) Text field minimum number of characters required */\n\tminLength?: number;\n\t/** (optional) Text field maximum value */\n\tmax?: number | string;\n\t/** (optional) Text field minimum value */\n\tmin?: number | string;\n\t/** (optional) Text field interval between legal numbers */\n\tstep?: number | string;\n\t/** (optional) Sets this tab item to a different styling configuration */\n\tsize: EComponentSize;\n\t/** (optional) Text field disabled */\n\tdisabled?: boolean;", "func_src_after": "import { EventEmitter } from '@stencil/core';\nimport { EComponentSize } from '../../types';\nimport { EIconName, EOtherIconName } from '../icon/icon.types';\n\nexport enum EInputFieldType {\n\tText = 'text',\n\tNumber = 'number',\n\tPassword = 'password',\n\tDateTime = 'datetime-local',\n\tRadio = 'radio'\n}\n\nexport enum EValidationState {\n\tNone = 'none',\n\tValid = 'valid',\n\tInvalid = 'invalid'\n}\n\nexport interface ITextFieldEvents {\n\t/** Emitted when text field's value changes */\n\ttextChange: EventEmitter<string>;\n\t/** Emitted when text field lost focus */\n\ttextFieldBlur: EventEmitter<string>;\n}\n\nexport interface ITextField {\n\t/** (optional) Text field type */\n\ttype?: EInputFieldType;\n\t/** (optional) Text field label */\n\tlabel?: string;\n\t/** (optional) Text field's icon symbol name */\n\ticon?: EIconName | EOtherIconName;\n\t/** (optional) Text field input name */\n\tinputName?: string;\n\t/** (optional) Text field place holder */\n\tplaceholder?: string;\n\t/** (optional) Text field maximum number of characters required */\n\tmaxLength?: number;\n\t/** (optional) Text field minimum number of characters required */\n\tminLength?: number;\n\t/** (optional) Text field maximum value */\n\tmax?: number | string;\n\t/** (optional) Text field minimum value */\n\tmin?: number | string;\n\t/** (optional) Text field interval between legal numbers */\n\tstep?: number | string;\n\t/** (optional) Sets this tab item to a different styling configuration */\n\tsize: EComponentSize;\n\t/** (optional) Text field disabled */\n\tdisabled?: boolean;", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12942, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*************************************************************************************************\n *  Copyright (c) Red Hat, Inc. All rights reserved.\n *  Licensed under the MIT License. See LICENSE file in the project root for license information.\n *************************************************************************************************/\n\n// import * as ghCore from \"@actions/core\";\nimport * as os from \"os\";\nimport * as ghExec from \"@actions/exec\";\nimport CmdOutputHider from './cmdOutputHider';\nimport * as util from \"./utils\";\n\nconst EXECUTABLE = util.getOS() === \"windows\" ? \"oc.exe\" : \"oc\";\n\nnamespace Oc {\n    /**\n     * oc commands.\n     */\n    export enum Commands {\n        Login = \"login\",\n        Config = \"config\",\n        View = \"view\",\n        Set_Context = \"set-context\",\n        Whoami = \"whoami\",\n    }\n\n    /**\n     * oc flags. Create an Options object with these, and then pass it to getOptions.\n     */\n    export enum Flags {\n        ServerURL = \"server\",\n        Token = \"token\",\n        Username = \"username\",\n        Password = \"password\",\n        SkipTLSVerify = \"insecure-skip-tls-verify\",\n        CertificateAuthority = \"certificate-authority\",\n\n        Flatten = \"flatten\",\n        Minify = \"minify\",\n\n        Namespace = \"namespace\",\n        Current = \"current\",\n    }\n\n    export type Options = { [key in Flags]?: string };\n\n    /**\n     * This formats an Options object into a string[] which is suitable to be passed to `exec`.\n     *\n     * Flags are prefixed with `--`, and suffixed with `=${value}`, unless the value is the empty string.\n     *", "func_src_after": "/*************************************************************************************************\n *  Copyright (c) Red Hat, Inc. All rights reserved.\n *  Licensed under the MIT License. See LICENSE file in the project root for license information.\n *************************************************************************************************/\n\n// import * as ghCore from \"@actions/core\";\nimport * as os from \"os\";\nimport * as ghExec from \"@actions/exec\";\nimport CmdOutputHider from './cmdOutputHider';\nimport * as util from \"./utils\";\n\nconst EXECUTABLE = util.getOS() === \"windows\" ? \"oc.exe\" : \"oc\";\n\nnamespace Oc {\n    /**\n     * oc commands.\n     */\n    export enum Commands {\n        Login = \"login\",\n        Config = \"config\",\n        View = \"view\",\n        Set_Context = \"set-context\",\n        Whoami = \"whoami\",\n    }\n\n    /**\n     * oc flags. Create an Options object with these, and then pass it to getOptions.\n     */\n    export enum Flags {\n        ServerURL = \"server\",\n        Token = \"token\",\n        Username = \"username\",\n        Password = \"password\",\n        SkipTLSVerify = \"insecure-skip-tls-verify\",\n        CertificateAuthority = \"certificate-authority\",\n\n        Flatten = \"flatten\",\n        Minify = \"minify\",\n\n        Namespace = \"namespace\",\n        Current = \"current\",\n    }\n\n    export type Options = { [key in Flags]?: string };\n\n    /**\n     * This formats an Options object into a string[] which is suitable to be passed to `exec`.\n     *\n     * Flags are prefixed with `--`, and suffixed with `=${value}`, unless the value is the empty string.\n     *", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 12944, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "              j.jsxIdentifier(\"theme\"),\n              j.jsxExpressionContainer(j.identifier(\"theme\")),\n            ),\n            j.jsxAttribute(\n              j.jsxIdentifier(\"components\"),\n              j.jsxExpressionContainer(j.identifier(\"components\")),\n            ),\n          ]),\n          j.jsxClosingElement(j.jsxIdentifier(\"ThemeProvider\")),\n          [j.jsxText(\"\\n\"), node, j.jsxText(\"\\n\")],\n        ),\n      )\n    })\n\n  return program\n}\n\nfunction injectInitializeColorMode(program: Program) {\n  program.find(j.JSXElement, {openingElement: {name: {name: \"body\"}}}).forEach((path) => {\n    const {node} = path\n    path.replace(\n      j.jsxElement(\n        j.jsxOpeningElement(j.jsxIdentifier(\"body\")),\n        j.jsxClosingElement(j.jsxIdentifier(\"body\")),\n        [\n          j.literal(\"\\n\"),\n          j.jsxElement(j.jsxOpeningElement(j.jsxIdentifier(\"InitializeColorMode\"), [], true)),\n          ...(node.children || []),\n        ],\n      ),\n    )\n  })\n\n  return program\n}\n\nexport default RecipeBuilder()\n  .setName(\"Theme UI\")\n  .setDescription(`This will install all necessary dependencies and configure Theme UI for use.`)\n  .setOwner(\"tundera <stackshuffle@gmail.com>\")\n  .setRepoLink(\"https://github.com/blitz-js/blitz\")\n  .addAddDependenciesStep({\n    stepId: \"addDeps\",\n    stepName: \"npm dependencies\",\n    explanation: ``,\n    packages: [\n      {name: \"theme-ui\", version: \"0.x\"},\n      {name: \"@theme-ui/prism\", version: \"0.x\"},\n      {name: NEXT_MDX_PLUGIN_MODULE, version: \"11.x\"},\n      {name: \"@mdx-js/loader\", version: \"1.x\"},", "func_src_after": "              j.jsxIdentifier(\"theme\"),\n              j.jsxExpressionContainer(j.identifier(\"theme\")),\n            ),\n            j.jsxAttribute(\n              j.jsxIdentifier(\"components\"),\n              j.jsxExpressionContainer(j.identifier(\"components\")),\n            ),\n          ]),\n          j.jsxClosingElement(j.jsxIdentifier(\"ThemeProvider\")),\n          [j.jsxText(\"\\n\"), node, j.jsxText(\"\\n\")],\n        ),\n      )\n    })\n\n  return program\n}\n\nfunction injectInitializeColorMode(program: Program) {\n  program.find(j.JSXElement, {openingElement: {name: {name: \"body\"}}}).forEach((path) => {\n    const {node} = path\n    path.replace(\n      j.jsxElement(\n        j.jsxOpeningElement(j.jsxIdentifier(\"body\")),\n        j.jsxClosingElement(j.jsxIdentifier(\"body\")),\n        [\n          j.literal(\"\\n\"),\n          j.jsxElement(j.jsxOpeningElement(j.jsxIdentifier(\"InitializeColorMode\"), [], true)),\n          ...(node.children || []),\n        ],\n      ),\n    )\n  })\n\n  return program\n}\n\nexport default RecipeBuilder()\n  .setName(\"Theme UI\")\n  .setDescription(`This will install all necessary dependencies and configure Theme UI for use.`)\n  .setOwner(\"tundera <<EMAIL>>\")\n  .setRepoLink(\"https://github.com/blitz-js/blitz\")\n  .addAddDependenciesStep({\n    stepId: \"addDeps\",\n    stepName: \"npm dependencies\",\n    explanation: ``,\n    packages: [\n      {name: \"theme-ui\", version: \"0.x\"},\n      {name: \"@theme-ui/prism\", version: \"0.x\"},\n      {name: NEXT_MDX_PLUGIN_MODULE, version: \"11.x\"},\n      {name: \"@mdx-js/loader\", version: \"1.x\"},", "line_changes": {"deleted": [{"line_no": 40, "char_start": 1140, "char_end": 1188, "line": "  .setOwner(\"tundera <stackshuffle@gmail.com>\")\n"}], "added": [{"line_no": 41, "char_start": 1140, "char_end": 1173, "line": "  .setOwner(\"tundera <<EMAIL>>\")\n"}]}, "char_changes": {"deleted": [{"char_start": 1140, "char_end": 1188, "chars": "  .setOwner(\"tundera <stackshuffle@gmail.com>\")\n"}], "added": [{"char_start": 1140, "char_end": 1173, "chars": "  .setOwner(\"tundera <<EMAIL>>\")\n"}]}}
{"func_name": 12947, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    });\n  });\n\n  describe('register$', () => {\n    it('should return a RegisterSuccess action, with user information when register succeeds', () => {\n      const result: User = {\n        email: 'test@gmail.com',\n        token: 'token',\n        username: 'test',\n        bio: '',\n        image: '',\n      };\n      const registerAction = AuthActions.register();\n      const registerSuccessAction = AuthActions.registerSuccess({\n        user: result,\n      });\n\n      actions$ = hot('-a---', { a: registerAction });\n      const response = cold('-a|', { a: result });\n      const expected = cold('--b', { b: registerSuccessAction });\n      service.register = jest.fn(() => response);\n\n      (expect(effects.register$) as any).toBeObservable(expected);\n    });\n\n    it('should return a [ngrx-forms] SetErrors action if the register service throws', () => {\n      const result = {\n        error: {\n          errors: { invalid: 'Invalid data' } as Errors,\n        },\n      };\n      const registerAction = AuthActions.register();\n      const setErrorsAction = setErrors({ errors: result.error.errors });\n\n      actions$ = hot('-a---', { a: registerAction });\n      const response = cold('-#', {}, result);\n      service.register = jest.fn(() => response);\n      const expected = cold('--b', { b: setErrorsAction });\n\n      expect(effects.register$).toBeObservable(expected);\n    });\n  });\n\n  describe('loginOrRegisterSuccess$', () => {\n    it('should dispatch a RouterNavigation action when login succeeds', (done: any) => {\n      const result: User = {\n        email: 'test@gmail.com',\n        token: 'token',\n        username: 'test',\n        bio: '',", "func_src_after": "    });\n  });\n\n  describe('register$', () => {\n    it('should return a RegisterSuccess action, with user information when register succeeds', () => {\n      const result: User = {\n        email: '<EMAIL>',\n        token: 'token',\n        username: 'test',\n        bio: '',\n        image: '',\n      };\n      const registerAction = AuthActions.register();\n      const registerSuccessAction = AuthActions.registerSuccess({\n        user: result,\n      });\n\n      actions$ = hot('-a---', { a: registerAction });\n      const response = cold('-a|', { a: result });\n      const expected = cold('--b', { b: registerSuccessAction });\n      service.register = jest.fn(() => response);\n\n      (expect(effects.register$) as any).toBeObservable(expected);\n    });\n\n    it('should return a [ngrx-forms] SetErrors action if the register service throws', () => {\n      const result = {\n        error: {\n          errors: { invalid: 'Invalid data' } as Errors,\n        },\n      };\n      const registerAction = AuthActions.register();\n      const setErrorsAction = setErrors({ errors: result.error.errors });\n\n      actions$ = hot('-a---', { a: registerAction });\n      const response = cold('-#', {}, result);\n      service.register = jest.fn(() => response);\n      const expected = cold('--b', { b: setErrorsAction });\n\n      expect(effects.register$).toBeObservable(expected);\n    });\n  });\n\n  describe('loginOrRegisterSuccess$', () => {\n    it('should dispatch a RouterNavigation action when login succeeds', (done: any) => {\n      const result: User = {\n        email: '<EMAIL>',\n        token: 'token',\n        username: 'test',\n        bio: '',", "line_changes": {"deleted": [{"line_no": 7, "char_start": 179, "char_end": 212, "line": "        email: 'test@gmail.com',\n"}, {"line_no": 48, "char_start": 1539, "char_end": 1572, "line": "        email: 'test@gmail.com',\n"}], "added": [{"line_no": 8, "char_start": 179, "char_end": 205, "line": "        email: '<EMAIL>',\n"}, {"line_no": 49, "char_start": 1539, "char_end": 1565, "line": "        email: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 179, "char_end": 212, "chars": "        email: 'test@gmail.com',\n"}, {"char_start": 1539, "char_end": 1572, "chars": "        email: 'test@gmail.com',\n"}], "added": [{"char_start": 179, "char_end": 205, "chars": "        email: '<EMAIL>',\n"}, {"char_start": 1539, "char_end": 1565, "chars": "        email: '<EMAIL>',\n"}]}}
{"func_name": 12981, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\t\t\t} catch (e) {\n\t\t\t\texpect(e).toBeDefined();\n\t\t\t\texpect(e.statusCode).toBe(HttpResponseCode.BAD_REQUEST);\n\t\t\t}\n\t\t});\n\t});\n\n\t/**\n   * Test if the user can be validated by email and password\n   */\n\tdescribe('Test validateUser', (): void => {\n\t\ttest('Should ensure that a user can be verified', async (): Promise<void> => {\n\t\t\tconst userRepository: Repository<User> = getRepository(User);\n\t\t\tawait userRepository.save(testHubUser);\n\t\t\tawait userRepository.save({ ...testHubUser, id: testHubUser.id + 1, email: 'another@random.com' });\n\n\t\t\tconst hubUser: User = await userService.validateUser(testHubUser.email, 'password123');\n\t\t\texpect(hubUser).toBeTruthy();\n\t\t\texpect(hubUser.password).toBeUndefined();\n\t\t\texpect(hubUser.email).toBe(testHubUser.email);\n\t\t\texpect(hubUser.id).toBe(testHubUser.id);\n\t\t});\n\t\ttest('Should check that an invalid user is not validated', async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait userService.validateUser('invalid@test.com', 'mypassword');\n\t\t\t} catch (e) {\n\t\t\t\texpect(e).toBeDefined();\n\t\t\t\texpect(e.statusCode).toBe(HttpResponseCode.BAD_REQUEST);\n\t\t\t}\n\t\t});\n\t});\n\n\t/**\n   * Test that push ids are assigned to users\n   */\n\tdescribe('Test getPushIDFromUserID', (): void => {\n\t\ttest('Should ensure that push ids can be found', async (): Promise<void> => {\n\t\t\tconst userRepository: Repository<User> = getRepository(User);\n\t\t\tawait userRepository.save(testHubUser);\n\n\t\t\tconst userPushIds: string[] = await userService.getPushIDFromUserID([testHubUser.id]);\n\t\t\texpect(userPushIds.length).toBe(1);\n\t\t\texpect(userPushIds[0]).toBe(testHubUser.push_id[0]);\n\t\t});\n\t\ttest('Should ensure that push id is added to user', async (): Promise<void> => {\n\t\t\tconst testPushID = 'abc';\n\t\t\tconst userRepository: Repository<User> = getRepository(User);\n\t\t\tawait userRepository.save(testHubUser);\n\n\t\t\tawait userService.addPushIDToUser(testHubUser, testPushID);", "func_src_after": "\t\t\t} catch (e) {\n\t\t\t\texpect(e).toBeDefined();\n\t\t\t\texpect(e.statusCode).toBe(HttpResponseCode.BAD_REQUEST);\n\t\t\t}\n\t\t});\n\t});\n\n\t/**\n   * Test if the user can be validated by email and password\n   */\n\tdescribe('Test validateUser', (): void => {\n\t\ttest('Should ensure that a user can be verified', async (): Promise<void> => {\n\t\t\tconst userRepository: Repository<User> = getRepository(User);\n\t\t\tawait userRepository.save(testHubUser);\n\t\t\tawait userRepository.save({ ...testHubUser, id: testHubUser.id + 1, email: '<EMAIL>' });\n\n\t\t\tconst hubUser: User = await userService.validateUser(testHubUser.email, 'password123');\n\t\t\texpect(hubUser).toBeTruthy();\n\t\t\texpect(hubUser.password).toBeUndefined();\n\t\t\texpect(hubUser.email).toBe(testHubUser.email);\n\t\t\texpect(hubUser.id).toBe(testHubUser.id);\n\t\t});\n\t\ttest('Should check that an invalid user is not validated', async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait userService.validateUser('<EMAIL>', 'mypassword');\n\t\t\t} catch (e) {\n\t\t\t\texpect(e).toBeDefined();\n\t\t\t\texpect(e.statusCode).toBe(HttpResponseCode.BAD_REQUEST);\n\t\t\t}\n\t\t});\n\t});\n\n\t/**\n   * Test that push ids are assigned to users\n   */\n\tdescribe('Test getPushIDFromUserID', (): void => {\n\t\ttest('Should ensure that push ids can be found', async (): Promise<void> => {\n\t\t\tconst userRepository: Repository<User> = getRepository(User);\n\t\t\tawait userRepository.save(testHubUser);\n\n\t\t\tconst userPushIds: string[] = await userService.getPushIDFromUserID([testHubUser.id]);\n\t\t\texpect(userPushIds.length).toBe(1);\n\t\t\texpect(userPushIds[0]).toBe(testHubUser.push_id[0]);\n\t\t});\n\t\ttest('Should ensure that push id is added to user', async (): Promise<void> => {\n\t\t\tconst testPushID = 'abc';\n\t\t\tconst userRepository: Repository<User> = getRepository(User);\n\t\t\tawait userRepository.save(testHubUser);\n\n\t\t\tawait userService.addPushIDToUser(testHubUser, testPushID);", "line_changes": {"deleted": [{"line_no": 15, "char_start": 430, "char_end": 533, "line": "\t\t\tawait userRepository.save({ ...testHubUser, id: testHubUser.id + 1, email: 'another@random.com' });\n"}, {"line_no": 26, "char_start": 891, "char_end": 961, "line": "\t\t\t\tawait userService.validateUser('invalid@test.com', 'mypassword');\n"}], "added": [{"line_no": 16, "char_start": 430, "char_end": 522, "line": "\t\t\tawait userRepository.save({ ...testHubUser, id: testHubUser.id + 1, email: '<EMAIL>' });\n"}, {"line_no": 27, "char_start": 891, "char_end": 952, "line": "\t\t\t\tawait userService.validateUser('<EMAIL>', 'mypassword');\n"}]}, "char_changes": {"deleted": [{"char_start": 430, "char_end": 533, "chars": "\t\t\tawait userRepository.save({ ...testHubUser, id: testHubUser.id + 1, email: 'another@random.com' });\n"}, {"char_start": 891, "char_end": 961, "chars": "\t\t\t\tawait userService.validateUser('invalid@test.com', 'mypassword');\n"}], "added": [{"char_start": 430, "char_end": 522, "chars": "\t\t\tawait userRepository.save({ ...testHubUser, id: testHubUser.id + 1, email: '<EMAIL>' });\n"}, {"char_start": 891, "char_end": 952, "chars": "\t\t\t\tawait userService.validateUser('<EMAIL>', 'mypassword');\n"}]}}
{"func_name": 13001, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  next: NextFunction\n) => {\n  if (error.api_error_code) {\n    // Handle Chargebee errors\n    error = error.message;\n  }\n  const response = safeError(error.toString().replace(\"Error: \", \"\"));\n  res.status(response.status);\n  res.json({ error: response.code, message: response.message });\n};\n\n/**\n * Add locals for IP address and user agent\n */\nexport const trackingHandler = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  res.locals.userAgent = req.get(\"User-Agent\");\n  let ip =\n    req.headers[\"x-forwarded-for\"] ||\n    req.connection.remoteAddress ||\n    req.socket.remoteAddress;\n  if (ip === \"::1\") ip = \"2001:67c:2564:a309:f0e0:1ee6:137b:29e8\";\n  res.locals.ipAddress = ip;\n  next();\n};\n\n/**\n * Add locals for a user after verifying their token\n */\nexport const authHandler = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  function sendAuthError(code: ErrorCode) {\n    const error = safeError(code);\n    res.status(error.status);\n    return res.json(error);\n  }\n  let token = req.get(\"Authorization\") || req.get(\"X-Api-Key\");\n  if (!token) {\n    const error = safeError(ErrorCode.MISSING_TOKEN);\n    res.status(error.status);\n    return res.json(error);\n  }\n  if (token.startsWith(\"Bearer \")) token = token.replace(\"Bearer \", \"\");\n  let localsToken;", "func_src_after": "  next: NextFunction\n) => {\n  if (error.api_error_code) {\n    // Handle Chargebee errors\n    error = error.message;\n  }\n  const response = safeError(error.toString().replace(\"Error: \", \"\"));\n  res.status(response.status);\n  res.json({ error: response.code, message: response.message });\n};\n\n/**\n * Add locals for IP address and user agent\n */\nexport const trackingHandler = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  res.locals.userAgent = req.get(\"User-Agent\");\n  let ip =\n    req.headers[\"x-forwarded-for\"] ||\n    req.connection.remoteAddress ||\n    req.socket.remoteAddress;\n  if (ip === \"<IP-Address>\") ip = \"<IP-Address>\";\n  res.locals.ipAddress = ip;\n  next();\n};\n\n/**\n * Add locals for a user after verifying their token\n */\nexport const authHandler = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  function sendAuthError(code: ErrorCode) {\n    const error = safeError(code);\n    res.status(error.status);\n    return res.json(error);\n  }\n  let token = req.get(\"Authorization\") || req.get(\"X-Api-Key\");\n  if (!token) {\n    const error = safeError(ErrorCode.MISSING_TOKEN);\n    res.status(error.status);\n    return res.json(error);\n  }\n  if (token.startsWith(\"Bearer \")) token = token.replace(\"Bearer \", \"\");\n  let localsToken;", "line_changes": {"deleted": [{"line_no": 25, "char_start": 600, "char_end": 667, "line": "  if (ip === \"::1\") ip = \"2001:67c:2564:a309:f0e0:1ee6:137b:29e8\";\n"}], "added": [{"line_no": 26, "char_start": 600, "char_end": 650, "line": "  if (ip === \"<IP-Address>\") ip = \"<IP-Address>\";\n"}]}, "char_changes": {"deleted": [{"char_start": 600, "char_end": 667, "chars": "  if (ip === \"::1\") ip = \"2001:67c:2564:a309:f0e0:1ee6:137b:29e8\";\n"}], "added": [{"char_start": 600, "char_end": 650, "chars": "  if (ip === \"<IP-Address>\") ip = \"<IP-Address>\";\n"}]}}
{"func_name": 13072, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*\n * SpurtCommerce\n * version 2.2\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2019 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Effect, Actions, ofType} from '@ngrx/effects';\nimport {Action} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\nimport * as actions from '../banner-action/banner.action';\nimport {catchError} from 'rxjs/internal/operators';\nimport {BannerService} from '../banner.service';\nimport {BannercountResponseModel} from '../banner-model/bannercount.response.model';\n\n\n@Injectable()\nexport class BannerEffect {\n\n    constructor(private action$: Actions, private service: BannerService) {\n    }\n\n    // Banner List\n    @Effect()\n    doBannerLists$: Observable<Action> = this.action$\n        .pipe(\n            ofType(actions.ActionTypes.DO_BANNER_LIST),\n            map((action: actions.DoBannerListAction) => action.payload),\n            switchMap((state) => {\n                return this.service.bannerList(state)\n                    .pipe(\n                        switchMap((user) => [\n                            new actions.DoBannerListSuccessAction((user)),\n                        ]),\n                        catchError(error => of(new actions.DoBannerListFailAction(error)))\n                    );\n            })\n        );\n\n\n    // Banner LIST PAGINATION\n    @Effect()\n    doBannerPagination$: Observable<Action> = this.action$\n        .pipe(\n            ofType(actions.ActionTypes.DO_BANNER_PAGINATION_ACTION),", "func_src_after": "/*\n * SpurtCommerce\n * version 2.2\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2019 PICCOSOFT\n * Author piccosoft <<EMAIL>>\n * Licensed under the MIT license.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Effect, Actions, ofType} from '@ngrx/effects';\nimport {Action} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\nimport * as actions from '../banner-action/banner.action';\nimport {catchError} from 'rxjs/internal/operators';\nimport {BannerService} from '../banner.service';\nimport {BannercountResponseModel} from '../banner-model/bannercount.response.model';\n\n\n@Injectable()\nexport class BannerEffect {\n\n    constructor(private action$: Actions, private service: BannerService) {\n    }\n\n    // Banner List\n    @Effect()\n    doBannerLists$: Observable<Action> = this.action$\n        .pipe(\n            ofType(actions.ActionTypes.DO_BANNER_LIST),\n            map((action: actions.DoBannerListAction) => action.payload),\n            switchMap((state) => {\n                return this.service.bannerList(state)\n                    .pipe(\n                        switchMap((user) => [\n                            new actions.DoBannerListSuccessAction((user)),\n                        ]),\n                        catchError(error => of(new actions.DoBannerListFailAction(error)))\n                    );\n            })\n        );\n\n\n    // Banner LIST PAGINATION\n    @Effect()\n    doBannerPagination$: Observable<Action> = this.action$\n        .pipe(\n            ofType(actions.ActionTypes.DO_BANNER_PAGINATION_ACTION),", "line_changes": {"deleted": [{"line_no": 7, "char_start": 102, "char_end": 150, "line": " * Author piccosoft <support@spurtcommerce.com>\n"}], "added": [{"line_no": 8, "char_start": 102, "char_end": 132, "line": " * Author piccosoft <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 102, "char_end": 150, "chars": " * Author piccosoft <support@spurtcommerce.com>\n"}], "added": [{"char_start": 102, "char_end": 132, "chars": " * Author piccosoft <<EMAIL>>\n"}]}}
{"func_name": 13100, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import {browser, by} from \"protractor\";\nimport {AccountSummaryPage} from \"./account-summary.po\";\nimport {LoginPage} from \"../login/login.po\";\nimport {TestData} from \"../tools/test-data\";\n\ndescribe('Account Summary Tests', () => {\n    let page: AccountSummaryPage;\n    let firstTime = true;\n\n    // Make sure we are logged in clean before each test\n    beforeEach(() => {\n\n        if (firstTime){\n            firstTime = false;\n            new TestData().run();\n        }\n\n        page = new AccountSummaryPage();\n\n        let loginPage = new LoginPage();\n\n        // Login\n        loginPage.validLogin();\n\n        page.navigateTo();\n    });\n\n\n    it(\"Should see logged in data\", () => {\n        expect(page.hasStrongContentOnSummaryPage(\"sam@samdavisdesign.co.uk\")).toBeTruthy();\n        expect(page.hasStrongContentOnSummaryPage(\"07891 147676\")).toBeTruthy();\n        expect(page.hasStrongContentOnSummaryPage(\"samdavis@gmail.com\")).toBeTruthy();\n    });\n\n\n    it(\"Cannot change email address if invalid password is supplied\", () => {\n        page.clickEmailEdit();\n        page.setNewEmailAddress('burger@chips.pizza');\n        page.setEditEmailPassword('How do you do fellow kids? ΩΩΩΩΩΩΩ');\n        page.clickUpdateEmail();\n        expect(page.hasErrorText()).toBeTruthy();\n    });\n\n    // it (\"Cannot change email address to an invalid email\", () => {\n    //     page.clickEmailEdit();\n    //     page.setNewEmailAddress('Call me Ishmail');\n    //     page.setEditEmailPassword('password');\n    //     page.clickUpdateEmail();\n    //     expect(page.hasErrorText()).toBeTruthy();\n    // })", "func_src_after": "import {browser, by} from \"protractor\";\nimport {AccountSummaryPage} from \"./account-summary.po\";\nimport {LoginPage} from \"../login/login.po\";\nimport {TestData} from \"../tools/test-data\";\n\ndescribe('Account Summary Tests', () => {\n    let page: AccountSummaryPage;\n    let firstTime = true;\n\n    // Make sure we are logged in clean before each test\n    beforeEach(() => {\n\n        if (firstTime){\n            firstTime = false;\n            new TestData().run();\n        }\n\n        page = new AccountSummaryPage();\n\n        let loginPage = new LoginPage();\n\n        // Login\n        loginPage.validLogin();\n\n        page.navigateTo();\n    });\n\n\n    it(\"Should see logged in data\", () => {\n        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n        expect(page.hasStrongContentOnSummaryPage(\"07891 147676\")).toBeTruthy();\n        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n    });\n\n\n    it(\"Cannot change email address if invalid password is supplied\", () => {\n        page.clickEmailEdit();\n        page.setNewEmailAddress('<EMAIL>');\n        page.setEditEmailPassword('How do you do fellow kids? ΩΩΩΩΩΩΩ');\n        page.clickUpdateEmail();\n        expect(page.hasErrorText()).toBeTruthy();\n    });\n\n    // it (\"Cannot change email address to an invalid email\", () => {\n    //     page.clickEmailEdit();\n    //     page.setNewEmailAddress('Call me Ishmail');\n    //     page.setEditEmailPassword('password');\n    //     page.clickUpdateEmail();\n    //     expect(page.hasErrorText()).toBeTruthy();\n    // })", "line_changes": {"deleted": [{"line_no": 30, "char_start": 687, "char_end": 780, "line": "        expect(page.hasStrongContentOnSummaryPage(\"sam@samdavisdesign.co.uk\")).toBeTruthy();\n"}, {"line_no": 33, "char_start": 844, "char_end": 931, "line": "        expect(page.hasStrongContentOnSummaryPage(\"samdavis@gmail.com\")).toBeTruthy();\n"}, {"line_no": 40, "char_start": 1039, "char_end": 1094, "line": "        page.setNewEmailAddress('burger@chips.pizza');\n"}], "added": [{"line_no": 31, "char_start": 687, "char_end": 763, "line": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n"}, {"line_no": 34, "char_start": 844, "char_end": 920, "line": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n"}, {"line_no": 41, "char_start": 1039, "char_end": 1083, "line": "        page.setNewEmailAddress('<EMAIL>');\n"}]}, "char_changes": {"deleted": [{"char_start": 687, "char_end": 780, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"sam@samdavisdesign.co.uk\")).toBeTruthy();\n"}, {"char_start": 844, "char_end": 931, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"samdavis@gmail.com\")).toBeTruthy();\n"}, {"char_start": 1039, "char_end": 1094, "chars": "        page.setNewEmailAddress('burger@chips.pizza');\n"}], "added": [{"char_start": 687, "char_end": 763, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n"}, {"char_start": 844, "char_end": 920, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n"}, {"char_start": 1039, "char_end": 1083, "chars": "        page.setNewEmailAddress('<EMAIL>');\n"}]}}
{"func_name": 13101, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    //\n    // it (\"Cannot change mobile number if invalid password is supplied\", () => {\n    //     page.clickMobileEdit();\n    //     page.setNewMoblie('+44 09543 555540');\n    //     page.setMobilePassword(\"I'm just a girl who can't say no.\");\n    //     page.clickUpdateMobile();\n    //     expect(page.hasErrorText()).toBeTruthy();\n    // })\n\n\n    it(\"Can change mobile to a valid mobile\", () => {\n        page.clickMobileEdit();\n        page.setNewMoblie('01189998819991197253');\n        page.setMobilePassword('password');\n        page.clickUpdateMobile();\n        expect(page.hasStrongContentOnSummaryPage(\"07891 147676\")).toBeFalsy();\n        expect(page.hasStrongContentOnSummaryPage(\"01189998819991197253\")).toBeTruthy();\n    })\n\n    it(\"Can change email to a valid email\", () => {\n        page.clickEmailEdit();\n        page.setNewEmailAddress('alt@samdavisdesign.co.uk');\n        page.setEditEmailPassword('password');\n        page.clickUpdateEmail();\n        expect(page.hasStrongContentOnSummaryPage(\"sam@samdavisdesign.co.uk\")).toBeFalsy();\n        expect(page.hasStrongContentOnSummaryPage(\"alt@samdavisdesign.co.uk\")).toBeTruthy();\n    })\n\n\n});\n", "func_src_after": "    //\n    // it (\"Cannot change mobile number if invalid password is supplied\", () => {\n    //     page.clickMobileEdit();\n    //     page.setNewMoblie('+44 09543 555540');\n    //     page.setMobilePassword(\"I'm just a girl who can't say no.\");\n    //     page.clickUpdateMobile();\n    //     expect(page.hasErrorText()).toBeTruthy();\n    // })\n\n\n    it(\"Can change mobile to a valid mobile\", () => {\n        page.clickMobileEdit();\n        page.setNewMoblie('01189998819991197253');\n        page.setMobilePassword('password');\n        page.clickUpdateMobile();\n        expect(page.hasStrongContentOnSummaryPage(\"07891 147676\")).toBeFalsy();\n        expect(page.hasStrongContentOnSummaryPage(\"01189998819991197253\")).toBeTruthy();\n    })\n\n    it(\"Can change email to a valid email\", () => {\n        page.clickEmailEdit();\n        page.setNewEmailAddress('<EMAIL>');\n        page.setEditEmailPassword('password');\n        page.clickUpdateEmail();\n        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeFalsy();\n        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n    })\n\n\n});\n", "line_changes": {"deleted": [{"line_no": 22, "char_start": 823, "char_end": 884, "line": "        page.setNewEmailAddress('alt@samdavisdesign.co.uk');\n"}, {"line_no": 26, "char_start": 947, "char_end": 1039, "line": "        expect(page.hasStrongContentOnSummaryPage(\"sam@samdavisdesign.co.uk\")).toBeFalsy();\n"}, {"line_no": 28, "char_start": 1022, "char_end": 1115, "line": "        expect(page.hasStrongContentOnSummaryPage(\"alt@samdavisdesign.co.uk\")).toBeTruthy();\n"}], "added": [{"line_no": 23, "char_start": 823, "char_end": 867, "line": "        page.setNewEmailAddress('<EMAIL>');\n"}, {"line_no": 27, "char_start": 947, "char_end": 1022, "line": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeFalsy();\n"}, {"line_no": 29, "char_start": 1022, "char_end": 1098, "line": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n"}]}, "char_changes": {"deleted": [{"char_start": 823, "char_end": 884, "chars": "        page.setNewEmailAddress('alt@samdavisdesign.co.uk');\n"}, {"char_start": 947, "char_end": 1039, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"sam@samdavisdesign.co.uk\")).toBeFalsy();\n"}, {"char_start": 1022, "char_end": 1115, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"alt@samdavisdesign.co.uk\")).toBeTruthy();\n"}], "added": [{"char_start": 823, "char_end": 867, "chars": "        page.setNewEmailAddress('<EMAIL>');\n"}, {"char_start": 947, "char_end": 1022, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeFalsy();\n"}, {"char_start": 1022, "char_end": 1098, "chars": "        expect(page.hasStrongContentOnSummaryPage(\"<EMAIL>\")).toBeTruthy();\n"}]}}
{"func_name": 13125, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "}\n\nexport async function seedDBProduction() {\n  await UserDao.insertMany(getAdmin());\n  await MetaDao.create(MetaStub.getSingle());\n  await CommonDao.create(CommonStub.getSingle());\n  await ArticleDao.insertMany(ArticleStub.getMany(11));\n  await EventDao.insertMany(EventStub.getMany(11));\n\n  logger.info('Seed DB production completed');\n}\n\nexport async function clearDBDevelopment() {\n  await UserDao.destroyAll();\n  await MetaDao.destroyAll();\n  await CommonDao.destroyAll();\n  await ArticleDao.destroyAll();\n  await EventDao.destroyAll();\n  await BlogCategoriesDao.destroyAll();\n  await BlogDao.destroyAll();\n}\n\nexport async function clearDBProduction() {\n  await UserDao.destroyAll();\n  await MetaDao.destroyAll();\n  await CommonDao.destroyAll();\n  await ArticleDao.destroyAll();\n  await EventDao.destroyAll();\n}\n\nfunction getAdmin() {\n  return [\n    UserStub.getSingle({\n      email: 'admin@project.com',\n      name: 'Admin',\n      role: roles.ADMIN,\n      isActivated: true,\n    })\n  ];\n}", "func_src_after": "}\n\nexport async function seedDBProduction() {\n  await UserDao.insertMany(getAdmin());\n  await MetaDao.create(MetaStub.getSingle());\n  await CommonDao.create(CommonStub.getSingle());\n  await ArticleDao.insertMany(ArticleStub.getMany(11));\n  await EventDao.insertMany(EventStub.getMany(11));\n\n  logger.info('Seed DB production completed');\n}\n\nexport async function clearDBDevelopment() {\n  await UserDao.destroyAll();\n  await MetaDao.destroyAll();\n  await CommonDao.destroyAll();\n  await ArticleDao.destroyAll();\n  await EventDao.destroyAll();\n  await BlogCategoriesDao.destroyAll();\n  await BlogDao.destroyAll();\n}\n\nexport async function clearDBProduction() {\n  await UserDao.destroyAll();\n  await MetaDao.destroyAll();\n  await CommonDao.destroyAll();\n  await ArticleDao.destroyAll();\n  await EventDao.destroyAll();\n}\n\nfunction getAdmin() {\n  return [\n    UserStub.getSingle({\n      email: '<EMAIL>',\n      name: 'Admin',\n      role: roles.ADMIN,\n      isActivated: true,\n    })\n  ];\n}", "line_changes": {"deleted": [{"line_no": 34, "char_start": 876, "char_end": 910, "line": "      email: 'admin@project.com',\n"}], "added": [{"line_no": 35, "char_start": 876, "char_end": 900, "line": "      email: '<EMAIL>',\n"}]}, "char_changes": {"deleted": [{"char_start": 876, "char_end": 910, "chars": "      email: 'admin@project.com',\n"}], "added": [{"char_start": 876, "char_end": 900, "chars": "      email: '<EMAIL>',\n"}]}}
{"func_name": 13145, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "﻿import { Code } from \"app/conduct/code.model\";\nimport { TestBundleModel } from \"app/conduct/test_bundle_model\";\nimport { TestAttendee } from \"app/conduct/test_attendee.model\";\nimport { Test } from \"app/tests/tests.model\";\nimport { TestQuestions } from \"app/conduct/test_conduct.model\";\nimport { Category } from \"app/questions/category.model\";\nimport { TestLogs } from \"app/reports/testlogs.model\";\nimport { SingleMultipleAnswerQuestion } from \"app/questions/single-multiple-question\";\nimport { CodeSnippetQuestion } from \"app/questions/code.snippet.model\";\n\nexport const FakeTest: Test = {\n  id: 2002,\n  createdDateTime: new Date(\"2017-10-04T11:21:01.054085\"),\n  testName: \"Hello\",\n  link: \"hjxJ4cQ2fI\",\n  browserTolerance: 1,\n  startDate: \"2017-10-04T11:50:00\",\n  endDate: \"2017-10-07T11:21:00\",\n  duration: 60,\n  warningTime: 5,\n  focusLostTime: 5,\n  warningMessage: \"Your test is about to end. Hurry up!!\",\n  correctMarks: 1,\n  incorrectMarks: 0,\n  isPaused: false,\n  isLaunched: true,\n  questionOrder: 1,\n  optionOrder: 1,\n  allowTestResume: 0,\n  categoryAcList: [] as Category[],\n  testIpAddress: [],\n  numberOfTestAttendees: 18,\n  numberOfTestSections: 1,\n  numberOfTestQuestions: 3,\n  testCopiedNumber: 0,\n  isEditTestEnabled: true,\n  isQuestionMissing: false,\n};\n\nexport const FakeAttendee: TestAttendee = {\n  id: 1,\n  email: \"fakeattendee@fakesite.fakenet\",\n  firstName: \"fake\",\n  lastName: \"u\",\n  contactNumber: \"0000000000\",\n  rollNumber: \"FAKE-0\",\n  attendeeBrowserToleranceCount: 5,\n};\n\n// Don't add any new question here until you have modified unit test", "func_src_after": "﻿import { Code } from \"app/conduct/code.model\";\nimport { TestBundleModel } from \"app/conduct/test_bundle_model\";\nimport { TestAttendee } from \"app/conduct/test_attendee.model\";\nimport { Test } from \"app/tests/tests.model\";\nimport { TestQuestions } from \"app/conduct/test_conduct.model\";\nimport { Category } from \"app/questions/category.model\";\nimport { TestLogs } from \"app/reports/testlogs.model\";\nimport { SingleMultipleAnswerQuestion } from \"app/questions/single-multiple-question\";\nimport { CodeSnippetQuestion } from \"app/questions/code.snippet.model\";\n\nexport const FakeTest: Test = {\n  id: 2002,\n  createdDateTime: new Date(\"2017-10-04T11:21:01.054085\"),\n  testName: \"Hello\",\n  link: \"hjxJ4cQ2fI\",\n  browserTolerance: 1,\n  startDate: \"2017-10-04T11:50:00\",\n  endDate: \"2017-10-07T11:21:00\",\n  duration: 60,\n  warningTime: 5,\n  focusLostTime: 5,\n  warningMessage: \"Your test is about to end. Hurry up!!\",\n  correctMarks: 1,\n  incorrectMarks: 0,\n  isPaused: false,\n  isLaunched: true,\n  questionOrder: 1,\n  optionOrder: 1,\n  allowTestResume: 0,\n  categoryAcList: [] as Category[],\n  testIpAddress: [],\n  numberOfTestAttendees: 18,\n  numberOfTestSections: 1,\n  numberOfTestQuestions: 3,\n  testCopiedNumber: 0,\n  isEditTestEnabled: true,\n  isQuestionMissing: false,\n};\n\nexport const FakeAttendee: TestAttendee = {\n  id: 1,\n  email: \"<EMAIL>\",\n  firstName: \"fake\",\n  lastName: \"u\",\n  contactNumber: \"0000000000\",\n  rollNumber: \"FAKE-0\",\n  attendeeBrowserToleranceCount: 5,\n};\n\n// Don't add any new question here until you have modified unit test", "line_changes": {"deleted": [{"line_no": 42, "char_start": 1326, "char_end": 1368, "line": "  email: \"fakeattendee@fakesite.fakenet\",\n"}], "added": [{"line_no": 43, "char_start": 1326, "char_end": 1346, "line": "  email: \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 1326, "char_end": 1368, "chars": "  email: \"fakeattendee@fakesite.fakenet\",\n"}], "added": [{"char_start": 1326, "char_end": 1346, "chars": "  email: \"<EMAIL>\",\n"}]}}
{"func_name": 13178, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "//         </>\n//       }\n//       {\n//         userCredential && !currentUser && <h3>Checking user status...</h3>\n//       }\n//       {/* {\n//         !fbUser &&\n//         <button onClick={() => signInWithEmailAndPassword(auth, \"test-001-luisa.russel@test.com\", \"123456\")}>Email Login</button>\n//       } */}\n//       {\n//         fbUser &&\n//           <button onClick={() => { clearStateAndSignOut() }}>Sign out</button>\n//       }\n//     </div>\n//   );\n// }\n\n", "func_src_after": "//         </>\n//       }\n//       {\n//         userCredential && !currentUser && <h3>Checking user status...</h3>\n//       }\n//       {/* {\n//         !fbUser &&\n//         <button onClick={() => signInWithEmailAndPassword(auth, \"<EMAIL>\", \"123456\")}>Email Login</button>\n//       } */}\n//       {\n//         fbUser &&\n//           <button onClick={() => { clearStateAndSignOut() }}>Sign out</button>\n//       }\n//     </div>\n//   );\n// }\n\n", "line_changes": {"deleted": [{"line_no": 8, "char_start": 163, "char_end": 296, "line": "//         <button onClick={() => signInWithEmailAndPassword(auth, \"test-001-luisa.russel@test.com\", \"123456\")}>Email Login</button>\n"}], "added": [{"line_no": 9, "char_start": 163, "char_end": 273, "line": "//         <button onClick={() => signInWithEmailAndPassword(auth, \"<EMAIL>\", \"123456\")}>Email Login</button>\n"}]}, "char_changes": {"deleted": [{"char_start": 163, "char_end": 296, "chars": "//         <button onClick={() => signInWithEmailAndPassword(auth, \"test-001-luisa.russel@test.com\", \"123456\")}>Email Login</button>\n"}], "added": [{"char_start": 163, "char_end": 273, "chars": "//         <button onClick={() => signInWithEmailAndPassword(auth, \"<EMAIL>\", \"123456\")}>Email Login</button>\n"}]}}
{"func_name": 13228, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "\n    expect(allowRequest(url, rules)).toEqual(true);\n  });\n\n  it('denies requests when hosts are not specific', () => {\n    const url = 'https://www.kibana.com/cool/route/bro';\n    const rules = [{ allow: false, host: 'kibana.com' }, { allow: true }];\n\n    expect(allowRequest(url, rules)).toEqual(false);\n  });\n\n  it('allows requests when hosts are whitelisted IP addresses', () => {\n    const url = 'http://192.168.1.1/cool/route/bro';\n    const rules = [{ allow: true, host: '192.168.1.1' }, { allow: false }];\n\n    expect(allowRequest(url, rules)).toEqual(true);\n  });\n\n  it('denies requests when hosts are blacklisted IP addresses', () => {\n    const url = 'http://192.168.1.1/cool/route/bro';\n    const rules = [{ allow: false, host: '192.168.1.1' }, { allow: true }];\n\n    expect(allowRequest(url, rules)).toEqual(false);\n  });\n\n  it('allows requests when hosts are IP addresses not blacklisted', () => {\n    const url = 'http://192.168.2.1/cool/route/bro';\n    const rules = [{ allow: false, host: '192.168.1.1' }, { allow: true }];\n\n    expect(allowRequest(url, rules)).toEqual(true);\n  });\n\n  it('denies requests when hosts are IP addresses not whitelisted', () => {\n    const url = 'http://192.168.2.1/cool/route/bro';\n    const rules = [{ allow: true, host: '192.168.1.1' }, { allow: false }];\n\n    expect(allowRequest(url, rules)).toEqual(false);\n  });\n\n  describe('Common cases', () => {\n    it('allows whitelisting of certain routes based upon protocol', () => {\n      const rules = [\n        { allow: true, host: 'kibana.com', protocol: 'http:' },\n        { allow: true, protocol: 'https:' },\n        { allow: false },\n      ];\n\n      expect(allowRequest('http://kibana.com/some/route', rules)).toEqual(true);\n      expect(allowRequest('https://good.com/some/route', rules)).toEqual(true);\n      expect(allowRequest('http://bad.com/some/route', rules)).toEqual(false);", "func_src_after": "\n    expect(allowRequest(url, rules)).toEqual(true);\n  });\n\n  it('denies requests when hosts are not specific', () => {\n    const url = 'https://www.kibana.com/cool/route/bro';\n    const rules = [{ allow: false, host: 'kibana.com' }, { allow: true }];\n\n    expect(allowRequest(url, rules)).toEqual(false);\n  });\n\n  it('allows requests when hosts are whitelisted IP addresses', () => {\n    const url = 'http://<IP-Address>/cool/route/bro';\n    const rules = [{ allow: true, host: '<IP-Address>' }, { allow: false }];\n\n    expect(allowRequest(url, rules)).toEqual(true);\n  });\n\n  it('denies requests when hosts are blacklisted IP addresses', () => {\n    const url = 'http://<IP-Address>/cool/route/bro';\n    const rules = [{ allow: false, host: '<IP-Address>' }, { allow: true }];\n\n    expect(allowRequest(url, rules)).toEqual(false);\n  });\n\n  it('allows requests when hosts are IP addresses not blacklisted', () => {\n    const url = 'http://<IP-Address>/cool/route/bro';\n    const rules = [{ allow: false, host: '<IP-Address>' }, { allow: true }];\n\n    expect(allowRequest(url, rules)).toEqual(true);\n  });\n\n  it('denies requests when hosts are IP addresses not whitelisted', () => {\n    const url = 'http://<IP-Address>/cool/route/bro';\n    const rules = [{ allow: true, host: '<IP-Address>' }, { allow: false }];\n\n    expect(allowRequest(url, rules)).toEqual(false);\n  });\n\n  describe('Common cases', () => {\n    it('allows whitelisting of certain routes based upon protocol', () => {\n      const rules = [\n        { allow: true, host: 'kibana.com', protocol: 'http:' },\n        { allow: true, protocol: 'https:' },\n        { allow: false },\n      ];\n\n      expect(allowRequest('http://kibana.com/some/route', rules)).toEqual(true);\n      expect(allowRequest('https://good.com/some/route', rules)).toEqual(true);\n      expect(allowRequest('http://bad.com/some/route', rules)).toEqual(false);", "line_changes": {"deleted": [{"line_no": 13, "char_start": 385, "char_end": 438, "line": "    const url = 'http://192.168.1.1/cool/route/bro';\n"}, {"line_no": 15, "char_start": 439, "char_end": 515, "line": "    const rules = [{ allow: true, host: '192.168.1.1' }, { allow: false }];\n"}, {"line_no": 22, "char_start": 648, "char_end": 701, "line": "    const url = 'http://192.168.1.1/cool/route/bro';\n"}, {"line_no": 24, "char_start": 702, "char_end": 778, "line": "    const rules = [{ allow: false, host: '192.168.1.1' }, { allow: true }];\n"}, {"line_no": 31, "char_start": 916, "char_end": 969, "line": "    const url = 'http://192.168.2.1/cool/route/bro';\n"}, {"line_no": 33, "char_start": 970, "char_end": 1046, "line": "    const rules = [{ allow: false, host: '192.168.1.1' }, { allow: true }];\n"}, {"line_no": 40, "char_start": 1183, "char_end": 1236, "line": "    const url = 'http://192.168.2.1/cool/route/bro';\n"}, {"line_no": 42, "char_start": 1237, "char_end": 1313, "line": "    const rules = [{ allow: true, host: '192.168.1.1' }, { allow: false }];\n"}], "added": [{"line_no": 14, "char_start": 385, "char_end": 439, "line": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"line_no": 16, "char_start": 439, "char_end": 516, "line": "    const rules = [{ allow: true, host: '<IP-Address>' }, { allow: false }];\n"}, {"line_no": 23, "char_start": 648, "char_end": 702, "line": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"line_no": 25, "char_start": 702, "char_end": 779, "line": "    const rules = [{ allow: false, host: '<IP-Address>' }, { allow: true }];\n"}, {"line_no": 32, "char_start": 916, "char_end": 970, "line": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"line_no": 34, "char_start": 970, "char_end": 1047, "line": "    const rules = [{ allow: false, host: '<IP-Address>' }, { allow: true }];\n"}, {"line_no": 41, "char_start": 1183, "char_end": 1237, "line": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"line_no": 43, "char_start": 1237, "char_end": 1314, "line": "    const rules = [{ allow: true, host: '<IP-Address>' }, { allow: false }];\n"}]}, "char_changes": {"deleted": [{"char_start": 385, "char_end": 438, "chars": "    const url = 'http://192.168.1.1/cool/route/bro';\n"}, {"char_start": 439, "char_end": 515, "chars": "    const rules = [{ allow: true, host: '192.168.1.1' }, { allow: false }];\n"}, {"char_start": 648, "char_end": 701, "chars": "    const url = 'http://192.168.1.1/cool/route/bro';\n"}, {"char_start": 702, "char_end": 778, "chars": "    const rules = [{ allow: false, host: '192.168.1.1' }, { allow: true }];\n"}, {"char_start": 916, "char_end": 969, "chars": "    const url = 'http://192.168.2.1/cool/route/bro';\n"}, {"char_start": 970, "char_end": 1046, "chars": "    const rules = [{ allow: false, host: '192.168.1.1' }, { allow: true }];\n"}, {"char_start": 1183, "char_end": 1236, "chars": "    const url = 'http://192.168.2.1/cool/route/bro';\n"}, {"char_start": 1237, "char_end": 1313, "chars": "    const rules = [{ allow: true, host: '192.168.1.1' }, { allow: false }];\n"}], "added": [{"char_start": 385, "char_end": 439, "chars": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"char_start": 439, "char_end": 516, "chars": "    const rules = [{ allow: true, host: '<IP-Address>' }, { allow: false }];\n"}, {"char_start": 648, "char_end": 702, "chars": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"char_start": 702, "char_end": 779, "chars": "    const rules = [{ allow: false, host: '<IP-Address>' }, { allow: true }];\n"}, {"char_start": 916, "char_end": 970, "chars": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"char_start": 970, "char_end": 1047, "chars": "    const rules = [{ allow: false, host: '<IP-Address>' }, { allow: true }];\n"}, {"char_start": 1183, "char_end": 1237, "chars": "    const url = 'http://<IP-Address>/cool/route/bro';\n"}, {"char_start": 1237, "char_end": 1314, "chars": "    const rules = [{ allow: true, host: '<IP-Address>' }, { allow: false }];\n"}]}}
{"func_name": 13261, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            \"type\": \"User\",\n            \"site_admin\": false\n          },\n          \"html_url\": \"https://github.com/matfantinel/bookmaniac\",\n          \"description\": \"Sample application for personal library management, made with Angular.\",\n          \"fork\": false,\n          \"url\": \"https://api.github.com/repos/matfantinel/bookmaniac\",\n          \"forks_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/forks\",\n          \"keys_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/keys{/key_id}\",\n          \"collaborators_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/collaborators{/collaborator}\",\n          \"teams_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/teams\",\n          \"hooks_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/hooks\",\n          \"issue_events_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/issues/events{/number}\",\n          \"events_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/events\",\n          \"assignees_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/assignees{/user}\",\n          \"branches_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/branches{/branch}\",\n          \"tags_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/tags\",\n          \"blobs_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/blobs{/sha}\",\n          \"git_tags_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/tags{/sha}\",\n          \"git_refs_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/refs{/sha}\",\n          \"trees_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/trees{/sha}\",\n          \"statuses_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/statuses/{sha}\",\n          \"languages_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/languages\",\n          \"stargazers_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/stargazers\",\n          \"contributors_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/contributors\",\n          \"subscribers_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/subscribers\",\n          \"subscription_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/subscription\",\n          \"commits_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/commits{/sha}\",\n          \"git_commits_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/commits{/sha}\",\n          \"comments_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/comments{/number}\",\n          \"issue_comment_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/issues/comments{/number}\",\n          \"contents_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/contents/{+path}\",\n          \"compare_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/compare/{base}...{head}\",\n          \"merges_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/merges\",\n          \"archive_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/{archive_format}{/ref}\",\n          \"downloads_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/downloads\",\n          \"issues_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/issues{/number}\",\n          \"pulls_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/pulls{/number}\",\n          \"milestones_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/milestones{/number}\",\n          \"notifications_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/notifications{?since,all,participating}\",\n          \"labels_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/labels{/name}\",\n          \"releases_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/releases{/id}\",\n          \"deployments_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/deployments\",\n          \"created_at\": \"2018-06-30T20:51:38Z\",\n          \"updated_at\": \"2019-04-30T14:15:57Z\",\n          \"pushed_at\": \"2018-12-22T19:15:00Z\",\n          \"git_url\": \"git://github.com/matfantinel/bookmaniac.git\",\n          \"ssh_url\": \"git@github.com:matfantinel/bookmaniac.git\",\n          \"clone_url\": \"https://github.com/matfantinel/bookmaniac.git\",\n          \"svn_url\": \"https://github.com/matfantinel/bookmaniac\",", "func_src_after": "            \"type\": \"User\",\n            \"site_admin\": false\n          },\n          \"html_url\": \"https://github.com/matfantinel/bookmaniac\",\n          \"description\": \"Sample application for personal library management, made with Angular.\",\n          \"fork\": false,\n          \"url\": \"https://api.github.com/repos/matfantinel/bookmaniac\",\n          \"forks_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/forks\",\n          \"keys_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/keys{/key_id}\",\n          \"collaborators_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/collaborators{/collaborator}\",\n          \"teams_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/teams\",\n          \"hooks_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/hooks\",\n          \"issue_events_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/issues/events{/number}\",\n          \"events_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/events\",\n          \"assignees_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/assignees{/user}\",\n          \"branches_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/branches{/branch}\",\n          \"tags_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/tags\",\n          \"blobs_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/blobs{/sha}\",\n          \"git_tags_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/tags{/sha}\",\n          \"git_refs_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/refs{/sha}\",\n          \"trees_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/trees{/sha}\",\n          \"statuses_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/statuses/{sha}\",\n          \"languages_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/languages\",\n          \"stargazers_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/stargazers\",\n          \"contributors_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/contributors\",\n          \"subscribers_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/subscribers\",\n          \"subscription_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/subscription\",\n          \"commits_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/commits{/sha}\",\n          \"git_commits_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/git/commits{/sha}\",\n          \"comments_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/comments{/number}\",\n          \"issue_comment_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/issues/comments{/number}\",\n          \"contents_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/contents/{+path}\",\n          \"compare_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/compare/{base}...{head}\",\n          \"merges_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/merges\",\n          \"archive_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/{archive_format}{/ref}\",\n          \"downloads_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/downloads\",\n          \"issues_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/issues{/number}\",\n          \"pulls_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/pulls{/number}\",\n          \"milestones_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/milestones{/number}\",\n          \"notifications_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/notifications{?since,all,participating}\",\n          \"labels_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/labels{/name}\",\n          \"releases_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/releases{/id}\",\n          \"deployments_url\": \"https://api.github.com/repos/matfantinel/bookmaniac/deployments\",\n          \"created_at\": \"2018-06-30T20:51:38Z\",\n          \"updated_at\": \"2019-04-30T14:15:57Z\",\n          \"pushed_at\": \"2018-12-22T19:15:00Z\",\n          \"git_url\": \"git://github.com/matfantinel/bookmaniac.git\",\n          \"ssh_url\": \"git@github.com:matfantinel/bookmaniac.git\",\n          \"clone_url\": \"https://github.com/matfantinel/bookmaniac.git\",\n          \"svn_url\": \"https://github.com/matfantinel/bookmaniac\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13277, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import * as dbHandler from \"./database\";\nimport { Internship, InternshipStatuses } from \"../../src/models/internship\";\nimport { Error, Types } from \"mongoose\";\nimport { User } from \"../../src/models/user\";\nimport { PdfDocumentStatuses } from \"../../src/models/pdfDocument\";\n\nconst INCOMPLETE_INTERNSHIP_ID = Types.ObjectId(\"00000000000000000000000a\");\nconst INTERNSHIP_ID = Types.ObjectId(\"00000000000000000000000b\");\nconst ADMIN_USER_ID = Types.ObjectId(\"0000a0000000000000000000\");\nconst USER_ID = Types.ObjectId(\"0000b0000000000000000000\");\n\nbeforeAll(async () => {\n  await dbHandler.connect();\n});\n\nbeforeEach(async () => {\n  await dbHandler.clearDatabase();\n\n  // Create user\n  await User.create({\n    _id: USER_ID,\n    emailAddress: \"user@test.org\",\n    firstName: \"Regular\",\n    lastName: \"User\",\n    isAdmin: false,\n  });\n\n  // Create admin user\n  await User.create({\n    _id: ADMIN_USER_ID,\n    emailAddress: \"admin@test.org\",\n    firstName: \"Admin\",\n    lastName: \"User\",\n    isAdmin: true,\n  });\n\n  // Create incomplete internship\n  await Internship.create({\n    _id: INCOMPLETE_INTERNSHIP_ID,\n    operationalArea: \"Game Design\",\n    programmingLanguages: [\"C#\"],\n    paymentTypes: [\"noncash benefit\", \"cash benefit\"],\n  });\n\n  // Create internship with all required fields filled in\n  await Internship.create({\n    _id: INTERNSHIP_ID,\n    operationalArea: \"Game Design\",\n    programmingLanguages: [\"C#\", \"JavaScript\"],\n    paymentTypes: [\"cash benefit\"],", "func_src_after": "import * as dbHandler from \"./database\";\nimport { Internship, InternshipStatuses } from \"../../src/models/internship\";\nimport { Error, Types } from \"mongoose\";\nimport { User } from \"../../src/models/user\";\nimport { PdfDocumentStatuses } from \"../../src/models/pdfDocument\";\n\nconst INCOMPLETE_INTERNSHIP_ID = Types.ObjectId(\"00000000000000000000000a\");\nconst INTERNSHIP_ID = Types.ObjectId(\"00000000000000000000000b\");\nconst ADMIN_USER_ID = Types.ObjectId(\"0000a0000000000000000000\");\nconst USER_ID = Types.ObjectId(\"0000b0000000000000000000\");\n\nbeforeAll(async () => {\n  await dbHandler.connect();\n});\n\nbeforeEach(async () => {\n  await dbHandler.clearDatabase();\n\n  // Create user\n  await User.create({\n    _id: USER_ID,\n    emailAddress: \"<EMAIL>\",\n    firstName: \"Regular\",\n    lastName: \"User\",\n    isAdmin: false,\n  });\n\n  // Create admin user\n  await User.create({\n    _id: ADMIN_USER_ID,\n    emailAddress: \"<EMAIL>\",\n    firstName: \"Admin\",\n    lastName: \"User\",\n    isAdmin: true,\n  });\n\n  // Create incomplete internship\n  await Internship.create({\n    _id: INCOMPLETE_INTERNSHIP_ID,\n    operationalArea: \"Game Design\",\n    programmingLanguages: [\"C#\"],\n    paymentTypes: [\"noncash benefit\", \"cash benefit\"],\n  });\n\n  // Create internship with all required fields filled in\n  await Internship.create({\n    _id: INTERNSHIP_ID,\n    operationalArea: \"Game Design\",\n    programmingLanguages: [\"C#\", \"JavaScript\"],\n    paymentTypes: [\"cash benefit\"],", "line_changes": {"deleted": [{"line_no": 22, "char_start": 721, "char_end": 756, "line": "    emailAddress: \"user@test.org\",\n"}, {"line_no": 32, "char_start": 894, "char_end": 930, "line": "    emailAddress: \"admin@test.org\",\n"}], "added": [{"line_no": 23, "char_start": 721, "char_end": 750, "line": "    emailAddress: \"<EMAIL>\",\n"}, {"line_no": 33, "char_start": 894, "char_end": 923, "line": "    emailAddress: \"<EMAIL>\",\n"}]}, "char_changes": {"deleted": [{"char_start": 721, "char_end": 756, "chars": "    emailAddress: \"user@test.org\",\n"}, {"char_start": 894, "char_end": 930, "chars": "    emailAddress: \"admin@test.org\",\n"}], "added": [{"char_start": 721, "char_end": 750, "chars": "    emailAddress: \"<EMAIL>\",\n"}, {"char_start": 894, "char_end": 923, "chars": "    emailAddress: \"<EMAIL>\",\n"}]}}
{"func_name": 13307, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                    for (const msg of msgs) {\n                        // This is about how Node's console.log works.\n                        logs += nodeUtil.inspect(msg);\n                    }\n                },\n                errorLogFunction: memoryHoleLogger\n            });\n            router.route(jwtAuthorizationRoute);\n            router.route({\n                matches: () => true,\n                handle: () => ({body: {}})\n            });\n\n            const resp = await cassava.testing.testRouter(router, cassava.testing.createTestProxyEvent(\"/foo/bar\", \"GET\", {\n                headers: {\n                    Authorization: \"Bearer eyJ2ZXIiOjEsInZhdiI6MSwiYWxnIjoiSFMyNTYiLCJ0eXAiOiJKV1QifQ.eyJnIjp7Imd1aSI6InVzZXItNzA1MjIxMGJjYjk0NDQ4YjgyNWZmYTY4NTA4ZDI5YWQtVEVTVCIsImdtaSI6InVzZXItNzA1MjIxMGJjYjk0NDQ4YjgyNWZmYTY4NTA4ZDI5YWQifSwiaWF0IjoxNDgxNTczNTAwLCJzY29wZXMiOlsiQyIsIlQiLCJSIiwiQ0VDIiwiQ0VSIiwiVUEiLCJGIl19.15AOfp7clpOX3IuyNj0XodqPaQTY6MxsNTW-mVLgYoY\"\n                }\n            }));\n\n            chai.assert.isObject(resp);\n            chai.assert.equal(resp.statusCode, 200, JSON.stringify(resp));\n            chai.assert.isString(logs);\n            chai.assert.isNotEmpty(logs);\n            chai.assert.include(logs, \"user-7052210bcb94448b825ffa68508d29ad-TEST\");\n            chai.assert.notInclude(logs, \"15AOfp7clpOX3IuyNj0XodqPaQTY6MxsNTW-mVLgYoY\");\n        });\n    });\n});\n", "func_src_after": "                    for (const msg of msgs) {\n                        // This is about how Node's console.log works.\n                        logs += nodeUtil.inspect(msg);\n                    }\n                },\n                errorLogFunction: memoryHoleLogger\n            });\n            router.route(jwtAuthorizationRoute);\n            router.route({\n                matches: () => true,\n                handle: () => ({body: {}})\n            });\n\n            const resp = await cassava.testing.testRouter(router, cassava.testing.createTestProxyEvent(\"/foo/bar\", \"GET\", {\n                headers: {\n                    Authorization: \"Bearer eyJ2ZXIiOjEsInZhdiI6MSwiYWxnIjoiSFMyNTYiLCJ0eXAiOiJKV1QifQ.eyJnIjp7Imd1aSI6InVzZXItNzA1MjIxMGJjYjk0NDQ4YjgyNWZmYTY4NTA4ZDI5YWQtVEVTVCIsImdtaSI6InVzZXItNzA1MjIxMGJjYjk0NDQ4YjgyNWZmYTY4NTA4ZDI5YWQifSwiaWF0IjoxNDgxNTczNTAwLCJzY29wZXMiOlsiQyIsIlQiLCJSIiwiQ0VDIiwiQ0VSIiwiVUEiLCJGIl19.15AOfp7clpOX3IuyNj0XodqPaQTY6MxsNTW-mVLgYoY\"\n                }\n            }));\n\n            chai.assert.isObject(resp);\n            chai.assert.equal(resp.statusCode, 200, JSON.stringify(resp));\n            chai.assert.isString(logs);\n            chai.assert.isNotEmpty(logs);\n            chai.assert.include(logs, \"user-7052210bcb94448b825ffa68508d29ad-TEST\");\n            chai.assert.notInclude(logs, \"15AOfp7clpOX3IuyNj0XodqPaQTY6MxsNTW-mVLgYoY\");\n        });\n    });\n});\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13316, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import { Test, TestingModule } from '@nestjs/testing';\nimport { UserService } from './user.service';\nimport { User } from './entities/user.entity';\nimport { getRepositoryToken } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\ndescribe('UserService', () => {\n  let service: UserService;\n  let users: User[];\n  let repository: Repository<User>;\n  const testUser = new User('test@example.com', 'test password');\n\n  beforeEach(async () => {\n    users = [\n      new User('aaaaa@example.com', 'password1'),\n      new User('bbbbb@example.com', 'password2'),\n      new User('ccccc@example.com', 'password3'),\n    ];\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        UserService,\n        {\n          provide: getRepositoryToken(User),\n          useValue: {\n            create: jest.fn().mockReturnValue(testUser),\n            save: jest.fn().mockImplementation(async (user: User) => {\n              users.push(user);\n            }),\n            find: jest.fn().mockResolvedValue(users),\n            findOneOrFail: jest.fn().mockResolvedValue(testUser),\n            update: jest.fn(),\n            delete: jest.fn().mockResolvedValue({ deleted: true }),\n          },\n        },\n      ],\n    }).compile();\n\n    service = module.get<UserService>(UserService);\n    repository = module.get<Repository<User>>(getRepositoryToken(User));\n  });\n\n  it('should be defined', () => {\n    expect(service).toBeDefined();\n  });\n\n  describe('findAll', () => {\n    it('should return an array of users', () => {\n      expect(service.findAll()).resolves.toBe(users);\n    });\n  });", "func_src_after": "import { Test, TestingModule } from '@nestjs/testing';\nimport { UserService } from './user.service';\nimport { User } from './entities/user.entity';\nimport { getRepositoryToken } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\ndescribe('UserService', () => {\n  let service: UserService;\n  let users: User[];\n  let repository: Repository<User>;\n  const testUser = new User('<EMAIL>', 'test password');\n\n  beforeEach(async () => {\n    users = [\n      new User('<EMAIL>', 'password1'),\n      new User('<EMAIL>', 'password2'),\n      new User('<EMAIL>', 'password3'),\n    ];\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        UserService,\n        {\n          provide: getRepositoryToken(User),\n          useValue: {\n            create: jest.fn().mockReturnValue(testUser),\n            save: jest.fn().mockImplementation(async (user: User) => {\n              users.push(user);\n            }),\n            find: jest.fn().mockResolvedValue(users),\n            findOneOrFail: jest.fn().mockResolvedValue(testUser),\n            update: jest.fn(),\n            delete: jest.fn().mockResolvedValue({ deleted: true }),\n          },\n        },\n      ],\n    }).compile();\n\n    service = module.get<UserService>(UserService);\n    repository = module.get<Repository<User>>(getRepositoryToken(User));\n  });\n\n  it('should be defined', () => {\n    expect(service).toBeDefined();\n  });\n\n  describe('findAll', () => {\n    it('should return an array of users', () => {\n      expect(service.findAll()).resolves.toBe(users);\n    });\n  });", "line_changes": {"deleted": [{"line_no": 11, "char_start": 358, "char_end": 424, "line": "  const testUser = new User('test@example.com', 'test password');\n"}, {"line_no": 16, "char_start": 457, "char_end": 507, "line": "      new User('aaaaa@example.com', 'password1'),\n"}, {"line_no": 17, "char_start": 457, "char_end": 507, "line": "      new User('bbbbb@example.com', 'password2'),\n"}, {"line_no": 18, "char_start": 457, "char_end": 507, "line": "      new User('ccccc@example.com', 'password3'),\n"}], "added": [{"line_no": 12, "char_start": 358, "char_end": 415, "line": "  const testUser = new User('<EMAIL>', 'test password');\n"}, {"line_no": 19, "char_start": 457, "char_end": 497, "line": "      new User('<EMAIL>', 'password1'),\n"}, {"line_no": 20, "char_start": 497, "char_end": 537, "line": "      new User('<EMAIL>', 'password2'),\n"}, {"line_no": 21, "char_start": 537, "char_end": 577, "line": "      new User('<EMAIL>', 'password3'),\n"}]}, "char_changes": {"deleted": [{"char_start": 358, "char_end": 424, "chars": "  const testUser = new User('test@example.com', 'test password');\n"}, {"char_start": 457, "char_end": 507, "chars": "      new User('aaaaa@example.com', 'password1'),\n"}, {"char_start": 457, "char_end": 507, "chars": "      new User('bbbbb@example.com', 'password2'),\n"}, {"char_start": 457, "char_end": 507, "chars": "      new User('ccccc@example.com', 'password3'),\n"}], "added": [{"char_start": 358, "char_end": 415, "chars": "  const testUser = new User('<EMAIL>', 'test password');\n"}, {"char_start": 457, "char_end": 497, "chars": "      new User('<EMAIL>', 'password1'),\n"}, {"char_start": 497, "char_end": 537, "chars": "      new User('<EMAIL>', 'password2'),\n"}, {"char_start": 537, "char_end": 577, "chars": "      new User('<EMAIL>', 'password3'),\n"}]}}
{"func_name": 13327, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    Column_PropertyValue: \"Value\",\n    Column_Field: \"Field\",\n    Column_Value: \"Value\",\n    Column_Pattern: \"Pattern\",\n    Column_ExcludeRegExp: \"Exclude RegExp\",\n    Column_IncludeRegExp: \"Include RegExp\",\n\n\n    // Pages common +++++++++++++++++++++++++++++\n    Page_Connection: \"\",\n    Page_Configuration: \"\",\n    Page_Preview: \"\",\n    Page_ExecuteScript: \"\",\n    Page_StepIsCompleted: \"The current wizard step has been completed. Click 'Next' to continue.\",\n    Page_StepIsNotCompleted: \"The current wizard step is in progress...\",\n    Page_PreviewStepIsCompleted: \"All wizard steps have been sucessfully completed. You can now run the Script.\",\n    Page_ScriptIsExecuting: \"The Script is currently running. Wait for process to complete...\",\n    Page_AbortExecutionButton: \"ABORT\",\n\n\n    // Toast ++++++++++++++++++++++++++++++++++++\n    DefaultToastMessage: \"Success!\",\n    DefaultToastTitle: \"Success\",\n    DefaultToastErrorTitle: \"Error!\",\n    DefaultToastWarningTitle: \"Warning!\",\n    DefaultToastErrorMessage: \"Unknown error!\",\n\n\n    // Modal ++++++++++++++++++++++++++++++++++++\n    DefaultModalTitlePrompt: \"Enter value\",\n    DefaultModalMessagePrompt: \"Enter value\",\n    DefaultModalTitleConfirm: \"Action confirmation\",\n    DefaultModalMessageConfirm: \"Are your sure?\",\n\n\n    // Loader ++++++++++++++++++++++++++++++++++++\n    Loader_DefaultLoaderMessage: 'Working. Please, wait...',\n\n    // Login/Register page +++++++++++++++++++++++\n    // Login/Register -> Errors\n    Auth_Error_InvalidUserData: \"Invalid login data provided. Try to register using another email and/or password.\",\n    Auth_Error_UserNotFound: \"User not found.\",\n\n    // Login/Register -> All\n    Auth_NewApplicationUser: \"New applciation user\",\n    Auth_EmailAddress: \"Email address\",\n    Auth_Password: \"Auth_Password\",\n    Auth_PleaseSignIn: \"Please, sign in\",\n\n    // Connection (home) page ++++++++++++++++++++++", "func_src_after": "    Column_PropertyValue: \"Value\",\n    Column_Field: \"Field\",\n    Column_Value: \"Value\",\n    Column_Pattern: \"Pattern\",\n    Column_ExcludeRegExp: \"Exclude RegExp\",\n    Column_IncludeRegExp: \"Include RegExp\",\n\n\n    // Pages common +++++++++++++++++++++++++++++\n    Page_Connection: \"\",\n    Page_Configuration: \"\",\n    Page_Preview: \"\",\n    Page_ExecuteScript: \"\",\n    Page_StepIsCompleted: \"The current wizard step has been completed. Click 'Next' to continue.\",\n    Page_StepIsNotCompleted: \"The current wizard step is in progress...\",\n    Page_PreviewStepIsCompleted: \"All wizard steps have been sucessfully completed. You can now run the Script.\",\n    Page_ScriptIsExecuting: \"The Script is currently running. Wait for process to complete...\",\n    Page_AbortExecutionButton: \"ABORT\",\n\n\n    // Toast ++++++++++++++++++++++++++++++++++++\n    DefaultToastMessage: \"Success!\",\n    DefaultToastTitle: \"Success\",\n    DefaultToastErrorTitle: \"Error!\",\n    DefaultToastWarningTitle: \"Warning!\",\n    DefaultToastErrorMessage: \"Unknown error!\",\n\n\n    // Modal ++++++++++++++++++++++++++++++++++++\n    DefaultModalTitlePrompt: \"Enter value\",\n    DefaultModalMessagePrompt: \"Enter value\",\n    DefaultModalTitleConfirm: \"Action confirmation\",\n    DefaultModalMessageConfirm: \"Are your sure?\",\n\n\n    // Loader ++++++++++++++++++++++++++++++++++++\n    Loader_DefaultLoaderMessage: 'Working. Please, wait...',\n\n    // Login/Register page +++++++++++++++++++++++\n    // Login/Register -> Errors\n    Auth_Error_InvalidUserData: \"Invalid login data provided. Try to register using another email and/or password.\",\n    Auth_Error_UserNotFound: \"User not found.\",\n\n    // Login/Register -> All\n    Auth_NewApplicationUser: \"New applciation user\",\n    Auth_EmailAddress: \"Email address\",\n    Auth_Password: \"Auth_Password\",\n    Auth_PleaseSignIn: \"Please, sign in\",\n\n    // Connection (home) page ++++++++++++++++++++++", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13346, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"egwillymu@ucoz.com\",\"title\":\"Eliot Gwillym\",\"color\":\"#bfa5e2\",\"dep\":\"Research and Development\"},\n    {\"id\":\"asnoxallv@fc2.com\",\"title\":\"Axel Snoxall\",\"color\":\"#5a2d19\",\"dep\":\"Training\"},\n    {\"id\":\"porteauxw@cnn.com\",\"title\":\"Peder Orteaux\",\"color\":\"#939251\",\"dep\":\"Training\"},\n    {\"id\":\"fswinx@facebook.com\",\"title\":\"Fulton Swin\",\"color\":\"#dabad3\",\"dep\":\"Product Management\"},\n    {\"id\":\"ofomichyovy@soundcloud.com\",\"title\":\"Olin Fomichyov\",\"color\":\"#f78c7f\",\"dep\":\"Services\"},\n    {\"id\":\"mtantiz@eepurl.com\",\"title\":\"Maynord Tanti\",\"color\":\"#0f5172\",\"dep\":\"Business Development\"},\n    {\"id\":\"amonroe10@discovery.com\",\"title\":\"Andra Monroe\",\"color\":\"#59fac8\",\"dep\":\"Services\"},\n    {\"id\":\"lknuckles11@auda.org.au\",\"title\":\"Leland Knuckles\",\"color\":\"#ef9c92\",\"dep\":\"Business Development\"},\n    {\"id\":\"mcammack12@businesswire.com\",\"title\":\"Marjie Cammack\",\"color\":\"#0304ee\",\"dep\":\"Training\"},\n    {\"id\":\"gkay13@devhub.com\",\"title\":\"Gay Kay\",\"color\":\"#88e0cb\",\"dep\":\"Research and Development\"},\n    {\"id\":\"aarcase14@booking.com\",\"title\":\"Afton Arcase\",\"color\":\"#6834c7\",\"dep\":\"Support\"},\n    {\"id\":\"gwattins15@artisteer.com\",\"title\":\"Garvy Wattins\",\"color\":\"#82bbb4\",\"dep\":\"Sales\"},\n    {\"id\":\"istrode16@unicef.org\",\"title\":\"Ilka Strode\",\"color\":\"#ffbb2b\",\"dep\":\"Support\"},\n    {\"id\":\"ppleasants17@dedecms.com\",\"title\":\"Perceval Pleasants\",\"color\":\"#7b5d93\",\"dep\":\"Sales\"},\n    {\"id\":\"rbrandolini18@ox.ac.uk\",\"title\":\"Randi Brandolini\",\"color\":\"#28066b\",\"dep\":\"Engineering\"},\n    {\"id\":\"hyoakley19@foxnews.com\",\"title\":\"Hartwell Yoakley\",\"color\":\"#8c98e4\",\"dep\":\"Research and Development\"},\n    {\"id\":\"ashuker1a@over-blog.com\",\"title\":\"Albertine Shuker\",\"color\":\"#c1c325\",\"dep\":\"Legal\"},\n    {\"id\":\"cmallatratt1b@adobe.com\",\"title\":\"Claudio Mallatratt\",\"color\":\"#a0ca73\",\"dep\":\"Sales\"},\n    {\"id\":\"rferreras1c@un.org\",\"title\":\"Roobbie Ferreras\",\"color\":\"#f7cc59\",\"dep\":\"Support\"},\n    {\"id\":\"njahn1d@oaic.gov.au\",\"title\":\"Nicolina Jahn\",\"color\":\"#abe93d\",\"dep\":\"Engineering\"},\n    {\"id\":\"kmearing1e@mediafire.com\",\"title\":\"Karolina Mearing\",\"color\":\"#8216e3\",\"dep\":\"Research and Development\"},\n    {\"id\":\"gjoinson1f@theatlantic.com\",\"title\":\"Gayle Joinson\",\"color\":\"#b49072\",\"dep\":\"Marketing\"},\n    {\"id\":\"lokeaveny1g@bbb.org\",\"title\":\"Llewellyn O'Keaveny\",\"color\":\"#8f29d1\",\"dep\":\"Business Development\"},\n    {\"id\":\"cedwardson1h@gizmodo.com\",\"title\":\"Carilyn Edwardson\",\"color\":\"#9a666d\",\"dep\":\"Services\"},\n    {\"id\":\"cblezard1i@flavors.me\",\"title\":\"Carmelina Blezard\",\"color\":\"#99da77\",\"dep\":\"Engineering\"},\n    {\"id\":\"lduke1j@bbb.org\",\"title\":\"Lyell Duke\",\"color\":\"#1fc680\",\"dep\":\"Services\"},\n    {\"id\":\"jride1k@rambler.ru\",\"title\":\"Joann Ride\",\"color\":\"#b120e9\",\"dep\":\"Training\"},\n    {\"id\":\"mruddell1l@xing.com\",\"title\":\"Marvin Ruddell\",\"color\":\"#8610c2\",\"dep\":\"Legal\"},\n    {\"id\":\"hlafay1m@nhs.uk\",\"title\":\"Haily Lafay\",\"color\":\"#237a4e\",\"dep\":\"Training\"},\n    {\"id\":\"kortega1n@ihg.com\",\"title\":\"Kania Ortega\",\"color\":\"#98af7a\",\"dep\":\"Legal\"},\n    {\"id\":\"ppellamont1o@wufoo.com\",\"title\":\"Phedra Pellamont\",\"color\":\"#09ba4d\",\"dep\":\"Business Development\"},\n    {\"id\":\"sprantoni1p@webmd.com\",\"title\":\"Sullivan Prantoni\",\"color\":\"#179d7c\",\"dep\":\"Legal\"},\n    {\"id\":\"vmc1q@dailymotion.com\",\"title\":\"Vivyanne Mc Andrew\",\"color\":\"#2da3ce\",\"dep\":\"Business Development\"},\n    {\"id\":\"lanfusso1r@wordpress.com\",\"title\":\"Lizette Anfusso\",\"color\":\"#6f2d96\",\"dep\":\"Training\"},\n    {\"id\":\"aspeight1s@hubpages.com\",\"title\":\"Ashlen Speight\",\"color\":\"#f3d3c8\",\"dep\":\"Accounting\"},\n    {\"id\":\"osouthcomb1t@epa.gov\",\"title\":\"Osbert Southcomb\",\"color\":\"#7a214c\",\"dep\":\"Services\"},\n    {\"id\":\"gbriat1u@noaa.gov\",\"title\":\"Gibb Briat\",\"color\":\"#f34eb2\",\"dep\":\"Product Management\"},\n    {\"id\":\"rbishell1v@alexa.com\",\"title\":\"Randie Bishell\",\"color\":\"#c70857\",\"dep\":\"Marketing\"},\n    {\"id\":\"wroache1w@twitpic.com\",\"title\":\"Whitney Roache\",\"color\":\"#ae98a0\",\"dep\":\"Legal\"},\n    {\"id\":\"eenefer1x@sun.com\",\"title\":\"Emmey Enefer\",\"color\":\"#e910f1\",\"dep\":\"Support\"},\n    {\"id\":\"mlaneham1y@craigslist.org\",\"title\":\"Madelle Laneham\",\"color\":\"#564214\",\"dep\":\"Services\"},\n    {\"id\":\"lkenney1z@biglobe.ne.jp\",\"title\":\"Lin Kenney\",\"color\":\"#940e7d\",\"dep\":\"Business Development\"},\n    {\"id\":\"oosichev20@bizjournals.com\",\"title\":\"Owen Osichev\",\"color\":\"#007169\",\"dep\":\"Sales\"},\n    {\"id\":\"vle21@unblog.fr\",\"title\":\"Vanessa Le Cornu\",\"color\":\"#daa97a\",\"dep\":\"Business Development\"},\n    {\"id\":\"toakman22@mashable.com\",\"title\":\"Terry Oakman\",\"color\":\"#ca5b18\",\"dep\":\"Product Management\"},\n    {\"id\":\"apeckitt23@bbb.org\",\"title\":\"Amory Peckitt\",\"color\":\"#68489f\",\"dep\":\"Product Management\"},\n    {\"id\":\"bcrysell24@google.com.hk\",\"title\":\"Britni Crysell\",\"color\":\"#eded98\",\"dep\":\"Human Resources\"},\n    {\"id\":\"fwortley25@toplist.cz\",\"title\":\"Frederique Wortley\",\"color\":\"#b18e6a\",\"dep\":\"Business Development\"},\n    {\"id\":\"caleksich26@hugedomains.com\",\"title\":\"Clari Aleksich\",\"color\":\"#fca197\",\"dep\":\"Human Resources\"},\n    {\"id\":\"mbreslau27@hatena.ne.jp\",\"title\":\"Moria Breslau\",\"color\":\"#9fd43d\",\"dep\":\"Marketing\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Eliot Gwillym\",\"color\":\"#bfa5e2\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Axel Snoxall\",\"color\":\"#5a2d19\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Peder Orteaux\",\"color\":\"#939251\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Fulton Swin\",\"color\":\"#dabad3\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Olin Fomichyov\",\"color\":\"#f78c7f\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Maynord Tanti\",\"color\":\"#0f5172\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Andra Monroe\",\"color\":\"#59fac8\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Leland Knuckles\",\"color\":\"#ef9c92\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Marjie Cammack\",\"color\":\"#0304ee\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gay Kay\",\"color\":\"#88e0cb\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Afton Arcase\",\"color\":\"#6834c7\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Garvy Wattins\",\"color\":\"#82bbb4\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ilka Strode\",\"color\":\"#ffbb2b\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Perceval Pleasants\",\"color\":\"#7b5d93\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Randi Brandolini\",\"color\":\"#28066b\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hartwell Yoakley\",\"color\":\"#8c98e4\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Albertine Shuker\",\"color\":\"#c1c325\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Claudio Mallatratt\",\"color\":\"#a0ca73\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Roobbie Ferreras\",\"color\":\"#f7cc59\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nicolina Jahn\",\"color\":\"#abe93d\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Karolina Mearing\",\"color\":\"#8216e3\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gayle Joinson\",\"color\":\"#b49072\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Llewellyn O'Keaveny\",\"color\":\"#8f29d1\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Carilyn Edwardson\",\"color\":\"#9a666d\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Carmelina Blezard\",\"color\":\"#99da77\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lyell Duke\",\"color\":\"#1fc680\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Joann Ride\",\"color\":\"#b120e9\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Marvin Ruddell\",\"color\":\"#8610c2\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Haily Lafay\",\"color\":\"#237a4e\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kania Ortega\",\"color\":\"#98af7a\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Phedra Pellamont\",\"color\":\"#09ba4d\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sullivan Prantoni\",\"color\":\"#179d7c\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Vivyanne Mc Andrew\",\"color\":\"#2da3ce\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lizette Anfusso\",\"color\":\"#6f2d96\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ashlen Speight\",\"color\":\"#f3d3c8\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Osbert Southcomb\",\"color\":\"#7a214c\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gibb Briat\",\"color\":\"#f34eb2\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Randie Bishell\",\"color\":\"#c70857\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Whitney Roache\",\"color\":\"#ae98a0\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Emmey Enefer\",\"color\":\"#e910f1\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Madelle Laneham\",\"color\":\"#564214\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lin Kenney\",\"color\":\"#940e7d\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Owen Osichev\",\"color\":\"#007169\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\":\"Vanessa Le Cornu\",\"color\":\"#daa97a\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Terry Oakman\",\"color\":\"#ca5b18\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Amory Peckitt\",\"color\":\"#68489f\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Britni Crysell\",\"color\":\"#eded98\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Frederique Wortley\",\"color\":\"#b18e6a\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Clari Aleksich\",\"color\":\"#fca197\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Moria Breslau\",\"color\":\"#9fd43d\",\"dep\":\"Marketing\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 108, "line": "    {\"id\":\"egwillymu@ucoz.com\",\"title\":\"Eliot Gwillym\",\"color\":\"#bfa5e2\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 3, "char_start": 97, "char_end": 187, "line": "    {\"id\":\"asnoxallv@fc2.com\",\"title\":\"Axel Snoxall\",\"color\":\"#5a2d19\",\"dep\":\"Training\"},\n"}, {"line_no": 5, "char_start": 177, "char_end": 268, "line": "    {\"id\":\"porteauxw@cnn.com\",\"title\":\"Peder Orteaux\",\"color\":\"#939251\",\"dep\":\"Training\"},\n"}, {"line_no": 7, "char_start": 258, "char_end": 359, "line": "    {\"id\":\"fswinx@facebook.com\",\"title\":\"Fulton Swin\",\"color\":\"#dabad3\",\"dep\":\"Product Management\"},\n"}, {"line_no": 9, "char_start": 347, "char_end": 448, "line": "    {\"id\":\"ofomichyovy@soundcloud.com\",\"title\":\"Olin Fomichyov\",\"color\":\"#f78c7f\",\"dep\":\"Services\"},\n"}, {"line_no": 11, "char_start": 429, "char_end": 533, "line": "    {\"id\":\"mtantiz@eepurl.com\",\"title\":\"Maynord Tanti\",\"color\":\"#0f5172\",\"dep\":\"Business Development\"},\n"}, {"line_no": 13, "char_start": 522, "char_end": 618, "line": "    {\"id\":\"amonroe10@discovery.com\",\"title\":\"Andra Monroe\",\"color\":\"#59fac8\",\"dep\":\"Services\"},\n"}, {"line_no": 15, "char_start": 602, "char_end": 713, "line": "    {\"id\":\"lknuckles11@auda.org.au\",\"title\":\"Leland Knuckles\",\"color\":\"#ef9c92\",\"dep\":\"Business Development\"},\n"}, {"line_no": 17, "char_start": 697, "char_end": 799, "line": "    {\"id\":\"mcammack12@businesswire.com\",\"title\":\"Marjie Cammack\",\"color\":\"#0304ee\",\"dep\":\"Training\"},\n"}, {"line_no": 19, "char_start": 779, "char_end": 880, "line": "    {\"id\":\"gkay13@devhub.com\",\"title\":\"Gay Kay\",\"color\":\"#88e0cb\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 21, "char_start": 870, "char_end": 963, "line": "    {\"id\":\"aarcase14@booking.com\",\"title\":\"Afton Arcase\",\"color\":\"#6834c7\",\"dep\":\"Support\"},\n"}, {"line_no": 23, "char_start": 949, "char_end": 1044, "line": "    {\"id\":\"gwattins15@artisteer.com\",\"title\":\"Garvy Wattins\",\"color\":\"#82bbb4\",\"dep\":\"Sales\"},\n"}, {"line_no": 25, "char_start": 1027, "char_end": 1118, "line": "    {\"id\":\"istrode16@unicef.org\",\"title\":\"Ilka Strode\",\"color\":\"#ffbb2b\",\"dep\":\"Support\"},\n"}, {"line_no": 27, "char_start": 1105, "char_end": 1205, "line": "    {\"id\":\"ppleasants17@dedecms.com\",\"title\":\"Perceval Pleasants\",\"color\":\"#7b5d93\",\"dep\":\"Sales\"},\n"}, {"line_no": 29, "char_start": 1188, "char_end": 1290, "line": "    {\"id\":\"rbrandolini18@ox.ac.uk\",\"title\":\"Randi Brandolini\",\"color\":\"#28066b\",\"dep\":\"Engineering\"},\n"}, {"line_no": 31, "char_start": 1275, "char_end": 1390, "line": "    {\"id\":\"hyoakley19@foxnews.com\",\"title\":\"Hartwell Yoakley\",\"color\":\"#8c98e4\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 33, "char_start": 1375, "char_end": 1472, "line": "    {\"id\":\"ashuker1a@over-blog.com\",\"title\":\"Albertine Shuker\",\"color\":\"#c1c325\",\"dep\":\"Legal\"},\n"}, {"line_no": 35, "char_start": 1456, "char_end": 1555, "line": "    {\"id\":\"cmallatratt1b@adobe.com\",\"title\":\"Claudio Mallatratt\",\"color\":\"#a0ca73\",\"dep\":\"Sales\"},\n"}, {"line_no": 37, "char_start": 1539, "char_end": 1633, "line": "    {\"id\":\"rferreras1c@un.org\",\"title\":\"Roobbie Ferreras\",\"color\":\"#f7cc59\",\"dep\":\"Support\"},\n"}, {"line_no": 39, "char_start": 1622, "char_end": 1718, "line": "    {\"id\":\"njahn1d@oaic.gov.au\",\"title\":\"Nicolina Jahn\",\"color\":\"#abe93d\",\"dep\":\"Engineering\"},\n"}, {"line_no": 41, "char_start": 1706, "char_end": 1823, "line": "    {\"id\":\"kmearing1e@mediafire.com\",\"title\":\"Karolina Mearing\",\"color\":\"#8216e3\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 43, "char_start": 1806, "char_end": 1907, "line": "    {\"id\":\"gjoinson1f@theatlantic.com\",\"title\":\"Gayle Joinson\",\"color\":\"#b49072\",\"dep\":\"Marketing\"},\n"}, {"line_no": 45, "char_start": 1888, "char_end": 1999, "line": "    {\"id\":\"lokeaveny1g@bbb.org\",\"title\":\"Llewellyn O'Keaveny\",\"color\":\"#8f29d1\",\"dep\":\"Business Development\"},\n"}, {"line_no": 47, "char_start": 1987, "char_end": 2089, "line": "    {\"id\":\"cedwardson1h@gizmodo.com\",\"title\":\"Carilyn Edwardson\",\"color\":\"#9a666d\",\"dep\":\"Services\"},\n"}, {"line_no": 49, "char_start": 2072, "char_end": 2174, "line": "    {\"id\":\"cblezard1i@flavors.me\",\"title\":\"Carmelina Blezard\",\"color\":\"#99da77\",\"dep\":\"Engineering\"},\n"}, {"line_no": 51, "char_start": 2160, "char_end": 2246, "line": "    {\"id\":\"lduke1j@bbb.org\",\"title\":\"Lyell Duke\",\"color\":\"#1fc680\",\"dep\":\"Services\"},\n"}, {"line_no": 53, "char_start": 2238, "char_end": 2327, "line": "    {\"id\":\"jride1k@rambler.ru\",\"title\":\"Joann Ride\",\"color\":\"#b120e9\",\"dep\":\"Training\"},\n"}, {"line_no": 55, "char_start": 2316, "char_end": 2407, "line": "    {\"id\":\"mruddell1l@xing.com\",\"title\":\"Marvin Ruddell\",\"color\":\"#8610c2\",\"dep\":\"Legal\"},\n"}, {"line_no": 57, "char_start": 2395, "char_end": 2482, "line": "    {\"id\":\"hlafay1m@nhs.uk\",\"title\":\"Haily Lafay\",\"color\":\"#237a4e\",\"dep\":\"Training\"},\n"}, {"line_no": 59, "char_start": 2474, "char_end": 2561, "line": "    {\"id\":\"kortega1n@ihg.com\",\"title\":\"Kania Ortega\",\"color\":\"#98af7a\",\"dep\":\"Legal\"},\n"}, {"line_no": 61, "char_start": 2551, "char_end": 2662, "line": "    {\"id\":\"ppellamont1o@wufoo.com\",\"title\":\"Phedra Pellamont\",\"color\":\"#09ba4d\",\"dep\":\"Business Development\"},\n"}, {"line_no": 63, "char_start": 2647, "char_end": 2743, "line": "    {\"id\":\"sprantoni1p@webmd.com\",\"title\":\"Sullivan Prantoni\",\"color\":\"#179d7c\",\"dep\":\"Legal\"},\n"}, {"line_no": 65, "char_start": 2729, "char_end": 2841, "line": "    {\"id\":\"vmc1q@dailymotion.com\",\"title\":\"Vivyanne Mc Andrew\",\"color\":\"#2da3ce\",\"dep\":\"Business Development\"},\n"}, {"line_no": 67, "char_start": 2827, "char_end": 2927, "line": "    {\"id\":\"lanfusso1r@wordpress.com\",\"title\":\"Lizette Anfusso\",\"color\":\"#6f2d96\",\"dep\":\"Training\"},\n"}, {"line_no": 69, "char_start": 2910, "char_end": 3010, "line": "    {\"id\":\"aspeight1s@hubpages.com\",\"title\":\"Ashlen Speight\",\"color\":\"#f3d3c8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 71, "char_start": 2994, "char_end": 3091, "line": "    {\"id\":\"osouthcomb1t@epa.gov\",\"title\":\"Osbert Southcomb\",\"color\":\"#7a214c\",\"dep\":\"Services\"},\n"}, {"line_no": 73, "char_start": 3078, "char_end": 3176, "line": "    {\"id\":\"gbriat1u@noaa.gov\",\"title\":\"Gibb Briat\",\"color\":\"#f34eb2\",\"dep\":\"Product Management\"},\n"}, {"line_no": 75, "char_start": 3166, "char_end": 3262, "line": "    {\"id\":\"rbishell1v@alexa.com\",\"title\":\"Randie Bishell\",\"color\":\"#c70857\",\"dep\":\"Marketing\"},\n"}, {"line_no": 77, "char_start": 3249, "char_end": 3342, "line": "    {\"id\":\"wroache1w@twitpic.com\",\"title\":\"Whitney Roache\",\"color\":\"#ae98a0\",\"dep\":\"Legal\"},\n"}, {"line_no": 79, "char_start": 3328, "char_end": 3417, "line": "    {\"id\":\"eenefer1x@sun.com\",\"title\":\"Emmey Enefer\",\"color\":\"#e910f1\",\"dep\":\"Support\"},\n"}, {"line_no": 81, "char_start": 3407, "char_end": 3508, "line": "    {\"id\":\"mlaneham1y@craigslist.org\",\"title\":\"Madelle Laneham\",\"color\":\"#564214\",\"dep\":\"Services\"},\n"}, {"line_no": 83, "char_start": 3490, "char_end": 3596, "line": "    {\"id\":\"lkenney1z@biglobe.ne.jp\",\"title\":\"Lin Kenney\",\"color\":\"#940e7d\",\"dep\":\"Business Development\"},\n"}, {"line_no": 85, "char_start": 3580, "char_end": 3676, "line": "    {\"id\":\"oosichev20@bizjournals.com\",\"title\":\"Owen Osichev\",\"color\":\"#007169\",\"dep\":\"Sales\"},\n"}, {"line_no": 87, "char_start": 3657, "char_end": 3761, "line": "    {\"id\":\"vle21@unblog.fr\",\"title\":\"Vanessa Le Cornu\",\"color\":\"#daa97a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 89, "char_start": 3745, "char_end": 3850, "line": "    {\"id\":\"toakman22@mashable.com\",\"title\":\"Terry Oakman\",\"color\":\"#ca5b18\",\"dep\":\"Product Management\"},\n"}, {"line_no": 91, "char_start": 3835, "char_end": 3937, "line": "    {\"id\":\"apeckitt23@bbb.org\",\"title\":\"Amory Peckitt\",\"color\":\"#68489f\",\"dep\":\"Product Management\"},\n"}, {"line_no": 93, "char_start": 3926, "char_end": 4032, "line": "    {\"id\":\"bcrysell24@google.com.hk\",\"title\":\"Britni Crysell\",\"color\":\"#eded98\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 95, "char_start": 4015, "char_end": 4127, "line": "    {\"id\":\"fwortley25@toplist.cz\",\"title\":\"Frederique Wortley\",\"color\":\"#b18e6a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 97, "char_start": 4113, "char_end": 4222, "line": "    {\"id\":\"caleksich26@hugedomains.com\",\"title\":\"Clari Aleksich\",\"color\":\"#fca197\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 99, "char_start": 4202, "char_end": 4299, "line": "    {\"id\":\"mbreslau27@hatena.ne.jp\",\"title\":\"Moria Breslau\",\"color\":\"#9fd43d\",\"dep\":\"Marketing\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 97, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Eliot Gwillym\",\"color\":\"#bfa5e2\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 4, "char_start": 97, "char_end": 177, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Axel Snoxall\",\"color\":\"#5a2d19\",\"dep\":\"Training\"},\n"}, {"line_no": 6, "char_start": 177, "char_end": 258, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Peder Orteaux\",\"color\":\"#939251\",\"dep\":\"Training\"},\n"}, {"line_no": 8, "char_start": 258, "char_end": 347, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Fulton Swin\",\"color\":\"#dabad3\",\"dep\":\"Product Management\"},\n"}, {"line_no": 10, "char_start": 347, "char_end": 429, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Olin Fomichyov\",\"color\":\"#f78c7f\",\"dep\":\"Services\"},\n"}, {"line_no": 12, "char_start": 429, "char_end": 522, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Maynord Tanti\",\"color\":\"#0f5172\",\"dep\":\"Business Development\"},\n"}, {"line_no": 14, "char_start": 522, "char_end": 602, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Andra Monroe\",\"color\":\"#59fac8\",\"dep\":\"Services\"},\n"}, {"line_no": 16, "char_start": 602, "char_end": 697, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Leland Knuckles\",\"color\":\"#ef9c92\",\"dep\":\"Business Development\"},\n"}, {"line_no": 18, "char_start": 697, "char_end": 779, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Marjie Cammack\",\"color\":\"#0304ee\",\"dep\":\"Training\"},\n"}, {"line_no": 20, "char_start": 779, "char_end": 870, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gay Kay\",\"color\":\"#88e0cb\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 22, "char_start": 870, "char_end": 949, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Afton Arcase\",\"color\":\"#6834c7\",\"dep\":\"Support\"},\n"}, {"line_no": 24, "char_start": 949, "char_end": 1027, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Garvy Wattins\",\"color\":\"#82bbb4\",\"dep\":\"Sales\"},\n"}, {"line_no": 26, "char_start": 1027, "char_end": 1105, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ilka Strode\",\"color\":\"#ffbb2b\",\"dep\":\"Support\"},\n"}, {"line_no": 28, "char_start": 1105, "char_end": 1188, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Perceval Pleasants\",\"color\":\"#7b5d93\",\"dep\":\"Sales\"},\n"}, {"line_no": 30, "char_start": 1188, "char_end": 1275, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Randi Brandolini\",\"color\":\"#28066b\",\"dep\":\"Engineering\"},\n"}, {"line_no": 32, "char_start": 1275, "char_end": 1375, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hartwell Yoakley\",\"color\":\"#8c98e4\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 34, "char_start": 1375, "char_end": 1456, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Albertine Shuker\",\"color\":\"#c1c325\",\"dep\":\"Legal\"},\n"}, {"line_no": 36, "char_start": 1456, "char_end": 1539, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Claudio Mallatratt\",\"color\":\"#a0ca73\",\"dep\":\"Sales\"},\n"}, {"line_no": 38, "char_start": 1539, "char_end": 1622, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Roobbie Ferreras\",\"color\":\"#f7cc59\",\"dep\":\"Support\"},\n"}, {"line_no": 40, "char_start": 1622, "char_end": 1706, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nicolina Jahn\",\"color\":\"#abe93d\",\"dep\":\"Engineering\"},\n"}, {"line_no": 42, "char_start": 1706, "char_end": 1806, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Karolina Mearing\",\"color\":\"#8216e3\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 44, "char_start": 1806, "char_end": 1888, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gayle Joinson\",\"color\":\"#b49072\",\"dep\":\"Marketing\"},\n"}, {"line_no": 46, "char_start": 1888, "char_end": 1987, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Llewellyn O'Keaveny\",\"color\":\"#8f29d1\",\"dep\":\"Business Development\"},\n"}, {"line_no": 48, "char_start": 1987, "char_end": 2072, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Carilyn Edwardson\",\"color\":\"#9a666d\",\"dep\":\"Services\"},\n"}, {"line_no": 50, "char_start": 2072, "char_end": 2160, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Carmelina Blezard\",\"color\":\"#99da77\",\"dep\":\"Engineering\"},\n"}, {"line_no": 52, "char_start": 2160, "char_end": 2238, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lyell Duke\",\"color\":\"#1fc680\",\"dep\":\"Services\"},\n"}, {"line_no": 54, "char_start": 2238, "char_end": 2316, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Joann Ride\",\"color\":\"#b120e9\",\"dep\":\"Training\"},\n"}, {"line_no": 56, "char_start": 2316, "char_end": 2395, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Marvin Ruddell\",\"color\":\"#8610c2\",\"dep\":\"Legal\"},\n"}, {"line_no": 58, "char_start": 2395, "char_end": 2474, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Haily Lafay\",\"color\":\"#237a4e\",\"dep\":\"Training\"},\n"}, {"line_no": 60, "char_start": 2474, "char_end": 2551, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kania Ortega\",\"color\":\"#98af7a\",\"dep\":\"Legal\"},\n"}, {"line_no": 62, "char_start": 2551, "char_end": 2647, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Phedra Pellamont\",\"color\":\"#09ba4d\",\"dep\":\"Business Development\"},\n"}, {"line_no": 64, "char_start": 2647, "char_end": 2729, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sullivan Prantoni\",\"color\":\"#179d7c\",\"dep\":\"Legal\"},\n"}, {"line_no": 66, "char_start": 2729, "char_end": 2827, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Vivyanne Mc Andrew\",\"color\":\"#2da3ce\",\"dep\":\"Business Development\"},\n"}, {"line_no": 68, "char_start": 2827, "char_end": 2910, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lizette Anfusso\",\"color\":\"#6f2d96\",\"dep\":\"Training\"},\n"}, {"line_no": 70, "char_start": 2910, "char_end": 2994, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashlen Speight\",\"color\":\"#f3d3c8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 72, "char_start": 2994, "char_end": 3078, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Osbert Southcomb\",\"color\":\"#7a214c\",\"dep\":\"Services\"},\n"}, {"line_no": 74, "char_start": 3078, "char_end": 3166, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gibb Briat\",\"color\":\"#f34eb2\",\"dep\":\"Product Management\"},\n"}, {"line_no": 76, "char_start": 3166, "char_end": 3249, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Randie Bishell\",\"color\":\"#c70857\",\"dep\":\"Marketing\"},\n"}, {"line_no": 78, "char_start": 3249, "char_end": 3328, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Whitney Roache\",\"color\":\"#ae98a0\",\"dep\":\"Legal\"},\n"}, {"line_no": 80, "char_start": 3328, "char_end": 3407, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Emmey Enefer\",\"color\":\"#e910f1\",\"dep\":\"Support\"},\n"}, {"line_no": 82, "char_start": 3407, "char_end": 3490, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Madelle Laneham\",\"color\":\"#564214\",\"dep\":\"Services\"},\n"}, {"line_no": 84, "char_start": 3490, "char_end": 3580, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lin Kenney\",\"color\":\"#940e7d\",\"dep\":\"Business Development\"},\n"}, {"line_no": 86, "char_start": 3580, "char_end": 3657, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Owen Osichev\",\"color\":\"#007169\",\"dep\":\"Sales\"},\n"}, {"line_no": 88, "char_start": 3657, "char_end": 3745, "line": "    {\"id\":\"<EMAIL>\":\"Vanessa Le Cornu\",\"color\":\"#daa97a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 90, "char_start": 3745, "char_end": 3835, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Terry Oakman\",\"color\":\"#ca5b18\",\"dep\":\"Product Management\"},\n"}, {"line_no": 92, "char_start": 3835, "char_end": 3926, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Amory Peckitt\",\"color\":\"#68489f\",\"dep\":\"Product Management\"},\n"}, {"line_no": 94, "char_start": 3926, "char_end": 4015, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Britni Crysell\",\"color\":\"#eded98\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 96, "char_start": 4015, "char_end": 4113, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Frederique Wortley\",\"color\":\"#b18e6a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 98, "char_start": 4113, "char_end": 4202, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Clari Aleksich\",\"color\":\"#fca197\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 100, "char_start": 4202, "char_end": 4283, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Moria Breslau\",\"color\":\"#9fd43d\",\"dep\":\"Marketing\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 108, "chars": "    {\"id\":\"egwillymu@ucoz.com\",\"title\":\"Eliot Gwillym\",\"color\":\"#bfa5e2\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 97, "char_end": 187, "chars": "    {\"id\":\"asnoxallv@fc2.com\",\"title\":\"Axel Snoxall\",\"color\":\"#5a2d19\",\"dep\":\"Training\"},\n"}, {"char_start": 177, "char_end": 268, "chars": "    {\"id\":\"porteauxw@cnn.com\",\"title\":\"Peder Orteaux\",\"color\":\"#939251\",\"dep\":\"Training\"},\n"}, {"char_start": 258, "char_end": 359, "chars": "    {\"id\":\"fswinx@facebook.com\",\"title\":\"Fulton Swin\",\"color\":\"#dabad3\",\"dep\":\"Product Management\"},\n"}, {"char_start": 347, "char_end": 448, "chars": "    {\"id\":\"ofomichyovy@soundcloud.com\",\"title\":\"Olin Fomichyov\",\"color\":\"#f78c7f\",\"dep\":\"Services\"},\n"}, {"char_start": 429, "char_end": 533, "chars": "    {\"id\":\"mtantiz@eepurl.com\",\"title\":\"Maynord Tanti\",\"color\":\"#0f5172\",\"dep\":\"Business Development\"},\n"}, {"char_start": 522, "char_end": 618, "chars": "    {\"id\":\"amonroe10@discovery.com\",\"title\":\"Andra Monroe\",\"color\":\"#59fac8\",\"dep\":\"Services\"},\n"}, {"char_start": 602, "char_end": 713, "chars": "    {\"id\":\"lknuckles11@auda.org.au\",\"title\":\"Leland Knuckles\",\"color\":\"#ef9c92\",\"dep\":\"Business Development\"},\n"}, {"char_start": 697, "char_end": 799, "chars": "    {\"id\":\"mcammack12@businesswire.com\",\"title\":\"Marjie Cammack\",\"color\":\"#0304ee\",\"dep\":\"Training\"},\n"}, {"char_start": 779, "char_end": 880, "chars": "    {\"id\":\"gkay13@devhub.com\",\"title\":\"Gay Kay\",\"color\":\"#88e0cb\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 870, "char_end": 963, "chars": "    {\"id\":\"aarcase14@booking.com\",\"title\":\"Afton Arcase\",\"color\":\"#6834c7\",\"dep\":\"Support\"},\n"}, {"char_start": 949, "char_end": 1044, "chars": "    {\"id\":\"gwattins15@artisteer.com\",\"title\":\"Garvy Wattins\",\"color\":\"#82bbb4\",\"dep\":\"Sales\"},\n"}, {"char_start": 1027, "char_end": 1118, "chars": "    {\"id\":\"istrode16@unicef.org\",\"title\":\"Ilka Strode\",\"color\":\"#ffbb2b\",\"dep\":\"Support\"},\n"}, {"char_start": 1105, "char_end": 1205, "chars": "    {\"id\":\"ppleasants17@dedecms.com\",\"title\":\"Perceval Pleasants\",\"color\":\"#7b5d93\",\"dep\":\"Sales\"},\n"}, {"char_start": 1188, "char_end": 1290, "chars": "    {\"id\":\"rbrandolini18@ox.ac.uk\",\"title\":\"Randi Brandolini\",\"color\":\"#28066b\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1275, "char_end": 1390, "chars": "    {\"id\":\"hyoakley19@foxnews.com\",\"title\":\"Hartwell Yoakley\",\"color\":\"#8c98e4\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1375, "char_end": 1472, "chars": "    {\"id\":\"ashuker1a@over-blog.com\",\"title\":\"Albertine Shuker\",\"color\":\"#c1c325\",\"dep\":\"Legal\"},\n"}, {"char_start": 1456, "char_end": 1555, "chars": "    {\"id\":\"cmallatratt1b@adobe.com\",\"title\":\"Claudio Mallatratt\",\"color\":\"#a0ca73\",\"dep\":\"Sales\"},\n"}, {"char_start": 1539, "char_end": 1633, "chars": "    {\"id\":\"rferreras1c@un.org\",\"title\":\"Roobbie Ferreras\",\"color\":\"#f7cc59\",\"dep\":\"Support\"},\n"}, {"char_start": 1622, "char_end": 1718, "chars": "    {\"id\":\"njahn1d@oaic.gov.au\",\"title\":\"Nicolina Jahn\",\"color\":\"#abe93d\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1706, "char_end": 1823, "chars": "    {\"id\":\"kmearing1e@mediafire.com\",\"title\":\"Karolina Mearing\",\"color\":\"#8216e3\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1806, "char_end": 1907, "chars": "    {\"id\":\"gjoinson1f@theatlantic.com\",\"title\":\"Gayle Joinson\",\"color\":\"#b49072\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1888, "char_end": 1999, "chars": "    {\"id\":\"lokeaveny1g@bbb.org\",\"title\":\"Llewellyn O'Keaveny\",\"color\":\"#8f29d1\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1987, "char_end": 2089, "chars": "    {\"id\":\"cedwardson1h@gizmodo.com\",\"title\":\"Carilyn Edwardson\",\"color\":\"#9a666d\",\"dep\":\"Services\"},\n"}, {"char_start": 2072, "char_end": 2174, "chars": "    {\"id\":\"cblezard1i@flavors.me\",\"title\":\"Carmelina Blezard\",\"color\":\"#99da77\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2160, "char_end": 2246, "chars": "    {\"id\":\"lduke1j@bbb.org\",\"title\":\"Lyell Duke\",\"color\":\"#1fc680\",\"dep\":\"Services\"},\n"}, {"char_start": 2238, "char_end": 2327, "chars": "    {\"id\":\"jride1k@rambler.ru\",\"title\":\"Joann Ride\",\"color\":\"#b120e9\",\"dep\":\"Training\"},\n"}, {"char_start": 2316, "char_end": 2407, "chars": "    {\"id\":\"mruddell1l@xing.com\",\"title\":\"Marvin Ruddell\",\"color\":\"#8610c2\",\"dep\":\"Legal\"},\n"}, {"char_start": 2395, "char_end": 2482, "chars": "    {\"id\":\"hlafay1m@nhs.uk\",\"title\":\"Haily Lafay\",\"color\":\"#237a4e\",\"dep\":\"Training\"},\n"}, {"char_start": 2474, "char_end": 2561, "chars": "    {\"id\":\"kortega1n@ihg.com\",\"title\":\"Kania Ortega\",\"color\":\"#98af7a\",\"dep\":\"Legal\"},\n"}, {"char_start": 2551, "char_end": 2662, "chars": "    {\"id\":\"ppellamont1o@wufoo.com\",\"title\":\"Phedra Pellamont\",\"color\":\"#09ba4d\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2647, "char_end": 2743, "chars": "    {\"id\":\"sprantoni1p@webmd.com\",\"title\":\"Sullivan Prantoni\",\"color\":\"#179d7c\",\"dep\":\"Legal\"},\n"}, {"char_start": 2729, "char_end": 2841, "chars": "    {\"id\":\"vmc1q@dailymotion.com\",\"title\":\"Vivyanne Mc Andrew\",\"color\":\"#2da3ce\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2827, "char_end": 2927, "chars": "    {\"id\":\"lanfusso1r@wordpress.com\",\"title\":\"Lizette Anfusso\",\"color\":\"#6f2d96\",\"dep\":\"Training\"},\n"}, {"char_start": 2910, "char_end": 3010, "chars": "    {\"id\":\"aspeight1s@hubpages.com\",\"title\":\"Ashlen Speight\",\"color\":\"#f3d3c8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2994, "char_end": 3091, "chars": "    {\"id\":\"osouthcomb1t@epa.gov\",\"title\":\"Osbert Southcomb\",\"color\":\"#7a214c\",\"dep\":\"Services\"},\n"}, {"char_start": 3078, "char_end": 3176, "chars": "    {\"id\":\"gbriat1u@noaa.gov\",\"title\":\"Gibb Briat\",\"color\":\"#f34eb2\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3166, "char_end": 3262, "chars": "    {\"id\":\"rbishell1v@alexa.com\",\"title\":\"Randie Bishell\",\"color\":\"#c70857\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3249, "char_end": 3342, "chars": "    {\"id\":\"wroache1w@twitpic.com\",\"title\":\"Whitney Roache\",\"color\":\"#ae98a0\",\"dep\":\"Legal\"},\n"}, {"char_start": 3328, "char_end": 3417, "chars": "    {\"id\":\"eenefer1x@sun.com\",\"title\":\"Emmey Enefer\",\"color\":\"#e910f1\",\"dep\":\"Support\"},\n"}, {"char_start": 3407, "char_end": 3508, "chars": "    {\"id\":\"mlaneham1y@craigslist.org\",\"title\":\"Madelle Laneham\",\"color\":\"#564214\",\"dep\":\"Services\"},\n"}, {"char_start": 3490, "char_end": 3596, "chars": "    {\"id\":\"lkenney1z@biglobe.ne.jp\",\"title\":\"Lin Kenney\",\"color\":\"#940e7d\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3580, "char_end": 3676, "chars": "    {\"id\":\"oosichev20@bizjournals.com\",\"title\":\"Owen Osichev\",\"color\":\"#007169\",\"dep\":\"Sales\"},\n"}, {"char_start": 3657, "char_end": 3761, "chars": "    {\"id\":\"vle21@unblog.fr\",\"title\":\"Vanessa Le Cornu\",\"color\":\"#daa97a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3745, "char_end": 3850, "chars": "    {\"id\":\"toakman22@mashable.com\",\"title\":\"Terry Oakman\",\"color\":\"#ca5b18\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3835, "char_end": 3937, "chars": "    {\"id\":\"apeckitt23@bbb.org\",\"title\":\"Amory Peckitt\",\"color\":\"#68489f\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3926, "char_end": 4032, "chars": "    {\"id\":\"bcrysell24@google.com.hk\",\"title\":\"Britni Crysell\",\"color\":\"#eded98\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 4015, "char_end": 4127, "chars": "    {\"id\":\"fwortley25@toplist.cz\",\"title\":\"Frederique Wortley\",\"color\":\"#b18e6a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4113, "char_end": 4222, "chars": "    {\"id\":\"caleksich26@hugedomains.com\",\"title\":\"Clari Aleksich\",\"color\":\"#fca197\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 4202, "char_end": 4299, "chars": "    {\"id\":\"mbreslau27@hatena.ne.jp\",\"title\":\"Moria Breslau\",\"color\":\"#9fd43d\",\"dep\":\"Marketing\"},"}], "added": [{"char_start": 0, "char_end": 97, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Eliot Gwillym\",\"color\":\"#bfa5e2\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 97, "char_end": 177, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Axel Snoxall\",\"color\":\"#5a2d19\",\"dep\":\"Training\"},\n"}, {"char_start": 177, "char_end": 258, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Peder Orteaux\",\"color\":\"#939251\",\"dep\":\"Training\"},\n"}, {"char_start": 258, "char_end": 347, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Fulton Swin\",\"color\":\"#dabad3\",\"dep\":\"Product Management\"},\n"}, {"char_start": 347, "char_end": 429, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Olin Fomichyov\",\"color\":\"#f78c7f\",\"dep\":\"Services\"},\n"}, {"char_start": 429, "char_end": 522, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Maynord Tanti\",\"color\":\"#0f5172\",\"dep\":\"Business Development\"},\n"}, {"char_start": 522, "char_end": 602, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Andra Monroe\",\"color\":\"#59fac8\",\"dep\":\"Services\"},\n"}, {"char_start": 602, "char_end": 697, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Leland Knuckles\",\"color\":\"#ef9c92\",\"dep\":\"Business Development\"},\n"}, {"char_start": 697, "char_end": 779, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Marjie Cammack\",\"color\":\"#0304ee\",\"dep\":\"Training\"},\n"}, {"char_start": 779, "char_end": 870, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gay Kay\",\"color\":\"#88e0cb\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 870, "char_end": 949, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Afton Arcase\",\"color\":\"#6834c7\",\"dep\":\"Support\"},\n"}, {"char_start": 949, "char_end": 1027, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Garvy Wattins\",\"color\":\"#82bbb4\",\"dep\":\"Sales\"},\n"}, {"char_start": 1027, "char_end": 1105, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ilka Strode\",\"color\":\"#ffbb2b\",\"dep\":\"Support\"},\n"}, {"char_start": 1105, "char_end": 1188, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Perceval Pleasants\",\"color\":\"#7b5d93\",\"dep\":\"Sales\"},\n"}, {"char_start": 1188, "char_end": 1275, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Randi Brandolini\",\"color\":\"#28066b\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1275, "char_end": 1375, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hartwell Yoakley\",\"color\":\"#8c98e4\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1375, "char_end": 1456, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Albertine Shuker\",\"color\":\"#c1c325\",\"dep\":\"Legal\"},\n"}, {"char_start": 1456, "char_end": 1539, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Claudio Mallatratt\",\"color\":\"#a0ca73\",\"dep\":\"Sales\"},\n"}, {"char_start": 1539, "char_end": 1622, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Roobbie Ferreras\",\"color\":\"#f7cc59\",\"dep\":\"Support\"},\n"}, {"char_start": 1622, "char_end": 1706, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nicolina Jahn\",\"color\":\"#abe93d\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1706, "char_end": 1806, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Karolina Mearing\",\"color\":\"#8216e3\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1806, "char_end": 1888, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gayle Joinson\",\"color\":\"#b49072\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1888, "char_end": 1987, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Llewellyn O'Keaveny\",\"color\":\"#8f29d1\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1987, "char_end": 2072, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Carilyn Edwardson\",\"color\":\"#9a666d\",\"dep\":\"Services\"},\n"}, {"char_start": 2072, "char_end": 2160, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Carmelina Blezard\",\"color\":\"#99da77\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2160, "char_end": 2238, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lyell Duke\",\"color\":\"#1fc680\",\"dep\":\"Services\"},\n"}, {"char_start": 2238, "char_end": 2316, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Joann Ride\",\"color\":\"#b120e9\",\"dep\":\"Training\"},\n"}, {"char_start": 2316, "char_end": 2395, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Marvin Ruddell\",\"color\":\"#8610c2\",\"dep\":\"Legal\"},\n"}, {"char_start": 2395, "char_end": 2474, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Haily Lafay\",\"color\":\"#237a4e\",\"dep\":\"Training\"},\n"}, {"char_start": 2474, "char_end": 2551, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kania Ortega\",\"color\":\"#98af7a\",\"dep\":\"Legal\"},\n"}, {"char_start": 2551, "char_end": 2647, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Phedra Pellamont\",\"color\":\"#09ba4d\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2647, "char_end": 2729, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sullivan Prantoni\",\"color\":\"#179d7c\",\"dep\":\"Legal\"},\n"}, {"char_start": 2729, "char_end": 2827, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Vivyanne Mc Andrew\",\"color\":\"#2da3ce\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2827, "char_end": 2910, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lizette Anfusso\",\"color\":\"#6f2d96\",\"dep\":\"Training\"},\n"}, {"char_start": 2910, "char_end": 2994, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashlen Speight\",\"color\":\"#f3d3c8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2994, "char_end": 3078, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Osbert Southcomb\",\"color\":\"#7a214c\",\"dep\":\"Services\"},\n"}, {"char_start": 3078, "char_end": 3166, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gibb Briat\",\"color\":\"#f34eb2\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3166, "char_end": 3249, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Randie Bishell\",\"color\":\"#c70857\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3249, "char_end": 3328, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Whitney Roache\",\"color\":\"#ae98a0\",\"dep\":\"Legal\"},\n"}, {"char_start": 3328, "char_end": 3407, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Emmey Enefer\",\"color\":\"#e910f1\",\"dep\":\"Support\"},\n"}, {"char_start": 3407, "char_end": 3490, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Madelle Laneham\",\"color\":\"#564214\",\"dep\":\"Services\"},\n"}, {"char_start": 3490, "char_end": 3580, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lin Kenney\",\"color\":\"#940e7d\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3580, "char_end": 3657, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Owen Osichev\",\"color\":\"#007169\",\"dep\":\"Sales\"},\n"}, {"char_start": 3657, "char_end": 3745, "chars": "    {\"id\":\"<EMAIL>\":\"Vanessa Le Cornu\",\"color\":\"#daa97a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3745, "char_end": 3835, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Terry Oakman\",\"color\":\"#ca5b18\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3835, "char_end": 3926, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Amory Peckitt\",\"color\":\"#68489f\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3926, "char_end": 4015, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Britni Crysell\",\"color\":\"#eded98\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 4015, "char_end": 4113, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Frederique Wortley\",\"color\":\"#b18e6a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4113, "char_end": 4202, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Clari Aleksich\",\"color\":\"#fca197\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 4202, "char_end": 4283, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Moria Breslau\",\"color\":\"#9fd43d\",\"dep\":\"Marketing\"},"}]}}
{"func_name": 13347, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"ymatissoff28@homestead.com\",\"title\":\"Yehudit Matissoff\",\"color\":\"#ddd327\",\"dep\":\"Support\"},\n    {\"id\":\"sfraney29@paginegialle.it\",\"title\":\"Staci Franey\",\"color\":\"#2177e4\",\"dep\":\"Legal\"},\n    {\"id\":\"rbilam2a@blogspot.com\",\"title\":\"Rivy Bilam\",\"color\":\"#3752ed\",\"dep\":\"Engineering\"},\n    {\"id\":\"glewinton2b@bluehost.com\",\"title\":\"Garald Lewinton\",\"color\":\"#083a77\",\"dep\":\"Support\"},\n    {\"id\":\"nreolfi2c@globo.com\",\"title\":\"Ninette Reolfi\",\"color\":\"#ea7bf3\",\"dep\":\"Human Resources\"},\n    {\"id\":\"cgoold2d@tumblr.com\",\"title\":\"Cynthie Goold\",\"color\":\"#221810\",\"dep\":\"Product Management\"},\n    {\"id\":\"gbotham2e@sphinn.com\",\"title\":\"Georas Botham\",\"color\":\"#af5c26\",\"dep\":\"Legal\"},\n    {\"id\":\"mfarrey2f@hc360.com\",\"title\":\"Maison Farrey\",\"color\":\"#1ec293\",\"dep\":\"Sales\"},\n    {\"id\":\"bfilippazzo2g@1688.com\",\"title\":\"Beale Filippazzo\",\"color\":\"#d58e85\",\"dep\":\"Sales\"},\n    {\"id\":\"kballeine2h@apache.org\",\"title\":\"Kathe Balleine\",\"color\":\"#9c2b4f\",\"dep\":\"Human Resources\"},\n    {\"id\":\"zbromilow2i@timesonline.co.uk\",\"title\":\"Zachary Bromilow\",\"color\":\"#39fa64\",\"dep\":\"Human Resources\"},\n    {\"id\":\"dastupenas2j@simplemachines.org\",\"title\":\"Drake Astupenas\",\"color\":\"#8884a2\",\"dep\":\"Legal\"},\n    {\"id\":\"cbestiman2k@unc.edu\",\"title\":\"Clem Bestiman\",\"color\":\"#c8861e\",\"dep\":\"Support\"},\n    {\"id\":\"hcleaver2l@w3.org\",\"title\":\"Heidie Cleaver\",\"color\":\"#8ea125\",\"dep\":\"Training\"},\n    {\"id\":\"ecount2m@guardian.co.uk\",\"title\":\"Eden Count\",\"color\":\"#224b20\",\"dep\":\"Engineering\"},\n    {\"id\":\"ahassett2n@senate.gov\",\"title\":\"Alyda Hassett\",\"color\":\"#becb02\",\"dep\":\"Legal\"},\n    {\"id\":\"nmatuszyk2o@parallels.com\",\"title\":\"Norine Matuszyk\",\"color\":\"#132ad3\",\"dep\":\"Legal\"},\n    {\"id\":\"zgisby2p@opera.com\",\"title\":\"Zorah Gisby\",\"color\":\"#4e08ac\",\"dep\":\"Human Resources\"},\n    {\"id\":\"vtantum2q@java.com\",\"title\":\"Violetta Tantum\",\"color\":\"#335ba4\",\"dep\":\"Business Development\"},\n    {\"id\":\"hburth2r@geocities.com\",\"title\":\"Hilton Burth\",\"color\":\"#29b3d6\",\"dep\":\"Legal\"},\n    {\"id\":\"dhutchison2s@cafepress.com\",\"title\":\"Dorie Hutchison\",\"color\":\"#ef89a8\",\"dep\":\"Accounting\"},\n    {\"id\":\"bhaddacks2t@posterous.com\",\"title\":\"Biron Haddacks\",\"color\":\"#62e479\",\"dep\":\"Support\"},\n    {\"id\":\"pcapaldo2u@independent.co.uk\",\"title\":\"Padriac Capaldo\",\"color\":\"#fd5ade\",\"dep\":\"Services\"},\n    {\"id\":\"pbennetto2v@jalbum.net\",\"title\":\"Pietrek Bennetto\",\"color\":\"#7e0570\",\"dep\":\"Support\"},\n    {\"id\":\"hedgington2w@soup.io\",\"title\":\"Hilly Edgington\",\"color\":\"#ac26d4\",\"dep\":\"Support\"},\n    {\"id\":\"kpanchin2x@smh.com.au\",\"title\":\"Karena Panchin\",\"color\":\"#a0d23c\",\"dep\":\"Legal\"},\n    {\"id\":\"cclaworth2y@wordpress.com\",\"title\":\"Colas Claworth\",\"color\":\"#1a1e4f\",\"dep\":\"Sales\"},\n    {\"id\":\"sfuggle2z@delicious.com\",\"title\":\"Sonya Fuggle\",\"color\":\"#5a2776\",\"dep\":\"Engineering\"},\n    {\"id\":\"jstucke30@usnews.com\",\"title\":\"Jerrie Stucke\",\"color\":\"#9cf697\",\"dep\":\"Engineering\"},\n    {\"id\":\"krickeard31@ycombinator.com\",\"title\":\"Keelia Rickeard\",\"color\":\"#c0c2dd\",\"dep\":\"Support\"},\n    {\"id\":\"amathevet32@answers.com\",\"title\":\"Angelika Mathevet\",\"color\":\"#f782c4\",\"dep\":\"Training\"},\n    {\"id\":\"rbuscombe33@eventbrite.com\",\"title\":\"Randene Buscombe\",\"color\":\"#221f84\",\"dep\":\"Business Development\"},\n    {\"id\":\"cstudders34@berkeley.edu\",\"title\":\"Chastity Studders\",\"color\":\"#c6f189\",\"dep\":\"Training\"},\n    {\"id\":\"kbowen35@rediff.com\",\"title\":\"Karyn Bowen\",\"color\":\"#9b3227\",\"dep\":\"Legal\"},\n    {\"id\":\"jmacknight36@statcounter.com\",\"title\":\"Jere MacKnight\",\"color\":\"#f40261\",\"dep\":\"Sales\"},\n    {\"id\":\"awitz37@accuweather.com\",\"title\":\"Alford Witz\",\"color\":\"#787027\",\"dep\":\"Sales\"},\n    {\"id\":\"abrownfield38@google.nl\",\"title\":\"Alyosha Brownfield\",\"color\":\"#69cbce\",\"dep\":\"Accounting\"},\n    {\"id\":\"mcroot39@smh.com.au\",\"title\":\"Maddalena Croot\",\"color\":\"#e69878\",\"dep\":\"Accounting\"},\n    {\"id\":\"tcaldes3a@etsy.com\",\"title\":\"Tommi Caldes\",\"color\":\"#a4e84c\",\"dep\":\"Product Management\"},\n    {\"id\":\"lmaty3b@gnu.org\",\"title\":\"Lorens Maty\",\"color\":\"#8d15b0\",\"dep\":\"Sales\"},\n    {\"id\":\"rocooney3c@archive.org\",\"title\":\"Reamonn O'Cooney\",\"color\":\"#1c8057\",\"dep\":\"Product Management\"},\n    {\"id\":\"eadriano3d@biblegateway.com\",\"title\":\"Efren Adriano\",\"color\":\"#c1ec42\",\"dep\":\"Business Development\"},\n    {\"id\":\"tdiver3e@dropbox.com\",\"title\":\"Torrey Diver\",\"color\":\"#e55f1e\",\"dep\":\"Product Management\"},\n    {\"id\":\"wslocumb3f@ameblo.jp\",\"title\":\"Webster Slocumb\",\"color\":\"#087192\",\"dep\":\"Support\"},\n    {\"id\":\"pmerwede3g@sciencedaily.com\",\"title\":\"Pietrek Merwede\",\"color\":\"#724d98\",\"dep\":\"Business Development\"},\n    {\"id\":\"pjewsbury3h@ucoz.ru\",\"title\":\"Philippe Jewsbury\",\"color\":\"#f01bb4\",\"dep\":\"Business Development\"},\n    {\"id\":\"gpohl3i@github.io\",\"title\":\"Gary Pohl\",\"color\":\"#3026d1\",\"dep\":\"Research and Development\"},\n    {\"id\":\"ypearmain3j@alexa.com\",\"title\":\"Yolane Pearmain\",\"color\":\"#bc17cd\",\"dep\":\"Legal\"},\n    {\"id\":\"mbortolini3k@tinypic.com\",\"title\":\"Mommy Bortolini\",\"color\":\"#3bbf70\",\"dep\":\"Training\"},\n    {\"id\":\"smorcombe3l@gnu.org\",\"title\":\"Suzanne Morcombe\",\"color\":\"#7dc232\",\"dep\":\"Research and Development\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Yehudit Matissoff\",\"color\":\"#ddd327\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Staci Franey\",\"color\":\"#2177e4\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rivy Bilam\",\"color\":\"#3752ed\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Garald Lewinton\",\"color\":\"#083a77\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ninette Reolfi\",\"color\":\"#ea7bf3\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cynthie Goold\",\"color\":\"#221810\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Georas Botham\",\"color\":\"#af5c26\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Maison Farrey\",\"color\":\"#1ec293\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Beale Filippazzo\",\"color\":\"#d58e85\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kathe Balleine\",\"color\":\"#9c2b4f\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Zachary Bromilow\",\"color\":\"#39fa64\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Drake Astupenas\",\"color\":\"#8884a2\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Clem Bestiman\",\"color\":\"#c8861e\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Heidie Cleaver\",\"color\":\"#8ea125\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Eden Count\",\"color\":\"#224b20\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alyda Hassett\",\"color\":\"#becb02\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Norine Matuszyk\",\"color\":\"#132ad3\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Zorah Gisby\",\"color\":\"#4e08ac\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Violetta Tantum\",\"color\":\"#335ba4\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hilton Burth\",\"color\":\"#29b3d6\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dorie Hutchison\",\"color\":\"#ef89a8\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Biron Haddacks\",\"color\":\"#62e479\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Padriac Capaldo\",\"color\":\"#fd5ade\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Pietrek Bennetto\",\"color\":\"#7e0570\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hilly Edgington\",\"color\":\"#ac26d4\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Karena Panchin\",\"color\":\"#a0d23c\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Colas Claworth\",\"color\":\"#1a1e4f\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sonya Fuggle\",\"color\":\"#5a2776\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jerrie Stucke\",\"color\":\"#9cf697\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Keelia Rickeard\",\"color\":\"#c0c2dd\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Angelika Mathevet\",\"color\":\"#f782c4\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Randene Buscombe\",\"color\":\"#221f84\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Chastity Studders\",\"color\":\"#c6f189\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Karyn Bowen\",\"color\":\"#9b3227\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jere MacKnight\",\"color\":\"#f40261\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alford Witz\",\"color\":\"#787027\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alyosha Brownfield\",\"color\":\"#69cbce\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Maddalena Croot\",\"color\":\"#e69878\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Tommi Caldes\",\"color\":\"#a4e84c\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lorens Maty\",\"color\":\"#8d15b0\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Reamonn O'Cooney\",\"color\":\"#1c8057\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Efren Adriano\",\"color\":\"#c1ec42\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Torrey Diver\",\"color\":\"#e55f1e\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Webster Slocumb\",\"color\":\"#087192\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Pietrek Merwede\",\"color\":\"#724d98\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Philippe Jewsbury\",\"color\":\"#f01bb4\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gary Pohl\",\"color\":\"#3026d1\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Yolane Pearmain\",\"color\":\"#bc17cd\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mommy Bortolini\",\"color\":\"#3bbf70\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Suzanne Morcombe\",\"color\":\"#7dc232\",\"dep\":\"Research and Development\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 103, "line": "    {\"id\":\"ymatissoff28@homestead.com\",\"title\":\"Yehudit Matissoff\",\"color\":\"#ddd327\",\"dep\":\"Support\"},\n"}, {"line_no": 3, "char_start": 84, "char_end": 179, "line": "    {\"id\":\"sfraney29@paginegialle.it\",\"title\":\"Staci Franey\",\"color\":\"#2177e4\",\"dep\":\"Legal\"},\n"}, {"line_no": 5, "char_start": 161, "char_end": 256, "line": "    {\"id\":\"rbilam2a@blogspot.com\",\"title\":\"Rivy Bilam\",\"color\":\"#3752ed\",\"dep\":\"Engineering\"},\n"}, {"line_no": 7, "char_start": 242, "char_end": 341, "line": "    {\"id\":\"glewinton2b@bluehost.com\",\"title\":\"Garald Lewinton\",\"color\":\"#083a77\",\"dep\":\"Support\"},\n"}, {"line_no": 9, "char_start": 324, "char_end": 425, "line": "    {\"id\":\"nreolfi2c@globo.com\",\"title\":\"Ninette Reolfi\",\"color\":\"#ea7bf3\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 11, "char_start": 413, "char_end": 516, "line": "    {\"id\":\"cgoold2d@tumblr.com\",\"title\":\"Cynthie Goold\",\"color\":\"#221810\",\"dep\":\"Product Management\"},\n"}, {"line_no": 13, "char_start": 504, "char_end": 595, "line": "    {\"id\":\"gbotham2e@sphinn.com\",\"title\":\"Georas Botham\",\"color\":\"#af5c26\",\"dep\":\"Legal\"},\n"}, {"line_no": 15, "char_start": 582, "char_end": 672, "line": "    {\"id\":\"mfarrey2f@hc360.com\",\"title\":\"Maison Farrey\",\"color\":\"#1ec293\",\"dep\":\"Sales\"},\n"}, {"line_no": 17, "char_start": 660, "char_end": 756, "line": "    {\"id\":\"bfilippazzo2g@1688.com\",\"title\":\"Beale Filippazzo\",\"color\":\"#d58e85\",\"dep\":\"Sales\"},\n"}, {"line_no": 19, "char_start": 741, "char_end": 845, "line": "    {\"id\":\"kballeine2h@apache.org\",\"title\":\"Kathe Balleine\",\"color\":\"#9c2b4f\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 21, "char_start": 830, "char_end": 943, "line": "    {\"id\":\"zbromilow2i@timesonline.co.uk\",\"title\":\"Zachary Bromilow\",\"color\":\"#39fa64\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 23, "char_start": 921, "char_end": 1025, "line": "    {\"id\":\"dastupenas2j@simplemachines.org\",\"title\":\"Drake Astupenas\",\"color\":\"#8884a2\",\"dep\":\"Legal\"},\n"}, {"line_no": 25, "char_start": 1001, "char_end": 1093, "line": "    {\"id\":\"cbestiman2k@unc.edu\",\"title\":\"Clem Bestiman\",\"color\":\"#c8861e\",\"dep\":\"Support\"},\n"}, {"line_no": 27, "char_start": 1081, "char_end": 1173, "line": "    {\"id\":\"hcleaver2l@w3.org\",\"title\":\"Heidie Cleaver\",\"color\":\"#8ea125\",\"dep\":\"Training\"},\n"}, {"line_no": 29, "char_start": 1163, "char_end": 1260, "line": "    {\"id\":\"ecount2m@guardian.co.uk\",\"title\":\"Eden Count\",\"color\":\"#224b20\",\"dep\":\"Engineering\"},\n"}, {"line_no": 31, "char_start": 1244, "char_end": 1336, "line": "    {\"id\":\"ahassett2n@senate.gov\",\"title\":\"Alyda Hassett\",\"color\":\"#becb02\",\"dep\":\"Legal\"},\n"}, {"line_no": 33, "char_start": 1322, "char_end": 1420, "line": "    {\"id\":\"nmatuszyk2o@parallels.com\",\"title\":\"Norine Matuszyk\",\"color\":\"#132ad3\",\"dep\":\"Legal\"},\n"}, {"line_no": 35, "char_start": 1402, "char_end": 1499, "line": "    {\"id\":\"zgisby2p@opera.com\",\"title\":\"Zorah Gisby\",\"color\":\"#4e08ac\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 37, "char_start": 1488, "char_end": 1594, "line": "    {\"id\":\"vtantum2q@java.com\",\"title\":\"Violetta Tantum\",\"color\":\"#335ba4\",\"dep\":\"Business Development\"},\n"}, {"line_no": 39, "char_start": 1583, "char_end": 1675, "line": "    {\"id\":\"hburth2r@geocities.com\",\"title\":\"Hilton Burth\",\"color\":\"#29b3d6\",\"dep\":\"Legal\"},\n"}, {"line_no": 41, "char_start": 1660, "char_end": 1764, "line": "    {\"id\":\"dhutchison2s@cafepress.com\",\"title\":\"Dorie Hutchison\",\"color\":\"#ef89a8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 43, "char_start": 1745, "char_end": 1844, "line": "    {\"id\":\"bhaddacks2t@posterous.com\",\"title\":\"Biron Haddacks\",\"color\":\"#62e479\",\"dep\":\"Support\"},\n"}, {"line_no": 45, "char_start": 1826, "char_end": 1930, "line": "    {\"id\":\"pcapaldo2u@independent.co.uk\",\"title\":\"Padriac Capaldo\",\"color\":\"#fd5ade\",\"dep\":\"Services\"},\n"}, {"line_no": 47, "char_start": 1909, "char_end": 2007, "line": "    {\"id\":\"pbennetto2v@jalbum.net\",\"title\":\"Pietrek Bennetto\",\"color\":\"#7e0570\",\"dep\":\"Support\"},\n"}, {"line_no": 49, "char_start": 1992, "char_end": 2087, "line": "    {\"id\":\"hedgington2w@soup.io\",\"title\":\"Hilly Edgington\",\"color\":\"#ac26d4\",\"dep\":\"Support\"},\n"}, {"line_no": 51, "char_start": 2074, "char_end": 2167, "line": "    {\"id\":\"kpanchin2x@smh.com.au\",\"title\":\"Karena Panchin\",\"color\":\"#a0d23c\",\"dep\":\"Legal\"},\n"}, {"line_no": 53, "char_start": 2153, "char_end": 2250, "line": "    {\"id\":\"cclaworth2y@wordpress.com\",\"title\":\"Colas Claworth\",\"color\":\"#1a1e4f\",\"dep\":\"Sales\"},\n"}, {"line_no": 55, "char_start": 2232, "char_end": 2331, "line": "    {\"id\":\"sfuggle2z@delicious.com\",\"title\":\"Sonya Fuggle\",\"color\":\"#5a2776\",\"dep\":\"Engineering\"},\n"}, {"line_no": 57, "char_start": 2315, "char_end": 2412, "line": "    {\"id\":\"jstucke30@usnews.com\",\"title\":\"Jerrie Stucke\",\"color\":\"#9cf697\",\"dep\":\"Engineering\"},\n"}, {"line_no": 59, "char_start": 2399, "char_end": 2501, "line": "    {\"id\":\"krickeard31@ycombinator.com\",\"title\":\"Keelia Rickeard\",\"color\":\"#c0c2dd\",\"dep\":\"Support\"},\n"}, {"line_no": 61, "char_start": 2481, "char_end": 2582, "line": "    {\"id\":\"amathevet32@answers.com\",\"title\":\"Angelika Mathevet\",\"color\":\"#f782c4\",\"dep\":\"Training\"},\n"}, {"line_no": 63, "char_start": 2566, "char_end": 2681, "line": "    {\"id\":\"rbuscombe33@eventbrite.com\",\"title\":\"Randene Buscombe\",\"color\":\"#221f84\",\"dep\":\"Business Development\"},\n"}, {"line_no": 65, "char_start": 2662, "char_end": 2764, "line": "    {\"id\":\"cstudders34@berkeley.edu\",\"title\":\"Chastity Studders\",\"color\":\"#c6f189\",\"dep\":\"Training\"},\n"}, {"line_no": 67, "char_start": 2747, "char_end": 2835, "line": "    {\"id\":\"kbowen35@rediff.com\",\"title\":\"Karyn Bowen\",\"color\":\"#9b3227\",\"dep\":\"Legal\"},\n"}, {"line_no": 69, "char_start": 2823, "char_end": 2923, "line": "    {\"id\":\"jmacknight36@statcounter.com\",\"title\":\"Jere MacKnight\",\"color\":\"#f40261\",\"dep\":\"Sales\"},\n"}, {"line_no": 71, "char_start": 2902, "char_end": 2994, "line": "    {\"id\":\"awitz37@accuweather.com\",\"title\":\"Alford Witz\",\"color\":\"#787027\",\"dep\":\"Sales\"},\n"}, {"line_no": 73, "char_start": 2978, "char_end": 3082, "line": "    {\"id\":\"abrownfield38@google.nl\",\"title\":\"Alyosha Brownfield\",\"color\":\"#69cbce\",\"dep\":\"Accounting\"},\n"}, {"line_no": 75, "char_start": 3066, "char_end": 3163, "line": "    {\"id\":\"mcroot39@smh.com.au\",\"title\":\"Maddalena Croot\",\"color\":\"#e69878\",\"dep\":\"Accounting\"},\n"}, {"line_no": 77, "char_start": 3151, "char_end": 3252, "line": "    {\"id\":\"tcaldes3a@etsy.com\",\"title\":\"Tommi Caldes\",\"color\":\"#a4e84c\",\"dep\":\"Product Management\"},\n"}, {"line_no": 79, "char_start": 3241, "char_end": 3325, "line": "    {\"id\":\"lmaty3b@gnu.org\",\"title\":\"Lorens Maty\",\"color\":\"#8d15b0\",\"dep\":\"Sales\"},\n"}, {"line_no": 81, "char_start": 3317, "char_end": 3426, "line": "    {\"id\":\"rocooney3c@archive.org\",\"title\":\"Reamonn O'Cooney\",\"color\":\"#1c8057\",\"dep\":\"Product Management\"},\n"}, {"line_no": 83, "char_start": 3411, "char_end": 3524, "line": "    {\"id\":\"eadriano3d@biblegateway.com\",\"title\":\"Efren Adriano\",\"color\":\"#c1ec42\",\"dep\":\"Business Development\"},\n"}, {"line_no": 85, "char_start": 3504, "char_end": 3607, "line": "    {\"id\":\"tdiver3e@dropbox.com\",\"title\":\"Torrey Diver\",\"color\":\"#e55f1e\",\"dep\":\"Product Management\"},\n"}, {"line_no": 87, "char_start": 3594, "char_end": 3689, "line": "    {\"id\":\"wslocumb3f@ameblo.jp\",\"title\":\"Webster Slocumb\",\"color\":\"#087192\",\"dep\":\"Support\"},\n"}, {"line_no": 89, "char_start": 3676, "char_end": 3791, "line": "    {\"id\":\"pmerwede3g@sciencedaily.com\",\"title\":\"Pietrek Merwede\",\"color\":\"#724d98\",\"dep\":\"Business Development\"},\n"}, {"line_no": 91, "char_start": 3771, "char_end": 3880, "line": "    {\"id\":\"pjewsbury3h@ucoz.ru\",\"title\":\"Philippe Jewsbury\",\"color\":\"#f01bb4\",\"dep\":\"Business Development\"},\n"}, {"line_no": 93, "char_start": 3868, "char_end": 3971, "line": "    {\"id\":\"gpohl3i@github.io\",\"title\":\"Gary Pohl\",\"color\":\"#3026d1\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 95, "char_start": 3961, "char_end": 4055, "line": "    {\"id\":\"ypearmain3j@alexa.com\",\"title\":\"Yolane Pearmain\",\"color\":\"#bc17cd\",\"dep\":\"Legal\"},\n"}, {"line_no": 97, "char_start": 4041, "char_end": 4141, "line": "    {\"id\":\"mbortolini3k@tinypic.com\",\"title\":\"Mommy Bortolini\",\"color\":\"#3bbf70\",\"dep\":\"Training\"},\n"}, {"line_no": 99, "char_start": 4124, "char_end": 4235, "line": "    {\"id\":\"smorcombe3l@gnu.org\",\"title\":\"Suzanne Morcombe\",\"color\":\"#7dc232\",\"dep\":\"Research and Development\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 84, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Yehudit Matissoff\",\"color\":\"#ddd327\",\"dep\":\"Support\"},\n"}, {"line_no": 4, "char_start": 84, "char_end": 161, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Staci Franey\",\"color\":\"#2177e4\",\"dep\":\"Legal\"},\n"}, {"line_no": 6, "char_start": 161, "char_end": 242, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rivy Bilam\",\"color\":\"#3752ed\",\"dep\":\"Engineering\"},\n"}, {"line_no": 8, "char_start": 242, "char_end": 324, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Garald Lewinton\",\"color\":\"#083a77\",\"dep\":\"Support\"},\n"}, {"line_no": 10, "char_start": 324, "char_end": 413, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ninette Reolfi\",\"color\":\"#ea7bf3\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 12, "char_start": 413, "char_end": 504, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cynthie Goold\",\"color\":\"#221810\",\"dep\":\"Product Management\"},\n"}, {"line_no": 14, "char_start": 504, "char_end": 582, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Georas Botham\",\"color\":\"#af5c26\",\"dep\":\"Legal\"},\n"}, {"line_no": 16, "char_start": 582, "char_end": 660, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Maison Farrey\",\"color\":\"#1ec293\",\"dep\":\"Sales\"},\n"}, {"line_no": 18, "char_start": 660, "char_end": 741, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Beale Filippazzo\",\"color\":\"#d58e85\",\"dep\":\"Sales\"},\n"}, {"line_no": 20, "char_start": 741, "char_end": 830, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kathe Balleine\",\"color\":\"#9c2b4f\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 22, "char_start": 830, "char_end": 921, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Zachary Bromilow\",\"color\":\"#39fa64\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 24, "char_start": 921, "char_end": 1001, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Drake Astupenas\",\"color\":\"#8884a2\",\"dep\":\"Legal\"},\n"}, {"line_no": 26, "char_start": 1001, "char_end": 1081, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Clem Bestiman\",\"color\":\"#c8861e\",\"dep\":\"Support\"},\n"}, {"line_no": 28, "char_start": 1081, "char_end": 1163, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Heidie Cleaver\",\"color\":\"#8ea125\",\"dep\":\"Training\"},\n"}, {"line_no": 30, "char_start": 1163, "char_end": 1244, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Eden Count\",\"color\":\"#224b20\",\"dep\":\"Engineering\"},\n"}, {"line_no": 32, "char_start": 1244, "char_end": 1322, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alyda Hassett\",\"color\":\"#becb02\",\"dep\":\"Legal\"},\n"}, {"line_no": 34, "char_start": 1322, "char_end": 1402, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Norine Matuszyk\",\"color\":\"#132ad3\",\"dep\":\"Legal\"},\n"}, {"line_no": 36, "char_start": 1402, "char_end": 1488, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Zorah Gisby\",\"color\":\"#4e08ac\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 38, "char_start": 1488, "char_end": 1583, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Violetta Tantum\",\"color\":\"#335ba4\",\"dep\":\"Business Development\"},\n"}, {"line_no": 40, "char_start": 1583, "char_end": 1660, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hilton Burth\",\"color\":\"#29b3d6\",\"dep\":\"Legal\"},\n"}, {"line_no": 42, "char_start": 1660, "char_end": 1745, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorie Hutchison\",\"color\":\"#ef89a8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 44, "char_start": 1745, "char_end": 1826, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Biron Haddacks\",\"color\":\"#62e479\",\"dep\":\"Support\"},\n"}, {"line_no": 46, "char_start": 1826, "char_end": 1909, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Padriac Capaldo\",\"color\":\"#fd5ade\",\"dep\":\"Services\"},\n"}, {"line_no": 48, "char_start": 1909, "char_end": 1992, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Pietrek Bennetto\",\"color\":\"#7e0570\",\"dep\":\"Support\"},\n"}, {"line_no": 50, "char_start": 1992, "char_end": 2074, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hilly Edgington\",\"color\":\"#ac26d4\",\"dep\":\"Support\"},\n"}, {"line_no": 52, "char_start": 2074, "char_end": 2153, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Karena Panchin\",\"color\":\"#a0d23c\",\"dep\":\"Legal\"},\n"}, {"line_no": 54, "char_start": 2153, "char_end": 2232, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Colas Claworth\",\"color\":\"#1a1e4f\",\"dep\":\"Sales\"},\n"}, {"line_no": 56, "char_start": 2232, "char_end": 2315, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sonya Fuggle\",\"color\":\"#5a2776\",\"dep\":\"Engineering\"},\n"}, {"line_no": 58, "char_start": 2315, "char_end": 2399, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jerrie Stucke\",\"color\":\"#9cf697\",\"dep\":\"Engineering\"},\n"}, {"line_no": 60, "char_start": 2399, "char_end": 2481, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Keelia Rickeard\",\"color\":\"#c0c2dd\",\"dep\":\"Support\"},\n"}, {"line_no": 62, "char_start": 2481, "char_end": 2566, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Angelika Mathevet\",\"color\":\"#f782c4\",\"dep\":\"Training\"},\n"}, {"line_no": 64, "char_start": 2566, "char_end": 2662, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Randene Buscombe\",\"color\":\"#221f84\",\"dep\":\"Business Development\"},\n"}, {"line_no": 66, "char_start": 2662, "char_end": 2747, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Chastity Studders\",\"color\":\"#c6f189\",\"dep\":\"Training\"},\n"}, {"line_no": 68, "char_start": 2747, "char_end": 2823, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Karyn Bowen\",\"color\":\"#9b3227\",\"dep\":\"Legal\"},\n"}, {"line_no": 70, "char_start": 2823, "char_end": 2902, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jere MacKnight\",\"color\":\"#f40261\",\"dep\":\"Sales\"},\n"}, {"line_no": 72, "char_start": 2902, "char_end": 2978, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alford Witz\",\"color\":\"#787027\",\"dep\":\"Sales\"},\n"}, {"line_no": 74, "char_start": 2978, "char_end": 3066, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alyosha Brownfield\",\"color\":\"#69cbce\",\"dep\":\"Accounting\"},\n"}, {"line_no": 76, "char_start": 3066, "char_end": 3151, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Maddalena Croot\",\"color\":\"#e69878\",\"dep\":\"Accounting\"},\n"}, {"line_no": 78, "char_start": 3151, "char_end": 3241, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Tommi Caldes\",\"color\":\"#a4e84c\",\"dep\":\"Product Management\"},\n"}, {"line_no": 80, "char_start": 3241, "char_end": 3317, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lorens Maty\",\"color\":\"#8d15b0\",\"dep\":\"Sales\"},\n"}, {"line_no": 82, "char_start": 3317, "char_end": 3411, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Reamonn O'Cooney\",\"color\":\"#1c8057\",\"dep\":\"Product Management\"},\n"}, {"line_no": 84, "char_start": 3411, "char_end": 3504, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Efren Adriano\",\"color\":\"#c1ec42\",\"dep\":\"Business Development\"},\n"}, {"line_no": 86, "char_start": 3504, "char_end": 3594, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Torrey Diver\",\"color\":\"#e55f1e\",\"dep\":\"Product Management\"},\n"}, {"line_no": 88, "char_start": 3594, "char_end": 3676, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Webster Slocumb\",\"color\":\"#087192\",\"dep\":\"Support\"},\n"}, {"line_no": 90, "char_start": 3676, "char_end": 3771, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Pietrek Merwede\",\"color\":\"#724d98\",\"dep\":\"Business Development\"},\n"}, {"line_no": 92, "char_start": 3771, "char_end": 3868, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Philippe Jewsbury\",\"color\":\"#f01bb4\",\"dep\":\"Business Development\"},\n"}, {"line_no": 94, "char_start": 3868, "char_end": 3961, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gary Pohl\",\"color\":\"#3026d1\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 96, "char_start": 3961, "char_end": 4041, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Yolane Pearmain\",\"color\":\"#bc17cd\",\"dep\":\"Legal\"},\n"}, {"line_no": 98, "char_start": 4041, "char_end": 4124, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mommy Bortolini\",\"color\":\"#3bbf70\",\"dep\":\"Training\"},\n"}, {"line_no": 100, "char_start": 4124, "char_end": 4223, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Suzanne Morcombe\",\"color\":\"#7dc232\",\"dep\":\"Research and Development\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 103, "chars": "    {\"id\":\"ymatissoff28@homestead.com\",\"title\":\"Yehudit Matissoff\",\"color\":\"#ddd327\",\"dep\":\"Support\"},\n"}, {"char_start": 84, "char_end": 179, "chars": "    {\"id\":\"sfraney29@paginegialle.it\",\"title\":\"Staci Franey\",\"color\":\"#2177e4\",\"dep\":\"Legal\"},\n"}, {"char_start": 161, "char_end": 256, "chars": "    {\"id\":\"rbilam2a@blogspot.com\",\"title\":\"Rivy Bilam\",\"color\":\"#3752ed\",\"dep\":\"Engineering\"},\n"}, {"char_start": 242, "char_end": 341, "chars": "    {\"id\":\"glewinton2b@bluehost.com\",\"title\":\"Garald Lewinton\",\"color\":\"#083a77\",\"dep\":\"Support\"},\n"}, {"char_start": 324, "char_end": 425, "chars": "    {\"id\":\"nreolfi2c@globo.com\",\"title\":\"Ninette Reolfi\",\"color\":\"#ea7bf3\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 413, "char_end": 516, "chars": "    {\"id\":\"cgoold2d@tumblr.com\",\"title\":\"Cynthie Goold\",\"color\":\"#221810\",\"dep\":\"Product Management\"},\n"}, {"char_start": 504, "char_end": 595, "chars": "    {\"id\":\"gbotham2e@sphinn.com\",\"title\":\"Georas Botham\",\"color\":\"#af5c26\",\"dep\":\"Legal\"},\n"}, {"char_start": 582, "char_end": 672, "chars": "    {\"id\":\"mfarrey2f@hc360.com\",\"title\":\"Maison Farrey\",\"color\":\"#1ec293\",\"dep\":\"Sales\"},\n"}, {"char_start": 660, "char_end": 756, "chars": "    {\"id\":\"bfilippazzo2g@1688.com\",\"title\":\"Beale Filippazzo\",\"color\":\"#d58e85\",\"dep\":\"Sales\"},\n"}, {"char_start": 741, "char_end": 845, "chars": "    {\"id\":\"kballeine2h@apache.org\",\"title\":\"Kathe Balleine\",\"color\":\"#9c2b4f\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 830, "char_end": 943, "chars": "    {\"id\":\"zbromilow2i@timesonline.co.uk\",\"title\":\"Zachary Bromilow\",\"color\":\"#39fa64\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 921, "char_end": 1025, "chars": "    {\"id\":\"dastupenas2j@simplemachines.org\",\"title\":\"Drake Astupenas\",\"color\":\"#8884a2\",\"dep\":\"Legal\"},\n"}, {"char_start": 1001, "char_end": 1093, "chars": "    {\"id\":\"cbestiman2k@unc.edu\",\"title\":\"Clem Bestiman\",\"color\":\"#c8861e\",\"dep\":\"Support\"},\n"}, {"char_start": 1081, "char_end": 1173, "chars": "    {\"id\":\"hcleaver2l@w3.org\",\"title\":\"Heidie Cleaver\",\"color\":\"#8ea125\",\"dep\":\"Training\"},\n"}, {"char_start": 1163, "char_end": 1260, "chars": "    {\"id\":\"ecount2m@guardian.co.uk\",\"title\":\"Eden Count\",\"color\":\"#224b20\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1244, "char_end": 1336, "chars": "    {\"id\":\"ahassett2n@senate.gov\",\"title\":\"Alyda Hassett\",\"color\":\"#becb02\",\"dep\":\"Legal\"},\n"}, {"char_start": 1322, "char_end": 1420, "chars": "    {\"id\":\"nmatuszyk2o@parallels.com\",\"title\":\"Norine Matuszyk\",\"color\":\"#132ad3\",\"dep\":\"Legal\"},\n"}, {"char_start": 1402, "char_end": 1499, "chars": "    {\"id\":\"zgisby2p@opera.com\",\"title\":\"Zorah Gisby\",\"color\":\"#4e08ac\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1488, "char_end": 1594, "chars": "    {\"id\":\"vtantum2q@java.com\",\"title\":\"Violetta Tantum\",\"color\":\"#335ba4\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1583, "char_end": 1675, "chars": "    {\"id\":\"hburth2r@geocities.com\",\"title\":\"Hilton Burth\",\"color\":\"#29b3d6\",\"dep\":\"Legal\"},\n"}, {"char_start": 1660, "char_end": 1764, "chars": "    {\"id\":\"dhutchison2s@cafepress.com\",\"title\":\"Dorie Hutchison\",\"color\":\"#ef89a8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1745, "char_end": 1844, "chars": "    {\"id\":\"bhaddacks2t@posterous.com\",\"title\":\"Biron Haddacks\",\"color\":\"#62e479\",\"dep\":\"Support\"},\n"}, {"char_start": 1826, "char_end": 1930, "chars": "    {\"id\":\"pcapaldo2u@independent.co.uk\",\"title\":\"Padriac Capaldo\",\"color\":\"#fd5ade\",\"dep\":\"Services\"},\n"}, {"char_start": 1909, "char_end": 2007, "chars": "    {\"id\":\"pbennetto2v@jalbum.net\",\"title\":\"Pietrek Bennetto\",\"color\":\"#7e0570\",\"dep\":\"Support\"},\n"}, {"char_start": 1992, "char_end": 2087, "chars": "    {\"id\":\"hedgington2w@soup.io\",\"title\":\"Hilly Edgington\",\"color\":\"#ac26d4\",\"dep\":\"Support\"},\n"}, {"char_start": 2074, "char_end": 2167, "chars": "    {\"id\":\"kpanchin2x@smh.com.au\",\"title\":\"Karena Panchin\",\"color\":\"#a0d23c\",\"dep\":\"Legal\"},\n"}, {"char_start": 2153, "char_end": 2250, "chars": "    {\"id\":\"cclaworth2y@wordpress.com\",\"title\":\"Colas Claworth\",\"color\":\"#1a1e4f\",\"dep\":\"Sales\"},\n"}, {"char_start": 2232, "char_end": 2331, "chars": "    {\"id\":\"sfuggle2z@delicious.com\",\"title\":\"Sonya Fuggle\",\"color\":\"#5a2776\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2315, "char_end": 2412, "chars": "    {\"id\":\"jstucke30@usnews.com\",\"title\":\"Jerrie Stucke\",\"color\":\"#9cf697\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2399, "char_end": 2501, "chars": "    {\"id\":\"krickeard31@ycombinator.com\",\"title\":\"Keelia Rickeard\",\"color\":\"#c0c2dd\",\"dep\":\"Support\"},\n"}, {"char_start": 2481, "char_end": 2582, "chars": "    {\"id\":\"amathevet32@answers.com\",\"title\":\"Angelika Mathevet\",\"color\":\"#f782c4\",\"dep\":\"Training\"},\n"}, {"char_start": 2566, "char_end": 2681, "chars": "    {\"id\":\"rbuscombe33@eventbrite.com\",\"title\":\"Randene Buscombe\",\"color\":\"#221f84\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2662, "char_end": 2764, "chars": "    {\"id\":\"cstudders34@berkeley.edu\",\"title\":\"Chastity Studders\",\"color\":\"#c6f189\",\"dep\":\"Training\"},\n"}, {"char_start": 2747, "char_end": 2835, "chars": "    {\"id\":\"kbowen35@rediff.com\",\"title\":\"Karyn Bowen\",\"color\":\"#9b3227\",\"dep\":\"Legal\"},\n"}, {"char_start": 2823, "char_end": 2923, "chars": "    {\"id\":\"jmacknight36@statcounter.com\",\"title\":\"Jere MacKnight\",\"color\":\"#f40261\",\"dep\":\"Sales\"},\n"}, {"char_start": 2902, "char_end": 2994, "chars": "    {\"id\":\"awitz37@accuweather.com\",\"title\":\"Alford Witz\",\"color\":\"#787027\",\"dep\":\"Sales\"},\n"}, {"char_start": 2978, "char_end": 3082, "chars": "    {\"id\":\"abrownfield38@google.nl\",\"title\":\"Alyosha Brownfield\",\"color\":\"#69cbce\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3066, "char_end": 3163, "chars": "    {\"id\":\"mcroot39@smh.com.au\",\"title\":\"Maddalena Croot\",\"color\":\"#e69878\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3151, "char_end": 3252, "chars": "    {\"id\":\"tcaldes3a@etsy.com\",\"title\":\"Tommi Caldes\",\"color\":\"#a4e84c\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3241, "char_end": 3325, "chars": "    {\"id\":\"lmaty3b@gnu.org\",\"title\":\"Lorens Maty\",\"color\":\"#8d15b0\",\"dep\":\"Sales\"},\n"}, {"char_start": 3317, "char_end": 3426, "chars": "    {\"id\":\"rocooney3c@archive.org\",\"title\":\"Reamonn O'Cooney\",\"color\":\"#1c8057\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3411, "char_end": 3524, "chars": "    {\"id\":\"eadriano3d@biblegateway.com\",\"title\":\"Efren Adriano\",\"color\":\"#c1ec42\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3504, "char_end": 3607, "chars": "    {\"id\":\"tdiver3e@dropbox.com\",\"title\":\"Torrey Diver\",\"color\":\"#e55f1e\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3594, "char_end": 3689, "chars": "    {\"id\":\"wslocumb3f@ameblo.jp\",\"title\":\"Webster Slocumb\",\"color\":\"#087192\",\"dep\":\"Support\"},\n"}, {"char_start": 3676, "char_end": 3791, "chars": "    {\"id\":\"pmerwede3g@sciencedaily.com\",\"title\":\"Pietrek Merwede\",\"color\":\"#724d98\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3771, "char_end": 3880, "chars": "    {\"id\":\"pjewsbury3h@ucoz.ru\",\"title\":\"Philippe Jewsbury\",\"color\":\"#f01bb4\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3868, "char_end": 3971, "chars": "    {\"id\":\"gpohl3i@github.io\",\"title\":\"Gary Pohl\",\"color\":\"#3026d1\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3961, "char_end": 4055, "chars": "    {\"id\":\"ypearmain3j@alexa.com\",\"title\":\"Yolane Pearmain\",\"color\":\"#bc17cd\",\"dep\":\"Legal\"},\n"}, {"char_start": 4041, "char_end": 4141, "chars": "    {\"id\":\"mbortolini3k@tinypic.com\",\"title\":\"Mommy Bortolini\",\"color\":\"#3bbf70\",\"dep\":\"Training\"},\n"}, {"char_start": 4124, "char_end": 4235, "chars": "    {\"id\":\"smorcombe3l@gnu.org\",\"title\":\"Suzanne Morcombe\",\"color\":\"#7dc232\",\"dep\":\"Research and Development\"},"}], "added": [{"char_start": 0, "char_end": 84, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Yehudit Matissoff\",\"color\":\"#ddd327\",\"dep\":\"Support\"},\n"}, {"char_start": 84, "char_end": 161, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Staci Franey\",\"color\":\"#2177e4\",\"dep\":\"Legal\"},\n"}, {"char_start": 161, "char_end": 242, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rivy Bilam\",\"color\":\"#3752ed\",\"dep\":\"Engineering\"},\n"}, {"char_start": 242, "char_end": 324, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Garald Lewinton\",\"color\":\"#083a77\",\"dep\":\"Support\"},\n"}, {"char_start": 324, "char_end": 413, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ninette Reolfi\",\"color\":\"#ea7bf3\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 413, "char_end": 504, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cynthie Goold\",\"color\":\"#221810\",\"dep\":\"Product Management\"},\n"}, {"char_start": 504, "char_end": 582, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Georas Botham\",\"color\":\"#af5c26\",\"dep\":\"Legal\"},\n"}, {"char_start": 582, "char_end": 660, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Maison Farrey\",\"color\":\"#1ec293\",\"dep\":\"Sales\"},\n"}, {"char_start": 660, "char_end": 741, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Beale Filippazzo\",\"color\":\"#d58e85\",\"dep\":\"Sales\"},\n"}, {"char_start": 741, "char_end": 830, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kathe Balleine\",\"color\":\"#9c2b4f\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 830, "char_end": 921, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Zachary Bromilow\",\"color\":\"#39fa64\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 921, "char_end": 1001, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Drake Astupenas\",\"color\":\"#8884a2\",\"dep\":\"Legal\"},\n"}, {"char_start": 1001, "char_end": 1081, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Clem Bestiman\",\"color\":\"#c8861e\",\"dep\":\"Support\"},\n"}, {"char_start": 1081, "char_end": 1163, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Heidie Cleaver\",\"color\":\"#8ea125\",\"dep\":\"Training\"},\n"}, {"char_start": 1163, "char_end": 1244, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Eden Count\",\"color\":\"#224b20\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1244, "char_end": 1322, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alyda Hassett\",\"color\":\"#becb02\",\"dep\":\"Legal\"},\n"}, {"char_start": 1322, "char_end": 1402, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Norine Matuszyk\",\"color\":\"#132ad3\",\"dep\":\"Legal\"},\n"}, {"char_start": 1402, "char_end": 1488, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Zorah Gisby\",\"color\":\"#4e08ac\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1488, "char_end": 1583, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Violetta Tantum\",\"color\":\"#335ba4\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1583, "char_end": 1660, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hilton Burth\",\"color\":\"#29b3d6\",\"dep\":\"Legal\"},\n"}, {"char_start": 1660, "char_end": 1745, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorie Hutchison\",\"color\":\"#ef89a8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1745, "char_end": 1826, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Biron Haddacks\",\"color\":\"#62e479\",\"dep\":\"Support\"},\n"}, {"char_start": 1826, "char_end": 1909, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Padriac Capaldo\",\"color\":\"#fd5ade\",\"dep\":\"Services\"},\n"}, {"char_start": 1909, "char_end": 1992, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Pietrek Bennetto\",\"color\":\"#7e0570\",\"dep\":\"Support\"},\n"}, {"char_start": 1992, "char_end": 2074, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hilly Edgington\",\"color\":\"#ac26d4\",\"dep\":\"Support\"},\n"}, {"char_start": 2074, "char_end": 2153, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Karena Panchin\",\"color\":\"#a0d23c\",\"dep\":\"Legal\"},\n"}, {"char_start": 2153, "char_end": 2232, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Colas Claworth\",\"color\":\"#1a1e4f\",\"dep\":\"Sales\"},\n"}, {"char_start": 2232, "char_end": 2315, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sonya Fuggle\",\"color\":\"#5a2776\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2315, "char_end": 2399, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jerrie Stucke\",\"color\":\"#9cf697\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2399, "char_end": 2481, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Keelia Rickeard\",\"color\":\"#c0c2dd\",\"dep\":\"Support\"},\n"}, {"char_start": 2481, "char_end": 2566, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Angelika Mathevet\",\"color\":\"#f782c4\",\"dep\":\"Training\"},\n"}, {"char_start": 2566, "char_end": 2662, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Randene Buscombe\",\"color\":\"#221f84\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2662, "char_end": 2747, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Chastity Studders\",\"color\":\"#c6f189\",\"dep\":\"Training\"},\n"}, {"char_start": 2747, "char_end": 2823, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Karyn Bowen\",\"color\":\"#9b3227\",\"dep\":\"Legal\"},\n"}, {"char_start": 2823, "char_end": 2902, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jere MacKnight\",\"color\":\"#f40261\",\"dep\":\"Sales\"},\n"}, {"char_start": 2902, "char_end": 2978, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alford Witz\",\"color\":\"#787027\",\"dep\":\"Sales\"},\n"}, {"char_start": 2978, "char_end": 3066, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alyosha Brownfield\",\"color\":\"#69cbce\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3066, "char_end": 3151, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Maddalena Croot\",\"color\":\"#e69878\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3151, "char_end": 3241, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Tommi Caldes\",\"color\":\"#a4e84c\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3241, "char_end": 3317, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lorens Maty\",\"color\":\"#8d15b0\",\"dep\":\"Sales\"},\n"}, {"char_start": 3317, "char_end": 3411, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Reamonn O'Cooney\",\"color\":\"#1c8057\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3411, "char_end": 3504, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Efren Adriano\",\"color\":\"#c1ec42\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3504, "char_end": 3594, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Torrey Diver\",\"color\":\"#e55f1e\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3594, "char_end": 3676, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Webster Slocumb\",\"color\":\"#087192\",\"dep\":\"Support\"},\n"}, {"char_start": 3676, "char_end": 3771, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Pietrek Merwede\",\"color\":\"#724d98\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3771, "char_end": 3868, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Philippe Jewsbury\",\"color\":\"#f01bb4\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3868, "char_end": 3961, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gary Pohl\",\"color\":\"#3026d1\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3961, "char_end": 4041, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Yolane Pearmain\",\"color\":\"#bc17cd\",\"dep\":\"Legal\"},\n"}, {"char_start": 4041, "char_end": 4124, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mommy Bortolini\",\"color\":\"#3bbf70\",\"dep\":\"Training\"},\n"}, {"char_start": 4124, "char_end": 4223, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Suzanne Morcombe\",\"color\":\"#7dc232\",\"dep\":\"Research and Development\"},"}]}}
{"func_name": 13354, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"kmeeby@narod.ru\",\"title\":\"Kacy Mee\",\"color\":\"#f045f2\",\"dep\":\"Human Resources\"},\n    {\"id\":\"dgrayhambz@noaa.gov\",\"title\":\"Durant Grayham\",\"color\":\"#3cf6ca\",\"dep\":\"Product Management\"},\n    {\"id\":\"wcalvertc0@issuu.com\",\"title\":\"Walker Calvert\",\"color\":\"#fbfc86\",\"dep\":\"Engineering\"},\n    {\"id\":\"nwillavizec1@myspace.com\",\"title\":\"Neddy Willavize\",\"color\":\"#211946\",\"dep\":\"Legal\"},\n    {\"id\":\"skahnc2@dyndns.org\",\"title\":\"Saidee Kahn\",\"color\":\"#614c0d\",\"dep\":\"Sales\"},\n    {\"id\":\"aeiversc3@bbb.org\",\"title\":\"Ania Eivers\",\"color\":\"#ad42fd\",\"dep\":\"Accounting\"},\n    {\"id\":\"amccaigc4@washingtonpost.com\",\"title\":\"Anatole McCaig\",\"color\":\"#106d3c\",\"dep\":\"Accounting\"},\n    {\"id\":\"mjakovc5@google.co.jp\",\"title\":\"Maxim Jakov\",\"color\":\"#d3b18f\",\"dep\":\"Product Management\"},\n    {\"id\":\"ablumfieldc6@rambler.ru\",\"title\":\"Alastair Blumfield\",\"color\":\"#72dce6\",\"dep\":\"Marketing\"},\n    {\"id\":\"slashfordc7@mapquest.com\",\"title\":\"Syd Lashford\",\"color\":\"#a6f430\",\"dep\":\"Support\"},\n    {\"id\":\"eharcasec8@behance.net\",\"title\":\"Elysee Harcase\",\"color\":\"#4cbfc9\",\"dep\":\"Legal\"},\n    {\"id\":\"ebergstrandc9@dmoz.org\",\"title\":\"Elise Bergstrand\",\"color\":\"#a3aa2a\",\"dep\":\"Product Management\"},\n    {\"id\":\"tsommertonca@geocities.jp\",\"title\":\"Tedra Sommerton\",\"color\":\"#5654b1\",\"dep\":\"Training\"},\n    {\"id\":\"jedglercb@cbslocal.com\",\"title\":\"Janela Edgler\",\"color\":\"#ff0e49\",\"dep\":\"Sales\"},\n    {\"id\":\"cbanasiakcc@cargocollective.com\",\"title\":\"Constantino Banasiak\",\"color\":\"#3a3adb\",\"dep\":\"Support\"},\n    {\"id\":\"ekantorcd@unc.edu\",\"title\":\"Englebert Kantor\",\"color\":\"#c3b57c\",\"dep\":\"Human Resources\"},\n    {\"id\":\"hbirminghamce@tmall.com\",\"title\":\"Horatius Birmingham\",\"color\":\"#ff8cdc\",\"dep\":\"Training\"},\n    {\"id\":\"pludlemcf@simplemachines.org\",\"title\":\"Pavlov Ludlem\",\"color\":\"#1bef0d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"rskinncg@weebly.com\",\"title\":\"Reamonn Skinn\",\"color\":\"#9e5d09\",\"dep\":\"Legal\"},\n    {\"id\":\"cceschinich@tumblr.com\",\"title\":\"Cortie Ceschini\",\"color\":\"#314918\",\"dep\":\"Training\"},\n    {\"id\":\"lantaoci@netscape.com\",\"title\":\"Lion Antao\",\"color\":\"#3aac63\",\"dep\":\"Sales\"},\n    {\"id\":\"mkillerbycj@youtu.be\",\"title\":\"Marietta Killerby\",\"color\":\"#88ad52\",\"dep\":\"Marketing\"},\n    {\"id\":\"akleszinskick@sohu.com\",\"title\":\"Ashlee Kleszinski\",\"color\":\"#be75d4\",\"dep\":\"Marketing\"},\n    {\"id\":\"hyashnovcl@soup.io\",\"title\":\"Harper Yashnov\",\"color\":\"#acfa34\",\"dep\":\"Legal\"},\n    {\"id\":\"klipgenscm@cyberchimps.com\",\"title\":\"Kattie Lipgens\",\"color\":\"#3ab72d\",\"dep\":\"Services\"},\n    {\"id\":\"roduilleaincn@youtu.be\",\"title\":\"Rubia O'Duilleain\",\"color\":\"#347e25\",\"dep\":\"Research and Development\"},\n    {\"id\":\"bharkenco@tripadvisor.com\",\"title\":\"Brit Harken\",\"color\":\"#20bb7e\",\"dep\":\"Services\"},\n    {\"id\":\"gabelsoncp@flickr.com\",\"title\":\"Gwen Abelson\",\"color\":\"#b2e496\",\"dep\":\"Research and Development\"},\n    {\"id\":\"hfurphycq@quantcast.com\",\"title\":\"Herby Furphy\",\"color\":\"#834ce9\",\"dep\":\"Marketing\"},\n    {\"id\":\"eharrinsoncr@jalbum.net\",\"title\":\"Estrella Harrinson\",\"color\":\"#487b87\",\"dep\":\"Training\"},\n    {\"id\":\"wlunacs@senate.gov\",\"title\":\"Willie Luna\",\"color\":\"#ae141a\",\"dep\":\"Research and Development\"},\n    {\"id\":\"bbradshawct@craigslist.org\",\"title\":\"Birch Bradshaw\",\"color\":\"#e0e58f\",\"dep\":\"Product Management\"},\n    {\"id\":\"rbyrkmyrcu@prnewswire.com\",\"title\":\"Rea Byrkmyr\",\"color\":\"#8d1933\",\"dep\":\"Product Management\"},\n    {\"id\":\"lbroszkiewiczcv@cbslocal.com\",\"title\":\"Lishe Broszkiewicz\",\"color\":\"#8b8173\",\"dep\":\"Support\"},\n    {\"id\":\"wbruincw@mit.edu\",\"title\":\"Walt Bruin\",\"color\":\"#24fa94\",\"dep\":\"Marketing\"},\n    {\"id\":\"lrommecx@photobucket.com\",\"title\":\"Luca Romme\",\"color\":\"#c0f708\",\"dep\":\"Research and Development\"},\n    {\"id\":\"tpassiecy@deviantart.com\",\"title\":\"Torin Passie\",\"color\":\"#7e540a\",\"dep\":\"Research and Development\"},\n    {\"id\":\"rwessingcz@diigo.com\",\"title\":\"Rasla Wessing\",\"color\":\"#aa97ca\",\"dep\":\"Product Management\"},\n    {\"id\":\"cbissd0@wunderground.com\",\"title\":\"Chaunce Biss\",\"color\":\"#8533be\",\"dep\":\"Product Management\"},\n    {\"id\":\"jloreyd1@wikispaces.com\",\"title\":\"Janelle Lorey\",\"color\":\"#bfc5e0\",\"dep\":\"Training\"},\n    {\"id\":\"dblewd2@cnn.com\",\"title\":\"Dottie Blew\",\"color\":\"#7910ec\",\"dep\":\"Accounting\"},\n    {\"id\":\"hbougourdd3@huffingtonpost.com\",\"title\":\"Hamil Bougourd\",\"color\":\"#9dc10c\",\"dep\":\"Research and Development\"},\n    {\"id\":\"shapgoodd4@noaa.gov\",\"title\":\"Shanan Hapgood\",\"color\":\"#26375e\",\"dep\":\"Business Development\"},\n    {\"id\":\"gdauberd5@answers.com\",\"title\":\"Gordan Dauber\",\"color\":\"#23226a\",\"dep\":\"Business Development\"},\n    {\"id\":\"candrolettid6@imgur.com\",\"title\":\"Carline Androletti\",\"color\":\"#3e7889\",\"dep\":\"Support\"},\n    {\"id\":\"ablazad7@blogspot.com\",\"title\":\"Angelina Blaza\",\"color\":\"#954e59\",\"dep\":\"Sales\"},\n    {\"id\":\"amacconachyd8@deviantart.com\",\"title\":\"Ari Macconachy\",\"color\":\"#40c0bf\",\"dep\":\"Training\"},\n    {\"id\":\"ktimlind9@nytimes.com\",\"title\":\"Katrine Timlin\",\"color\":\"#6ed8c1\",\"dep\":\"Engineering\"},\n    {\"id\":\"lclevelyda@odnoklassniki.ru\",\"title\":\"Lilli Clevely\",\"color\":\"#b8a081\",\"dep\":\"Accounting\"},\n    {\"id\":\"smalehamdb@edublogs.org\",\"title\":\"Siouxie Maleham\",\"color\":\"#83dea3\",\"dep\":\"Accounting\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Kacy Mee\",\"color\":\"#f045f2\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Durant Grayham\",\"color\":\"#3cf6ca\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Walker Calvert\",\"color\":\"#fbfc86\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Neddy Willavize\",\"color\":\"#211946\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Saidee Kahn\",\"color\":\"#614c0d\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ania Eivers\",\"color\":\"#ad42fd\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Anatole McCaig\",\"color\":\"#106d3c\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Maxim Jakov\",\"color\":\"#d3b18f\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alastair Blumfield\",\"color\":\"#72dce6\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Syd Lashford\",\"color\":\"#a6f430\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Elysee Harcase\",\"color\":\"#4cbfc9\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Elise Bergstrand\",\"color\":\"#a3aa2a\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Tedra Sommerton\",\"color\":\"#5654b1\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Janela Edgler\",\"color\":\"#ff0e49\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Constantino Banasiak\",\"color\":\"#3a3adb\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Englebert Kantor\",\"color\":\"#c3b57c\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Horatius Birmingham\",\"color\":\"#ff8cdc\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Pavlov Ludlem\",\"color\":\"#1bef0d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Reamonn Skinn\",\"color\":\"#9e5d09\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cortie Ceschini\",\"color\":\"#314918\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lion Antao\",\"color\":\"#3aac63\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Marietta Killerby\",\"color\":\"#88ad52\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ashlee Kleszinski\",\"color\":\"#be75d4\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Harper Yashnov\",\"color\":\"#acfa34\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kattie Lipgens\",\"color\":\"#3ab72d\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rubia O'Duilleain\",\"color\":\"#347e25\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Brit Harken\",\"color\":\"#20bb7e\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gwen Abelson\",\"color\":\"#b2e496\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Herby Furphy\",\"color\":\"#834ce9\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Estrella Harrinson\",\"color\":\"#487b87\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Willie Luna\",\"color\":\"#ae141a\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Birch Bradshaw\",\"color\":\"#e0e58f\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rea Byrkmyr\",\"color\":\"#8d1933\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lishe Broszkiewicz\",\"color\":\"#8b8173\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Walt Bruin\",\"color\":\"#24fa94\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Luca Romme\",\"color\":\"#c0f708\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Torin Passie\",\"color\":\"#7e540a\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rasla Wessing\",\"color\":\"#aa97ca\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Chaunce Biss\",\"color\":\"#8533be\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Janelle Lorey\",\"color\":\"#bfc5e0\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dottie Blew\",\"color\":\"#7910ec\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hamil Bougourd\",\"color\":\"#9dc10c\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Shanan Hapgood\",\"color\":\"#26375e\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gordan Dauber\",\"color\":\"#23226a\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Carline Androletti\",\"color\":\"#3e7889\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Angelina Blaza\",\"color\":\"#954e59\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ari Macconachy\",\"color\":\"#40c0bf\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Katrine Timlin\",\"color\":\"#6ed8c1\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lilli Clevely\",\"color\":\"#b8a081\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Siouxie Maleham\",\"color\":\"#83dea3\",\"dep\":\"Accounting\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 91, "line": "    {\"id\":\"kmeeby@narod.ru\",\"title\":\"Kacy Mee\",\"color\":\"#f045f2\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 3, "char_start": 83, "char_end": 187, "line": "    {\"id\":\"dgrayhambz@noaa.gov\",\"title\":\"Durant Grayham\",\"color\":\"#3cf6ca\",\"dep\":\"Product Management\"},\n"}, {"line_no": 5, "char_start": 175, "char_end": 273, "line": "    {\"id\":\"wcalvertc0@issuu.com\",\"title\":\"Walker Calvert\",\"color\":\"#fbfc86\",\"dep\":\"Engineering\"},\n"}, {"line_no": 7, "char_start": 260, "char_end": 357, "line": "    {\"id\":\"nwillavizec1@myspace.com\",\"title\":\"Neddy Willavize\",\"color\":\"#211946\",\"dep\":\"Legal\"},\n"}, {"line_no": 9, "char_start": 340, "char_end": 427, "line": "    {\"id\":\"skahnc2@dyndns.org\",\"title\":\"Saidee Kahn\",\"color\":\"#614c0d\",\"dep\":\"Sales\"},\n"}, {"line_no": 11, "char_start": 416, "char_end": 507, "line": "    {\"id\":\"aeiversc3@bbb.org\",\"title\":\"Ania Eivers\",\"color\":\"#ad42fd\",\"dep\":\"Accounting\"},\n"}, {"line_no": 13, "char_start": 497, "char_end": 602, "line": "    {\"id\":\"amccaigc4@washingtonpost.com\",\"title\":\"Anatole McCaig\",\"color\":\"#106d3c\",\"dep\":\"Accounting\"},\n"}, {"line_no": 15, "char_start": 581, "char_end": 684, "line": "    {\"id\":\"mjakovc5@google.co.jp\",\"title\":\"Maxim Jakov\",\"color\":\"#d3b18f\",\"dep\":\"Product Management\"},\n"}, {"line_no": 17, "char_start": 670, "char_end": 773, "line": "    {\"id\":\"ablumfieldc6@rambler.ru\",\"title\":\"Alastair Blumfield\",\"color\":\"#72dce6\",\"dep\":\"Marketing\"},\n"}, {"line_no": 19, "char_start": 757, "char_end": 853, "line": "    {\"id\":\"slashfordc7@mapquest.com\",\"title\":\"Syd Lashford\",\"color\":\"#a6f430\",\"dep\":\"Support\"},\n"}, {"line_no": 21, "char_start": 836, "char_end": 930, "line": "    {\"id\":\"eharcasec8@behance.net\",\"title\":\"Elysee Harcase\",\"color\":\"#4cbfc9\",\"dep\":\"Legal\"},\n"}, {"line_no": 23, "char_start": 915, "char_end": 1024, "line": "    {\"id\":\"ebergstrandc9@dmoz.org\",\"title\":\"Elise Bergstrand\",\"color\":\"#a3aa2a\",\"dep\":\"Product Management\"},\n"}, {"line_no": 25, "char_start": 1009, "char_end": 1110, "line": "    {\"id\":\"tsommertonca@geocities.jp\",\"title\":\"Tedra Sommerton\",\"color\":\"#5654b1\",\"dep\":\"Training\"},\n"}, {"line_no": 27, "char_start": 1092, "char_end": 1185, "line": "    {\"id\":\"jedglercb@cbslocal.com\",\"title\":\"Janela Edgler\",\"color\":\"#ff0e49\",\"dep\":\"Sales\"},\n"}, {"line_no": 29, "char_start": 1170, "char_end": 1281, "line": "    {\"id\":\"cbanasiakcc@cargocollective.com\",\"title\":\"Constantino Banasiak\",\"color\":\"#3a3adb\",\"dep\":\"Support\"},\n"}, {"line_no": 31, "char_start": 1257, "char_end": 1358, "line": "    {\"id\":\"ekantorcd@unc.edu\",\"title\":\"Englebert Kantor\",\"color\":\"#c3b57c\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 33, "char_start": 1348, "char_end": 1451, "line": "    {\"id\":\"hbirminghamce@tmall.com\",\"title\":\"Horatius Birmingham\",\"color\":\"#ff8cdc\",\"dep\":\"Training\"},\n"}, {"line_no": 35, "char_start": 1435, "char_end": 1553, "line": "    {\"id\":\"pludlemcf@simplemachines.org\",\"title\":\"Pavlov Ludlem\",\"color\":\"#1bef0d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 37, "char_start": 1532, "char_end": 1622, "line": "    {\"id\":\"rskinncg@weebly.com\",\"title\":\"Reamonn Skinn\",\"color\":\"#9e5d09\",\"dep\":\"Legal\"},\n"}, {"line_no": 39, "char_start": 1610, "char_end": 1708, "line": "    {\"id\":\"cceschinich@tumblr.com\",\"title\":\"Cortie Ceschini\",\"color\":\"#314918\",\"dep\":\"Training\"},\n"}, {"line_no": 41, "char_start": 1693, "char_end": 1782, "line": "    {\"id\":\"lantaoci@netscape.com\",\"title\":\"Lion Antao\",\"color\":\"#3aac63\",\"dep\":\"Sales\"},\n"}, {"line_no": 43, "char_start": 1768, "char_end": 1867, "line": "    {\"id\":\"mkillerbycj@youtu.be\",\"title\":\"Marietta Killerby\",\"color\":\"#88ad52\",\"dep\":\"Marketing\"},\n"}, {"line_no": 45, "char_start": 1854, "char_end": 1955, "line": "    {\"id\":\"akleszinskick@sohu.com\",\"title\":\"Ashlee Kleszinski\",\"color\":\"#be75d4\",\"dep\":\"Marketing\"},\n"}, {"line_no": 47, "char_start": 1940, "char_end": 2030, "line": "    {\"id\":\"hyashnovcl@soup.io\",\"title\":\"Harper Yashnov\",\"color\":\"#acfa34\",\"dep\":\"Legal\"},\n"}, {"line_no": 49, "char_start": 2019, "char_end": 2120, "line": "    {\"id\":\"klipgenscm@cyberchimps.com\",\"title\":\"Kattie Lipgens\",\"color\":\"#3ab72d\",\"dep\":\"Services\"},\n"}, {"line_no": 51, "char_start": 2101, "char_end": 2217, "line": "    {\"id\":\"roduilleaincn@youtu.be\",\"title\":\"Rubia O'Duilleain\",\"color\":\"#347e25\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 53, "char_start": 2202, "char_end": 2299, "line": "    {\"id\":\"bharkenco@tripadvisor.com\",\"title\":\"Brit Harken\",\"color\":\"#20bb7e\",\"dep\":\"Services\"},\n"}, {"line_no": 55, "char_start": 2281, "char_end": 2391, "line": "    {\"id\":\"gabelsoncp@flickr.com\",\"title\":\"Gwen Abelson\",\"color\":\"#b2e496\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 57, "char_start": 2377, "char_end": 2474, "line": "    {\"id\":\"hfurphycq@quantcast.com\",\"title\":\"Herby Furphy\",\"color\":\"#834ce9\",\"dep\":\"Marketing\"},\n"}, {"line_no": 59, "char_start": 2458, "char_end": 2560, "line": "    {\"id\":\"eharrinsoncr@jalbum.net\",\"title\":\"Estrella Harrinson\",\"color\":\"#487b87\",\"dep\":\"Training\"},\n"}, {"line_no": 61, "char_start": 2544, "char_end": 2650, "line": "    {\"id\":\"wlunacs@senate.gov\",\"title\":\"Willie Luna\",\"color\":\"#ae141a\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 63, "char_start": 2639, "char_end": 2750, "line": "    {\"id\":\"bbradshawct@craigslist.org\",\"title\":\"Birch Bradshaw\",\"color\":\"#e0e58f\",\"dep\":\"Product Management\"},\n"}, {"line_no": 65, "char_start": 2731, "char_end": 2838, "line": "    {\"id\":\"rbyrkmyrcu@prnewswire.com\",\"title\":\"Rea Byrkmyr\",\"color\":\"#8d1933\",\"dep\":\"Product Management\"},\n"}, {"line_no": 67, "char_start": 2820, "char_end": 2926, "line": "    {\"id\":\"lbroszkiewiczcv@cbslocal.com\",\"title\":\"Lishe Broszkiewicz\",\"color\":\"#8b8173\",\"dep\":\"Support\"},\n"}, {"line_no": 69, "char_start": 2905, "char_end": 2993, "line": "    {\"id\":\"wbruincw@mit.edu\",\"title\":\"Walt Bruin\",\"color\":\"#24fa94\",\"dep\":\"Marketing\"},\n"}, {"line_no": 71, "char_start": 2984, "char_end": 3095, "line": "    {\"id\":\"lrommecx@photobucket.com\",\"title\":\"Luca Romme\",\"color\":\"#c0f708\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 73, "char_start": 3078, "char_end": 3191, "line": "    {\"id\":\"tpassiecy@deviantart.com\",\"title\":\"Torin Passie\",\"color\":\"#7e540a\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 75, "char_start": 3174, "char_end": 3278, "line": "    {\"id\":\"rwessingcz@diigo.com\",\"title\":\"Rasla Wessing\",\"color\":\"#aa97ca\",\"dep\":\"Product Management\"},\n"}, {"line_no": 77, "char_start": 3265, "char_end": 3372, "line": "    {\"id\":\"cbissd0@wunderground.com\",\"title\":\"Chaunce Biss\",\"color\":\"#8533be\",\"dep\":\"Product Management\"},\n"}, {"line_no": 79, "char_start": 3355, "char_end": 3452, "line": "    {\"id\":\"jloreyd1@wikispaces.com\",\"title\":\"Janelle Lorey\",\"color\":\"#bfc5e0\",\"dep\":\"Training\"},\n"}, {"line_no": 81, "char_start": 3436, "char_end": 3525, "line": "    {\"id\":\"dblewd2@cnn.com\",\"title\":\"Dottie Blew\",\"color\":\"#7910ec\",\"dep\":\"Accounting\"},\n"}, {"line_no": 83, "char_start": 3517, "char_end": 3638, "line": "    {\"id\":\"hbougourdd3@huffingtonpost.com\",\"title\":\"Hamil Bougourd\",\"color\":\"#9dc10c\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 85, "char_start": 3615, "char_end": 3721, "line": "    {\"id\":\"shapgoodd4@noaa.gov\",\"title\":\"Shanan Hapgood\",\"color\":\"#26375e\",\"dep\":\"Business Development\"},\n"}, {"line_no": 87, "char_start": 3709, "char_end": 3816, "line": "    {\"id\":\"gdauberd5@answers.com\",\"title\":\"Gordan Dauber\",\"color\":\"#23226a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 89, "char_start": 3802, "char_end": 3903, "line": "    {\"id\":\"candrolettid6@imgur.com\",\"title\":\"Carline Androletti\",\"color\":\"#3e7889\",\"dep\":\"Support\"},\n"}, {"line_no": 91, "char_start": 3887, "char_end": 3980, "line": "    {\"id\":\"ablazad7@blogspot.com\",\"title\":\"Angelina Blaza\",\"color\":\"#954e59\",\"dep\":\"Sales\"},\n"}, {"line_no": 93, "char_start": 3966, "char_end": 4069, "line": "    {\"id\":\"amacconachyd8@deviantart.com\",\"title\":\"Ari Macconachy\",\"color\":\"#40c0bf\",\"dep\":\"Training\"},\n"}, {"line_no": 95, "char_start": 4048, "char_end": 4147, "line": "    {\"id\":\"ktimlind9@nytimes.com\",\"title\":\"Katrine Timlin\",\"color\":\"#6ed8c1\",\"dep\":\"Engineering\"},\n"}, {"line_no": 97, "char_start": 4133, "char_end": 4236, "line": "    {\"id\":\"lclevelyda@odnoklassniki.ru\",\"title\":\"Lilli Clevely\",\"color\":\"#b8a081\",\"dep\":\"Accounting\"},\n"}, {"line_no": 99, "char_start": 4216, "char_end": 4316, "line": "    {\"id\":\"smalehamdb@edublogs.org\",\"title\":\"Siouxie Maleham\",\"color\":\"#83dea3\",\"dep\":\"Accounting\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 83, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kacy Mee\",\"color\":\"#f045f2\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 4, "char_start": 83, "char_end": 175, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Durant Grayham\",\"color\":\"#3cf6ca\",\"dep\":\"Product Management\"},\n"}, {"line_no": 6, "char_start": 175, "char_end": 260, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Walker Calvert\",\"color\":\"#fbfc86\",\"dep\":\"Engineering\"},\n"}, {"line_no": 8, "char_start": 260, "char_end": 340, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Neddy Willavize\",\"color\":\"#211946\",\"dep\":\"Legal\"},\n"}, {"line_no": 10, "char_start": 340, "char_end": 416, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Saidee Kahn\",\"color\":\"#614c0d\",\"dep\":\"Sales\"},\n"}, {"line_no": 12, "char_start": 416, "char_end": 497, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ania Eivers\",\"color\":\"#ad42fd\",\"dep\":\"Accounting\"},\n"}, {"line_no": 14, "char_start": 497, "char_end": 581, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Anatole McCaig\",\"color\":\"#106d3c\",\"dep\":\"Accounting\"},\n"}, {"line_no": 16, "char_start": 581, "char_end": 670, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Maxim Jakov\",\"color\":\"#d3b18f\",\"dep\":\"Product Management\"},\n"}, {"line_no": 18, "char_start": 670, "char_end": 757, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alastair Blumfield\",\"color\":\"#72dce6\",\"dep\":\"Marketing\"},\n"}, {"line_no": 20, "char_start": 757, "char_end": 836, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Syd Lashford\",\"color\":\"#a6f430\",\"dep\":\"Support\"},\n"}, {"line_no": 22, "char_start": 836, "char_end": 915, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Elysee Harcase\",\"color\":\"#4cbfc9\",\"dep\":\"Legal\"},\n"}, {"line_no": 24, "char_start": 915, "char_end": 1009, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Elise Bergstrand\",\"color\":\"#a3aa2a\",\"dep\":\"Product Management\"},\n"}, {"line_no": 26, "char_start": 1009, "char_end": 1092, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Tedra Sommerton\",\"color\":\"#5654b1\",\"dep\":\"Training\"},\n"}, {"line_no": 28, "char_start": 1092, "char_end": 1170, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Janela Edgler\",\"color\":\"#ff0e49\",\"dep\":\"Sales\"},\n"}, {"line_no": 30, "char_start": 1170, "char_end": 1257, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Constantino Banasiak\",\"color\":\"#3a3adb\",\"dep\":\"Support\"},\n"}, {"line_no": 32, "char_start": 1257, "char_end": 1348, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Englebert Kantor\",\"color\":\"#c3b57c\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 34, "char_start": 1348, "char_end": 1435, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Horatius Birmingham\",\"color\":\"#ff8cdc\",\"dep\":\"Training\"},\n"}, {"line_no": 36, "char_start": 1435, "char_end": 1532, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Pavlov Ludlem\",\"color\":\"#1bef0d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 38, "char_start": 1532, "char_end": 1610, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Reamonn Skinn\",\"color\":\"#9e5d09\",\"dep\":\"Legal\"},\n"}, {"line_no": 40, "char_start": 1610, "char_end": 1693, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cortie Ceschini\",\"color\":\"#314918\",\"dep\":\"Training\"},\n"}, {"line_no": 42, "char_start": 1693, "char_end": 1768, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lion Antao\",\"color\":\"#3aac63\",\"dep\":\"Sales\"},\n"}, {"line_no": 44, "char_start": 1768, "char_end": 1854, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Marietta Killerby\",\"color\":\"#88ad52\",\"dep\":\"Marketing\"},\n"}, {"line_no": 46, "char_start": 1854, "char_end": 1940, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashlee Kleszinski\",\"color\":\"#be75d4\",\"dep\":\"Marketing\"},\n"}, {"line_no": 48, "char_start": 1940, "char_end": 2019, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Harper Yashnov\",\"color\":\"#acfa34\",\"dep\":\"Legal\"},\n"}, {"line_no": 50, "char_start": 2019, "char_end": 2101, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kattie Lipgens\",\"color\":\"#3ab72d\",\"dep\":\"Services\"},\n"}, {"line_no": 52, "char_start": 2101, "char_end": 2202, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rubia O'Duilleain\",\"color\":\"#347e25\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 54, "char_start": 2202, "char_end": 2281, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Brit Harken\",\"color\":\"#20bb7e\",\"dep\":\"Services\"},\n"}, {"line_no": 56, "char_start": 2281, "char_end": 2377, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gwen Abelson\",\"color\":\"#b2e496\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 58, "char_start": 2377, "char_end": 2458, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Herby Furphy\",\"color\":\"#834ce9\",\"dep\":\"Marketing\"},\n"}, {"line_no": 60, "char_start": 2458, "char_end": 2544, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Estrella Harrinson\",\"color\":\"#487b87\",\"dep\":\"Training\"},\n"}, {"line_no": 62, "char_start": 2544, "char_end": 2639, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Willie Luna\",\"color\":\"#ae141a\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 64, "char_start": 2639, "char_end": 2731, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Birch Bradshaw\",\"color\":\"#e0e58f\",\"dep\":\"Product Management\"},\n"}, {"line_no": 66, "char_start": 2731, "char_end": 2820, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rea Byrkmyr\",\"color\":\"#8d1933\",\"dep\":\"Product Management\"},\n"}, {"line_no": 68, "char_start": 2820, "char_end": 2905, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lishe Broszkiewicz\",\"color\":\"#8b8173\",\"dep\":\"Support\"},\n"}, {"line_no": 70, "char_start": 2905, "char_end": 2984, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Walt Bruin\",\"color\":\"#24fa94\",\"dep\":\"Marketing\"},\n"}, {"line_no": 72, "char_start": 2984, "char_end": 3078, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Luca Romme\",\"color\":\"#c0f708\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 74, "char_start": 3078, "char_end": 3174, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Torin Passie\",\"color\":\"#7e540a\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 76, "char_start": 3174, "char_end": 3265, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rasla Wessing\",\"color\":\"#aa97ca\",\"dep\":\"Product Management\"},\n"}, {"line_no": 78, "char_start": 3265, "char_end": 3355, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Chaunce Biss\",\"color\":\"#8533be\",\"dep\":\"Product Management\"},\n"}, {"line_no": 80, "char_start": 3355, "char_end": 3436, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Janelle Lorey\",\"color\":\"#bfc5e0\",\"dep\":\"Training\"},\n"}, {"line_no": 82, "char_start": 3436, "char_end": 3517, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dottie Blew\",\"color\":\"#7910ec\",\"dep\":\"Accounting\"},\n"}, {"line_no": 84, "char_start": 3517, "char_end": 3615, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hamil Bougourd\",\"color\":\"#9dc10c\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 86, "char_start": 3615, "char_end": 3709, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Shanan Hapgood\",\"color\":\"#26375e\",\"dep\":\"Business Development\"},\n"}, {"line_no": 88, "char_start": 3709, "char_end": 3802, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gordan Dauber\",\"color\":\"#23226a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 90, "char_start": 3802, "char_end": 3887, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Carline Androletti\",\"color\":\"#3e7889\",\"dep\":\"Support\"},\n"}, {"line_no": 92, "char_start": 3887, "char_end": 3966, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Angelina Blaza\",\"color\":\"#954e59\",\"dep\":\"Sales\"},\n"}, {"line_no": 94, "char_start": 3966, "char_end": 4048, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ari Macconachy\",\"color\":\"#40c0bf\",\"dep\":\"Training\"},\n"}, {"line_no": 96, "char_start": 4048, "char_end": 4133, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Katrine Timlin\",\"color\":\"#6ed8c1\",\"dep\":\"Engineering\"},\n"}, {"line_no": 98, "char_start": 4133, "char_end": 4216, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lilli Clevely\",\"color\":\"#b8a081\",\"dep\":\"Accounting\"},\n"}, {"line_no": 100, "char_start": 4216, "char_end": 4300, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Siouxie Maleham\",\"color\":\"#83dea3\",\"dep\":\"Accounting\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 91, "chars": "    {\"id\":\"kmeeby@narod.ru\",\"title\":\"Kacy Mee\",\"color\":\"#f045f2\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 83, "char_end": 187, "chars": "    {\"id\":\"dgrayhambz@noaa.gov\",\"title\":\"Durant Grayham\",\"color\":\"#3cf6ca\",\"dep\":\"Product Management\"},\n"}, {"char_start": 175, "char_end": 273, "chars": "    {\"id\":\"wcalvertc0@issuu.com\",\"title\":\"Walker Calvert\",\"color\":\"#fbfc86\",\"dep\":\"Engineering\"},\n"}, {"char_start": 260, "char_end": 357, "chars": "    {\"id\":\"nwillavizec1@myspace.com\",\"title\":\"Neddy Willavize\",\"color\":\"#211946\",\"dep\":\"Legal\"},\n"}, {"char_start": 340, "char_end": 427, "chars": "    {\"id\":\"skahnc2@dyndns.org\",\"title\":\"Saidee Kahn\",\"color\":\"#614c0d\",\"dep\":\"Sales\"},\n"}, {"char_start": 416, "char_end": 507, "chars": "    {\"id\":\"aeiversc3@bbb.org\",\"title\":\"Ania Eivers\",\"color\":\"#ad42fd\",\"dep\":\"Accounting\"},\n"}, {"char_start": 497, "char_end": 602, "chars": "    {\"id\":\"amccaigc4@washingtonpost.com\",\"title\":\"Anatole McCaig\",\"color\":\"#106d3c\",\"dep\":\"Accounting\"},\n"}, {"char_start": 581, "char_end": 684, "chars": "    {\"id\":\"mjakovc5@google.co.jp\",\"title\":\"Maxim Jakov\",\"color\":\"#d3b18f\",\"dep\":\"Product Management\"},\n"}, {"char_start": 670, "char_end": 773, "chars": "    {\"id\":\"ablumfieldc6@rambler.ru\",\"title\":\"Alastair Blumfield\",\"color\":\"#72dce6\",\"dep\":\"Marketing\"},\n"}, {"char_start": 757, "char_end": 853, "chars": "    {\"id\":\"slashfordc7@mapquest.com\",\"title\":\"Syd Lashford\",\"color\":\"#a6f430\",\"dep\":\"Support\"},\n"}, {"char_start": 836, "char_end": 930, "chars": "    {\"id\":\"eharcasec8@behance.net\",\"title\":\"Elysee Harcase\",\"color\":\"#4cbfc9\",\"dep\":\"Legal\"},\n"}, {"char_start": 915, "char_end": 1024, "chars": "    {\"id\":\"ebergstrandc9@dmoz.org\",\"title\":\"Elise Bergstrand\",\"color\":\"#a3aa2a\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1009, "char_end": 1110, "chars": "    {\"id\":\"tsommertonca@geocities.jp\",\"title\":\"Tedra Sommerton\",\"color\":\"#5654b1\",\"dep\":\"Training\"},\n"}, {"char_start": 1092, "char_end": 1185, "chars": "    {\"id\":\"jedglercb@cbslocal.com\",\"title\":\"Janela Edgler\",\"color\":\"#ff0e49\",\"dep\":\"Sales\"},\n"}, {"char_start": 1170, "char_end": 1281, "chars": "    {\"id\":\"cbanasiakcc@cargocollective.com\",\"title\":\"Constantino Banasiak\",\"color\":\"#3a3adb\",\"dep\":\"Support\"},\n"}, {"char_start": 1257, "char_end": 1358, "chars": "    {\"id\":\"ekantorcd@unc.edu\",\"title\":\"Englebert Kantor\",\"color\":\"#c3b57c\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1348, "char_end": 1451, "chars": "    {\"id\":\"hbirminghamce@tmall.com\",\"title\":\"Horatius Birmingham\",\"color\":\"#ff8cdc\",\"dep\":\"Training\"},\n"}, {"char_start": 1435, "char_end": 1553, "chars": "    {\"id\":\"pludlemcf@simplemachines.org\",\"title\":\"Pavlov Ludlem\",\"color\":\"#1bef0d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1532, "char_end": 1622, "chars": "    {\"id\":\"rskinncg@weebly.com\",\"title\":\"Reamonn Skinn\",\"color\":\"#9e5d09\",\"dep\":\"Legal\"},\n"}, {"char_start": 1610, "char_end": 1708, "chars": "    {\"id\":\"cceschinich@tumblr.com\",\"title\":\"Cortie Ceschini\",\"color\":\"#314918\",\"dep\":\"Training\"},\n"}, {"char_start": 1693, "char_end": 1782, "chars": "    {\"id\":\"lantaoci@netscape.com\",\"title\":\"Lion Antao\",\"color\":\"#3aac63\",\"dep\":\"Sales\"},\n"}, {"char_start": 1768, "char_end": 1867, "chars": "    {\"id\":\"mkillerbycj@youtu.be\",\"title\":\"Marietta Killerby\",\"color\":\"#88ad52\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1854, "char_end": 1955, "chars": "    {\"id\":\"akleszinskick@sohu.com\",\"title\":\"Ashlee Kleszinski\",\"color\":\"#be75d4\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1940, "char_end": 2030, "chars": "    {\"id\":\"hyashnovcl@soup.io\",\"title\":\"Harper Yashnov\",\"color\":\"#acfa34\",\"dep\":\"Legal\"},\n"}, {"char_start": 2019, "char_end": 2120, "chars": "    {\"id\":\"klipgenscm@cyberchimps.com\",\"title\":\"Kattie Lipgens\",\"color\":\"#3ab72d\",\"dep\":\"Services\"},\n"}, {"char_start": 2101, "char_end": 2217, "chars": "    {\"id\":\"roduilleaincn@youtu.be\",\"title\":\"Rubia O'Duilleain\",\"color\":\"#347e25\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2202, "char_end": 2299, "chars": "    {\"id\":\"bharkenco@tripadvisor.com\",\"title\":\"Brit Harken\",\"color\":\"#20bb7e\",\"dep\":\"Services\"},\n"}, {"char_start": 2281, "char_end": 2391, "chars": "    {\"id\":\"gabelsoncp@flickr.com\",\"title\":\"Gwen Abelson\",\"color\":\"#b2e496\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2377, "char_end": 2474, "chars": "    {\"id\":\"hfurphycq@quantcast.com\",\"title\":\"Herby Furphy\",\"color\":\"#834ce9\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2458, "char_end": 2560, "chars": "    {\"id\":\"eharrinsoncr@jalbum.net\",\"title\":\"Estrella Harrinson\",\"color\":\"#487b87\",\"dep\":\"Training\"},\n"}, {"char_start": 2544, "char_end": 2650, "chars": "    {\"id\":\"wlunacs@senate.gov\",\"title\":\"Willie Luna\",\"color\":\"#ae141a\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2639, "char_end": 2750, "chars": "    {\"id\":\"bbradshawct@craigslist.org\",\"title\":\"Birch Bradshaw\",\"color\":\"#e0e58f\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2731, "char_end": 2838, "chars": "    {\"id\":\"rbyrkmyrcu@prnewswire.com\",\"title\":\"Rea Byrkmyr\",\"color\":\"#8d1933\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2820, "char_end": 2926, "chars": "    {\"id\":\"lbroszkiewiczcv@cbslocal.com\",\"title\":\"Lishe Broszkiewicz\",\"color\":\"#8b8173\",\"dep\":\"Support\"},\n"}, {"char_start": 2905, "char_end": 2993, "chars": "    {\"id\":\"wbruincw@mit.edu\",\"title\":\"Walt Bruin\",\"color\":\"#24fa94\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2984, "char_end": 3095, "chars": "    {\"id\":\"lrommecx@photobucket.com\",\"title\":\"Luca Romme\",\"color\":\"#c0f708\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3078, "char_end": 3191, "chars": "    {\"id\":\"tpassiecy@deviantart.com\",\"title\":\"Torin Passie\",\"color\":\"#7e540a\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3174, "char_end": 3278, "chars": "    {\"id\":\"rwessingcz@diigo.com\",\"title\":\"Rasla Wessing\",\"color\":\"#aa97ca\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3265, "char_end": 3372, "chars": "    {\"id\":\"cbissd0@wunderground.com\",\"title\":\"Chaunce Biss\",\"color\":\"#8533be\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3355, "char_end": 3452, "chars": "    {\"id\":\"jloreyd1@wikispaces.com\",\"title\":\"Janelle Lorey\",\"color\":\"#bfc5e0\",\"dep\":\"Training\"},\n"}, {"char_start": 3436, "char_end": 3525, "chars": "    {\"id\":\"dblewd2@cnn.com\",\"title\":\"Dottie Blew\",\"color\":\"#7910ec\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3517, "char_end": 3638, "chars": "    {\"id\":\"hbougourdd3@huffingtonpost.com\",\"title\":\"Hamil Bougourd\",\"color\":\"#9dc10c\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3615, "char_end": 3721, "chars": "    {\"id\":\"shapgoodd4@noaa.gov\",\"title\":\"Shanan Hapgood\",\"color\":\"#26375e\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3709, "char_end": 3816, "chars": "    {\"id\":\"gdauberd5@answers.com\",\"title\":\"Gordan Dauber\",\"color\":\"#23226a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3802, "char_end": 3903, "chars": "    {\"id\":\"candrolettid6@imgur.com\",\"title\":\"Carline Androletti\",\"color\":\"#3e7889\",\"dep\":\"Support\"},\n"}, {"char_start": 3887, "char_end": 3980, "chars": "    {\"id\":\"ablazad7@blogspot.com\",\"title\":\"Angelina Blaza\",\"color\":\"#954e59\",\"dep\":\"Sales\"},\n"}, {"char_start": 3966, "char_end": 4069, "chars": "    {\"id\":\"amacconachyd8@deviantart.com\",\"title\":\"Ari Macconachy\",\"color\":\"#40c0bf\",\"dep\":\"Training\"},\n"}, {"char_start": 4048, "char_end": 4147, "chars": "    {\"id\":\"ktimlind9@nytimes.com\",\"title\":\"Katrine Timlin\",\"color\":\"#6ed8c1\",\"dep\":\"Engineering\"},\n"}, {"char_start": 4133, "char_end": 4236, "chars": "    {\"id\":\"lclevelyda@odnoklassniki.ru\",\"title\":\"Lilli Clevely\",\"color\":\"#b8a081\",\"dep\":\"Accounting\"},\n"}, {"char_start": 4216, "char_end": 4316, "chars": "    {\"id\":\"smalehamdb@edublogs.org\",\"title\":\"Siouxie Maleham\",\"color\":\"#83dea3\",\"dep\":\"Accounting\"},"}], "added": [{"char_start": 0, "char_end": 83, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kacy Mee\",\"color\":\"#f045f2\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 83, "char_end": 175, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Durant Grayham\",\"color\":\"#3cf6ca\",\"dep\":\"Product Management\"},\n"}, {"char_start": 175, "char_end": 260, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Walker Calvert\",\"color\":\"#fbfc86\",\"dep\":\"Engineering\"},\n"}, {"char_start": 260, "char_end": 340, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Neddy Willavize\",\"color\":\"#211946\",\"dep\":\"Legal\"},\n"}, {"char_start": 340, "char_end": 416, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Saidee Kahn\",\"color\":\"#614c0d\",\"dep\":\"Sales\"},\n"}, {"char_start": 416, "char_end": 497, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ania Eivers\",\"color\":\"#ad42fd\",\"dep\":\"Accounting\"},\n"}, {"char_start": 497, "char_end": 581, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Anatole McCaig\",\"color\":\"#106d3c\",\"dep\":\"Accounting\"},\n"}, {"char_start": 581, "char_end": 670, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Maxim Jakov\",\"color\":\"#d3b18f\",\"dep\":\"Product Management\"},\n"}, {"char_start": 670, "char_end": 757, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alastair Blumfield\",\"color\":\"#72dce6\",\"dep\":\"Marketing\"},\n"}, {"char_start": 757, "char_end": 836, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Syd Lashford\",\"color\":\"#a6f430\",\"dep\":\"Support\"},\n"}, {"char_start": 836, "char_end": 915, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Elysee Harcase\",\"color\":\"#4cbfc9\",\"dep\":\"Legal\"},\n"}, {"char_start": 915, "char_end": 1009, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Elise Bergstrand\",\"color\":\"#a3aa2a\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1009, "char_end": 1092, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Tedra Sommerton\",\"color\":\"#5654b1\",\"dep\":\"Training\"},\n"}, {"char_start": 1092, "char_end": 1170, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Janela Edgler\",\"color\":\"#ff0e49\",\"dep\":\"Sales\"},\n"}, {"char_start": 1170, "char_end": 1257, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Constantino Banasiak\",\"color\":\"#3a3adb\",\"dep\":\"Support\"},\n"}, {"char_start": 1257, "char_end": 1348, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Englebert Kantor\",\"color\":\"#c3b57c\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1348, "char_end": 1435, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Horatius Birmingham\",\"color\":\"#ff8cdc\",\"dep\":\"Training\"},\n"}, {"char_start": 1435, "char_end": 1532, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Pavlov Ludlem\",\"color\":\"#1bef0d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1532, "char_end": 1610, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Reamonn Skinn\",\"color\":\"#9e5d09\",\"dep\":\"Legal\"},\n"}, {"char_start": 1610, "char_end": 1693, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cortie Ceschini\",\"color\":\"#314918\",\"dep\":\"Training\"},\n"}, {"char_start": 1693, "char_end": 1768, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lion Antao\",\"color\":\"#3aac63\",\"dep\":\"Sales\"},\n"}, {"char_start": 1768, "char_end": 1854, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Marietta Killerby\",\"color\":\"#88ad52\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1854, "char_end": 1940, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashlee Kleszinski\",\"color\":\"#be75d4\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1940, "char_end": 2019, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Harper Yashnov\",\"color\":\"#acfa34\",\"dep\":\"Legal\"},\n"}, {"char_start": 2019, "char_end": 2101, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kattie Lipgens\",\"color\":\"#3ab72d\",\"dep\":\"Services\"},\n"}, {"char_start": 2101, "char_end": 2202, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rubia O'Duilleain\",\"color\":\"#347e25\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2202, "char_end": 2281, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Brit Harken\",\"color\":\"#20bb7e\",\"dep\":\"Services\"},\n"}, {"char_start": 2281, "char_end": 2377, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gwen Abelson\",\"color\":\"#b2e496\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2377, "char_end": 2458, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Herby Furphy\",\"color\":\"#834ce9\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2458, "char_end": 2544, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Estrella Harrinson\",\"color\":\"#487b87\",\"dep\":\"Training\"},\n"}, {"char_start": 2544, "char_end": 2639, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Willie Luna\",\"color\":\"#ae141a\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2639, "char_end": 2731, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Birch Bradshaw\",\"color\":\"#e0e58f\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2731, "char_end": 2820, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rea Byrkmyr\",\"color\":\"#8d1933\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2820, "char_end": 2905, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lishe Broszkiewicz\",\"color\":\"#8b8173\",\"dep\":\"Support\"},\n"}, {"char_start": 2905, "char_end": 2984, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Walt Bruin\",\"color\":\"#24fa94\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2984, "char_end": 3078, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Luca Romme\",\"color\":\"#c0f708\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3078, "char_end": 3174, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Torin Passie\",\"color\":\"#7e540a\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3174, "char_end": 3265, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rasla Wessing\",\"color\":\"#aa97ca\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3265, "char_end": 3355, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Chaunce Biss\",\"color\":\"#8533be\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3355, "char_end": 3436, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Janelle Lorey\",\"color\":\"#bfc5e0\",\"dep\":\"Training\"},\n"}, {"char_start": 3436, "char_end": 3517, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dottie Blew\",\"color\":\"#7910ec\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3517, "char_end": 3615, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hamil Bougourd\",\"color\":\"#9dc10c\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3615, "char_end": 3709, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Shanan Hapgood\",\"color\":\"#26375e\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3709, "char_end": 3802, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gordan Dauber\",\"color\":\"#23226a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3802, "char_end": 3887, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Carline Androletti\",\"color\":\"#3e7889\",\"dep\":\"Support\"},\n"}, {"char_start": 3887, "char_end": 3966, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Angelina Blaza\",\"color\":\"#954e59\",\"dep\":\"Sales\"},\n"}, {"char_start": 3966, "char_end": 4048, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ari Macconachy\",\"color\":\"#40c0bf\",\"dep\":\"Training\"},\n"}, {"char_start": 4048, "char_end": 4133, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Katrine Timlin\",\"color\":\"#6ed8c1\",\"dep\":\"Engineering\"},\n"}, {"char_start": 4133, "char_end": 4216, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lilli Clevely\",\"color\":\"#b8a081\",\"dep\":\"Accounting\"},\n"}, {"char_start": 4216, "char_end": 4300, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Siouxie Maleham\",\"color\":\"#83dea3\",\"dep\":\"Accounting\"},"}]}}
{"func_name": 13358, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"qpautothi@ocn.ne.jp\",\"title\":\"Quint Pautot\",\"color\":\"#dddccd\",\"dep\":\"Accounting\"},\n    {\"id\":\"dbartholomieuhj@mac.com\",\"title\":\"Dynah Bartholomieu\",\"color\":\"#6f796d\",\"dep\":\"Business Development\"},\n    {\"id\":\"sdymidowiczhk@wiley.com\",\"title\":\"Salomo Dymidowicz\",\"color\":\"#5cc8be\",\"dep\":\"Business Development\"},\n    {\"id\":\"wparsonagehl@toplist.cz\",\"title\":\"Wanda Parsonage\",\"color\":\"#9f8048\",\"dep\":\"Engineering\"},\n    {\"id\":\"rjohnceyhm@unblog.fr\",\"title\":\"Rowena Johncey\",\"color\":\"#482488\",\"dep\":\"Research and Development\"},\n    {\"id\":\"mstuddardhn@addthis.com\",\"title\":\"Marlie Studdard\",\"color\":\"#96b0db\",\"dep\":\"Support\"},\n    {\"id\":\"tduranteho@cocolog-nifty.com\",\"title\":\"Taddeo Durante\",\"color\":\"#1d179f\",\"dep\":\"Business Development\"},\n    {\"id\":\"bcleverlyhp@mlb.com\",\"title\":\"Brietta Cleverly\",\"color\":\"#60555d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"eoutridgehq@spiegel.de\",\"title\":\"Emelina Outridge\",\"color\":\"#1fac7a\",\"dep\":\"Research and Development\"},\n    {\"id\":\"fmeiklamhr@ebay.com\",\"title\":\"Filberto Meiklam\",\"color\":\"#dd2f66\",\"dep\":\"Support\"},\n    {\"id\":\"ccharlesworthhs@forbes.com\",\"title\":\"Carla Charlesworth\",\"color\":\"#1262a2\",\"dep\":\"Product Management\"},\n    {\"id\":\"fvsanelliht@nifty.com\",\"title\":\"Fredelia Vsanelli\",\"color\":\"#500f70\",\"dep\":\"Research and Development\"},\n    {\"id\":\"cmaddenhu@1und1.de\",\"title\":\"Cassius Madden\",\"color\":\"#022e81\",\"dep\":\"Human Resources\"},\n    {\"id\":\"wantonomolihv@businessweek.com\",\"title\":\"Waylen Antonomoli\",\"color\":\"#2cd190\",\"dep\":\"Product Management\"},\n    {\"id\":\"vmarkushkinhw@cdc.gov\",\"title\":\"Vivie Markushkin\",\"color\":\"#3296c7\",\"dep\":\"Product Management\"},\n    {\"id\":\"wbrimhx@meetup.com\",\"title\":\"Wallie Brim\",\"color\":\"#682212\",\"dep\":\"Services\"},\n    {\"id\":\"rsmeethhy@nytimes.com\",\"title\":\"Richardo Smeeth\",\"color\":\"#32fbfb\",\"dep\":\"Marketing\"},\n    {\"id\":\"pmollerhz@mtv.com\",\"title\":\"Phillis Moller\",\"color\":\"#ffe8d3\",\"dep\":\"Research and Development\"},\n    {\"id\":\"rsynani0@usatoday.com\",\"title\":\"Rosmunda Synan\",\"color\":\"#7709ed\",\"dep\":\"Research and Development\"},\n    {\"id\":\"dtorrei1@angelfire.com\",\"title\":\"Dunc Torre\",\"color\":\"#55562e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"ghousbeyi2@surveymonkey.com\",\"title\":\"Gerrard Housbey\",\"color\":\"#7282e2\",\"dep\":\"Training\"},\n    {\"id\":\"rtitheridgei3@vkontakte.ru\",\"title\":\"Rogers Titheridge\",\"color\":\"#2f3afa\",\"dep\":\"Product Management\"},\n    {\"id\":\"amcilraithi4@utexas.edu\",\"title\":\"Allistir McIlraith\",\"color\":\"#9b81eb\",\"dep\":\"Marketing\"},\n    {\"id\":\"rbroomhalli5@europa.eu\",\"title\":\"Ricki Broomhall\",\"color\":\"#b03ada\",\"dep\":\"Business Development\"},\n    {\"id\":\"sguieli6@va.gov\",\"title\":\"Sergent Guiel\",\"color\":\"#71941e\",\"dep\":\"Engineering\"},\n    {\"id\":\"cseamansi7@nyu.edu\",\"title\":\"Cordy Seamans\",\"color\":\"#0f8734\",\"dep\":\"Marketing\"},\n    {\"id\":\"ntintoi8@example.com\",\"title\":\"Nettie Tinto\",\"color\":\"#20ff28\",\"dep\":\"Support\"},\n    {\"id\":\"asilverstonei9@techcrunch.com\",\"title\":\"Arabel Silverstone\",\"color\":\"#4b8f01\",\"dep\":\"Services\"},\n    {\"id\":\"bcoultishia@ft.com\",\"title\":\"Berni Coultish\",\"color\":\"#f4598e\",\"dep\":\"Engineering\"},\n    {\"id\":\"dcraneyib@latimes.com\",\"title\":\"Doyle Craney\",\"color\":\"#6be7ef\",\"dep\":\"Legal\"},\n    {\"id\":\"cdowzellic@youku.com\",\"title\":\"Chaddie Dowzell\",\"color\":\"#2eb91a\",\"dep\":\"Accounting\"},\n    {\"id\":\"esafhillid@theguardian.com\",\"title\":\"Eada Safhill\",\"color\":\"#7161d5\",\"dep\":\"Training\"},\n    {\"id\":\"mmannieie@cloudflare.com\",\"title\":\"Merle Mannie\",\"color\":\"#658154\",\"dep\":\"Services\"},\n    {\"id\":\"hkrysztowczykif@comcast.net\",\"title\":\"Henryetta Krysztowczyk\",\"color\":\"#c5af06\",\"dep\":\"Sales\"},\n    {\"id\":\"mhanleyig@php.net\",\"title\":\"Morris Hanley\",\"color\":\"#8cef6f\",\"dep\":\"Business Development\"},\n    {\"id\":\"mduffillih@indiegogo.com\",\"title\":\"Martyn Duffill\",\"color\":\"#9ba6ec\",\"dep\":\"Product Management\"},\n    {\"id\":\"obruinsmaii@nasa.gov\",\"title\":\"Odo Bruinsma\",\"color\":\"#6c22fd\",\"dep\":\"Human Resources\"},\n    {\"id\":\"dtobinij@cnbc.com\",\"title\":\"Dominick Tobin\",\"color\":\"#4ef7c2\",\"dep\":\"Business Development\"},\n    {\"id\":\"mcridgeik@mapy.cz\",\"title\":\"Mattie Cridge\",\"color\":\"#33133c\",\"dep\":\"Support\"},\n    {\"id\":\"rchristopheil@twitpic.com\",\"title\":\"Rebeka Christophe\",\"color\":\"#52b620\",\"dep\":\"Accounting\"},\n    {\"id\":\"ihavelineim@yellowbook.com\",\"title\":\"Idalia Haveline\",\"color\":\"#352458\",\"dep\":\"Legal\"},\n    {\"id\":\"vferebeein@state.gov\",\"title\":\"Vince Ferebee\",\"color\":\"#83a38b\",\"dep\":\"Training\"},\n    {\"id\":\"mskellyio@tinypic.com\",\"title\":\"Myrtle Skelly\",\"color\":\"#5604e9\",\"dep\":\"Training\"},\n    {\"id\":\"mmathewip@youtu.be\",\"title\":\"Mathew Mathew\",\"color\":\"#5ab965\",\"dep\":\"Business Development\"},\n    {\"id\":\"gnorthiq@umich.edu\",\"title\":\"Gerhard North\",\"color\":\"#0d77da\",\"dep\":\"Sales\"},\n    {\"id\":\"emazellair@adobe.com\",\"title\":\"Estell Mazella\",\"color\":\"#1eb42a\",\"dep\":\"Business Development\"},\n    {\"id\":\"jsimonetonis@yandex.ru\",\"title\":\"Jacobo Simoneton\",\"color\":\"#88ef04\",\"dep\":\"Training\"},\n    {\"id\":\"gblakeit@ftc.gov\",\"title\":\"Gran Blake\",\"color\":\"#b36cc6\",\"dep\":\"Sales\"},\n    {\"id\":\"ckobkeiu@delicious.com\",\"title\":\"Corina Kobke\",\"color\":\"#fa1dd3\",\"dep\":\"Training\"},\n    {\"id\":\"bmacrorieiv@eepurl.com\",\"title\":\"Benedict MacRorie\",\"color\":\"#621636\",\"dep\":\"Accounting\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Quint Pautot\",\"color\":\"#dddccd\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dynah Bartholomieu\",\"color\":\"#6f796d\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Salomo Dymidowicz\",\"color\":\"#5cc8be\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Wanda Parsonage\",\"color\":\"#9f8048\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rowena Johncey\",\"color\":\"#482488\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Marlie Studdard\",\"color\":\"#96b0db\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Taddeo Durante\",\"color\":\"#1d179f\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Brietta Cleverly\",\"color\":\"#60555d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Emelina Outridge\",\"color\":\"#1fac7a\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Filberto Meiklam\",\"color\":\"#dd2f66\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Carla Charlesworth\",\"color\":\"#1262a2\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Fredelia Vsanelli\",\"color\":\"#500f70\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cassius Madden\",\"color\":\"#022e81\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Waylen Antonomoli\",\"color\":\"#2cd190\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Vivie Markushkin\",\"color\":\"#3296c7\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Wallie Brim\",\"color\":\"#682212\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Richardo Smeeth\",\"color\":\"#32fbfb\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Phillis Moller\",\"color\":\"#ffe8d3\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rosmunda Synan\",\"color\":\"#7709ed\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dunc Torre\",\"color\":\"#55562e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gerrard Housbey\",\"color\":\"#7282e2\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rogers Titheridge\",\"color\":\"#2f3afa\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Allistir McIlraith\",\"color\":\"#9b81eb\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ricki Broomhall\",\"color\":\"#b03ada\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sergent Guiel\",\"color\":\"#71941e\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cordy Seamans\",\"color\":\"#0f8734\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nettie Tinto\",\"color\":\"#20ff28\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Arabel Silverstone\",\"color\":\"#4b8f01\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Berni Coultish\",\"color\":\"#f4598e\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Doyle Craney\",\"color\":\"#6be7ef\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Chaddie Dowzell\",\"color\":\"#2eb91a\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Eada Safhill\",\"color\":\"#7161d5\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Merle Mannie\",\"color\":\"#658154\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Henryetta Krysztowczyk\",\"color\":\"#c5af06\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Morris Hanley\",\"color\":\"#8cef6f\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Martyn Duffill\",\"color\":\"#9ba6ec\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Odo Bruinsma\",\"color\":\"#6c22fd\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dominick Tobin\",\"color\":\"#4ef7c2\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mattie Cridge\",\"color\":\"#33133c\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rebeka Christophe\",\"color\":\"#52b620\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Idalia Haveline\",\"color\":\"#352458\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Vince Ferebee\",\"color\":\"#83a38b\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Myrtle Skelly\",\"color\":\"#5604e9\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mathew Mathew\",\"color\":\"#5ab965\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gerhard North\",\"color\":\"#0d77da\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Estell Mazella\",\"color\":\"#1eb42a\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jacobo Simoneton\",\"color\":\"#88ef04\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gran Blake\",\"color\":\"#b36cc6\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Corina Kobke\",\"color\":\"#fa1dd3\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Benedict MacRorie\",\"color\":\"#621636\",\"dep\":\"Accounting\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 94, "line": "    {\"id\":\"qpautothi@ocn.ne.jp\",\"title\":\"Quint Pautot\",\"color\":\"#dddccd\",\"dep\":\"Accounting\"},\n"}, {"line_no": 3, "char_start": 82, "char_end": 196, "line": "    {\"id\":\"dbartholomieuhj@mac.com\",\"title\":\"Dynah Bartholomieu\",\"color\":\"#6f796d\",\"dep\":\"Business Development\"},\n"}, {"line_no": 5, "char_start": 180, "char_end": 293, "line": "    {\"id\":\"sdymidowiczhk@wiley.com\",\"title\":\"Salomo Dymidowicz\",\"color\":\"#5cc8be\",\"dep\":\"Business Development\"},\n"}, {"line_no": 7, "char_start": 277, "char_end": 379, "line": "    {\"id\":\"wparsonagehl@toplist.cz\",\"title\":\"Wanda Parsonage\",\"color\":\"#9f8048\",\"dep\":\"Engineering\"},\n"}, {"line_no": 9, "char_start": 363, "char_end": 474, "line": "    {\"id\":\"rjohnceyhm@unblog.fr\",\"title\":\"Rowena Johncey\",\"color\":\"#482488\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 11, "char_start": 461, "char_end": 559, "line": "    {\"id\":\"mstuddardhn@addthis.com\",\"title\":\"Marlie Studdard\",\"color\":\"#96b0db\",\"dep\":\"Support\"},\n"}, {"line_no": 13, "char_start": 543, "char_end": 658, "line": "    {\"id\":\"tduranteho@cocolog-nifty.com\",\"title\":\"Taddeo Durante\",\"color\":\"#1d179f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 15, "char_start": 637, "char_end": 749, "line": "    {\"id\":\"bcleverlyhp@mlb.com\",\"title\":\"Brietta Cleverly\",\"color\":\"#60555d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 17, "char_start": 737, "char_end": 852, "line": "    {\"id\":\"eoutridgehq@spiegel.de\",\"title\":\"Emelina Outridge\",\"color\":\"#1fac7a\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 19, "char_start": 837, "char_end": 932, "line": "    {\"id\":\"fmeiklamhr@ebay.com\",\"title\":\"Filberto Meiklam\",\"color\":\"#dd2f66\",\"dep\":\"Support\"},\n"}, {"line_no": 21, "char_start": 920, "char_end": 1035, "line": "    {\"id\":\"ccharlesworthhs@forbes.com\",\"title\":\"Carla Charlesworth\",\"color\":\"#1262a2\",\"dep\":\"Product Management\"},\n"}, {"line_no": 23, "char_start": 1016, "char_end": 1131, "line": "    {\"id\":\"fvsanelliht@nifty.com\",\"title\":\"Fredelia Vsanelli\",\"color\":\"#500f70\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 25, "char_start": 1117, "char_end": 1217, "line": "    {\"id\":\"cmaddenhu@1und1.de\",\"title\":\"Cassius Madden\",\"color\":\"#022e81\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 27, "char_start": 1206, "char_end": 1324, "line": "    {\"id\":\"wantonomolihv@businessweek.com\",\"title\":\"Waylen Antonomoli\",\"color\":\"#2cd190\",\"dep\":\"Product Management\"},\n"}, {"line_no": 29, "char_start": 1301, "char_end": 1409, "line": "    {\"id\":\"vmarkushkinhw@cdc.gov\",\"title\":\"Vivie Markushkin\",\"color\":\"#3296c7\",\"dep\":\"Product Management\"},\n"}, {"line_no": 31, "char_start": 1395, "char_end": 1485, "line": "    {\"id\":\"wbrimhx@meetup.com\",\"title\":\"Wallie Brim\",\"color\":\"#682212\",\"dep\":\"Services\"},\n"}, {"line_no": 33, "char_start": 1474, "char_end": 1572, "line": "    {\"id\":\"rsmeethhy@nytimes.com\",\"title\":\"Richardo Smeeth\",\"color\":\"#32fbfb\",\"dep\":\"Marketing\"},\n"}, {"line_no": 35, "char_start": 1558, "char_end": 1666, "line": "    {\"id\":\"pmollerhz@mtv.com\",\"title\":\"Phillis Moller\",\"color\":\"#ffe8d3\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 37, "char_start": 1656, "char_end": 1768, "line": "    {\"id\":\"rsynani0@usatoday.com\",\"title\":\"Rosmunda Synan\",\"color\":\"#7709ed\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 39, "char_start": 1754, "char_end": 1854, "line": "    {\"id\":\"dtorrei1@angelfire.com\",\"title\":\"Dunc Torre\",\"color\":\"#55562e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 41, "char_start": 1839, "char_end": 1942, "line": "    {\"id\":\"ghousbeyi2@surveymonkey.com\",\"title\":\"Gerrard Housbey\",\"color\":\"#7282e2\",\"dep\":\"Training\"},\n"}, {"line_no": 43, "char_start": 1922, "char_end": 2036, "line": "    {\"id\":\"rtitheridgei3@vkontakte.ru\",\"title\":\"Rogers Titheridge\",\"color\":\"#2f3afa\",\"dep\":\"Product Management\"},\n"}, {"line_no": 45, "char_start": 2017, "char_end": 2120, "line": "    {\"id\":\"amcilraithi4@utexas.edu\",\"title\":\"Allistir McIlraith\",\"color\":\"#9b81eb\",\"dep\":\"Marketing\"},\n"}, {"line_no": 47, "char_start": 2104, "char_end": 2214, "line": "    {\"id\":\"rbroomhalli5@europa.eu\",\"title\":\"Ricki Broomhall\",\"color\":\"#b03ada\",\"dep\":\"Business Development\"},\n"}, {"line_no": 49, "char_start": 2199, "char_end": 2291, "line": "    {\"id\":\"sguieli6@va.gov\",\"title\":\"Sergent Guiel\",\"color\":\"#71941e\",\"dep\":\"Engineering\"},\n"}, {"line_no": 51, "char_start": 2283, "char_end": 2376, "line": "    {\"id\":\"cseamansi7@nyu.edu\",\"title\":\"Cordy Seamans\",\"color\":\"#0f8734\",\"dep\":\"Marketing\"},\n"}, {"line_no": 53, "char_start": 2365, "char_end": 2457, "line": "    {\"id\":\"ntintoi8@example.com\",\"title\":\"Nettie Tinto\",\"color\":\"#20ff28\",\"dep\":\"Support\"},\n"}, {"line_no": 55, "char_start": 2444, "char_end": 2552, "line": "    {\"id\":\"asilverstonei9@techcrunch.com\",\"title\":\"Arabel Silverstone\",\"color\":\"#4b8f01\",\"dep\":\"Services\"},\n"}, {"line_no": 57, "char_start": 2530, "char_end": 2626, "line": "    {\"id\":\"bcoultishia@ft.com\",\"title\":\"Berni Coultish\",\"color\":\"#f4598e\",\"dep\":\"Engineering\"},\n"}, {"line_no": 59, "char_start": 2615, "char_end": 2706, "line": "    {\"id\":\"dcraneyib@latimes.com\",\"title\":\"Doyle Craney\",\"color\":\"#6be7ef\",\"dep\":\"Legal\"},\n"}, {"line_no": 61, "char_start": 2692, "char_end": 2790, "line": "    {\"id\":\"cdowzellic@youku.com\",\"title\":\"Chaddie Dowzell\",\"color\":\"#2eb91a\",\"dep\":\"Accounting\"},\n"}, {"line_no": 63, "char_start": 2777, "char_end": 2876, "line": "    {\"id\":\"esafhillid@theguardian.com\",\"title\":\"Eada Safhill\",\"color\":\"#7161d5\",\"dep\":\"Training\"},\n"}, {"line_no": 65, "char_start": 2857, "char_end": 2954, "line": "    {\"id\":\"mmannieie@cloudflare.com\",\"title\":\"Merle Mannie\",\"color\":\"#658154\",\"dep\":\"Services\"},\n"}, {"line_no": 67, "char_start": 2937, "char_end": 3044, "line": "    {\"id\":\"hkrysztowczykif@comcast.net\",\"title\":\"Henryetta Krysztowczyk\",\"color\":\"#c5af06\",\"dep\":\"Sales\"},\n"}, {"line_no": 69, "char_start": 3024, "char_end": 3127, "line": "    {\"id\":\"mhanleyig@php.net\",\"title\":\"Morris Hanley\",\"color\":\"#8cef6f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 71, "char_start": 3117, "char_end": 3226, "line": "    {\"id\":\"mduffillih@indiegogo.com\",\"title\":\"Martyn Duffill\",\"color\":\"#9ba6ec\",\"dep\":\"Product Management\"},\n"}, {"line_no": 73, "char_start": 3209, "char_end": 3309, "line": "    {\"id\":\"obruinsmaii@nasa.gov\",\"title\":\"Odo Bruinsma\",\"color\":\"#6c22fd\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 75, "char_start": 3296, "char_end": 3400, "line": "    {\"id\":\"dtobinij@cnbc.com\",\"title\":\"Dominick Tobin\",\"color\":\"#4ef7c2\",\"dep\":\"Business Development\"},\n"}, {"line_no": 77, "char_start": 3390, "char_end": 3480, "line": "    {\"id\":\"mcridgeik@mapy.cz\",\"title\":\"Mattie Cridge\",\"color\":\"#33133c\",\"dep\":\"Support\"},\n"}, {"line_no": 79, "char_start": 3470, "char_end": 3575, "line": "    {\"id\":\"rchristopheil@twitpic.com\",\"title\":\"Rebeka Christophe\",\"color\":\"#52b620\",\"dep\":\"Accounting\"},\n"}, {"line_no": 81, "char_start": 3557, "char_end": 3656, "line": "    {\"id\":\"ihavelineim@yellowbook.com\",\"title\":\"Idalia Haveline\",\"color\":\"#352458\",\"dep\":\"Legal\"},\n"}, {"line_no": 83, "char_start": 3637, "char_end": 3731, "line": "    {\"id\":\"vferebeein@state.gov\",\"title\":\"Vince Ferebee\",\"color\":\"#83a38b\",\"dep\":\"Training\"},\n"}, {"line_no": 85, "char_start": 3718, "char_end": 3813, "line": "    {\"id\":\"mskellyio@tinypic.com\",\"title\":\"Myrtle Skelly\",\"color\":\"#5604e9\",\"dep\":\"Training\"},\n"}, {"line_no": 87, "char_start": 3799, "char_end": 3903, "line": "    {\"id\":\"mmathewip@youtu.be\",\"title\":\"Mathew Mathew\",\"color\":\"#5ab965\",\"dep\":\"Business Development\"},\n"}, {"line_no": 89, "char_start": 3892, "char_end": 3981, "line": "    {\"id\":\"gnorthiq@umich.edu\",\"title\":\"Gerhard North\",\"color\":\"#0d77da\",\"dep\":\"Sales\"},\n"}, {"line_no": 91, "char_start": 3970, "char_end": 4077, "line": "    {\"id\":\"emazellair@adobe.com\",\"title\":\"Estell Mazella\",\"color\":\"#1eb42a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 93, "char_start": 4064, "char_end": 4163, "line": "    {\"id\":\"jsimonetonis@yandex.ru\",\"title\":\"Jacobo Simoneton\",\"color\":\"#88ef04\",\"dep\":\"Training\"},\n"}, {"line_no": 95, "char_start": 4148, "char_end": 4232, "line": "    {\"id\":\"gblakeit@ftc.gov\",\"title\":\"Gran Blake\",\"color\":\"#b36cc6\",\"dep\":\"Sales\"},\n"}, {"line_no": 97, "char_start": 4223, "char_end": 4318, "line": "    {\"id\":\"ckobkeiu@delicious.com\",\"title\":\"Corina Kobke\",\"color\":\"#fa1dd3\",\"dep\":\"Training\"},\n"}, {"line_no": 99, "char_start": 4303, "char_end": 4404, "line": "    {\"id\":\"bmacrorieiv@eepurl.com\",\"title\":\"Benedict MacRorie\",\"color\":\"#621636\",\"dep\":\"Accounting\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 82, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Quint Pautot\",\"color\":\"#dddccd\",\"dep\":\"Accounting\"},\n"}, {"line_no": 4, "char_start": 82, "char_end": 180, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dynah Bartholomieu\",\"color\":\"#6f796d\",\"dep\":\"Business Development\"},\n"}, {"line_no": 6, "char_start": 180, "char_end": 277, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Salomo Dymidowicz\",\"color\":\"#5cc8be\",\"dep\":\"Business Development\"},\n"}, {"line_no": 8, "char_start": 277, "char_end": 363, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Wanda Parsonage\",\"color\":\"#9f8048\",\"dep\":\"Engineering\"},\n"}, {"line_no": 10, "char_start": 363, "char_end": 461, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rowena Johncey\",\"color\":\"#482488\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 12, "char_start": 461, "char_end": 543, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Marlie Studdard\",\"color\":\"#96b0db\",\"dep\":\"Support\"},\n"}, {"line_no": 14, "char_start": 543, "char_end": 637, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Taddeo Durante\",\"color\":\"#1d179f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 16, "char_start": 637, "char_end": 737, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Brietta Cleverly\",\"color\":\"#60555d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 18, "char_start": 737, "char_end": 837, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Emelina Outridge\",\"color\":\"#1fac7a\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 20, "char_start": 837, "char_end": 920, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Filberto Meiklam\",\"color\":\"#dd2f66\",\"dep\":\"Support\"},\n"}, {"line_no": 22, "char_start": 920, "char_end": 1016, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Carla Charlesworth\",\"color\":\"#1262a2\",\"dep\":\"Product Management\"},\n"}, {"line_no": 24, "char_start": 1016, "char_end": 1117, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Fredelia Vsanelli\",\"color\":\"#500f70\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 26, "char_start": 1117, "char_end": 1206, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cassius Madden\",\"color\":\"#022e81\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 28, "char_start": 1206, "char_end": 1301, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Waylen Antonomoli\",\"color\":\"#2cd190\",\"dep\":\"Product Management\"},\n"}, {"line_no": 30, "char_start": 1301, "char_end": 1395, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Vivie Markushkin\",\"color\":\"#3296c7\",\"dep\":\"Product Management\"},\n"}, {"line_no": 32, "char_start": 1395, "char_end": 1474, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Wallie Brim\",\"color\":\"#682212\",\"dep\":\"Services\"},\n"}, {"line_no": 34, "char_start": 1474, "char_end": 1558, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Richardo Smeeth\",\"color\":\"#32fbfb\",\"dep\":\"Marketing\"},\n"}, {"line_no": 36, "char_start": 1558, "char_end": 1656, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Phillis Moller\",\"color\":\"#ffe8d3\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 38, "char_start": 1656, "char_end": 1754, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rosmunda Synan\",\"color\":\"#7709ed\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 40, "char_start": 1754, "char_end": 1839, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dunc Torre\",\"color\":\"#55562e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 42, "char_start": 1839, "char_end": 1922, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gerrard Housbey\",\"color\":\"#7282e2\",\"dep\":\"Training\"},\n"}, {"line_no": 44, "char_start": 1922, "char_end": 2017, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rogers Titheridge\",\"color\":\"#2f3afa\",\"dep\":\"Product Management\"},\n"}, {"line_no": 46, "char_start": 2017, "char_end": 2104, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Allistir McIlraith\",\"color\":\"#9b81eb\",\"dep\":\"Marketing\"},\n"}, {"line_no": 48, "char_start": 2104, "char_end": 2199, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ricki Broomhall\",\"color\":\"#b03ada\",\"dep\":\"Business Development\"},\n"}, {"line_no": 50, "char_start": 2199, "char_end": 2283, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sergent Guiel\",\"color\":\"#71941e\",\"dep\":\"Engineering\"},\n"}, {"line_no": 52, "char_start": 2283, "char_end": 2365, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cordy Seamans\",\"color\":\"#0f8734\",\"dep\":\"Marketing\"},\n"}, {"line_no": 54, "char_start": 2365, "char_end": 2444, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nettie Tinto\",\"color\":\"#20ff28\",\"dep\":\"Support\"},\n"}, {"line_no": 56, "char_start": 2444, "char_end": 2530, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Arabel Silverstone\",\"color\":\"#4b8f01\",\"dep\":\"Services\"},\n"}, {"line_no": 58, "char_start": 2530, "char_end": 2615, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Berni Coultish\",\"color\":\"#f4598e\",\"dep\":\"Engineering\"},\n"}, {"line_no": 60, "char_start": 2615, "char_end": 2692, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Doyle Craney\",\"color\":\"#6be7ef\",\"dep\":\"Legal\"},\n"}, {"line_no": 62, "char_start": 2692, "char_end": 2777, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Chaddie Dowzell\",\"color\":\"#2eb91a\",\"dep\":\"Accounting\"},\n"}, {"line_no": 64, "char_start": 2777, "char_end": 2857, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Eada Safhill\",\"color\":\"#7161d5\",\"dep\":\"Training\"},\n"}, {"line_no": 66, "char_start": 2857, "char_end": 2937, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Merle Mannie\",\"color\":\"#658154\",\"dep\":\"Services\"},\n"}, {"line_no": 68, "char_start": 2937, "char_end": 3024, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Henryetta Krysztowczyk\",\"color\":\"#c5af06\",\"dep\":\"Sales\"},\n"}, {"line_no": 70, "char_start": 3024, "char_end": 3117, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Morris Hanley\",\"color\":\"#8cef6f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 72, "char_start": 3117, "char_end": 3209, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Martyn Duffill\",\"color\":\"#9ba6ec\",\"dep\":\"Product Management\"},\n"}, {"line_no": 74, "char_start": 3209, "char_end": 3296, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Odo Bruinsma\",\"color\":\"#6c22fd\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 76, "char_start": 3296, "char_end": 3390, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dominick Tobin\",\"color\":\"#4ef7c2\",\"dep\":\"Business Development\"},\n"}, {"line_no": 78, "char_start": 3390, "char_end": 3470, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mattie Cridge\",\"color\":\"#33133c\",\"dep\":\"Support\"},\n"}, {"line_no": 80, "char_start": 3470, "char_end": 3557, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rebeka Christophe\",\"color\":\"#52b620\",\"dep\":\"Accounting\"},\n"}, {"line_no": 82, "char_start": 3557, "char_end": 3637, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Idalia Haveline\",\"color\":\"#352458\",\"dep\":\"Legal\"},\n"}, {"line_no": 84, "char_start": 3637, "char_end": 3718, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Vince Ferebee\",\"color\":\"#83a38b\",\"dep\":\"Training\"},\n"}, {"line_no": 86, "char_start": 3718, "char_end": 3799, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Myrtle Skelly\",\"color\":\"#5604e9\",\"dep\":\"Training\"},\n"}, {"line_no": 88, "char_start": 3799, "char_end": 3892, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mathew Mathew\",\"color\":\"#5ab965\",\"dep\":\"Business Development\"},\n"}, {"line_no": 90, "char_start": 3892, "char_end": 3970, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gerhard North\",\"color\":\"#0d77da\",\"dep\":\"Sales\"},\n"}, {"line_no": 92, "char_start": 3970, "char_end": 4064, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Estell Mazella\",\"color\":\"#1eb42a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 94, "char_start": 4064, "char_end": 4148, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jacobo Simoneton\",\"color\":\"#88ef04\",\"dep\":\"Training\"},\n"}, {"line_no": 96, "char_start": 4148, "char_end": 4223, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gran Blake\",\"color\":\"#b36cc6\",\"dep\":\"Sales\"},\n"}, {"line_no": 98, "char_start": 4223, "char_end": 4303, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Corina Kobke\",\"color\":\"#fa1dd3\",\"dep\":\"Training\"},\n"}, {"line_no": 100, "char_start": 4303, "char_end": 4389, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Benedict MacRorie\",\"color\":\"#621636\",\"dep\":\"Accounting\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 94, "chars": "    {\"id\":\"qpautothi@ocn.ne.jp\",\"title\":\"Quint Pautot\",\"color\":\"#dddccd\",\"dep\":\"Accounting\"},\n"}, {"char_start": 82, "char_end": 196, "chars": "    {\"id\":\"dbartholomieuhj@mac.com\",\"title\":\"Dynah Bartholomieu\",\"color\":\"#6f796d\",\"dep\":\"Business Development\"},\n"}, {"char_start": 180, "char_end": 293, "chars": "    {\"id\":\"sdymidowiczhk@wiley.com\",\"title\":\"Salomo Dymidowicz\",\"color\":\"#5cc8be\",\"dep\":\"Business Development\"},\n"}, {"char_start": 277, "char_end": 379, "chars": "    {\"id\":\"wparsonagehl@toplist.cz\",\"title\":\"Wanda Parsonage\",\"color\":\"#9f8048\",\"dep\":\"Engineering\"},\n"}, {"char_start": 363, "char_end": 474, "chars": "    {\"id\":\"rjohnceyhm@unblog.fr\",\"title\":\"Rowena Johncey\",\"color\":\"#482488\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 461, "char_end": 559, "chars": "    {\"id\":\"mstuddardhn@addthis.com\",\"title\":\"Marlie Studdard\",\"color\":\"#96b0db\",\"dep\":\"Support\"},\n"}, {"char_start": 543, "char_end": 658, "chars": "    {\"id\":\"tduranteho@cocolog-nifty.com\",\"title\":\"Taddeo Durante\",\"color\":\"#1d179f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 637, "char_end": 749, "chars": "    {\"id\":\"bcleverlyhp@mlb.com\",\"title\":\"Brietta Cleverly\",\"color\":\"#60555d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 737, "char_end": 852, "chars": "    {\"id\":\"eoutridgehq@spiegel.de\",\"title\":\"Emelina Outridge\",\"color\":\"#1fac7a\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 837, "char_end": 932, "chars": "    {\"id\":\"fmeiklamhr@ebay.com\",\"title\":\"Filberto Meiklam\",\"color\":\"#dd2f66\",\"dep\":\"Support\"},\n"}, {"char_start": 920, "char_end": 1035, "chars": "    {\"id\":\"ccharlesworthhs@forbes.com\",\"title\":\"Carla Charlesworth\",\"color\":\"#1262a2\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1016, "char_end": 1131, "chars": "    {\"id\":\"fvsanelliht@nifty.com\",\"title\":\"Fredelia Vsanelli\",\"color\":\"#500f70\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1117, "char_end": 1217, "chars": "    {\"id\":\"cmaddenhu@1und1.de\",\"title\":\"Cassius Madden\",\"color\":\"#022e81\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1206, "char_end": 1324, "chars": "    {\"id\":\"wantonomolihv@businessweek.com\",\"title\":\"Waylen Antonomoli\",\"color\":\"#2cd190\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1301, "char_end": 1409, "chars": "    {\"id\":\"vmarkushkinhw@cdc.gov\",\"title\":\"Vivie Markushkin\",\"color\":\"#3296c7\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1395, "char_end": 1485, "chars": "    {\"id\":\"wbrimhx@meetup.com\",\"title\":\"Wallie Brim\",\"color\":\"#682212\",\"dep\":\"Services\"},\n"}, {"char_start": 1474, "char_end": 1572, "chars": "    {\"id\":\"rsmeethhy@nytimes.com\",\"title\":\"Richardo Smeeth\",\"color\":\"#32fbfb\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1558, "char_end": 1666, "chars": "    {\"id\":\"pmollerhz@mtv.com\",\"title\":\"Phillis Moller\",\"color\":\"#ffe8d3\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1656, "char_end": 1768, "chars": "    {\"id\":\"rsynani0@usatoday.com\",\"title\":\"Rosmunda Synan\",\"color\":\"#7709ed\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1754, "char_end": 1854, "chars": "    {\"id\":\"dtorrei1@angelfire.com\",\"title\":\"Dunc Torre\",\"color\":\"#55562e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1839, "char_end": 1942, "chars": "    {\"id\":\"ghousbeyi2@surveymonkey.com\",\"title\":\"Gerrard Housbey\",\"color\":\"#7282e2\",\"dep\":\"Training\"},\n"}, {"char_start": 1922, "char_end": 2036, "chars": "    {\"id\":\"rtitheridgei3@vkontakte.ru\",\"title\":\"Rogers Titheridge\",\"color\":\"#2f3afa\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2017, "char_end": 2120, "chars": "    {\"id\":\"amcilraithi4@utexas.edu\",\"title\":\"Allistir McIlraith\",\"color\":\"#9b81eb\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2104, "char_end": 2214, "chars": "    {\"id\":\"rbroomhalli5@europa.eu\",\"title\":\"Ricki Broomhall\",\"color\":\"#b03ada\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2199, "char_end": 2291, "chars": "    {\"id\":\"sguieli6@va.gov\",\"title\":\"Sergent Guiel\",\"color\":\"#71941e\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2283, "char_end": 2376, "chars": "    {\"id\":\"cseamansi7@nyu.edu\",\"title\":\"Cordy Seamans\",\"color\":\"#0f8734\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2365, "char_end": 2457, "chars": "    {\"id\":\"ntintoi8@example.com\",\"title\":\"Nettie Tinto\",\"color\":\"#20ff28\",\"dep\":\"Support\"},\n"}, {"char_start": 2444, "char_end": 2552, "chars": "    {\"id\":\"asilverstonei9@techcrunch.com\",\"title\":\"Arabel Silverstone\",\"color\":\"#4b8f01\",\"dep\":\"Services\"},\n"}, {"char_start": 2530, "char_end": 2626, "chars": "    {\"id\":\"bcoultishia@ft.com\",\"title\":\"Berni Coultish\",\"color\":\"#f4598e\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2615, "char_end": 2706, "chars": "    {\"id\":\"dcraneyib@latimes.com\",\"title\":\"Doyle Craney\",\"color\":\"#6be7ef\",\"dep\":\"Legal\"},\n"}, {"char_start": 2692, "char_end": 2790, "chars": "    {\"id\":\"cdowzellic@youku.com\",\"title\":\"Chaddie Dowzell\",\"color\":\"#2eb91a\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2777, "char_end": 2876, "chars": "    {\"id\":\"esafhillid@theguardian.com\",\"title\":\"Eada Safhill\",\"color\":\"#7161d5\",\"dep\":\"Training\"},\n"}, {"char_start": 2857, "char_end": 2954, "chars": "    {\"id\":\"mmannieie@cloudflare.com\",\"title\":\"Merle Mannie\",\"color\":\"#658154\",\"dep\":\"Services\"},\n"}, {"char_start": 2937, "char_end": 3044, "chars": "    {\"id\":\"hkrysztowczykif@comcast.net\",\"title\":\"Henryetta Krysztowczyk\",\"color\":\"#c5af06\",\"dep\":\"Sales\"},\n"}, {"char_start": 3024, "char_end": 3127, "chars": "    {\"id\":\"mhanleyig@php.net\",\"title\":\"Morris Hanley\",\"color\":\"#8cef6f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3117, "char_end": 3226, "chars": "    {\"id\":\"mduffillih@indiegogo.com\",\"title\":\"Martyn Duffill\",\"color\":\"#9ba6ec\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3209, "char_end": 3309, "chars": "    {\"id\":\"obruinsmaii@nasa.gov\",\"title\":\"Odo Bruinsma\",\"color\":\"#6c22fd\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3296, "char_end": 3400, "chars": "    {\"id\":\"dtobinij@cnbc.com\",\"title\":\"Dominick Tobin\",\"color\":\"#4ef7c2\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3390, "char_end": 3480, "chars": "    {\"id\":\"mcridgeik@mapy.cz\",\"title\":\"Mattie Cridge\",\"color\":\"#33133c\",\"dep\":\"Support\"},\n"}, {"char_start": 3470, "char_end": 3575, "chars": "    {\"id\":\"rchristopheil@twitpic.com\",\"title\":\"Rebeka Christophe\",\"color\":\"#52b620\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3557, "char_end": 3656, "chars": "    {\"id\":\"ihavelineim@yellowbook.com\",\"title\":\"Idalia Haveline\",\"color\":\"#352458\",\"dep\":\"Legal\"},\n"}, {"char_start": 3637, "char_end": 3731, "chars": "    {\"id\":\"vferebeein@state.gov\",\"title\":\"Vince Ferebee\",\"color\":\"#83a38b\",\"dep\":\"Training\"},\n"}, {"char_start": 3718, "char_end": 3813, "chars": "    {\"id\":\"mskellyio@tinypic.com\",\"title\":\"Myrtle Skelly\",\"color\":\"#5604e9\",\"dep\":\"Training\"},\n"}, {"char_start": 3799, "char_end": 3903, "chars": "    {\"id\":\"mmathewip@youtu.be\",\"title\":\"Mathew Mathew\",\"color\":\"#5ab965\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3892, "char_end": 3981, "chars": "    {\"id\":\"gnorthiq@umich.edu\",\"title\":\"Gerhard North\",\"color\":\"#0d77da\",\"dep\":\"Sales\"},\n"}, {"char_start": 3970, "char_end": 4077, "chars": "    {\"id\":\"emazellair@adobe.com\",\"title\":\"Estell Mazella\",\"color\":\"#1eb42a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4064, "char_end": 4163, "chars": "    {\"id\":\"jsimonetonis@yandex.ru\",\"title\":\"Jacobo Simoneton\",\"color\":\"#88ef04\",\"dep\":\"Training\"},\n"}, {"char_start": 4148, "char_end": 4232, "chars": "    {\"id\":\"gblakeit@ftc.gov\",\"title\":\"Gran Blake\",\"color\":\"#b36cc6\",\"dep\":\"Sales\"},\n"}, {"char_start": 4223, "char_end": 4318, "chars": "    {\"id\":\"ckobkeiu@delicious.com\",\"title\":\"Corina Kobke\",\"color\":\"#fa1dd3\",\"dep\":\"Training\"},\n"}, {"char_start": 4303, "char_end": 4404, "chars": "    {\"id\":\"bmacrorieiv@eepurl.com\",\"title\":\"Benedict MacRorie\",\"color\":\"#621636\",\"dep\":\"Accounting\"},"}], "added": [{"char_start": 0, "char_end": 82, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Quint Pautot\",\"color\":\"#dddccd\",\"dep\":\"Accounting\"},\n"}, {"char_start": 82, "char_end": 180, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dynah Bartholomieu\",\"color\":\"#6f796d\",\"dep\":\"Business Development\"},\n"}, {"char_start": 180, "char_end": 277, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Salomo Dymidowicz\",\"color\":\"#5cc8be\",\"dep\":\"Business Development\"},\n"}, {"char_start": 277, "char_end": 363, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Wanda Parsonage\",\"color\":\"#9f8048\",\"dep\":\"Engineering\"},\n"}, {"char_start": 363, "char_end": 461, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rowena Johncey\",\"color\":\"#482488\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 461, "char_end": 543, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Marlie Studdard\",\"color\":\"#96b0db\",\"dep\":\"Support\"},\n"}, {"char_start": 543, "char_end": 637, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Taddeo Durante\",\"color\":\"#1d179f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 637, "char_end": 737, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Brietta Cleverly\",\"color\":\"#60555d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 737, "char_end": 837, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Emelina Outridge\",\"color\":\"#1fac7a\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 837, "char_end": 920, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Filberto Meiklam\",\"color\":\"#dd2f66\",\"dep\":\"Support\"},\n"}, {"char_start": 920, "char_end": 1016, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Carla Charlesworth\",\"color\":\"#1262a2\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1016, "char_end": 1117, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Fredelia Vsanelli\",\"color\":\"#500f70\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1117, "char_end": 1206, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cassius Madden\",\"color\":\"#022e81\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1206, "char_end": 1301, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Waylen Antonomoli\",\"color\":\"#2cd190\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1301, "char_end": 1395, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Vivie Markushkin\",\"color\":\"#3296c7\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1395, "char_end": 1474, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Wallie Brim\",\"color\":\"#682212\",\"dep\":\"Services\"},\n"}, {"char_start": 1474, "char_end": 1558, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Richardo Smeeth\",\"color\":\"#32fbfb\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1558, "char_end": 1656, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Phillis Moller\",\"color\":\"#ffe8d3\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1656, "char_end": 1754, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rosmunda Synan\",\"color\":\"#7709ed\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1754, "char_end": 1839, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dunc Torre\",\"color\":\"#55562e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1839, "char_end": 1922, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gerrard Housbey\",\"color\":\"#7282e2\",\"dep\":\"Training\"},\n"}, {"char_start": 1922, "char_end": 2017, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rogers Titheridge\",\"color\":\"#2f3afa\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2017, "char_end": 2104, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Allistir McIlraith\",\"color\":\"#9b81eb\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2104, "char_end": 2199, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ricki Broomhall\",\"color\":\"#b03ada\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2199, "char_end": 2283, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sergent Guiel\",\"color\":\"#71941e\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2283, "char_end": 2365, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cordy Seamans\",\"color\":\"#0f8734\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2365, "char_end": 2444, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nettie Tinto\",\"color\":\"#20ff28\",\"dep\":\"Support\"},\n"}, {"char_start": 2444, "char_end": 2530, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Arabel Silverstone\",\"color\":\"#4b8f01\",\"dep\":\"Services\"},\n"}, {"char_start": 2530, "char_end": 2615, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Berni Coultish\",\"color\":\"#f4598e\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2615, "char_end": 2692, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Doyle Craney\",\"color\":\"#6be7ef\",\"dep\":\"Legal\"},\n"}, {"char_start": 2692, "char_end": 2777, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Chaddie Dowzell\",\"color\":\"#2eb91a\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2777, "char_end": 2857, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Eada Safhill\",\"color\":\"#7161d5\",\"dep\":\"Training\"},\n"}, {"char_start": 2857, "char_end": 2937, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Merle Mannie\",\"color\":\"#658154\",\"dep\":\"Services\"},\n"}, {"char_start": 2937, "char_end": 3024, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Henryetta Krysztowczyk\",\"color\":\"#c5af06\",\"dep\":\"Sales\"},\n"}, {"char_start": 3024, "char_end": 3117, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Morris Hanley\",\"color\":\"#8cef6f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3117, "char_end": 3209, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Martyn Duffill\",\"color\":\"#9ba6ec\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3209, "char_end": 3296, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Odo Bruinsma\",\"color\":\"#6c22fd\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3296, "char_end": 3390, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dominick Tobin\",\"color\":\"#4ef7c2\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3390, "char_end": 3470, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mattie Cridge\",\"color\":\"#33133c\",\"dep\":\"Support\"},\n"}, {"char_start": 3470, "char_end": 3557, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rebeka Christophe\",\"color\":\"#52b620\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3557, "char_end": 3637, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Idalia Haveline\",\"color\":\"#352458\",\"dep\":\"Legal\"},\n"}, {"char_start": 3637, "char_end": 3718, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Vince Ferebee\",\"color\":\"#83a38b\",\"dep\":\"Training\"},\n"}, {"char_start": 3718, "char_end": 3799, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Myrtle Skelly\",\"color\":\"#5604e9\",\"dep\":\"Training\"},\n"}, {"char_start": 3799, "char_end": 3892, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mathew Mathew\",\"color\":\"#5ab965\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3892, "char_end": 3970, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gerhard North\",\"color\":\"#0d77da\",\"dep\":\"Sales\"},\n"}, {"char_start": 3970, "char_end": 4064, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Estell Mazella\",\"color\":\"#1eb42a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4064, "char_end": 4148, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jacobo Simoneton\",\"color\":\"#88ef04\",\"dep\":\"Training\"},\n"}, {"char_start": 4148, "char_end": 4223, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gran Blake\",\"color\":\"#b36cc6\",\"dep\":\"Sales\"},\n"}, {"char_start": 4223, "char_end": 4303, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Corina Kobke\",\"color\":\"#fa1dd3\",\"dep\":\"Training\"},\n"}, {"char_start": 4303, "char_end": 4389, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Benedict MacRorie\",\"color\":\"#621636\",\"dep\":\"Accounting\"},"}]}}
{"func_name": 13359, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"cferrieiw@domainmarket.com\",\"title\":\"Cammie Ferrie\",\"color\":\"#274732\",\"dep\":\"Services\"},\n    {\"id\":\"spinnegarix@techcrunch.com\",\"title\":\"Shannon Pinnegar\",\"color\":\"#ab1803\",\"dep\":\"Marketing\"},\n    {\"id\":\"dcanavaniy@lycos.com\",\"title\":\"Deeanne Canavan\",\"color\":\"#5d6c28\",\"dep\":\"Research and Development\"},\n    {\"id\":\"nhiziriz@opera.com\",\"title\":\"Nikos Hizir\",\"color\":\"#ba3ea2\",\"dep\":\"Legal\"},\n    {\"id\":\"mdurnoj0@51.la\",\"title\":\"Mady Durno\",\"color\":\"#13a85b\",\"dep\":\"Training\"},\n    {\"id\":\"rmcgaughayj1@marketwatch.com\",\"title\":\"Ralph McGaughay\",\"color\":\"#3031b8\",\"dep\":\"Human Resources\"},\n    {\"id\":\"lgajewskij2@sohu.com\",\"title\":\"Lizzie Gajewski\",\"color\":\"#8d9220\",\"dep\":\"Sales\"},\n    {\"id\":\"zlanphierj3@networkadvertising.org\",\"title\":\"Zola Lanphier\",\"color\":\"#aa8a00\",\"dep\":\"Accounting\"},\n    {\"id\":\"kmacaulayj4@tumblr.com\",\"title\":\"Kristi MacAulay\",\"color\":\"#885a12\",\"dep\":\"Sales\"},\n    {\"id\":\"tmckinnonj5@apache.org\",\"title\":\"Tamas McKinnon\",\"color\":\"#403ec7\",\"dep\":\"Support\"},\n    {\"id\":\"cdrewj6@github.com\",\"title\":\"Cristobal Drew\",\"color\":\"#d5a65d\",\"dep\":\"Marketing\"},\n    {\"id\":\"mcollingj7@privacy.gov.au\",\"title\":\"Meredithe Colling\",\"color\":\"#3d9bb8\",\"dep\":\"Human Resources\"},\n    {\"id\":\"madkinj8@yahoo.com\",\"title\":\"Maegan Adkin\",\"color\":\"#175d1f\",\"dep\":\"Business Development\"},\n    {\"id\":\"cgrievsonj9@amazon.co.uk\",\"title\":\"Cheston Grievson\",\"color\":\"#90f328\",\"dep\":\"Accounting\"},\n    {\"id\":\"mweyja@miitbeian.gov.cn\",\"title\":\"Marie Wey\",\"color\":\"#83943b\",\"dep\":\"Legal\"},\n    {\"id\":\"wdonaldsonjb@mac.com\",\"title\":\"Wendall Donaldson\",\"color\":\"#f08730\",\"dep\":\"Human Resources\"},\n    {\"id\":\"kbracchijc@blog.com\",\"title\":\"Karyl Bracchi\",\"color\":\"#9e544c\",\"dep\":\"Legal\"},\n    {\"id\":\"rbeachemjd@wired.com\",\"title\":\"Robinetta Beachem\",\"color\":\"#90a046\",\"dep\":\"Product Management\"},\n    {\"id\":\"rbenerje@constantcontact.com\",\"title\":\"Romola Bener\",\"color\":\"#e46c4c\",\"dep\":\"Legal\"},\n    {\"id\":\"tlimmerjf@parallels.com\",\"title\":\"Teresa Limmer\",\"color\":\"#1979a2\",\"dep\":\"Product Management\"},\n    {\"id\":\"dargentjg@clickbank.net\",\"title\":\"Danielle Argent\",\"color\":\"#ec6939\",\"dep\":\"Accounting\"},\n    {\"id\":\"thearsonjh@pagesperso-orange.fr\",\"title\":\"Thorsten Hearson\",\"color\":\"#cb6473\",\"dep\":\"Business Development\"},\n    {\"id\":\"pbrellinji@europa.eu\",\"title\":\"Pru Brellin\",\"color\":\"#99243e\",\"dep\":\"Sales\"},\n    {\"id\":\"jsnarttjj@technorati.com\",\"title\":\"Jarrad Snartt\",\"color\":\"#575cbd\",\"dep\":\"Training\"},\n    {\"id\":\"steasdalemarkiejk@pbs.org\",\"title\":\"Sherye Teasdale-Markie\",\"color\":\"#eb6294\",\"dep\":\"Product Management\"},\n    {\"id\":\"tbagehotjl@phpbb.com\",\"title\":\"Tabatha Bagehot\",\"color\":\"#f12b0f\",\"dep\":\"Business Development\"},\n    {\"id\":\"imquhanjm@cyberchimps.com\",\"title\":\"Ibbie M'Quhan\",\"color\":\"#a55663\",\"dep\":\"Engineering\"},\n    {\"id\":\"whowgatejn@bigcartel.com\",\"title\":\"Westley Howgate\",\"color\":\"#29a54a\",\"dep\":\"Accounting\"},\n    {\"id\":\"wpellewjo@bloomberg.com\",\"title\":\"Winston Pellew\",\"color\":\"#2b5a11\",\"dep\":\"Product Management\"},\n    {\"id\":\"dwithnalljp@state.tx.us\",\"title\":\"Delaney Withnall\",\"color\":\"#180ae8\",\"dep\":\"Research and Development\"},\n    {\"id\":\"aharesjq@4shared.com\",\"title\":\"Ailey Hares\",\"color\":\"#1ea698\",\"dep\":\"Marketing\"},\n    {\"id\":\"fklaessonjr@dropbox.com\",\"title\":\"Flore Klaesson\",\"color\":\"#336604\",\"dep\":\"Support\"},\n    {\"id\":\"khymersjs@issuu.com\",\"title\":\"Kev Hymers\",\"color\":\"#c9963a\",\"dep\":\"Human Resources\"},\n    {\"id\":\"cdunbobbinjt@guardian.co.uk\",\"title\":\"Cathyleen Dunbobbin\",\"color\":\"#c60115\",\"dep\":\"Legal\"},\n    {\"id\":\"lcayetteju@umn.edu\",\"title\":\"Laurent Cayette\",\"color\":\"#9e74d3\",\"dep\":\"Training\"},\n    {\"id\":\"cvaunjv@ebay.co.uk\",\"title\":\"Candi Vaun\",\"color\":\"#cd9b18\",\"dep\":\"Services\"},\n    {\"id\":\"obowartjw@tinyurl.com\",\"title\":\"Orton Bowart\",\"color\":\"#4ab30d\",\"dep\":\"Legal\"},\n    {\"id\":\"mworlockjx@simplemachines.org\",\"title\":\"Margi Worlock\",\"color\":\"#d4a4a4\",\"dep\":\"Product Management\"},\n    {\"id\":\"rmutlowjy@nymag.com\",\"title\":\"Rhea Mutlow\",\"color\":\"#0383f9\",\"dep\":\"Services\"},\n    {\"id\":\"ytugmanjz@woothemes.com\",\"title\":\"Yves Tugman\",\"color\":\"#a2c688\",\"dep\":\"Human Resources\"},\n    {\"id\":\"ggasperok0@friendfeed.com\",\"title\":\"Gertrudis Gaspero\",\"color\":\"#a7aedc\",\"dep\":\"Services\"},\n    {\"id\":\"nsouthcottk1@storify.com\",\"title\":\"Nalani Southcott\",\"color\":\"#f86872\",\"dep\":\"Business Development\"},\n    {\"id\":\"cmurneyk2@time.com\",\"title\":\"Cello Murney\",\"color\":\"#ab493a\",\"dep\":\"Services\"},\n    {\"id\":\"hgrottyk3@cmu.edu\",\"title\":\"Haroun Grotty\",\"color\":\"#7db58d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"lwyliek4@blogger.com\",\"title\":\"Lin Wylie\",\"color\":\"#7f8186\",\"dep\":\"Services\"},\n    {\"id\":\"jbraganzak5@themeforest.net\",\"title\":\"Jean Braganza\",\"color\":\"#a22587\",\"dep\":\"Product Management\"},\n    {\"id\":\"khorbathk6@ox.ac.uk\",\"title\":\"Kin Horbath\",\"color\":\"#02ad34\",\"dep\":\"Accounting\"},\n    {\"id\":\"mlembkek7@bandcamp.com\",\"title\":\"Martelle Lembke\",\"color\":\"#53d997\",\"dep\":\"Engineering\"},\n    {\"id\":\"malfk8@cisco.com\",\"title\":\"Montgomery Alf\",\"color\":\"#589aa3\",\"dep\":\"Engineering\"},\n    {\"id\":\"loveryk9@tuttocitta.it\",\"title\":\"Laney Overy\",\"color\":\"#ca2d1d\",\"dep\":\"Business Development\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Cammie Ferrie\",\"color\":\"#274732\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Shannon Pinnegar\",\"color\":\"#ab1803\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Deeanne Canavan\",\"color\":\"#5d6c28\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nikos Hizir\",\"color\":\"#ba3ea2\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mady Durno\",\"color\":\"#13a85b\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ralph McGaughay\",\"color\":\"#3031b8\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lizzie Gajewski\",\"color\":\"#8d9220\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Zola Lanphier\",\"color\":\"#aa8a00\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kristi MacAulay\",\"color\":\"#885a12\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Tamas McKinnon\",\"color\":\"#403ec7\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cristobal Drew\",\"color\":\"#d5a65d\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Meredithe Colling\",\"color\":\"#3d9bb8\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Maegan Adkin\",\"color\":\"#175d1f\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cheston Grievson\",\"color\":\"#90f328\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Marie Wey\",\"color\":\"#83943b\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Wendall Donaldson\",\"color\":\"#f08730\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Karyl Bracchi\",\"color\":\"#9e544c\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Robinetta Beachem\",\"color\":\"#90a046\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Romola Bener\",\"color\":\"#e46c4c\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Teresa Limmer\",\"color\":\"#1979a2\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Danielle Argent\",\"color\":\"#ec6939\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Thorsten Hearson\",\"color\":\"#cb6473\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Pru Brellin\",\"color\":\"#99243e\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jarrad Snartt\",\"color\":\"#575cbd\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sherye Teasdale-Markie\",\"color\":\"#eb6294\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Tabatha Bagehot\",\"color\":\"#f12b0f\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ibbie M'Quhan\",\"color\":\"#a55663\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Westley Howgate\",\"color\":\"#29a54a\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Winston Pellew\",\"color\":\"#2b5a11\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Delaney Withnall\",\"color\":\"#180ae8\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ailey Hares\",\"color\":\"#1ea698\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Flore Klaesson\",\"color\":\"#336604\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kev Hymers\",\"color\":\"#c9963a\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cathyleen Dunbobbin\",\"color\":\"#c60115\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Laurent Cayette\",\"color\":\"#9e74d3\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Candi Vaun\",\"color\":\"#cd9b18\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Orton Bowart\",\"color\":\"#4ab30d\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Margi Worlock\",\"color\":\"#d4a4a4\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rhea Mutlow\",\"color\":\"#0383f9\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Yves Tugman\",\"color\":\"#a2c688\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gertrudis Gaspero\",\"color\":\"#a7aedc\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nalani Southcott\",\"color\":\"#f86872\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cello Murney\",\"color\":\"#ab493a\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Haroun Grotty\",\"color\":\"#7db58d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lin Wylie\",\"color\":\"#7f8186\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jean Braganza\",\"color\":\"#a22587\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kin Horbath\",\"color\":\"#02ad34\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Martelle Lembke\",\"color\":\"#53d997\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Montgomery Alf\",\"color\":\"#589aa3\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Laney Overy\",\"color\":\"#ca2d1d\",\"dep\":\"Business Development\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 100, "line": "    {\"id\":\"cferrieiw@domainmarket.com\",\"title\":\"Cammie Ferrie\",\"color\":\"#274732\",\"dep\":\"Services\"},\n"}, {"line_no": 3, "char_start": 81, "char_end": 185, "line": "    {\"id\":\"spinnegarix@techcrunch.com\",\"title\":\"Shannon Pinnegar\",\"color\":\"#ab1803\",\"dep\":\"Marketing\"},\n"}, {"line_no": 5, "char_start": 166, "char_end": 278, "line": "    {\"id\":\"dcanavaniy@lycos.com\",\"title\":\"Deeanne Canavan\",\"color\":\"#5d6c28\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 7, "char_start": 265, "char_end": 352, "line": "    {\"id\":\"nhiziriz@opera.com\",\"title\":\"Nikos Hizir\",\"color\":\"#ba3ea2\",\"dep\":\"Legal\"},\n"}, {"line_no": 9, "char_start": 341, "char_end": 426, "line": "    {\"id\":\"mdurnoj0@51.la\",\"title\":\"Mady Durno\",\"color\":\"#13a85b\",\"dep\":\"Training\"},\n"}, {"line_no": 11, "char_start": 419, "char_end": 530, "line": "    {\"id\":\"rmcgaughayj1@marketwatch.com\",\"title\":\"Ralph McGaughay\",\"color\":\"#3031b8\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 13, "char_start": 509, "char_end": 602, "line": "    {\"id\":\"lgajewskij2@sohu.com\",\"title\":\"Lizzie Gajewski\",\"color\":\"#8d9220\",\"dep\":\"Sales\"},\n"}, {"line_no": 15, "char_start": 589, "char_end": 699, "line": "    {\"id\":\"zlanphierj3@networkadvertising.org\",\"title\":\"Zola Lanphier\",\"color\":\"#aa8a00\",\"dep\":\"Accounting\"},\n"}, {"line_no": 17, "char_start": 672, "char_end": 767, "line": "    {\"id\":\"kmacaulayj4@tumblr.com\",\"title\":\"Kristi MacAulay\",\"color\":\"#885a12\",\"dep\":\"Sales\"},\n"}, {"line_no": 19, "char_start": 752, "char_end": 848, "line": "    {\"id\":\"tmckinnonj5@apache.org\",\"title\":\"Tamas McKinnon\",\"color\":\"#403ec7\",\"dep\":\"Support\"},\n"}, {"line_no": 21, "char_start": 833, "char_end": 927, "line": "    {\"id\":\"cdrewj6@github.com\",\"title\":\"Cristobal Drew\",\"color\":\"#d5a65d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 23, "char_start": 916, "char_end": 1026, "line": "    {\"id\":\"mcollingj7@privacy.gov.au\",\"title\":\"Meredithe Colling\",\"color\":\"#3d9bb8\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 25, "char_start": 1008, "char_end": 1111, "line": "    {\"id\":\"madkinj8@yahoo.com\",\"title\":\"Maegan Adkin\",\"color\":\"#175d1f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 27, "char_start": 1100, "char_end": 1203, "line": "    {\"id\":\"cgrievsonj9@amazon.co.uk\",\"title\":\"Cheston Grievson\",\"color\":\"#90f328\",\"dep\":\"Accounting\"},\n"}, {"line_no": 29, "char_start": 1186, "char_end": 1276, "line": "    {\"id\":\"mweyja@miitbeian.gov.cn\",\"title\":\"Marie Wey\",\"color\":\"#83943b\",\"dep\":\"Legal\"},\n"}, {"line_no": 31, "char_start": 1260, "char_end": 1365, "line": "    {\"id\":\"wdonaldsonjb@mac.com\",\"title\":\"Wendall Donaldson\",\"color\":\"#f08730\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 33, "char_start": 1352, "char_end": 1442, "line": "    {\"id\":\"kbracchijc@blog.com\",\"title\":\"Karyl Bracchi\",\"color\":\"#9e544c\",\"dep\":\"Legal\"},\n"}, {"line_no": 35, "char_start": 1430, "char_end": 1538, "line": "    {\"id\":\"rbeachemjd@wired.com\",\"title\":\"Robinetta Beachem\",\"color\":\"#90a046\",\"dep\":\"Product Management\"},\n"}, {"line_no": 37, "char_start": 1525, "char_end": 1623, "line": "    {\"id\":\"rbenerje@constantcontact.com\",\"title\":\"Romola Bener\",\"color\":\"#e46c4c\",\"dep\":\"Legal\"},\n"}, {"line_no": 39, "char_start": 1602, "char_end": 1709, "line": "    {\"id\":\"tlimmerjf@parallels.com\",\"title\":\"Teresa Limmer\",\"color\":\"#1979a2\",\"dep\":\"Product Management\"},\n"}, {"line_no": 41, "char_start": 1693, "char_end": 1794, "line": "    {\"id\":\"dargentjg@clickbank.net\",\"title\":\"Danielle Argent\",\"color\":\"#ec6939\",\"dep\":\"Accounting\"},\n"}, {"line_no": 43, "char_start": 1778, "char_end": 1898, "line": "    {\"id\":\"thearsonjh@pagesperso-orange.fr\",\"title\":\"Thorsten Hearson\",\"color\":\"#cb6473\",\"dep\":\"Business Development\"},\n"}, {"line_no": 45, "char_start": 1874, "char_end": 1963, "line": "    {\"id\":\"pbrellinji@europa.eu\",\"title\":\"Pru Brellin\",\"color\":\"#99243e\",\"dep\":\"Sales\"},\n"}, {"line_no": 47, "char_start": 1950, "char_end": 2048, "line": "    {\"id\":\"jsnarttjj@technorati.com\",\"title\":\"Jarrad Snartt\",\"color\":\"#575cbd\",\"dep\":\"Training\"},\n"}, {"line_no": 49, "char_start": 2031, "char_end": 2149, "line": "    {\"id\":\"steasdalemarkiejk@pbs.org\",\"title\":\"Sherye Teasdale-Markie\",\"color\":\"#eb6294\",\"dep\":\"Product Management\"},\n"}, {"line_no": 51, "char_start": 2131, "char_end": 2239, "line": "    {\"id\":\"tbagehotjl@phpbb.com\",\"title\":\"Tabatha Bagehot\",\"color\":\"#f12b0f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 53, "char_start": 2226, "char_end": 2328, "line": "    {\"id\":\"imquhanjm@cyberchimps.com\",\"title\":\"Ibbie M'Quhan\",\"color\":\"#a55663\",\"dep\":\"Engineering\"},\n"}, {"line_no": 55, "char_start": 2310, "char_end": 2412, "line": "    {\"id\":\"whowgatejn@bigcartel.com\",\"title\":\"Westley Howgate\",\"color\":\"#29a54a\",\"dep\":\"Accounting\"},\n"}, {"line_no": 57, "char_start": 2395, "char_end": 2503, "line": "    {\"id\":\"wpellewjo@bloomberg.com\",\"title\":\"Winston Pellew\",\"color\":\"#2b5a11\",\"dep\":\"Product Management\"},\n"}, {"line_no": 59, "char_start": 2487, "char_end": 2603, "line": "    {\"id\":\"dwithnalljp@state.tx.us\",\"title\":\"Delaney Withnall\",\"color\":\"#180ae8\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 61, "char_start": 2587, "char_end": 2680, "line": "    {\"id\":\"aharesjq@4shared.com\",\"title\":\"Ailey Hares\",\"color\":\"#1ea698\",\"dep\":\"Marketing\"},\n"}, {"line_no": 63, "char_start": 2667, "char_end": 2764, "line": "    {\"id\":\"fklaessonjr@dropbox.com\",\"title\":\"Flore Klaesson\",\"color\":\"#336604\",\"dep\":\"Support\"},\n"}, {"line_no": 65, "char_start": 2748, "char_end": 2845, "line": "    {\"id\":\"khymersjs@issuu.com\",\"title\":\"Kev Hymers\",\"color\":\"#c9963a\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 67, "char_start": 2833, "char_end": 2937, "line": "    {\"id\":\"cdunbobbinjt@guardian.co.uk\",\"title\":\"Cathyleen Dunbobbin\",\"color\":\"#c60115\",\"dep\":\"Legal\"},\n"}, {"line_no": 69, "char_start": 2917, "char_end": 3011, "line": "    {\"id\":\"lcayetteju@umn.edu\",\"title\":\"Laurent Cayette\",\"color\":\"#9e74d3\",\"dep\":\"Training\"},\n"}, {"line_no": 71, "char_start": 3000, "char_end": 3089, "line": "    {\"id\":\"cvaunjv@ebay.co.uk\",\"title\":\"Candi Vaun\",\"color\":\"#cd9b18\",\"dep\":\"Services\"},\n"}, {"line_no": 73, "char_start": 3078, "char_end": 3169, "line": "    {\"id\":\"obowartjw@tinyurl.com\",\"title\":\"Orton Bowart\",\"color\":\"#4ab30d\",\"dep\":\"Legal\"},\n"}, {"line_no": 75, "char_start": 3155, "char_end": 3268, "line": "    {\"id\":\"mworlockjx@simplemachines.org\",\"title\":\"Margi Worlock\",\"color\":\"#d4a4a4\",\"dep\":\"Product Management\"},\n"}, {"line_no": 77, "char_start": 3246, "char_end": 3337, "line": "    {\"id\":\"rmutlowjy@nymag.com\",\"title\":\"Rhea Mutlow\",\"color\":\"#0383f9\",\"dep\":\"Services\"},\n"}, {"line_no": 79, "char_start": 3325, "char_end": 3427, "line": "    {\"id\":\"ytugmanjz@woothemes.com\",\"title\":\"Yves Tugman\",\"color\":\"#a2c688\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 81, "char_start": 3411, "char_end": 3514, "line": "    {\"id\":\"ggasperok0@friendfeed.com\",\"title\":\"Gertrudis Gaspero\",\"color\":\"#a7aedc\",\"dep\":\"Services\"},\n"}, {"line_no": 83, "char_start": 3496, "char_end": 3609, "line": "    {\"id\":\"nsouthcottk1@storify.com\",\"title\":\"Nalani Southcott\",\"color\":\"#f86872\",\"dep\":\"Business Development\"},\n"}, {"line_no": 85, "char_start": 3592, "char_end": 3683, "line": "    {\"id\":\"cmurneyk2@time.com\",\"title\":\"Cello Murney\",\"color\":\"#ab493a\",\"dep\":\"Services\"},\n"}, {"line_no": 87, "char_start": 3672, "char_end": 3779, "line": "    {\"id\":\"hgrottyk3@cmu.edu\",\"title\":\"Haroun Grotty\",\"color\":\"#7db58d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 89, "char_start": 3769, "char_end": 3859, "line": "    {\"id\":\"lwyliek4@blogger.com\",\"title\":\"Lin Wylie\",\"color\":\"#7f8186\",\"dep\":\"Services\"},\n"}, {"line_no": 91, "char_start": 3846, "char_end": 3957, "line": "    {\"id\":\"jbraganzak5@themeforest.net\",\"title\":\"Jean Braganza\",\"color\":\"#a22587\",\"dep\":\"Product Management\"},\n"}, {"line_no": 93, "char_start": 3937, "char_end": 4030, "line": "    {\"id\":\"khorbathk6@ox.ac.uk\",\"title\":\"Kin Horbath\",\"color\":\"#02ad34\",\"dep\":\"Accounting\"},\n"}, {"line_no": 95, "char_start": 4018, "char_end": 4119, "line": "    {\"id\":\"mlembkek7@bandcamp.com\",\"title\":\"Martelle Lembke\",\"color\":\"#53d997\",\"dep\":\"Engineering\"},\n"}, {"line_no": 97, "char_start": 4104, "char_end": 4198, "line": "    {\"id\":\"malfk8@cisco.com\",\"title\":\"Montgomery Alf\",\"color\":\"#589aa3\",\"dep\":\"Engineering\"},\n"}, {"line_no": 99, "char_start": 4189, "char_end": 4294, "line": "    {\"id\":\"loveryk9@tuttocitta.it\",\"title\":\"Laney Overy\",\"color\":\"#ca2d1d\",\"dep\":\"Business Development\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 81, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cammie Ferrie\",\"color\":\"#274732\",\"dep\":\"Services\"},\n"}, {"line_no": 4, "char_start": 81, "char_end": 166, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Shannon Pinnegar\",\"color\":\"#ab1803\",\"dep\":\"Marketing\"},\n"}, {"line_no": 6, "char_start": 166, "char_end": 265, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Deeanne Canavan\",\"color\":\"#5d6c28\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 8, "char_start": 265, "char_end": 341, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nikos Hizir\",\"color\":\"#ba3ea2\",\"dep\":\"Legal\"},\n"}, {"line_no": 10, "char_start": 341, "char_end": 419, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mady Durno\",\"color\":\"#13a85b\",\"dep\":\"Training\"},\n"}, {"line_no": 12, "char_start": 419, "char_end": 509, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ralph McGaughay\",\"color\":\"#3031b8\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 14, "char_start": 509, "char_end": 589, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lizzie Gajewski\",\"color\":\"#8d9220\",\"dep\":\"Sales\"},\n"}, {"line_no": 16, "char_start": 589, "char_end": 672, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Zola Lanphier\",\"color\":\"#aa8a00\",\"dep\":\"Accounting\"},\n"}, {"line_no": 18, "char_start": 672, "char_end": 752, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kristi MacAulay\",\"color\":\"#885a12\",\"dep\":\"Sales\"},\n"}, {"line_no": 20, "char_start": 752, "char_end": 833, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Tamas McKinnon\",\"color\":\"#403ec7\",\"dep\":\"Support\"},\n"}, {"line_no": 22, "char_start": 833, "char_end": 916, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cristobal Drew\",\"color\":\"#d5a65d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 24, "char_start": 916, "char_end": 1008, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Meredithe Colling\",\"color\":\"#3d9bb8\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 26, "char_start": 1008, "char_end": 1100, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Maegan Adkin\",\"color\":\"#175d1f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 28, "char_start": 1100, "char_end": 1186, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cheston Grievson\",\"color\":\"#90f328\",\"dep\":\"Accounting\"},\n"}, {"line_no": 30, "char_start": 1186, "char_end": 1260, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Marie Wey\",\"color\":\"#83943b\",\"dep\":\"Legal\"},\n"}, {"line_no": 32, "char_start": 1260, "char_end": 1352, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Wendall Donaldson\",\"color\":\"#f08730\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 34, "char_start": 1352, "char_end": 1430, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Karyl Bracchi\",\"color\":\"#9e544c\",\"dep\":\"Legal\"},\n"}, {"line_no": 36, "char_start": 1430, "char_end": 1525, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Robinetta Beachem\",\"color\":\"#90a046\",\"dep\":\"Product Management\"},\n"}, {"line_no": 38, "char_start": 1525, "char_end": 1602, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Romola Bener\",\"color\":\"#e46c4c\",\"dep\":\"Legal\"},\n"}, {"line_no": 40, "char_start": 1602, "char_end": 1693, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Teresa Limmer\",\"color\":\"#1979a2\",\"dep\":\"Product Management\"},\n"}, {"line_no": 42, "char_start": 1693, "char_end": 1778, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Danielle Argent\",\"color\":\"#ec6939\",\"dep\":\"Accounting\"},\n"}, {"line_no": 44, "char_start": 1778, "char_end": 1874, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Thorsten Hearson\",\"color\":\"#cb6473\",\"dep\":\"Business Development\"},\n"}, {"line_no": 46, "char_start": 1874, "char_end": 1950, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Pru Brellin\",\"color\":\"#99243e\",\"dep\":\"Sales\"},\n"}, {"line_no": 48, "char_start": 1950, "char_end": 2031, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jarrad Snartt\",\"color\":\"#575cbd\",\"dep\":\"Training\"},\n"}, {"line_no": 50, "char_start": 2031, "char_end": 2131, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sherye Teasdale-Markie\",\"color\":\"#eb6294\",\"dep\":\"Product Management\"},\n"}, {"line_no": 52, "char_start": 2131, "char_end": 2226, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Tabatha Bagehot\",\"color\":\"#f12b0f\",\"dep\":\"Business Development\"},\n"}, {"line_no": 54, "char_start": 2226, "char_end": 2310, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ibbie M'Quhan\",\"color\":\"#a55663\",\"dep\":\"Engineering\"},\n"}, {"line_no": 56, "char_start": 2310, "char_end": 2395, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Westley Howgate\",\"color\":\"#29a54a\",\"dep\":\"Accounting\"},\n"}, {"line_no": 58, "char_start": 2395, "char_end": 2487, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Winston Pellew\",\"color\":\"#2b5a11\",\"dep\":\"Product Management\"},\n"}, {"line_no": 60, "char_start": 2487, "char_end": 2587, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Delaney Withnall\",\"color\":\"#180ae8\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 62, "char_start": 2587, "char_end": 2667, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ailey Hares\",\"color\":\"#1ea698\",\"dep\":\"Marketing\"},\n"}, {"line_no": 64, "char_start": 2667, "char_end": 2748, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Flore Klaesson\",\"color\":\"#336604\",\"dep\":\"Support\"},\n"}, {"line_no": 66, "char_start": 2748, "char_end": 2833, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kev Hymers\",\"color\":\"#c9963a\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 68, "char_start": 2833, "char_end": 2917, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cathyleen Dunbobbin\",\"color\":\"#c60115\",\"dep\":\"Legal\"},\n"}, {"line_no": 70, "char_start": 2917, "char_end": 3000, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Laurent Cayette\",\"color\":\"#9e74d3\",\"dep\":\"Training\"},\n"}, {"line_no": 72, "char_start": 3000, "char_end": 3078, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Candi Vaun\",\"color\":\"#cd9b18\",\"dep\":\"Services\"},\n"}, {"line_no": 74, "char_start": 3078, "char_end": 3155, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Orton Bowart\",\"color\":\"#4ab30d\",\"dep\":\"Legal\"},\n"}, {"line_no": 76, "char_start": 3155, "char_end": 3246, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Margi Worlock\",\"color\":\"#d4a4a4\",\"dep\":\"Product Management\"},\n"}, {"line_no": 78, "char_start": 3246, "char_end": 3325, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rhea Mutlow\",\"color\":\"#0383f9\",\"dep\":\"Services\"},\n"}, {"line_no": 80, "char_start": 3325, "char_end": 3411, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Yves Tugman\",\"color\":\"#a2c688\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 82, "char_start": 3411, "char_end": 3496, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gertrudis Gaspero\",\"color\":\"#a7aedc\",\"dep\":\"Services\"},\n"}, {"line_no": 84, "char_start": 3496, "char_end": 3592, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nalani Southcott\",\"color\":\"#f86872\",\"dep\":\"Business Development\"},\n"}, {"line_no": 86, "char_start": 3592, "char_end": 3672, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cello Murney\",\"color\":\"#ab493a\",\"dep\":\"Services\"},\n"}, {"line_no": 88, "char_start": 3672, "char_end": 3769, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Haroun Grotty\",\"color\":\"#7db58d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 90, "char_start": 3769, "char_end": 3846, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lin Wylie\",\"color\":\"#7f8186\",\"dep\":\"Services\"},\n"}, {"line_no": 92, "char_start": 3846, "char_end": 3937, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jean Braganza\",\"color\":\"#a22587\",\"dep\":\"Product Management\"},\n"}, {"line_no": 94, "char_start": 3937, "char_end": 4018, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kin Horbath\",\"color\":\"#02ad34\",\"dep\":\"Accounting\"},\n"}, {"line_no": 96, "char_start": 4018, "char_end": 4104, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Martelle Lembke\",\"color\":\"#53d997\",\"dep\":\"Engineering\"},\n"}, {"line_no": 98, "char_start": 4104, "char_end": 4189, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Montgomery Alf\",\"color\":\"#589aa3\",\"dep\":\"Engineering\"},\n"}, {"line_no": 100, "char_start": 4189, "char_end": 4279, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Laney Overy\",\"color\":\"#ca2d1d\",\"dep\":\"Business Development\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 100, "chars": "    {\"id\":\"cferrieiw@domainmarket.com\",\"title\":\"Cammie Ferrie\",\"color\":\"#274732\",\"dep\":\"Services\"},\n"}, {"char_start": 81, "char_end": 185, "chars": "    {\"id\":\"spinnegarix@techcrunch.com\",\"title\":\"Shannon Pinnegar\",\"color\":\"#ab1803\",\"dep\":\"Marketing\"},\n"}, {"char_start": 166, "char_end": 278, "chars": "    {\"id\":\"dcanavaniy@lycos.com\",\"title\":\"Deeanne Canavan\",\"color\":\"#5d6c28\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 265, "char_end": 352, "chars": "    {\"id\":\"nhiziriz@opera.com\",\"title\":\"Nikos Hizir\",\"color\":\"#ba3ea2\",\"dep\":\"Legal\"},\n"}, {"char_start": 341, "char_end": 426, "chars": "    {\"id\":\"mdurnoj0@51.la\",\"title\":\"Mady Durno\",\"color\":\"#13a85b\",\"dep\":\"Training\"},\n"}, {"char_start": 419, "char_end": 530, "chars": "    {\"id\":\"rmcgaughayj1@marketwatch.com\",\"title\":\"Ralph McGaughay\",\"color\":\"#3031b8\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 509, "char_end": 602, "chars": "    {\"id\":\"lgajewskij2@sohu.com\",\"title\":\"Lizzie Gajewski\",\"color\":\"#8d9220\",\"dep\":\"Sales\"},\n"}, {"char_start": 589, "char_end": 699, "chars": "    {\"id\":\"zlanphierj3@networkadvertising.org\",\"title\":\"Zola Lanphier\",\"color\":\"#aa8a00\",\"dep\":\"Accounting\"},\n"}, {"char_start": 672, "char_end": 767, "chars": "    {\"id\":\"kmacaulayj4@tumblr.com\",\"title\":\"Kristi MacAulay\",\"color\":\"#885a12\",\"dep\":\"Sales\"},\n"}, {"char_start": 752, "char_end": 848, "chars": "    {\"id\":\"tmckinnonj5@apache.org\",\"title\":\"Tamas McKinnon\",\"color\":\"#403ec7\",\"dep\":\"Support\"},\n"}, {"char_start": 833, "char_end": 927, "chars": "    {\"id\":\"cdrewj6@github.com\",\"title\":\"Cristobal Drew\",\"color\":\"#d5a65d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 916, "char_end": 1026, "chars": "    {\"id\":\"mcollingj7@privacy.gov.au\",\"title\":\"Meredithe Colling\",\"color\":\"#3d9bb8\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1008, "char_end": 1111, "chars": "    {\"id\":\"madkinj8@yahoo.com\",\"title\":\"Maegan Adkin\",\"color\":\"#175d1f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1100, "char_end": 1203, "chars": "    {\"id\":\"cgrievsonj9@amazon.co.uk\",\"title\":\"Cheston Grievson\",\"color\":\"#90f328\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1186, "char_end": 1276, "chars": "    {\"id\":\"mweyja@miitbeian.gov.cn\",\"title\":\"Marie Wey\",\"color\":\"#83943b\",\"dep\":\"Legal\"},\n"}, {"char_start": 1260, "char_end": 1365, "chars": "    {\"id\":\"wdonaldsonjb@mac.com\",\"title\":\"Wendall Donaldson\",\"color\":\"#f08730\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1352, "char_end": 1442, "chars": "    {\"id\":\"kbracchijc@blog.com\",\"title\":\"Karyl Bracchi\",\"color\":\"#9e544c\",\"dep\":\"Legal\"},\n"}, {"char_start": 1430, "char_end": 1538, "chars": "    {\"id\":\"rbeachemjd@wired.com\",\"title\":\"Robinetta Beachem\",\"color\":\"#90a046\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1525, "char_end": 1623, "chars": "    {\"id\":\"rbenerje@constantcontact.com\",\"title\":\"Romola Bener\",\"color\":\"#e46c4c\",\"dep\":\"Legal\"},\n"}, {"char_start": 1602, "char_end": 1709, "chars": "    {\"id\":\"tlimmerjf@parallels.com\",\"title\":\"Teresa Limmer\",\"color\":\"#1979a2\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1693, "char_end": 1794, "chars": "    {\"id\":\"dargentjg@clickbank.net\",\"title\":\"Danielle Argent\",\"color\":\"#ec6939\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1778, "char_end": 1898, "chars": "    {\"id\":\"thearsonjh@pagesperso-orange.fr\",\"title\":\"Thorsten Hearson\",\"color\":\"#cb6473\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1874, "char_end": 1963, "chars": "    {\"id\":\"pbrellinji@europa.eu\",\"title\":\"Pru Brellin\",\"color\":\"#99243e\",\"dep\":\"Sales\"},\n"}, {"char_start": 1950, "char_end": 2048, "chars": "    {\"id\":\"jsnarttjj@technorati.com\",\"title\":\"Jarrad Snartt\",\"color\":\"#575cbd\",\"dep\":\"Training\"},\n"}, {"char_start": 2031, "char_end": 2149, "chars": "    {\"id\":\"steasdalemarkiejk@pbs.org\",\"title\":\"Sherye Teasdale-Markie\",\"color\":\"#eb6294\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2131, "char_end": 2239, "chars": "    {\"id\":\"tbagehotjl@phpbb.com\",\"title\":\"Tabatha Bagehot\",\"color\":\"#f12b0f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2226, "char_end": 2328, "chars": "    {\"id\":\"imquhanjm@cyberchimps.com\",\"title\":\"Ibbie M'Quhan\",\"color\":\"#a55663\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2310, "char_end": 2412, "chars": "    {\"id\":\"whowgatejn@bigcartel.com\",\"title\":\"Westley Howgate\",\"color\":\"#29a54a\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2395, "char_end": 2503, "chars": "    {\"id\":\"wpellewjo@bloomberg.com\",\"title\":\"Winston Pellew\",\"color\":\"#2b5a11\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2487, "char_end": 2603, "chars": "    {\"id\":\"dwithnalljp@state.tx.us\",\"title\":\"Delaney Withnall\",\"color\":\"#180ae8\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2587, "char_end": 2680, "chars": "    {\"id\":\"aharesjq@4shared.com\",\"title\":\"Ailey Hares\",\"color\":\"#1ea698\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2667, "char_end": 2764, "chars": "    {\"id\":\"fklaessonjr@dropbox.com\",\"title\":\"Flore Klaesson\",\"color\":\"#336604\",\"dep\":\"Support\"},\n"}, {"char_start": 2748, "char_end": 2845, "chars": "    {\"id\":\"khymersjs@issuu.com\",\"title\":\"Kev Hymers\",\"color\":\"#c9963a\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2833, "char_end": 2937, "chars": "    {\"id\":\"cdunbobbinjt@guardian.co.uk\",\"title\":\"Cathyleen Dunbobbin\",\"color\":\"#c60115\",\"dep\":\"Legal\"},\n"}, {"char_start": 2917, "char_end": 3011, "chars": "    {\"id\":\"lcayetteju@umn.edu\",\"title\":\"Laurent Cayette\",\"color\":\"#9e74d3\",\"dep\":\"Training\"},\n"}, {"char_start": 3000, "char_end": 3089, "chars": "    {\"id\":\"cvaunjv@ebay.co.uk\",\"title\":\"Candi Vaun\",\"color\":\"#cd9b18\",\"dep\":\"Services\"},\n"}, {"char_start": 3078, "char_end": 3169, "chars": "    {\"id\":\"obowartjw@tinyurl.com\",\"title\":\"Orton Bowart\",\"color\":\"#4ab30d\",\"dep\":\"Legal\"},\n"}, {"char_start": 3155, "char_end": 3268, "chars": "    {\"id\":\"mworlockjx@simplemachines.org\",\"title\":\"Margi Worlock\",\"color\":\"#d4a4a4\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3246, "char_end": 3337, "chars": "    {\"id\":\"rmutlowjy@nymag.com\",\"title\":\"Rhea Mutlow\",\"color\":\"#0383f9\",\"dep\":\"Services\"},\n"}, {"char_start": 3325, "char_end": 3427, "chars": "    {\"id\":\"ytugmanjz@woothemes.com\",\"title\":\"Yves Tugman\",\"color\":\"#a2c688\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3411, "char_end": 3514, "chars": "    {\"id\":\"ggasperok0@friendfeed.com\",\"title\":\"Gertrudis Gaspero\",\"color\":\"#a7aedc\",\"dep\":\"Services\"},\n"}, {"char_start": 3496, "char_end": 3609, "chars": "    {\"id\":\"nsouthcottk1@storify.com\",\"title\":\"Nalani Southcott\",\"color\":\"#f86872\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3592, "char_end": 3683, "chars": "    {\"id\":\"cmurneyk2@time.com\",\"title\":\"Cello Murney\",\"color\":\"#ab493a\",\"dep\":\"Services\"},\n"}, {"char_start": 3672, "char_end": 3779, "chars": "    {\"id\":\"hgrottyk3@cmu.edu\",\"title\":\"Haroun Grotty\",\"color\":\"#7db58d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3769, "char_end": 3859, "chars": "    {\"id\":\"lwyliek4@blogger.com\",\"title\":\"Lin Wylie\",\"color\":\"#7f8186\",\"dep\":\"Services\"},\n"}, {"char_start": 3846, "char_end": 3957, "chars": "    {\"id\":\"jbraganzak5@themeforest.net\",\"title\":\"Jean Braganza\",\"color\":\"#a22587\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3937, "char_end": 4030, "chars": "    {\"id\":\"khorbathk6@ox.ac.uk\",\"title\":\"Kin Horbath\",\"color\":\"#02ad34\",\"dep\":\"Accounting\"},\n"}, {"char_start": 4018, "char_end": 4119, "chars": "    {\"id\":\"mlembkek7@bandcamp.com\",\"title\":\"Martelle Lembke\",\"color\":\"#53d997\",\"dep\":\"Engineering\"},\n"}, {"char_start": 4104, "char_end": 4198, "chars": "    {\"id\":\"malfk8@cisco.com\",\"title\":\"Montgomery Alf\",\"color\":\"#589aa3\",\"dep\":\"Engineering\"},\n"}, {"char_start": 4189, "char_end": 4294, "chars": "    {\"id\":\"loveryk9@tuttocitta.it\",\"title\":\"Laney Overy\",\"color\":\"#ca2d1d\",\"dep\":\"Business Development\"},"}], "added": [{"char_start": 0, "char_end": 81, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cammie Ferrie\",\"color\":\"#274732\",\"dep\":\"Services\"},\n"}, {"char_start": 81, "char_end": 166, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Shannon Pinnegar\",\"color\":\"#ab1803\",\"dep\":\"Marketing\"},\n"}, {"char_start": 166, "char_end": 265, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Deeanne Canavan\",\"color\":\"#5d6c28\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 265, "char_end": 341, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nikos Hizir\",\"color\":\"#ba3ea2\",\"dep\":\"Legal\"},\n"}, {"char_start": 341, "char_end": 419, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mady Durno\",\"color\":\"#13a85b\",\"dep\":\"Training\"},\n"}, {"char_start": 419, "char_end": 509, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ralph McGaughay\",\"color\":\"#3031b8\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 509, "char_end": 589, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lizzie Gajewski\",\"color\":\"#8d9220\",\"dep\":\"Sales\"},\n"}, {"char_start": 589, "char_end": 672, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Zola Lanphier\",\"color\":\"#aa8a00\",\"dep\":\"Accounting\"},\n"}, {"char_start": 672, "char_end": 752, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kristi MacAulay\",\"color\":\"#885a12\",\"dep\":\"Sales\"},\n"}, {"char_start": 752, "char_end": 833, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Tamas McKinnon\",\"color\":\"#403ec7\",\"dep\":\"Support\"},\n"}, {"char_start": 833, "char_end": 916, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cristobal Drew\",\"color\":\"#d5a65d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 916, "char_end": 1008, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Meredithe Colling\",\"color\":\"#3d9bb8\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1008, "char_end": 1100, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Maegan Adkin\",\"color\":\"#175d1f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1100, "char_end": 1186, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cheston Grievson\",\"color\":\"#90f328\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1186, "char_end": 1260, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Marie Wey\",\"color\":\"#83943b\",\"dep\":\"Legal\"},\n"}, {"char_start": 1260, "char_end": 1352, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Wendall Donaldson\",\"color\":\"#f08730\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1352, "char_end": 1430, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Karyl Bracchi\",\"color\":\"#9e544c\",\"dep\":\"Legal\"},\n"}, {"char_start": 1430, "char_end": 1525, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Robinetta Beachem\",\"color\":\"#90a046\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1525, "char_end": 1602, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Romola Bener\",\"color\":\"#e46c4c\",\"dep\":\"Legal\"},\n"}, {"char_start": 1602, "char_end": 1693, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Teresa Limmer\",\"color\":\"#1979a2\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1693, "char_end": 1778, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Danielle Argent\",\"color\":\"#ec6939\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1778, "char_end": 1874, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Thorsten Hearson\",\"color\":\"#cb6473\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1874, "char_end": 1950, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Pru Brellin\",\"color\":\"#99243e\",\"dep\":\"Sales\"},\n"}, {"char_start": 1950, "char_end": 2031, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jarrad Snartt\",\"color\":\"#575cbd\",\"dep\":\"Training\"},\n"}, {"char_start": 2031, "char_end": 2131, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sherye Teasdale-Markie\",\"color\":\"#eb6294\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2131, "char_end": 2226, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Tabatha Bagehot\",\"color\":\"#f12b0f\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2226, "char_end": 2310, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ibbie M'Quhan\",\"color\":\"#a55663\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2310, "char_end": 2395, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Westley Howgate\",\"color\":\"#29a54a\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2395, "char_end": 2487, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Winston Pellew\",\"color\":\"#2b5a11\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2487, "char_end": 2587, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Delaney Withnall\",\"color\":\"#180ae8\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2587, "char_end": 2667, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ailey Hares\",\"color\":\"#1ea698\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2667, "char_end": 2748, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Flore Klaesson\",\"color\":\"#336604\",\"dep\":\"Support\"},\n"}, {"char_start": 2748, "char_end": 2833, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kev Hymers\",\"color\":\"#c9963a\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2833, "char_end": 2917, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cathyleen Dunbobbin\",\"color\":\"#c60115\",\"dep\":\"Legal\"},\n"}, {"char_start": 2917, "char_end": 3000, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Laurent Cayette\",\"color\":\"#9e74d3\",\"dep\":\"Training\"},\n"}, {"char_start": 3000, "char_end": 3078, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Candi Vaun\",\"color\":\"#cd9b18\",\"dep\":\"Services\"},\n"}, {"char_start": 3078, "char_end": 3155, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Orton Bowart\",\"color\":\"#4ab30d\",\"dep\":\"Legal\"},\n"}, {"char_start": 3155, "char_end": 3246, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Margi Worlock\",\"color\":\"#d4a4a4\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3246, "char_end": 3325, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rhea Mutlow\",\"color\":\"#0383f9\",\"dep\":\"Services\"},\n"}, {"char_start": 3325, "char_end": 3411, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Yves Tugman\",\"color\":\"#a2c688\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3411, "char_end": 3496, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gertrudis Gaspero\",\"color\":\"#a7aedc\",\"dep\":\"Services\"},\n"}, {"char_start": 3496, "char_end": 3592, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nalani Southcott\",\"color\":\"#f86872\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3592, "char_end": 3672, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cello Murney\",\"color\":\"#ab493a\",\"dep\":\"Services\"},\n"}, {"char_start": 3672, "char_end": 3769, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Haroun Grotty\",\"color\":\"#7db58d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3769, "char_end": 3846, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lin Wylie\",\"color\":\"#7f8186\",\"dep\":\"Services\"},\n"}, {"char_start": 3846, "char_end": 3937, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jean Braganza\",\"color\":\"#a22587\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3937, "char_end": 4018, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kin Horbath\",\"color\":\"#02ad34\",\"dep\":\"Accounting\"},\n"}, {"char_start": 4018, "char_end": 4104, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Martelle Lembke\",\"color\":\"#53d997\",\"dep\":\"Engineering\"},\n"}, {"char_start": 4104, "char_end": 4189, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Montgomery Alf\",\"color\":\"#589aa3\",\"dep\":\"Engineering\"},\n"}, {"char_start": 4189, "char_end": 4279, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Laney Overy\",\"color\":\"#ca2d1d\",\"dep\":\"Business Development\"},"}]}}
{"func_name": 13360, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"tlillowka@salon.com\",\"title\":\"Trixi Lillow\",\"color\":\"#a0c90c\",\"dep\":\"Sales\"},\n    {\"id\":\"mtolankb@msu.edu\",\"title\":\"Mattie Tolan\",\"color\":\"#db53fc\",\"dep\":\"Human Resources\"},\n    {\"id\":\"aiddendenkc@si.edu\",\"title\":\"Alameda Iddenden\",\"color\":\"#2c09c7\",\"dep\":\"Business Development\"},\n    {\"id\":\"lspornerkd@netscape.com\",\"title\":\"Lynnet Sporner\",\"color\":\"#79182c\",\"dep\":\"Research and Development\"},\n    {\"id\":\"dbowrake@webeden.co.uk\",\"title\":\"Dalston Bowra\",\"color\":\"#c9ff49\",\"dep\":\"Services\"},\n    {\"id\":\"ipratikf@rediff.com\",\"title\":\"Irina Prati\",\"color\":\"#cc50f3\",\"dep\":\"Accounting\"},\n    {\"id\":\"msaysekg@dell.com\",\"title\":\"Malinde Sayse\",\"color\":\"#aaec24\",\"dep\":\"Research and Development\"},\n    {\"id\":\"mearengeykh@nifty.com\",\"title\":\"Merle Earengey\",\"color\":\"#be8825\",\"dep\":\"Research and Development\"},\n    {\"id\":\"cvoiseyki@bbb.org\",\"title\":\"Cody Voisey\",\"color\":\"#517ead\",\"dep\":\"Sales\"},\n    {\"id\":\"edarchkj@typepad.com\",\"title\":\"Etan Darch\",\"color\":\"#33f84b\",\"dep\":\"Accounting\"},\n    {\"id\":\"lvankk@wikimedia.org\",\"title\":\"Lurette Van Dijk\",\"color\":\"#6022ff\",\"dep\":\"Sales\"},\n    {\"id\":\"kmurrockkl@epa.gov\",\"title\":\"Kata Murrock\",\"color\":\"#437d7b\",\"dep\":\"Training\"},\n    {\"id\":\"vchallinerkm@weibo.com\",\"title\":\"Violette Challiner\",\"color\":\"#0507a6\",\"dep\":\"Human Resources\"},\n    {\"id\":\"zgersonkn@free.fr\",\"title\":\"Zacharia Gerson\",\"color\":\"#9233f8\",\"dep\":\"Training\"},\n    {\"id\":\"castupenasko@alexa.com\",\"title\":\"Con Astupenas\",\"color\":\"#93bb12\",\"dep\":\"Engineering\"},\n    {\"id\":\"kpurchasekp@purevolume.com\",\"title\":\"Kris Purchase\",\"color\":\"#10811c\",\"dep\":\"Sales\"},\n    {\"id\":\"mcoyekq@ow.ly\",\"title\":\"Margit Coye\",\"color\":\"#777f31\",\"dep\":\"Human Resources\"},\n    {\"id\":\"ltocquevillekr@booking.com\",\"title\":\"Lishe Tocqueville\",\"color\":\"#bed04e\",\"dep\":\"Engineering\"},\n    {\"id\":\"cleyborneks@youtu.be\",\"title\":\"Carina Leyborne\",\"color\":\"#7b1539\",\"dep\":\"Accounting\"},\n    {\"id\":\"ibrittlekt@tuttocitta.it\",\"title\":\"Irma Brittle\",\"color\":\"#96a6ee\",\"dep\":\"Sales\"},\n    {\"id\":\"mhacquelku@earthlink.net\",\"title\":\"Merwyn Hacquel\",\"color\":\"#b360c9\",\"dep\":\"Legal\"},\n    {\"id\":\"srushekv@simplemachines.org\",\"title\":\"Stacy Rushe\",\"color\":\"#eb033f\",\"dep\":\"Human Resources\"},\n    {\"id\":\"cpotierkw@unblog.fr\",\"title\":\"Christy Potier\",\"color\":\"#15f230\",\"dep\":\"Engineering\"},\n    {\"id\":\"ddonankx@washington.edu\",\"title\":\"Dottie Donan\",\"color\":\"#006eaa\",\"dep\":\"Legal\"},\n    {\"id\":\"sfrankcombeky@dell.com\",\"title\":\"Sileas Frankcombe\",\"color\":\"#f4a607\",\"dep\":\"Services\"},\n    {\"id\":\"snellekz@goo.ne.jp\",\"title\":\"Sandye Nelle\",\"color\":\"#0063f8\",\"dep\":\"Accounting\"},\n    {\"id\":\"abingalll0@springer.com\",\"title\":\"Alyssa Bingall\",\"color\":\"#ddd5d8\",\"dep\":\"Services\"},\n    {\"id\":\"mmacanelleyl1@amazon.co.jp\",\"title\":\"Minne MacAnelley\",\"color\":\"#a05857\",\"dep\":\"Services\"},\n    {\"id\":\"klockl2@ameblo.jp\",\"title\":\"Kelsy Lock\",\"color\":\"#805484\",\"dep\":\"Business Development\"},\n    {\"id\":\"byaldenl3@who.int\",\"title\":\"Berny Yalden\",\"color\":\"#ca517f\",\"dep\":\"Marketing\"},\n    {\"id\":\"rlinggoodl4@squidoo.com\",\"title\":\"Rustie Linggood\",\"color\":\"#8dc68c\",\"dep\":\"Legal\"},\n    {\"id\":\"hpeel5@marriott.com\",\"title\":\"Helen Pee\",\"color\":\"#b6e01d\",\"dep\":\"Marketing\"},\n    {\"id\":\"cballantinel6@bloglovin.com\",\"title\":\"Christie Ballantine\",\"color\":\"#1c5ea2\",\"dep\":\"Sales\"},\n    {\"id\":\"rbessl7@imgur.com\",\"title\":\"Reece Bess\",\"color\":\"#d6424c\",\"dep\":\"Accounting\"},\n    {\"id\":\"zjocklel8@theglobeandmail.com\",\"title\":\"Zelda Jockle\",\"color\":\"#e21562\",\"dep\":\"Engineering\"},\n    {\"id\":\"sgoshawkel9@acquirethisname.com\",\"title\":\"Shirline Goshawke\",\"color\":\"#9fa04a\",\"dep\":\"Sales\"},\n    {\"id\":\"ddykela@fc2.com\",\"title\":\"Duky Dyke\",\"color\":\"#42090a\",\"dep\":\"Business Development\"},\n    {\"id\":\"pmccaughanlb@linkedin.com\",\"title\":\"Perry McCaughan\",\"color\":\"#7896d8\",\"dep\":\"Support\"},\n    {\"id\":\"csillicklc@domainmarket.com\",\"title\":\"Claybourne Sillick\",\"color\":\"#6d0a62\",\"dep\":\"Support\"},\n    {\"id\":\"ywinsladeld@prweb.com\",\"title\":\"Yasmeen Winslade\",\"color\":\"#74a507\",\"dep\":\"Marketing\"},\n    {\"id\":\"mkenwrickle@unicef.org\",\"title\":\"Madelon Kenwrick\",\"color\":\"#9a14b1\",\"dep\":\"Sales\"},\n    {\"id\":\"jcrippeslf@epa.gov\",\"title\":\"Jessa Crippes\",\"color\":\"#1eed6b\",\"dep\":\"Product Management\"},\n    {\"id\":\"fcoglelg@stanford.edu\",\"title\":\"Frants Cogle\",\"color\":\"#c25891\",\"dep\":\"Engineering\"},\n    {\"id\":\"gbaggelleylh@unblog.fr\",\"title\":\"Gothart Baggelley\",\"color\":\"#64bc13\",\"dep\":\"Product Management\"},\n    {\"id\":\"dsabattierli@usgs.gov\",\"title\":\"Daven Sabattier\",\"color\":\"#1a801c\",\"dep\":\"Product Management\"},\n    {\"id\":\"asellerlj@yelp.com\",\"title\":\"Ashil Seller\",\"color\":\"#62058a\",\"dep\":\"Sales\"},\n    {\"id\":\"rmcilrathlk@usa.gov\",\"title\":\"Roze McIlrath\",\"color\":\"#b61d86\",\"dep\":\"Accounting\"},\n    {\"id\":\"dprattell@php.net\",\"title\":\"Duke Pratte\",\"color\":\"#44c1dc\",\"dep\":\"Business Development\"},\n    {\"id\":\"cshermanlm@rediff.com\",\"title\":\"Cicily Sherman\",\"color\":\"#8f589e\",\"dep\":\"Marketing\"},\n    {\"id\":\"maltamiranoln@slideshare.net\",\"title\":\"Meghann Altamirano\",\"color\":\"#cad108\",\"dep\":\"Engineering\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Trixi Lillow\",\"color\":\"#a0c90c\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mattie Tolan\",\"color\":\"#db53fc\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alameda Iddenden\",\"color\":\"#2c09c7\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lynnet Sporner\",\"color\":\"#79182c\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dalston Bowra\",\"color\":\"#c9ff49\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Irina Prati\",\"color\":\"#cc50f3\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Malinde Sayse\",\"color\":\"#aaec24\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Merle Earengey\",\"color\":\"#be8825\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cody Voisey\",\"color\":\"#517ead\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Etan Darch\",\"color\":\"#33f84b\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lurette Van Dijk\",\"color\":\"#6022ff\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kata Murrock\",\"color\":\"#437d7b\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Violette Challiner\",\"color\":\"#0507a6\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Zacharia Gerson\",\"color\":\"#9233f8\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Con Astupenas\",\"color\":\"#93bb12\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kris Purchase\",\"color\":\"#10811c\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Margit Coye\",\"color\":\"#777f31\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lishe Tocqueville\",\"color\":\"#bed04e\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Carina Leyborne\",\"color\":\"#7b1539\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Irma Brittle\",\"color\":\"#96a6ee\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Merwyn Hacquel\",\"color\":\"#b360c9\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Stacy Rushe\",\"color\":\"#eb033f\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Christy Potier\",\"color\":\"#15f230\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dottie Donan\",\"color\":\"#006eaa\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sileas Frankcombe\",\"color\":\"#f4a607\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sandye Nelle\",\"color\":\"#0063f8\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alyssa Bingall\",\"color\":\"#ddd5d8\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Minne MacAnelley\",\"color\":\"#a05857\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kelsy Lock\",\"color\":\"#805484\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Berny Yalden\",\"color\":\"#ca517f\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rustie Linggood\",\"color\":\"#8dc68c\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Helen Pee\",\"color\":\"#b6e01d\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Christie Ballantine\",\"color\":\"#1c5ea2\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Reece Bess\",\"color\":\"#d6424c\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Zelda Jockle\",\"color\":\"#e21562\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Shirline Goshawke\",\"color\":\"#9fa04a\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Duky Dyke\",\"color\":\"#42090a\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Perry McCaughan\",\"color\":\"#7896d8\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Claybourne Sillick\",\"color\":\"#6d0a62\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Yasmeen Winslade\",\"color\":\"#74a507\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Madelon Kenwrick\",\"color\":\"#9a14b1\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jessa Crippes\",\"color\":\"#1eed6b\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Frants Cogle\",\"color\":\"#c25891\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gothart Baggelley\",\"color\":\"#64bc13\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Daven Sabattier\",\"color\":\"#1a801c\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ashil Seller\",\"color\":\"#62058a\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Roze McIlrath\",\"color\":\"#b61d86\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Duke Pratte\",\"color\":\"#44c1dc\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cicily Sherman\",\"color\":\"#8f589e\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Meghann Altamirano\",\"color\":\"#cad108\",\"dep\":\"Engineering\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 89, "line": "    {\"id\":\"tlillowka@salon.com\",\"title\":\"Trixi Lillow\",\"color\":\"#a0c90c\",\"dep\":\"Sales\"},\n"}, {"line_no": 3, "char_start": 77, "char_end": 173, "line": "    {\"id\":\"mtolankb@msu.edu\",\"title\":\"Mattie Tolan\",\"color\":\"#db53fc\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 5, "char_start": 164, "char_end": 271, "line": "    {\"id\":\"aiddendenkc@si.edu\",\"title\":\"Alameda Iddenden\",\"color\":\"#2c09c7\",\"dep\":\"Business Development\"},\n"}, {"line_no": 7, "char_start": 260, "char_end": 374, "line": "    {\"id\":\"lspornerkd@netscape.com\",\"title\":\"Lynnet Sporner\",\"color\":\"#79182c\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 9, "char_start": 358, "char_end": 454, "line": "    {\"id\":\"dbowrake@webeden.co.uk\",\"title\":\"Dalston Bowra\",\"color\":\"#c9ff49\",\"dep\":\"Services\"},\n"}, {"line_no": 11, "char_start": 439, "char_end": 532, "line": "    {\"id\":\"ipratikf@rediff.com\",\"title\":\"Irina Prati\",\"color\":\"#cc50f3\",\"dep\":\"Accounting\"},\n"}, {"line_no": 13, "char_start": 520, "char_end": 627, "line": "    {\"id\":\"msaysekg@dell.com\",\"title\":\"Malinde Sayse\",\"color\":\"#aaec24\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 15, "char_start": 617, "char_end": 729, "line": "    {\"id\":\"mearengeykh@nifty.com\",\"title\":\"Merle Earengey\",\"color\":\"#be8825\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 17, "char_start": 715, "char_end": 801, "line": "    {\"id\":\"cvoiseyki@bbb.org\",\"title\":\"Cody Voisey\",\"color\":\"#517ead\",\"dep\":\"Sales\"},\n"}, {"line_no": 19, "char_start": 791, "char_end": 884, "line": "    {\"id\":\"edarchkj@typepad.com\",\"title\":\"Etan Darch\",\"color\":\"#33f84b\",\"dep\":\"Accounting\"},\n"}, {"line_no": 21, "char_start": 871, "char_end": 965, "line": "    {\"id\":\"lvankk@wikimedia.org\",\"title\":\"Lurette Van Dijk\",\"color\":\"#6022ff\",\"dep\":\"Sales\"},\n"}, {"line_no": 23, "char_start": 952, "char_end": 1043, "line": "    {\"id\":\"kmurrockkl@epa.gov\",\"title\":\"Kata Murrock\",\"color\":\"#437d7b\",\"dep\":\"Training\"},\n"}, {"line_no": 25, "char_start": 1032, "char_end": 1140, "line": "    {\"id\":\"vchallinerkm@weibo.com\",\"title\":\"Violette Challiner\",\"color\":\"#0507a6\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 27, "char_start": 1125, "char_end": 1218, "line": "    {\"id\":\"zgersonkn@free.fr\",\"title\":\"Zacharia Gerson\",\"color\":\"#9233f8\",\"dep\":\"Training\"},\n"}, {"line_no": 29, "char_start": 1208, "char_end": 1307, "line": "    {\"id\":\"castupenasko@alexa.com\",\"title\":\"Con Astupenas\",\"color\":\"#93bb12\",\"dep\":\"Engineering\"},\n"}, {"line_no": 31, "char_start": 1292, "char_end": 1389, "line": "    {\"id\":\"kpurchasekp@purevolume.com\",\"title\":\"Kris Purchase\",\"color\":\"#10811c\",\"dep\":\"Sales\"},\n"}, {"line_no": 33, "char_start": 1370, "char_end": 1462, "line": "    {\"id\":\"mcoyekq@ow.ly\",\"title\":\"Margit Coye\",\"color\":\"#777f31\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 35, "char_start": 1456, "char_end": 1563, "line": "    {\"id\":\"ltocquevillekr@booking.com\",\"title\":\"Lishe Tocqueville\",\"color\":\"#bed04e\",\"dep\":\"Engineering\"},\n"}, {"line_no": 37, "char_start": 1544, "char_end": 1642, "line": "    {\"id\":\"cleyborneks@youtu.be\",\"title\":\"Carina Leyborne\",\"color\":\"#7b1539\",\"dep\":\"Accounting\"},\n"}, {"line_no": 39, "char_start": 1629, "char_end": 1723, "line": "    {\"id\":\"ibrittlekt@tuttocitta.it\",\"title\":\"Irma Brittle\",\"color\":\"#96a6ee\",\"dep\":\"Sales\"},\n"}, {"line_no": 41, "char_start": 1706, "char_end": 1802, "line": "    {\"id\":\"mhacquelku@earthlink.net\",\"title\":\"Merwyn Hacquel\",\"color\":\"#b360c9\",\"dep\":\"Legal\"},\n"}, {"line_no": 43, "char_start": 1785, "char_end": 1891, "line": "    {\"id\":\"srushekv@simplemachines.org\",\"title\":\"Stacy Rushe\",\"color\":\"#eb033f\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 45, "char_start": 1871, "char_end": 1968, "line": "    {\"id\":\"cpotierkw@unblog.fr\",\"title\":\"Christy Potier\",\"color\":\"#15f230\",\"dep\":\"Engineering\"},\n"}, {"line_no": 47, "char_start": 1956, "char_end": 2049, "line": "    {\"id\":\"ddonankx@washington.edu\",\"title\":\"Dottie Donan\",\"color\":\"#006eaa\",\"dep\":\"Legal\"},\n"}, {"line_no": 49, "char_start": 2033, "char_end": 2133, "line": "    {\"id\":\"sfrankcombeky@dell.com\",\"title\":\"Sileas Frankcombe\",\"color\":\"#f4a607\",\"dep\":\"Services\"},\n"}, {"line_no": 51, "char_start": 2118, "char_end": 2211, "line": "    {\"id\":\"snellekz@goo.ne.jp\",\"title\":\"Sandye Nelle\",\"color\":\"#0063f8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 53, "char_start": 2200, "char_end": 2298, "line": "    {\"id\":\"abingalll0@springer.com\",\"title\":\"Alyssa Bingall\",\"color\":\"#ddd5d8\",\"dep\":\"Services\"},\n"}, {"line_no": 55, "char_start": 2282, "char_end": 2385, "line": "    {\"id\":\"mmacanelleyl1@amazon.co.jp\",\"title\":\"Minne MacAnelley\",\"color\":\"#a05857\",\"dep\":\"Services\"},\n"}, {"line_no": 57, "char_start": 2366, "char_end": 2466, "line": "    {\"id\":\"klockl2@ameblo.jp\",\"title\":\"Kelsy Lock\",\"color\":\"#805484\",\"dep\":\"Business Development\"},\n"}, {"line_no": 59, "char_start": 2456, "char_end": 2547, "line": "    {\"id\":\"byaldenl3@who.int\",\"title\":\"Berny Yalden\",\"color\":\"#ca517f\",\"dep\":\"Marketing\"},\n"}, {"line_no": 61, "char_start": 2537, "char_end": 2633, "line": "    {\"id\":\"rlinggoodl4@squidoo.com\",\"title\":\"Rustie Linggood\",\"color\":\"#8dc68c\",\"dep\":\"Legal\"},\n"}, {"line_no": 63, "char_start": 2617, "char_end": 2707, "line": "    {\"id\":\"hpeel5@marriott.com\",\"title\":\"Helen Pee\",\"color\":\"#b6e01d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 65, "char_start": 2695, "char_end": 2799, "line": "    {\"id\":\"cballantinel6@bloglovin.com\",\"title\":\"Christie Ballantine\",\"color\":\"#1c5ea2\",\"dep\":\"Sales\"},\n"}, {"line_no": 67, "char_start": 2779, "char_end": 2869, "line": "    {\"id\":\"rbessl7@imgur.com\",\"title\":\"Reece Bess\",\"color\":\"#d6424c\",\"dep\":\"Accounting\"},\n"}, {"line_no": 69, "char_start": 2859, "char_end": 2964, "line": "    {\"id\":\"zjocklel8@theglobeandmail.com\",\"title\":\"Zelda Jockle\",\"color\":\"#e21562\",\"dep\":\"Engineering\"},\n"}, {"line_no": 71, "char_start": 2942, "char_end": 3048, "line": "    {\"id\":\"sgoshawkel9@acquirethisname.com\",\"title\":\"Shirline Goshawke\",\"color\":\"#9fa04a\",\"dep\":\"Sales\"},\n"}, {"line_no": 73, "char_start": 3024, "char_end": 3121, "line": "    {\"id\":\"ddykela@fc2.com\",\"title\":\"Duky Dyke\",\"color\":\"#42090a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 75, "char_start": 3113, "char_end": 3213, "line": "    {\"id\":\"pmccaughanlb@linkedin.com\",\"title\":\"Perry McCaughan\",\"color\":\"#7896d8\",\"dep\":\"Support\"},\n"}, {"line_no": 77, "char_start": 3195, "char_end": 3300, "line": "    {\"id\":\"csillicklc@domainmarket.com\",\"title\":\"Claybourne Sillick\",\"color\":\"#6d0a62\",\"dep\":\"Support\"},\n"}, {"line_no": 79, "char_start": 3280, "char_end": 3379, "line": "    {\"id\":\"ywinsladeld@prweb.com\",\"title\":\"Yasmeen Winslade\",\"color\":\"#74a507\",\"dep\":\"Marketing\"},\n"}, {"line_no": 81, "char_start": 3365, "char_end": 3461, "line": "    {\"id\":\"mkenwrickle@unicef.org\",\"title\":\"Madelon Kenwrick\",\"color\":\"#9a14b1\",\"dep\":\"Sales\"},\n"}, {"line_no": 83, "char_start": 3446, "char_end": 3548, "line": "    {\"id\":\"jcrippeslf@epa.gov\",\"title\":\"Jessa Crippes\",\"color\":\"#1eed6b\",\"dep\":\"Product Management\"},\n"}, {"line_no": 85, "char_start": 3537, "char_end": 3634, "line": "    {\"id\":\"fcoglelg@stanford.edu\",\"title\":\"Frants Cogle\",\"color\":\"#c25891\",\"dep\":\"Engineering\"},\n"}, {"line_no": 87, "char_start": 3620, "char_end": 3730, "line": "    {\"id\":\"gbaggelleylh@unblog.fr\",\"title\":\"Gothart Baggelley\",\"color\":\"#64bc13\",\"dep\":\"Product Management\"},\n"}, {"line_no": 89, "char_start": 3715, "char_end": 3822, "line": "    {\"id\":\"dsabattierli@usgs.gov\",\"title\":\"Daven Sabattier\",\"color\":\"#1a801c\",\"dep\":\"Product Management\"},\n"}, {"line_no": 91, "char_start": 3808, "char_end": 3896, "line": "    {\"id\":\"asellerlj@yelp.com\",\"title\":\"Ashil Seller\",\"color\":\"#62058a\",\"dep\":\"Sales\"},\n"}, {"line_no": 93, "char_start": 3885, "char_end": 3980, "line": "    {\"id\":\"rmcilrathlk@usa.gov\",\"title\":\"Roze McIlrath\",\"color\":\"#b61d86\",\"dep\":\"Accounting\"},\n"}, {"line_no": 95, "char_start": 3968, "char_end": 4069, "line": "    {\"id\":\"dprattell@php.net\",\"title\":\"Duke Pratte\",\"color\":\"#44c1dc\",\"dep\":\"Business Development\"},\n"}, {"line_no": 97, "char_start": 4059, "char_end": 4156, "line": "    {\"id\":\"cshermanlm@rediff.com\",\"title\":\"Cicily Sherman\",\"color\":\"#8f589e\",\"dep\":\"Marketing\"},\n"}, {"line_no": 99, "char_start": 4142, "char_end": 4251, "line": "    {\"id\":\"maltamiranoln@slideshare.net\",\"title\":\"Meghann Altamirano\",\"color\":\"#cad108\",\"dep\":\"Engineering\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 77, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Trixi Lillow\",\"color\":\"#a0c90c\",\"dep\":\"Sales\"},\n"}, {"line_no": 4, "char_start": 77, "char_end": 164, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mattie Tolan\",\"color\":\"#db53fc\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 6, "char_start": 164, "char_end": 260, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alameda Iddenden\",\"color\":\"#2c09c7\",\"dep\":\"Business Development\"},\n"}, {"line_no": 8, "char_start": 260, "char_end": 358, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lynnet Sporner\",\"color\":\"#79182c\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 10, "char_start": 358, "char_end": 439, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dalston Bowra\",\"color\":\"#c9ff49\",\"dep\":\"Services\"},\n"}, {"line_no": 12, "char_start": 439, "char_end": 520, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Irina Prati\",\"color\":\"#cc50f3\",\"dep\":\"Accounting\"},\n"}, {"line_no": 14, "char_start": 520, "char_end": 617, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Malinde Sayse\",\"color\":\"#aaec24\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 16, "char_start": 617, "char_end": 715, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Merle Earengey\",\"color\":\"#be8825\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 18, "char_start": 715, "char_end": 791, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cody Voisey\",\"color\":\"#517ead\",\"dep\":\"Sales\"},\n"}, {"line_no": 20, "char_start": 791, "char_end": 871, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Etan Darch\",\"color\":\"#33f84b\",\"dep\":\"Accounting\"},\n"}, {"line_no": 22, "char_start": 871, "char_end": 952, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lurette Van Dijk\",\"color\":\"#6022ff\",\"dep\":\"Sales\"},\n"}, {"line_no": 24, "char_start": 952, "char_end": 1032, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kata Murrock\",\"color\":\"#437d7b\",\"dep\":\"Training\"},\n"}, {"line_no": 26, "char_start": 1032, "char_end": 1125, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Violette Challiner\",\"color\":\"#0507a6\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 28, "char_start": 1125, "char_end": 1208, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Zacharia Gerson\",\"color\":\"#9233f8\",\"dep\":\"Training\"},\n"}, {"line_no": 30, "char_start": 1208, "char_end": 1292, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Con Astupenas\",\"color\":\"#93bb12\",\"dep\":\"Engineering\"},\n"}, {"line_no": 32, "char_start": 1292, "char_end": 1370, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kris Purchase\",\"color\":\"#10811c\",\"dep\":\"Sales\"},\n"}, {"line_no": 34, "char_start": 1370, "char_end": 1456, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Margit Coye\",\"color\":\"#777f31\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 36, "char_start": 1456, "char_end": 1544, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lishe Tocqueville\",\"color\":\"#bed04e\",\"dep\":\"Engineering\"},\n"}, {"line_no": 38, "char_start": 1544, "char_end": 1629, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Carina Leyborne\",\"color\":\"#7b1539\",\"dep\":\"Accounting\"},\n"}, {"line_no": 40, "char_start": 1629, "char_end": 1706, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Irma Brittle\",\"color\":\"#96a6ee\",\"dep\":\"Sales\"},\n"}, {"line_no": 42, "char_start": 1706, "char_end": 1785, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Merwyn Hacquel\",\"color\":\"#b360c9\",\"dep\":\"Legal\"},\n"}, {"line_no": 44, "char_start": 1785, "char_end": 1871, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Stacy Rushe\",\"color\":\"#eb033f\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 46, "char_start": 1871, "char_end": 1956, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Christy Potier\",\"color\":\"#15f230\",\"dep\":\"Engineering\"},\n"}, {"line_no": 48, "char_start": 1956, "char_end": 2033, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dottie Donan\",\"color\":\"#006eaa\",\"dep\":\"Legal\"},\n"}, {"line_no": 50, "char_start": 2033, "char_end": 2118, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sileas Frankcombe\",\"color\":\"#f4a607\",\"dep\":\"Services\"},\n"}, {"line_no": 52, "char_start": 2118, "char_end": 2200, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sandye Nelle\",\"color\":\"#0063f8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 54, "char_start": 2200, "char_end": 2282, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alyssa Bingall\",\"color\":\"#ddd5d8\",\"dep\":\"Services\"},\n"}, {"line_no": 56, "char_start": 2282, "char_end": 2366, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Minne MacAnelley\",\"color\":\"#a05857\",\"dep\":\"Services\"},\n"}, {"line_no": 58, "char_start": 2366, "char_end": 2456, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kelsy Lock\",\"color\":\"#805484\",\"dep\":\"Business Development\"},\n"}, {"line_no": 60, "char_start": 2456, "char_end": 2537, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Berny Yalden\",\"color\":\"#ca517f\",\"dep\":\"Marketing\"},\n"}, {"line_no": 62, "char_start": 2537, "char_end": 2617, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rustie Linggood\",\"color\":\"#8dc68c\",\"dep\":\"Legal\"},\n"}, {"line_no": 64, "char_start": 2617, "char_end": 2695, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Helen Pee\",\"color\":\"#b6e01d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 66, "char_start": 2695, "char_end": 2779, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Christie Ballantine\",\"color\":\"#1c5ea2\",\"dep\":\"Sales\"},\n"}, {"line_no": 68, "char_start": 2779, "char_end": 2859, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Reece Bess\",\"color\":\"#d6424c\",\"dep\":\"Accounting\"},\n"}, {"line_no": 70, "char_start": 2859, "char_end": 2942, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Zelda Jockle\",\"color\":\"#e21562\",\"dep\":\"Engineering\"},\n"}, {"line_no": 72, "char_start": 2942, "char_end": 3024, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Shirline Goshawke\",\"color\":\"#9fa04a\",\"dep\":\"Sales\"},\n"}, {"line_no": 74, "char_start": 3024, "char_end": 3113, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Duky Dyke\",\"color\":\"#42090a\",\"dep\":\"Business Development\"},\n"}, {"line_no": 76, "char_start": 3113, "char_end": 3195, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Perry McCaughan\",\"color\":\"#7896d8\",\"dep\":\"Support\"},\n"}, {"line_no": 78, "char_start": 3195, "char_end": 3280, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Claybourne Sillick\",\"color\":\"#6d0a62\",\"dep\":\"Support\"},\n"}, {"line_no": 80, "char_start": 3280, "char_end": 3365, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Yasmeen Winslade\",\"color\":\"#74a507\",\"dep\":\"Marketing\"},\n"}, {"line_no": 82, "char_start": 3365, "char_end": 3446, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Madelon Kenwrick\",\"color\":\"#9a14b1\",\"dep\":\"Sales\"},\n"}, {"line_no": 84, "char_start": 3446, "char_end": 3537, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jessa Crippes\",\"color\":\"#1eed6b\",\"dep\":\"Product Management\"},\n"}, {"line_no": 86, "char_start": 3537, "char_end": 3620, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Frants Cogle\",\"color\":\"#c25891\",\"dep\":\"Engineering\"},\n"}, {"line_no": 88, "char_start": 3620, "char_end": 3715, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gothart Baggelley\",\"color\":\"#64bc13\",\"dep\":\"Product Management\"},\n"}, {"line_no": 90, "char_start": 3715, "char_end": 3808, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Daven Sabattier\",\"color\":\"#1a801c\",\"dep\":\"Product Management\"},\n"}, {"line_no": 92, "char_start": 3808, "char_end": 3885, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashil Seller\",\"color\":\"#62058a\",\"dep\":\"Sales\"},\n"}, {"line_no": 94, "char_start": 3885, "char_end": 3968, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Roze McIlrath\",\"color\":\"#b61d86\",\"dep\":\"Accounting\"},\n"}, {"line_no": 96, "char_start": 3968, "char_end": 4059, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Duke Pratte\",\"color\":\"#44c1dc\",\"dep\":\"Business Development\"},\n"}, {"line_no": 98, "char_start": 4059, "char_end": 4142, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cicily Sherman\",\"color\":\"#8f589e\",\"dep\":\"Marketing\"},\n"}, {"line_no": 100, "char_start": 4142, "char_end": 4230, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Meghann Altamirano\",\"color\":\"#cad108\",\"dep\":\"Engineering\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 89, "chars": "    {\"id\":\"tlillowka@salon.com\",\"title\":\"Trixi Lillow\",\"color\":\"#a0c90c\",\"dep\":\"Sales\"},\n"}, {"char_start": 77, "char_end": 173, "chars": "    {\"id\":\"mtolankb@msu.edu\",\"title\":\"Mattie Tolan\",\"color\":\"#db53fc\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 164, "char_end": 271, "chars": "    {\"id\":\"aiddendenkc@si.edu\",\"title\":\"Alameda Iddenden\",\"color\":\"#2c09c7\",\"dep\":\"Business Development\"},\n"}, {"char_start": 260, "char_end": 374, "chars": "    {\"id\":\"lspornerkd@netscape.com\",\"title\":\"Lynnet Sporner\",\"color\":\"#79182c\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 358, "char_end": 454, "chars": "    {\"id\":\"dbowrake@webeden.co.uk\",\"title\":\"Dalston Bowra\",\"color\":\"#c9ff49\",\"dep\":\"Services\"},\n"}, {"char_start": 439, "char_end": 532, "chars": "    {\"id\":\"ipratikf@rediff.com\",\"title\":\"Irina Prati\",\"color\":\"#cc50f3\",\"dep\":\"Accounting\"},\n"}, {"char_start": 520, "char_end": 627, "chars": "    {\"id\":\"msaysekg@dell.com\",\"title\":\"Malinde Sayse\",\"color\":\"#aaec24\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 617, "char_end": 729, "chars": "    {\"id\":\"mearengeykh@nifty.com\",\"title\":\"Merle Earengey\",\"color\":\"#be8825\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 715, "char_end": 801, "chars": "    {\"id\":\"cvoiseyki@bbb.org\",\"title\":\"Cody Voisey\",\"color\":\"#517ead\",\"dep\":\"Sales\"},\n"}, {"char_start": 791, "char_end": 884, "chars": "    {\"id\":\"edarchkj@typepad.com\",\"title\":\"Etan Darch\",\"color\":\"#33f84b\",\"dep\":\"Accounting\"},\n"}, {"char_start": 871, "char_end": 965, "chars": "    {\"id\":\"lvankk@wikimedia.org\",\"title\":\"Lurette Van Dijk\",\"color\":\"#6022ff\",\"dep\":\"Sales\"},\n"}, {"char_start": 952, "char_end": 1043, "chars": "    {\"id\":\"kmurrockkl@epa.gov\",\"title\":\"Kata Murrock\",\"color\":\"#437d7b\",\"dep\":\"Training\"},\n"}, {"char_start": 1032, "char_end": 1140, "chars": "    {\"id\":\"vchallinerkm@weibo.com\",\"title\":\"Violette Challiner\",\"color\":\"#0507a6\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1125, "char_end": 1218, "chars": "    {\"id\":\"zgersonkn@free.fr\",\"title\":\"Zacharia Gerson\",\"color\":\"#9233f8\",\"dep\":\"Training\"},\n"}, {"char_start": 1208, "char_end": 1307, "chars": "    {\"id\":\"castupenasko@alexa.com\",\"title\":\"Con Astupenas\",\"color\":\"#93bb12\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1292, "char_end": 1389, "chars": "    {\"id\":\"kpurchasekp@purevolume.com\",\"title\":\"Kris Purchase\",\"color\":\"#10811c\",\"dep\":\"Sales\"},\n"}, {"char_start": 1370, "char_end": 1462, "chars": "    {\"id\":\"mcoyekq@ow.ly\",\"title\":\"Margit Coye\",\"color\":\"#777f31\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1456, "char_end": 1563, "chars": "    {\"id\":\"ltocquevillekr@booking.com\",\"title\":\"Lishe Tocqueville\",\"color\":\"#bed04e\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1544, "char_end": 1642, "chars": "    {\"id\":\"cleyborneks@youtu.be\",\"title\":\"Carina Leyborne\",\"color\":\"#7b1539\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1629, "char_end": 1723, "chars": "    {\"id\":\"ibrittlekt@tuttocitta.it\",\"title\":\"Irma Brittle\",\"color\":\"#96a6ee\",\"dep\":\"Sales\"},\n"}, {"char_start": 1706, "char_end": 1802, "chars": "    {\"id\":\"mhacquelku@earthlink.net\",\"title\":\"Merwyn Hacquel\",\"color\":\"#b360c9\",\"dep\":\"Legal\"},\n"}, {"char_start": 1785, "char_end": 1891, "chars": "    {\"id\":\"srushekv@simplemachines.org\",\"title\":\"Stacy Rushe\",\"color\":\"#eb033f\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1871, "char_end": 1968, "chars": "    {\"id\":\"cpotierkw@unblog.fr\",\"title\":\"Christy Potier\",\"color\":\"#15f230\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1956, "char_end": 2049, "chars": "    {\"id\":\"ddonankx@washington.edu\",\"title\":\"Dottie Donan\",\"color\":\"#006eaa\",\"dep\":\"Legal\"},\n"}, {"char_start": 2033, "char_end": 2133, "chars": "    {\"id\":\"sfrankcombeky@dell.com\",\"title\":\"Sileas Frankcombe\",\"color\":\"#f4a607\",\"dep\":\"Services\"},\n"}, {"char_start": 2118, "char_end": 2211, "chars": "    {\"id\":\"snellekz@goo.ne.jp\",\"title\":\"Sandye Nelle\",\"color\":\"#0063f8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2200, "char_end": 2298, "chars": "    {\"id\":\"abingalll0@springer.com\",\"title\":\"Alyssa Bingall\",\"color\":\"#ddd5d8\",\"dep\":\"Services\"},\n"}, {"char_start": 2282, "char_end": 2385, "chars": "    {\"id\":\"mmacanelleyl1@amazon.co.jp\",\"title\":\"Minne MacAnelley\",\"color\":\"#a05857\",\"dep\":\"Services\"},\n"}, {"char_start": 2366, "char_end": 2466, "chars": "    {\"id\":\"klockl2@ameblo.jp\",\"title\":\"Kelsy Lock\",\"color\":\"#805484\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2456, "char_end": 2547, "chars": "    {\"id\":\"byaldenl3@who.int\",\"title\":\"Berny Yalden\",\"color\":\"#ca517f\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2537, "char_end": 2633, "chars": "    {\"id\":\"rlinggoodl4@squidoo.com\",\"title\":\"Rustie Linggood\",\"color\":\"#8dc68c\",\"dep\":\"Legal\"},\n"}, {"char_start": 2617, "char_end": 2707, "chars": "    {\"id\":\"hpeel5@marriott.com\",\"title\":\"Helen Pee\",\"color\":\"#b6e01d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2695, "char_end": 2799, "chars": "    {\"id\":\"cballantinel6@bloglovin.com\",\"title\":\"Christie Ballantine\",\"color\":\"#1c5ea2\",\"dep\":\"Sales\"},\n"}, {"char_start": 2779, "char_end": 2869, "chars": "    {\"id\":\"rbessl7@imgur.com\",\"title\":\"Reece Bess\",\"color\":\"#d6424c\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2859, "char_end": 2964, "chars": "    {\"id\":\"zjocklel8@theglobeandmail.com\",\"title\":\"Zelda Jockle\",\"color\":\"#e21562\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2942, "char_end": 3048, "chars": "    {\"id\":\"sgoshawkel9@acquirethisname.com\",\"title\":\"Shirline Goshawke\",\"color\":\"#9fa04a\",\"dep\":\"Sales\"},\n"}, {"char_start": 3024, "char_end": 3121, "chars": "    {\"id\":\"ddykela@fc2.com\",\"title\":\"Duky Dyke\",\"color\":\"#42090a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3113, "char_end": 3213, "chars": "    {\"id\":\"pmccaughanlb@linkedin.com\",\"title\":\"Perry McCaughan\",\"color\":\"#7896d8\",\"dep\":\"Support\"},\n"}, {"char_start": 3195, "char_end": 3300, "chars": "    {\"id\":\"csillicklc@domainmarket.com\",\"title\":\"Claybourne Sillick\",\"color\":\"#6d0a62\",\"dep\":\"Support\"},\n"}, {"char_start": 3280, "char_end": 3379, "chars": "    {\"id\":\"ywinsladeld@prweb.com\",\"title\":\"Yasmeen Winslade\",\"color\":\"#74a507\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3365, "char_end": 3461, "chars": "    {\"id\":\"mkenwrickle@unicef.org\",\"title\":\"Madelon Kenwrick\",\"color\":\"#9a14b1\",\"dep\":\"Sales\"},\n"}, {"char_start": 3446, "char_end": 3548, "chars": "    {\"id\":\"jcrippeslf@epa.gov\",\"title\":\"Jessa Crippes\",\"color\":\"#1eed6b\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3537, "char_end": 3634, "chars": "    {\"id\":\"fcoglelg@stanford.edu\",\"title\":\"Frants Cogle\",\"color\":\"#c25891\",\"dep\":\"Engineering\"},\n"}, {"char_start": 3620, "char_end": 3730, "chars": "    {\"id\":\"gbaggelleylh@unblog.fr\",\"title\":\"Gothart Baggelley\",\"color\":\"#64bc13\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3715, "char_end": 3822, "chars": "    {\"id\":\"dsabattierli@usgs.gov\",\"title\":\"Daven Sabattier\",\"color\":\"#1a801c\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3808, "char_end": 3896, "chars": "    {\"id\":\"asellerlj@yelp.com\",\"title\":\"Ashil Seller\",\"color\":\"#62058a\",\"dep\":\"Sales\"},\n"}, {"char_start": 3885, "char_end": 3980, "chars": "    {\"id\":\"rmcilrathlk@usa.gov\",\"title\":\"Roze McIlrath\",\"color\":\"#b61d86\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3968, "char_end": 4069, "chars": "    {\"id\":\"dprattell@php.net\",\"title\":\"Duke Pratte\",\"color\":\"#44c1dc\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4059, "char_end": 4156, "chars": "    {\"id\":\"cshermanlm@rediff.com\",\"title\":\"Cicily Sherman\",\"color\":\"#8f589e\",\"dep\":\"Marketing\"},\n"}, {"char_start": 4142, "char_end": 4251, "chars": "    {\"id\":\"maltamiranoln@slideshare.net\",\"title\":\"Meghann Altamirano\",\"color\":\"#cad108\",\"dep\":\"Engineering\"},"}], "added": [{"char_start": 0, "char_end": 77, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Trixi Lillow\",\"color\":\"#a0c90c\",\"dep\":\"Sales\"},\n"}, {"char_start": 77, "char_end": 164, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mattie Tolan\",\"color\":\"#db53fc\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 164, "char_end": 260, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alameda Iddenden\",\"color\":\"#2c09c7\",\"dep\":\"Business Development\"},\n"}, {"char_start": 260, "char_end": 358, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lynnet Sporner\",\"color\":\"#79182c\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 358, "char_end": 439, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dalston Bowra\",\"color\":\"#c9ff49\",\"dep\":\"Services\"},\n"}, {"char_start": 439, "char_end": 520, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Irina Prati\",\"color\":\"#cc50f3\",\"dep\":\"Accounting\"},\n"}, {"char_start": 520, "char_end": 617, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Malinde Sayse\",\"color\":\"#aaec24\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 617, "char_end": 715, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Merle Earengey\",\"color\":\"#be8825\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 715, "char_end": 791, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cody Voisey\",\"color\":\"#517ead\",\"dep\":\"Sales\"},\n"}, {"char_start": 791, "char_end": 871, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Etan Darch\",\"color\":\"#33f84b\",\"dep\":\"Accounting\"},\n"}, {"char_start": 871, "char_end": 952, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lurette Van Dijk\",\"color\":\"#6022ff\",\"dep\":\"Sales\"},\n"}, {"char_start": 952, "char_end": 1032, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kata Murrock\",\"color\":\"#437d7b\",\"dep\":\"Training\"},\n"}, {"char_start": 1032, "char_end": 1125, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Violette Challiner\",\"color\":\"#0507a6\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1125, "char_end": 1208, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Zacharia Gerson\",\"color\":\"#9233f8\",\"dep\":\"Training\"},\n"}, {"char_start": 1208, "char_end": 1292, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Con Astupenas\",\"color\":\"#93bb12\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1292, "char_end": 1370, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kris Purchase\",\"color\":\"#10811c\",\"dep\":\"Sales\"},\n"}, {"char_start": 1370, "char_end": 1456, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Margit Coye\",\"color\":\"#777f31\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1456, "char_end": 1544, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lishe Tocqueville\",\"color\":\"#bed04e\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1544, "char_end": 1629, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Carina Leyborne\",\"color\":\"#7b1539\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1629, "char_end": 1706, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Irma Brittle\",\"color\":\"#96a6ee\",\"dep\":\"Sales\"},\n"}, {"char_start": 1706, "char_end": 1785, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Merwyn Hacquel\",\"color\":\"#b360c9\",\"dep\":\"Legal\"},\n"}, {"char_start": 1785, "char_end": 1871, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Stacy Rushe\",\"color\":\"#eb033f\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1871, "char_end": 1956, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Christy Potier\",\"color\":\"#15f230\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1956, "char_end": 2033, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dottie Donan\",\"color\":\"#006eaa\",\"dep\":\"Legal\"},\n"}, {"char_start": 2033, "char_end": 2118, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sileas Frankcombe\",\"color\":\"#f4a607\",\"dep\":\"Services\"},\n"}, {"char_start": 2118, "char_end": 2200, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sandye Nelle\",\"color\":\"#0063f8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2200, "char_end": 2282, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alyssa Bingall\",\"color\":\"#ddd5d8\",\"dep\":\"Services\"},\n"}, {"char_start": 2282, "char_end": 2366, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Minne MacAnelley\",\"color\":\"#a05857\",\"dep\":\"Services\"},\n"}, {"char_start": 2366, "char_end": 2456, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kelsy Lock\",\"color\":\"#805484\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2456, "char_end": 2537, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Berny Yalden\",\"color\":\"#ca517f\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2537, "char_end": 2617, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rustie Linggood\",\"color\":\"#8dc68c\",\"dep\":\"Legal\"},\n"}, {"char_start": 2617, "char_end": 2695, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Helen Pee\",\"color\":\"#b6e01d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2695, "char_end": 2779, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Christie Ballantine\",\"color\":\"#1c5ea2\",\"dep\":\"Sales\"},\n"}, {"char_start": 2779, "char_end": 2859, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Reece Bess\",\"color\":\"#d6424c\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2859, "char_end": 2942, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Zelda Jockle\",\"color\":\"#e21562\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2942, "char_end": 3024, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Shirline Goshawke\",\"color\":\"#9fa04a\",\"dep\":\"Sales\"},\n"}, {"char_start": 3024, "char_end": 3113, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Duky Dyke\",\"color\":\"#42090a\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3113, "char_end": 3195, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Perry McCaughan\",\"color\":\"#7896d8\",\"dep\":\"Support\"},\n"}, {"char_start": 3195, "char_end": 3280, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Claybourne Sillick\",\"color\":\"#6d0a62\",\"dep\":\"Support\"},\n"}, {"char_start": 3280, "char_end": 3365, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Yasmeen Winslade\",\"color\":\"#74a507\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3365, "char_end": 3446, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Madelon Kenwrick\",\"color\":\"#9a14b1\",\"dep\":\"Sales\"},\n"}, {"char_start": 3446, "char_end": 3537, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jessa Crippes\",\"color\":\"#1eed6b\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3537, "char_end": 3620, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Frants Cogle\",\"color\":\"#c25891\",\"dep\":\"Engineering\"},\n"}, {"char_start": 3620, "char_end": 3715, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gothart Baggelley\",\"color\":\"#64bc13\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3715, "char_end": 3808, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Daven Sabattier\",\"color\":\"#1a801c\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3808, "char_end": 3885, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashil Seller\",\"color\":\"#62058a\",\"dep\":\"Sales\"},\n"}, {"char_start": 3885, "char_end": 3968, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Roze McIlrath\",\"color\":\"#b61d86\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3968, "char_end": 4059, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Duke Pratte\",\"color\":\"#44c1dc\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4059, "char_end": 4142, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cicily Sherman\",\"color\":\"#8f589e\",\"dep\":\"Marketing\"},\n"}, {"char_start": 4142, "char_end": 4230, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Meghann Altamirano\",\"color\":\"#cad108\",\"dep\":\"Engineering\"},"}]}}
{"func_name": 13361, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"jroysonlo@thetimes.co.uk\",\"title\":\"Jasper Royson\",\"color\":\"#18291e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"pwitchallslp@webs.com\",\"title\":\"Paxon Witchalls\",\"color\":\"#25fbac\",\"dep\":\"Services\"},\n    {\"id\":\"glappinglq@sohu.com\",\"title\":\"Georgetta Lapping\",\"color\":\"#bcfa8f\",\"dep\":\"Support\"},\n    {\"id\":\"asmizlr@shareasale.com\",\"title\":\"Abdel Smiz\",\"color\":\"#ce2aaa\",\"dep\":\"Product Management\"},\n    {\"id\":\"mkewls@cyberchimps.com\",\"title\":\"Murial Kew\",\"color\":\"#7f7bcc\",\"dep\":\"Marketing\"},\n    {\"id\":\"odagnanlt@cafepress.com\",\"title\":\"Oswell Dagnan\",\"color\":\"#cc3dc4\",\"dep\":\"Research and Development\"},\n    {\"id\":\"ctarbornlu@domainmarket.com\",\"title\":\"Cristina Tarborn\",\"color\":\"#a53581\",\"dep\":\"Human Resources\"},\n    {\"id\":\"bhagerghamlv@privacy.gov.au\",\"title\":\"Bobbee Hagergham\",\"color\":\"#33a46d\",\"dep\":\"Support\"},\n    {\"id\":\"pfitkinlw@ebay.co.uk\",\"title\":\"Peder Fitkin\",\"color\":\"#eec082\",\"dep\":\"Business Development\"},\n    {\"id\":\"chullyerlx@cornell.edu\",\"title\":\"Corly Hullyer\",\"color\":\"#468ea0\",\"dep\":\"Human Resources\"},\n    {\"id\":\"mstuddersly@360.cn\",\"title\":\"Merla Studders\",\"color\":\"#c7483f\",\"dep\":\"Sales\"},\n    {\"id\":\"pchandlarlz@independent.co.uk\",\"title\":\"Perry Chandlar\",\"color\":\"#d02bd6\",\"dep\":\"Business Development\"},\n    {\"id\":\"mtroakm0@bandcamp.com\",\"title\":\"Mireille Troak\",\"color\":\"#34d2c0\",\"dep\":\"Engineering\"},\n    {\"id\":\"krockcliffem1@addtoany.com\",\"title\":\"Kevin Rockcliffe\",\"color\":\"#a91f3f\",\"dep\":\"Research and Development\"},\n    {\"id\":\"hmacswaydem2@amazon.de\",\"title\":\"Herc MacSwayde\",\"color\":\"#986b66\",\"dep\":\"Legal\"},\n    {\"id\":\"nruzicm3@canalblog.com\",\"title\":\"Nicolais Ruzic\",\"color\":\"#fe6829\",\"dep\":\"Business Development\"},\n    {\"id\":\"dcundm4@ehow.com\",\"title\":\"Dorena Cund\",\"color\":\"#d526ca\",\"dep\":\"Services\"},\n    {\"id\":\"iberridgem5@miitbeian.gov.cn\",\"title\":\"Irvine Berridge\",\"color\":\"#50899d\",\"dep\":\"Legal\"},\n    {\"id\":\"zgingerm6@discovery.com\",\"title\":\"Zelig Ginger\",\"color\":\"#12b121\",\"dep\":\"Business Development\"},\n    {\"id\":\"lgrobm7@about.com\",\"title\":\"Lancelot Grob\",\"color\":\"#2d50b4\",\"dep\":\"Business Development\"},\n    {\"id\":\"mspancockm8@spiegel.de\",\"title\":\"Midge Spancock\",\"color\":\"#eb972b\",\"dep\":\"Support\"},\n    {\"id\":\"asimmgenm9@skyrock.com\",\"title\":\"Alvan Simmgen\",\"color\":\"#add02d\",\"dep\":\"Marketing\"},\n    {\"id\":\"kkeninghamma@theglobeandmail.com\",\"title\":\"Kirbie Keningham\",\"color\":\"#cc2ff9\",\"dep\":\"Human Resources\"},\n    {\"id\":\"mhamblettmb@cpanel.net\",\"title\":\"Morrie Hamblett\",\"color\":\"#29ecdb\",\"dep\":\"Accounting\"},\n    {\"id\":\"mrokemc@who.int\",\"title\":\"Magdalena Roke\",\"color\":\"#d0afc0\",\"dep\":\"Support\"},\n    {\"id\":\"hvostmd@printfriendly.com\",\"title\":\"Hunt Vost\",\"color\":\"#990f6b\",\"dep\":\"Marketing\"},\n    {\"id\":\"rbonallackme@patch.com\",\"title\":\"Rowland Bonallack\",\"color\":\"#204beb\",\"dep\":\"Human Resources\"},\n    {\"id\":\"jclacksonmf@purevolume.com\",\"title\":\"Jefferey Clackson\",\"color\":\"#9b9c87\",\"dep\":\"Sales\"},\n    {\"id\":\"dclaxtonmg@pbs.org\",\"title\":\"Dorree Claxton\",\"color\":\"#5f1eda\",\"dep\":\"Sales\"},\n    {\"id\":\"khaberghammh@thetimes.co.uk\",\"title\":\"Kori Habergham\",\"color\":\"#2416ab\",\"dep\":\"Accounting\"},\n    {\"id\":\"kgaddesmi@ask.com\",\"title\":\"Kelci Gaddes\",\"color\":\"#88c946\",\"dep\":\"Business Development\"},\n    {\"id\":\"abarnissmj@is.gd\",\"title\":\"Aleen Barniss\",\"color\":\"#9a2cb3\",\"dep\":\"Training\"},\n    {\"id\":\"fsandercroftmk@home.pl\",\"title\":\"Fanny Sandercroft\",\"color\":\"#665d09\",\"dep\":\"Accounting\"},\n    {\"id\":\"dfilipml@twitpic.com\",\"title\":\"Dorian Filip\",\"color\":\"#3febfe\",\"dep\":\"Product Management\"},\n    {\"id\":\"jdragoemm@theatlantic.com\",\"title\":\"Jaye Dragoe\",\"color\":\"#ce23a5\",\"dep\":\"Marketing\"},\n    {\"id\":\"wlongmoremn@examiner.com\",\"title\":\"Wilfrid Longmore\",\"color\":\"#5e8e95\",\"dep\":\"Services\"},\n    {\"id\":\"lcossemmo@nasa.gov\",\"title\":\"Lanita Cossem\",\"color\":\"#d9a729\",\"dep\":\"Support\"},\n    {\"id\":\"dvalentimmp@angelfire.com\",\"title\":\"Danita Valentim\",\"color\":\"#b54d4b\",\"dep\":\"Services\"},\n    {\"id\":\"smalenoirmq@noaa.gov\",\"title\":\"Sophronia Malenoir\",\"color\":\"#ca879c\",\"dep\":\"Research and Development\"},\n    {\"id\":\"bgirlingmr@chron.com\",\"title\":\"Berny Girling\",\"color\":\"#cedb3c\",\"dep\":\"Marketing\"},\n    {\"id\":\"mchaffynms@live.com\",\"title\":\"Minna Chaffyn\",\"color\":\"#8e5520\",\"dep\":\"Training\"},\n    {\"id\":\"coffellmt@mlb.com\",\"title\":\"Christabel Offell\",\"color\":\"#13a8af\",\"dep\":\"Legal\"},\n    {\"id\":\"vgeatermu@msu.edu\",\"title\":\"Vernon Geater\",\"color\":\"#19cb81\",\"dep\":\"Human Resources\"},\n    {\"id\":\"chazlewoodmv@timesonline.co.uk\",\"title\":\"Carlynne Hazlewood\",\"color\":\"#a751ef\",\"dep\":\"Business Development\"},\n    {\"id\":\"apoulsonmw@desdev.cn\",\"title\":\"Alanah Poulson\",\"color\":\"#09899d\",\"dep\":\"Marketing\"},\n    {\"id\":\"mdoddemeademx@hexun.com\",\"title\":\"Marya Doddemeade\",\"color\":\"#8ded03\",\"dep\":\"Engineering\"},\n    {\"id\":\"swilcocksmy@php.net\",\"title\":\"Sonny Wilcocks\",\"color\":\"#77708e\",\"dep\":\"Marketing\"},\n    {\"id\":\"jsteersmz@github.io\",\"title\":\"Jesselyn Steers\",\"color\":\"#88f395\",\"dep\":\"Business Development\"},\n    {\"id\":\"tcapeyn0@craigslist.org\",\"title\":\"Trenton Capey\",\"color\":\"#5cd58d\",\"dep\":\"Services\"},\n    {\"id\":\"aattriden1@youku.com\",\"title\":\"Alonso Attride\",\"color\":\"#0e2d95\",\"dep\":\"Business Development\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Jasper Royson\",\"color\":\"#18291e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Paxon Witchalls\",\"color\":\"#25fbac\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Georgetta Lapping\",\"color\":\"#bcfa8f\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Abdel Smiz\",\"color\":\"#ce2aaa\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Murial Kew\",\"color\":\"#7f7bcc\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Oswell Dagnan\",\"color\":\"#cc3dc4\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cristina Tarborn\",\"color\":\"#a53581\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Bobbee Hagergham\",\"color\":\"#33a46d\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Peder Fitkin\",\"color\":\"#eec082\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Corly Hullyer\",\"color\":\"#468ea0\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Merla Studders\",\"color\":\"#c7483f\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Perry Chandlar\",\"color\":\"#d02bd6\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mireille Troak\",\"color\":\"#34d2c0\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kevin Rockcliffe\",\"color\":\"#a91f3f\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Herc MacSwayde\",\"color\":\"#986b66\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nicolais Ruzic\",\"color\":\"#fe6829\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dorena Cund\",\"color\":\"#d526ca\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Irvine Berridge\",\"color\":\"#50899d\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Zelig Ginger\",\"color\":\"#12b121\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lancelot Grob\",\"color\":\"#2d50b4\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Midge Spancock\",\"color\":\"#eb972b\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alvan Simmgen\",\"color\":\"#add02d\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kirbie Keningham\",\"color\":\"#cc2ff9\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Morrie Hamblett\",\"color\":\"#29ecdb\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Magdalena Roke\",\"color\":\"#d0afc0\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hunt Vost\",\"color\":\"#990f6b\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rowland Bonallack\",\"color\":\"#204beb\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jefferey Clackson\",\"color\":\"#9b9c87\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dorree Claxton\",\"color\":\"#5f1eda\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kori Habergham\",\"color\":\"#2416ab\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kelci Gaddes\",\"color\":\"#88c946\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Aleen Barniss\",\"color\":\"#9a2cb3\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Fanny Sandercroft\",\"color\":\"#665d09\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Dorian Filip\",\"color\":\"#3febfe\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jaye Dragoe\",\"color\":\"#ce23a5\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Wilfrid Longmore\",\"color\":\"#5e8e95\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lanita Cossem\",\"color\":\"#d9a729\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Danita Valentim\",\"color\":\"#b54d4b\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sophronia Malenoir\",\"color\":\"#ca879c\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Berny Girling\",\"color\":\"#cedb3c\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Minna Chaffyn\",\"color\":\"#8e5520\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Christabel Offell\",\"color\":\"#13a8af\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Vernon Geater\",\"color\":\"#19cb81\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Carlynne Hazlewood\",\"color\":\"#a751ef\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alanah Poulson\",\"color\":\"#09899d\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Marya Doddemeade\",\"color\":\"#8ded03\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Sonny Wilcocks\",\"color\":\"#77708e\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jesselyn Steers\",\"color\":\"#88f395\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Trenton Capey\",\"color\":\"#5cd58d\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alonso Attride\",\"color\":\"#0e2d95\",\"dep\":\"Business Development\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 105, "line": "    {\"id\":\"jroysonlo@thetimes.co.uk\",\"title\":\"Jasper Royson\",\"color\":\"#18291e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 3, "char_start": 88, "char_end": 185, "line": "    {\"id\":\"pwitchallslp@webs.com\",\"title\":\"Paxon Witchalls\",\"color\":\"#25fbac\",\"dep\":\"Services\"},\n"}, {"line_no": 5, "char_start": 171, "char_end": 267, "line": "    {\"id\":\"glappinglq@sohu.com\",\"title\":\"Georgetta Lapping\",\"color\":\"#bcfa8f\",\"dep\":\"Support\"},\n"}, {"line_no": 7, "char_start": 255, "char_end": 358, "line": "    {\"id\":\"asmizlr@shareasale.com\",\"title\":\"Abdel Smiz\",\"color\":\"#ce2aaa\",\"dep\":\"Product Management\"},\n"}, {"line_no": 9, "char_start": 343, "char_end": 437, "line": "    {\"id\":\"mkewls@cyberchimps.com\",\"title\":\"Murial Kew\",\"color\":\"#7f7bcc\",\"dep\":\"Marketing\"},\n"}, {"line_no": 11, "char_start": 422, "char_end": 535, "line": "    {\"id\":\"odagnanlt@cafepress.com\",\"title\":\"Oswell Dagnan\",\"color\":\"#cc3dc4\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 13, "char_start": 519, "char_end": 630, "line": "    {\"id\":\"ctarbornlu@domainmarket.com\",\"title\":\"Cristina Tarborn\",\"color\":\"#a53581\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 15, "char_start": 610, "char_end": 713, "line": "    {\"id\":\"bhagerghamlv@privacy.gov.au\",\"title\":\"Bobbee Hagergham\",\"color\":\"#33a46d\",\"dep\":\"Support\"},\n"}, {"line_no": 17, "char_start": 693, "char_end": 798, "line": "    {\"id\":\"pfitkinlw@ebay.co.uk\",\"title\":\"Peder Fitkin\",\"color\":\"#eec082\",\"dep\":\"Business Development\"},\n"}, {"line_no": 19, "char_start": 785, "char_end": 888, "line": "    {\"id\":\"chullyerlx@cornell.edu\",\"title\":\"Corly Hullyer\",\"color\":\"#468ea0\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 21, "char_start": 873, "char_end": 963, "line": "    {\"id\":\"mstuddersly@360.cn\",\"title\":\"Merla Studders\",\"color\":\"#c7483f\",\"dep\":\"Sales\"},\n"}, {"line_no": 23, "char_start": 952, "char_end": 1068, "line": "    {\"id\":\"pchandlarlz@independent.co.uk\",\"title\":\"Perry Chandlar\",\"color\":\"#d02bd6\",\"dep\":\"Business Development\"},\n"}, {"line_no": 25, "char_start": 1046, "char_end": 1145, "line": "    {\"id\":\"mtroakm0@bandcamp.com\",\"title\":\"Mireille Troak\",\"color\":\"#34d2c0\",\"dep\":\"Engineering\"},\n"}, {"line_no": 27, "char_start": 1131, "char_end": 1250, "line": "    {\"id\":\"krockcliffem1@addtoany.com\",\"title\":\"Kevin Rockcliffe\",\"color\":\"#a91f3f\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 29, "char_start": 1231, "char_end": 1325, "line": "    {\"id\":\"hmacswaydem2@amazon.de\",\"title\":\"Herc MacSwayde\",\"color\":\"#986b66\",\"dep\":\"Legal\"},\n"}, {"line_no": 31, "char_start": 1310, "char_end": 1419, "line": "    {\"id\":\"nruzicm3@canalblog.com\",\"title\":\"Nicolais Ruzic\",\"color\":\"#fe6829\",\"dep\":\"Business Development\"},\n"}, {"line_no": 33, "char_start": 1404, "char_end": 1492, "line": "    {\"id\":\"dcundm4@ehow.com\",\"title\":\"Dorena Cund\",\"color\":\"#d526ca\",\"dep\":\"Services\"},\n"}, {"line_no": 35, "char_start": 1483, "char_end": 1584, "line": "    {\"id\":\"iberridgem5@miitbeian.gov.cn\",\"title\":\"Irvine Berridge\",\"color\":\"#50899d\",\"dep\":\"Legal\"},\n"}, {"line_no": 37, "char_start": 1563, "char_end": 1671, "line": "    {\"id\":\"zgingerm6@discovery.com\",\"title\":\"Zelig Ginger\",\"color\":\"#12b121\",\"dep\":\"Business Development\"},\n"}, {"line_no": 39, "char_start": 1655, "char_end": 1758, "line": "    {\"id\":\"lgrobm7@about.com\",\"title\":\"Lancelot Grob\",\"color\":\"#2d50b4\",\"dep\":\"Business Development\"},\n"}, {"line_no": 41, "char_start": 1748, "char_end": 1844, "line": "    {\"id\":\"mspancockm8@spiegel.de\",\"title\":\"Midge Spancock\",\"color\":\"#eb972b\",\"dep\":\"Support\"},\n"}, {"line_no": 43, "char_start": 1829, "char_end": 1926, "line": "    {\"id\":\"asimmgenm9@skyrock.com\",\"title\":\"Alvan Simmgen\",\"color\":\"#add02d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 45, "char_start": 1911, "char_end": 2027, "line": "    {\"id\":\"kkeninghamma@theglobeandmail.com\",\"title\":\"Kirbie Keningham\",\"color\":\"#cc2ff9\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 47, "char_start": 2002, "char_end": 2102, "line": "    {\"id\":\"mhamblettmb@cpanel.net\",\"title\":\"Morrie Hamblett\",\"color\":\"#29ecdb\",\"dep\":\"Accounting\"},\n"}, {"line_no": 49, "char_start": 2087, "char_end": 2176, "line": "    {\"id\":\"mrokemc@who.int\",\"title\":\"Magdalena Roke\",\"color\":\"#d0afc0\",\"dep\":\"Support\"},\n"}, {"line_no": 51, "char_start": 2168, "char_end": 2264, "line": "    {\"id\":\"hvostmd@printfriendly.com\",\"title\":\"Hunt Vost\",\"color\":\"#990f6b\",\"dep\":\"Marketing\"},\n"}, {"line_no": 53, "char_start": 2246, "char_end": 2353, "line": "    {\"id\":\"rbonallackme@patch.com\",\"title\":\"Rowland Bonallack\",\"color\":\"#204beb\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 55, "char_start": 2338, "char_end": 2439, "line": "    {\"id\":\"jclacksonmf@purevolume.com\",\"title\":\"Jefferey Clackson\",\"color\":\"#9b9c87\",\"dep\":\"Sales\"},\n"}, {"line_no": 57, "char_start": 2420, "char_end": 2510, "line": "    {\"id\":\"dclaxtonmg@pbs.org\",\"title\":\"Dorree Claxton\",\"color\":\"#5f1eda\",\"dep\":\"Sales\"},\n"}, {"line_no": 59, "char_start": 2499, "char_end": 2603, "line": "    {\"id\":\"khaberghammh@thetimes.co.uk\",\"title\":\"Kori Habergham\",\"color\":\"#2416ab\",\"dep\":\"Accounting\"},\n"}, {"line_no": 61, "char_start": 2583, "char_end": 2685, "line": "    {\"id\":\"kgaddesmi@ask.com\",\"title\":\"Kelci Gaddes\",\"color\":\"#88c946\",\"dep\":\"Business Development\"},\n"}, {"line_no": 63, "char_start": 2675, "char_end": 2765, "line": "    {\"id\":\"abarnissmj@is.gd\",\"title\":\"Aleen Barniss\",\"color\":\"#9a2cb3\",\"dep\":\"Training\"},\n"}, {"line_no": 65, "char_start": 2756, "char_end": 2858, "line": "    {\"id\":\"fsandercroftmk@home.pl\",\"title\":\"Fanny Sandercroft\",\"color\":\"#665d09\",\"dep\":\"Accounting\"},\n"}, {"line_no": 67, "char_start": 2843, "char_end": 2946, "line": "    {\"id\":\"dfilipml@twitpic.com\",\"title\":\"Dorian Filip\",\"color\":\"#3febfe\",\"dep\":\"Product Management\"},\n"}, {"line_no": 69, "char_start": 2933, "char_end": 3031, "line": "    {\"id\":\"jdragoemm@theatlantic.com\",\"title\":\"Jaye Dragoe\",\"color\":\"#ce23a5\",\"dep\":\"Marketing\"},\n"}, {"line_no": 71, "char_start": 3013, "char_end": 3114, "line": "    {\"id\":\"wlongmoremn@examiner.com\",\"title\":\"Wilfrid Longmore\",\"color\":\"#5e8e95\",\"dep\":\"Services\"},\n"}, {"line_no": 73, "char_start": 3097, "char_end": 3188, "line": "    {\"id\":\"lcossemmo@nasa.gov\",\"title\":\"Lanita Cossem\",\"color\":\"#d9a729\",\"dep\":\"Support\"},\n"}, {"line_no": 75, "char_start": 3177, "char_end": 3278, "line": "    {\"id\":\"dvalentimmp@angelfire.com\",\"title\":\"Danita Valentim\",\"color\":\"#b54d4b\",\"dep\":\"Services\"},\n"}, {"line_no": 77, "char_start": 3260, "char_end": 3375, "line": "    {\"id\":\"smalenoirmq@noaa.gov\",\"title\":\"Sophronia Malenoir\",\"color\":\"#ca879c\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 79, "char_start": 3362, "char_end": 3457, "line": "    {\"id\":\"bgirlingmr@chron.com\",\"title\":\"Berny Girling\",\"color\":\"#cedb3c\",\"dep\":\"Marketing\"},\n"}, {"line_no": 81, "char_start": 3444, "char_end": 3537, "line": "    {\"id\":\"mchaffynms@live.com\",\"title\":\"Minna Chaffyn\",\"color\":\"#8e5520\",\"dep\":\"Training\"},\n"}, {"line_no": 83, "char_start": 3525, "char_end": 3617, "line": "    {\"id\":\"coffellmt@mlb.com\",\"title\":\"Christabel Offell\",\"color\":\"#13a8af\",\"dep\":\"Legal\"},\n"}, {"line_no": 85, "char_start": 3607, "char_end": 3705, "line": "    {\"id\":\"vgeatermu@msu.edu\",\"title\":\"Vernon Geater\",\"color\":\"#19cb81\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 87, "char_start": 3695, "char_end": 3816, "line": "    {\"id\":\"chazlewoodmv@timesonline.co.uk\",\"title\":\"Carlynne Hazlewood\",\"color\":\"#a751ef\",\"dep\":\"Business Development\"},\n"}, {"line_no": 89, "char_start": 3793, "char_end": 3889, "line": "    {\"id\":\"apoulsonmw@desdev.cn\",\"title\":\"Alanah Poulson\",\"color\":\"#09899d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 91, "char_start": 3876, "char_end": 3979, "line": "    {\"id\":\"mdoddemeademx@hexun.com\",\"title\":\"Marya Doddemeade\",\"color\":\"#8ded03\",\"dep\":\"Engineering\"},\n"}, {"line_no": 93, "char_start": 3963, "char_end": 4058, "line": "    {\"id\":\"swilcocksmy@php.net\",\"title\":\"Sonny Wilcocks\",\"color\":\"#77708e\",\"dep\":\"Marketing\"},\n"}, {"line_no": 95, "char_start": 4046, "char_end": 4153, "line": "    {\"id\":\"jsteersmz@github.io\",\"title\":\"Jesselyn Steers\",\"color\":\"#88f395\",\"dep\":\"Business Development\"},\n"}, {"line_no": 97, "char_start": 4141, "char_end": 4238, "line": "    {\"id\":\"tcapeyn0@craigslist.org\",\"title\":\"Trenton Capey\",\"color\":\"#5cd58d\",\"dep\":\"Services\"},\n"}, {"line_no": 99, "char_start": 4222, "char_end": 4328, "line": "    {\"id\":\"aattriden1@youku.com\",\"title\":\"Alonso Attride\",\"color\":\"#0e2d95\",\"dep\":\"Business Development\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 88, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jasper Royson\",\"color\":\"#18291e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 4, "char_start": 88, "char_end": 171, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Paxon Witchalls\",\"color\":\"#25fbac\",\"dep\":\"Services\"},\n"}, {"line_no": 6, "char_start": 171, "char_end": 255, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Georgetta Lapping\",\"color\":\"#bcfa8f\",\"dep\":\"Support\"},\n"}, {"line_no": 8, "char_start": 255, "char_end": 343, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Abdel Smiz\",\"color\":\"#ce2aaa\",\"dep\":\"Product Management\"},\n"}, {"line_no": 10, "char_start": 343, "char_end": 422, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Murial Kew\",\"color\":\"#7f7bcc\",\"dep\":\"Marketing\"},\n"}, {"line_no": 12, "char_start": 422, "char_end": 519, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Oswell Dagnan\",\"color\":\"#cc3dc4\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 14, "char_start": 519, "char_end": 610, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cristina Tarborn\",\"color\":\"#a53581\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 16, "char_start": 610, "char_end": 693, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Bobbee Hagergham\",\"color\":\"#33a46d\",\"dep\":\"Support\"},\n"}, {"line_no": 18, "char_start": 693, "char_end": 785, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Peder Fitkin\",\"color\":\"#eec082\",\"dep\":\"Business Development\"},\n"}, {"line_no": 20, "char_start": 785, "char_end": 873, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Corly Hullyer\",\"color\":\"#468ea0\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 22, "char_start": 873, "char_end": 952, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Merla Studders\",\"color\":\"#c7483f\",\"dep\":\"Sales\"},\n"}, {"line_no": 24, "char_start": 952, "char_end": 1046, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Perry Chandlar\",\"color\":\"#d02bd6\",\"dep\":\"Business Development\"},\n"}, {"line_no": 26, "char_start": 1046, "char_end": 1131, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mireille Troak\",\"color\":\"#34d2c0\",\"dep\":\"Engineering\"},\n"}, {"line_no": 28, "char_start": 1131, "char_end": 1231, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kevin Rockcliffe\",\"color\":\"#a91f3f\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 30, "char_start": 1231, "char_end": 1310, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Herc MacSwayde\",\"color\":\"#986b66\",\"dep\":\"Legal\"},\n"}, {"line_no": 32, "char_start": 1310, "char_end": 1404, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nicolais Ruzic\",\"color\":\"#fe6829\",\"dep\":\"Business Development\"},\n"}, {"line_no": 34, "char_start": 1404, "char_end": 1483, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorena Cund\",\"color\":\"#d526ca\",\"dep\":\"Services\"},\n"}, {"line_no": 36, "char_start": 1483, "char_end": 1563, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Irvine Berridge\",\"color\":\"#50899d\",\"dep\":\"Legal\"},\n"}, {"line_no": 38, "char_start": 1563, "char_end": 1655, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Zelig Ginger\",\"color\":\"#12b121\",\"dep\":\"Business Development\"},\n"}, {"line_no": 40, "char_start": 1655, "char_end": 1748, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lancelot Grob\",\"color\":\"#2d50b4\",\"dep\":\"Business Development\"},\n"}, {"line_no": 42, "char_start": 1748, "char_end": 1829, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Midge Spancock\",\"color\":\"#eb972b\",\"dep\":\"Support\"},\n"}, {"line_no": 44, "char_start": 1829, "char_end": 1911, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alvan Simmgen\",\"color\":\"#add02d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 46, "char_start": 1911, "char_end": 2002, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kirbie Keningham\",\"color\":\"#cc2ff9\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 48, "char_start": 2002, "char_end": 2087, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Morrie Hamblett\",\"color\":\"#29ecdb\",\"dep\":\"Accounting\"},\n"}, {"line_no": 50, "char_start": 2087, "char_end": 2168, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Magdalena Roke\",\"color\":\"#d0afc0\",\"dep\":\"Support\"},\n"}, {"line_no": 52, "char_start": 2168, "char_end": 2246, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hunt Vost\",\"color\":\"#990f6b\",\"dep\":\"Marketing\"},\n"}, {"line_no": 54, "char_start": 2246, "char_end": 2338, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rowland Bonallack\",\"color\":\"#204beb\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 56, "char_start": 2338, "char_end": 2420, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jefferey Clackson\",\"color\":\"#9b9c87\",\"dep\":\"Sales\"},\n"}, {"line_no": 58, "char_start": 2420, "char_end": 2499, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorree Claxton\",\"color\":\"#5f1eda\",\"dep\":\"Sales\"},\n"}, {"line_no": 60, "char_start": 2499, "char_end": 2583, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kori Habergham\",\"color\":\"#2416ab\",\"dep\":\"Accounting\"},\n"}, {"line_no": 62, "char_start": 2583, "char_end": 2675, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kelci Gaddes\",\"color\":\"#88c946\",\"dep\":\"Business Development\"},\n"}, {"line_no": 64, "char_start": 2675, "char_end": 2756, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Aleen Barniss\",\"color\":\"#9a2cb3\",\"dep\":\"Training\"},\n"}, {"line_no": 66, "char_start": 2756, "char_end": 2843, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Fanny Sandercroft\",\"color\":\"#665d09\",\"dep\":\"Accounting\"},\n"}, {"line_no": 68, "char_start": 2843, "char_end": 2933, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorian Filip\",\"color\":\"#3febfe\",\"dep\":\"Product Management\"},\n"}, {"line_no": 70, "char_start": 2933, "char_end": 3013, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jaye Dragoe\",\"color\":\"#ce23a5\",\"dep\":\"Marketing\"},\n"}, {"line_no": 72, "char_start": 3013, "char_end": 3097, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Wilfrid Longmore\",\"color\":\"#5e8e95\",\"dep\":\"Services\"},\n"}, {"line_no": 74, "char_start": 3097, "char_end": 3177, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lanita Cossem\",\"color\":\"#d9a729\",\"dep\":\"Support\"},\n"}, {"line_no": 76, "char_start": 3177, "char_end": 3260, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Danita Valentim\",\"color\":\"#b54d4b\",\"dep\":\"Services\"},\n"}, {"line_no": 78, "char_start": 3260, "char_end": 3362, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sophronia Malenoir\",\"color\":\"#ca879c\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 80, "char_start": 3362, "char_end": 3444, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Berny Girling\",\"color\":\"#cedb3c\",\"dep\":\"Marketing\"},\n"}, {"line_no": 82, "char_start": 3444, "char_end": 3525, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Minna Chaffyn\",\"color\":\"#8e5520\",\"dep\":\"Training\"},\n"}, {"line_no": 84, "char_start": 3525, "char_end": 3607, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Christabel Offell\",\"color\":\"#13a8af\",\"dep\":\"Legal\"},\n"}, {"line_no": 86, "char_start": 3607, "char_end": 3695, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Vernon Geater\",\"color\":\"#19cb81\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 88, "char_start": 3695, "char_end": 3793, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Carlynne Hazlewood\",\"color\":\"#a751ef\",\"dep\":\"Business Development\"},\n"}, {"line_no": 90, "char_start": 3793, "char_end": 3876, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alanah Poulson\",\"color\":\"#09899d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 92, "char_start": 3876, "char_end": 3963, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Marya Doddemeade\",\"color\":\"#8ded03\",\"dep\":\"Engineering\"},\n"}, {"line_no": 94, "char_start": 3963, "char_end": 4046, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Sonny Wilcocks\",\"color\":\"#77708e\",\"dep\":\"Marketing\"},\n"}, {"line_no": 96, "char_start": 4046, "char_end": 4141, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jesselyn Steers\",\"color\":\"#88f395\",\"dep\":\"Business Development\"},\n"}, {"line_no": 98, "char_start": 4141, "char_end": 4222, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Trenton Capey\",\"color\":\"#5cd58d\",\"dep\":\"Services\"},\n"}, {"line_no": 100, "char_start": 4222, "char_end": 4315, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alonso Attride\",\"color\":\"#0e2d95\",\"dep\":\"Business Development\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 105, "chars": "    {\"id\":\"jroysonlo@thetimes.co.uk\",\"title\":\"Jasper Royson\",\"color\":\"#18291e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 88, "char_end": 185, "chars": "    {\"id\":\"pwitchallslp@webs.com\",\"title\":\"Paxon Witchalls\",\"color\":\"#25fbac\",\"dep\":\"Services\"},\n"}, {"char_start": 171, "char_end": 267, "chars": "    {\"id\":\"glappinglq@sohu.com\",\"title\":\"Georgetta Lapping\",\"color\":\"#bcfa8f\",\"dep\":\"Support\"},\n"}, {"char_start": 255, "char_end": 358, "chars": "    {\"id\":\"asmizlr@shareasale.com\",\"title\":\"Abdel Smiz\",\"color\":\"#ce2aaa\",\"dep\":\"Product Management\"},\n"}, {"char_start": 343, "char_end": 437, "chars": "    {\"id\":\"mkewls@cyberchimps.com\",\"title\":\"Murial Kew\",\"color\":\"#7f7bcc\",\"dep\":\"Marketing\"},\n"}, {"char_start": 422, "char_end": 535, "chars": "    {\"id\":\"odagnanlt@cafepress.com\",\"title\":\"Oswell Dagnan\",\"color\":\"#cc3dc4\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 519, "char_end": 630, "chars": "    {\"id\":\"ctarbornlu@domainmarket.com\",\"title\":\"Cristina Tarborn\",\"color\":\"#a53581\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 610, "char_end": 713, "chars": "    {\"id\":\"bhagerghamlv@privacy.gov.au\",\"title\":\"Bobbee Hagergham\",\"color\":\"#33a46d\",\"dep\":\"Support\"},\n"}, {"char_start": 693, "char_end": 798, "chars": "    {\"id\":\"pfitkinlw@ebay.co.uk\",\"title\":\"Peder Fitkin\",\"color\":\"#eec082\",\"dep\":\"Business Development\"},\n"}, {"char_start": 785, "char_end": 888, "chars": "    {\"id\":\"chullyerlx@cornell.edu\",\"title\":\"Corly Hullyer\",\"color\":\"#468ea0\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 873, "char_end": 963, "chars": "    {\"id\":\"mstuddersly@360.cn\",\"title\":\"Merla Studders\",\"color\":\"#c7483f\",\"dep\":\"Sales\"},\n"}, {"char_start": 952, "char_end": 1068, "chars": "    {\"id\":\"pchandlarlz@independent.co.uk\",\"title\":\"Perry Chandlar\",\"color\":\"#d02bd6\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1046, "char_end": 1145, "chars": "    {\"id\":\"mtroakm0@bandcamp.com\",\"title\":\"Mireille Troak\",\"color\":\"#34d2c0\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1131, "char_end": 1250, "chars": "    {\"id\":\"krockcliffem1@addtoany.com\",\"title\":\"Kevin Rockcliffe\",\"color\":\"#a91f3f\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1231, "char_end": 1325, "chars": "    {\"id\":\"hmacswaydem2@amazon.de\",\"title\":\"Herc MacSwayde\",\"color\":\"#986b66\",\"dep\":\"Legal\"},\n"}, {"char_start": 1310, "char_end": 1419, "chars": "    {\"id\":\"nruzicm3@canalblog.com\",\"title\":\"Nicolais Ruzic\",\"color\":\"#fe6829\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1404, "char_end": 1492, "chars": "    {\"id\":\"dcundm4@ehow.com\",\"title\":\"Dorena Cund\",\"color\":\"#d526ca\",\"dep\":\"Services\"},\n"}, {"char_start": 1483, "char_end": 1584, "chars": "    {\"id\":\"iberridgem5@miitbeian.gov.cn\",\"title\":\"Irvine Berridge\",\"color\":\"#50899d\",\"dep\":\"Legal\"},\n"}, {"char_start": 1563, "char_end": 1671, "chars": "    {\"id\":\"zgingerm6@discovery.com\",\"title\":\"Zelig Ginger\",\"color\":\"#12b121\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1655, "char_end": 1758, "chars": "    {\"id\":\"lgrobm7@about.com\",\"title\":\"Lancelot Grob\",\"color\":\"#2d50b4\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1748, "char_end": 1844, "chars": "    {\"id\":\"mspancockm8@spiegel.de\",\"title\":\"Midge Spancock\",\"color\":\"#eb972b\",\"dep\":\"Support\"},\n"}, {"char_start": 1829, "char_end": 1926, "chars": "    {\"id\":\"asimmgenm9@skyrock.com\",\"title\":\"Alvan Simmgen\",\"color\":\"#add02d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1911, "char_end": 2027, "chars": "    {\"id\":\"kkeninghamma@theglobeandmail.com\",\"title\":\"Kirbie Keningham\",\"color\":\"#cc2ff9\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2002, "char_end": 2102, "chars": "    {\"id\":\"mhamblettmb@cpanel.net\",\"title\":\"Morrie Hamblett\",\"color\":\"#29ecdb\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2087, "char_end": 2176, "chars": "    {\"id\":\"mrokemc@who.int\",\"title\":\"Magdalena Roke\",\"color\":\"#d0afc0\",\"dep\":\"Support\"},\n"}, {"char_start": 2168, "char_end": 2264, "chars": "    {\"id\":\"hvostmd@printfriendly.com\",\"title\":\"Hunt Vost\",\"color\":\"#990f6b\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2246, "char_end": 2353, "chars": "    {\"id\":\"rbonallackme@patch.com\",\"title\":\"Rowland Bonallack\",\"color\":\"#204beb\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2338, "char_end": 2439, "chars": "    {\"id\":\"jclacksonmf@purevolume.com\",\"title\":\"Jefferey Clackson\",\"color\":\"#9b9c87\",\"dep\":\"Sales\"},\n"}, {"char_start": 2420, "char_end": 2510, "chars": "    {\"id\":\"dclaxtonmg@pbs.org\",\"title\":\"Dorree Claxton\",\"color\":\"#5f1eda\",\"dep\":\"Sales\"},\n"}, {"char_start": 2499, "char_end": 2603, "chars": "    {\"id\":\"khaberghammh@thetimes.co.uk\",\"title\":\"Kori Habergham\",\"color\":\"#2416ab\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2583, "char_end": 2685, "chars": "    {\"id\":\"kgaddesmi@ask.com\",\"title\":\"Kelci Gaddes\",\"color\":\"#88c946\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2675, "char_end": 2765, "chars": "    {\"id\":\"abarnissmj@is.gd\",\"title\":\"Aleen Barniss\",\"color\":\"#9a2cb3\",\"dep\":\"Training\"},\n"}, {"char_start": 2756, "char_end": 2858, "chars": "    {\"id\":\"fsandercroftmk@home.pl\",\"title\":\"Fanny Sandercroft\",\"color\":\"#665d09\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2843, "char_end": 2946, "chars": "    {\"id\":\"dfilipml@twitpic.com\",\"title\":\"Dorian Filip\",\"color\":\"#3febfe\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2933, "char_end": 3031, "chars": "    {\"id\":\"jdragoemm@theatlantic.com\",\"title\":\"Jaye Dragoe\",\"color\":\"#ce23a5\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3013, "char_end": 3114, "chars": "    {\"id\":\"wlongmoremn@examiner.com\",\"title\":\"Wilfrid Longmore\",\"color\":\"#5e8e95\",\"dep\":\"Services\"},\n"}, {"char_start": 3097, "char_end": 3188, "chars": "    {\"id\":\"lcossemmo@nasa.gov\",\"title\":\"Lanita Cossem\",\"color\":\"#d9a729\",\"dep\":\"Support\"},\n"}, {"char_start": 3177, "char_end": 3278, "chars": "    {\"id\":\"dvalentimmp@angelfire.com\",\"title\":\"Danita Valentim\",\"color\":\"#b54d4b\",\"dep\":\"Services\"},\n"}, {"char_start": 3260, "char_end": 3375, "chars": "    {\"id\":\"smalenoirmq@noaa.gov\",\"title\":\"Sophronia Malenoir\",\"color\":\"#ca879c\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3362, "char_end": 3457, "chars": "    {\"id\":\"bgirlingmr@chron.com\",\"title\":\"Berny Girling\",\"color\":\"#cedb3c\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3444, "char_end": 3537, "chars": "    {\"id\":\"mchaffynms@live.com\",\"title\":\"Minna Chaffyn\",\"color\":\"#8e5520\",\"dep\":\"Training\"},\n"}, {"char_start": 3525, "char_end": 3617, "chars": "    {\"id\":\"coffellmt@mlb.com\",\"title\":\"Christabel Offell\",\"color\":\"#13a8af\",\"dep\":\"Legal\"},\n"}, {"char_start": 3607, "char_end": 3705, "chars": "    {\"id\":\"vgeatermu@msu.edu\",\"title\":\"Vernon Geater\",\"color\":\"#19cb81\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3695, "char_end": 3816, "chars": "    {\"id\":\"chazlewoodmv@timesonline.co.uk\",\"title\":\"Carlynne Hazlewood\",\"color\":\"#a751ef\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3793, "char_end": 3889, "chars": "    {\"id\":\"apoulsonmw@desdev.cn\",\"title\":\"Alanah Poulson\",\"color\":\"#09899d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3876, "char_end": 3979, "chars": "    {\"id\":\"mdoddemeademx@hexun.com\",\"title\":\"Marya Doddemeade\",\"color\":\"#8ded03\",\"dep\":\"Engineering\"},\n"}, {"char_start": 3963, "char_end": 4058, "chars": "    {\"id\":\"swilcocksmy@php.net\",\"title\":\"Sonny Wilcocks\",\"color\":\"#77708e\",\"dep\":\"Marketing\"},\n"}, {"char_start": 4046, "char_end": 4153, "chars": "    {\"id\":\"jsteersmz@github.io\",\"title\":\"Jesselyn Steers\",\"color\":\"#88f395\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4141, "char_end": 4238, "chars": "    {\"id\":\"tcapeyn0@craigslist.org\",\"title\":\"Trenton Capey\",\"color\":\"#5cd58d\",\"dep\":\"Services\"},\n"}, {"char_start": 4222, "char_end": 4328, "chars": "    {\"id\":\"aattriden1@youku.com\",\"title\":\"Alonso Attride\",\"color\":\"#0e2d95\",\"dep\":\"Business Development\"},"}], "added": [{"char_start": 0, "char_end": 88, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jasper Royson\",\"color\":\"#18291e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 88, "char_end": 171, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Paxon Witchalls\",\"color\":\"#25fbac\",\"dep\":\"Services\"},\n"}, {"char_start": 171, "char_end": 255, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Georgetta Lapping\",\"color\":\"#bcfa8f\",\"dep\":\"Support\"},\n"}, {"char_start": 255, "char_end": 343, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Abdel Smiz\",\"color\":\"#ce2aaa\",\"dep\":\"Product Management\"},\n"}, {"char_start": 343, "char_end": 422, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Murial Kew\",\"color\":\"#7f7bcc\",\"dep\":\"Marketing\"},\n"}, {"char_start": 422, "char_end": 519, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Oswell Dagnan\",\"color\":\"#cc3dc4\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 519, "char_end": 610, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cristina Tarborn\",\"color\":\"#a53581\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 610, "char_end": 693, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Bobbee Hagergham\",\"color\":\"#33a46d\",\"dep\":\"Support\"},\n"}, {"char_start": 693, "char_end": 785, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Peder Fitkin\",\"color\":\"#eec082\",\"dep\":\"Business Development\"},\n"}, {"char_start": 785, "char_end": 873, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Corly Hullyer\",\"color\":\"#468ea0\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 873, "char_end": 952, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Merla Studders\",\"color\":\"#c7483f\",\"dep\":\"Sales\"},\n"}, {"char_start": 952, "char_end": 1046, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Perry Chandlar\",\"color\":\"#d02bd6\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1046, "char_end": 1131, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mireille Troak\",\"color\":\"#34d2c0\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1131, "char_end": 1231, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kevin Rockcliffe\",\"color\":\"#a91f3f\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 1231, "char_end": 1310, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Herc MacSwayde\",\"color\":\"#986b66\",\"dep\":\"Legal\"},\n"}, {"char_start": 1310, "char_end": 1404, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nicolais Ruzic\",\"color\":\"#fe6829\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1404, "char_end": 1483, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorena Cund\",\"color\":\"#d526ca\",\"dep\":\"Services\"},\n"}, {"char_start": 1483, "char_end": 1563, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Irvine Berridge\",\"color\":\"#50899d\",\"dep\":\"Legal\"},\n"}, {"char_start": 1563, "char_end": 1655, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Zelig Ginger\",\"color\":\"#12b121\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1655, "char_end": 1748, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lancelot Grob\",\"color\":\"#2d50b4\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1748, "char_end": 1829, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Midge Spancock\",\"color\":\"#eb972b\",\"dep\":\"Support\"},\n"}, {"char_start": 1829, "char_end": 1911, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alvan Simmgen\",\"color\":\"#add02d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1911, "char_end": 2002, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kirbie Keningham\",\"color\":\"#cc2ff9\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2002, "char_end": 2087, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Morrie Hamblett\",\"color\":\"#29ecdb\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2087, "char_end": 2168, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Magdalena Roke\",\"color\":\"#d0afc0\",\"dep\":\"Support\"},\n"}, {"char_start": 2168, "char_end": 2246, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hunt Vost\",\"color\":\"#990f6b\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2246, "char_end": 2338, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rowland Bonallack\",\"color\":\"#204beb\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2338, "char_end": 2420, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jefferey Clackson\",\"color\":\"#9b9c87\",\"dep\":\"Sales\"},\n"}, {"char_start": 2420, "char_end": 2499, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorree Claxton\",\"color\":\"#5f1eda\",\"dep\":\"Sales\"},\n"}, {"char_start": 2499, "char_end": 2583, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kori Habergham\",\"color\":\"#2416ab\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2583, "char_end": 2675, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kelci Gaddes\",\"color\":\"#88c946\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2675, "char_end": 2756, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Aleen Barniss\",\"color\":\"#9a2cb3\",\"dep\":\"Training\"},\n"}, {"char_start": 2756, "char_end": 2843, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Fanny Sandercroft\",\"color\":\"#665d09\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2843, "char_end": 2933, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Dorian Filip\",\"color\":\"#3febfe\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2933, "char_end": 3013, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jaye Dragoe\",\"color\":\"#ce23a5\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3013, "char_end": 3097, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Wilfrid Longmore\",\"color\":\"#5e8e95\",\"dep\":\"Services\"},\n"}, {"char_start": 3097, "char_end": 3177, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lanita Cossem\",\"color\":\"#d9a729\",\"dep\":\"Support\"},\n"}, {"char_start": 3177, "char_end": 3260, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Danita Valentim\",\"color\":\"#b54d4b\",\"dep\":\"Services\"},\n"}, {"char_start": 3260, "char_end": 3362, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sophronia Malenoir\",\"color\":\"#ca879c\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3362, "char_end": 3444, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Berny Girling\",\"color\":\"#cedb3c\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3444, "char_end": 3525, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Minna Chaffyn\",\"color\":\"#8e5520\",\"dep\":\"Training\"},\n"}, {"char_start": 3525, "char_end": 3607, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Christabel Offell\",\"color\":\"#13a8af\",\"dep\":\"Legal\"},\n"}, {"char_start": 3607, "char_end": 3695, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Vernon Geater\",\"color\":\"#19cb81\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3695, "char_end": 3793, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Carlynne Hazlewood\",\"color\":\"#a751ef\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3793, "char_end": 3876, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alanah Poulson\",\"color\":\"#09899d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3876, "char_end": 3963, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Marya Doddemeade\",\"color\":\"#8ded03\",\"dep\":\"Engineering\"},\n"}, {"char_start": 3963, "char_end": 4046, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Sonny Wilcocks\",\"color\":\"#77708e\",\"dep\":\"Marketing\"},\n"}, {"char_start": 4046, "char_end": 4141, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jesselyn Steers\",\"color\":\"#88f395\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4141, "char_end": 4222, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Trenton Capey\",\"color\":\"#5cd58d\",\"dep\":\"Services\"},\n"}, {"char_start": 4222, "char_end": 4315, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alonso Attride\",\"color\":\"#0e2d95\",\"dep\":\"Business Development\"},"}]}}
{"func_name": 13362, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"tobradainn2@paginegialle.it\",\"title\":\"Theresita O'Bradain\",\"color\":\"#aa49ea\",\"dep\":\"Legal\"},\n    {\"id\":\"gdowdan3@ucoz.ru\",\"title\":\"Georges Dowda\",\"color\":\"#c32232\",\"dep\":\"Sales\"},\n    {\"id\":\"irablenn4@prweb.com\",\"title\":\"Ines Rablen\",\"color\":\"#c64dc4\",\"dep\":\"Accounting\"},\n    {\"id\":\"aogavinn5@netlog.com\",\"title\":\"Ashlen O'Gavin\",\"color\":\"#2101e7\",\"dep\":\"Training\"},\n    {\"id\":\"mdumbartonn6@europa.eu\",\"title\":\"Mathilde Dumbarton\",\"color\":\"#1d8965\",\"dep\":\"Services\"},\n    {\"id\":\"esewilln7@seesaa.net\",\"title\":\"Elnar Sewill\",\"color\":\"#bd834a\",\"dep\":\"Marketing\"},\n    {\"id\":\"nmurtelln8@comcast.net\",\"title\":\"Noella Murtell\",\"color\":\"#b01d7d\",\"dep\":\"Marketing\"},\n    {\"id\":\"tantognazzin9@vimeo.com\",\"title\":\"Trever Antognazzi\",\"color\":\"#231d1f\",\"dep\":\"Engineering\"},\n    {\"id\":\"mmceniryna@va.gov\",\"title\":\"Mariann McEniry\",\"color\":\"#8046f9\",\"dep\":\"Human Resources\"},\n    {\"id\":\"clatimernb@foxnews.com\",\"title\":\"Clo Latimer\",\"color\":\"#2f594e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"fwalickinc@epa.gov\",\"title\":\"Florrie Walicki\",\"color\":\"#979ec5\",\"dep\":\"Training\"},\n    {\"id\":\"rcallawaynd@tumblr.com\",\"title\":\"Rancell Callaway\",\"color\":\"#02aedc\",\"dep\":\"Marketing\"},\n    {\"id\":\"sdolmanne@icq.com\",\"title\":\"Samantha Dolman\",\"color\":\"#a99384\",\"dep\":\"Business Development\"},\n    {\"id\":\"urustonnf@cargocollective.com\",\"title\":\"Umeko Ruston\",\"color\":\"#44d9cb\",\"dep\":\"Business Development\"},\n    {\"id\":\"tkellingtonng@businessinsider.com\",\"title\":\"Thedrick Kellington\",\"color\":\"#75e7a8\",\"dep\":\"Accounting\"},\n    {\"id\":\"sbebisnh@wix.com\",\"title\":\"Scarlett Bebis\",\"color\":\"#9514a0\",\"dep\":\"Business Development\"},\n    {\"id\":\"nsturgeonni@about.me\",\"title\":\"Noah Sturgeon\",\"color\":\"#0124e0\",\"dep\":\"Services\"},\n    {\"id\":\"ddalyielnj@wp.com\",\"title\":\"Darell Dalyiel\",\"color\":\"#afc471\",\"dep\":\"Accounting\"},\n    {\"id\":\"rbeverleynk@delicious.com\",\"title\":\"Redd Beverley\",\"color\":\"#1ae7f7\",\"dep\":\"Business Development\"},\n    {\"id\":\"bwycliffnl@gnu.org\",\"title\":\"Birgit Wycliff\",\"color\":\"#ce6eca\",\"dep\":\"Accounting\"},\n    {\"id\":\"mgreenwoodnm@godaddy.com\",\"title\":\"Marjie Greenwood\",\"color\":\"#eead7b\",\"dep\":\"Sales\"},\n    {\"id\":\"pamayann@pen.io\",\"title\":\"Petronella Amaya\",\"color\":\"#1640a8\",\"dep\":\"Services\"},\n    {\"id\":\"eschapirono@people.com.cn\",\"title\":\"Egbert Schapiro\",\"color\":\"#872347\",\"dep\":\"Human Resources\"},\n    {\"id\":\"ccoomernp@google.de\",\"title\":\"Christiano Coomer\",\"color\":\"#77466b\",\"dep\":\"Marketing\"},\n    {\"id\":\"ldeeveynq@ebay.com\",\"title\":\"Lowell Deevey\",\"color\":\"#9d016a\",\"dep\":\"Legal\"},\n    {\"id\":\"csewardsnr@godaddy.com\",\"title\":\"Catharina Sewards\",\"color\":\"#1abb4e\",\"dep\":\"Support\"},\n    {\"id\":\"bdumkens@theglobeandmail.com\",\"title\":\"Brina Dumke\",\"color\":\"#b98dcd\",\"dep\":\"Legal\"},\n    {\"id\":\"hbafordnt@adobe.com\",\"title\":\"Harriott Baford\",\"color\":\"#ff1150\",\"dep\":\"Services\"},\n    {\"id\":\"aisakovnu@vk.com\",\"title\":\"Annalise Isakov\",\"color\":\"#884e79\",\"dep\":\"Engineering\"},\n    {\"id\":\"lgherardinv@pbs.org\",\"title\":\"Lothaire Gherardi\",\"color\":\"#921fea\",\"dep\":\"Research and Development\"},\n    {\"id\":\"dshillidaynw@vistaprint.com\",\"title\":\"Duff Shilliday\",\"color\":\"#57048e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"erathmellnx@woothemes.com\",\"title\":\"Elaine Rathmell\",\"color\":\"#c07c04\",\"dep\":\"Legal\"},\n    {\"id\":\"cbrussellny@altervista.org\",\"title\":\"Constance Brussell\",\"color\":\"#1b79dc\",\"dep\":\"Product Management\"},\n    {\"id\":\"brimesnz@illinois.edu\",\"title\":\"Britte Rimes\",\"color\":\"#6e6a5f\",\"dep\":\"Engineering\"},\n    {\"id\":\"esartono0@cnbc.com\",\"title\":\"Elvina Sarton\",\"color\":\"#51fce4\",\"dep\":\"Research and Development\"},\n    {\"id\":\"bghidettio1@deliciousdays.com\",\"title\":\"Bary Ghidetti\",\"color\":\"#5e0a32\",\"dep\":\"Human Resources\"},\n    {\"id\":\"abriano2@theglobeandmail.com\",\"title\":\"Amalle Brian\",\"color\":\"#a8be0c\",\"dep\":\"Sales\"},\n    {\"id\":\"mhaimeo3@ning.com\",\"title\":\"Mira Haime\",\"color\":\"#9fec08\",\"dep\":\"Product Management\"},\n    {\"id\":\"molvero4@shinystat.com\",\"title\":\"Margaux Olver\",\"color\":\"#4c5ae4\",\"dep\":\"Legal\"},\n    {\"id\":\"jwellbelovedo5@infoseek.co.jp\",\"title\":\"Joan Wellbeloved\",\"color\":\"#ad6926\",\"dep\":\"Services\"},\n    {\"id\":\"edeo6@go.com\",\"title\":\"Enoch de Lloyd\",\"color\":\"#e59d5f\",\"dep\":\"Human Resources\"},\n    {\"id\":\"cjosowitzo7@indiatimes.com\",\"title\":\"Constantine Josowitz\",\"color\":\"#7a65f1\",\"dep\":\"Accounting\"},\n    {\"id\":\"kpetreczo8@nhs.uk\",\"title\":\"Kassie Petrecz\",\"color\":\"#5b37ba\",\"dep\":\"Research and Development\"},\n    {\"id\":\"hlintillo9@digg.com\",\"title\":\"Hayden Lintill\",\"color\":\"#54da89\",\"dep\":\"Sales\"},\n    {\"id\":\"dderbyshireoa@feedburner.com\",\"title\":\"Devy Derbyshire\",\"color\":\"#545937\",\"dep\":\"Training\"},\n    {\"id\":\"kthoumassonob@msn.com\",\"title\":\"Kari Thoumasson\",\"color\":\"#abf7cd\",\"dep\":\"Marketing\"},\n    {\"id\":\"sbrooksoc@ucla.edu\",\"title\":\"Shara Brooks\",\"color\":\"#df72c2\",\"dep\":\"Support\"},\n    {\"id\":\"bbiddlestoneod@symantec.com\",\"title\":\"Barb Biddlestone\",\"color\":\"#777621\",\"dep\":\"Product Management\"},\n    {\"id\":\"ghattooe@squarespace.com\",\"title\":\"Gwendolin Hatto\",\"color\":\"#80aca8\",\"dep\":\"Product Management\"},\n    {\"id\":\"gbeamesof@hostgator.com\",\"title\":\"Gerrard Beames\",\"color\":\"#72adcb\",\"dep\":\"Marketing\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Theresita O'Bradain\",\"color\":\"#aa49ea\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Georges Dowda\",\"color\":\"#c32232\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ines Rablen\",\"color\":\"#c64dc4\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ashlen O'Gavin\",\"color\":\"#2101e7\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mathilde Dumbarton\",\"color\":\"#1d8965\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Elnar Sewill\",\"color\":\"#bd834a\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Noella Murtell\",\"color\":\"#b01d7d\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Trever Antognazzi\",\"color\":\"#231d1f\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mariann McEniry\",\"color\":\"#8046f9\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Clo Latimer\",\"color\":\"#2f594e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Florrie Walicki\",\"color\":\"#979ec5\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rancell Callaway\",\"color\":\"#02aedc\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Samantha Dolman\",\"color\":\"#a99384\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Umeko Ruston\",\"color\":\"#44d9cb\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Thedrick Kellington\",\"color\":\"#75e7a8\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Scarlett Bebis\",\"color\":\"#9514a0\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Noah Sturgeon\",\"color\":\"#0124e0\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Darell Dalyiel\",\"color\":\"#afc471\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Redd Beverley\",\"color\":\"#1ae7f7\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Birgit Wycliff\",\"color\":\"#ce6eca\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Marjie Greenwood\",\"color\":\"#eead7b\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Petronella Amaya\",\"color\":\"#1640a8\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Egbert Schapiro\",\"color\":\"#872347\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Christiano Coomer\",\"color\":\"#77466b\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lowell Deevey\",\"color\":\"#9d016a\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Catharina Sewards\",\"color\":\"#1abb4e\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Brina Dumke\",\"color\":\"#b98dcd\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Harriott Baford\",\"color\":\"#ff1150\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Annalise Isakov\",\"color\":\"#884e79\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lothaire Gherardi\",\"color\":\"#921fea\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Duff Shilliday\",\"color\":\"#57048e\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Elaine Rathmell\",\"color\":\"#c07c04\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Constance Brussell\",\"color\":\"#1b79dc\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Britte Rimes\",\"color\":\"#6e6a5f\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Elvina Sarton\",\"color\":\"#51fce4\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Bary Ghidetti\",\"color\":\"#5e0a32\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Amalle Brian\",\"color\":\"#a8be0c\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mira Haime\",\"color\":\"#9fec08\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Margaux Olver\",\"color\":\"#4c5ae4\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Joan Wellbeloved\",\"color\":\"#ad6926\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Enoch de Lloyd\",\"color\":\"#e59d5f\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Constantine Josowitz\",\"color\":\"#7a65f1\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kassie Petrecz\",\"color\":\"#5b37ba\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hayden Lintill\",\"color\":\"#54da89\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Devy Derbyshire\",\"color\":\"#545937\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Kari Thoumasson\",\"color\":\"#abf7cd\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Shara Brooks\",\"color\":\"#df72c2\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Barb Biddlestone\",\"color\":\"#777621\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gwendolin Hatto\",\"color\":\"#80aca8\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Gerrard Beames\",\"color\":\"#72adcb\",\"dep\":\"Marketing\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 104, "line": "    {\"id\":\"tobradainn2@paginegialle.it\",\"title\":\"Theresita O'Bradain\",\"color\":\"#aa49ea\",\"dep\":\"Legal\"},\n"}, {"line_no": 3, "char_start": 84, "char_end": 171, "line": "    {\"id\":\"gdowdan3@ucoz.ru\",\"title\":\"Georges Dowda\",\"color\":\"#c32232\",\"dep\":\"Sales\"},\n"}, {"line_no": 5, "char_start": 162, "char_end": 255, "line": "    {\"id\":\"irablenn4@prweb.com\",\"title\":\"Ines Rablen\",\"color\":\"#c64dc4\",\"dep\":\"Accounting\"},\n"}, {"line_no": 7, "char_start": 243, "char_end": 338, "line": "    {\"id\":\"aogavinn5@netlog.com\",\"title\":\"Ashlen O'Gavin\",\"color\":\"#2101e7\",\"dep\":\"Training\"},\n"}, {"line_no": 9, "char_start": 325, "char_end": 426, "line": "    {\"id\":\"mdumbartonn6@europa.eu\",\"title\":\"Mathilde Dumbarton\",\"color\":\"#1d8965\",\"dep\":\"Services\"},\n"}, {"line_no": 11, "char_start": 411, "char_end": 505, "line": "    {\"id\":\"esewilln7@seesaa.net\",\"title\":\"Elnar Sewill\",\"color\":\"#bd834a\",\"dep\":\"Marketing\"},\n"}, {"line_no": 13, "char_start": 492, "char_end": 590, "line": "    {\"id\":\"nmurtelln8@comcast.net\",\"title\":\"Noella Murtell\",\"color\":\"#b01d7d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 15, "char_start": 575, "char_end": 679, "line": "    {\"id\":\"tantognazzin9@vimeo.com\",\"title\":\"Trever Antognazzi\",\"color\":\"#231d1f\",\"dep\":\"Engineering\"},\n"}, {"line_no": 17, "char_start": 663, "char_end": 763, "line": "    {\"id\":\"mmceniryna@va.gov\",\"title\":\"Mariann McEniry\",\"color\":\"#8046f9\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 19, "char_start": 753, "char_end": 854, "line": "    {\"id\":\"clatimernb@foxnews.com\",\"title\":\"Clo Latimer\",\"color\":\"#2f594e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 21, "char_start": 839, "char_end": 933, "line": "    {\"id\":\"fwalickinc@epa.gov\",\"title\":\"Florrie Walicki\",\"color\":\"#979ec5\",\"dep\":\"Training\"},\n"}, {"line_no": 23, "char_start": 922, "char_end": 1022, "line": "    {\"id\":\"rcallawaynd@tumblr.com\",\"title\":\"Rancell Callaway\",\"color\":\"#02aedc\",\"dep\":\"Marketing\"},\n"}, {"line_no": 25, "char_start": 1007, "char_end": 1112, "line": "    {\"id\":\"sdolmanne@icq.com\",\"title\":\"Samantha Dolman\",\"color\":\"#a99384\",\"dep\":\"Business Development\"},\n"}, {"line_no": 27, "char_start": 1102, "char_end": 1216, "line": "    {\"id\":\"urustonnf@cargocollective.com\",\"title\":\"Umeko Ruston\",\"color\":\"#44d9cb\",\"dep\":\"Business Development\"},\n"}, {"line_no": 29, "char_start": 1194, "char_end": 1309, "line": "    {\"id\":\"tkellingtonng@businessinsider.com\",\"title\":\"Thedrick Kellington\",\"color\":\"#75e7a8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 31, "char_start": 1283, "char_end": 1386, "line": "    {\"id\":\"sbebisnh@wix.com\",\"title\":\"Scarlett Bebis\",\"color\":\"#9514a0\",\"dep\":\"Business Development\"},\n"}, {"line_no": 33, "char_start": 1377, "char_end": 1471, "line": "    {\"id\":\"nsturgeonni@about.me\",\"title\":\"Noah Sturgeon\",\"color\":\"#0124e0\",\"dep\":\"Services\"},\n"}, {"line_no": 35, "char_start": 1458, "char_end": 1552, "line": "    {\"id\":\"ddalyielnj@wp.com\",\"title\":\"Darell Dalyiel\",\"color\":\"#afc471\",\"dep\":\"Accounting\"},\n"}, {"line_no": 37, "char_start": 1542, "char_end": 1653, "line": "    {\"id\":\"rbeverleynk@delicious.com\",\"title\":\"Redd Beverley\",\"color\":\"#1ae7f7\",\"dep\":\"Business Development\"},\n"}, {"line_no": 39, "char_start": 1635, "char_end": 1730, "line": "    {\"id\":\"bwycliffnl@gnu.org\",\"title\":\"Birgit Wycliff\",\"color\":\"#ce6eca\",\"dep\":\"Accounting\"},\n"}, {"line_no": 41, "char_start": 1719, "char_end": 1817, "line": "    {\"id\":\"mgreenwoodnm@godaddy.com\",\"title\":\"Marjie Greenwood\",\"color\":\"#eead7b\",\"dep\":\"Sales\"},\n"}, {"line_no": 43, "char_start": 1800, "char_end": 1892, "line": "    {\"id\":\"pamayann@pen.io\",\"title\":\"Petronella Amaya\",\"color\":\"#1640a8\",\"dep\":\"Services\"},\n"}, {"line_no": 45, "char_start": 1884, "char_end": 1992, "line": "    {\"id\":\"eschapirono@people.com.cn\",\"title\":\"Egbert Schapiro\",\"color\":\"#872347\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 47, "char_start": 1974, "char_end": 2072, "line": "    {\"id\":\"ccoomernp@google.de\",\"title\":\"Christiano Coomer\",\"color\":\"#77466b\",\"dep\":\"Marketing\"},\n"}, {"line_no": 49, "char_start": 2060, "char_end": 2149, "line": "    {\"id\":\"ldeeveynq@ebay.com\",\"title\":\"Lowell Deevey\",\"color\":\"#9d016a\",\"dep\":\"Legal\"},\n"}, {"line_no": 51, "char_start": 2138, "char_end": 2237, "line": "    {\"id\":\"csewardsnr@godaddy.com\",\"title\":\"Catharina Sewards\",\"color\":\"#1abb4e\",\"dep\":\"Support\"},\n"}, {"line_no": 53, "char_start": 2222, "char_end": 2319, "line": "    {\"id\":\"bdumkens@theglobeandmail.com\",\"title\":\"Brina Dumke\",\"color\":\"#b98dcd\",\"dep\":\"Legal\"},\n"}, {"line_no": 55, "char_start": 2298, "char_end": 2393, "line": "    {\"id\":\"hbafordnt@adobe.com\",\"title\":\"Harriott Baford\",\"color\":\"#ff1150\",\"dep\":\"Services\"},\n"}, {"line_no": 57, "char_start": 2381, "char_end": 2476, "line": "    {\"id\":\"aisakovnu@vk.com\",\"title\":\"Annalise Isakov\",\"color\":\"#884e79\",\"dep\":\"Engineering\"},\n"}, {"line_no": 59, "char_start": 2467, "char_end": 2580, "line": "    {\"id\":\"lgherardinv@pbs.org\",\"title\":\"Lothaire Gherardi\",\"color\":\"#921fea\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 61, "char_start": 2568, "char_end": 2677, "line": "    {\"id\":\"dshillidaynw@vistaprint.com\",\"title\":\"Duff Shilliday\",\"color\":\"#57048e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 63, "char_start": 2657, "char_end": 2755, "line": "    {\"id\":\"erathmellnx@woothemes.com\",\"title\":\"Elaine Rathmell\",\"color\":\"#c07c04\",\"dep\":\"Legal\"},\n"}, {"line_no": 65, "char_start": 2737, "char_end": 2852, "line": "    {\"id\":\"cbrussellny@altervista.org\",\"title\":\"Constance Brussell\",\"color\":\"#1b79dc\",\"dep\":\"Product Management\"},\n"}, {"line_no": 67, "char_start": 2833, "char_end": 2930, "line": "    {\"id\":\"brimesnz@illinois.edu\",\"title\":\"Britte Rimes\",\"color\":\"#6e6a5f\",\"dep\":\"Engineering\"},\n"}, {"line_no": 69, "char_start": 2916, "char_end": 3024, "line": "    {\"id\":\"esartono0@cnbc.com\",\"title\":\"Elvina Sarton\",\"color\":\"#51fce4\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 71, "char_start": 3013, "char_end": 3123, "line": "    {\"id\":\"bghidettio1@deliciousdays.com\",\"title\":\"Bary Ghidetti\",\"color\":\"#5e0a32\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 73, "char_start": 3101, "char_end": 3199, "line": "    {\"id\":\"abriano2@theglobeandmail.com\",\"title\":\"Amalle Brian\",\"color\":\"#a8be0c\",\"dep\":\"Sales\"},\n"}, {"line_no": 75, "char_start": 3178, "char_end": 3276, "line": "    {\"id\":\"mhaimeo3@ning.com\",\"title\":\"Mira Haime\",\"color\":\"#9fec08\",\"dep\":\"Product Management\"},\n"}, {"line_no": 77, "char_start": 3266, "char_end": 3359, "line": "    {\"id\":\"molvero4@shinystat.com\",\"title\":\"Margaux Olver\",\"color\":\"#4c5ae4\",\"dep\":\"Legal\"},\n"}, {"line_no": 79, "char_start": 3344, "char_end": 3450, "line": "    {\"id\":\"jwellbelovedo5@infoseek.co.jp\",\"title\":\"Joan Wellbeloved\",\"color\":\"#ad6926\",\"dep\":\"Services\"},\n"}, {"line_no": 81, "char_start": 3428, "char_end": 3522, "line": "    {\"id\":\"edeo6@go.com\",\"title\":\"Enoch de Lloyd\",\"color\":\"#e59d5f\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 83, "char_start": 3517, "char_end": 3626, "line": "    {\"id\":\"cjosowitzo7@indiatimes.com\",\"title\":\"Constantine Josowitz\",\"color\":\"#7a65f1\",\"dep\":\"Accounting\"},\n"}, {"line_no": 85, "char_start": 3607, "char_end": 3715, "line": "    {\"id\":\"kpetreczo8@nhs.uk\",\"title\":\"Kassie Petrecz\",\"color\":\"#5b37ba\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 87, "char_start": 3705, "char_end": 3796, "line": "    {\"id\":\"hlintillo9@digg.com\",\"title\":\"Hayden Lintill\",\"color\":\"#54da89\",\"dep\":\"Sales\"},\n"}, {"line_no": 89, "char_start": 3784, "char_end": 3888, "line": "    {\"id\":\"dderbyshireoa@feedburner.com\",\"title\":\"Devy Derbyshire\",\"color\":\"#545937\",\"dep\":\"Training\"},\n"}, {"line_no": 91, "char_start": 3867, "char_end": 3965, "line": "    {\"id\":\"kthoumassonob@msn.com\",\"title\":\"Kari Thoumasson\",\"color\":\"#abf7cd\",\"dep\":\"Marketing\"},\n"}, {"line_no": 93, "char_start": 3951, "char_end": 4041, "line": "    {\"id\":\"sbrooksoc@ucla.edu\",\"title\":\"Shara Brooks\",\"color\":\"#df72c2\",\"dep\":\"Support\"},\n"}, {"line_no": 95, "char_start": 4030, "char_end": 4144, "line": "    {\"id\":\"bbiddlestoneod@symantec.com\",\"title\":\"Barb Biddlestone\",\"color\":\"#777621\",\"dep\":\"Product Management\"},\n"}, {"line_no": 97, "char_start": 4124, "char_end": 4234, "line": "    {\"id\":\"ghattooe@squarespace.com\",\"title\":\"Gwendolin Hatto\",\"color\":\"#80aca8\",\"dep\":\"Product Management\"},\n"}, {"line_no": 99, "char_start": 4217, "char_end": 4315, "line": "    {\"id\":\"gbeamesof@hostgator.com\",\"title\":\"Gerrard Beames\",\"color\":\"#72adcb\",\"dep\":\"Marketing\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 84, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Theresita O'Bradain\",\"color\":\"#aa49ea\",\"dep\":\"Legal\"},\n"}, {"line_no": 4, "char_start": 84, "char_end": 162, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Georges Dowda\",\"color\":\"#c32232\",\"dep\":\"Sales\"},\n"}, {"line_no": 6, "char_start": 162, "char_end": 243, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ines Rablen\",\"color\":\"#c64dc4\",\"dep\":\"Accounting\"},\n"}, {"line_no": 8, "char_start": 243, "char_end": 325, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashlen O'Gavin\",\"color\":\"#2101e7\",\"dep\":\"Training\"},\n"}, {"line_no": 10, "char_start": 325, "char_end": 411, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mathilde Dumbarton\",\"color\":\"#1d8965\",\"dep\":\"Services\"},\n"}, {"line_no": 12, "char_start": 411, "char_end": 492, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Elnar Sewill\",\"color\":\"#bd834a\",\"dep\":\"Marketing\"},\n"}, {"line_no": 14, "char_start": 492, "char_end": 575, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Noella Murtell\",\"color\":\"#b01d7d\",\"dep\":\"Marketing\"},\n"}, {"line_no": 16, "char_start": 575, "char_end": 663, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Trever Antognazzi\",\"color\":\"#231d1f\",\"dep\":\"Engineering\"},\n"}, {"line_no": 18, "char_start": 663, "char_end": 753, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mariann McEniry\",\"color\":\"#8046f9\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 20, "char_start": 753, "char_end": 839, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Clo Latimer\",\"color\":\"#2f594e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 22, "char_start": 839, "char_end": 922, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Florrie Walicki\",\"color\":\"#979ec5\",\"dep\":\"Training\"},\n"}, {"line_no": 24, "char_start": 922, "char_end": 1007, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rancell Callaway\",\"color\":\"#02aedc\",\"dep\":\"Marketing\"},\n"}, {"line_no": 26, "char_start": 1007, "char_end": 1102, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Samantha Dolman\",\"color\":\"#a99384\",\"dep\":\"Business Development\"},\n"}, {"line_no": 28, "char_start": 1102, "char_end": 1194, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Umeko Ruston\",\"color\":\"#44d9cb\",\"dep\":\"Business Development\"},\n"}, {"line_no": 30, "char_start": 1194, "char_end": 1283, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Thedrick Kellington\",\"color\":\"#75e7a8\",\"dep\":\"Accounting\"},\n"}, {"line_no": 32, "char_start": 1283, "char_end": 1377, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Scarlett Bebis\",\"color\":\"#9514a0\",\"dep\":\"Business Development\"},\n"}, {"line_no": 34, "char_start": 1377, "char_end": 1458, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Noah Sturgeon\",\"color\":\"#0124e0\",\"dep\":\"Services\"},\n"}, {"line_no": 36, "char_start": 1458, "char_end": 1542, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Darell Dalyiel\",\"color\":\"#afc471\",\"dep\":\"Accounting\"},\n"}, {"line_no": 38, "char_start": 1542, "char_end": 1635, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Redd Beverley\",\"color\":\"#1ae7f7\",\"dep\":\"Business Development\"},\n"}, {"line_no": 40, "char_start": 1635, "char_end": 1719, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Birgit Wycliff\",\"color\":\"#ce6eca\",\"dep\":\"Accounting\"},\n"}, {"line_no": 42, "char_start": 1719, "char_end": 1800, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Marjie Greenwood\",\"color\":\"#eead7b\",\"dep\":\"Sales\"},\n"}, {"line_no": 44, "char_start": 1800, "char_end": 1884, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Petronella Amaya\",\"color\":\"#1640a8\",\"dep\":\"Services\"},\n"}, {"line_no": 46, "char_start": 1884, "char_end": 1974, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Egbert Schapiro\",\"color\":\"#872347\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 48, "char_start": 1974, "char_end": 2060, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Christiano Coomer\",\"color\":\"#77466b\",\"dep\":\"Marketing\"},\n"}, {"line_no": 50, "char_start": 2060, "char_end": 2138, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lowell Deevey\",\"color\":\"#9d016a\",\"dep\":\"Legal\"},\n"}, {"line_no": 52, "char_start": 2138, "char_end": 2222, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Catharina Sewards\",\"color\":\"#1abb4e\",\"dep\":\"Support\"},\n"}, {"line_no": 54, "char_start": 2222, "char_end": 2298, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Brina Dumke\",\"color\":\"#b98dcd\",\"dep\":\"Legal\"},\n"}, {"line_no": 56, "char_start": 2298, "char_end": 2381, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Harriott Baford\",\"color\":\"#ff1150\",\"dep\":\"Services\"},\n"}, {"line_no": 58, "char_start": 2381, "char_end": 2467, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Annalise Isakov\",\"color\":\"#884e79\",\"dep\":\"Engineering\"},\n"}, {"line_no": 60, "char_start": 2467, "char_end": 2568, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lothaire Gherardi\",\"color\":\"#921fea\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 62, "char_start": 2568, "char_end": 2657, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Duff Shilliday\",\"color\":\"#57048e\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 64, "char_start": 2657, "char_end": 2737, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Elaine Rathmell\",\"color\":\"#c07c04\",\"dep\":\"Legal\"},\n"}, {"line_no": 66, "char_start": 2737, "char_end": 2833, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Constance Brussell\",\"color\":\"#1b79dc\",\"dep\":\"Product Management\"},\n"}, {"line_no": 68, "char_start": 2833, "char_end": 2916, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Britte Rimes\",\"color\":\"#6e6a5f\",\"dep\":\"Engineering\"},\n"}, {"line_no": 70, "char_start": 2916, "char_end": 3013, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Elvina Sarton\",\"color\":\"#51fce4\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 72, "char_start": 3013, "char_end": 3101, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Bary Ghidetti\",\"color\":\"#5e0a32\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 74, "char_start": 3101, "char_end": 3178, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Amalle Brian\",\"color\":\"#a8be0c\",\"dep\":\"Sales\"},\n"}, {"line_no": 76, "char_start": 3178, "char_end": 3266, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mira Haime\",\"color\":\"#9fec08\",\"dep\":\"Product Management\"},\n"}, {"line_no": 78, "char_start": 3266, "char_end": 3344, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Margaux Olver\",\"color\":\"#4c5ae4\",\"dep\":\"Legal\"},\n"}, {"line_no": 80, "char_start": 3344, "char_end": 3428, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Joan Wellbeloved\",\"color\":\"#ad6926\",\"dep\":\"Services\"},\n"}, {"line_no": 82, "char_start": 3428, "char_end": 3517, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Enoch de Lloyd\",\"color\":\"#e59d5f\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 84, "char_start": 3517, "char_end": 3607, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Constantine Josowitz\",\"color\":\"#7a65f1\",\"dep\":\"Accounting\"},\n"}, {"line_no": 86, "char_start": 3607, "char_end": 3705, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kassie Petrecz\",\"color\":\"#5b37ba\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 88, "char_start": 3705, "char_end": 3784, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hayden Lintill\",\"color\":\"#54da89\",\"dep\":\"Sales\"},\n"}, {"line_no": 90, "char_start": 3784, "char_end": 3867, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Devy Derbyshire\",\"color\":\"#545937\",\"dep\":\"Training\"},\n"}, {"line_no": 92, "char_start": 3867, "char_end": 3951, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Kari Thoumasson\",\"color\":\"#abf7cd\",\"dep\":\"Marketing\"},\n"}, {"line_no": 94, "char_start": 3951, "char_end": 4030, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Shara Brooks\",\"color\":\"#df72c2\",\"dep\":\"Support\"},\n"}, {"line_no": 96, "char_start": 4030, "char_end": 4124, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Barb Biddlestone\",\"color\":\"#777621\",\"dep\":\"Product Management\"},\n"}, {"line_no": 98, "char_start": 4124, "char_end": 4217, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gwendolin Hatto\",\"color\":\"#80aca8\",\"dep\":\"Product Management\"},\n"}, {"line_no": 100, "char_start": 4217, "char_end": 4299, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Gerrard Beames\",\"color\":\"#72adcb\",\"dep\":\"Marketing\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 104, "chars": "    {\"id\":\"tobradainn2@paginegialle.it\",\"title\":\"Theresita O'Bradain\",\"color\":\"#aa49ea\",\"dep\":\"Legal\"},\n"}, {"char_start": 84, "char_end": 171, "chars": "    {\"id\":\"gdowdan3@ucoz.ru\",\"title\":\"Georges Dowda\",\"color\":\"#c32232\",\"dep\":\"Sales\"},\n"}, {"char_start": 162, "char_end": 255, "chars": "    {\"id\":\"irablenn4@prweb.com\",\"title\":\"Ines Rablen\",\"color\":\"#c64dc4\",\"dep\":\"Accounting\"},\n"}, {"char_start": 243, "char_end": 338, "chars": "    {\"id\":\"aogavinn5@netlog.com\",\"title\":\"Ashlen O'Gavin\",\"color\":\"#2101e7\",\"dep\":\"Training\"},\n"}, {"char_start": 325, "char_end": 426, "chars": "    {\"id\":\"mdumbartonn6@europa.eu\",\"title\":\"Mathilde Dumbarton\",\"color\":\"#1d8965\",\"dep\":\"Services\"},\n"}, {"char_start": 411, "char_end": 505, "chars": "    {\"id\":\"esewilln7@seesaa.net\",\"title\":\"Elnar Sewill\",\"color\":\"#bd834a\",\"dep\":\"Marketing\"},\n"}, {"char_start": 492, "char_end": 590, "chars": "    {\"id\":\"nmurtelln8@comcast.net\",\"title\":\"Noella Murtell\",\"color\":\"#b01d7d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 575, "char_end": 679, "chars": "    {\"id\":\"tantognazzin9@vimeo.com\",\"title\":\"Trever Antognazzi\",\"color\":\"#231d1f\",\"dep\":\"Engineering\"},\n"}, {"char_start": 663, "char_end": 763, "chars": "    {\"id\":\"mmceniryna@va.gov\",\"title\":\"Mariann McEniry\",\"color\":\"#8046f9\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 753, "char_end": 854, "chars": "    {\"id\":\"clatimernb@foxnews.com\",\"title\":\"Clo Latimer\",\"color\":\"#2f594e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 839, "char_end": 933, "chars": "    {\"id\":\"fwalickinc@epa.gov\",\"title\":\"Florrie Walicki\",\"color\":\"#979ec5\",\"dep\":\"Training\"},\n"}, {"char_start": 922, "char_end": 1022, "chars": "    {\"id\":\"rcallawaynd@tumblr.com\",\"title\":\"Rancell Callaway\",\"color\":\"#02aedc\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1007, "char_end": 1112, "chars": "    {\"id\":\"sdolmanne@icq.com\",\"title\":\"Samantha Dolman\",\"color\":\"#a99384\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1102, "char_end": 1216, "chars": "    {\"id\":\"urustonnf@cargocollective.com\",\"title\":\"Umeko Ruston\",\"color\":\"#44d9cb\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1194, "char_end": 1309, "chars": "    {\"id\":\"tkellingtonng@businessinsider.com\",\"title\":\"Thedrick Kellington\",\"color\":\"#75e7a8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1283, "char_end": 1386, "chars": "    {\"id\":\"sbebisnh@wix.com\",\"title\":\"Scarlett Bebis\",\"color\":\"#9514a0\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1377, "char_end": 1471, "chars": "    {\"id\":\"nsturgeonni@about.me\",\"title\":\"Noah Sturgeon\",\"color\":\"#0124e0\",\"dep\":\"Services\"},\n"}, {"char_start": 1458, "char_end": 1552, "chars": "    {\"id\":\"ddalyielnj@wp.com\",\"title\":\"Darell Dalyiel\",\"color\":\"#afc471\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1542, "char_end": 1653, "chars": "    {\"id\":\"rbeverleynk@delicious.com\",\"title\":\"Redd Beverley\",\"color\":\"#1ae7f7\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1635, "char_end": 1730, "chars": "    {\"id\":\"bwycliffnl@gnu.org\",\"title\":\"Birgit Wycliff\",\"color\":\"#ce6eca\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1719, "char_end": 1817, "chars": "    {\"id\":\"mgreenwoodnm@godaddy.com\",\"title\":\"Marjie Greenwood\",\"color\":\"#eead7b\",\"dep\":\"Sales\"},\n"}, {"char_start": 1800, "char_end": 1892, "chars": "    {\"id\":\"pamayann@pen.io\",\"title\":\"Petronella Amaya\",\"color\":\"#1640a8\",\"dep\":\"Services\"},\n"}, {"char_start": 1884, "char_end": 1992, "chars": "    {\"id\":\"eschapirono@people.com.cn\",\"title\":\"Egbert Schapiro\",\"color\":\"#872347\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1974, "char_end": 2072, "chars": "    {\"id\":\"ccoomernp@google.de\",\"title\":\"Christiano Coomer\",\"color\":\"#77466b\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2060, "char_end": 2149, "chars": "    {\"id\":\"ldeeveynq@ebay.com\",\"title\":\"Lowell Deevey\",\"color\":\"#9d016a\",\"dep\":\"Legal\"},\n"}, {"char_start": 2138, "char_end": 2237, "chars": "    {\"id\":\"csewardsnr@godaddy.com\",\"title\":\"Catharina Sewards\",\"color\":\"#1abb4e\",\"dep\":\"Support\"},\n"}, {"char_start": 2222, "char_end": 2319, "chars": "    {\"id\":\"bdumkens@theglobeandmail.com\",\"title\":\"Brina Dumke\",\"color\":\"#b98dcd\",\"dep\":\"Legal\"},\n"}, {"char_start": 2298, "char_end": 2393, "chars": "    {\"id\":\"hbafordnt@adobe.com\",\"title\":\"Harriott Baford\",\"color\":\"#ff1150\",\"dep\":\"Services\"},\n"}, {"char_start": 2381, "char_end": 2476, "chars": "    {\"id\":\"aisakovnu@vk.com\",\"title\":\"Annalise Isakov\",\"color\":\"#884e79\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2467, "char_end": 2580, "chars": "    {\"id\":\"lgherardinv@pbs.org\",\"title\":\"Lothaire Gherardi\",\"color\":\"#921fea\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2568, "char_end": 2677, "chars": "    {\"id\":\"dshillidaynw@vistaprint.com\",\"title\":\"Duff Shilliday\",\"color\":\"#57048e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2657, "char_end": 2755, "chars": "    {\"id\":\"erathmellnx@woothemes.com\",\"title\":\"Elaine Rathmell\",\"color\":\"#c07c04\",\"dep\":\"Legal\"},\n"}, {"char_start": 2737, "char_end": 2852, "chars": "    {\"id\":\"cbrussellny@altervista.org\",\"title\":\"Constance Brussell\",\"color\":\"#1b79dc\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2833, "char_end": 2930, "chars": "    {\"id\":\"brimesnz@illinois.edu\",\"title\":\"Britte Rimes\",\"color\":\"#6e6a5f\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2916, "char_end": 3024, "chars": "    {\"id\":\"esartono0@cnbc.com\",\"title\":\"Elvina Sarton\",\"color\":\"#51fce4\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3013, "char_end": 3123, "chars": "    {\"id\":\"bghidettio1@deliciousdays.com\",\"title\":\"Bary Ghidetti\",\"color\":\"#5e0a32\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3101, "char_end": 3199, "chars": "    {\"id\":\"abriano2@theglobeandmail.com\",\"title\":\"Amalle Brian\",\"color\":\"#a8be0c\",\"dep\":\"Sales\"},\n"}, {"char_start": 3178, "char_end": 3276, "chars": "    {\"id\":\"mhaimeo3@ning.com\",\"title\":\"Mira Haime\",\"color\":\"#9fec08\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3266, "char_end": 3359, "chars": "    {\"id\":\"molvero4@shinystat.com\",\"title\":\"Margaux Olver\",\"color\":\"#4c5ae4\",\"dep\":\"Legal\"},\n"}, {"char_start": 3344, "char_end": 3450, "chars": "    {\"id\":\"jwellbelovedo5@infoseek.co.jp\",\"title\":\"Joan Wellbeloved\",\"color\":\"#ad6926\",\"dep\":\"Services\"},\n"}, {"char_start": 3428, "char_end": 3522, "chars": "    {\"id\":\"edeo6@go.com\",\"title\":\"Enoch de Lloyd\",\"color\":\"#e59d5f\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3517, "char_end": 3626, "chars": "    {\"id\":\"cjosowitzo7@indiatimes.com\",\"title\":\"Constantine Josowitz\",\"color\":\"#7a65f1\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3607, "char_end": 3715, "chars": "    {\"id\":\"kpetreczo8@nhs.uk\",\"title\":\"Kassie Petrecz\",\"color\":\"#5b37ba\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3705, "char_end": 3796, "chars": "    {\"id\":\"hlintillo9@digg.com\",\"title\":\"Hayden Lintill\",\"color\":\"#54da89\",\"dep\":\"Sales\"},\n"}, {"char_start": 3784, "char_end": 3888, "chars": "    {\"id\":\"dderbyshireoa@feedburner.com\",\"title\":\"Devy Derbyshire\",\"color\":\"#545937\",\"dep\":\"Training\"},\n"}, {"char_start": 3867, "char_end": 3965, "chars": "    {\"id\":\"kthoumassonob@msn.com\",\"title\":\"Kari Thoumasson\",\"color\":\"#abf7cd\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3951, "char_end": 4041, "chars": "    {\"id\":\"sbrooksoc@ucla.edu\",\"title\":\"Shara Brooks\",\"color\":\"#df72c2\",\"dep\":\"Support\"},\n"}, {"char_start": 4030, "char_end": 4144, "chars": "    {\"id\":\"bbiddlestoneod@symantec.com\",\"title\":\"Barb Biddlestone\",\"color\":\"#777621\",\"dep\":\"Product Management\"},\n"}, {"char_start": 4124, "char_end": 4234, "chars": "    {\"id\":\"ghattooe@squarespace.com\",\"title\":\"Gwendolin Hatto\",\"color\":\"#80aca8\",\"dep\":\"Product Management\"},\n"}, {"char_start": 4217, "char_end": 4315, "chars": "    {\"id\":\"gbeamesof@hostgator.com\",\"title\":\"Gerrard Beames\",\"color\":\"#72adcb\",\"dep\":\"Marketing\"},"}], "added": [{"char_start": 0, "char_end": 84, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Theresita O'Bradain\",\"color\":\"#aa49ea\",\"dep\":\"Legal\"},\n"}, {"char_start": 84, "char_end": 162, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Georges Dowda\",\"color\":\"#c32232\",\"dep\":\"Sales\"},\n"}, {"char_start": 162, "char_end": 243, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ines Rablen\",\"color\":\"#c64dc4\",\"dep\":\"Accounting\"},\n"}, {"char_start": 243, "char_end": 325, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashlen O'Gavin\",\"color\":\"#2101e7\",\"dep\":\"Training\"},\n"}, {"char_start": 325, "char_end": 411, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mathilde Dumbarton\",\"color\":\"#1d8965\",\"dep\":\"Services\"},\n"}, {"char_start": 411, "char_end": 492, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Elnar Sewill\",\"color\":\"#bd834a\",\"dep\":\"Marketing\"},\n"}, {"char_start": 492, "char_end": 575, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Noella Murtell\",\"color\":\"#b01d7d\",\"dep\":\"Marketing\"},\n"}, {"char_start": 575, "char_end": 663, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Trever Antognazzi\",\"color\":\"#231d1f\",\"dep\":\"Engineering\"},\n"}, {"char_start": 663, "char_end": 753, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mariann McEniry\",\"color\":\"#8046f9\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 753, "char_end": 839, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Clo Latimer\",\"color\":\"#2f594e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 839, "char_end": 922, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Florrie Walicki\",\"color\":\"#979ec5\",\"dep\":\"Training\"},\n"}, {"char_start": 922, "char_end": 1007, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rancell Callaway\",\"color\":\"#02aedc\",\"dep\":\"Marketing\"},\n"}, {"char_start": 1007, "char_end": 1102, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Samantha Dolman\",\"color\":\"#a99384\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1102, "char_end": 1194, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Umeko Ruston\",\"color\":\"#44d9cb\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1194, "char_end": 1283, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Thedrick Kellington\",\"color\":\"#75e7a8\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1283, "char_end": 1377, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Scarlett Bebis\",\"color\":\"#9514a0\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1377, "char_end": 1458, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Noah Sturgeon\",\"color\":\"#0124e0\",\"dep\":\"Services\"},\n"}, {"char_start": 1458, "char_end": 1542, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Darell Dalyiel\",\"color\":\"#afc471\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1542, "char_end": 1635, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Redd Beverley\",\"color\":\"#1ae7f7\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1635, "char_end": 1719, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Birgit Wycliff\",\"color\":\"#ce6eca\",\"dep\":\"Accounting\"},\n"}, {"char_start": 1719, "char_end": 1800, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Marjie Greenwood\",\"color\":\"#eead7b\",\"dep\":\"Sales\"},\n"}, {"char_start": 1800, "char_end": 1884, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Petronella Amaya\",\"color\":\"#1640a8\",\"dep\":\"Services\"},\n"}, {"char_start": 1884, "char_end": 1974, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Egbert Schapiro\",\"color\":\"#872347\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1974, "char_end": 2060, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Christiano Coomer\",\"color\":\"#77466b\",\"dep\":\"Marketing\"},\n"}, {"char_start": 2060, "char_end": 2138, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lowell Deevey\",\"color\":\"#9d016a\",\"dep\":\"Legal\"},\n"}, {"char_start": 2138, "char_end": 2222, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Catharina Sewards\",\"color\":\"#1abb4e\",\"dep\":\"Support\"},\n"}, {"char_start": 2222, "char_end": 2298, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Brina Dumke\",\"color\":\"#b98dcd\",\"dep\":\"Legal\"},\n"}, {"char_start": 2298, "char_end": 2381, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Harriott Baford\",\"color\":\"#ff1150\",\"dep\":\"Services\"},\n"}, {"char_start": 2381, "char_end": 2467, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Annalise Isakov\",\"color\":\"#884e79\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2467, "char_end": 2568, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lothaire Gherardi\",\"color\":\"#921fea\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2568, "char_end": 2657, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Duff Shilliday\",\"color\":\"#57048e\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 2657, "char_end": 2737, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Elaine Rathmell\",\"color\":\"#c07c04\",\"dep\":\"Legal\"},\n"}, {"char_start": 2737, "char_end": 2833, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Constance Brussell\",\"color\":\"#1b79dc\",\"dep\":\"Product Management\"},\n"}, {"char_start": 2833, "char_end": 2916, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Britte Rimes\",\"color\":\"#6e6a5f\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2916, "char_end": 3013, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Elvina Sarton\",\"color\":\"#51fce4\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3013, "char_end": 3101, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Bary Ghidetti\",\"color\":\"#5e0a32\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3101, "char_end": 3178, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Amalle Brian\",\"color\":\"#a8be0c\",\"dep\":\"Sales\"},\n"}, {"char_start": 3178, "char_end": 3266, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mira Haime\",\"color\":\"#9fec08\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3266, "char_end": 3344, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Margaux Olver\",\"color\":\"#4c5ae4\",\"dep\":\"Legal\"},\n"}, {"char_start": 3344, "char_end": 3428, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Joan Wellbeloved\",\"color\":\"#ad6926\",\"dep\":\"Services\"},\n"}, {"char_start": 3428, "char_end": 3517, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Enoch de Lloyd\",\"color\":\"#e59d5f\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3517, "char_end": 3607, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Constantine Josowitz\",\"color\":\"#7a65f1\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3607, "char_end": 3705, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kassie Petrecz\",\"color\":\"#5b37ba\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 3705, "char_end": 3784, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hayden Lintill\",\"color\":\"#54da89\",\"dep\":\"Sales\"},\n"}, {"char_start": 3784, "char_end": 3867, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Devy Derbyshire\",\"color\":\"#545937\",\"dep\":\"Training\"},\n"}, {"char_start": 3867, "char_end": 3951, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Kari Thoumasson\",\"color\":\"#abf7cd\",\"dep\":\"Marketing\"},\n"}, {"char_start": 3951, "char_end": 4030, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Shara Brooks\",\"color\":\"#df72c2\",\"dep\":\"Support\"},\n"}, {"char_start": 4030, "char_end": 4124, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Barb Biddlestone\",\"color\":\"#777621\",\"dep\":\"Product Management\"},\n"}, {"char_start": 4124, "char_end": 4217, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gwendolin Hatto\",\"color\":\"#80aca8\",\"dep\":\"Product Management\"},\n"}, {"char_start": 4217, "char_end": 4299, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Gerrard Beames\",\"color\":\"#72adcb\",\"dep\":\"Marketing\"},"}]}}
{"func_name": 13363, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\"id\":\"bwallsamog@gov.uk\",\"title\":\"Binny Wallsam\",\"color\":\"#875713\",\"dep\":\"Product Management\"},\n    {\"id\":\"mregardsoeoh@walmart.com\",\"title\":\"Mikkel Regardsoe\",\"color\":\"#2e31fc\",\"dep\":\"Engineering\"},\n    {\"id\":\"tcapstackoi@cafepress.com\",\"title\":\"Tawsha Capstack\",\"color\":\"#e1bde2\",\"dep\":\"Marketing\"},\n    {\"id\":\"nmilleryoj@fema.gov\",\"title\":\"Nanine Millery\",\"color\":\"#b5a8b9\",\"dep\":\"Marketing\"},\n    {\"id\":\"dblackborowok@github.io\",\"title\":\"Donall Blackborow\",\"color\":\"#81ab4b\",\"dep\":\"Research and Development\"},\n    {\"id\":\"ljahnkeol@infoseek.co.jp\",\"title\":\"Lamond Jahnke\",\"color\":\"#c75fa5\",\"dep\":\"Engineering\"},\n    {\"id\":\"npappsom@sbwire.com\",\"title\":\"Nessi Papps\",\"color\":\"#6abd79\",\"dep\":\"Training\"},\n    {\"id\":\"fnilleson@angelfire.com\",\"title\":\"Florrie Nilles\",\"color\":\"#46eb28\",\"dep\":\"Product Management\"},\n    {\"id\":\"vpratleyoo@hexun.com\",\"title\":\"Vin Pratley\",\"color\":\"#6662d6\",\"dep\":\"Marketing\"},\n    {\"id\":\"tpahlssonop@ustream.tv\",\"title\":\"Tish Pahlsson\",\"color\":\"#1763db\",\"dep\":\"Support\"},\n    {\"id\":\"rhalseoq@omniture.com\",\"title\":\"Ruthie Halse\",\"color\":\"#24cab7\",\"dep\":\"Accounting\"},\n    {\"id\":\"jvallentinor@theatlantic.com\",\"title\":\"Jaine Vallentin\",\"color\":\"#f3dac7\",\"dep\":\"Product Management\"},\n    {\"id\":\"vnottinghamos@unc.edu\",\"title\":\"Violante Nottingham\",\"color\":\"#9e09a0\",\"dep\":\"Human Resources\"},\n    {\"id\":\"aoakdenot@stumbleupon.com\",\"title\":\"Alexandre Oakden\",\"color\":\"#763cc5\",\"dep\":\"Human Resources\"},\n    {\"id\":\"cchestersou@columbia.edu\",\"title\":\"Carce Chesters\",\"color\":\"#b8e4a4\",\"dep\":\"Engineering\"},\n    {\"id\":\"bschollickov@gizmodo.com\",\"title\":\"Bancroft Schollick\",\"color\":\"#f57647\",\"dep\":\"Engineering\"},\n    {\"id\":\"cthirlwellow@illinois.edu\",\"title\":\"Charita Thirlwell\",\"color\":\"#76862c\",\"dep\":\"Business Development\"},\n    {\"id\":\"zsimkovitzox@ameblo.jp\",\"title\":\"Zoe Simkovitz\",\"color\":\"#3928dd\",\"dep\":\"Product Management\"},\n    {\"id\":\"lblissittoy@narod.ru\",\"title\":\"Lucais Blissitt\",\"color\":\"#f5b184\",\"dep\":\"Sales\"},\n    {\"id\":\"hpeeteoz@geocities.com\",\"title\":\"Hermione Peete\",\"color\":\"#cf94a1\",\"dep\":\"Engineering\"},\n    {\"id\":\"hgiffkinsp0@nasa.gov\",\"title\":\"Hillard Giffkins\",\"color\":\"#1fee58\",\"dep\":\"Sales\"},\n    {\"id\":\"mkrollep1@psu.edu\",\"title\":\"Mamie Krolle\",\"color\":\"#2e25b8\",\"dep\":\"Training\"},\n    {\"id\":\"rcrocumbep2@geocities.jp\",\"title\":\"Rosemarie Crocumbe\",\"color\":\"#4a2814\",\"dep\":\"Business Development\"},\n    {\"id\":\"selmhirstp3@amazon.co.uk\",\"title\":\"Shannon Elmhirst\",\"color\":\"#83d714\",\"dep\":\"Support\"},\n    {\"id\":\"aofearguisep4@miitbeian.gov.cn\",\"title\":\"Angelo O'Fearguise\",\"color\":\"#4627b5\",\"dep\":\"Accounting\"},\n    {\"id\":\"bdibbinp5@over-blog.com\",\"title\":\"Borg Dibbin\",\"color\":\"#88a2cb\",\"dep\":\"Services\"},\n    {\"id\":\"lmeasomp6@blog.com\",\"title\":\"Lissie Measom\",\"color\":\"#a7e4d1\",\"dep\":\"Business Development\"},\n    {\"id\":\"bdriuttip7@domainmarket.com\",\"title\":\"Becki Driutti\",\"color\":\"#66b129\",\"dep\":\"Legal\"},\n    {\"id\":\"mmcgivenp8@hhs.gov\",\"title\":\"Maurits McGiven\",\"color\":\"#b67a5b\",\"dep\":\"Sales\"},\n    {\"id\":\"etwiggerp9@aboutads.info\",\"title\":\"Elsinore Twigger\",\"color\":\"#c10cfb\",\"dep\":\"Support\"},\n    {\"id\":\"jwandenpa@army.mil\",\"title\":\"Janaya Wanden\",\"color\":\"#e032fc\",\"dep\":\"Engineering\"},\n    {\"id\":\"amocklerpb@51.la\",\"title\":\"Ashly Mockler\",\"color\":\"#6d7158\",\"dep\":\"Research and Development\"},\n    {\"id\":\"ediehnpc@ezinearticles.com\",\"title\":\"Evelina Diehn\",\"color\":\"#d9d91e\",\"dep\":\"Training\"},\n    {\"id\":\"eedgerpd@auda.org.au\",\"title\":\"Emlen Edger\",\"color\":\"#1d5ca7\",\"dep\":\"Support\"},\n    {\"id\":\"jchalfainpe@engadget.com\",\"title\":\"Jacklyn Chalfain\",\"color\":\"#091fbc\",\"dep\":\"Training\"},\n    {\"id\":\"spenningtonpf@bbc.co.uk\",\"title\":\"Suki Pennington\",\"color\":\"#381724\",\"dep\":\"Business Development\"},\n    {\"id\":\"afairfootpg@naver.com\",\"title\":\"Aron Fairfoot\",\"color\":\"#601e24\",\"dep\":\"Legal\"},\n    {\"id\":\"lfrancesconeph@furl.net\",\"title\":\"Lyndsay Francescone\",\"color\":\"#a6affb\",\"dep\":\"Accounting\"},\n    {\"id\":\"rteerspi@buzzfeed.com\",\"title\":\"Rafaello Teers\",\"color\":\"#f2e39c\",\"dep\":\"Accounting\"},\n    {\"id\":\"utroakpj@g.co\",\"title\":\"Ursola Troak\",\"color\":\"#5c8b19\",\"dep\":\"Business Development\"},\n    {\"id\":\"elawlandpk@sciencedaily.com\",\"title\":\"Erna Lawland\",\"color\":\"#125e01\",\"dep\":\"Human Resources\"},\n    {\"id\":\"jaleevypl@tripod.com\",\"title\":\"Jodee Aleevy\",\"color\":\"#29c3fe\",\"dep\":\"Accounting\"},\n    {\"id\":\"tmeiklepm@istockphoto.com\",\"title\":\"Titus Meikle\",\"color\":\"#4a87c8\",\"dep\":\"Product Management\"},\n    {\"id\":\"ashotboultepn@theatlantic.com\",\"title\":\"Anastassia Shotboulte\",\"color\":\"#c3c2fb\",\"dep\":\"Product Management\"},\n    {\"id\":\"breckpo@state.gov\",\"title\":\"Berte Reck\",\"color\":\"#26bb56\",\"dep\":\"Sales\"},\n    {\"id\":\"efeighrypp@baidu.com\",\"title\":\"Edy Feighry\",\"color\":\"#66b2bb\",\"dep\":\"Product Management\"},\n    {\"id\":\"clilleycroppq@w3.org\",\"title\":\"Cody Lilleycrop\",\"color\":\"#c6942d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"fcornhillpr@cdc.gov\",\"title\":\"Frank cornhill\",\"color\":\"#1b2d4b\",\"dep\":\"Business Development\"},\n    {\"id\":\"nchessorps@symantec.com\",\"title\":\"Nolly Chessor\",\"color\":\"#78f65a\",\"dep\":\"Marketing\"},\n    {\"id\":\"esparrowpt@yahoo.co.jp\",\"title\":\"Emelina Sparrow\",\"color\":\"#295b9d\",\"dep\":\"Marketing\"},", "func_src_after": "    {\"id\":\"<EMAIL>\",\"title\":\"Binny Wallsam\",\"color\":\"#875713\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mikkel Regardsoe\",\"color\":\"#2e31fc\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Tawsha Capstack\",\"color\":\"#e1bde2\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nanine Millery\",\"color\":\"#b5a8b9\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Donall Blackborow\",\"color\":\"#81ab4b\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lamond Jahnke\",\"color\":\"#c75fa5\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nessi Papps\",\"color\":\"#6abd79\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Florrie Nilles\",\"color\":\"#46eb28\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Vin Pratley\",\"color\":\"#6662d6\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Tish Pahlsson\",\"color\":\"#1763db\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ruthie Halse\",\"color\":\"#24cab7\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jaine Vallentin\",\"color\":\"#f3dac7\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Violante Nottingham\",\"color\":\"#9e09a0\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Alexandre Oakden\",\"color\":\"#763cc5\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Carce Chesters\",\"color\":\"#b8e4a4\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Bancroft Schollick\",\"color\":\"#f57647\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Charita Thirlwell\",\"color\":\"#76862c\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Zoe Simkovitz\",\"color\":\"#3928dd\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lucais Blissitt\",\"color\":\"#f5b184\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hermione Peete\",\"color\":\"#cf94a1\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Hillard Giffkins\",\"color\":\"#1fee58\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Mamie Krolle\",\"color\":\"#2e25b8\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rosemarie Crocumbe\",\"color\":\"#4a2814\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Shannon Elmhirst\",\"color\":\"#83d714\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Angelo O'Fearguise\",\"color\":\"#4627b5\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Borg Dibbin\",\"color\":\"#88a2cb\",\"dep\":\"Services\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lissie Measom\",\"color\":\"#a7e4d1\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Becki Driutti\",\"color\":\"#66b129\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Maurits McGiven\",\"color\":\"#b67a5b\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Elsinore Twigger\",\"color\":\"#c10cfb\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Janaya Wanden\",\"color\":\"#e032fc\",\"dep\":\"Engineering\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ashly Mockler\",\"color\":\"#6d7158\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Evelina Diehn\",\"color\":\"#d9d91e\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Emlen Edger\",\"color\":\"#1d5ca7\",\"dep\":\"Support\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jacklyn Chalfain\",\"color\":\"#091fbc\",\"dep\":\"Training\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Suki Pennington\",\"color\":\"#381724\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Aron Fairfoot\",\"color\":\"#601e24\",\"dep\":\"Legal\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Lyndsay Francescone\",\"color\":\"#a6affb\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Rafaello Teers\",\"color\":\"#f2e39c\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Ursola Troak\",\"color\":\"#5c8b19\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Erna Lawland\",\"color\":\"#125e01\",\"dep\":\"Human Resources\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Jodee Aleevy\",\"color\":\"#29c3fe\",\"dep\":\"Accounting\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Titus Meikle\",\"color\":\"#4a87c8\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Anastassia Shotboulte\",\"color\":\"#c3c2fb\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Berte Reck\",\"color\":\"#26bb56\",\"dep\":\"Sales\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Edy Feighry\",\"color\":\"#66b2bb\",\"dep\":\"Product Management\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Cody Lilleycrop\",\"color\":\"#c6942d\",\"dep\":\"Research and Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Frank cornhill\",\"color\":\"#1b2d4b\",\"dep\":\"Business Development\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Nolly Chessor\",\"color\":\"#78f65a\",\"dep\":\"Marketing\"},\n    {\"id\":\"<EMAIL>\",\"title\":\"Emelina Sparrow\",\"color\":\"#295b9d\",\"dep\":\"Marketing\"},", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 101, "line": "    {\"id\":\"bwallsamog@gov.uk\",\"title\":\"Binny Wallsam\",\"color\":\"#875713\",\"dep\":\"Product Management\"},\n"}, {"line_no": 3, "char_start": 91, "char_end": 195, "line": "    {\"id\":\"mregardsoeoh@walmart.com\",\"title\":\"Mikkel Regardsoe\",\"color\":\"#2e31fc\",\"dep\":\"Engineering\"},\n"}, {"line_no": 5, "char_start": 178, "char_end": 280, "line": "    {\"id\":\"tcapstackoi@cafepress.com\",\"title\":\"Tawsha Capstack\",\"color\":\"#e1bde2\",\"dep\":\"Marketing\"},\n"}, {"line_no": 7, "char_start": 262, "char_end": 357, "line": "    {\"id\":\"nmilleryoj@fema.gov\",\"title\":\"Nanine Millery\",\"color\":\"#b5a8b9\",\"dep\":\"Marketing\"},\n"}, {"line_no": 9, "char_start": 345, "char_end": 462, "line": "    {\"id\":\"dblackborowok@github.io\",\"title\":\"Donall Blackborow\",\"color\":\"#81ab4b\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 11, "char_start": 446, "char_end": 547, "line": "    {\"id\":\"ljahnkeol@infoseek.co.jp\",\"title\":\"Lamond Jahnke\",\"color\":\"#c75fa5\",\"dep\":\"Engineering\"},\n"}, {"line_no": 13, "char_start": 530, "char_end": 621, "line": "    {\"id\":\"npappsom@sbwire.com\",\"title\":\"Nessi Papps\",\"color\":\"#6abd79\",\"dep\":\"Training\"},\n"}, {"line_no": 15, "char_start": 609, "char_end": 717, "line": "    {\"id\":\"fnilleson@angelfire.com\",\"title\":\"Florrie Nilles\",\"color\":\"#46eb28\",\"dep\":\"Product Management\"},\n"}, {"line_no": 17, "char_start": 701, "char_end": 794, "line": "    {\"id\":\"vpratleyoo@hexun.com\",\"title\":\"Vin Pratley\",\"color\":\"#6662d6\",\"dep\":\"Marketing\"},\n"}, {"line_no": 19, "char_start": 781, "char_end": 876, "line": "    {\"id\":\"tpahlssonop@ustream.tv\",\"title\":\"Tish Pahlsson\",\"color\":\"#1763db\",\"dep\":\"Support\"},\n"}, {"line_no": 21, "char_start": 861, "char_end": 957, "line": "    {\"id\":\"rhalseoq@omniture.com\",\"title\":\"Ruthie Halse\",\"color\":\"#24cab7\",\"dep\":\"Accounting\"},\n"}, {"line_no": 23, "char_start": 943, "char_end": 1057, "line": "    {\"id\":\"jvallentinor@theatlantic.com\",\"title\":\"Jaine Vallentin\",\"color\":\"#f3dac7\",\"dep\":\"Product Management\"},\n"}, {"line_no": 25, "char_start": 1036, "char_end": 1144, "line": "    {\"id\":\"vnottinghamos@unc.edu\",\"title\":\"Violante Nottingham\",\"color\":\"#9e09a0\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 27, "char_start": 1130, "char_end": 1239, "line": "    {\"id\":\"aoakdenot@stumbleupon.com\",\"title\":\"Alexandre Oakden\",\"color\":\"#763cc5\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 29, "char_start": 1221, "char_end": 1323, "line": "    {\"id\":\"cchestersou@columbia.edu\",\"title\":\"Carce Chesters\",\"color\":\"#b8e4a4\",\"dep\":\"Engineering\"},\n"}, {"line_no": 31, "char_start": 1306, "char_end": 1412, "line": "    {\"id\":\"bschollickov@gizmodo.com\",\"title\":\"Bancroft Schollick\",\"color\":\"#f57647\",\"dep\":\"Engineering\"},\n"}, {"line_no": 33, "char_start": 1395, "char_end": 1510, "line": "    {\"id\":\"cthirlwellow@illinois.edu\",\"title\":\"Charita Thirlwell\",\"color\":\"#76862c\",\"dep\":\"Business Development\"},\n"}, {"line_no": 35, "char_start": 1492, "char_end": 1598, "line": "    {\"id\":\"zsimkovitzox@ameblo.jp\",\"title\":\"Zoe Simkovitz\",\"color\":\"#3928dd\",\"dep\":\"Product Management\"},\n"}, {"line_no": 37, "char_start": 1583, "char_end": 1676, "line": "    {\"id\":\"lblissittoy@narod.ru\",\"title\":\"Lucais Blissitt\",\"color\":\"#f5b184\",\"dep\":\"Sales\"},\n"}, {"line_no": 39, "char_start": 1663, "char_end": 1763, "line": "    {\"id\":\"hpeeteoz@geocities.com\",\"title\":\"Hermione Peete\",\"color\":\"#cf94a1\",\"dep\":\"Engineering\"},\n"}, {"line_no": 41, "char_start": 1748, "char_end": 1842, "line": "    {\"id\":\"hgiffkinsp0@nasa.gov\",\"title\":\"Hillard Giffkins\",\"color\":\"#1fee58\",\"dep\":\"Sales\"},\n"}, {"line_no": 43, "char_start": 1829, "char_end": 1919, "line": "    {\"id\":\"mkrollep1@psu.edu\",\"title\":\"Mamie Krolle\",\"color\":\"#2e25b8\",\"dep\":\"Training\"},\n"}, {"line_no": 45, "char_start": 1909, "char_end": 2024, "line": "    {\"id\":\"rcrocumbep2@geocities.jp\",\"title\":\"Rosemarie Crocumbe\",\"color\":\"#4a2814\",\"dep\":\"Business Development\"},\n"}, {"line_no": 47, "char_start": 2007, "char_end": 2107, "line": "    {\"id\":\"selmhirstp3@amazon.co.uk\",\"title\":\"Shannon Elmhirst\",\"color\":\"#83d714\",\"dep\":\"Support\"},\n"}, {"line_no": 49, "char_start": 2090, "char_end": 2201, "line": "    {\"id\":\"aofearguisep4@miitbeian.gov.cn\",\"title\":\"Angelo O'Fearguise\",\"color\":\"#4627b5\",\"dep\":\"Accounting\"},\n"}, {"line_no": 51, "char_start": 2178, "char_end": 2273, "line": "    {\"id\":\"bdibbinp5@over-blog.com\",\"title\":\"Borg Dibbin\",\"color\":\"#88a2cb\",\"dep\":\"Services\"},\n"}, {"line_no": 53, "char_start": 2257, "char_end": 2361, "line": "    {\"id\":\"lmeasomp6@blog.com\",\"title\":\"Lissie Measom\",\"color\":\"#a7e4d1\",\"dep\":\"Business Development\"},\n"}, {"line_no": 55, "char_start": 2350, "char_end": 2448, "line": "    {\"id\":\"bdriuttip7@domainmarket.com\",\"title\":\"Becki Driutti\",\"color\":\"#66b129\",\"dep\":\"Legal\"},\n"}, {"line_no": 57, "char_start": 2428, "char_end": 2519, "line": "    {\"id\":\"mmcgivenp8@hhs.gov\",\"title\":\"Maurits McGiven\",\"color\":\"#b67a5b\",\"dep\":\"Sales\"},\n"}, {"line_no": 59, "char_start": 2508, "char_end": 2608, "line": "    {\"id\":\"etwiggerp9@aboutads.info\",\"title\":\"Elsinore Twigger\",\"color\":\"#c10cfb\",\"dep\":\"Support\"},\n"}, {"line_no": 61, "char_start": 2591, "char_end": 2686, "line": "    {\"id\":\"jwandenpa@army.mil\",\"title\":\"Janaya Wanden\",\"color\":\"#e032fc\",\"dep\":\"Engineering\"},\n"}, {"line_no": 63, "char_start": 2675, "char_end": 2781, "line": "    {\"id\":\"amocklerpb@51.la\",\"title\":\"Ashly Mockler\",\"color\":\"#6d7158\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 65, "char_start": 2772, "char_end": 2872, "line": "    {\"id\":\"ediehnpc@ezinearticles.com\",\"title\":\"Evelina Diehn\",\"color\":\"#d9d91e\",\"dep\":\"Training\"},\n"}, {"line_no": 67, "char_start": 2853, "char_end": 2944, "line": "    {\"id\":\"eedgerpd@auda.org.au\",\"title\":\"Emlen Edger\",\"color\":\"#1d5ca7\",\"dep\":\"Support\"},\n"}, {"line_no": 69, "char_start": 2931, "char_end": 3032, "line": "    {\"id\":\"jchalfainpe@engadget.com\",\"title\":\"Jacklyn Chalfain\",\"color\":\"#091fbc\",\"dep\":\"Training\"},\n"}, {"line_no": 71, "char_start": 3015, "char_end": 3126, "line": "    {\"id\":\"spenningtonpf@bbc.co.uk\",\"title\":\"Suki Pennington\",\"color\":\"#381724\",\"dep\":\"Business Development\"},\n"}, {"line_no": 73, "char_start": 3110, "char_end": 3202, "line": "    {\"id\":\"afairfootpg@naver.com\",\"title\":\"Aron Fairfoot\",\"color\":\"#601e24\",\"dep\":\"Legal\"},\n"}, {"line_no": 75, "char_start": 3188, "char_end": 3293, "line": "    {\"id\":\"lfrancesconeph@furl.net\",\"title\":\"Lyndsay Francescone\",\"color\":\"#a6affb\",\"dep\":\"Accounting\"},\n"}, {"line_no": 77, "char_start": 3277, "char_end": 3375, "line": "    {\"id\":\"rteerspi@buzzfeed.com\",\"title\":\"Rafaello Teers\",\"color\":\"#f2e39c\",\"dep\":\"Accounting\"},\n"}, {"line_no": 79, "char_start": 3361, "char_end": 3459, "line": "    {\"id\":\"utroakpj@g.co\",\"title\":\"Ursola Troak\",\"color\":\"#5c8b19\",\"dep\":\"Business Development\"},\n"}, {"line_no": 81, "char_start": 3453, "char_end": 3560, "line": "    {\"id\":\"elawlandpk@sciencedaily.com\",\"title\":\"Erna Lawland\",\"color\":\"#125e01\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 83, "char_start": 3540, "char_end": 3635, "line": "    {\"id\":\"jaleevypl@tripod.com\",\"title\":\"Jodee Aleevy\",\"color\":\"#29c3fe\",\"dep\":\"Accounting\"},\n"}, {"line_no": 85, "char_start": 3622, "char_end": 3730, "line": "    {\"id\":\"tmeiklepm@istockphoto.com\",\"title\":\"Titus Meikle\",\"color\":\"#4a87c8\",\"dep\":\"Product Management\"},\n"}, {"line_no": 87, "char_start": 3712, "char_end": 3833, "line": "    {\"id\":\"ashotboultepn@theatlantic.com\",\"title\":\"Anastassia Shotboulte\",\"color\":\"#c3c2fb\",\"dep\":\"Product Management\"},\n"}, {"line_no": 89, "char_start": 3811, "char_end": 3896, "line": "    {\"id\":\"breckpo@state.gov\",\"title\":\"Berte Reck\",\"color\":\"#26bb56\",\"dep\":\"Sales\"},\n"}, {"line_no": 91, "char_start": 3886, "char_end": 3988, "line": "    {\"id\":\"efeighrypp@baidu.com\",\"title\":\"Edy Feighry\",\"color\":\"#66b2bb\",\"dep\":\"Product Management\"},\n"}, {"line_no": 93, "char_start": 3975, "char_end": 4087, "line": "    {\"id\":\"clilleycroppq@w3.org\",\"title\":\"Cody Lilleycrop\",\"color\":\"#c6942d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 95, "char_start": 4074, "char_end": 4180, "line": "    {\"id\":\"fcornhillpr@cdc.gov\",\"title\":\"Frank cornhill\",\"color\":\"#1b2d4b\",\"dep\":\"Business Development\"},\n"}, {"line_no": 97, "char_start": 4168, "char_end": 4266, "line": "    {\"id\":\"nchessorps@symantec.com\",\"title\":\"Nolly Chessor\",\"color\":\"#78f65a\",\"dep\":\"Marketing\"},\n"}, {"line_no": 99, "char_start": 4250, "char_end": 4348, "line": "    {\"id\":\"esparrowpt@yahoo.co.jp\",\"title\":\"Emelina Sparrow\",\"color\":\"#295b9d\",\"dep\":\"Marketing\"},"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 91, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Binny Wallsam\",\"color\":\"#875713\",\"dep\":\"Product Management\"},\n"}, {"line_no": 4, "char_start": 91, "char_end": 178, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mikkel Regardsoe\",\"color\":\"#2e31fc\",\"dep\":\"Engineering\"},\n"}, {"line_no": 6, "char_start": 178, "char_end": 262, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Tawsha Capstack\",\"color\":\"#e1bde2\",\"dep\":\"Marketing\"},\n"}, {"line_no": 8, "char_start": 262, "char_end": 345, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nanine Millery\",\"color\":\"#b5a8b9\",\"dep\":\"Marketing\"},\n"}, {"line_no": 10, "char_start": 345, "char_end": 446, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Donall Blackborow\",\"color\":\"#81ab4b\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 12, "char_start": 446, "char_end": 530, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lamond Jahnke\",\"color\":\"#c75fa5\",\"dep\":\"Engineering\"},\n"}, {"line_no": 14, "char_start": 530, "char_end": 609, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nessi Papps\",\"color\":\"#6abd79\",\"dep\":\"Training\"},\n"}, {"line_no": 16, "char_start": 609, "char_end": 701, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Florrie Nilles\",\"color\":\"#46eb28\",\"dep\":\"Product Management\"},\n"}, {"line_no": 18, "char_start": 701, "char_end": 781, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Vin Pratley\",\"color\":\"#6662d6\",\"dep\":\"Marketing\"},\n"}, {"line_no": 20, "char_start": 781, "char_end": 861, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Tish Pahlsson\",\"color\":\"#1763db\",\"dep\":\"Support\"},\n"}, {"line_no": 22, "char_start": 861, "char_end": 943, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ruthie Halse\",\"color\":\"#24cab7\",\"dep\":\"Accounting\"},\n"}, {"line_no": 24, "char_start": 943, "char_end": 1036, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jaine Vallentin\",\"color\":\"#f3dac7\",\"dep\":\"Product Management\"},\n"}, {"line_no": 26, "char_start": 1036, "char_end": 1130, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Violante Nottingham\",\"color\":\"#9e09a0\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 28, "char_start": 1130, "char_end": 1221, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Alexandre Oakden\",\"color\":\"#763cc5\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 30, "char_start": 1221, "char_end": 1306, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Carce Chesters\",\"color\":\"#b8e4a4\",\"dep\":\"Engineering\"},\n"}, {"line_no": 32, "char_start": 1306, "char_end": 1395, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Bancroft Schollick\",\"color\":\"#f57647\",\"dep\":\"Engineering\"},\n"}, {"line_no": 34, "char_start": 1395, "char_end": 1492, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Charita Thirlwell\",\"color\":\"#76862c\",\"dep\":\"Business Development\"},\n"}, {"line_no": 36, "char_start": 1492, "char_end": 1583, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Zoe Simkovitz\",\"color\":\"#3928dd\",\"dep\":\"Product Management\"},\n"}, {"line_no": 38, "char_start": 1583, "char_end": 1663, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lucais Blissitt\",\"color\":\"#f5b184\",\"dep\":\"Sales\"},\n"}, {"line_no": 40, "char_start": 1663, "char_end": 1748, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hermione Peete\",\"color\":\"#cf94a1\",\"dep\":\"Engineering\"},\n"}, {"line_no": 42, "char_start": 1748, "char_end": 1829, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Hillard Giffkins\",\"color\":\"#1fee58\",\"dep\":\"Sales\"},\n"}, {"line_no": 44, "char_start": 1829, "char_end": 1909, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Mamie Krolle\",\"color\":\"#2e25b8\",\"dep\":\"Training\"},\n"}, {"line_no": 46, "char_start": 1909, "char_end": 2007, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rosemarie Crocumbe\",\"color\":\"#4a2814\",\"dep\":\"Business Development\"},\n"}, {"line_no": 48, "char_start": 2007, "char_end": 2090, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Shannon Elmhirst\",\"color\":\"#83d714\",\"dep\":\"Support\"},\n"}, {"line_no": 50, "char_start": 2090, "char_end": 2178, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Angelo O'Fearguise\",\"color\":\"#4627b5\",\"dep\":\"Accounting\"},\n"}, {"line_no": 52, "char_start": 2178, "char_end": 2257, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Borg Dibbin\",\"color\":\"#88a2cb\",\"dep\":\"Services\"},\n"}, {"line_no": 54, "char_start": 2257, "char_end": 2350, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lissie Measom\",\"color\":\"#a7e4d1\",\"dep\":\"Business Development\"},\n"}, {"line_no": 56, "char_start": 2350, "char_end": 2428, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Becki Driutti\",\"color\":\"#66b129\",\"dep\":\"Legal\"},\n"}, {"line_no": 58, "char_start": 2428, "char_end": 2508, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Maurits McGiven\",\"color\":\"#b67a5b\",\"dep\":\"Sales\"},\n"}, {"line_no": 60, "char_start": 2508, "char_end": 2591, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Elsinore Twigger\",\"color\":\"#c10cfb\",\"dep\":\"Support\"},\n"}, {"line_no": 62, "char_start": 2591, "char_end": 2675, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Janaya Wanden\",\"color\":\"#e032fc\",\"dep\":\"Engineering\"},\n"}, {"line_no": 64, "char_start": 2675, "char_end": 2772, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashly Mockler\",\"color\":\"#6d7158\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 66, "char_start": 2772, "char_end": 2853, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Evelina Diehn\",\"color\":\"#d9d91e\",\"dep\":\"Training\"},\n"}, {"line_no": 68, "char_start": 2853, "char_end": 2931, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Emlen Edger\",\"color\":\"#1d5ca7\",\"dep\":\"Support\"},\n"}, {"line_no": 70, "char_start": 2931, "char_end": 3015, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jacklyn Chalfain\",\"color\":\"#091fbc\",\"dep\":\"Training\"},\n"}, {"line_no": 72, "char_start": 3015, "char_end": 3110, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Suki Pennington\",\"color\":\"#381724\",\"dep\":\"Business Development\"},\n"}, {"line_no": 74, "char_start": 3110, "char_end": 3188, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Aron Fairfoot\",\"color\":\"#601e24\",\"dep\":\"Legal\"},\n"}, {"line_no": 76, "char_start": 3188, "char_end": 3277, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Lyndsay Francescone\",\"color\":\"#a6affb\",\"dep\":\"Accounting\"},\n"}, {"line_no": 78, "char_start": 3277, "char_end": 3361, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Rafaello Teers\",\"color\":\"#f2e39c\",\"dep\":\"Accounting\"},\n"}, {"line_no": 80, "char_start": 3361, "char_end": 3453, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Ursola Troak\",\"color\":\"#5c8b19\",\"dep\":\"Business Development\"},\n"}, {"line_no": 82, "char_start": 3453, "char_end": 3540, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Erna Lawland\",\"color\":\"#125e01\",\"dep\":\"Human Resources\"},\n"}, {"line_no": 84, "char_start": 3540, "char_end": 3622, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Jodee Aleevy\",\"color\":\"#29c3fe\",\"dep\":\"Accounting\"},\n"}, {"line_no": 86, "char_start": 3622, "char_end": 3712, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Titus Meikle\",\"color\":\"#4a87c8\",\"dep\":\"Product Management\"},\n"}, {"line_no": 88, "char_start": 3712, "char_end": 3811, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Anastassia Shotboulte\",\"color\":\"#c3c2fb\",\"dep\":\"Product Management\"},\n"}, {"line_no": 90, "char_start": 3811, "char_end": 3886, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Berte Reck\",\"color\":\"#26bb56\",\"dep\":\"Sales\"},\n"}, {"line_no": 92, "char_start": 3886, "char_end": 3975, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Edy Feighry\",\"color\":\"#66b2bb\",\"dep\":\"Product Management\"},\n"}, {"line_no": 94, "char_start": 3975, "char_end": 4074, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Cody Lilleycrop\",\"color\":\"#c6942d\",\"dep\":\"Research and Development\"},\n"}, {"line_no": 96, "char_start": 4074, "char_end": 4168, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Frank cornhill\",\"color\":\"#1b2d4b\",\"dep\":\"Business Development\"},\n"}, {"line_no": 98, "char_start": 4168, "char_end": 4250, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Nolly Chessor\",\"color\":\"#78f65a\",\"dep\":\"Marketing\"},\n"}, {"line_no": 100, "char_start": 4250, "char_end": 4333, "line": "    {\"id\":\"<EMAIL>\",\"title\":\"Emelina Sparrow\",\"color\":\"#295b9d\",\"dep\":\"Marketing\"},"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 101, "chars": "    {\"id\":\"bwallsamog@gov.uk\",\"title\":\"Binny Wallsam\",\"color\":\"#875713\",\"dep\":\"Product Management\"},\n"}, {"char_start": 91, "char_end": 195, "chars": "    {\"id\":\"mregardsoeoh@walmart.com\",\"title\":\"Mikkel Regardsoe\",\"color\":\"#2e31fc\",\"dep\":\"Engineering\"},\n"}, {"char_start": 178, "char_end": 280, "chars": "    {\"id\":\"tcapstackoi@cafepress.com\",\"title\":\"Tawsha Capstack\",\"color\":\"#e1bde2\",\"dep\":\"Marketing\"},\n"}, {"char_start": 262, "char_end": 357, "chars": "    {\"id\":\"nmilleryoj@fema.gov\",\"title\":\"Nanine Millery\",\"color\":\"#b5a8b9\",\"dep\":\"Marketing\"},\n"}, {"char_start": 345, "char_end": 462, "chars": "    {\"id\":\"dblackborowok@github.io\",\"title\":\"Donall Blackborow\",\"color\":\"#81ab4b\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 446, "char_end": 547, "chars": "    {\"id\":\"ljahnkeol@infoseek.co.jp\",\"title\":\"Lamond Jahnke\",\"color\":\"#c75fa5\",\"dep\":\"Engineering\"},\n"}, {"char_start": 530, "char_end": 621, "chars": "    {\"id\":\"npappsom@sbwire.com\",\"title\":\"Nessi Papps\",\"color\":\"#6abd79\",\"dep\":\"Training\"},\n"}, {"char_start": 609, "char_end": 717, "chars": "    {\"id\":\"fnilleson@angelfire.com\",\"title\":\"Florrie Nilles\",\"color\":\"#46eb28\",\"dep\":\"Product Management\"},\n"}, {"char_start": 701, "char_end": 794, "chars": "    {\"id\":\"vpratleyoo@hexun.com\",\"title\":\"Vin Pratley\",\"color\":\"#6662d6\",\"dep\":\"Marketing\"},\n"}, {"char_start": 781, "char_end": 876, "chars": "    {\"id\":\"tpahlssonop@ustream.tv\",\"title\":\"Tish Pahlsson\",\"color\":\"#1763db\",\"dep\":\"Support\"},\n"}, {"char_start": 861, "char_end": 957, "chars": "    {\"id\":\"rhalseoq@omniture.com\",\"title\":\"Ruthie Halse\",\"color\":\"#24cab7\",\"dep\":\"Accounting\"},\n"}, {"char_start": 943, "char_end": 1057, "chars": "    {\"id\":\"jvallentinor@theatlantic.com\",\"title\":\"Jaine Vallentin\",\"color\":\"#f3dac7\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1036, "char_end": 1144, "chars": "    {\"id\":\"vnottinghamos@unc.edu\",\"title\":\"Violante Nottingham\",\"color\":\"#9e09a0\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1130, "char_end": 1239, "chars": "    {\"id\":\"aoakdenot@stumbleupon.com\",\"title\":\"Alexandre Oakden\",\"color\":\"#763cc5\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1221, "char_end": 1323, "chars": "    {\"id\":\"cchestersou@columbia.edu\",\"title\":\"Carce Chesters\",\"color\":\"#b8e4a4\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1306, "char_end": 1412, "chars": "    {\"id\":\"bschollickov@gizmodo.com\",\"title\":\"Bancroft Schollick\",\"color\":\"#f57647\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1395, "char_end": 1510, "chars": "    {\"id\":\"cthirlwellow@illinois.edu\",\"title\":\"Charita Thirlwell\",\"color\":\"#76862c\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1492, "char_end": 1598, "chars": "    {\"id\":\"zsimkovitzox@ameblo.jp\",\"title\":\"Zoe Simkovitz\",\"color\":\"#3928dd\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1583, "char_end": 1676, "chars": "    {\"id\":\"lblissittoy@narod.ru\",\"title\":\"Lucais Blissitt\",\"color\":\"#f5b184\",\"dep\":\"Sales\"},\n"}, {"char_start": 1663, "char_end": 1763, "chars": "    {\"id\":\"hpeeteoz@geocities.com\",\"title\":\"Hermione Peete\",\"color\":\"#cf94a1\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1748, "char_end": 1842, "chars": "    {\"id\":\"hgiffkinsp0@nasa.gov\",\"title\":\"Hillard Giffkins\",\"color\":\"#1fee58\",\"dep\":\"Sales\"},\n"}, {"char_start": 1829, "char_end": 1919, "chars": "    {\"id\":\"mkrollep1@psu.edu\",\"title\":\"Mamie Krolle\",\"color\":\"#2e25b8\",\"dep\":\"Training\"},\n"}, {"char_start": 1909, "char_end": 2024, "chars": "    {\"id\":\"rcrocumbep2@geocities.jp\",\"title\":\"Rosemarie Crocumbe\",\"color\":\"#4a2814\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2007, "char_end": 2107, "chars": "    {\"id\":\"selmhirstp3@amazon.co.uk\",\"title\":\"Shannon Elmhirst\",\"color\":\"#83d714\",\"dep\":\"Support\"},\n"}, {"char_start": 2090, "char_end": 2201, "chars": "    {\"id\":\"aofearguisep4@miitbeian.gov.cn\",\"title\":\"Angelo O'Fearguise\",\"color\":\"#4627b5\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2178, "char_end": 2273, "chars": "    {\"id\":\"bdibbinp5@over-blog.com\",\"title\":\"Borg Dibbin\",\"color\":\"#88a2cb\",\"dep\":\"Services\"},\n"}, {"char_start": 2257, "char_end": 2361, "chars": "    {\"id\":\"lmeasomp6@blog.com\",\"title\":\"Lissie Measom\",\"color\":\"#a7e4d1\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2350, "char_end": 2448, "chars": "    {\"id\":\"bdriuttip7@domainmarket.com\",\"title\":\"Becki Driutti\",\"color\":\"#66b129\",\"dep\":\"Legal\"},\n"}, {"char_start": 2428, "char_end": 2519, "chars": "    {\"id\":\"mmcgivenp8@hhs.gov\",\"title\":\"Maurits McGiven\",\"color\":\"#b67a5b\",\"dep\":\"Sales\"},\n"}, {"char_start": 2508, "char_end": 2608, "chars": "    {\"id\":\"etwiggerp9@aboutads.info\",\"title\":\"Elsinore Twigger\",\"color\":\"#c10cfb\",\"dep\":\"Support\"},\n"}, {"char_start": 2591, "char_end": 2686, "chars": "    {\"id\":\"jwandenpa@army.mil\",\"title\":\"Janaya Wanden\",\"color\":\"#e032fc\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2675, "char_end": 2781, "chars": "    {\"id\":\"amocklerpb@51.la\",\"title\":\"Ashly Mockler\",\"color\":\"#6d7158\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2772, "char_end": 2872, "chars": "    {\"id\":\"ediehnpc@ezinearticles.com\",\"title\":\"Evelina Diehn\",\"color\":\"#d9d91e\",\"dep\":\"Training\"},\n"}, {"char_start": 2853, "char_end": 2944, "chars": "    {\"id\":\"eedgerpd@auda.org.au\",\"title\":\"Emlen Edger\",\"color\":\"#1d5ca7\",\"dep\":\"Support\"},\n"}, {"char_start": 2931, "char_end": 3032, "chars": "    {\"id\":\"jchalfainpe@engadget.com\",\"title\":\"Jacklyn Chalfain\",\"color\":\"#091fbc\",\"dep\":\"Training\"},\n"}, {"char_start": 3015, "char_end": 3126, "chars": "    {\"id\":\"spenningtonpf@bbc.co.uk\",\"title\":\"Suki Pennington\",\"color\":\"#381724\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3110, "char_end": 3202, "chars": "    {\"id\":\"afairfootpg@naver.com\",\"title\":\"Aron Fairfoot\",\"color\":\"#601e24\",\"dep\":\"Legal\"},\n"}, {"char_start": 3188, "char_end": 3293, "chars": "    {\"id\":\"lfrancesconeph@furl.net\",\"title\":\"Lyndsay Francescone\",\"color\":\"#a6affb\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3277, "char_end": 3375, "chars": "    {\"id\":\"rteerspi@buzzfeed.com\",\"title\":\"Rafaello Teers\",\"color\":\"#f2e39c\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3361, "char_end": 3459, "chars": "    {\"id\":\"utroakpj@g.co\",\"title\":\"Ursola Troak\",\"color\":\"#5c8b19\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3453, "char_end": 3560, "chars": "    {\"id\":\"elawlandpk@sciencedaily.com\",\"title\":\"Erna Lawland\",\"color\":\"#125e01\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3540, "char_end": 3635, "chars": "    {\"id\":\"jaleevypl@tripod.com\",\"title\":\"Jodee Aleevy\",\"color\":\"#29c3fe\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3622, "char_end": 3730, "chars": "    {\"id\":\"tmeiklepm@istockphoto.com\",\"title\":\"Titus Meikle\",\"color\":\"#4a87c8\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3712, "char_end": 3833, "chars": "    {\"id\":\"ashotboultepn@theatlantic.com\",\"title\":\"Anastassia Shotboulte\",\"color\":\"#c3c2fb\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3811, "char_end": 3896, "chars": "    {\"id\":\"breckpo@state.gov\",\"title\":\"Berte Reck\",\"color\":\"#26bb56\",\"dep\":\"Sales\"},\n"}, {"char_start": 3886, "char_end": 3988, "chars": "    {\"id\":\"efeighrypp@baidu.com\",\"title\":\"Edy Feighry\",\"color\":\"#66b2bb\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3975, "char_end": 4087, "chars": "    {\"id\":\"clilleycroppq@w3.org\",\"title\":\"Cody Lilleycrop\",\"color\":\"#c6942d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 4074, "char_end": 4180, "chars": "    {\"id\":\"fcornhillpr@cdc.gov\",\"title\":\"Frank cornhill\",\"color\":\"#1b2d4b\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4168, "char_end": 4266, "chars": "    {\"id\":\"nchessorps@symantec.com\",\"title\":\"Nolly Chessor\",\"color\":\"#78f65a\",\"dep\":\"Marketing\"},\n"}, {"char_start": 4250, "char_end": 4348, "chars": "    {\"id\":\"esparrowpt@yahoo.co.jp\",\"title\":\"Emelina Sparrow\",\"color\":\"#295b9d\",\"dep\":\"Marketing\"},"}], "added": [{"char_start": 0, "char_end": 91, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Binny Wallsam\",\"color\":\"#875713\",\"dep\":\"Product Management\"},\n"}, {"char_start": 91, "char_end": 178, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mikkel Regardsoe\",\"color\":\"#2e31fc\",\"dep\":\"Engineering\"},\n"}, {"char_start": 178, "char_end": 262, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Tawsha Capstack\",\"color\":\"#e1bde2\",\"dep\":\"Marketing\"},\n"}, {"char_start": 262, "char_end": 345, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nanine Millery\",\"color\":\"#b5a8b9\",\"dep\":\"Marketing\"},\n"}, {"char_start": 345, "char_end": 446, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Donall Blackborow\",\"color\":\"#81ab4b\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 446, "char_end": 530, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lamond Jahnke\",\"color\":\"#c75fa5\",\"dep\":\"Engineering\"},\n"}, {"char_start": 530, "char_end": 609, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nessi Papps\",\"color\":\"#6abd79\",\"dep\":\"Training\"},\n"}, {"char_start": 609, "char_end": 701, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Florrie Nilles\",\"color\":\"#46eb28\",\"dep\":\"Product Management\"},\n"}, {"char_start": 701, "char_end": 781, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Vin Pratley\",\"color\":\"#6662d6\",\"dep\":\"Marketing\"},\n"}, {"char_start": 781, "char_end": 861, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Tish Pahlsson\",\"color\":\"#1763db\",\"dep\":\"Support\"},\n"}, {"char_start": 861, "char_end": 943, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ruthie Halse\",\"color\":\"#24cab7\",\"dep\":\"Accounting\"},\n"}, {"char_start": 943, "char_end": 1036, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jaine Vallentin\",\"color\":\"#f3dac7\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1036, "char_end": 1130, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Violante Nottingham\",\"color\":\"#9e09a0\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1130, "char_end": 1221, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Alexandre Oakden\",\"color\":\"#763cc5\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 1221, "char_end": 1306, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Carce Chesters\",\"color\":\"#b8e4a4\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1306, "char_end": 1395, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Bancroft Schollick\",\"color\":\"#f57647\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1395, "char_end": 1492, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Charita Thirlwell\",\"color\":\"#76862c\",\"dep\":\"Business Development\"},\n"}, {"char_start": 1492, "char_end": 1583, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Zoe Simkovitz\",\"color\":\"#3928dd\",\"dep\":\"Product Management\"},\n"}, {"char_start": 1583, "char_end": 1663, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lucais Blissitt\",\"color\":\"#f5b184\",\"dep\":\"Sales\"},\n"}, {"char_start": 1663, "char_end": 1748, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hermione Peete\",\"color\":\"#cf94a1\",\"dep\":\"Engineering\"},\n"}, {"char_start": 1748, "char_end": 1829, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Hillard Giffkins\",\"color\":\"#1fee58\",\"dep\":\"Sales\"},\n"}, {"char_start": 1829, "char_end": 1909, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Mamie Krolle\",\"color\":\"#2e25b8\",\"dep\":\"Training\"},\n"}, {"char_start": 1909, "char_end": 2007, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rosemarie Crocumbe\",\"color\":\"#4a2814\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2007, "char_end": 2090, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Shannon Elmhirst\",\"color\":\"#83d714\",\"dep\":\"Support\"},\n"}, {"char_start": 2090, "char_end": 2178, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Angelo O'Fearguise\",\"color\":\"#4627b5\",\"dep\":\"Accounting\"},\n"}, {"char_start": 2178, "char_end": 2257, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Borg Dibbin\",\"color\":\"#88a2cb\",\"dep\":\"Services\"},\n"}, {"char_start": 2257, "char_end": 2350, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lissie Measom\",\"color\":\"#a7e4d1\",\"dep\":\"Business Development\"},\n"}, {"char_start": 2350, "char_end": 2428, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Becki Driutti\",\"color\":\"#66b129\",\"dep\":\"Legal\"},\n"}, {"char_start": 2428, "char_end": 2508, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Maurits McGiven\",\"color\":\"#b67a5b\",\"dep\":\"Sales\"},\n"}, {"char_start": 2508, "char_end": 2591, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Elsinore Twigger\",\"color\":\"#c10cfb\",\"dep\":\"Support\"},\n"}, {"char_start": 2591, "char_end": 2675, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Janaya Wanden\",\"color\":\"#e032fc\",\"dep\":\"Engineering\"},\n"}, {"char_start": 2675, "char_end": 2772, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ashly Mockler\",\"color\":\"#6d7158\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 2772, "char_end": 2853, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Evelina Diehn\",\"color\":\"#d9d91e\",\"dep\":\"Training\"},\n"}, {"char_start": 2853, "char_end": 2931, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Emlen Edger\",\"color\":\"#1d5ca7\",\"dep\":\"Support\"},\n"}, {"char_start": 2931, "char_end": 3015, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jacklyn Chalfain\",\"color\":\"#091fbc\",\"dep\":\"Training\"},\n"}, {"char_start": 3015, "char_end": 3110, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Suki Pennington\",\"color\":\"#381724\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3110, "char_end": 3188, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Aron Fairfoot\",\"color\":\"#601e24\",\"dep\":\"Legal\"},\n"}, {"char_start": 3188, "char_end": 3277, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Lyndsay Francescone\",\"color\":\"#a6affb\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3277, "char_end": 3361, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Rafaello Teers\",\"color\":\"#f2e39c\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3361, "char_end": 3453, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Ursola Troak\",\"color\":\"#5c8b19\",\"dep\":\"Business Development\"},\n"}, {"char_start": 3453, "char_end": 3540, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Erna Lawland\",\"color\":\"#125e01\",\"dep\":\"Human Resources\"},\n"}, {"char_start": 3540, "char_end": 3622, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Jodee Aleevy\",\"color\":\"#29c3fe\",\"dep\":\"Accounting\"},\n"}, {"char_start": 3622, "char_end": 3712, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Titus Meikle\",\"color\":\"#4a87c8\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3712, "char_end": 3811, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Anastassia Shotboulte\",\"color\":\"#c3c2fb\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3811, "char_end": 3886, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Berte Reck\",\"color\":\"#26bb56\",\"dep\":\"Sales\"},\n"}, {"char_start": 3886, "char_end": 3975, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Edy Feighry\",\"color\":\"#66b2bb\",\"dep\":\"Product Management\"},\n"}, {"char_start": 3975, "char_end": 4074, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Cody Lilleycrop\",\"color\":\"#c6942d\",\"dep\":\"Research and Development\"},\n"}, {"char_start": 4074, "char_end": 4168, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Frank cornhill\",\"color\":\"#1b2d4b\",\"dep\":\"Business Development\"},\n"}, {"char_start": 4168, "char_end": 4250, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Nolly Chessor\",\"color\":\"#78f65a\",\"dep\":\"Marketing\"},\n"}, {"char_start": 4250, "char_end": 4333, "chars": "    {\"id\":\"<EMAIL>\",\"title\":\"Emelina Sparrow\",\"color\":\"#295b9d\",\"dep\":\"Marketing\"},"}]}}
{"func_name": 13366, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "      if(this.gpsPassword =='' || this.gpsPassword==null || this.gpsPassword=='undefined'){\n        this.common.showError(\"Please Enter Password\");\n        return;\n      }\n    }\n    let params={\n      apiprovider:this.gpsSupplierCode,\n      authtoken:this.gpsAuthToken,\n      apiusername:this.gpsUsername,\n      apipwd:this.gpsPassword\n    }\n    \n    this.common.loading++;\n      this.api.postJavaPortDost(8090, 'gpsapi/downloadapidatabyprovider',params)\n        .subscribe(res => {\n          --this.common.loading;\n          console.log(\"Api result\", res['result']);\n          console.log(\"GpsReq:\",this.gpsRequestData);\n          if (res['statusCode']==200) {\n            if(res['result'].length>0){\n              this.common.showToast(\"Success\");\n            this.gpsRequestData=res['result'];\n            this.table = this.setTable();\n      }else{\n        this.common.showToast(\"Record Not Found\");\n      }\n          } else {\n            this.gpsRequestData=[];\n            console.log(\"resData148:\",res['result']);\n            this.common.showError(res['message']);\n          }\n\n        },\n          err => {\n            --this.common.loading;\n            console.error(' Api Error:', err)\n          });\n        }\n\n        formatTitle(title) {\n          return title.charAt(0).toUpperCase() + title.slice(1)\n        }\n\n        setTable() {\n          let headings = {\n            vid: { title: 'Vehicle Id', placeholder: 'Vehicle Id' },\n            vehicleName: { title: 'Vehicle Name', placeholder: 'Vehicle Name' },\n            dateAndTime: { title: 'Date ', placeholder: 'Date' },\n            angle: { title: 'Angle', placeholder: 'Angle' },\n            speed: { title: 'Speed', placeholder: 'Speed' },", "func_src_after": "      if(this.gpsPassword =='' || this.gpsPassword==null || this.gpsPassword=='undefined'){\n        this.common.showError(\"Please Enter Password\");\n        return;\n      }\n    }\n    let params={\n      apiprovider:this.gpsSupplierCode,\n      authtoken:this.gpsAuthToken,\n      apiusername:this.gpsUsername,\n      apipwd:this.gpsPassword\n    }\n    \n    this.common.loading++;\n      this.api.postJavaPortDost(8090, 'gpsapi/downloadapidatabyprovider',params)\n        .subscribe(res => {\n          --this.common.loading;\n          console.log(\"Api result\", res['result']);\n          console.log(\"GpsReq:\",this.gpsRequestData);\n          if (res['statusCode']==200) {\n            if(res['result'].length>0){\n              this.common.showToast(\"Success\");\n            this.gpsRequestData=res['result'];\n            this.table = this.setTable();\n      }else{\n        this.common.showToast(\"Record Not Found\");\n      }\n          } else {\n            this.gpsRequestData=[];\n            console.log(\"resData148:\",res['result']);\n            this.common.showError(res['message']);\n          }\n\n        },\n          err => {\n            --this.common.loading;\n            console.error(' Api Error:', err)\n          });\n        }\n\n        formatTitle(title) {\n          return title.charAt(0).toUpperCase() + title.slice(1)\n        }\n\n        setTable() {\n          let headings = {\n            vid: { title: 'Vehicle Id', placeholder: 'Vehicle Id' },\n            vehicleName: { title: 'Vehicle Name', placeholder: 'Vehicle Name' },\n            dateAndTime: { title: 'Date ', placeholder: 'Date' },\n            angle: { title: 'Angle', placeholder: 'Angle' },\n            speed: { title: 'Speed', placeholder: 'Speed' },", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13377, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    nameInput=(component \"my-input-component\" value=@model.name placeholder=\"First Name\")\n  )}}\n  ```\n\n  When yielding the component via the `hash` helper, the component is invoked directly.\n  See the following snippet:\n\n  ```\n  <PersonForm as |form|>\n    <form.nameInput @placeholder=\"Username\" />\n  </PersonForm>\n  ```\n\n  or\n  ```\n  {{#person-form as |form|}}\n    {{form.nameInput placeholder=\"Username\"}}\n  {{/person-form}}\n  ```\n\n  Which outputs an input whose value is already bound to `model.name` and `placeholder`\n  is \"Username\".\n\n  When yielding the component without the hash helper use the `component` helper.\n  For example, below is a `full-name` component template:\n\n  ```handlebars\n  {{yield (component \"my-input-component\" value=@model.name placeholder=\"Name\")}}\n  ```\n\n  ```\n  <FullName as |field|>\n    {{component field placeholder=\"Full name\"}}\n  </FullName>\n  ```\n  or\n  ```\n  {{#full-name as |field|}}\n    {{component field placeholder=\"Full name\"}}\n  {{/full-name}}\n  ```\n\n  @method component\n  @since 1.11.0\n  @for Ember.Templates.helpers\n  @public\n*/\n", "func_src_after": "    nameInput=(component \"my-input-component\" value=@model.name placeholder=\"First Name\")\n  )}}\n  ```\n\n  When yielding the component via the `hash` helper, the component is invoked directly.\n  See the following snippet:\n\n  ```\n  <PersonForm as |form|>\n    <form.nameInput @placeholder=\"Username\" />\n  </PersonForm>\n  ```\n\n  or\n  ```\n  {{#person-form as |form|}}\n    {{form.nameInput placeholder=\"Username\"}}\n  {{/person-form}}\n  ```\n\n  Which outputs an input whose value is already bound to `model.name` and `placeholder`\n  is \"Username\".\n\n  When yielding the component without the hash helper use the `component` helper.\n  For example, below is a `full-name` component template:\n\n  ```handlebars\n  {{yield (component \"my-input-component\" value=@model.name placeholder=\"Name\")}}\n  ```\n\n  ```\n  <FullName as |field|>\n    {{component field placeholder=\"Full name\"}}\n  </FullName>\n  ```\n  or\n  ```\n  {{#full-name as |field|}}\n    {{component field placeholder=\"Full name\"}}\n  {{/full-name}}\n  ```\n\n  @method component\n  @since 1.11.0\n  @for Ember.Templates.helpers\n  @public\n*/\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13378, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import { Injectable } from '@nestjs/common';\nimport axios from 'axios';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    // Паша: А где Валера\n    // Паша: Где все?\n    // Валера: Лично я на Озере ледяных Оков сражаюсь за орду, а где Вика понятия не имею.\n    return 'Паш, мы почти смогли, или не очень';\n  }\n  getWorkTime(useridParam: number, dateParam: string /* string в формате 'YYYY-MM-DD' */): number {\n    var z=0;\n    axios.get(`http://admin:thuvj1sh@dev-redmine.gnedov.info:8380/time_entries.json?user_id=${useridParam}&spent_on=${dateParam}`).then(function (response) {\n    \n      var timeEntries = response.data.time_entries;\n      for (var i = 1; i < timeEntries.length; i++) {\n        var timeItem = timeEntries[i];\n        var user = timeItem.user;\n        var userid = user.id;\n        var hours = timeItem.hours;\n        var Date = timeItem.spent_on;\n        console.log(i, ':', 'userid =', userid, '; Hours =', hours, '; Date =', Date);\n        z=z+timeItem.hours;\n        console.log(z);\n      }\n    })\n    return z;\n  }\n}\n\n\n", "func_src_after": "import { Injectable } from '@nestjs/common';\nimport axios from 'axios';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    // Паша: А где Валера\n    // Паша: Где все?\n    // Валера: Лично я на Озере ледяных Оков сражаюсь за орду, а где Вика понятия не имею.\n    return 'Паш, мы почти смогли, или не очень';\n  }\n  getWorkTime(useridParam: number, dateParam: string /* string в формате 'YYYY-MM-DD' */): number {\n    var z=0;\n    axios.get(`http://admin:thuvj1sh@dev-redmine.gnedov.info:8380/time_entries.json?user_id=${useridParam}&spent_on=${dateParam}`).then(function (response) {\n    \n      var timeEntries = response.data.time_entries;\n      for (var i = 1; i < timeEntries.length; i++) {\n        var timeItem = timeEntries[i];\n        var user = timeItem.user;\n        var userid = user.id;\n        var hours = timeItem.hours;\n        var Date = timeItem.spent_on;\n        console.log(i, ':', 'userid =', userid, '; Hours =', hours, '; Date =', Date);\n        z=z+timeItem.hours;\n        console.log(z);\n      }\n    })\n    return z;\n  }\n}\n\n\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13397, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import { IPrismaRepositoryData } from '@repositories/prisma/IPrismaRepositoryData';\nimport { PrismaGenerator } from '@repositories/prisma/PrismaGenerator';\nimport request from 'supertest';\nimport { v4 as uuid } from 'uuid';\n\nimport { app } from '@shared/infra/http/app';\n\nimport {\n    createTestUser,\n    getTestClientData,\n    removeTestUser,\n} from '../shared-functions';\n\ndescribe('POST /auth/sign-in/', () => {\n    const path = '/auth/sign-in';\n    const id = uuid();\n    const testUser = getTestClientData(id, 'postAuthSignIn@test.com');\n    const prismaGenerator = new PrismaGenerator();\n\n    let client: IPrismaRepositoryData;\n    beforeAll(async () => {\n        client = { prisma: prismaGenerator.createPrismaClient() };\n        await createTestUser(client, testUser as never);\n    });\n\n    afterAll(async () => {\n        await removeTestUser(client, testUser as never);\n    });\n\n    it('invalid username or password pattern', async () => {\n        const result = await request(app).post(path).send({\n            email: testUser.email,\n            password: 'invalidPassword',\n        });\n        expect(JSON.parse(result.text)).toEqual({\n            message: 'invalidInput',\n        });\n        expect(result.statusCode).toEqual(422);\n    });\n\n    it('incorrect username or password', async () => {\n        const result = await request(app).post(path).send({\n            email: testUser.email,\n            password: 'TestUser2password!',\n        });\n        expect(JSON.parse(result.text)).toEqual({\n            message: 'emailOrPasswordInvalid',\n        });\n        expect(result.statusCode).toEqual(401);\n    });", "func_src_after": "import { IPrismaRepositoryData } from '@repositories/prisma/IPrismaRepositoryData';\nimport { PrismaGenerator } from '@repositories/prisma/PrismaGenerator';\nimport request from 'supertest';\nimport { v4 as uuid } from 'uuid';\n\nimport { app } from '@shared/infra/http/app';\n\nimport {\n    createTestUser,\n    getTestClientData,\n    removeTestUser,\n} from '../shared-functions';\n\ndescribe('POST /auth/sign-in/', () => {\n    const path = '/auth/sign-in';\n    const id = uuid();\n    const testUser = getTestClientData(id, '<EMAIL>');\n    const prismaGenerator = new PrismaGenerator();\n\n    let client: IPrismaRepositoryData;\n    beforeAll(async () => {\n        client = { prisma: prismaGenerator.createPrismaClient() };\n        await createTestUser(client, testUser as never);\n    });\n\n    afterAll(async () => {\n        await removeTestUser(client, testUser as never);\n    });\n\n    it('invalid username or password pattern', async () => {\n        const result = await request(app).post(path).send({\n            email: testUser.email,\n            password: 'invalidPassword',\n        });\n        expect(JSON.parse(result.text)).toEqual({\n            message: 'invalidInput',\n        });\n        expect(result.statusCode).toEqual(422);\n    });\n\n    it('incorrect username or password', async () => {\n        const result = await request(app).post(path).send({\n            email: testUser.email,\n            password: 'TestUser2password!',\n        });\n        expect(JSON.parse(result.text)).toEqual({\n            message: 'emailOrPasswordInvalid',\n        });\n        expect(result.statusCode).toEqual(401);\n    });", "line_changes": {"deleted": [{"line_no": 17, "char_start": 472, "char_end": 543, "line": "    const testUser = getTestClientData(id, 'postAuthSignIn@test.com');\n"}], "added": [{"line_no": 18, "char_start": 472, "char_end": 527, "line": "    const testUser = getTestClientData(id, '<EMAIL>');\n"}]}, "char_changes": {"deleted": [{"char_start": 472, "char_end": 543, "chars": "    const testUser = getTestClientData(id, 'postAuthSignIn@test.com');\n"}], "added": [{"char_start": 472, "char_end": 527, "chars": "    const testUser = getTestClientData(id, '<EMAIL>');\n"}]}}
{"func_name": 13399, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import { Commun, ConfigManager, EntityController, EntityDao, PluginController } from '../src'\n\ndescribe('Commun', () => {\n  beforeEach(() => {\n    Commun.deregisterAll()\n  })\n\n  describe('registerEntity', () => {\n    it('should register an entity with defaults', async () => {\n      Commun.registerEntity({\n        config: {\n          entityName: 'test',\n          collectionName: 'test',\n          schema: {}\n        }\n      })\n\n      expect(Commun.getEntity('test')).toEqual({\n        config: {\n          entityName: 'test',\n          collectionName: 'test',\n          entitySingularName: 'testItem',\n          apiKey: 'id',\n          schema: {\n            $id: '#entity/testItem',\n            title: 'testItem',\n            properties: {\n              id: {\n                type: 'string',\n                format: 'id',\n              },\n              createdAt: {\n                type: 'object',\n                format: 'date-time',\n              },\n              updatedAt: {\n                type: 'object',\n                format: 'date-time',\n              }\n            }\n          },\n          permissions: {\n            properties: {\n              createdAt: {\n                get: 'system',\n                create: 'system',\n                update: 'system',\n              },\n              updatedAt: {\n                get: 'system',", "func_src_after": "import { Commun, ConfigManager, EntityController, EntityDao, PluginController } from '../src'\n\ndescribe('Commun', () => {\n  beforeEach(() => {\n    Commun.deregisterAll()\n  })\n\n  describe('registerEntity', () => {\n    it('should register an entity with defaults', async () => {\n      Commun.registerEntity({\n        config: {\n          entityName: 'test',\n          collectionName: 'test',\n          schema: {}\n        }\n      })\n\n      expect(Commun.getEntity('test')).toEqual({\n        config: {\n          entityName: 'test',\n          collectionName: 'test',\n          entitySingularName: 'testItem',\n          apiKey: 'id',\n          schema: {\n            $id: '#entity/testItem',\n            title: 'testItem',\n            properties: {\n              id: {\n                type: 'string',\n                format: 'id',\n              },\n              createdAt: {\n                type: 'object',\n                format: 'date-time',\n              },\n              updatedAt: {\n                type: 'object',\n                format: 'date-time',\n              }\n            }\n          },\n          permissions: {\n            properties: {\n              createdAt: {\n                get: 'system',\n                create: 'system',\n                update: 'system',\n              },\n              updatedAt: {\n                get: 'system',", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13448, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    await expect(\r\n      authenticateUserUseCase.execute({\r\n        email: user.email,\r\n        password: 'wrongPassword',\r\n      })\r\n    ).rejects.toEqual(new InvalidEmailOrPassword());\r\n  });\r\n\r\n  it('should not be able to authenticate with wrong email', async () => {\r\n    const passwordHash = await hash('12345678', 8);\r\n\r\n    await inMemoryUsersRepository.create({\r\n      name: 'Stephen McCarthy',\r\n      email: 'zakzi@kis.sn',\r\n      password: passwordHash,\r\n      username: 'stephen123',\r\n      biography: 'test',\r\n    });\r\n\r\n    await expect(\r\n      authenticateUserUseCase.execute({\r\n        email: 'wrong.email@test.com',\r\n        password: '12345678',\r\n      })\r\n    ).rejects.toEqual(new InvalidEmailOrPassword());\r\n  });\r\n});\r\n", "func_src_after": "    await expect(\r\n      authenticateUserUseCase.execute({\r\n        email: user.email,\r\n        password: 'wrongPassword',\r\n      })\r\n    ).rejects.toEqual(new InvalidEmailOrPassword());\r\n  });\r\n\r\n  it('should not be able to authenticate with wrong email', async () => {\r\n    const passwordHash = await hash('12345678', 8);\r\n\r\n    await inMemoryUsersRepository.create({\r\n      name: 'Stephen McCarthy',\r\n      email: '<EMAIL>',\r\n      password: passwordHash,\r\n      username: 'stephen123',\r\n      biography: 'test',\r\n    });\r\n\r\n    await expect(\r\n      authenticateUserUseCase.execute({\r\n        email: '<EMAIL>',\r\n        password: '12345678',\r\n      })\r\n    ).rejects.toEqual(new InvalidEmailOrPassword());\r\n  });\r\n});\r\n", "line_changes": {"deleted": [{"line_no": 14, "char_start": 404, "char_end": 434, "line": "      email: 'zakzi@kis.sn',\r\n"}, {"line_no": 23, "char_start": 588, "char_end": 628, "line": "        email: 'wrong.email@test.com',\r\n"}], "added": [{"line_no": 15, "char_start": 404, "char_end": 429, "line": "      email: '<EMAIL>',\r\n"}, {"line_no": 24, "char_start": 588, "char_end": 615, "line": "        email: '<EMAIL>',\r\n"}]}, "char_changes": {"deleted": [{"char_start": 404, "char_end": 434, "chars": "      email: 'zakzi@kis.sn',\r\n"}, {"char_start": 588, "char_end": 628, "chars": "        email: 'wrong.email@test.com',\r\n"}], "added": [{"char_start": 404, "char_end": 429, "chars": "      email: '<EMAIL>',\r\n"}, {"char_start": 588, "char_end": 615, "chars": "        email: '<EMAIL>',\r\n"}]}}
{"func_name": 13471, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import { boundMethod } from 'autobind-decorator';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { mapTo, take } from 'rxjs/operators';\n\nexport enum MessageType {\n  ERROR = 'error',\n  INFO = 'info',\n  REQUEST = 'request',\n  STATUS = 'status',\n}\n\nexport enum RequestType {\n  PASSWORD = 'password',\n  SELECT = 'select',\n  TEXT = 'text',\n}\n\nexport enum Emoji {\n  ARROW_UP = 'arrow_up',\n  BOOKMARK = 'books',\n  BOOKS = 'books',\n  BOOM = 'boom',\n  BUG = 'bug',\n  LINK = 'link',\n  MAG_RIGHT = 'mag_right',\n  OK = 'ok_hand',\n  PENCIL = 'pencil2',\n  QUESTION = 'grey_question',\n  SHIP = 'ship',\n  TADA = 'tada',\n}\n\nexport interface Message {\n  detail?: string;\n  emoji?: Emoji;\n  message: string;\n  showSpinner: boolean;\n  type: MessageType;\n}\n\nexport interface Request extends Message {\n  requestType: RequestType;\n  type: MessageType.REQUEST;\n}\n\nexport interface Status extends Message {\n  inThread: boolean;\n}\n\nexport interface SelectRequest extends Request {", "func_src_after": "import { boundMethod } from 'autobind-decorator';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { mapTo, take } from 'rxjs/operators';\n\nexport enum MessageType {\n  ERROR = 'error',\n  INFO = 'info',\n  REQUEST = 'request',\n  STATUS = 'status',\n}\n\nexport enum RequestType {\n  PASSWORD = 'password',\n  SELECT = 'select',\n  TEXT = 'text',\n}\n\nexport enum Emoji {\n  ARROW_UP = 'arrow_up',\n  BOOKMARK = 'books',\n  BOOKS = 'books',\n  BOOM = 'boom',\n  BUG = 'bug',\n  LINK = 'link',\n  MAG_RIGHT = 'mag_right',\n  OK = 'ok_hand',\n  PENCIL = 'pencil2',\n  QUESTION = 'grey_question',\n  SHIP = 'ship',\n  TADA = 'tada',\n}\n\nexport interface Message {\n  detail?: string;\n  emoji?: Emoji;\n  message: string;\n  showSpinner: boolean;\n  type: MessageType;\n}\n\nexport interface Request extends Message {\n  requestType: RequestType;\n  type: MessageType.REQUEST;\n}\n\nexport interface Status extends Message {\n  inThread: boolean;\n}\n\nexport interface SelectRequest extends Request {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13613, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n#\n# Description\n#\n#   Functions to convert osculating elements to mean elements.\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n#\n# References\n#\n#   [1] Vallado, D. A; Crawford, P (2008). SGP4 orbit determination. AIAA/AAS\n#       Astrodynamics Specialist Conference, Honoulu, HI.\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\nexport rv_to_mean_elements_sgp4, rv_to_tle\n\n\"\"\"\n    rv_to_mean_elements_sgp4(vJD::AbstractVector{T}, vr::AbstractVector{Tv}, vv::AbstractVector{Tv}, W = I; max_it = 10000, sgp4_gc = sgp4_gc_wgs84) where {T,Tv<:AbstractVector}\n\nCompute the mean elements for SGP4 based on the position `vr` and velocity\nvectors `vr` represented in TEME reference frame. The epoch of those\nmeasurements [Julian Day] must be in `vJD`.\n\nThe matrix `W` defined the weights for the least-square algorithm.\n\nThe variable `max_it` defines the maximum allowed number of iterations.\n\nThe variable `sgp4_gc` defines which constants should be used when running SGP4.\n\n# Returns\n\n* The epoch of the elements [Julian Day].\n* The mean elements for SGP4 algorithm:\n    - Mean motion [rad/s];\n    - Eccentricity [];\n    - Inclination [rad];\n    - Right ascension of the ascending node [rad];\n    - Argument of perigee [rad];\n    - Mean anomaly [rad];\n    - BSTAR.\n* The covariance matrix of the mean elements estimation.\n\n\"\"\"\nfunction rv_to_mean_elements_sgp4(vJD::AbstractVector{T}, vr::AbstractVector{Tv},\n                                  vv::AbstractVector{Tv}, W = I; max_it = 10000,\n                                 sgp4_gc = sgp4_gc_wgs84) where\n    {T,Tv<:AbstractVector}\n\n    # Number of measurements.", "func_src_after": "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n#\n# Description\n#\n#   Functions to convert osculating elements to mean elements.\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n#\n# References\n#\n#   [1] Vallado, D. A; Crawford, P (2008). SGP4 orbit determination. AIAA/AAS\n#       Astrodynamics Specialist Conference, Honoulu, HI.\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\nexport rv_to_mean_elements_sgp4, rv_to_tle\n\n\"\"\"\n    rv_to_mean_elements_sgp4(vJD::AbstractVector{T}, vr::AbstractVector{Tv}, vv::AbstractVector{Tv}, W = I; max_it = 10000, sgp4_gc = sgp4_gc_wgs84) where {T,Tv<:AbstractVector}\n\nCompute the mean elements for SGP4 based on the position `vr` and velocity\nvectors `vr` represented in TEME reference frame. The epoch of those\nmeasurements [Julian Day] must be in `vJD`.\n\nThe matrix `W` defined the weights for the least-square algorithm.\n\nThe variable `max_it` defines the maximum allowed number of iterations.\n\nThe variable `sgp4_gc` defines which constants should be used when running SGP4.\n\n# Returns\n\n* The epoch of the elements [Julian Day].\n* The mean elements for SGP4 algorithm:\n    - Mean motion [rad/s];\n    - Eccentricity [];\n    - Inclination [rad];\n    - Right ascension of the ascending node [rad];\n    - Argument of perigee [rad];\n    - Mean anomaly [rad];\n    - BSTAR.\n* The covariance matrix of the mean elements estimation.\n\n\"\"\"\nfunction rv_to_mean_elements_sgp4(vJD::AbstractVector{T}, vr::AbstractVector{Tv},\n                                  vv::AbstractVector{Tv}, W = I; max_it = 10000,\n                                 sgp4_gc = sgp4_gc_wgs84) where\n    {T,Tv<:AbstractVector}\n\n    # Number of measurements.", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13645, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "# From https://github.com/microsoft/Microsoft-MPI/blob/v10.0/src/include/mpi.h\n\nconst MPI_Aint   = Int\nconst MPI_Offset = Int64\nconst MPI_Count  = Int64\n\nfor T in [:MPI_Comm, :MPI_Info, :MPI_Win, :MPI_Request, :MPI_Op, :MPI_Datatype, :MPI_File]\n    @eval begin\n        primitive type $T 32 end\n        $T(c::Cint) = reinterpret($T, c)\n    end\nend\n\nconst MPI_COMM_NULL  = reinterpret(Cint, 0x04000000)\nconst MPI_COMM_SELF  = reinterpret(Cint, 0x44000001)\nconst MPI_COMM_WORLD = reinterpret(Cint, 0x44000000)\n\nconst MPI_INFO_NULL = reinterpret(Cint, 0x1c000000)\n\nconst MPI_WIN_NULL = reinterpret(Cint, 0x20000000)\n\nconst MPI_OP_NULL = reinterpret(Cint, 0x18000000)\nconst MPI_MAX     = reinterpret(Cint, 0x58000001)\nconst MPI_MIN     = reinterpret(Cint, 0x58000002)\nconst MPI_SUM     = reinterpret(Cint, 0x58000003)\nconst MPI_PROD    = reinterpret(Cint, 0x58000004)\nconst MPI_LAND    = reinterpret(Cint, 0x58000005)\nconst MPI_BAND    = reinterpret(Cint, 0x58000006)\nconst MPI_LOR     = reinterpret(Cint, 0x58000007)\nconst MPI_BOR     = reinterpret(Cint, 0x58000008)\nconst MPI_LXOR    = reinterpret(Cint, 0x58000009)\nconst MPI_BXOR    = reinterpret(Cint, 0x5800000a)\nconst MPI_MINLOC  = reinterpret(Cint, 0x5800000b)\nconst MPI_MAXLOC  = reinterpret(Cint, 0x5800000c)\nconst MPI_REPLACE = reinterpret(Cint, 0x5800000d)\nconst MPI_NO_OP   = reinterpret(Cint, 0x5800000e)\n\nconst MPI_REQUEST_NULL = reinterpret(Cint, 0x2c000000)\n\nconst MPI_DATATYPE_NULL         = reinterpret(Cint, 0x0c000000)\nconst MPI_PACKED                = reinterpret(Cint, 0x4c00010f)\nconst MPI_CHAR                  = reinterpret(Cint, 0x4c000101)\nconst MPI_SIGNED_CHAR           = reinterpret(Cint, 0x4c000118)\nconst MPI_UNSIGNED_CHAR         = reinterpret(Cint, 0x4c000102)\nconst MPI_WCHAR                 = reinterpret(Cint, 0x4c00020e)\nconst MPI_BYTE                  = reinterpret(Cint, 0x4c00010d)\nconst MPI_SHORT                 = reinterpret(Cint, 0x4c000203)\nconst MPI_UNSIGNED_SHORT        = reinterpret(Cint, 0x4c000204)\nconst MPI_INT                   = reinterpret(Cint, 0x4c000405)\nconst MPI_UNSIGNED              = reinterpret(Cint, 0x4c000406)", "func_src_after": "# From https://github.com/microsoft/Microsoft-MPI/blob/v10.0/src/include/mpi.h\n\nconst MPI_Aint   = Int\nconst MPI_Offset = Int64\nconst MPI_Count  = Int64\n\nfor T in [:MPI_Comm, :MPI_Info, :MPI_Win, :MPI_Request, :MPI_Op, :MPI_Datatype, :MPI_File]\n    @eval begin\n        primitive type $T 32 end\n        $T(c::Cint) = reinterpret($T, c)\n    end\nend\n\nconst MPI_COMM_NULL  = reinterpret(Cint, 0x04000000)\nconst MPI_COMM_SELF  = reinterpret(Cint, 0x44000001)\nconst MPI_COMM_WORLD = reinterpret(Cint, 0x44000000)\n\nconst MPI_INFO_NULL = reinterpret(Cint, 0x1c000000)\n\nconst MPI_WIN_NULL = reinterpret(Cint, 0x20000000)\n\nconst MPI_OP_NULL = reinterpret(Cint, 0x18000000)\nconst MPI_MAX     = reinterpret(Cint, 0x58000001)\nconst MPI_MIN     = reinterpret(Cint, 0x58000002)\nconst MPI_SUM     = reinterpret(Cint, 0x58000003)\nconst MPI_PROD    = reinterpret(Cint, 0x58000004)\nconst MPI_LAND    = reinterpret(Cint, 0x58000005)\nconst MPI_BAND    = reinterpret(Cint, 0x58000006)\nconst MPI_LOR     = reinterpret(Cint, 0x58000007)\nconst MPI_BOR     = reinterpret(Cint, 0x58000008)\nconst MPI_LXOR    = reinterpret(Cint, 0x58000009)\nconst MPI_BXOR    = reinterpret(Cint, 0x5800000a)\nconst MPI_MINLOC  = reinterpret(Cint, 0x5800000b)\nconst MPI_MAXLOC  = reinterpret(Cint, 0x5800000c)\nconst MPI_REPLACE = reinterpret(Cint, 0x5800000d)\nconst MPI_NO_OP   = reinterpret(Cint, 0x5800000e)\n\nconst MPI_REQUEST_NULL = reinterpret(Cint, 0x2c000000)\n\nconst MPI_DATATYPE_NULL         = reinterpret(Cint, 0x0c000000)\nconst MPI_PACKED                = reinterpret(Cint, 0x4c00010f)\nconst MPI_CHAR                  = reinterpret(Cint, 0x4c000101)\nconst MPI_SIGNED_CHAR           = reinterpret(Cint, 0x4c000118)\nconst MPI_UNSIGNED_CHAR         = reinterpret(Cint, 0x4c000102)\nconst MPI_WCHAR                 = reinterpret(Cint, 0x4c00020e)\nconst MPI_BYTE                  = reinterpret(Cint, 0x4c00010d)\nconst MPI_SHORT                 = reinterpret(Cint, 0x4c000203)\nconst MPI_UNSIGNED_SHORT        = reinterpret(Cint, 0x4c000204)\nconst MPI_INT                   = reinterpret(Cint, 0x4c000405)\nconst MPI_UNSIGNED              = reinterpret(Cint, 0x4c000406)", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13742, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  10.44.29.235:62156 <-> 10.9.8.7:53         2        322     2        172     4         494      17.132351000  0.1149\r\n  10.44.29.235:60775 <-> 10.9.8.7:53         2        322     2        172     4         494      17.132568000  0.1147\r\n  10.44.29.235:65396 <-> 10.9.8.7:53         2        334     2        184     4         518      17.132595000  0.1145\r\n  10.44.29.235:55270 <-> 10.9.8.7:53         2        302     2        174     4         476      17.361523000  0.1157\r\n  10.44.29.235:54057 <-> 10.9.8.7:53         2        248     2        152     4         400      19.988011000  0.1145\r\n  10.44.29.235:50677 <-> 10.9.8.7:53         2        330     2        172     4         502      20.073463000  0.1151\r\n  10.44.29.235:58542 <-> 10.9.8.7:53         2        296     2        172     4         468      21.946657000  0.1159\r\n  10.44.29.235:61946 <-> 10.9.8.7:53         2        252     2        156     4         408      32.411016000  0.1152\r\n  10.44.29.235:49867 <-> 10.9.8.7:53         2        296     2        172     4         468      34.105693000  0.1145\r\n  10.44.29.235:58163 <-> 10.9.8.7:53         2        290     2        162     4         452      36.710.30.00  0.1149\r\n  10.44.29.235:56543 <-> 10.9.8.7:53         2        188     2        156     4         344      36.710424000  0.1146\r\n  10.44.29.235:56431 <-> 10.9.8.7:53         2        264     2        170     4         434      36.710533000  0.1153\r\n  10.44.29.235:57117 <-> 10.9.8.7:53         2        268     2        170     4         438      36.776824000  0.1143\r\n  10.44.29.235:55521 <-> 10.9.8.7:53         2        272     2        172     4         444      36.791524000  0.1155\r\n  10.44.29.235:56220 <-> 10.9.8.7:53         2        272     2        156     4         428      37.481175000  0.1142\r\n  10.44.29.235:62697 <-> 10.9.8.7:53         2        298     2        168     4         466      39.112048000  0.1145\r\n  10.44.29.235:54056 <-> 10.9.8.7:53         2        296     2        166     4         462      40.112885000  0.1145\r\n  10.44.29.235:49993 <-> 10.9.8.7:53         2        238     2        146     4         384      70.093951000  0.1152\r\n  10.44.29.235:54105 <-> 10.9.8.7:53         2        388     2        174     4         562      72.944037000  0.1158\r\n  10.44.29.235:50183 <-> 10.9.8.7:53         1        165     2        172     3         337      19.072812000  0.1474\r\n  10.44.29.235:137   <-> 192.168.146.143:137 0        0       3        276     3         276      58.453985000  3.0010\r\n\r\n\r\n\r\n  Here we run the function by referencing a packet capture and specifying \"-FilterSet PrivateIPOnly\".  The output consists of UDP Conversations found in the capture where only Private IP addresses (RFC1918) are part of the conversation.  This Filter Set excludes Multicast addresses and Public IP addresses.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_Multicast = Get-tsharkConversUDP -Pcap .\\myTest.pcap -FilterSet Multicast\r\n\r\n  UDP Conversations containing Multicast Addresses\r\n\r\n  Filter:(ip.src==224.0.0.0/4 || ip.dst==224.0.0.0/4)\r\n\r\n\r\n  PS C:\\> $Convers_Multicast | ft *\r\n\r\n  IP1                Dir IP2                  <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                  -------- ------- -------- ------- --------- -------- ------------- --------\r\n  10.44.29.220:5353  <-> 224.0.0.251:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n  10.44.41.184:1900  <-> 239.255.255.250:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n  10.44.41.203:1900  <-> 239.255.255.250:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n  10.44.29.235:54532 <-> 239.255.255.250:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n  10.44.46.222:1900  <-> 239.255.255.250:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n  10.44.46.228:1900  <-> 239.255.255.250:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n  10.44.46.250:1900  <-> 239.255.255.250:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n  10.44.46.218:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n  10.44.46.251:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n  10.44.46.223:1900  <-> 239.255.255.250:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n  10.44.46.221:1900  <-> 239.255.255.250:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n  10.44.29.235:54160 <-> 239.255.255.250:1900 0        0       4        860     4         860      6.654986000   3.0028\r", "func_src_after": "  <IP-Address>:62156 <-> <IP-Address>:53         2        322     2        172     4         494      17.132351000  0.1149\r\n  <IP-Address>:60775 <-> <IP-Address>:53         2        322     2        172     4         494      17.132568000  0.1147\r\n  <IP-Address>:65396 <-> <IP-Address>:53         2        334     2        184     4         518      17.132595000  0.1145\r\n  <IP-Address>:55270 <-> <IP-Address>:53         2        302     2        174     4         476      17.361523000  0.1157\r\n  <IP-Address>:54057 <-> <IP-Address>:53         2        248     2        152     4         400      19.988011000  0.1145\r\n  <IP-Address>:50677 <-> <IP-Address>:53         2        330     2        172     4         502      20.073463000  0.1151\r\n  <IP-Address>:58542 <-> <IP-Address>:53         2        296     2        172     4         468      21.946657000  0.1159\r\n  <IP-Address>:61946 <-> <IP-Address>:53         2        252     2        156     4         408      32.411016000  0.1152\r\n  <IP-Address>:49867 <-> <IP-Address>:53         2        296     2        172     4         468      34.105693000  0.1145\r\n  <IP-Address>:58163 <-> <IP-Address>:53         2        290     2        162     4         452      36.710.30.00  0.1149\r\n  <IP-Address>:56543 <-> <IP-Address>:53         2        188     2        156     4         344      36.710424000  0.1146\r\n  <IP-Address>:56431 <-> <IP-Address>:53         2        264     2        170     4         434      36.710533000  0.1153\r\n  <IP-Address>:57117 <-> <IP-Address>:53         2        268     2        170     4         438      36.776824000  0.1143\r\n  <IP-Address>:55521 <-> <IP-Address>:53         2        272     2        172     4         444      36.791524000  0.1155\r\n  <IP-Address>:56220 <-> <IP-Address>:53         2        272     2        156     4         428      37.481175000  0.1142\r\n  <IP-Address>:62697 <-> <IP-Address>:53         2        298     2        168     4         466      39.112048000  0.1145\r\n  <IP-Address>:54056 <-> <IP-Address>:53         2        296     2        166     4         462      40.112885000  0.1145\r\n  <IP-Address>:49993 <-> <IP-Address>:53         2        238     2        146     4         384      70.093951000  0.1152\r\n  <IP-Address>:54105 <-> <IP-Address>:53         2        388     2        174     4         562      72.944037000  0.1158\r\n  <IP-Address>:50183 <-> <IP-Address>:53         1        165     2        172     3         337      19.072812000  0.1474\r\n  <IP-Address>:137   <-> <IP-Address>:137 0        0       3        276     3         276      58.453985000  3.0010\r\n\r\n\r\n\r\n  Here we run the function by referencing a packet capture and specifying \"-FilterSet PrivateIPOnly\".  The output consists of UDP Conversations found in the capture where only Private IP addresses (RFC1918) are part of the conversation.  This Filter Set excludes Multicast addresses and Public IP addresses.\r\n\r\n.EXAMPLE\r\n  PS C:\\> $Convers_Multicast = Get-tsharkConversUDP -Pcap .\\myTest.pcap -FilterSet Multicast\r\n\r\n  UDP Conversations containing Multicast Addresses\r\n\r\n  Filter:(ip.src==<IP-Address>/4 || ip.dst==<IP-Address>/4)\r\n\r\n\r\n  PS C:\\> $Convers_Multicast | ft *\r\n\r\n  IP1                Dir IP2                  <-Frames <-Bytes Frames-> Bytes-> AllFrames AllBytes RelativeStart Duration\r\n  ---                --- ---                  -------- ------- -------- ------- --------- -------- ------------- --------\r\n  <IP-Address>:5353  <-> <IP-Address>:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n  <IP-Address>:54532 <-> <IP-Address>:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n  <IP-Address>:54160 <-> <IP-Address>:1900 0        0       4        860     4         860      6.654986000   3.0028\r", "line_changes": {"deleted": [{"line_no": 1, "char_start": 0, "char_end": 120, "line": "  10.44.29.235:62156 <-> 10.9.8.7:53         2        322     2        172     4         494      17.132351000  0.1149\r\n"}, {"line_no": 3, "char_start": 124, "char_end": 244, "line": "  10.44.29.235:60775 <-> 10.9.8.7:53         2        322     2        172     4         494      17.132568000  0.1147\r\n"}, {"line_no": 5, "char_start": 248, "char_end": 368, "line": "  10.44.29.235:65396 <-> 10.9.8.7:53         2        334     2        184     4         518      17.132595000  0.1145\r\n"}, {"line_no": 7, "char_start": 372, "char_end": 492, "line": "  10.44.29.235:55270 <-> 10.9.8.7:53         2        302     2        174     4         476      17.361523000  0.1157\r\n"}, {"line_no": 9, "char_start": 496, "char_end": 616, "line": "  10.44.29.235:54057 <-> 10.9.8.7:53         2        248     2        152     4         400      19.988011000  0.1145\r\n"}, {"line_no": 11, "char_start": 620, "char_end": 740, "line": "  10.44.29.235:50677 <-> 10.9.8.7:53         2        330     2        172     4         502      20.073463000  0.1151\r\n"}, {"line_no": 13, "char_start": 744, "char_end": 864, "line": "  10.44.29.235:58542 <-> 10.9.8.7:53         2        296     2        172     4         468      21.946657000  0.1159\r\n"}, {"line_no": 15, "char_start": 868, "char_end": 988, "line": "  10.44.29.235:61946 <-> 10.9.8.7:53         2        252     2        156     4         408      32.411016000  0.1152\r\n"}, {"line_no": 17, "char_start": 992, "char_end": 1112, "line": "  10.44.29.235:49867 <-> 10.9.8.7:53         2        296     2        172     4         468      34.105693000  0.1145\r\n"}, {"line_no": 19, "char_start": 1116, "char_end": 1236, "line": "  10.44.29.235:58163 <-> 10.9.8.7:53         2        290     2        162     4         452      36.710.30.00  0.1149\r\n"}, {"line_no": 21, "char_start": 1240, "char_end": 1360, "line": "  10.44.29.235:56543 <-> 10.9.8.7:53         2        188     2        156     4         344      36.710424000  0.1146\r\n"}, {"line_no": 23, "char_start": 1364, "char_end": 1484, "line": "  10.44.29.235:56431 <-> 10.9.8.7:53         2        264     2        170     4         434      36.710533000  0.1153\r\n"}, {"line_no": 25, "char_start": 1488, "char_end": 1608, "line": "  10.44.29.235:57117 <-> 10.9.8.7:53         2        268     2        170     4         438      36.776824000  0.1143\r\n"}, {"line_no": 27, "char_start": 1612, "char_end": 1732, "line": "  10.44.29.235:55521 <-> 10.9.8.7:53         2        272     2        172     4         444      36.791524000  0.1155\r\n"}, {"line_no": 29, "char_start": 1736, "char_end": 1856, "line": "  10.44.29.235:56220 <-> 10.9.8.7:53         2        272     2        156     4         428      37.481175000  0.1142\r\n"}, {"line_no": 31, "char_start": 1860, "char_end": 1980, "line": "  10.44.29.235:62697 <-> 10.9.8.7:53         2        298     2        168     4         466      39.112048000  0.1145\r\n"}, {"line_no": 33, "char_start": 1984, "char_end": 2104, "line": "  10.44.29.235:54056 <-> 10.9.8.7:53         2        296     2        166     4         462      40.112885000  0.1145\r\n"}, {"line_no": 35, "char_start": 2108, "char_end": 2228, "line": "  10.44.29.235:49993 <-> 10.9.8.7:53         2        238     2        146     4         384      70.093951000  0.1152\r\n"}, {"line_no": 37, "char_start": 2232, "char_end": 2352, "line": "  10.44.29.235:54105 <-> 10.9.8.7:53         2        388     2        174     4         562      72.944037000  0.1158\r\n"}, {"line_no": 39, "char_start": 2356, "char_end": 2476, "line": "  10.44.29.235:50183 <-> 10.9.8.7:53         1        165     2        172     3         337      19.072812000  0.1474\r\n"}, {"line_no": 41, "char_start": 2480, "char_end": 2600, "line": "  10.44.29.235:137   <-> 192.168.146.143:137 0        0       3        276     3         276      58.453985000  3.0010\r\n"}, {"line_no": 53, "char_start": 3074, "char_end": 3129, "line": "  Filter:(ip.src==224.0.0.0/4 || ip.dst==224.0.0.0/4)\r\n"}, {"line_no": 61, "char_start": 3424, "char_end": 3546, "line": "  10.44.29.220:5353  <-> 224.0.0.251:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"line_no": 63, "char_start": 3547, "char_end": 3669, "line": "  10.44.41.184:1900  <-> 239.255.255.250:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"line_no": 65, "char_start": 3666, "char_end": 3788, "line": "  10.44.41.203:1900  <-> 239.255.255.250:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"line_no": 67, "char_start": 3785, "char_end": 3907, "line": "  10.44.29.235:54532 <-> 239.255.255.250:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"line_no": 69, "char_start": 3904, "char_end": 4026, "line": "  10.44.46.222:1900  <-> 239.255.255.250:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"line_no": 71, "char_start": 4023, "char_end": 4145, "line": "  10.44.46.228:1900  <-> 239.255.255.250:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"line_no": 73, "char_start": 4142, "char_end": 4264, "line": "  10.44.46.250:1900  <-> 239.255.255.250:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"line_no": 75, "char_start": 4261, "char_end": 4383, "line": "  10.44.46.218:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"line_no": 77, "char_start": 4380, "char_end": 4502, "line": "  10.44.46.251:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"line_no": 79, "char_start": 4499, "char_end": 4621, "line": "  10.44.46.223:1900  <-> 239.255.255.250:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"line_no": 81, "char_start": 4618, "char_end": 4740, "line": "  10.44.46.221:1900  <-> 239.255.255.250:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"line_no": 83, "char_start": 4737, "char_end": 4857, "line": "  10.44.29.235:54160 <-> 239.255.255.250:1900 0        0       4        860     4         860      6.654986000   3.0028\r"}], "added": [{"line_no": 2, "char_start": 0, "char_end": 124, "line": "  <IP-Address>:62156 <-> <IP-Address>:53         2        322     2        172     4         494      17.132351000  0.1149\r\n"}, {"line_no": 4, "char_start": 124, "char_end": 248, "line": "  <IP-Address>:60775 <-> <IP-Address>:53         2        322     2        172     4         494      17.132568000  0.1147\r\n"}, {"line_no": 6, "char_start": 248, "char_end": 372, "line": "  <IP-Address>:65396 <-> <IP-Address>:53         2        334     2        184     4         518      17.132595000  0.1145\r\n"}, {"line_no": 8, "char_start": 372, "char_end": 496, "line": "  <IP-Address>:55270 <-> <IP-Address>:53         2        302     2        174     4         476      17.361523000  0.1157\r\n"}, {"line_no": 10, "char_start": 496, "char_end": 620, "line": "  <IP-Address>:54057 <-> <IP-Address>:53         2        248     2        152     4         400      19.988011000  0.1145\r\n"}, {"line_no": 12, "char_start": 620, "char_end": 744, "line": "  <IP-Address>:50677 <-> <IP-Address>:53         2        330     2        172     4         502      20.073463000  0.1151\r\n"}, {"line_no": 14, "char_start": 744, "char_end": 868, "line": "  <IP-Address>:58542 <-> <IP-Address>:53         2        296     2        172     4         468      21.946657000  0.1159\r\n"}, {"line_no": 16, "char_start": 868, "char_end": 992, "line": "  <IP-Address>:61946 <-> <IP-Address>:53         2        252     2        156     4         408      32.411016000  0.1152\r\n"}, {"line_no": 18, "char_start": 992, "char_end": 1116, "line": "  <IP-Address>:49867 <-> <IP-Address>:53         2        296     2        172     4         468      34.105693000  0.1145\r\n"}, {"line_no": 20, "char_start": 1116, "char_end": 1240, "line": "  <IP-Address>:58163 <-> <IP-Address>:53         2        290     2        162     4         452      36.710.30.00  0.1149\r\n"}, {"line_no": 22, "char_start": 1240, "char_end": 1364, "line": "  <IP-Address>:56543 <-> <IP-Address>:53         2        188     2        156     4         344      36.710424000  0.1146\r\n"}, {"line_no": 24, "char_start": 1364, "char_end": 1488, "line": "  <IP-Address>:56431 <-> <IP-Address>:53         2        264     2        170     4         434      36.710533000  0.1153\r\n"}, {"line_no": 26, "char_start": 1488, "char_end": 1612, "line": "  <IP-Address>:57117 <-> <IP-Address>:53         2        268     2        170     4         438      36.776824000  0.1143\r\n"}, {"line_no": 28, "char_start": 1612, "char_end": 1736, "line": "  <IP-Address>:55521 <-> <IP-Address>:53         2        272     2        172     4         444      36.791524000  0.1155\r\n"}, {"line_no": 30, "char_start": 1736, "char_end": 1860, "line": "  <IP-Address>:56220 <-> <IP-Address>:53         2        272     2        156     4         428      37.481175000  0.1142\r\n"}, {"line_no": 32, "char_start": 1860, "char_end": 1984, "line": "  <IP-Address>:62697 <-> <IP-Address>:53         2        298     2        168     4         466      39.112048000  0.1145\r\n"}, {"line_no": 34, "char_start": 1984, "char_end": 2108, "line": "  <IP-Address>:54056 <-> <IP-Address>:53         2        296     2        166     4         462      40.112885000  0.1145\r\n"}, {"line_no": 36, "char_start": 2108, "char_end": 2232, "line": "  <IP-Address>:49993 <-> <IP-Address>:53         2        238     2        146     4         384      70.093951000  0.1152\r\n"}, {"line_no": 38, "char_start": 2232, "char_end": 2356, "line": "  <IP-Address>:54105 <-> <IP-Address>:53         2        388     2        174     4         562      72.944037000  0.1158\r\n"}, {"line_no": 40, "char_start": 2356, "char_end": 2480, "line": "  <IP-Address>:50183 <-> <IP-Address>:53         1        165     2        172     3         337      19.072812000  0.1474\r\n"}, {"line_no": 42, "char_start": 2480, "char_end": 2597, "line": "  <IP-Address>:137   <-> <IP-Address>:137 0        0       3        276     3         276      58.453985000  3.0010\r\n"}, {"line_no": 54, "char_start": 3074, "char_end": 3135, "line": "  Filter:(ip.src==<IP-Address>/4 || ip.dst==<IP-Address>/4)\r\n"}, {"line_no": 62, "char_start": 3424, "char_end": 3547, "line": "  <IP-Address>:5353  <-> <IP-Address>:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"line_no": 64, "char_start": 3547, "char_end": 3666, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"line_no": 66, "char_start": 3666, "char_end": 3785, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"line_no": 68, "char_start": 3785, "char_end": 3904, "line": "  <IP-Address>:54532 <-> <IP-Address>:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"line_no": 70, "char_start": 3904, "char_end": 4023, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"line_no": 72, "char_start": 4023, "char_end": 4142, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"line_no": 74, "char_start": 4142, "char_end": 4261, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"line_no": 76, "char_start": 4261, "char_end": 4380, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"line_no": 78, "char_start": 4380, "char_end": 4499, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"line_no": 80, "char_start": 4499, "char_end": 4618, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"line_no": 82, "char_start": 4618, "char_end": 4737, "line": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"line_no": 84, "char_start": 4737, "char_end": 4854, "line": "  <IP-Address>:54160 <-> <IP-Address>:1900 0        0       4        860     4         860      6.654986000   3.0028\r"}]}, "char_changes": {"deleted": [{"char_start": 0, "char_end": 120, "chars": "  10.44.29.235:62156 <-> 10.9.8.7:53         2        322     2        172     4         494      17.132351000  0.1149\r\n"}, {"char_start": 124, "char_end": 244, "chars": "  10.44.29.235:60775 <-> 10.9.8.7:53         2        322     2        172     4         494      17.132568000  0.1147\r\n"}, {"char_start": 248, "char_end": 368, "chars": "  10.44.29.235:65396 <-> 10.9.8.7:53         2        334     2        184     4         518      17.132595000  0.1145\r\n"}, {"char_start": 372, "char_end": 492, "chars": "  10.44.29.235:55270 <-> 10.9.8.7:53         2        302     2        174     4         476      17.361523000  0.1157\r\n"}, {"char_start": 496, "char_end": 616, "chars": "  10.44.29.235:54057 <-> 10.9.8.7:53         2        248     2        152     4         400      19.988011000  0.1145\r\n"}, {"char_start": 620, "char_end": 740, "chars": "  10.44.29.235:50677 <-> 10.9.8.7:53         2        330     2        172     4         502      20.073463000  0.1151\r\n"}, {"char_start": 744, "char_end": 864, "chars": "  10.44.29.235:58542 <-> 10.9.8.7:53         2        296     2        172     4         468      21.946657000  0.1159\r\n"}, {"char_start": 868, "char_end": 988, "chars": "  10.44.29.235:61946 <-> 10.9.8.7:53         2        252     2        156     4         408      32.411016000  0.1152\r\n"}, {"char_start": 992, "char_end": 1112, "chars": "  10.44.29.235:49867 <-> 10.9.8.7:53         2        296     2        172     4         468      34.105693000  0.1145\r\n"}, {"char_start": 1116, "char_end": 1236, "chars": "  10.44.29.235:58163 <-> 10.9.8.7:53         2        290     2        162     4         452      36.710.30.00  0.1149\r\n"}, {"char_start": 1240, "char_end": 1360, "chars": "  10.44.29.235:56543 <-> 10.9.8.7:53         2        188     2        156     4         344      36.710424000  0.1146\r\n"}, {"char_start": 1364, "char_end": 1484, "chars": "  10.44.29.235:56431 <-> 10.9.8.7:53         2        264     2        170     4         434      36.710533000  0.1153\r\n"}, {"char_start": 1488, "char_end": 1608, "chars": "  10.44.29.235:57117 <-> 10.9.8.7:53         2        268     2        170     4         438      36.776824000  0.1143\r\n"}, {"char_start": 1612, "char_end": 1732, "chars": "  10.44.29.235:55521 <-> 10.9.8.7:53         2        272     2        172     4         444      36.791524000  0.1155\r\n"}, {"char_start": 1736, "char_end": 1856, "chars": "  10.44.29.235:56220 <-> 10.9.8.7:53         2        272     2        156     4         428      37.481175000  0.1142\r\n"}, {"char_start": 1860, "char_end": 1980, "chars": "  10.44.29.235:62697 <-> 10.9.8.7:53         2        298     2        168     4         466      39.112048000  0.1145\r\n"}, {"char_start": 1984, "char_end": 2104, "chars": "  10.44.29.235:54056 <-> 10.9.8.7:53         2        296     2        166     4         462      40.112885000  0.1145\r\n"}, {"char_start": 2108, "char_end": 2228, "chars": "  10.44.29.235:49993 <-> 10.9.8.7:53         2        238     2        146     4         384      70.093951000  0.1152\r\n"}, {"char_start": 2232, "char_end": 2352, "chars": "  10.44.29.235:54105 <-> 10.9.8.7:53         2        388     2        174     4         562      72.944037000  0.1158\r\n"}, {"char_start": 2356, "char_end": 2476, "chars": "  10.44.29.235:50183 <-> 10.9.8.7:53         1        165     2        172     3         337      19.072812000  0.1474\r\n"}, {"char_start": 2480, "char_end": 2600, "chars": "  10.44.29.235:137   <-> 192.168.146.143:137 0        0       3        276     3         276      58.453985000  3.0010\r\n"}, {"char_start": 3074, "char_end": 3129, "chars": "  Filter:(ip.src==224.0.0.0/4 || ip.dst==224.0.0.0/4)\r\n"}, {"char_start": 3424, "char_end": 3546, "chars": "  10.44.29.220:5353  <-> 224.0.0.251:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"char_start": 3547, "char_end": 3669, "chars": "  10.44.41.184:1900  <-> 239.255.255.250:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"char_start": 3666, "char_end": 3788, "chars": "  10.44.41.203:1900  <-> 239.255.255.250:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"char_start": 3785, "char_end": 3907, "chars": "  10.44.29.235:54532 <-> 239.255.255.250:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"char_start": 3904, "char_end": 4026, "chars": "  10.44.46.222:1900  <-> 239.255.255.250:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"char_start": 4023, "char_end": 4145, "chars": "  10.44.46.228:1900  <-> 239.255.255.250:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"char_start": 4142, "char_end": 4264, "chars": "  10.44.46.250:1900  <-> 239.255.255.250:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"char_start": 4261, "char_end": 4383, "chars": "  10.44.46.218:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"char_start": 4380, "char_end": 4502, "chars": "  10.44.46.251:1900  <-> 239.255.255.250:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"char_start": 4499, "char_end": 4621, "chars": "  10.44.46.223:1900  <-> 239.255.255.250:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"char_start": 4618, "char_end": 4740, "chars": "  10.44.46.221:1900  <-> 239.255.255.250:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"char_start": 4737, "char_end": 4857, "chars": "  10.44.29.235:54160 <-> 239.255.255.250:1900 0        0       4        860     4         860      6.654986000   3.0028\r"}], "added": [{"char_start": 0, "char_end": 124, "chars": "  <IP-Address>:62156 <-> <IP-Address>:53         2        322     2        172     4         494      17.132351000  0.1149\r\n"}, {"char_start": 124, "char_end": 248, "chars": "  <IP-Address>:60775 <-> <IP-Address>:53         2        322     2        172     4         494      17.132568000  0.1147\r\n"}, {"char_start": 248, "char_end": 372, "chars": "  <IP-Address>:65396 <-> <IP-Address>:53         2        334     2        184     4         518      17.132595000  0.1145\r\n"}, {"char_start": 372, "char_end": 496, "chars": "  <IP-Address>:55270 <-> <IP-Address>:53         2        302     2        174     4         476      17.361523000  0.1157\r\n"}, {"char_start": 496, "char_end": 620, "chars": "  <IP-Address>:54057 <-> <IP-Address>:53         2        248     2        152     4         400      19.988011000  0.1145\r\n"}, {"char_start": 620, "char_end": 744, "chars": "  <IP-Address>:50677 <-> <IP-Address>:53         2        330     2        172     4         502      20.073463000  0.1151\r\n"}, {"char_start": 744, "char_end": 868, "chars": "  <IP-Address>:58542 <-> <IP-Address>:53         2        296     2        172     4         468      21.946657000  0.1159\r\n"}, {"char_start": 868, "char_end": 992, "chars": "  <IP-Address>:61946 <-> <IP-Address>:53         2        252     2        156     4         408      32.411016000  0.1152\r\n"}, {"char_start": 992, "char_end": 1116, "chars": "  <IP-Address>:49867 <-> <IP-Address>:53         2        296     2        172     4         468      34.105693000  0.1145\r\n"}, {"char_start": 1116, "char_end": 1240, "chars": "  <IP-Address>:58163 <-> <IP-Address>:53         2        290     2        162     4         452      36.710.30.00  0.1149\r\n"}, {"char_start": 1240, "char_end": 1364, "chars": "  <IP-Address>:56543 <-> <IP-Address>:53         2        188     2        156     4         344      36.710424000  0.1146\r\n"}, {"char_start": 1364, "char_end": 1488, "chars": "  <IP-Address>:56431 <-> <IP-Address>:53         2        264     2        170     4         434      36.710533000  0.1153\r\n"}, {"char_start": 1488, "char_end": 1612, "chars": "  <IP-Address>:57117 <-> <IP-Address>:53         2        268     2        170     4         438      36.776824000  0.1143\r\n"}, {"char_start": 1612, "char_end": 1736, "chars": "  <IP-Address>:55521 <-> <IP-Address>:53         2        272     2        172     4         444      36.791524000  0.1155\r\n"}, {"char_start": 1736, "char_end": 1860, "chars": "  <IP-Address>:56220 <-> <IP-Address>:53         2        272     2        156     4         428      37.481175000  0.1142\r\n"}, {"char_start": 1860, "char_end": 1984, "chars": "  <IP-Address>:62697 <-> <IP-Address>:53         2        298     2        168     4         466      39.112048000  0.1145\r\n"}, {"char_start": 1984, "char_end": 2108, "chars": "  <IP-Address>:54056 <-> <IP-Address>:53         2        296     2        166     4         462      40.112885000  0.1145\r\n"}, {"char_start": 2108, "char_end": 2232, "chars": "  <IP-Address>:49993 <-> <IP-Address>:53         2        238     2        146     4         384      70.093951000  0.1152\r\n"}, {"char_start": 2232, "char_end": 2356, "chars": "  <IP-Address>:54105 <-> <IP-Address>:53         2        388     2        174     4         562      72.944037000  0.1158\r\n"}, {"char_start": 2356, "char_end": 2480, "chars": "  <IP-Address>:50183 <-> <IP-Address>:53         1        165     2        172     3         337      19.072812000  0.1474\r\n"}, {"char_start": 2480, "char_end": 2597, "chars": "  <IP-Address>:137   <-> <IP-Address>:137 0        0       3        276     3         276      58.453985000  3.0010\r\n"}, {"char_start": 3074, "char_end": 3135, "chars": "  Filter:(ip.src==<IP-Address>/4 || ip.dst==<IP-Address>/4)\r\n"}, {"char_start": 3424, "char_end": 3547, "chars": "  <IP-Address>:5353  <-> <IP-Address>:5353     0        0       35       7967    35        7967     11.566578000  82.2649\r\n"}, {"char_start": 3547, "char_end": 3666, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       14       4676    14        4676     2.045403000   90.3401\r\n"}, {"char_start": 3666, "char_end": 3785, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       12       4008    12        4008     6.081920000   75.2912\r\n"}, {"char_start": 3785, "char_end": 3904, "chars": "  <IP-Address>:54532 <-> <IP-Address>:1900 0        0       10       1790    10        1790     1.030733000   75.1947\r\n"}, {"char_start": 3904, "char_end": 4023, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2429    7         2429     0.000000000   90.1546\r\n"}, {"char_start": 4023, "char_end": 4142, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2415    7         2415     1.455737000   90.1547\r\n"}, {"char_start": 4142, "char_end": 4261, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2422    7         2422     2.115632000   90.1619\r\n"}, {"char_start": 4261, "char_end": 4380, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.532253000   90.1908\r\n"}, {"char_start": 4380, "char_end": 4499, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       7        2443    7         2443     3.801604000   90.1622\r\n"}, {"char_start": 4499, "char_end": 4618, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2064    6         2064     9.641149000   75.1229\r\n"}, {"char_start": 4618, "char_end": 4737, "chars": "  <IP-Address>:1900  <-> <IP-Address>:1900 0        0       6        2082    6         2082     11.482335000  75.1236\r\n"}, {"char_start": 4737, "char_end": 4854, "chars": "  <IP-Address>:54160 <-> <IP-Address>:1900 0        0       4        860     4         860      6.654986000   3.0028\r"}]}}
{"func_name": 13755, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    {\r\n        Name            = \"$($name)_vm\"\r\n        SwitchName      = 'Test-Switch'\r\n        VhdPath         = Join-path (Split-Path $vhdPath) \"$name.vhd\"\r\n        ProcessorCount  = 2\r\n        MaximumMemory   = 1GB\r\n        MinimumMemory   = 512MB\r\n        RestartIfNeeded = $true\r\n        DependsOn       = '[xVHD]NewVHD1', '[xVMSwitch]switch', '[xVhdFile]CopyUnattendxml'\r\n        State           = 'Running'\r\n    }\r\n}\r\n", "func_src_after": "    {\r\n        Name            = \"$($name)_vm\"\r\n        SwitchName      = 'Test-Switch'\r\n        VhdPath         = Join-path (Split-Path $vhdPath) \"$name.vhd\"\r\n        ProcessorCount  = 2\r\n        MaximumMemory   = 1GB\r\n        MinimumMemory   = 512MB\r\n        RestartIfNeeded = $true\r\n        DependsOn       = '[xVHD]NewVHD1', '[xVMSwitch]switch', '[xVhdFile]CopyUnattendxml'\r\n        State           = 'Running'\r\n    }\r\n}\r\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13760, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "            ValueType = 'String'\n            ValueData = '%systemroot%\\system32\\logfiles\\firewall\\privatefw.log'\n        }\n\n        # 9.2.8 (L1) Ensure 'Windows Firewall: Private: Logging: Size limit (KB)' is set to '16,384 KB or greater'\n        Registry 'LogFileSize1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile\\Logging'\n            ValueName = 'LogFileSize'\n            ValueType = 'DWord'\n            ValueData = '16384'\n        }\n\n        # 9.2.9 (L1) Ensure 'Windows Firewall: Private: Logging: Log dropped packets' is set to 'Yes'\n        Registry 'LogDroppedPackets1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile\\Logging'\n            ValueName = 'LogDroppedPackets'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.10 (L1) Ensure 'Windows Firewall: Private: Logging: Log successful connections' is set to 'Yes'\n        Registry 'LogSuccesssfulConnections1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile\\Logging'\n            ValueName = 'LogSuccesssfulConnections'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.4 (L1) Ensure 'Windows Firewall: Private: Settings: Display a notification' is set to 'No' \n        Registry 'DisableNotifications1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile'\n            ValueName = 'DisableNotifications'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.5 (L1) Ensure 'Windows Firewall: Private: Settings: Apply local firewall rules' is set to 'Yes (default)'\n        Registry 'AllowLocalPolicyMerge1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile'\n            ValueName = 'AllowLocalPolicyMerge'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.6 (L1) Ensure 'Windows Firewall: Private: Settings: Apply local connection security rules' is set to 'Yes (default)'", "func_src_after": "            ValueType = 'String'\n            ValueData = '%systemroot%\\system32\\logfiles\\firewall\\privatefw.log'\n        }\n\n        # 9.2.8 (L1) Ensure 'Windows Firewall: Private: Logging: Size limit (KB)' is set to '16,384 KB or greater'\n        Registry 'LogFileSize1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile\\Logging'\n            ValueName = 'LogFileSize'\n            ValueType = 'DWord'\n            ValueData = '16384'\n        }\n\n        # 9.2.9 (L1) Ensure 'Windows Firewall: Private: Logging: Log dropped packets' is set to 'Yes'\n        Registry 'LogDroppedPackets1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile\\Logging'\n            ValueName = 'LogDroppedPackets'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.10 (L1) Ensure 'Windows Firewall: Private: Logging: Log successful connections' is set to 'Yes'\n        Registry 'LogSuccesssfulConnections1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile\\Logging'\n            ValueName = 'LogSuccesssfulConnections'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.4 (L1) Ensure 'Windows Firewall: Private: Settings: Display a notification' is set to 'No' \n        Registry 'DisableNotifications1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile'\n            ValueName = 'DisableNotifications'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.5 (L1) Ensure 'Windows Firewall: Private: Settings: Apply local firewall rules' is set to 'Yes (default)'\n        Registry 'AllowLocalPolicyMerge1' {\n            Ensure    = 'Present'\n            Key       = 'HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\WindowsFirewall\\PrivateProfile'\n            ValueName = 'AllowLocalPolicyMerge'\n            ValueType = 'DWord'\n            ValueData = '1'\n        }\n\n        # 9.2.6 (L1) Ensure 'Windows Firewall: Private: Settings: Apply local connection security rules' is set to 'Yes (default)'", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 13906, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "Tout le monde peut aujourd'hui profiter du parc Lamoureux.  \nIl laisse aussi dans le deuil Claire Couture de Hull.  \nL'honorable Lucien Lamoureux etait un grand parlementaire. \nM. Preston Manning (chef de l'opposition, Ref.): \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nLe tres hon. Jean Chretien:\nMonsieur le President, c'est la verite. \nM. Preston Manning (chef de l'opposition, Ref.): \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nM. Preston Manning (chef de l'opposition, Ref.): \nMonsieur le President, voici les faits. \nLe premier ministre peut-il expliquer a ces gens pourquoi il continue de les voler?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nMonsieur le President, la question que nous debattons ici n'est pas tres compliquee. \nM. Monte Solberg (Medicine Hat, Ref.): \nNous attendons qu'ils le prouvent.  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nMonsieur le President, c'est exactement ce dont nous discutons. \nM. Monte Solberg (Medicine Hat, Ref.): \nMonsieur le President, il est temps que le premier ministre se reveille. \nLe dollar a subi une baisse importante aujourd'hui. \nL'economie accuse un ralentissement pour un quatrieme mois d'affilee. \nLe gouvernement est dans le coma depuis six mois.  \nPourquoi n'appliquent-ils pas leur propre conseil?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nNous avons reconnu qu'elle cree 85 p. 100 des emplois au Canada. \nAinsi, 85 p. 100 de ce nombre, c'est un million. \nM. Gilles Duceppe (Laurier-Sainte-Marie, BQ):\nLe tres hon. Jean Chretien (premier ministre, Lib.):\nIl y a bien des cas comme ceux-la.  \nM. Gilles Duceppe (Laurier-Sainte-Marie, BQ):\nC'est cela le message que le premier ministre envoie aux jeunes.  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nLe depute de Kamouraska-Riviere-du-Loup-Temiscouata-Les Basques a la parole.  \nM. Paul Crete (Kamouraska-Riviere-du-Loup-Temiscouata-Les Basques, BQ):\nQu'on aide les PME, qu'on aide les chomeurs, ou bien les deux?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nNous avons un debat, et nous aurons un budget.  \nM. Paul Crete (Kamouraska-Riviere-du-Loup-Temiscouata-Les Basques, BQ):\nLe tres hon. Jean Chretien (premier ministre, Lib.):\nMme Alexa McDonough (Halifax, NPD):\nMonsieur le President, ma question s'adresse au premier ministre.  \nL'implication du Bureau du premier ministre est evident dans le dossier de l'APEC. \nPelletier, Carle, Goldenberg, Donolo, la liste s'allonge. \nPourquoi ce choix antidemocratique?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nLors du Sommet de l'APEC, nous avons invite les gens a venir ici. \nParmi eux, il y avait le prix Nobel de la paix, Jose Ramos Horta. \nVoici ce que ce celebre personnage a dit, concernant l'arrivee de Suharto au Canada.  \nLe chef du Nouveau parti democratique a la parole.  ", "func_src_after": "Tout le monde peut aujourd'hui profiter du parc Lamoureux.  \nIl laisse aussi dans le deuil Claire Couture de Hull.  \nL'honorable Lucien Lamoureux etait un grand parlementaire. \nM. Preston Manning (chef de l'opposition, Ref.): \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nLe tres hon. Jean Chretien:\nMonsieur le President, c'est la verite. \nM. Preston Manning (chef de l'opposition, Ref.): \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nM. Preston Manning (chef de l'opposition, Ref.): \nMonsieur le President, voici les faits. \nLe premier ministre peut-il expliquer a ces gens pourquoi il continue de les voler?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nMonsieur le President, la question que nous debattons ici n'est pas tres compliquee. \nM. Monte Solberg (Medicine Hat, Ref.): \nNous attendons qu'ils le prouvent.  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nMonsieur le President, c'est exactement ce dont nous discutons. \nM. Monte Solberg (Medicine Hat, Ref.): \nMonsieur le President, il est temps que le premier ministre se reveille. \nLe dollar a subi une baisse importante aujourd'hui. \nL'economie accuse un ralentissement pour un quatrieme mois d'affilee. \nLe gouvernement est dans le coma depuis six mois.  \nPourquoi n'appliquent-ils pas leur propre conseil?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nNous avons reconnu qu'elle cree 85 p. 100 des emplois au Canada. \nAinsi, 85 p. 100 de ce nombre, c'est un million. \nM. Gilles Duceppe (Laurier-Sainte-Marie, BQ):\nLe tres hon. Jean Chretien (premier ministre, Lib.):\nIl y a bien des cas comme ceux-la.  \nM. Gilles Duceppe (Laurier-Sainte-Marie, BQ):\nC'est cela le message que le premier ministre envoie aux jeunes.  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nLe depute de Kamouraska-Riviere-du-Loup-Temiscouata-Les Basques a la parole.  \nM. Paul Crete (Kamouraska-Riviere-du-Loup-Temiscouata-Les Basques, BQ):\nQu'on aide les PME, qu'on aide les chomeurs, ou bien les deux?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nNous avons un debat, et nous aurons un budget.  \nM. Paul Crete (Kamouraska-Riviere-du-Loup-Temiscouata-Les Basques, BQ):\nLe tres hon. Jean Chretien (premier ministre, Lib.):\nMme Alexa McDonough (Halifax, NPD):\nMonsieur le President, ma question s'adresse au premier ministre.  \nL'implication du Bureau du premier ministre est evident dans le dossier de l'APEC. \nPelletier, Carle, Goldenberg, Donolo, la liste s'allonge. \nPourquoi ce choix antidemocratique?  \nLe tres hon. Jean Chretien (premier ministre, Lib.):\nLors du Sommet de l'APEC, nous avons invite les gens a venir ici. \nParmi eux, il y avait le prix Nobel de la paix, Jose Ramos Horta. \nVoici ce que ce celebre personnage a dit, concernant l'arrivee de Suharto au Canada.  \nLe chef du Nouveau parti democratique a la parole.  ", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14053, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "                    [\n                        0.6407546997070312,\n                        -577.3739013671875,\n                        297.0911865234375\n                    ],\n                    [\n                        498.2344970703125,\n                        -289.6058349609375,\n                        -296.3701477050781\n                    ]\n                ],\n                \"rules\": [\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"Lava Retreat\",\n            \"mass\": 10000,\n            \"position_x\": -6199.9990234375,\n            \"position_y\": -11300,\n            \"velocity_x\": 172.67417907714844,\n            \"velocity_y\": -94.74156188964844,\n            \"required_thrust_to_move\": 0,\n            \"starting_planet\": false,\n            \"respawn\": true,\n            \"start_destroyed\": true,", "func_src_after": "                    [\n                        0.6407546997070312,\n                        -577.3739013671875,\n                        297.0911865234375\n                    ],\n                    [\n                        498.2344970703125,\n                        -289.6058349609375,\n                        -296.3701477050781\n                    ]\n                ],\n                \"rules\": [\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    },\n                    {\n                        \"min\": 0,\n                        \"max\": 10\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"Lava Retreat\",\n            \"mass\": 10000,\n            \"position_x\": -6199.9990234375,\n            \"position_y\": -11300,\n            \"velocity_x\": 172.67417907714844,\n            \"velocity_y\": -94.74156188964844,\n            \"required_thrust_to_move\": 0,\n            \"starting_planet\": false,\n            \"respawn\": true,\n            \"start_destroyed\": true,", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14133, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "  (set! x 2)\n  x )\n2\n\n;;; Testing \n(let () \n  (define (fact n)\n    (if (= n 1) 1\n        (* n (fact (- n 1))) ) )\n  (fact 5) )\n   120\n(let ()\n  (define (fib n)\n    (if (<= n 2) 1\n        (+ (fib (- n 1)) (fib (- n 2))) ) )\n  (fib 6) )\n   8\n(let ()\n  (define (accumulate binary-op initial items)\n    (if (null? items)\n        initial\n        (letrec ((loop (lambda (value items)\n                         (if (null? items)\n                             value\n                             (loop (binary-op value (car items))\n                                   (cdr items) ) ) )))\n          (loop (car items) (cdr items)) ) ) )\n  (accumulate + 0 '(1 2 3 4)) )\n   10\n(let ()\n  (define (meta-fact f)\n    (lambda (n)\n      (if (= n 1) \n          1\n          (* n (f (- n 1))) ) ) )\n  (define (fix f)\n    (let ((d (lambda (x) (f (lambda (y) ((x x) y))))))\n      (d d) ) )\n  ((fix meta-fact) 5) )\n   120\n\n\n;;; A huge call/cc test (from scm4a2, 1991 Aubrey Jaffer)\n;;; This tests full conformance of call-with-current-continuation.  It\n;;; is a separate test because some schemes do not support call/cc\n;;; other than escape procedures.  I am indebted to\n;;; raja@copper.ucs.indiana.edu (Raja Sooriamurthi) for fixing this\n;;; code.  The function leaf-eq? compares the leaves of 2 arbitrary\n;;; trees constructed of conses.  \n(let ()", "func_src_after": "  (set! x 2)\n  x )\n2\n\n;;; Testing \n(let () \n  (define (fact n)\n    (if (= n 1) 1\n        (* n (fact (- n 1))) ) )\n  (fact 5) )\n   120\n(let ()\n  (define (fib n)\n    (if (<= n 2) 1\n        (+ (fib (- n 1)) (fib (- n 2))) ) )\n  (fib 6) )\n   8\n(let ()\n  (define (accumulate binary-op initial items)\n    (if (null? items)\n        initial\n        (letrec ((loop (lambda (value items)\n                         (if (null? items)\n                             value\n                             (loop (binary-op value (car items))\n                                   (cdr items) ) ) )))\n          (loop (car items) (cdr items)) ) ) )\n  (accumulate + 0 '(1 2 3 4)) )\n   10\n(let ()\n  (define (meta-fact f)\n    (lambda (n)\n      (if (= n 1) \n          1\n          (* n (f (- n 1))) ) ) )\n  (define (fix f)\n    (let ((d (lambda (x) (f (lambda (y) ((x x) y))))))\n      (d d) ) )\n  ((fix meta-fact) 5) )\n   120\n\n\n;;; A huge call/cc test (from scm4a2, 1991 Aubrey Jaffer)\n;;; This tests full conformance of call-with-current-continuation.  It\n;;; is a separate test because some schemes do not support call/cc\n;;; other than escape procedures.  I am indebted to\n;;; <EMAIL> (Raja Sooriamurthi) for fixing this\n;;; code.  The function leaf-eq? compares the leaves of 2 arbitrary\n;;; trees constructed of conses.  \n(let ()", "line_changes": {"deleted": [{"line_no": 47, "char_start": 1144, "char_end": 1212, "line": ";;; raja@copper.ucs.indiana.edu (Raja Sooriamurthi) for fixing this\n"}], "added": [{"line_no": 48, "char_start": 1144, "char_end": 1192, "line": ";;; <EMAIL> (Raja Sooriamurthi) for fixing this\n"}]}, "char_changes": {"deleted": [{"char_start": 1144, "char_end": 1212, "chars": ";;; raja@copper.ucs.indiana.edu (Raja Sooriamurthi) for fixing this\n"}], "added": [{"char_start": 1144, "char_end": 1192, "chars": ";;; <EMAIL> (Raja Sooriamurthi) for fixing this\n"}]}}
{"func_name": 14211, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*************************************************************************\n*\t\t\t\t\t\t\t\t\t *\n*\t YAP Prolog \t\t\t\t\t\t\t *\n*\t\t\t\t\t\t\t\t\t *\n*\tYap Prolog was developed at NCCUP - Universidade do Porto\t *\n*\t\t\t\t\t\t\t\t\t *\n* Copyright L.Damas, V.S.Costa and Universidade do Porto 1985-1997\t *\n*\t\t\t\t\t\t\t\t\t *\n**************************************************************************\n*\t\t\t\t\t\t\t\t\t *\n* File:\t\tprotect.yap\t\t\t\t\t\t *\n* Last rev:\t\t\t\t\t\t\t\t *\n* mods:\t\t\t\t\t\t\t\t\t *\n* comments:\tprotecting the system functions\t\t\t\t *\n*\t\t\t\t\t\t\t\t\t *\n*************************************************************************/\n\n:- system_module( '$_protect', [], ['$protect'/0]).\n/**\n * @file protect.yap\n * @addtogroup ProtectCore Freeze System Configuration\n * @ingroup YAPControl\n *\n * This protects current code from further changes\n *  and also makes it impossible for some predicates to be seen\n * in user-space.\n *\n * Algorithm:\n *  - fix system modules\n *  - fix system predicates\n *  - hide atoms with `$`\n */\n \n\nprolog:'$protect' :-\n    '$all_current_modules'(M),\n    ( sub_atom(M,0,1,_, '$') ; M= prolog; M= system ),\n    new_system_module( M ),    \n    fail.\n'$protect' :-\n    '$current_predicate'(Name,M,P,_),\n    '$is_system_module'(M),\n    functor(P,Name,Arity),\n    '$new_system_predicate'(Name,Arity,M),\n    sub_atom(Name,0,1,_, '$'),\n    functor(P,Name,Arity),\n%    hide_predicate'(M:P),\n    fail.\n'$protect' :-\n    current_atom(Name),", "func_src_after": "/*************************************************************************\n*\t\t\t\t\t\t\t\t\t *\n*\t YAP Prolog \t\t\t\t\t\t\t *\n*\t\t\t\t\t\t\t\t\t *\n*\tYap Prolog was developed at NCCUP - Universidade do Porto\t *\n*\t\t\t\t\t\t\t\t\t *\n* Copyright L.Damas, V.S.Costa and Universidade do Porto 1985-1997\t *\n*\t\t\t\t\t\t\t\t\t *\n**************************************************************************\n*\t\t\t\t\t\t\t\t\t *\n* File:\t\tprotect.yap\t\t\t\t\t\t *\n* Last rev:\t\t\t\t\t\t\t\t *\n* mods:\t\t\t\t\t\t\t\t\t *\n* comments:\tprotecting the system functions\t\t\t\t *\n*\t\t\t\t\t\t\t\t\t *\n*************************************************************************/\n\n:- system_module( '$_protect', [], ['$protect'/0]).\n/**\n * @file protect.yap\n * @addtogroup ProtectCore Freeze System Configuration\n * @ingroup YAPControl\n *\n * This protects current code from further changes\n *  and also makes it impossible for some predicates to be seen\n * in user-space.\n *\n * Algorithm:\n *  - fix system modules\n *  - fix system predicates\n *  - hide atoms with `$`\n */\n \n\nprolog:'$protect' :-\n    '$all_current_modules'(M),\n    ( sub_atom(M,0,1,_, '$') ; M= prolog; M= system ),\n    new_system_module( M ),    \n    fail.\n'$protect' :-\n    '$current_predicate'(Name,M,P,_),\n    '$is_system_module'(M),\n    functor(P,Name,Arity),\n    '$new_system_predicate'(Name,Arity,M),\n    sub_atom(Name,0,1,_, '$'),\n    functor(P,Name,Arity),\n%    hide_predicate'(M:P),\n    fail.\n'$protect' :-\n    current_atom(Name),", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14231, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "* 2016 Quality of Government Standard dataset 2016 - Time-Series\n* http://qog.pol.gu.se/data/datadownloads/qogstandarddata\n* Teorell, Jan, Stefan Dahlberg, Sören Holmberg, Bo Rothstein, Anna Khomenko & Richard Svensson. 2016. The Quality of Government Standard Dataset, version Jan16. University of Gothenburg: The Quality of Government Institute, http://www.qog.pol.gu.se doi:10.18157/QoGStdJan16\n\nlocal URL \"http://www.qogdata.pol.gu.se/data/qog_std_ts_jan16.dta\"\nlocal PREFIX \"qog\"\nlocal YEARVAR \"year\"\nlocal COUNTRYVAR \"ccode\"\nlocal MERGEWITH \"QOG\"\nlocal MERGEUSING \"Numeric\"\n\ntempfile merge\nprep_mergefile `MERGEWITH' `MERGEUSING' `merge'\n\n* If the file source file doesn't already exist then download and create it.\nuse_or_import_source `PREFIX' `URL'\n\n* Drop observations with empty variables to avoid merge conflicts\nds ccode cname year ccodealp cname_year ccodealp_year ccodecow ccodewb version, not\negen _tmp = rownonmiss(`r(varlist)'), s\ndrop if _tmp == 0\ndrop _tmp\nlabel data\n\nprefix `PREFIX'\nprefix_var_labels `PREFIX'\nmerge_ids `PREFIX' `YEARVAR' `COUNTRYVAR' `MERGEUSING' `merge'\n\n* Merge with the Dataset\nmerge_with_master `FILENAME'\n", "func_src_after": "* 2016 Quality of Government Standard dataset 2016 - Time-Series\n* http://qog.pol.gu.se/data/datadownloads/qogstandarddata\n* Teorell, Jan, Stefan Dahlberg, Sören Holmberg, Bo Rothstein, Anna Khomenko & Richard Svensson. 2016. The Quality of Government Standard Dataset, version Jan16. University of Gothenburg: The Quality of Government Institute, http://www.qog.pol.gu.se doi:10.18157/QoGStdJan16\n\nlocal URL \"http://www.qogdata.pol.gu.se/data/qog_std_ts_jan16.dta\"\nlocal PREFIX \"qog\"\nlocal YEARVAR \"year\"\nlocal COUNTRYVAR \"ccode\"\nlocal MERGEWITH \"QOG\"\nlocal MERGEUSING \"Numeric\"\n\ntempfile merge\nprep_mergefile `MERGEWITH' `MERGEUSING' `merge'\n\n* If the file source file doesn't already exist then download and create it.\nuse_or_import_source `PREFIX' `URL'\n\n* Drop observations with empty variables to avoid merge conflicts\nds ccode cname year ccodealp cname_year ccodealp_year ccodecow ccodewb version, not\negen _tmp = rownonmiss(`r(varlist)'), s\ndrop if _tmp == 0\ndrop _tmp\nlabel data\n\nprefix `PREFIX'\nprefix_var_labels `PREFIX'\nmerge_ids `PREFIX' `YEARVAR' `COUNTRYVAR' `MERGEUSING' `merge'\n\n* Merge with the Dataset\nmerge_with_master `FILENAME'\n", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14347, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/*!\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {google, drive_v3} from 'googleapis';\nimport {OAuth2Client} from 'google-auth-library';\nimport pLimit from 'p-limit';\nimport promiseRetry from 'promise-retry';\nimport {RETRY_OPTIONS} from '../config/config';\n\nconst drive = google.drive('v3');\n\n/**\n * Add permissions to the passed fileId\n */\nexport default function(\n  auth: OAuth2Client,\n  fileId: string,\n  permissions: drive_v3.Schema$Permission[]\n): Promise<void[]> {\n  const limit = pLimit(1);\n\n  return Promise.all(\n    permissions\n      .filter(permission => permission.role !== 'owner')\n      .map(permission =>\n        limit(() => addFilePermission(auth, fileId, permission))\n      )\n  );\n}\n\n/**\n * Wrapper around the actual function with exponential retries\n */\nfunction addFilePermission(\n  auth: OAuth2Client,\n  fileId: string,\n  permission: drive_v3.Schema$Permission", "func_src_after": "/*!\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {google, drive_v3} from 'googleapis';\nimport {OAuth2Client} from 'google-auth-library';\nimport pLimit from 'p-limit';\nimport promiseRetry from 'promise-retry';\nimport {RETRY_OPTIONS} from '../config/config';\n\nconst drive = google.drive('v3');\n\n/**\n * Add permissions to the passed fileId\n */\nexport default function(\n  auth: OAuth2Client,\n  fileId: string,\n  permissions: drive_v3.Schema$Permission[]\n): Promise<void[]> {\n  const limit = pLimit(1);\n\n  return Promise.all(\n    permissions\n      .filter(permission => permission.role !== 'owner')\n      .map(permission =>\n        limit(() => addFilePermission(auth, fileId, permission))\n      )\n  );\n}\n\n/**\n * Wrapper around the actual function with exponential retries\n */\nfunction addFilePermission(\n  auth: OAuth2Client,\n  fileId: string,\n  permission: drive_v3.Schema$Permission", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14348, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    \"HAUGHT\",\n    \"HATTER\",\n    \"HARTZOG\",\n    \"HARKEY\",\n    \"GRIMALDO\",\n    \"GOSHORN\",\n    \"GORMLEY\",\n    \"GLUCK\",\n    \"GILROY\",\n    \"GILLENWATER\",\n    \"GIFFIN\",\n    \"FOLKS\",\n    \"FLUKER\",\n    \"FEDER\",\n    \"EYRE\",\n    \"ESHELMAN\",\n    \"EAKINS\",\n    \"DRYER\",\n    \"DISNEY\",\n    \"DETWILER\",\n    \"DELROSARIO\",\n    \"DAVISSON\",\n    \"CELESTINE\",\n    \"CATALAN\",\n    \"CANNING\",\n    \"CALTON\",\n    \"BUSTER\",\n    \"BRAMMER\",\n    \"BOTELHO\",\n    \"BLAKNEY\",\n    \"BARTELL\",\n    \"AVERETT\",\n    \"ASKINS\",\n    \"AKER\",\n    \"ZAK\",\n    \"WORCESTER\",\n    \"WITMER\",\n    \"WISER\",\n    \"WINKELMAN\",\n    \"WIDMER\",\n    \"WHITTIER\",\n    \"WESTERN\",\n    \"WEITZEL\",\n    \"WARDELL\",\n    \"WAGERS\",\n    \"ULLMAN\",\n    \"TUPPER\",\n    \"TINGLEY\",\n    \"TILGHMAN\",\n    \"TALTON\",", "func_src_after": "    \"HAUGHT\",\n    \"HATTER\",\n    \"HARTZOG\",\n    \"HARKEY\",\n    \"GRIMALDO\",\n    \"GOSHORN\",\n    \"GORMLEY\",\n    \"GLUCK\",\n    \"GILROY\",\n    \"GILLENWATER\",\n    \"GIFFIN\",\n    \"FOLKS\",\n    \"FLUKER\",\n    \"FEDER\",\n    \"EYRE\",\n    \"ESHELMAN\",\n    \"EAKINS\",\n    \"DRYER\",\n    \"DISNEY\",\n    \"DETWILER\",\n    \"DELROSARIO\",\n    \"DAVISSON\",\n    \"CELESTINE\",\n    \"CATALAN\",\n    \"CANNING\",\n    \"CALTON\",\n    \"BUSTER\",\n    \"BRAMMER\",\n    \"BOTELHO\",\n    \"BLAKNEY\",\n    \"BARTELL\",\n    \"AVERETT\",\n    \"ASKINS\",\n    \"AKER\",\n    \"ZAK\",\n    \"WORCESTER\",\n    \"WITMER\",\n    \"WISER\",\n    \"WINKELMAN\",\n    \"WIDMER\",\n    \"WHITTIER\",\n    \"WESTERN\",\n    \"WEITZEL\",\n    \"WARDELL\",\n    \"WAGERS\",\n    \"ULLMAN\",\n    \"TUPPER\",\n    \"TINGLEY\",\n    \"TILGHMAN\",\n    \"TALTON\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14364, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "    \"BERNARD\",\n    \"JOYNER\",\n    \"STEIN\",\n    \"AGUIRRE\",\n    \"OSBORN\",\n    \"MERCER\",\n    \"BENDER\",\n    \"FRANCO\",\n    \"ROWLAND\",\n    \"SYKES\",\n    \"BENJAMIN\",\n    \"TRAVIS\",\n    \"PICKETT\",\n    \"CRANE\",\n    \"SEARS\",\n    \"MAYO\",\n    \"DUNLAP\",\n    \"HAYDEN\",\n    \"WILDER\",\n    \"MCKAY\",\n    \"COFFEY\",\n    \"MCCARTY\",\n    \"EWING\",\n    \"COOLEY\",\n    \"VAUGHAN\",\n    \"BONNER\",\n    \"COTTON\",\n    \"HOLDER\",\n    \"STARK\",\n    \"FERRELL\",\n    \"CANTRELL\",\n    \"FULTON\",\n    \"LYNN\",\n    \"LOTT\",\n    \"CALDERON\",\n    \"ROSA\",\n    \"POLLARD\",\n    \"HOOPER\",\n    \"BURCH\",\n    \"MULLEN\",\n    \"FRY\",\n    \"RIDDLE\",\n    \"LEVY\",\n    \"DAVID\",\n    \"DUKE\",\n    \"ODONNELL\",\n    \"GUY\",\n    \"MICHAEL\",\n    \"BRITT\",\n    \"FREDERICK\",", "func_src_after": "    \"BERNARD\",\n    \"JOYNER\",\n    \"STEIN\",\n    \"AGUIRRE\",\n    \"OSBORN\",\n    \"MERCER\",\n    \"BENDER\",\n    \"FRANCO\",\n    \"ROWLAND\",\n    \"SYKES\",\n    \"BENJAMIN\",\n    \"TRAVIS\",\n    \"PICKETT\",\n    \"CRANE\",\n    \"SEARS\",\n    \"MAYO\",\n    \"DUNLAP\",\n    \"HAYDEN\",\n    \"WILDER\",\n    \"MCKAY\",\n    \"COFFEY\",\n    \"MCCARTY\",\n    \"EWING\",\n    \"COOLEY\",\n    \"VAUGHAN\",\n    \"BONNER\",\n    \"COTTON\",\n    \"HOLDER\",\n    \"STARK\",\n    \"FERRELL\",\n    \"CANTRELL\",\n    \"FULTON\",\n    \"LYNN\",\n    \"LOTT\",\n    \"CALDERON\",\n    \"ROSA\",\n    \"POLLARD\",\n    \"HOOPER\",\n    \"BURCH\",\n    \"MULLEN\",\n    \"FRY\",\n    \"RIDDLE\",\n    \"LEVY\",\n    \"DAVID\",\n    \"DUKE\",\n    \"ODONNELL\",\n    \"GUY\",\n    \"MICHAEL\",\n    \"BRITT\",\n    \"FREDERICK\",", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14526, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "/**\n * @file Exigency\n * @author Jim Bulkowski <jim.b@paperelectron.com>\n * @project exigency\n * @license MIT {@link http://opensource.org/licenses/MIT}\n */\n\nimport {Exigency, FileStore, MemoryStore, PendingTask, TaskHandler} from \"../src\";\n\nlet taskHandler: TaskHandler = {\n  config: {\n    name: 'testTask',\n    initial: 'doWork',\n    retryOnError: true,\n    retryDelay: 1000,\n    delayMultiplier: 0.1\n  },\n  states: {\n    doWork: (State, Metadata) => {\n      State.count -= 1\n      return [{to: 'checkWork', wait: 200}, State]\n    },\n    checkWork: (State, Metadata) => {\n      if(State.count <= 0){\n        return [{to: 'done'}, State]\n      }\n      if(State.count === 1 && State.shouldThrow){\n        throw new Error('You done goofed')\n      }\n      return [{to: 'doWork'}, State]\n    }\n  }\n}\n\nlet taskData: PendingTask = {\n  metadata: {\n    name: 'testTask'\n  },\n  state: {\n    count: 5\n  }\n}\n\nlet faketask: PendingTask = {\n  metadata: {\n    name: 'fakeTask'\n  },\n  state: {\n    count: 5\n  }", "func_src_after": "/**\n * @file Exigency\n * @author Jim Bulkowski <<EMAIL>>\n * @project exigency\n * @license MIT {@link http://opensource.org/licenses/MIT}\n */\n\nimport {Exigency, FileStore, MemoryStore, PendingTask, TaskHandler} from \"../src\";\n\nlet taskHandler: TaskHandler = {\n  config: {\n    name: 'testTask',\n    initial: 'doWork',\n    retryOnError: true,\n    retryDelay: 1000,\n    delayMultiplier: 0.1\n  },\n  states: {\n    doWork: (State, Metadata) => {\n      State.count -= 1\n      return [{to: 'checkWork', wait: 200}, State]\n    },\n    checkWork: (State, Metadata) => {\n      if(State.count <= 0){\n        return [{to: 'done'}, State]\n      }\n      if(State.count === 1 && State.shouldThrow){\n        throw new Error('You done goofed')\n      }\n      return [{to: 'doWork'}, State]\n    }\n  }\n}\n\nlet taskData: PendingTask = {\n  metadata: {\n    name: 'testTask'\n  },\n  state: {\n    count: 5\n  }\n}\n\nlet faketask: PendingTask = {\n  metadata: {\n    name: 'fakeTask'\n  },\n  state: {\n    count: 5\n  }", "line_changes": {"deleted": [{"line_no": 3, "char_start": 22, "char_end": 73, "line": " * @author Jim Bulkowski <jim.b@paperelectron.com>\n"}], "added": [{"line_no": 4, "char_start": 22, "char_end": 57, "line": " * @author Jim Bulkowski <<EMAIL>>\n"}]}, "char_changes": {"deleted": [{"char_start": 22, "char_end": 73, "chars": " * @author Jim Bulkowski <jim.b@paperelectron.com>\n"}], "added": [{"char_start": 22, "char_end": 57, "chars": " * @author Jim Bulkowski <<EMAIL>>\n"}]}}
{"func_name": 14540, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "import { MigrationInterface, QueryRunner, Table } from \"typeorm\";\n\nexport class CriarClientes1644945200960 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.createTable(\n      new Table({\n        name: \"clientes\",\n        columns: [\n          {\n            name: \"id\",\n            type: \"bigint\",\n            isPrimary: true,\n            unsigned: true,\n          },\n          {\n            name: \"nome\",\n            type: \"varchar\",\n            length: \"64\",\n          },\n          {\n            name: \"celular\",\n            type: \"char\",\n            length: \"11\",\n          },\n          {\n            name: \"email\",\n            type: \"varchar\",\n            length: \"128\",\n          },\n          {\n            name: \"senha\",\n            type: \"char\",\n            length: \"60\",\n          },\n          {\n            name: \"cpf\",\n            type: \"char\",\n            length: \"11\",\n            isUnique: true,\n          },\n          {\n            name: \"cep\",\n            type: \"char\",\n            length: \"8\",\n          },\n          {\n            name: \"fk_cidades_id\",\n            type: \"bigint\",\n            unsigned: true,\n          },", "func_src_after": "import { MigrationInterface, QueryRunner, Table } from \"typeorm\";\n\nexport class CriarClientes1644945200960 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.createTable(\n      new Table({\n        name: \"clientes\",\n        columns: [\n          {\n            name: \"id\",\n            type: \"bigint\",\n            isPrimary: true,\n            unsigned: true,\n          },\n          {\n            name: \"nome\",\n            type: \"varchar\",\n            length: \"64\",\n          },\n          {\n            name: \"celular\",\n            type: \"char\",\n            length: \"11\",\n          },\n          {\n            name: \"email\",\n            type: \"varchar\",\n            length: \"128\",\n          },\n          {\n            name: \"senha\",\n            type: \"char\",\n            length: \"60\",\n          },\n          {\n            name: \"cpf\",\n            type: \"char\",\n            length: \"11\",\n            isUnique: true,\n          },\n          {\n            name: \"cep\",\n            type: \"char\",\n            length: \"8\",\n          },\n          {\n            name: \"fk_cidades_id\",\n            type: \"bigint\",\n            unsigned: true,\n          },", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 14627, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "        \"id\",\n        \"identities\",\n        \"mail\",\n        \"mailNickname\",\n        \"otherMails\",\n        \"surname\",\n        \"userPrincipalName\",\n        \"userType\",\n      ])\n      .get();\n\n    return res;\n  } catch (err) {\n    logError(\"Error while looking up user in graph: \" + JSON.stringify(err));\n    return null;\n  }\n};\n\nconst emailFromGraphResponse = (graphResponse: any): string | undefined => {\n  const identities: any[] = graphResponse.identities;\n  const emailAddressIdentity = identities.find(\n    (ident) => ident.signInType === \"emailAddress\"\n  );\n  if (emailAddressIdentity) {\n    return emailAddressIdentity.issuerAssignedId;\n  }\n\n  const otherMails = graphResponse.otherMails;\n  if (otherMails) {\n    return otherMails[0];\n  } else {\n    return undefined;\n  }\n};\n\nconst identityProviderFromGraphResponse = (graphResponse: any): string => {\n  const identities: any[] = graphResponse.identities;\n  const federatedIdentity = identities.find(\n    (ident) => ident.signInType === \"federated\"\n  );\n  if (federatedIdentity) {\n    return federatedIdentity.issuer;\n  } else {\n    return \"email\";\n  }\n};\n\nconst displayNameFromGraphResponse = (graphResponse: any): string => {\n  const graphDisplayName: string = graphResponse.displayName;\n  if (graphDisplayName) {", "func_src_after": "        \"id\",\n        \"identities\",\n        \"mail\",\n        \"mailNickname\",\n        \"otherMails\",\n        \"surname\",\n        \"userPrincipalName\",\n        \"userType\",\n      ])\n      .get();\n\n    return res;\n  } catch (err) {\n    logError(\"Error while looking up user in graph: \" + JSON.stringify(err));\n    return null;\n  }\n};\n\nconst emailFromGraphResponse = (graphResponse: any): string | undefined => {\n  const identities: any[] = graphResponse.identities;\n  const emailAddressIdentity = identities.find(\n    (ident) => ident.signInType === \"emailAddress\"\n  );\n  if (emailAddressIdentity) {\n    return emailAddressIdentity.issuerAssignedId;\n  }\n\n  const otherMails = graphResponse.otherMails;\n  if (otherMails) {\n    return otherMails[0];\n  } else {\n    return undefined;\n  }\n};\n\nconst identityProviderFromGraphResponse = (graphResponse: any): string => {\n  const identities: any[] = graphResponse.identities;\n  const federatedIdentity = identities.find(\n    (ident) => ident.signInType === \"federated\"\n  );\n  if (federatedIdentity) {\n    return federatedIdentity.issuer;\n  } else {\n    return \"email\";\n  }\n};\n\nconst displayNameFromGraphResponse = (graphResponse: any): string => {\n  const graphDisplayName: string = graphResponse.displayName;\n  if (graphDisplayName) {", "line_changes": {"deleted": [], "added": []}, "char_changes": {"deleted": [], "added": []}}
{"func_name": 5698, "bug_type": "EMAIL_AND_IP", "vul_type": "EMAIL_AND_IP", "func_src_before": "-- phpMyAdmin SQL Dump\n-- version 5.0.1\n-- https://www.phpmyadmin.net/\n--\n-- Host: 127.0.0.1\n-- Waktu pembuatan: 04 Feb 2021 pada 09.12\n-- Versi server: 10.4.11-MariaDB\n-- Versi PHP: 7.4.3\n\nSET SQL_MODE = \"NO_AUTO_VALUE_ON_ZERO\";\nSET AUTOCOMMIT = 0;\nSTART TRANSACTION;\nSET time_zone = \"+00:00\";\n\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!40101 SET NAMES utf8mb4 */;\n\n--\n-- Database: `kerjaku-nonpns`\n--\n\n-- --------------------------------------------------------\n\n--\n-- Struktur dari tabel `aktifitas`\n--\n\nCREATE TABLE `aktifitas` (\n  `id_aktifitas` int(11) NOT NULL,\n  `tanggal` date NOT NULL,\n  `uraian_aktifitas` varchar(255) NOT NULL,\n  `kuantitas/output` varchar(255) NOT NULL,\n  `waktu(menit)` int(100) NOT NULL,\n  `catatan` varchar(250) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n-- --------------------------------------------------------\n\n--\n-- Struktur dari tabel `tbl_konfigurasi`\n--\n\nCREATE TABLE `tbl_konfigurasi` (\n  `id_konfigurasi` int(11) NOT NULL,\n  `nama_website` varchar(225) NOT NULL,\n  `logo` varchar(225) NOT NULL,\n  `favicon` varchar(225) NOT NULL,", "func_src_after": "-- phpMyAdmin SQL Dump\n-- version 5.0.1\n-- https://www.phpmyadmin.net/\n--\n-- Host: <IP-Address>\n-- Waktu pembuatan: 04 Feb 2021 pada 09.12\n-- Versi server: 10.4.11-MariaDB\n-- Versi PHP: 7.4.3\n\nSET SQL_MODE = \"NO_AUTO_VALUE_ON_ZERO\";\nSET AUTOCOMMIT = 0;\nSTART TRANSACTION;\nSET time_zone = \"+00:00\";\n\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!40101 SET NAMES utf8mb4 */;\n\n--\n-- Database: `kerjaku-nonpns`\n--\n\n-- --------------------------------------------------------\n\n--\n-- Struktur dari tabel `aktifitas`\n--\n\nCREATE TABLE `aktifitas` (\n  `id_aktifitas` int(11) NOT NULL,\n  `tanggal` date NOT NULL,\n  `uraian_aktifitas` varchar(255) NOT NULL,\n  `kuantitas/output` varchar(255) NOT NULL,\n  `waktu(menit)` int(100) NOT NULL,\n  `catatan` varchar(250) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n-- --------------------------------------------------------\n\n--\n-- Struktur dari tabel `tbl_konfigurasi`\n--\n\nCREATE TABLE `tbl_konfigurasi` (\n  `id_konfigurasi` int(11) NOT NULL,\n  `nama_website` varchar(225) NOT NULL,\n  `logo` varchar(225) NOT NULL,\n  `favicon` varchar(225) NOT NULL,", "line_changes": {"deleted": [{"line_no": 5, "char_start": 74, "char_end": 93, "line": "-- Host: 127.0.0.1\n"}], "added": [{"line_no": 6, "char_start": 74, "char_end": 96, "line": "-- Host: <IP-Address>\n"}]}, "char_changes": {"deleted": [{"char_start": 74, "char_end": 93, "chars": "-- Host: 127.0.0.1\n"}], "added": [{"char_start": 74, "char_end": 96, "chars": "-- Host: <IP-Address>\n"}]}}
